         TITLE 'IKJEFA42  --  LIST FORMATTING ROUTINE                  *00001000
                        '                                               00002000
IKJEFA42 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA42  78.174'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*         CTABPTR = R1;               /* SET BASE PTR FOR THE LIST 0042 00022000
*                                        CONTROL TABLE               */ 00023000
         LR    CTABPTR,R1                                          0042 00024000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REGISTER  */ 00025000
*         /* ASSIGN GENERATED PARAMETER BLOCKS TO DYNAMIC STORAGE    */ 00026000
*         CPLS(1:MCPLNG) = MCPLS(1:MCPLNG);                        0044 00027000
         L     @07,MCPLNG                                          0044 00028000
         BCTR  @07,0                                               0044 00029000
         EX    @07,@SM00496                                        0044 00030000
*         /* BUILD THE PARAMETER LIST FOR 'PUTLINE'                  */ 00031000
*         IOPLPTR = ADDR(PLPLIST);    /* POINT TO PUTLILE PB         */ 00032000
         LA    IOPLPTR,PLPLIST                                     0045 00033000
*         PLPLIST(1:12) = ACCTPL(1:12);/* ADDR OF THE UPT, ECT & ECB */ 00034000
         L     @07,ACCTPLP(,CTABPTR)                               0046 00035000
         MVC   PLPLIST(12),ACCTPL(@07)                             0046 00036000
*         IOPLIOPB = ADDR(PBLOK);     /* ADDR OF THE PARM BLOCK    0047 00037000
*                                        THE PUTLINE SERVICE RTNE    */ 00038000
         LA    @07,PBLOK                                           0047 00039000
         ST    @07,IOPLIOPB(,IOPLPTR)                              0047 00040000
*         OUTAPTR = ADDR(OUTPAREA);   /* SET PTR TO START OF OUTPUT     00041000
*                                        LINE                        */ 00042000
         LA    OUTAPTR,OUTPAREA                                    0048 00043000
*         /* TRANSFER PTRS FROM CONTROL TABLE TO NEW VARIABLES.      */ 00044000
*         ACIOPTR = RWPLADR;          /* SET BASE PTR FOR R/D PLIST  */ 00045000
         L     @07,RWPLADR(,CTABPTR)                               0049 00046000
         ST    @07,ACIOPTR                                         0049 00047000
*         /* SET INITIAL VALUES.                                     */ 00048000
*         OPASIZE = 1000;             /* STARTING-SIZE OF THE OPAREA */ 00049000
         LA    OPASIZE,1000                                        0050 00050000
*         INDIC = '0'B;               /* INITIALIZE CONTROL FLAGS    */ 00051000
         MVI   INDIC+1,X'00'                                       0051 00052000
         MVI   INDIC,B'00000000'                                   0051 00053000
*         LEVL = 0;                   /* SET LEVEL TO 0: THIS IS THE    00054000
*                                        FIRST USERID TO BE PROCESSED   00055000
*                                        FOR THIS COMMAND            */ 00056000
         SLR   LEVL,LEVL                                           0052 00057000
*         MSGNO = 0;                  /* INDICATE NORMAL COMPLETION  */ 00058000
         SLR   MSGNO,MSGNO                                         0053 00059000
*         /* GENERATE LABELS FOR THE DCB BLOCK                       */ 00060000
*         RFY R2 RSTD;                                             0054 00061000
*         GEN (USING IHADCB,R2)                                    0055 00062000
*           REFS(R2);                                              0055 00063000
         USING IHADCB,R2                                                00064000
*         /* PREPARE TO OPEN THE BPAM DCB.                           */ 00065000
*         R2 = ADDR(UADBLOC);         /* SET BASE PTR FOR LABLES     */ 00066000
         LA    R2,UADBLOC                                          0056 00067000
*         GEN (OPEN  ((R2),),MF=(E,OPENBLK))                       0057 00068000
*           REFS(R2,OPENBLK);                                      0057 00069000
         OPEN  ((R2),),MF=(E,OPENBLK)                                   00070000
*         /* IF OPEN WAS NOT SUCCESSFUL, SET THE ERROR MSG NUMBER    */ 00071000
*         /* AND RETURN TO IKJEFA40.                                 */ 00072000
*         IF DCBOFLAG = '0'B          /* WAS 'OPEN' SUCCESSFUL?      */ 00073000
*           THEN                      /* NO,                         */ 00074000
         TM    DCBOFLAG,B'00010000'                                0058 00075000
         BNZ   @RF00058                                            0058 00076000
*             DO;                                                  0059 00077000
*               MSGNO = 8;            /* SET MSG NUMBER              */ 00078000
         LA    MSGNO,8                                             0060 00079000
*               GOTO CLEANUP;         /* GO CLEAN UP & RETURN        */ 00080000
         B     CLEANUP                                             0061 00081000
*             END;                                                 0062 00082000
*         ACIODCBA = R2;              /* POINT TO BPAM DCB IN ACIOPAR*/ 00083000
@RF00058 L     @09,ACIOPTR                                         0063 00084000
         STCM  R2,7,ACIODCBA(@09)                                  0063 00085000
*         RFY R2 UNRSTD;                                           0064 00086000
*         /***********************************************************/ 00087000
*         /* DOES THE COMMAND NODELIST SPECIFY A USERID OR AN        */ 00088000
*         /* ASTERISK? IF USERID, GET THE SPECIFIED USERID TREE BY   */ 00089000
*         /* CALLING THE 'READ' ROUTINE (IKJEFA51). IF ASTERISK THE  */ 00090000
*         /* READ RTNE WILL PROCESS THE DIRECTORY AND READ ONE USERID * 00091000
*         /* TREE AT A TIME INTO A TREE BUFFER.                      */ 00092000
*         /***********************************************************/ 00093000
*         IF USRID(1) ^= '*'          /* IS A USERID SPECIFIED IN  0065 00094000
*                                        THE NODELIST?               */ 00095000
*           THEN                      /* YES                         */ 00096000
         L     @07,NODELADR(,CTABPTR)                              0065 00097000
         CLI   USRID(@07),C'*'                                     0065 00098000
         BE    @RF00065                                            0065 00099000
*             DO;                                                  0066 00100000
*             USIND = '0'B;           /* SET INDICATOR TO 0: NO MORE    00101000
*                                        USERIDS TO BE PROCESSED     */ 00102000
         NI    USIND,B'01111111'                                   0067 00103000
*             ACIOMPTR = ADDR(USRID); /* SET PTR TO THE USERID       */ 00104000
         LA    @15,USRID(,@07)                                     0068 00105000
         ST    @15,ACIOMPTR(,@09)                                  0068 00106000
*             USRID(USRLEN+1) = '0';  /* SET INDEX LEVEL             */ 00107000
         SLR   @09,@09                                             0069 00108000
         IC    @09,USRLEN(,@07)                                    0069 00109000
         ALR   @07,@09                                             0069 00110000
         MVI   USRID(@07),C'0'                                     0069 00111000
*             GOTO READ;              /* GET THE SPECIFIED USERID  0070 00112000
*                                        TREE FROM THE UADS          */ 00113000
         B     READ                                                0070 00114000
*             END;                                                 0071 00115000
*         /* THE NODELIST USERID = '*', THEN ACIOMPTR IN THE PARMLIST*/ 00116000
*         /* POINTS TO A MEMBER NAME IN THE DIRECTORY WORK AREA.     */ 00117000
*         ACIOMPTR = 0;               /* SET MEMBER NAME PTR TO 0    */ 00118000
@RF00065 L     @09,ACIOPTR                                         0072 00119000
         SLR   @07,@07                                             0072 00120000
         ST    @07,ACIOMPTR(,@09)                                  0072 00121000
*         USIND = '1'B;               /* MORE USERS TO BE PROCESSED  */ 00122000
         OI    USIND,B'10000000'                                   0073 00123000
*         ACIOFL03 = '1'B;            /* DIRECTORY READ REQUESTED    */ 00124000
         OI    ACIOFL03(@09),B'00100000'                           0074 00125000
*         GOTO READ;                  /* READ THE DIRECTORY & FIRST     00126000
*                                        USERID                      */ 00127000
         B     READ                                                0075 00128000
*MORUS:   /* BEFORE REQUESTING A USERID TREE, CHECK WHETHER THE      */ 00129000
*         /* BUFFER FOR A PREVIOUSLY USED TREE HAS TO BE FREED.      */ 00130000
*         IF FREEFLG = '1'B                                        0076 00131000
*           THEN                      /* YES, BUFFER MUST BE FREED   */ 00132000
MORUS    TM    FREEFLG,B'00000100'                                 0076 00133000
         BNO   @RF00076                                            0076 00134000
*             DO;                                                  0077 00135000
*               RFY R1 RSTD;          /* RESTRICT PARAMETER REG      */ 00136000
*               R1 = ADDR(ACIOPARM);  /* PTR TO READ/WRITE PARMLIST  */ 00137000
         L     R1,ACIOPTR                                          0079 00138000
*               /* PASS CONTROL TO THE WRITE RTNE TO DO THE FREEMAIN */ 00139000
*               CALL IKJEFA52;                                     0080 00140000
         L     @15,@CV00143                                        0080 00141000
         BALR  @14,@15                                             0080 00142000
*               RFY R1 UNRSTD;        /* RELEASE PARAMETER REG       */ 00143000
*               FREEFLG = '0'B;       /* SET FLAG TO 0- BUFFER FREED */ 00144000
         NI    FREEFLG,B'11111011'                                 0082 00145000
*             END;                                                 0083 00146000
*         /* CHECK FOR MORE USERIDS TO BE PROCESSED.                 */ 00147000
*         IF USIND = '0'B                                          0084 00148000
*           THEN                      /* ARE THERE MORE USERIDS?     */ 00149000
@RF00076 TM    USIND,B'10000000'                                   0084 00150000
         BZ    @RT00084                                            0084 00151000
*             GOTO DATACHK;           /* NO                          */ 00152000
*         IF OPASIZE < 12             /* ENOUGH SPACE?               */ 00153000
*           THEN                      /* NO,                         */ 00154000
         C     OPASIZE,@CF00236                                    0086 00155000
         BNL   @RF00086                                            0086 00156000
*             CALL PUTDATA;           /* GO TO PUT OUT THE LAST DATA */ 00157000
         BAL   @14,PUTDATA                                         0087 00158000
*         IF NEXTUSER = '1'B          /* NEW USER PROCESSING @ZA26793*/ 00159000
*           THEN                      /* IF YES                      */ 00160000
@RF00086 TM    NEXTUSER,B'00100000'                                0088 00161000
         BNO   @RF00088                                            0088 00162000
*             DO;                     /* WRITE BLANK LINE SEPERATOR  */ 00163000
*             NEXTUSER = '0'B;        /* RESET FLG           @ZA26793*/ 00164000
         NI    NEXTUSER,B'11011111'                                0090 00165000
*             USIDDATA(9) = ' ';      /* BLANK OUT FIRST CHARACTER   */ 00166000
         MVI   USIDDATA+8(OUTAPTR),C' '                            0091 00167000
*             NEXTLN1 = OUTAPTR+12;   /* PTR TO THE NEXT OUTPUT LINE */ 00168000
         LA    @09,12                                              0092 00169000
         LR    @07,OUTAPTR                                         0092 00170000
         ALR   @07,@09                                             0092 00171000
         ST    @07,NEXTLN1(,OUTAPTR)                               0092 00172000
*             USLNL1 = 5;             /* LENGTH OF THIS LINE         */ 00173000
         MVC   USLNL1(2,OUTAPTR),@CH00174                          0093 00174000
*             USBYTE1 = 0;            /* REQUIRED BY 'PUTLINE'       */ 00175000
         SLR   @07,@07                                             0094 00176000
         STH   @07,USBYTE1(,OUTAPTR)                               0094 00177000
*             OPASIZE = OPASIZE-12;   /* SUBTRACT THE SPACE USED     */ 00178000
         SLR   OPASIZE,@09                                         0095 00179000
*             OUTAPTR = OUTAPTR+12;   /* INCREMENT THE ADDRESS OF THE*/ 00180000
         ALR   OUTAPTR,@09                                         0096 00181000
*             END;                    /* OUTPUT BUFFER               */ 00182000
*READ:    /* CHECK WHETHER THE ECB WAS POSTED (ATTENTION INTERRUPT)  */ 00183000
*         IF ATTENTN = '1'B                                        0098 00184000
*           THEN                      /* YES,                        */ 00185000
@RF00088 DS    0H                                                  0098 00186000
READ     L     @09,ACCTPLP(,CTABPTR)                               0098 00187000
         L     @09,ACCTECBP(,@09)                                  0098 00188000
         TM    ATTENTN(@09),B'01000000'                            0098 00189000
         BO    @RT00098                                            0098 00190000
*             GOTO CLEANUP;           /* GO CLEAN UP & RETURN        */ 00191000
*         /* PREPARE TO CALL THE READ ROUTINE                        */ 00192000
*         RFY R1 RSTD;                /* RESTRICT PARAMETER REG      */ 00193000
*         R1 = ADDR(ACIOPARM);        /* 'READ' EXPECTS THE ADDRESS     00194000
*                                        OF THE PARMLIST IN REG1     */ 00195000
         L     R1,ACIOPTR                                          0101 00196000
*         CALL  IKJEFA51;                                          0102 00197000
         L     @15,@CV00142                                        0102 00198000
         BALR  @14,@15                                             0102 00199000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 00200000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 00201000
*         RTNCODE = R15;              /* ASSIGN THE RETURN CODE      */ 00202000
         LR    RTNCODE,R15                                         0105 00203000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00204000
*         IF USIND = '1'B &           /* IF USERID IS '*' AND        */ 00205000
*           ACIOLINK ^= 0             /*   ACIOLINK HAS BEEN SET     */ 00206000
*           THEN                                                   0107 00207000
         TM    USIND,B'10000000'                                   0107 00208000
         BNO   @RF00107                                            0107 00209000
         L     @09,ACIOPTR                                         0107 00210000
         L     @09,ACIOLINK(,@09)                                  0107 00211000
         LTR   @09,@09                                             0107 00212000
         BZ    @RF00107                                            0107 00213000
*             DO;                                                  0108 00214000
*             USRID = MEMNAME;        /* GET NAME FROM BLDL LIST     */ 00215000
         L     @07,NODELADR(,CTABPTR)                              0109 00216000
         MVC   USRID(8,@07),MEMNAME(@09)                           0109 00217000
*             USRLEN = 8;             /* GET MAXIMUM LENGTH OF USERID*/ 00218000
         MVI   USRLEN(@07),X'08'                                   0110 00219000
*             DO WHILE USRID(USRLEN) = ' '; /* IS CHAR A BLANK       */ 00220000
         B     @DE00111                                            0111 00221000
@DL00111 DS    0H                                                  0112 00222000
*               USRLEN = USRLEN-1;    /* DECREMENT USERID LENGTH     */ 00223000
         L     @09,NODELADR(,CTABPTR)                              0112 00224000
         SLR   @07,@07                                             0112 00225000
         IC    @07,USRLEN(,@09)                                    0112 00226000
         BCTR  @07,0                                               0112 00227000
         STC   @07,USRLEN(,@09)                                    0112 00228000
*               END;                                               0113 00229000
@DE00111 L     @09,NODELADR(,CTABPTR)                              0113 00230000
         SLR   @07,@07                                             0113 00231000
         IC    @07,USRLEN(,@09)                                    0113 00232000
         ST    @07,@TF00001                                        0113 00233000
         ALR   @07,@09                                             0113 00234000
         CLI   USRID-1(@07),C' '                                   0113 00235000
         BE    @DL00111                                            0113 00236000
*             USRLEN = USRLEN-1;      /* DECREMENT FOR SEQ. CHAR     */ 00237000
         L     @07,@TF00001                                        0114 00238000
         BCTR  @07,0                                               0114 00239000
         STC   @07,USRLEN(,@09)                                    0114 00240000
*             END;                                                 0115 00241000
*         /* CHECK THE READ RETURN CODE.                             */ 00242000
*         IF RTNCODE = 0              /* WAS READ SUCCESSFUL?        */ 00243000
*           THEN                      /* YES,                        */ 00244000
@RF00107 LTR   RTNCODE,RTNCODE                                     0116 00245000
         BZ    @RT00116                                            0116 00246000
*             GOTO READOK;            /* CONTINUE                    */ 00247000
*         IF RTNCODE = 4              /* SPECIFIED USERID NOT FOUND? */ 00248000
*          & USIND = '0'B             /* AND USERID WAS SPECIFIED    */ 00249000
*           THEN                      /* YES,                        */ 00250000
         LA    @09,4                                               0118 00251000
         CR    RTNCODE,@09                                         0118 00252000
         BNE   @RF00118                                            0118 00253000
         TM    USIND,B'10000000'                                   0118 00254000
         BNZ   @RF00118                                            0118 00255000
*             DO;                                                  0119 00256000
*               MSGNO = 4;            /* SET MSG NUMBER              */ 00257000
         LR    MSGNO,@09                                           0120 00258000
*               GOTO CLEANUP;         /* GO CLEAN UP & RETURN        */ 00259000
         B     CLEANUP                                             0121 00260000
*             END;                                                 0122 00261000
*         IF RTNCODE = 8              /* BLDL I/O ERROR?             */ 00262000
*           THEN                      /* YES,                        */ 00263000
@RF00118 C     RTNCODE,@CF00040                                    0123 00264000
         BNE   @RF00123                                            0123 00265000
*             DO;                                                  0124 00266000
*               MSGNO = 9;            /* SET MSG NUMBER              */ 00267000
         LA    MSGNO,9                                             0125 00268000
*               GOTO CLEANUP;         /* GO CLEAN UP & RETURN        */ 00269000
         B     CLEANUP                                             0126 00270000
*             END;                                                 0127 00271000
*         IF RTNCODE = 12             /* NOT ENOUGH MAIN STORAGE?    */ 00272000
*           THEN                      /* YES,                        */ 00273000
@RF00123 C     RTNCODE,@CF00236                                    0128 00274000
         BNE   @RF00128                                            0128 00275000
*             DO;                                                  0129 00276000
*             /* IF NODELIST USERID IS ASTERISK, THEN ISSUE THE MSG  */ 00277000
*             /* FOR THIS USERID & CONTINUE PROCESSING. OTHERWISE,   */ 00278000
*             /* SET THE ERROR MSG NUMBER & RETURN.                  */ 00279000
*             IF USIND = '1'B         /* WAS USERID '*'?             */ 00280000
*              & ACIOLINK ^= 0        /* AND BLDL IS VALID           */ 00281000
*               THEN                  /* YES,                        */ 00282000
         TM    USIND,B'10000000'                                   0130 00283000
         BNO   @RF00130                                            0130 00284000
         L     @07,ACIOPTR                                         0130 00285000
         L     @07,ACIOLINK(,@07)                                  0130 00286000
         LTR   @07,@07                                             0130 00287000
         BNZ   @RT00130                                            0130 00288000
*                 GOTO MPREP;         /* GO CONSTRUCT THE MSG        */ 00289000
*               ELSE                  /* NO,                         */ 00290000
*                 MSGNO = 2;          /* SET THE ERROR MSG NUMBER    */ 00291000
@RF00130 LA    MSGNO,2                                             0132 00292000
*             GOTO CLEANUP;           /* GO CLEAN UP & RETURN        */ 00293000
         B     CLEANUP                                             0133 00294000
*             END;                                                 0134 00295000
*         IF RTNCODE = 24             /* END OF THE DIRECTORY?       */ 00296000
*           THEN                      /* YES,                        */ 00297000
@RF00128 C     RTNCODE,@CF00077                                    0135 00298000
         BE    @RT00135                                            0135 00299000
*             GOTO DATACHK;           /* PUT OUT ANY REMAINING DATA  */ 00300000
*         IF RTNCODE = 20             /* I/O ERROR WITH MSG          */ 00301000
*           THEN                      /* YES,                        */ 00302000
         LA    @04,20                                              0137 00303000
         CR    RTNCODE,@04                                         0137 00304000
         BNE   @RF00137                                            0137 00305000
*             MSGNO = 20;             /* SET ERROR MSG NUMBER        */ 00306000
         LR    MSGNO,@04                                           0138 00307000
*           ELSE                      /* NO, THEREFORE I/O ERROR     */ 00308000
*             MSGNO = 14;             /* SET ERROR MSG NUMBER        */ 00309000
         B     @RC00137                                            0139 00310000
@RF00137 LA    MSGNO,14                                            0139 00311000
*         GOTO CLEANUP;               /* GO CLEAN UP & RETURN        */ 00312000
         B     CLEANUP                                             0140 00313000
*READOK:  /* A USERID TREE IS NOW IN WORKING STORAGE.                */ 00314000
*         NOPWDFLG = '0'B;            /* INITIALIZE PWD SUPPORT FLG  */ 00315000
READOK   DS    0H                                                  0142 00316000
*         NOACTFLG = '0'B;            /* INIT ACCTNMBR SUPPORT FLAG  */ 00317000
*         FREEFLG = '1'B;             /* TREE BUFFER MUST BE FREED   */ 00318000
         OI    FREEFLG,B'00000100'                                 0143 00319000
         NI    NOPWDFLG,B'11111100'                                0143 00320000
*         HEDBPTR = ACIOBUFR;         /* ADDR OF THE BUFFER INTO WHICH  00321000
*                                        THE USERID TREE WAS READ    */ 00322000
         L     @07,ACIOPTR                                         0144 00323000
         L     HEDBPTR,ACIOBUFR-1(,@07)                            0144 00324000
         LA    HEDBPTR,0(,HEDBPTR)                                 0144 00325000
*         UPTPTR = HEDBPTR+UADSUPTP;  /* REFERENCE THE CURRENT UPT   */ 00326000
         LR    @07,HEDBPTR                                         0145 00327000
         AL    @07,UADSUPTP(,HEDBPTR)                              0145 00328000
         ST    @07,UPTPTR                                          0145 00329000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF 1ST PWORD OFFSET BLOCK  */ 00330000
         LR    DPOBPTR,HEDBPTR                                     0146 00331000
         AL    DPOBPTR,UADSPWD1(,HEDBPTR)                          0146 00332000
*         LEVL = 1;                   /* FORMATTING WILL START AT THE   00333000
*                                        USERID LEVEL                */ 00334000
         LA    LEVL,1                                              0147 00335000
*         /* DOES THE LIST NODELIST SPECIFY A PASSWORD OR AN         */ 00336000
*         /* ASTERISK? IF ASTERISK, REFERENCE THE FIRST PASSWORD IN  */ 00337000
*         /* THE LATERAL CHAIN. IF PASSWORD, GO TO THE PASSWORD      */ 00338000
*         /* SEARCH LOOP.                                            */ 00339000
*         IF PASSWD(1) ^= '*'         /* IS A PASSWORD SPECIFIED IN     00340000
*                                        THE NODELIST?               */ 00341000
*           THEN                      /* YES                         */ 00342000
         L     @07,NODELADR(,CTABPTR)                              0148 00343000
         CLI   PASSWD(@07),C'*'                                    0148 00344000
         BE    @RF00148                                            0148 00345000
*             /* IF PASSWORDS ARE NOT SUPPORTED, THEN THE COMMAND    */ 00346000
*             /* IS INVALID FOR THIS USERID.                         */ 00347000
*             IF UADSPDAT = 0                                      0149 00348000
*               THEN                  /* CMMD INVALID FOR THIS USER  */ 00349000
         L     @07,UADSPDAT(,DPOBPTR)                              0149 00350000
         LTR   @07,@07                                             0149 00351000
         BZ    @RT00149                                            0149 00352000
*                 GOTO MORUS;         /* CHECK FOR MORE USERS        */ 00353000
*               ELSE                  /* PASSWDS ARE SUPPORTED       */ 00354000
*                 GOTO PWSRCH;        /* SEARCH THE LATERAL CHAIN FOR   00355000
*                                        THIS PASSWORD               */ 00356000
         B     PWSRCH                                              0151 00357000
*         /* AN ASTERISK WAS SPECIFIED IN THE PASSWORD POSITION.     */ 00358000
*         /* IF THE PASSWORD LEVEL IS NOT SUPPORTED, THE OFFSET TO   */ 00359000
*         /* THE FIRST DATA FIELD WILL BE ZERO.                      */ 00360000
*         IF UADSPDAT = 0                                          0152 00361000
*           THEN                      /* PWD LEVEL NOT SUPPORTED     */ 00362000
@RF00148 L     @07,UADSPDAT(,DPOBPTR)                              0152 00363000
         LTR   @07,@07                                             0152 00364000
         BNZ   @RF00152                                            0152 00365000
*             DO;                                                  0153 00366000
*               NOPWDFLG = '1'B;      /* SET NO-SUPPORT FLAG         */ 00367000
*               PWIND = '0'B;         /* NO MORE PASSWORDS           */ 00368000
         OI    NOPWDFLG,B'00000010'                                0155 00369000
         NI    PWIND,B'10111111'                                   0155 00370000
*               GOTO PWFOUND;         /* GO TO THE ACCTNMBR LEVEL    */ 00371000
         B     PWFOUND                                             0156 00372000
*             END;                                                 0157 00373000
*PWLEVL:  /* AN ASTERISK WAS SPECIFIED IN THE PASSWORD POSITION OF   */ 00374000
*         /* THE NODELIST. CHECK THE PTR TO THE NEXT OFFSET BLOCK    */ 00375000
*         /* AND SET THE PASSWORD INDICATOR (PWIND).                 */ 00376000
*         /* IS THIS THE LAST PASSWORD UNDER THIS USERID?            */ 00377000
*         IF UADSPNEX = 0                                          0158 00378000
*           THEN                      /* YES, END OF LATERAL CHAIN   */ 00379000
@RF00152 DS    0H                                                  0158 00380000
PWLEVL   L     @07,UADSPNEX-1(,DPOBPTR)                            0158 00381000
         LA    @07,0(,@07)                                         0158 00382000
         LTR   @07,@07                                             0158 00383000
         BNZ   @RF00158                                            0158 00384000
*             PWIND = '0'B;           /* SET INDICATOR TO 0: NO MORE    00385000
*                                        PASSWORDS IN THIS CHAIN     */ 00386000
         NI    PWIND,B'10111111'                                   0159 00387000
*           ELSE                      /* NO, THERE ARE MORE PASSWRDS */ 00388000
*             DO;                                                  0160 00389000
         B     @RC00158                                            0160 00390000
@RF00158 DS    0H                                                  0161 00391000
*               PWIND = '1'B;         /* SET INDICATOR TO 1: ADDITIO-   00392000
*                                        NAL PASSWORDS IN THIS CHAIN */ 00393000
         OI    PWIND,B'01000000'                                   0161 00394000
*               PWDBROTH =                                         0162 00395000
*                 HEDBPTR+UADSPNEX;   /* SET PTR TO NEXT PASSWORD  0162 00396000
*                                        OFFSET BLOCK IN THIS CHAIN  */ 00397000
         LR    @07,HEDBPTR                                         0162 00398000
         L     @15,UADSPNEX-1(,DPOBPTR)                            0162 00399000
         LA    @15,0(,@15)                                         0162 00400000
         ALR   @07,@15                                             0162 00401000
         ST    @07,PWDBROTH                                        0162 00402000
*             END;                                                 0163 00403000
*         UADSPPTR = HEDBPTR+UADSPDAT;/* REF PASSWORD DATA BLOCK     */ 00404000
*                                                                  0164 00405000
@RC00158 LR    @07,HEDBPTR                                         0164 00406000
         AL    @07,UADSPDAT(,DPOBPTR)                              0164 00407000
         ST    @07,UADSPPTR                                        0164 00408000
*         /* CHECK THE LEVEL AT WHICH DATA FORMATTING IS TO BE CON-  */ 00409000
*         /* TINUED. IF IT IS GREATER THAN 2 (PASSWORD LEVEL), IT    */ 00410000
*         /* MUST BE RESET TO 2 AT THIS POINT.                       */ 00411000
*         IF LEVL > 2                 /* IS LEVL > 2 (ACCTNMBR OR  0165 00412000
*                                        PROCNAME)?                  */ 00413000
*           THEN                      /* YES, RESET IT TO 2, INDI-   */ 00414000
         LA    @07,2                                               0165 00415000
         CR    LEVL,@07                                            0165 00416000
         BNH   @RF00165                                            0165 00417000
*             LEVL = 2;               /* ..CATING PASSWORD LEVEL     */ 00418000
         LR    LEVL,@07                                            0166 00419000
*PWFOUND: /* REFERENCE 1ST ACCTNMBR OBLK UNDER CURRENT PASSWORD.     */ 00420000
*         DNOBPTR = HEDBPTR+UADSPSUB;                              0167 00421000
@RF00165 DS    0H                                                  0167 00422000
PWFOUND  LR    DNOBPTR,HEDBPTR                                     0167 00423000
         AL    DNOBPTR,UADSPSUB(,DPOBPTR)                          0167 00424000
*         /* DOES THE LIST NODELIST SPECIFY AN ACCOUNT NUMBER OR     */ 00425000
*         /* AN ASTERISK? IF ASTERISK, REFERENCE THE FIRST ACCOUNT   */ 00426000
*         /* NUMBER IN THE LATERAL CHAIN. IF AN ACCOUNT NUMBER WAS   */ 00427000
*         /* SPECIFIED, GO TO THE ACCTNMBR SEARCH LOOP.              */ 00428000
*         IF ACCTNO(1:2) ^= '* '      /* ACCTNMBR SPECIFIED ?        */ 00429000
*           THEN                      /* YES                         */ 00430000
         L     @02,NODELADR(,CTABPTR)                              0168 00431000
         CLC   ACCTNO(2,@02),@CC00407                              0168 00432000
         BE    @RF00168                                            0168 00433000
*             /* IF ACCTNMBRS ARE NOT SUPPORTED FOR THIS USERID,     */ 00434000
*             /* THEN THE COMMAND IS INVALID FOR THIS USERID.        */ 00435000
*             IF UADSADAT = 0                                      0169 00436000
*               THEN                  /* CMND INVALID FOR THIS USER  */ 00437000
         L     @02,UADSADAT(,DNOBPTR)                              0169 00438000
         LTR   @02,@02                                             0169 00439000
         BZ    @RT00169                                            0169 00440000
*                 GOTO MORUS;         /* CHECK FOR MORE USERS        */ 00441000
*               ELSE                  /* ACCTNMBRS ARE SUPPORTED     */ 00442000
*                 GOTO ACSRCH;        /* SEARCH THE LATERAL CHAIN  0171 00443000
*                                        FOR THIS ACCTNMBR           */ 00444000
         B     ACSRCH                                              0171 00445000
*         /* AN ASTERISK WAS SPECIFIED IN THE ACCTNMBR POSITION.     */ 00446000
*         /* IF THE ACCTNMBR LEVEL IS NOT SUPPORTED, THE OFFSET TO   */ 00447000
*         /* THE FIRST DATA FIELD WILL BE ZERO.                      */ 00448000
*         IF UADSADAT = 0                                          0172 00449000
*           THEN                      /* ACTNBR LEVEL NOT SUPPORTED  */ 00450000
@RF00168 L     @02,UADSADAT(,DNOBPTR)                              0172 00451000
         LTR   @02,@02                                             0172 00452000
         BNZ   @RF00172                                            0172 00453000
*             DO;                                                  0173 00454000
*               NOACTFLG = '1'B;      /* SET NO-SUPPORT FLAG         */ 00455000
*               ACIND = '0'B;         /* NO MORE ACCTNMBRS           */ 00456000
         OI    NOACTFLG,B'00000001'                                0175 00457000
         NI    ACIND,B'11011111'                                   0175 00458000
*               GOTO ACFOUND;         /* GO TO THE PROCNAME LEVEL    */ 00459000
         B     ACFOUND                                             0176 00460000
*             END;                                                 0177 00461000
*ACLEVL:  /* AN ASTERISK WAS SPECIFIED IN THE ACCOUNT NUMBER POSI-   */ 00462000
*         /* TION OF THE NODELIST. CHECK THE CHAIN FLAG IN THE OFF-  */ 00463000
*         /* SET BLOCK AND SET THE ACCTNMBR INDICATOR (ACIND).       */ 00464000
*         /* IS THIS THE LAST ACCOUNT NUMBER UNDER THIS PASSWORD?    */ 00465000
*         IF AFLG01 = '1'B                                         0178 00466000
*           THEN                      /* YES, END OF LATERAL CHAIN   */ 00467000
@RF00172 DS    0H                                                  0178 00468000
ACLEVL   TM    AFLG01(DNOBPTR),B'10000000'                         0178 00469000
         BNO   @RF00178                                            0178 00470000
*             ACIND = '0'B;           /* SET INDICATOR TO 0: NO MORE    00471000
*                                        ACCTNMBRS IN THIS CHAIN     */ 00472000
         NI    ACIND,B'11011111'                                   0179 00473000
*           ELSE                      /* NO, THERE ARE MORE ACTNMBRS */ 00474000
*             DO;                                                  0180 00475000
         B     @RC00178                                            0180 00476000
@RF00178 DS    0H                                                  0181 00477000
*               ACIND = '1'B;         /* SET INDICATOR TO 1: ADDITIO-   00478000
*                                        NAL ACCTNMBRS IN THIS CHAIN */ 00479000
         OI    ACIND,B'00100000'                                   0181 00480000
*               ACTBROTH =                                         0182 00481000
*                 HEDBPTR+UADSANEX;   /* SET PTR TO NEXT ACCTNMBR  0182 00482000
*                                        OFFSET BLOCK IN THIS CHAIN  */ 00483000
         LR    @02,HEDBPTR                                         0182 00484000
         L     @15,UADSANEX-1(,DNOBPTR)                            0182 00485000
         LA    @15,0(,@15)                                         0182 00486000
         ALR   @02,@15                                             0182 00487000
         ST    @02,ACTBROTH                                        0182 00488000
*             END;                                                 0183 00489000
*         UADSAPTR = HEDBPTR+UADSADAT;/* REF ACCTNMBR DATA BLOCK     */ 00490000
@RC00178 LR    @02,HEDBPTR                                         0184 00491000
         AL    @02,UADSADAT(,DNOBPTR)                              0184 00492000
         ST    @02,UADSAPTR                                        0184 00493000
*ACFOUND: /* REFERENCE THE 1ST PROCNAME OBLK UNDER CURRENT ACCTNMBR. */ 00494000
*         DROBPTR = HEDBPTR+UADSASUB;                              0185 00495000
ACFOUND  LR    DROBPTR,HEDBPTR                                     0185 00496000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0185 00497000
*         /* DOES THE 'LIST' NODELIST SPECIFY A PROCNAME OR AN AS-   */ 00498000
*         /* TERISK? IF ASTERISK, REFERENCE THE FIRST PROCNAME IN    */ 00499000
*         /* THE LATERAL CHAIN. IF A PROCNAME WAS SPECIFIED, GO TO   */ 00500000
*         /* THE PROCNAME SEARCH LOOP.                               */ 00501000
*         IF PROCNM(1) ^= '*'         /* IS A PROCNAME SPECIFIED IN     00502000
*                                        THE NODELIST?               */ 00503000
*           THEN                      /* YES                         */ 00504000
         L     @07,NODELADR(,CTABPTR)                              0186 00505000
         CLI   PROCNM(@07),C'*'                                    0186 00506000
         BNE   @RT00186                                            0186 00507000
*             GOTO PRSRCH;            /* SEARCH THE LATERAL CHAIN  0187 00508000
*                                        FOR THIS PROCNAME           */ 00509000
*PRLEVL:  /* AN ASTERISK WAS SPECIFIED IN THE PROCNAME POSITION OF   */ 00510000
*         /* THE NODELIST. CHECK THE CHAIN FLAG IN THE OFFSET BLOCK  */ 00511000
*         /* AND SET THE PROCNAME INDICATOR (PRIND).                 */ 00512000
*         /* IS THIS THE LAST PROCNAME UNDER THIS ACCOUNT NUMBER?    */ 00513000
*         IF FLGR01 = '1'B                                         0188 00514000
*           THEN                      /* YES, END OF LATERAL CHAIN   */ 00515000
PRLEVL   TM    FLGR01(DROBPTR),B'10000000'                         0188 00516000
         BNO   @RF00188                                            0188 00517000
*             PRIND = '0'B;           /* SET INDICATOR TO 0: NO MORE    00518000
*                                        PROCNAMES IN THIS CHAIN     */ 00519000
         NI    PRIND,B'11101111'                                   0189 00520000
*           ELSE                      /* NO, THERE ARE MORE PROCNAMS */ 00521000
*             DO;                                                  0190 00522000
         B     @RC00188                                            0190 00523000
@RF00188 DS    0H                                                  0191 00524000
*               PRIND = '1'B;         /* SET INDICATOR TO 1: ADDITIO-   00525000
*                                        NAL PROCNAMES IN THIS CHAIN */ 00526000
         OI    PRIND,B'00010000'                                   0191 00527000
*               PROBROTH =                                         0192 00528000
*                 HEDBPTR+UADSRNEX;   /* SET PTR TO NEXT PROCNAME  0192 00529000
*                                        OFFSET BLOCK IN THIS CHAIN  */ 00530000
         LR    @07,HEDBPTR                                         0192 00531000
         L     @15,UADSRNEX-1(,DROBPTR)                            0192 00532000
         LA    @15,0(,@15)                                         0192 00533000
         ALR   @07,@15                                             0192 00534000
         ST    @07,PROBROTH                                        0192 00535000
*             END;                                                 0193 00536000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THE PROCNAME DATA FIELD */ 00537000
@RC00188 LR    @07,HEDBPTR                                         0194 00538000
         AL    @07,UADSRDAT(,DROBPTR)                              0194 00539000
         ST    @07,UADSRPTR                                        0194 00540000
*PRFOUND: /* IT MUST NOW BE DETERMINED AT WHICH LEVEL THE FORMATTING */ 00541000
*         /* OF DATA IN THE OPAREA IS TO START                       */ 00542000
*         VALDAT = '1'B;              /* 1 - A VALID PROCNAME, AND 0195 00543000
*                                        THEREFORE A VALID VERTICAL     00544000
*                                        BRANCH, HAS BEEN FOUND.     */ 00545000
PRFOUND  OI    VALDAT,B'00001000'                                  0195 00546000
*         NEXTUSER = '1'B;           /*INDICATE NEW USER     @ZA26793*/ 00547000
         OI    NEXTUSER,B'00100000'                                0196 00548000
*         /* IS THE FORMATTING OF DATA TO START AT THE PROCNAME      */ 00549000
*         /* LEVEL (PRLOOP)?                                         */ 00550000
*         IF LEVL = 4                                              0197 00551000
*           THEN                      /* YES                         */ 00552000
         C     LEVL,@CF00049                                       0197 00553000
         BE    @RT00197                                            0197 00554000
*             GOTO PRLOOP;            /* FORMAT THE PROCNAME DATA    */ 00555000
*         /* IS THE FORMATTING OF DATA TO START AT THE ACCTNUMBER    */ 00556000
*         /* LEVEL (ACLOOP)?                                         */ 00557000
*         IF LEVL = 3                                              0199 00558000
*           THEN                      /* YES                         */ 00559000
         C     LEVL,@CF00219                                       0199 00560000
         BE    @RT00199                                            0199 00561000
*             GOTO ACLOOP;            /* START FORMATTING DATA AT THE   00562000
*                                        ACCTNMBR LEVEL              */ 00563000
*         /* IS THE FORMATTING OF DATA TO START AT THE PASSWORD      */ 00564000
*         /* LEVEL (PWLOOP)?                                         */ 00565000
*         IF LEVL = 2                                              0201 00566000
*           THEN                      /* YES                         */ 00567000
         C     LEVL,@CF00113                                       0201 00568000
         BE    @RT00201                                            0201 00569000
*             GOTO PWLOOP;            /* START FORMATTING DATA AT THE   00570000
*                                        PASSWORD LEVEL              */ 00571000
*         GOTO USLOOP;                /* START FORMATTING DATA AT THE   00572000
*                                        USERID LEVEL                */ 00573000
         B     USLOOP                                              0203 00574000
*PRRTRN:  /* ON RETURN FROM THE PROCNAME DATA FORMATTING LOOP, IT    */ 00575000
*         /* MUST BE ASCERTAINED WHERE PROCESSING IS TO CONTINUE.    */ 00576000
*         /* MORE PROCNAMES TO BE PROCESSED UNDER THIS ACCTNUMBER?   */ 00577000
*         IF PRIND = '1'B                                          0204 00578000
*           THEN                      /* YES                         */ 00579000
PRRTRN   TM    PRIND,B'00010000'                                   0204 00580000
         BNO   @RF00204                                            0204 00581000
*             DO;                                                  0205 00582000
*               LEVL = 4;             /* SET LEVEL TO 4: PROCNAME    */ 00583000
         LA    LEVL,4                                              0206 00584000
*               DROBPTR = PROBROTH;   /* REFERENCE THE PROCNAME    0207 00585000
*                                        BROTHER OFFSET BLOCK        */ 00586000
         L     DROBPTR,PROBROTH                                    0207 00587000
*               GOTO PRLEVL;          /* PROCESS THE NEXT PROCNAME 0208 00588000
*                                        IN THIS LATERAL CHAIN       */ 00589000
         B     PRLEVL                                              0208 00590000
*             END;                                                 0209 00591000
*         /* MORE ACCTNUMBERS TO BE PROCESSED UNDER THIS PASSWORD?   */ 00592000
*         IF ACIND = '1'B                                          0210 00593000
*           THEN                      /* YES                         */ 00594000
@RF00204 TM    ACIND,B'00100000'                                   0210 00595000
         BNO   @RF00210                                            0210 00596000
*             DO;                                                  0211 00597000
*               LEVL = 3;             /* SET LEVEL TO 3: ACCTNMBR    */ 00598000
         LA    LEVL,3                                              0212 00599000
*               DNOBPTR = ACTBROTH;   /* REFERENCE THE ACCTNMBR    0213 00600000
*                                        BROTHER OFFSET BLOCK        */ 00601000
         L     DNOBPTR,ACTBROTH                                    0213 00602000
*               GOTO ACLEVL;          /* PROCESS THE NEXT ACCTNMBR 0214 00603000
*                                        IN THIS LATERAL CHAIN       */ 00604000
         B     ACLEVL                                              0214 00605000
*             END;                                                 0215 00606000
*         /* MORE PASSWORDS TO BE PROCESSED UNDER THIS USERID?       */ 00607000
*         IF PWIND = '1'B                                          0216 00608000
*           THEN                      /* YES                         */ 00609000
@RF00210 TM    PWIND,B'01000000'                                   0216 00610000
         BNO   @RF00216                                            0216 00611000
*             DO;                                                  0217 00612000
*               LEVL = 2;             /* SET LEVEL TO 2: PASSWORD    */ 00613000
         LA    LEVL,2                                              0218 00614000
*               DPOBPTR = PWDBROTH;   /* REFERENCE THE PASSWORD    0219 00615000
*                                        BROTHER OFFSET BLOCK        */ 00616000
         L     DPOBPTR,PWDBROTH                                    0219 00617000
*               GOTO PWLEVL;          /* PROCESS THE NEXT PASSWORD 0220 00618000
*                                        IN THIS LATERAL CHAIN       */ 00619000
         B     PWLEVL                                              0220 00620000
*             END;                                                 0221 00621000
*         GOTO MORUS;                 /* CHECK FOR MORE USERS        */ 00622000
         B     MORUS                                               0222 00623000
*         /********************************************************* */ 00624000
*         /*                                                         */ 00625000
*         /*                   SEARCH LOOPS                          */ 00626000
*         /*                                                         */ 00627000
*         /********************************************************* */ 00628000
*PWSRCH:  /* SEARCH FOR THE PASSWORD SPECIFIED IN THE NODELIST       */ 00629000
*         /* OF THE LIST COMMAND                                     */ 00630000
*         UADSPPTR = HEDBPTR+UADSPDAT;/* REFERENCE THE PASSWORD DATA    00631000
*                                        BLOCK IN THE UADS           */ 00632000
PWSRCH   LR    @07,HEDBPTR                                         0223 00633000
         AL    @07,UADSPDAT(,DPOBPTR)                              0223 00634000
         ST    @07,UADSPPTR                                        0223 00635000
*         /* COMPARE THE UADS-PASSWORD TO THE NODELIST-PASSWORD      */ 00636000
*         IF UADSPPWD = PASSWD        /* ARE THEY EQUAL?             */ 00637000
*           THEN                      /* YES, THE SPECIFIED PASSWORD    00638000
*                                        HAS BEEN FOUND              */ 00639000
         L     @01,NODELADR(,CTABPTR)                              0224 00640000
         CLC   UADSPPWD(8,@07),PASSWD(@01)                         0224 00641000
         BNE   @RF00224                                            0224 00642000
*             DO;                                                  0225 00643000
*               PWIND = '0'B;         /* NO MORE PASSWORDS TO BE PRO-   00644000
*                                        CESSED UNDER THIS USERID    */ 00645000
         NI    PWIND,B'10111111'                                   0226 00646000
*               PWFNDFLG = '1'B;      /* 1- PASSWD FOUND AS SPECIFD  */ 00647000
         OI    PWFNDFLG,B'10000000'                                0227 00648000
*               GOTO PWFOUND;         /* THE NODELIST-PASSWORD IS  0228 00649000
*                                        VALID, START PROCESSING THE    00650000
*                                        ACCTNMBR                    */ 00651000
         B     PWFOUND                                             0228 00652000
*             END;                                                 0229 00653000
*         /* CHECK THE PTR TO THE NEXT PASSWORD OFFSET BLOCK. IF IT  */ 00654000
*         /* IS ZERO, INDICATING END OF THE CHAIN, THEN THE SPECI-   */ 00655000
*         /* FIED PASSWORD DOES NOT EXIST UNDER THIS USERID.         */ 00656000
*         IF UADSPNEX ^= 0            /* MORE PASSWORDS UNDER THIS 0230 00657000
*                                        USERID?                     */ 00658000
*           THEN                      /* YES, CONTINUE THE SEARCH    */ 00659000
@RF00224 L     @07,UADSPNEX-1(,DPOBPTR)                            0230 00660000
         LA    @07,0(,@07)                                         0230 00661000
         LTR   @07,@07                                             0230 00662000
         BZ    @RF00230                                            0230 00663000
*             DO;                                                  0231 00664000
*               DPOBPTR =             /* ADDR OF NEXT OFFSET BLOCK = */ 00665000
*                 HEDBPTR+UADSPNEX;   /* ..ADDR OF USERID HEADER + 0232 00666000
*                                        OFFSET TO BROTHER           */ 00667000
         ALR   @07,HEDBPTR                                         0232 00668000
         LR    DPOBPTR,@07                                         0232 00669000
*               GOTO PWSRCH;          /* REENTER THE SEARCH LOOP AND    00670000
*                                        COMPARE THE NEXT PASSWORD   */ 00671000
         B     PWSRCH                                              0233 00672000
*             END;                                                 0234 00673000
*         GOTO MORUS;                 /* CHECK FOR MORE USERS        */ 00674000
         B     MORUS                                               0235 00675000
*         /********************************************************* */ 00676000
*ACSRCH:  /* SEARCH FOR THE ACCOUNT-NUMBER SPECIFIED IN THE NODELIST */ 00677000
*         /* OF THE LIST COMMAND.                                    */ 00678000
*         /********************************************************* */ 00679000
*         UADSAPTR =                  /* REFERENCE THE ACCTNMBR DATA */ 00680000
*           HEDBPTR+UADSADAT;         /* ..BLOCK IN THE UADS         */ 00681000
ACSRCH   LR    @02,HEDBPTR                                         0236 00682000
         AL    @02,UADSADAT(,DNOBPTR)                              0236 00683000
         ST    @02,UADSAPTR                                        0236 00684000
*         /* COMPARE THE LENGTHS IN THE DATA BLOCK AND NODELIST. IF  */ 00685000
*         /* THE LENGTHS ARE NOT EQUAL, A COMPARISON OF THE ACCOUNT- */ 00686000
*         /* NUMBERS IS UNNECESSARY                                  */ 00687000
*         IF UADSALEN = ACTLEN        /* LENGTHS EQUAL?              */ 00688000
*           THEN                      /* YES                         */ 00689000
         L     @15,NODELADR(,CTABPTR)                              0237 00690000
         CLC   UADSALEN(1,@02),ACTLEN(@15)                         0237 00691000
         BNE   @RF00237                                            0237 00692000
*             /* COMPARE THE ACCTNMBR IN THE UADS DATA BLOCK TO THE  */ 00693000
*             /* NODELIST-ACCTNMBR                                   */ 00694000
*             IF UADSANUM(1:UADSALEN)= /* ACCTNMBRS EQUAL?           */ 00695000
*                ACCTNO(1:UADSALEN)                                0238 00696000
*               THEN                  /* THEY ARE EQUAL              */ 00697000
         SLR   @14,@14                                             0238 00698000
         IC    @14,UADSALEN(,@02)                                  0238 00699000
         BCTR  @14,0                                               0238 00700000
         EX    @14,@SC00508                                        0238 00701000
         BNE   @RF00238                                            0238 00702000
*                 DO;                                              0239 00703000
*                   ACIND = '0'B;     /* IND = 0: NO MORE ACCTNMBRS     00704000
*                                        TO BE PROCESSED UNDER THIS     00705000
*                                        PASSWORD                    */ 00706000
         NI    ACIND,B'11011111'                                   0240 00707000
*                   ACFNDFLG = '1'B;  /* 1- ACTNO FOUND AS SPECIFIED */ 00708000
         OI    ACFNDFLG,B'01000000'                                0241 00709000
*                   GOTO ACFOUND;     /* THE SPECIFIED ACCTNMBR HAS     00710000
*                                        BEEN FOUND. START PROCESSING   00711000
*                                        THE PROCNAME                */ 00712000
         B     ACFOUND                                             0242 00713000
*                 END;                                             0243 00714000
*         /* CHECK THE CHAIN FLAG IN THE OFFSET BLOCK: ARE THERE     */ 00715000
*         /* MORE ACCOUNT NUMBERS IN THIS LATERAL CHAIN?             */ 00716000
*         IF AFLG01 = '0'B            /* MORE ACCTNMBRS?             */ 00717000
*           THEN                      /* YES                         */ 00718000
@RF00238 DS    0H                                                  0244 00719000
@RF00237 TM    AFLG01(DNOBPTR),B'10000000'                         0244 00720000
         BNZ   @RF00244                                            0244 00721000
*             DO;                                                  0245 00722000
*               DNOBPTR =             /* REFERENCE THE NEXT OFFSET   */ 00723000
*                 HEDBPTR+UADSANEX;   /* BLOCK IN THIS CHAIN         */ 00724000
         LR    @02,HEDBPTR                                         0246 00725000
         L     @15,UADSANEX-1(,DNOBPTR)                            0246 00726000
         LA    @15,0(,@15)                                         0246 00727000
         ALR   @02,@15                                             0246 00728000
         LR    DNOBPTR,@02                                         0246 00729000
*               GOTO ACSRCH;          /* CONTINUE THE SEARCH         */ 00730000
         B     ACSRCH                                              0247 00731000
*             END;                                                 0248 00732000
*         /* CHECK THE PASSWORD INDICATOR: ARE THERE MORE PASSWORDS  */ 00733000
*         /* TO BE PROCESSED UNDER THIS USERID?                      */ 00734000
*         IF PWIND = '1'B             /* ANY MORE PASSWORDS?         */ 00735000
*           THEN                      /* YES,                        */ 00736000
@RF00244 TM    PWIND,B'01000000'                                   0249 00737000
         BNO   @RF00249                                            0249 00738000
*             DO;                                                  0250 00739000
*               DPOBPTR = PWDBROTH;   /* REFERENCE THE NEXT PASSWORD    00740000
*                                        OFFSET BLOCK (BROTHER)      */ 00741000
         L     DPOBPTR,PWDBROTH                                    0251 00742000
*               GOTO PWLEVL;          /* CONTINUE THE SEARCH FOR THIS   00743000
*                                        ACCTNMBR UNDER THE NEXT PASS-  00744000
*                                        WORD                        */ 00745000
         B     PWLEVL                                              0252 00746000
*             END;                                                 0253 00747000
*         GOTO MORUS;                 /* CHECK FOR MORE USERS        */ 00748000
         B     MORUS                                               0254 00749000
*         /********************************************************* */ 00750000
*PRSRCH:  /* SEARCH FOR THE PROCEDURE NAME SPECIFIED IN THE NODELIST */ 00751000
*         /* OF THE 'LIST' COMMAND                                   */ 00752000
*         UADSRPTR =                  /* REFERENCE THE PROCNAME DATA */ 00753000
*           HEDBPTR+UADSRDAT;         /* ..BLOCK IN THE UADS         */ 00754000
PRSRCH   LR    @07,HEDBPTR                                         0255 00755000
         AL    @07,UADSRDAT(,DROBPTR)                              0255 00756000
         ST    @07,UADSRPTR                                        0255 00757000
*         /* COMPARE THE UADS-PROCNAME WITH THE NODELIST-PROCNAME    */ 00758000
*         IF UADSRNAM = PROCNM        /* PROCNAMES EQUAL?            */ 00759000
*           THEN                      /* YES                         */ 00760000
         L     @01,NODELADR(,CTABPTR)                              0256 00761000
         CLC   UADSRNAM(8,@07),PROCNM(@01)                         0256 00762000
         BNE   @RF00256                                            0256 00763000
*             DO;                                                  0257 00764000
*               PRIND = '0'B;         /* THE SPECIFIED PROCNAME HAS     00765000
*                                        BEEN FOUND. NO MORE PROCNAMES  00766000
*                                        TO BE PROCESSED IN THIS LATE-  00767000
*                                        RAL CHAIN                   */ 00768000
         NI    PRIND,B'11101111'                                   0258 00769000
*               GOTO PRFOUND;         /* CHECK WHERE THE FORMATTING     00770000
*                                        OF DATA IS TO BEGIN         */ 00771000
         B     PRFOUND                                             0259 00772000
*             END;                                                 0260 00773000
*         /* CHECK THE CHAIN FLAG IN THE OFFSET BLOCK: ARE THERE     */ 00774000
*         /* MORE PROCNAMES IN THIS LATERAL CHAIN?                   */ 00775000
*         IF FLGR01 = '0'B            /* ANY PROCNAME BROTHERS?      */ 00776000
*           THEN                      /* YES                         */ 00777000
@RF00256 TM    FLGR01(DROBPTR),B'10000000'                         0261 00778000
         BNZ   @RF00261                                            0261 00779000
*             DO;                                                  0262 00780000
*               DROBPTR =             /* REFERENCE THE NEXT PROCNAME */ 00781000
*                 HEDBPTR+UADSRNEX;   /* ..OFFSET BLOCK              */ 00782000
         LR    @07,HEDBPTR                                         0263 00783000
         L     @15,UADSRNEX-1(,DROBPTR)                            0263 00784000
         LA    @15,0(,@15)                                         0263 00785000
         ALR   @07,@15                                             0263 00786000
         LR    DROBPTR,@07                                         0263 00787000
*               GOTO PRSRCH;          /* COMPARE THE NEXT UADS PROC-    00788000
*                                        NAME WITH THE NODELIST PROC-   00789000
*                                        NAME                        */ 00790000
         B     PRSRCH                                              0264 00791000
*             END;                                                 0265 00792000
*         /* CHECK THE ACCTNMBR INDICATOR: ARE THERE MORE ACCTNMBRS  */ 00793000
*         /* TO BE PROCESSED UNDER THIS PASSWORD?                    */ 00794000
*         IF ACIND = '1'B             /* MORE ACCTNUMBERS?           */ 00795000
*           THEN                      /* YES                         */ 00796000
@RF00261 TM    ACIND,B'00100000'                                   0266 00797000
         BNO   @RF00266                                            0266 00798000
*             DO;                                                  0267 00799000
*               DNOBPTR = ACTBROTH;   /* REFERENCE THE NEXT ACCTNMBR    00800000
*                                        OFFSET BLOCK IN THIS CHAIN  */ 00801000
         L     DNOBPTR,ACTBROTH                                    0268 00802000
*               GOTO ACLEVL;          /* GO SEARCH FOR THIS PROCNAME    00803000
*                                        UNDER THE NEXT ACCTNMBR     */ 00804000
         B     ACLEVL                                              0269 00805000
*             END;                                                 0270 00806000
*         /* CHECK THE PASSWORD INDICATOR: ARE THERE MORE PASSWORDS  */ 00807000
*         /* TO BE PROCESSED UNDER THIS USERID?                      */ 00808000
*         IF PWIND = '1'B             /* MORE PASSWORDS?             */ 00809000
*           THEN                      /* YES                         */ 00810000
@RF00266 TM    PWIND,B'01000000'                                   0271 00811000
         BNO   @RF00271                                            0271 00812000
*             DO;                                                  0272 00813000
*               DPOBPTR = PWDBROTH;   /* REFERENCE THE NEXT PASSWORD    00814000
*                                        OFFSET BLOCK IN THIS CHAIN  */ 00815000
         L     DPOBPTR,PWDBROTH                                    0273 00816000
*               GOTO PWLEVL;          /* GO SEARCH FOR THIS PROCNAME    00817000
*                                        UNDER THE NEXT PASSWORD     */ 00818000
         B     PWLEVL                                              0274 00819000
*             END;                                                 0275 00820000
*         GOTO MORUS;                 /* CHECK FOR MORE USERS        */ 00821000
         B     MORUS                                               0276 00822000
*         /********************************************************* */ 00823000
*         /*                                                         */ 00824000
*         /*                 FORMATTING OF DATA                      */ 00825000
*         /*                                                         */ 00826000
*USLOOP:  /* THE USLOOP WILL EXTRACT THE USERID DATA FROM THE UADS   */ 00827000
*         /* AND FORMAT IT IN AN OUTPUT AREA. THE FIRST TWO WORDS    */ 00828000
*         /* OF EACH LINE ARE REQUIRED BY 'PUTLINE' AND ARE NOT PART */ 00829000
*         /* OF THE OUTPUT. THE DATA CONSISTS OF THE FOLLOWING: THE  */ 00830000
*         /* USERID, THE USER ATTRIBUTES (IN WORDS ), THE INSTALLA-  */ 00831000
*         /* TION ATTRIBUTES (IN HEX), THE MAXIMUM CORE SIZE AND THE */ 00832000
*         /* USER PROFILE TABLE (IN HEX).                            */ 00833000
*         /* IS THERE SPACE IN THE OPAREA FOR THE USERID DATA?       */ 00834000
*         /********************************************************* */ 00835000
*         IF OPASIZE < LENGTH(USIDDATA) /* ENOUGH SPACE FOR DATA?    */ 00836000
*           THEN                      /* NO, SEND THE FORMATTED DATA    00837000
*                                        TO 'PUTLINE' AND RETURN TO     00838000
*                                        USLOOP                      */ 00839000
USLOOP   C     OPASIZE,@CF00486                                    0277 00840000
         BNL   @RF00277                                            0277 00841000
*             CALL PUTDATA;           /* SEND THE DATA TO 'PUTLINE'  */ 00842000
         BAL   @14,PUTDATA                                         0278 00843000
*         USIDDATA(1:256) = ' ';      /* BLANK OUT LINE              */ 00844000
@RF00277 MVI   USIDDATA+1(OUTAPTR),C' '                            0279 00845000
         MVC   USIDDATA+2(254,OUTAPTR),USIDDATA+1(OUTAPTR)         0279 00846000
         MVI   USIDDATA(OUTAPTR),C' '                              0279 00847000
*         USIDDATA(256:LNUSID) =      /* BLANK OUT REMAINDER         */ 00848000
*           USIDDATA(1:LNUSID);                                    0280 00849000
         LH    @09,LNUSID                                          0280 00850000
         SL    @09,@CF00329                                        0280 00851000
         MVC   @TS00001(256),USIDDATA(OUTAPTR)                     0280 00852000
         EX    @09,@SM00510                                        0280 00853000
*         NEXTLN1 = ADDR(NEXTLN2);    /* THE FIRST WORD OF EACH LINE    00854000
*                                        IS A PTR TO THE NEXT LINE   */ 00855000
         LA    @09,NEXTLN2(,OUTAPTR)                               0281 00856000
         ST    @09,NEXTLN1(,OUTAPTR)                               0281 00857000
*         USLNL1 = LNUSLIN1-4;        /* LENGTH OF THIS LINE, EXCLUD-   00858000
*                                        ING THE FULL-WORD PTR       */ 00859000
         SLR   @09,@09                                             0282 00860000
         IC    @09,LNUSLIN1                                        0282 00861000
         SL    @09,@CF00049                                        0282 00862000
         STH   @09,USLNL1(,OUTAPTR)                                0282 00863000
*         USBYTE1 = 0;                /* THESE TWO BYTES ARE REQUIRED   00864000
*                                        BY 'PUTLINE'                */ 00865000
         SLR   @09,@09                                             0283 00866000
         STH   @09,USBYTE1(,OUTAPTR)                               0283 00867000
*         BUFUSID(1:USRLEN) = UADSUSER;/* INSERT THE USERID          */ 00868000
         L     @09,NODELADR(,CTABPTR)                              0284 00869000
         SLR   @07,@07                                             0284 00870000
         IC    @07,USRLEN(,@09)                                    0284 00871000
         BCTR  @07,0                                               0284 00872000
         EX    @07,@SM00512                                        0284 00873000
*         USCONST1 =                  /* CONSTANT TEXT               */ 00874000
*           '  USER ATTRIBUTES:  ';                                0285 00875000
         MVC   USCONST1(20,OUTAPTR),@CC00428                       0285 00876000
*         /* DOES THE USER HAVE OPERATOR CAPABILITY?                 */ 00877000
*         IF USATR00 = '0'B                                        0286 00878000
*           THEN                      /* NO                          */ 00879000
         TM    USATR00(HEDBPTR),B'10000000'                        0286 00880000
         BNZ   @RF00286                                            0286 00881000
*             OPERATTR = 'NOOPER';    /* INSERT 'NOOPER' IN THE TEXT */ 00882000
         MVC   OPERATTR(6,OUTAPTR),@CC00430                        0287 00883000
*           ELSE                      /* YES                         */ 00884000
*             OPERATTR = '  OPER';    /* INSERT 'OPER'               */ 00885000
         B     @RC00286                                            0288 00886000
@RF00286 MVC   OPERATTR(6,OUTAPTR),@CC00431                        0288 00887000
*         /* DOES THE USER HAVE ACCOUNT CAPABILITY?                  */ 00888000
*         IF USATR01 = '0'B                                        0289 00889000
*           THEN                      /* NO                          */ 00890000
@RC00286 TM    USATR01(HEDBPTR),B'01000000'                        0289 00891000
         BNZ   @RF00289                                            0289 00892000
*             ACCTATTR = 'NOACCT';    /* INSERT 'NOACCT' IN THE TEXT */ 00893000
         MVC   ACCTATTR(6,OUTAPTR),@CC00432                        0290 00894000
*           ELSE                      /* YES                         */ 00895000
*             ACCTATTR = '  ACCT';    /* INSERT 'ACCT'               */ 00896000
         B     @RC00289                                            0291 00897000
@RF00289 MVC   ACCTATTR(6,OUTAPTR),@CC00433                        0291 00898000
*         /* DOES THE USER HAVE JCL CAPABILITY?                      */ 00899000
*         IF USATR02 = '0'B                                        0292 00900000
*           THEN                      /* NO                          */ 00901000
@RC00289 TM    USATR02(HEDBPTR),B'00100000'                        0292 00902000
         BNZ   @RF00292                                            0292 00903000
*             JCLATTR = 'NOJCL';      /* INSERT 'NOJCL' IN THE TEXT  */ 00904000
         MVC   JCLATTR(5,OUTAPTR),@CC00434                         0293 00905000
*           ELSE                      /* YES                         */ 00906000
*             JCLATTR = '  JCL';      /* INSERT 'JCL'                */ 00907000
         B     @RC00292                                            0294 00908000
@RF00292 MVC   JCLATTR(5,OUTAPTR),@CC00435                         0294 00909000
*         /* DOES THE USER HAVE MOUNT CAPABILITY?              Y02678*/ 00910000
*         IF USATR03 = '0'B                                        0295 00911000
*           THEN                      /* NO                          */ 00912000
@RC00292 TM    USATR03(HEDBPTR),B'00010000'                        0295 00913000
         BNZ   @RF00295                                            0295 00914000
*             MONTATTR = 'NOMOUNT';   /* INSERT 'NOMOUNT' IN THE TEXT   00915000
*                                                              Y02678*/ 00916000
         MVC   MONTATTR(7,OUTAPTR),@CC00436                        0296 00917000
*           ELSE                      /* YES                         */ 00918000
*             MONTATTR = '  MOUNT';   /* INSERT 'MOUNT'        Y02678*/ 00919000
         B     @RC00295                                            0297 00920000
@RF00295 MVC   MONTATTR(7,OUTAPTR),@CC00437                        0297 00921000
*         NEXTLN2 = ADDR(NEXTLN3);    /* PTR TO THE NEXT OUTPUT LINE */ 00922000
@RC00295 LA    @09,NEXTLN3(,OUTAPTR)                               0298 00923000
         ST    @09,NEXTLN2(,OUTAPTR)                               0298 00924000
*         USLNL2 = LNUSLIN2-4;        /* LENGTH OF THIS LINE         */ 00925000
         LA    @09,4                                               0299 00926000
         SLR   @07,@07                                             0299 00927000
         IC    @07,LNUSLIN2                                        0299 00928000
         SLR   @07,@09                                             0299 00929000
         STH   @07,USLNL2(,OUTAPTR)                                0299 00930000
*         USBYTE2 = 0;                /* REQUIRED BY 'PUTLINE'       */ 00931000
         SLR   @07,@07                                             0300 00932000
         STH   @07,USBYTE2(,OUTAPTR)                               0300 00933000
*         USCONST2 =                  /* CONSTANT TEXT               */ 00934000
*           'INSTALLATION ATTRIBUTES, IN HEX: ';                   0301 00935000
         MVC   USCONST2(33,OUTAPTR),@CC00438                       0301 00936000
*         /* TRANSLATE THE INSTALLATION ATTRIBUTES.                  */ 00937000
*         UNPK (INSTATTR,ATTRBIN);    /* UNPACK INSTALLATION DATA    */ 00938000
         UNPK  INSTATTR(5,OUTAPTR),ATTRBIN(3,HEDBPTR)              0302 00939000
*         TR (INSTATTR(1:5),HEXREP);  /* TRANSLATE DATA TO BCD       */ 00940000
         TR    INSTATTR(5,OUTAPTR),HEXREP                          0303 00941000
*         INSTATTR(5) = ' ';          /* BLANK OUT EXTRA CHAR        */ 00942000
         MVI   INSTATTR+4(OUTAPTR),C' '                            0304 00943000
*         NEXTLN3 = ADDR(NEXTLN4);    /* PTR TO THE NEXT OUTPUT LINE */ 00944000
         LA    @02,NEXTLN4(,OUTAPTR)                               0305 00945000
         ST    @02,NEXTLN3(,OUTAPTR)                               0305 00946000
*         USLNL3 = LNUSLIN3-4;        /* LENGTH OF THIS LINE         */ 00947000
         LCR   @09,@09                                             0306 00948000
         SLR   @02,@02                                             0306 00949000
         IC    @02,LNUSLIN3                                        0306 00950000
         ALR   @09,@02                                             0306 00951000
         STH   @09,USLNL3(,OUTAPTR)                                0306 00952000
*         USBYTE3 = 0;                /* REQUIRED BY 'PUTLINE'       */ 00953000
         STH   @07,USBYTE3(,OUTAPTR)                               0307 00954000
*         USCONS3A = 'MAXSIZE: ';     /* CONSTANT TEXT               */ 00955000
         MVC   USCONS3A(9,OUTAPTR),@CC00443                        0308 00956000
*         /* MAXSIZE = 0 MEANS 'NOLIM'.                              */ 00957000
*         IF UADSMAXC = 0                                          0309 00958000
*           THEN                      /* YES, MAXSIZE = NOLIM        */ 00959000
         LH    @09,UADSMAXC(,HEDBPTR)                              0309 00960000
         N     @09,@CF00514                                        0309 00961000
         LTR   @09,@09                                             0309 00962000
         BNZ   @RF00309                                            0309 00963000
*             DO;                                                  0310 00964000
*             USMAXSZ = 'NOLIM';      /* INSERT 'NOLIM'              */ 00965000
         MVC   USMAXSZ(5,OUTAPTR),@CC00445                         0311 00966000
*             USCONS3B = '          ';/* BLANK OUT 'K BYTES'         */ 00967000
         MVC   USCONS3B(10,OUTAPTR),@CC00446                       0312 00968000
*             END;                                                 0313 00969000
*           ELSE                                                   0314 00970000
*             DO;                                                  0314 00971000
         B     @RC00309                                            0314 00972000
@RF00309 DS    0H                                                  0315 00973000
*             /* CONVERT THE REGION SIZE GIVEN IN UADS TO DECIMAL    */ 00974000
*             CVD (UADSMAXC,CVDAREA); /* CONVERT TO PACKED DECIMAL   */ 00975000
         LH    @09,UADSMAXC(,HEDBPTR)                              0315 00976000
         N     @09,@CF00514                                        0315 00977000
         CVD   @09,CVDAREA                                         0315 00978000
*             UNPK (USMAXSZ(1:5),CVDAREA(6:8));/*CONVERT TO ZONED DEC*/ 00979000
         UNPK  USMAXSZ(5,OUTAPTR),CVDAREA+5(3)                     0316 00980000
*             USMAXSZ(5)=USMAXSZ(5)|'F0'X;/* REMOVE SIGN             */ 00981000
         OI    USMAXSZ+4(OUTAPTR),X'F0'                            0317 00982000
*             USCONS3B = 'K BYTES   ';/* CONSTANT TEXT               */ 00983000
         MVC   USCONS3B(10,OUTAPTR),@CC00450                       0318 00984000
*             BCNT = 1;               /* INITIALIZE THE BYTE COUNT   */ 00985000
         LA    BCNT,1                                              0319 00986000
*             /* SUPPRESS LEADING ZEROS.                             */ 00987000
*             DO WHILE USMAXSZ(BCNT) = '0';                        0320 00988000
         B     @DE00320                                            0320 00989000
@DL00320 DS    0H                                                  0321 00990000
*               USMAXSZ(BCNT) = ' ';  /* SUPPRESS IT                 */ 00991000
         LR    @09,OUTAPTR                                         0321 00992000
         ALR   @09,BCNT                                            0321 00993000
         MVI   USMAXSZ-1(@09),C' '                                 0321 00994000
*               BCNT = BCNT+1;        /* INCREMENT THE BYTE COUNT    */ 00995000
         LA    BCNT,1(,BCNT)                                       0322 00996000
*             END;                                                 0323 00997000
@DE00320 LR    @09,OUTAPTR                                         0323 00998000
         ALR   @09,BCNT                                            0323 00999000
         CLI   USMAXSZ-1(@09),C'0'                                 0323 01000000
         BE    @DL00320                                            0323 01001000
*           END;                                                   0324 01002000
*         NEXTLN4 = ADDR(NEXTLN5);    /* PTR TO THE NEXT OUTPUT LINE */ 01003000
@RC00309 LA    @09,NEXTLN5(,OUTAPTR)                               0325 01004000
         ST    @09,NEXTLN4(,OUTAPTR)                               0325 01005000
*         USLNL4 = LNUSLIN4-4;        /* LENGTH OF THIS LINE         */ 01006000
         LA    @09,4                                               0326 01007000
         SLR   @07,@07                                             0326 01008000
         IC    @07,LNUSLIN4                                        0326 01009000
         SLR   @07,@09                                             0326 01010000
         STH   @07,USLNL4(,OUTAPTR)                                0326 01011000
*         USBYTE4 = 0;                /* REQUIRED BY 'PUTLINE'       */ 01012000
         SLR   @07,@07                                             0327 01013000
         STH   @07,USBYTE4(,OUTAPTR)                               0327 01014000
*         USCONST4 =                  /* CONSTANT TEXT               */ 01015000
*           'USER PROFILE TABLE: ';                                0328 01016000
         MVC   USCONST4(20,OUTAPTR),@CC00452                       0328 01017000
*         NEXTLN5 = ADDR(NEXTLN6);    /* PTR TO THE NEXT OUTPUT LINE */ 01018000
         LA    @02,NEXTLN6(,OUTAPTR)                               0329 01019000
         ST    @02,NEXTLN5(,OUTAPTR)                               0329 01020000
*         USLNL5 = LNUSLIN5-4;        /* LENGTH OF THIS LINE         */ 01021000
         LCR   @09,@09                                             0330 01022000
         SLR   @02,@02                                             0330 01023000
         IC    @02,LNUSLIN5                                        0330 01024000
         ALR   @09,@02                                             0330 01025000
         STH   @09,USLNL5(,OUTAPTR)                                0330 01026000
*         USBYTE5 = 0;                /* REQUIRED BY 'PUTLINE'       */ 01027000
         STH   @07,USBYTE5(,OUTAPTR)                               0331 01028000
*         /* TRANSLATE THE INSTALLATION ATTRIBUTES.                  */ 01029000
*         UPTBIN(1:16) = UPT;         /* COPY UPT INTO WORK AREA     */ 01030000
         L     @09,UPTPTR                                          0332 01031000
         MVC   UPTBIN(16),UPT(@09)                                 0332 01032000
*         UNPK (UPTHEX(1:15),UPTBIN(1:8));                         0333 01033000
         UNPK  UPTHEX(15,OUTAPTR),UPTBIN(8)                        0333 01034000
*         UNPK (UPTHEX(15:29),UPTBIN(8:15));                       0334 01035000
         UNPK  UPTHEX+14(15,OUTAPTR),UPTBIN+7(8)                   0334 01036000
*         UNPK (UPTHEX(29:33),UPTBIN(15:17));                      0335 01037000
         UNPK  UPTHEX+28(5,OUTAPTR),UPTBIN+14(3)                   0335 01038000
*         TR (UPTHEX(1:33),HEXREP);                                0336 01039000
         TR    UPTHEX(33,OUTAPTR),HEXREP                           0336 01040000
*         UPTHEX(33) = ' ';           /* BLANK OUT EXTRA CHAR        */ 01041000
         MVI   UPTHEX+32(OUTAPTR),C' '                             0337 01042000
*         IF UADSEXPF = '1'B          /* IS UADS EXPANDED?           */ 01043000
*           THEN                      /* YES,                        */ 01044000
         TM    UADSEXPF(HEDBPTR),B'01000000'                       0338 01045000
         BNO   @RF00338                                            0338 01046000
*             UPTUSID = UPTPREFX;     /* GET USERID PREFIX          1*/ 01047000
         MVC   UPTUSID(7,OUTAPTR),UPTPREFX(@09)                    0339 01048000
*         NEXTLN6 = OUTAPTR+LNUSID;   /* PTR TO THE NEXT OUTPUT LINE    01049000
*                                                              Y02678*/ 01050000
@RF00338 LR    @09,OUTAPTR                                         0340 01051000
         AH    @09,LNUSID                                          0340 01052000
         ST    @09,NEXTLN6(,OUTAPTR)                               0340 01053000
*         USLNL6 = LNUSLIN6-4;        /* LENGTH OF THIS LINE   Y02678*/ 01054000
         SLR   @09,@09                                             0341 01055000
         IC    @09,LNUSLIN6                                        0341 01056000
         SL    @09,@CF00049                                        0341 01057000
         STH   @09,USLNL6(,OUTAPTR)                                0341 01058000
*         USBYTE6 = 0;                /* REQUIRED BY 'PUTLINE' Y02678*/ 01059000
         SLR   @09,@09                                             0342 01060000
         STH   @09,USBYTE6(,OUTAPTR)                               0342 01061000
*         USCONST6 =                  /* TEXT                  Y02678*/ 01062000
*           'DESTINATION  =  ';                                    0343 01063000
         MVC   USCONST6(16,OUTAPTR),@CC00455                       0343 01064000
*         IF UADSEXPF = '1'B          /* IS UADS IN NEW FORMAT?      */ 01065000
*          & UADSDEST(1) ^= '00'X     /* AND DESTINATION SPECIFIED?  */ 01066000
*           THEN                      /* YES,                        */ 01067000
         TM    UADSEXPF(HEDBPTR),B'01000000'                       0344 01068000
         BNO   @RF00344                                            0344 01069000
         CLI   UADSDEST(HEDBPTR),X'00'                             0344 01070000
         BE    @RF00344                                            0344 01071000
*             DESTINAT = UADSDEST;    /* INSERT DESTINATION    Y02678*/ 01072000
         MVI   DESTINAT+8(OUTAPTR),C' '                            0345 01073000
         MVC   DESTINAT+9(13,OUTAPTR),DESTINAT+8(OUTAPTR)          0345 01074000
         MVC   DESTINAT(8,OUTAPTR),UADSDEST(HEDBPTR)               0345 01075000
*           ELSE                      /* NO, OLD UADS                */ 01076000
*             DESTINAT = 'CENTRAL SITE DEFAULT';/* DEFAULT     Y02678   01077000
*                                        DESTINATION         @ZA19964*/ 01078000
         B     @RC00344                                            0346 01079000
@RF00344 MVI   DESTINAT+20(OUTAPTR),C' '                           0346 01080000
         MVI   DESTINAT+21(OUTAPTR),C' '                           0346 01081000
         MVC   DESTINAT(20,OUTAPTR),@CC00458                       0346 01082000
*         OPASIZE = OPASIZE-LNUSID;   /* SUBTRACT THE SPACE USED BY     01083000
*                                        THE USERID DATA FROM THE  0347 01084000
*                                        SPACE AVAILABLE IN THE OUT-    01085000
*                                        PUT AREA                    */ 01086000
@RC00344 LH    @09,LNUSID                                          0347 01087000
         SLR   OPASIZE,@09                                         0347 01088000
*         OUTAPTR = OUTAPTR+LNUSID;   /* INCREMENT THE ADDRESS OF THE   01089000
*                                        OUTPUT BUFFER         Y02678*/ 01090000
         ALR   OUTAPTR,@09                                         0348 01091000
*         IF OPASIZE < LENGTH(PERFLIN1)/* ENOUGH SPACE?              */ 01092000
*           THEN                      /* NO,                         */ 01093000
         C     OPASIZE,@CF00369                                    0349 01094000
         BNL   @RF00349                                            0349 01095000
*             CALL PUTDATA;           /* GO TO PUT OUT THE LAST DATA    01096000
*                                                              Y02678*/ 01097000
         BAL   @14,PUTDATA                                         0350 01098000
*         PERFLIN1 = ' ';             /* BLANK OUT LINE        Y02678*/ 01099000
@RF00349 MVI   PERFLIN1+1(OUTAPTR),C' '                            0351 01100000
         MVC   PERFLIN1+2(42,OUTAPTR),PERFLIN1+1(OUTAPTR)          0351 01101000
         MVI   PERFLIN1(OUTAPTR),C' '                              0351 01102000
*         /* START FORMATTING THE PERFORMANCE DATA.            Y02678*/ 01103000
*         PFNEXTL1 = OUTAPTR+LNPFLIN1;/* PTR TO THE NEXT OUTPUT LINE    01104000
*                                                              Y02678*/ 01105000
         SLR   @09,@09                                             0352 01106000
         IC    @09,LNPFLIN1                                        0352 01107000
         LR    @07,OUTAPTR                                         0352 01108000
         ALR   @07,@09                                             0352 01109000
         ST    @07,PFNEXTL1(,OUTAPTR)                              0352 01110000
*         PFLINEL1 = LNPFLIN1-4;      /* LENGTH OF THIS LINE   Y02678*/ 01111000
         LR    @07,@09                                             0353 01112000
         SL    @07,@CF00049                                        0353 01113000
         STH   @07,PFLINEL1(,OUTAPTR)                              0353 01114000
*         PFBYTE1 = 0;                /* REQUIRED BY 'PUTLINE' Y02678*/ 01115000
         SLR   @07,@07                                             0354 01116000
         STH   @07,PFBYTE1(,OUTAPTR)                               0354 01117000
*         OPASIZE = OPASIZE-LNPFLIN1; /* SUBTRACT THE SPACE USED BY     01118000
*                                        THE PERFORMANCE DATA FROM THE  01119000
*                                        SPACE AVAILABLE IN THE OUT-    01120000
*                                        PUT AREA              Y02678*/ 01121000
         SLR   OPASIZE,@09                                         0355 01122000
*         IF UADSEXPF = '0'B |        /* IF THIS IS OLD USER FORMAT  */ 01123000
*          UADSPERP = 0               /* OR NOPERFORMANGE GROUPS     */ 01124000
*           THEN                      /* SPECIFIED             Y02678*/ 01125000
         TM    UADSEXPF(HEDBPTR),B'01000000'                       0356 01126000
         BZ    @RT00356                                            0356 01127000
         C     @07,UADSPERP(,HEDBPTR)                              0356 01128000
         BNE   @RF00356                                            0356 01129000
@RT00356 DS    0H                                                  0357 01130000
*             DO;                                                  0357 01131000
*             PFCONST1 =              /* INSERT TEXT           Y02678*/ 01132000
*               'NO PERFORMANCE GROUPS';                           0358 01133000
         MVC   PFCONST1(21,OUTAPTR),@CC00460                       0358 01134000
*             OUTAPTR = OUTAPTR+      /* INCREMENT THE ADDRESS OF    */ 01135000
*                LNPFLIN1;            /* THE OUTPUT BUFFER     Y02678*/ 01136000
         SLR   @09,@09                                             0359 01137000
         IC    @09,LNPFLIN1                                        0359 01138000
         ALR   OUTAPTR,@09                                         0359 01139000
*             GOTO PWLOOP;            /* GO TO LIST PASSWORDS  Y02678*/ 01140000
         B     PWLOOP                                              0360 01141000
*             END;                                                 0361 01142000
*         PFCONST1 = 'PERFORMANCE GROUPS:  ';/* INSERT TEXT    Y02678*/ 01143000
@RF00356 MVC   PFCONST1(21,OUTAPTR),@CC00462                       0362 01144000
*         OUTAPTR = OUTAPTR+LNPFLIN1; /* INCREMENT THE ADDRESS OF THE   01145000
*                                        OUTPUT BUFFER         Y02678*/ 01146000
         SLR   @09,@09                                             0363 01147000
         IC    @09,LNPFLIN1                                        0363 01148000
         ALR   OUTAPTR,@09                                         0363 01149000
*         NUM = 1;                    /* INIT GROUP NUMBER     Y02678*/ 01150000
         LA    NUM,1                                               0364 01151000
*         PERFPTR = HEDBPTR+UADSPERP; /* INIT PTR TO PERF GROUPS   0365 01152000
*                                                              Y02678*/ 01153000
         LR    @09,HEDBPTR                                         0365 01154000
         AL    @09,UADSPERP(,HEDBPTR)                              0365 01155000
         ST    @09,PERFPTR                                         0365 01156000
*         TESTBYTE = '80'X;           /* TURN ON HIGH ORDER BIT    0366 01157000
*                                                              Y02678*/ 01158000
         MVI   TESTBYTE,X'80'                                      0366 01159000
*         DO WHILE NUM < 256;         /* LOOP TILL END OF GROUPS   0367 01160000
*                                                              Y02678*/ 01161000
         B     @DE00367                                            0367 01162000
@DL00367 DS    0H                                                  0368 01163000
*           IF OPASIZE < LNPFLIN2     /* IS THERE ENOUGH ROOM?       */ 01164000
*             THEN                    /* NO,                         */ 01165000
         SLR   @09,@09                                             0368 01166000
         IC    @09,LNPFLIN2                                        0368 01167000
         CR    OPASIZE,@09                                         0368 01168000
         BNL   @RF00368                                            0368 01169000
*               CALL PUTDATA;         /* WRITE THE BUFFER OUT  Y02678*/ 01170000
         BAL   @14,PUTDATA                                         0369 01171000
*           PERFLIN2 = ' ';           /* BLANK OUT THE LINE    Y02678*/ 01172000
@RF00368 MVI   PERFLIN2+1(OUTAPTR),C' '                            0370 01173000
         MVC   PERFLIN2+2(66,OUTAPTR),PERFLIN2+1(OUTAPTR)          0370 01174000
         MVI   PERFLIN2(OUTAPTR),C' '                              0370 01175000
*           PFNEXTL2 = OUTAPTR+LNPFLIN2;/* POINT TO NEXT LINE  Y02678*/ 01176000
         SLR   @09,@09                                             0371 01177000
         IC    @09,LNPFLIN2                                        0371 01178000
         LR    @15,OUTAPTR                                         0371 01179000
         ALR   @15,@09                                             0371 01180000
         ST    @15,PFNEXTL2(,OUTAPTR)                              0371 01181000
*           PFLINEL2 = LNPFLIN2-4;    /* INSERT LENGTH OF THIS LINE     01182000
*                                                              Y02678*/ 01183000
         SL    @09,@CF00049                                        0372 01184000
         STH   @09,PFLINEL2(,OUTAPTR)                              0372 01185000
*           PFBYTE2 = 0;              /* SET TO 0 FOR PUTLINE  Y02678*/ 01186000
         SLR   @09,@09                                             0373 01187000
         STH   @09,PFBYTE2(,OUTAPTR)                               0373 01188000
*           GRPTR = ADDR(PFCONST2);   /* INIT PTR FOR GROUP NUMBER TO   01189000
*                                        START OF LINE         Y02678*/ 01190000
         LA    GRPTR,PFCONST2(,OUTAPTR)                            0374 01191000
*           DO WHILE GRPTR < PFNEXTL2 /* TEST FOR FULL LINE          */ 01192000
*            & NUM < 256;             /* OR END OF GROUPS      Y02678*/ 01193000
         B     @DE00375                                            0375 01194000
@DL00375 DS    0H                                                  0376 01195000
*             IF TESTBYTE = 0         /* IS THIS BYTE FINISHED?      */ 01196000
*               THEN                  /* YES,                        */ 01197000
         CLI   TESTBYTE,0                                          0376 01198000
         BNE   @RF00376                                            0376 01199000
*                 DO;                 /* SET UP TO TEST NEXT BYTE  0377 01200000
*                                                              Y02678*/ 01201000
*                 TESTBYTE = '80'X;   /* RESET TEST BYTE       Y02678*/ 01202000
         MVI   TESTBYTE,X'80'                                      0378 01203000
*                 PERFPTR = PERFPTR+1;/* POINT TO NEXT BYTE    Y02678*/ 01204000
         LA    @09,1                                               0379 01205000
         AL    @09,PERFPTR                                         0379 01206000
         ST    @09,PERFPTR                                         0379 01207000
*                 END;                                             0380 01208000
*             IF (TESTBYTE & PERFGRP) ^= 0/* IS THIS BIT ON?         */ 01209000
*               THEN                  /* YES,                        */ 01210000
@RF00376 SLR   @09,@09                                             0381 01211000
         IC    @09,TESTBYTE                                        0381 01212000
         L     @01,PERFPTR                                         0381 01213000
         SLR   @00,@00                                             0381 01214000
         IC    @00,PERFGRP(,@01)                                   0381 01215000
         NR    @09,@00                                             0381 01216000
         LTR   @09,@09                                             0381 01217000
         BZ    @RF00381                                            0381 01218000
*                 DO;                 /* PRINT GROUP NUMBER    Y02678*/ 01219000
*                 /* CONVERT THE GROUP NUMBER TO DECIMAL       Y02678*/ 01220000
*                 CVD (NUM,CVDAREA); /* CONVERT TO PACKED DECIMAL  0383 01221000
*                                                              Y02678*/ 01222000
         CVD   NUM,CVDAREA                                         0383 01223000
*                 UNPK (GROUP(1:4),CVDAREA(7:8));/* CONVERT TO ZONED    01224000
*                                                   DECIMAL    Y02678*/ 01225000
         UNPK  GROUP(4,GRPTR),CVDAREA+6(2)                         0384 01226000
*                 GROUP(4)=GROUP(4)|'F0'X;/* REMOVE SIGN       Y02678*/ 01227000
         OI    GROUP+3(GRPTR),X'F0'                                0385 01228000
*                 BYTEP = GRPTR;      /* INIT PTR TO FIRST CHARY02678*/ 01229000
         LR    BYTEP,GRPTR                                         0386 01230000
*                 DO WHILE GCHAR = '0';/* LOOP TO SUPRESS LEADING  0387 01231000
*                                         ZEROS                Y02678*/ 01232000
         B     @DE00387                                            0387 01233000
@DL00387 DS    0H                                                  0388 01234000
*                   GCHAR = ' ';      /* SUPPRESS IT           Y02678*/ 01235000
         MVI   GCHAR(BYTEP),C' '                                   0388 01236000
*                   BYTEP = BYTEP+1;  /* INCREMENT THE BYTE COUNT  0389 01237000
*                                                              Y02678*/ 01238000
         AL    BYTEP,@CF00032                                      0389 01239000
*                   END;                                           0390 01240000
@DE00387 CLI   GCHAR(BYTEP),C'0'                                   0390 01241000
         BE    @DL00387                                            0390 01242000
*                 GRPTR = GRPTR+4;    /* INCREMENT POSITION IN THE 0391 01243000
*                                        OUTPUT LINE           Y02678*/ 01244000
         AL    GRPTR,@CF00049                                      0391 01245000
*                 END;                                             0392 01246000
*             TESTBYTE = TESTBYTE/2;  /* SHIFT TEST BIT TO RIGHT   0393 01247000
*                                                              Y02678*/ 01248000
@RF00381 SLR   @09,@09                                             0393 01249000
         IC    @09,TESTBYTE                                        0393 01250000
         SRL   @09,1                                               0393 01251000
         STC   @09,TESTBYTE                                        0393 01252000
*             NUM = NUM+1;            /* INCREMENT GROUP NUM.  Y02678*/ 01253000
         LA    NUM,1(,NUM)                                         0394 01254000
*             END;                                                 0395 01255000
@DE00375 C     GRPTR,PFNEXTL2(,OUTAPTR)                            0395 01256000
         BNL   @DC00375                                            0395 01257000
         CL    NUM,@CF00329                                        0395 01258000
         BL    @DL00375                                            0395 01259000
@DC00375 DS    0H                                                  0396 01260000
*           OUTAPTR = OUTAPTR+LNPFLIN2;/* INCREMENT OUTPUT AREA ADDRESS 01261000
*                                                              Y02678*/ 01262000
         SLR   @09,@09                                             0396 01263000
         IC    @09,LNPFLIN2                                        0396 01264000
         ALR   OUTAPTR,@09                                         0396 01265000
*           OPASIZE = OPASIZE-LNPFLIN2;/* DECREMENT REMAINING LENGTH OF 01266000
*                                         BUFFER               Y02678*/ 01267000
         SLR   OPASIZE,@09                                         0397 01268000
*           END;                                                   0398 01269000
@DE00367 CL    NUM,@CF00329                                        0398 01270000
         BL    @DL00367                                            0398 01271000
*PWLOOP:  /* PWLOOP WILL EXTRACT THE PASSWORD DATA FROM THE UADS     */ 01272000
*         /* AND FORMAT IT IN AN OUTPUT AREA. THE DATA CONSISTS      */ 01273000
*         /* OF THE PASSWORD. THE FIRST TWO WORDS OF THE LINE ARE    */ 01274000
*         /* REQUIRED BY 'PUTLINE' AND ARE NOT PART OF THE OUTPUT    */ 01275000
*         /* IS THERE SPACE IN THE OPAREA FOR THE PASSWORD DATA?     */ 01276000
*         IF OPASIZE < LENGTH(PWDDATA)/* ENOUGH SPACE FOR DATA?      */ 01277000
*           THEN                      /* NO, SEND THE DATA TO 'PUT-     01278000
*                                        LINE' AND RETURN TO PWLOOP  */ 01279000
PWLOOP   C     OPASIZE,@CF00077                                    0399 01280000
         BNL   @RF00399                                            0399 01281000
*             CALL PUTDATA;           /* SEND THE DATA TO 'PUTLINE'  */ 01282000
         BAL   @14,PUTDATA                                         0400 01283000
*         PWDDATA = ' ';              /* BLANK OUT LINE              */ 01284000
@RF00399 MVI   PWDDATA+1(OUTAPTR),C' '                             0401 01285000
         MVC   PWDDATA+2(22,OUTAPTR),PWDDATA+1(OUTAPTR)            0401 01286000
         MVI   PWDDATA(OUTAPTR),C' '                               0401 01287000
*         BUFACAD = OUTAPTR+LNPWD;    /* PTR TO THE NEXT OUTPUT LINE */ 01288000
         SLR   @09,@09                                             0402 01289000
         IC    @09,LNPWD                                           0402 01290000
         LR    @07,OUTAPTR                                         0402 01291000
         ALR   @07,@09                                             0402 01292000
         ST    @07,BUFACAD(,OUTAPTR)                               0402 01293000
*         PWLINEL = LNPWD-4;          /* LENGTH OF THIS LINE         */ 01294000
         SL    @09,@CF00049                                        0403 01295000
         STH   @09,PWLINEL(,OUTAPTR)                               0403 01296000
*         PWBYTE = 0;                 /* REQUIRED BY 'PUTLINE'       */ 01297000
         SLR   @09,@09                                             0404 01298000
         STH   @09,PWBYTE(,OUTAPTR)                                0404 01299000
*         /* CHECK WHETHER THE PASSWORD LEVEL IS SUPPORTED.          */ 01300000
*         IF NOPWDFLG = '1'B                                       0405 01301000
*           THEN                      /* NO,                         */ 01302000
         TM    NOPWDFLG,B'00000010'                                0405 01303000
         BNO   @RF00405                                            0405 01304000
*             BUFPWD(1:3) = '(*)';    /* PUT OUT '*' IN PWD POSITION */ 01305000
         MVC   BUFPWD(3,OUTAPTR),@CC00466                          0406 01306000
*           ELSE                      /* YES,                        */ 01307000
*             BUFPWD = UADSPPWD;      /* INSERT THE PASSWORD         */ 01308000
         B     @RC00405                                            0407 01309000
@RF00405 L     @09,UADSPPTR                                        0407 01310000
         MVC   BUFPWD(8,OUTAPTR),UADSPPWD(@09)                     0407 01311000
*         OPASIZE = OPASIZE-LNPWD;    /* SUBTRACT THE SPACE USED BY     01312000
*                                        THE USERID DATA FROM THE  0408 01313000
*                                        SPACE AVAILABLE IN THE OUT-    01314000
*                                        PUT AREA                    */ 01315000
@RC00405 SLR   @09,@09                                             0408 01316000
         IC    @09,LNPWD                                           0408 01317000
         SLR   OPASIZE,@09                                         0408 01318000
*         OUTAPTR = OUTAPTR+LNPWD;    /* INCREMENT THE ADDRESS OF THE   01319000
*                                        OUTPUT BUFFER               */ 01320000
         ALR   OUTAPTR,@09                                         0409 01321000
*ACLOOP:  /* ACLOOP WILL EXTRACT THE ACCOUNT-NUMBER DATA FROM THE    */ 01322000
*         /* UADS AND FORMAT IT IN AN OUTPUT AREA. THE DATA CON-     */ 01323000
*         /* SISTS OF THE ACCOUNT-NUMBER. THE FIRST TWO WORDS OF     */ 01324000
*         /* EACH LINE ARE REQUIRED BY 'PUTLINE' AND ARE NOT PART    */ 01325000
*         /* OF THE OUTPUT.                                          */ 01326000
*         /* IS THERE SPACE IN THE OPAREA FOR THE ACCOUNT NUMBER     */ 01327000
*         /* DATA?                                                   */ 01328000
*         IF OPASIZE < LENGTH(ACCTDATA)/* ENOUGH SPACE?              */ 01329000
*           THEN                      /* NO, SEND THE DATA TO 'PUT-     01330000
*                                        LINE AND RETURN TO ACLOOP   */ 01331000
ACLOOP   C     OPASIZE,@CF00490                                    0410 01332000
         BNL   @RF00410                                            0410 01333000
*             CALL PUTDATA;           /* SEND THE DATA TO 'PUTLINE'  */ 01334000
         BAL   @14,PUTDATA                                         0411 01335000
*         ACCTDATA = ' ';             /* BLANK OUT LINE              */ 01336000
@RF00410 MVI   ACCTDATA+1(OUTAPTR),C' '                            0412 01337000
         MVC   ACCTDATA+2(58,OUTAPTR),ACCTDATA+1(OUTAPTR)          0412 01338000
         MVI   ACCTDATA(OUTAPTR),C' '                              0412 01339000
*         BUFPRAD = OUTAPTR+LNACCT;   /* PTR TO THE NEXT OUTPUT LINE */ 01340000
         SLR   @09,@09                                             0413 01341000
         IC    @09,LNACCT                                          0413 01342000
         LR    @07,OUTAPTR                                         0413 01343000
         ALR   @07,@09                                             0413 01344000
         ST    @07,BUFPRAD(,OUTAPTR)                               0413 01345000
*         ACLINEL = LNACCT-4;         /* LENGTH OF THIS LINE         */ 01346000
         SL    @09,@CF00049                                        0414 01347000
         STH   @09,ACLINEL(,OUTAPTR)                               0414 01348000
*         ACBYTE = 0;                 /* REQUIRED BY 'PUTLINE'       */ 01349000
         SLR   @09,@09                                             0415 01350000
         STH   @09,ACBYTE(,OUTAPTR)                                0415 01351000
*         /* CHECK WHETHER THE ACCTNMBR LEVEL IS SUPPORTED.          */ 01352000
*         IF NOACTFLG = '1'B                                       0416 01353000
*           THEN                      /* NO,                         */ 01354000
         TM    NOACTFLG,B'00000001'                                0416 01355000
         BNO   @RF00416                                            0416 01356000
*             DO;                                                  0417 01357000
*               BUFACTN(1:3) = '(*)'; /* PUT OUT AN '*' IN THE ACTNBR   01358000
*                                        POSITION OF THE OUTPUT      */ 01359000
         MVC   BUFACTN(3,OUTAPTR),@CC00466                         0418 01360000
*             END;                                                 0419 01361000
*           ELSE                      /* YES,                        */ 01362000
*             BUFACTN(1:UADSALEN) =   /* INSERT THE ACCTNMBR         */ 01363000
*               UADSANUM;                                          0420 01364000
         B     @RC00416                                            0420 01365000
@RF00416 L     @09,UADSAPTR                                        0420 01366000
         SLR   @07,@07                                             0420 01367000
         IC    @07,UADSALEN(,@09)                                  0420 01368000
         BCTR  @07,0                                               0420 01369000
         EX    @07,@SM00515                                        0420 01370000
*         OPASIZE = OPASIZE-LNACCT;   /* SUBTRACT THE SPACE USED BY     01371000
*                                        THE ACCTNO DATA FROM THE  0421 01372000
*                                        SPACE AVAILABLE IN THE OUT-    01373000
*                                        PUT AREA                    */ 01374000
@RC00416 SLR   @09,@09                                             0421 01375000
         IC    @09,LNACCT                                          0421 01376000
         SLR   OPASIZE,@09                                         0421 01377000
*         OUTAPTR = OUTAPTR+LNACCT;   /* INCREMENT THE ADDRESS OF THE   01378000
*                                        OUTPUT BUFFER               */ 01379000
         ALR   OUTAPTR,@09                                         0422 01380000
*PRLOOP:  /* PRLOOP WILL EXTRACT THE PROCEDURE-NAME DATA FROM THE    */ 01381000
*         /* UADS AND FORMAT IT IN AN OUTPUT AREA. THE DATA CON-     */ 01382000
*         /* SISTS OF THE PROCEDURE NAME, THE PROCEDURE SIZE AND THE */ 01383000
*         /* GENERIC UNIT NAME. THE FIRST TWO LINES OF EACH LINE ARE */ 01384000
*         /* REQUIRED BY 'PUTLINE' AND ARE NOT PART OF THE OUTPUT.   */ 01385000
*         /* IS THERE SPACE IN THE OPAREA FOR THE PROCEDURE DATA?    */ 01386000
*         IF OPASIZE < LENGTH(PROCDATA)/* ENOUGH SPACE?              */ 01387000
*           THEN                      /* NO,                         */ 01388000
PRLOOP   C     OPASIZE,@CF00491                                    0423 01389000
         BNL   @RF00423                                            0423 01390000
*             CALL PUTDATA;           /* GO TO PUT OUT THE LAST DATA */ 01391000
         BAL   @14,PUTDATA                                         0424 01392000
*         PROCDATA = ' ';             /* BLANK OUT LINE              */ 01393000
@RF00423 MVI   PROCDATA+1(OUTAPTR),C' '                            0425 01394000
         MVC   PROCDATA+2(62,OUTAPTR),PROCDATA+1(OUTAPTR)          0425 01395000
         MVI   PROCDATA(OUTAPTR),C' '                              0425 01396000
*         /* START FORMATTING THE PROCNAME DATA.                     */ 01397000
*         PRNEXTL1 = OUTAPTR+LNPROC;  /* PTR TO THE NEXT OUTPUT LINE */ 01398000
         SLR   @09,@09                                             0426 01399000
         IC    @09,LNPROC                                          0426 01400000
         LR    @07,OUTAPTR                                         0426 01401000
         ALR   @07,@09                                             0426 01402000
         ST    @07,PRNEXTL1(,OUTAPTR)                              0426 01403000
*         PRLINEL1 = LNPROC-4;        /* LENGTH OF THIS LINE         */ 01404000
         SL    @09,@CF00049                                        0427 01405000
         STH   @09,PRLINEL1(,OUTAPTR)                              0427 01406000
*         PRBYTE1 = 0;                /* REQUIRED BY 'PUTLINE'       */ 01407000
         SLR   @09,@09                                             0428 01408000
         STH   @09,PRBYTE1(,OUTAPTR)                               0428 01409000
*         BUFPROC = UADSRNAM;         /* INSERT THE PROCEDURE NAME   */ 01410000
         L     @09,UADSRPTR                                        0429 01411000
         MVC   BUFPROC(8,OUTAPTR),UADSRNAM(@09)                    0429 01412000
*         PRCONST1 = '  PROCSIZE= ';  /* CONSTANT TEXT               */ 01413000
         MVC   PRCONST1(12,OUTAPTR),@CC00469                       0430 01414000
*         PRCONST2 = 'K, ';           /* CONSTANT TEXT               */ 01415000
         MVC   PRCONST2(3,OUTAPTR),@CC00471                        0431 01416000
*         /* INSERT ONE ZERO IF PROCSIZE = 0. LEADING ZEROS WILL BE  */ 01417000
*         /* SUPPRESSED.                                             */ 01418000
*         IF UADSRSIZ = 0                                          0432 01419000
*           THEN                      /* YES, PROCSIZE = 0           */ 01420000
         LH    @09,UADSRSIZ(,@09)                                  0432 01421000
         N     @09,@CF00514                                        0432 01422000
         LTR   @09,@09                                             0432 01423000
         BNZ   @RF00432                                            0432 01424000
*               PRSIZE = '    0';     /* INSERT ONE ZERO             */ 01425000
         MVC   PRSIZE(5,OUTAPTR),@CC00472                          0433 01426000
*           ELSE                                                   0434 01427000
*             DO;                                                  0434 01428000
         B     @RC00432                                            0434 01429000
@RF00432 DS    0H                                                  0435 01430000
*             /* CONVERT PROCSIZE GIVEN IN UADS TO DECIMAL FORM      */ 01431000
*             CVD (UADSRSIZ,CVDAREA); /* CONVERT TO PACKED DECIMAL   */ 01432000
         L     @09,UADSRPTR                                        0435 01433000
         LH    @09,UADSRSIZ(,@09)                                  0435 01434000
         N     @09,@CF00514                                        0435 01435000
         CVD   @09,CVDAREA                                         0435 01436000
*             UNPK (PRSIZE(1:5),CVDAREA(6:8));/*CONVERT TO ZONED DEC.*/ 01437000
         UNPK  PRSIZE(5,OUTAPTR),CVDAREA+5(3)                      0436 01438000
*             PRSIZE(5)=PRSIZE(5)|'F0'X;/* REMOVE SIGN               */ 01439000
         OI    PRSIZE+4(OUTAPTR),X'F0'                             0437 01440000
*             BCNT = 1;               /* INITIALIZE THE BYTE COUNT   */ 01441000
         LA    BCNT,1                                              0438 01442000
*             /* SUPPRESS LEADING ZEROS.                             */ 01443000
*             DO WHILE PRSIZE(BCNT) = '0';                         0439 01444000
         B     @DE00439                                            0439 01445000
@DL00439 DS    0H                                                  0440 01446000
*               PRSIZE(BCNT) = ' ';   /* SUPPRESS IT                 */ 01447000
         LR    @09,OUTAPTR                                         0440 01448000
         ALR   @09,BCNT                                            0440 01449000
         MVI   PRSIZE-1(@09),C' '                                  0440 01450000
*               BCNT = BCNT+1;        /* INCREMENT THE BYTE COUNT    */ 01451000
         LA    BCNT,1(,BCNT)                                       0441 01452000
*             END;                                                 0442 01453000
@DE00439 LR    @09,OUTAPTR                                         0442 01454000
         ALR   @09,BCNT                                            0442 01455000
         CLI   PRSIZE-1(@09),C'0'                                  0442 01456000
         BE    @DL00439                                            0442 01457000
*           END;                                                   0443 01458000
*         PRCONST3 = 'UNIT NAME= ';   /* CONSTANT TEXT               */ 01459000
@RC00432 MVC   PRCONST3(11,OUTAPTR),@CC00473                       0444 01460000
*         IF UADSUNAM(1) = ' '                                     0445 01461000
*           THEN                      /* NO UNIT NAME IS SPECIFIED   */ 01462000
         L     @09,UADSRPTR                                        0445 01463000
         CLI   UADSUNAM(@09),C' '                                  0445 01464000
         BNE   @RF00445                                            0445 01465000
*             UNITNAME = '(NONE)  ';  /* PUT OUT (NONE)              */ 01466000
         MVC   UNITNAME(8,OUTAPTR),@CC00475                        0446 01467000
*           ELSE                                                   0447 01468000
*             UNITNAME = UADSUNAM;    /* INSERT THE UNIT NAME        */ 01469000
         B     @RC00445                                            0447 01470000
@RF00445 L     @09,UADSRPTR                                        0447 01471000
         MVC   UNITNAME(8,OUTAPTR),UADSUNAM(@09)                   0447 01472000
*         OPASIZE = OPASIZE-LNPROC;   /* SUBTRACT THE SPACE USED BY     01473000
*                                        THE USERID DATA FROM THE  0448 01474000
*                                        SPACE AVAILABLE IN THE OUT-    01475000
*                                        PUT AREA                    */ 01476000
@RC00445 SLR   @09,@09                                             0448 01477000
         IC    @09,LNPROC                                          0448 01478000
         SLR   OPASIZE,@09                                         0448 01479000
*         OUTAPTR = OUTAPTR+LNPROC;   /* INCREMENT THE ADDRESS OF THE   01480000
*                                        OUTPUT BUFFER               */ 01481000
         ALR   OUTAPTR,@09                                         0449 01482000
*         GOTO PRRTRN;                /* GO CHECK WHERE PROCESSING IS   01483000
*                                        TO CONTINUE                 */ 01484000
         B     PRRTRN                                              0450 01485000
*MPREP:   /* CONTROL PASSED HERE WHEN A MESSAGE WITH USERID INSER-   */ 01486000
*         /* TION HAS TO BE PUT OUT.                                 */ 01487000
*         MSGNO = 3;                  /* SET THE MSG NUMBER          */ 01488000
MPREP    LA    MSGNO,3                                             0451 01489000
*         MSGFIND = (MSGNO*2)-2       /* CALCULATE ADDR OF OFFSET TO */ 01490000
*           +ADDR(LSTMSG);            /* MSG IN THE MSG CSECT        */ 01491000
         LR    MSGFIND,MSGNO                                       0452 01492000
         ALR   MSGFIND,MSGFIND                                     0452 01493000
         BCTR  MSGFIND,0                                           0452 01494000
         BCTR  MSGFIND,0                                           0452 01495000
         L     @09,@CV00141                                        0452 01496000
         ALR   MSGFIND,@09                                         0452 01497000
*         MSGPTR = MOFFSET            /* CALCULATE ADDR OF MSG       */ 01498000
*           +ADDR(LSTMSG);            /* ..HEADER IN THE MSG CSECT   */ 01499000
         L     MSGPTR,@CV00141                                     0453 01500000
         AH    MSGPTR,MOFFSET(,MSGFIND)                            0453 01501000
*         MINDX = (SGNO1*4)+8;        /* DETERMINE SIZE OF MSG OLDS  */ 01502000
         L     MINDX,SGNO1(,MSGPTR)                                0454 01503000
         SLA   MINDX,2                                             0454 01504000
         AL    MINDX,@CF00040                                      0454 01505000
*         AMSGHDR1(1:MINDX) =         /* TRANSFER MSG HEADER TO..    */ 01506000
*           PTRMASK1;                 /* ..DYNAMIC HEADER AREA       */ 01507000
         LR    @09,MINDX                                           0455 01508000
         BCTR  @09,0                                               0455 01509000
         EX    @09,@SM00517                                        0455 01510000
*         SEGPTR13 = ADDR(INSRT1);    /* SET PTR TO ACTIVE INSERT    */ 01511000
         LA    @09,INSRT1                                          0456 01512000
         ST    @09,SEGPTR13                                        0456 01513000
*         INSRTL1 = USRLEN+4;         /* LENGTH OF MSG SEGMENT       */ 01514000
         L     @09,NODELADR(,CTABPTR)                              0457 01515000
         SLR   @07,@07                                             0457 01516000
         IC    @07,USRLEN(,@09)                                    0457 01517000
         LA    @01,4(,@07)                                         0457 01518000
         STH   @01,INSRTL1                                         0457 01519000
*         INSRTO1 = 10;               /* INIT SEGMENT OFFSET         */ 01520000
         MVC   INSRTO1(2),@CH00059                                 0458 01521000
*         INSRTT1 = USRID(1:USRLEN);  /* INSERT THE USERID           */ 01522000
         MVI   INSRTT1+1,C' '                                      0459 01523000
         MVC   INSRTT1+2(38),INSRTT1+1                             0459 01524000
         BCTR  @07,0                                               0459 01525000
         EX    @07,@SM00519                                        0459 01526000
*         GEN (PUTLINE OUTPUT=(AMSGHDR1,,MULTLVL,INFOR),MF=(E,PLPLIST)) 01527000
*           REFS(AMSGHDR1,PLPLIST);                                0460 01528000
         PUTLINE OUTPUT=(AMSGHDR1,,MULTLVL,INFOR),MF=(E,PLPLIST)        01529000
*         RFY R15 RSTD;                                            0461 01530000
*         RTNCODE = R15;              /* SAVE THE RETURN CODE        */ 01531000
         LR    RTNCODE,R15                                         0462 01532000
*         RFY R15 UNRSTD;                                          0463 01533000
*         /* CHECK THE PUTLINE RETURN CODE.                          */ 01534000
*         IF RTNCODE ^= 0             /* SUCCESSFUL?                 */ 01535000
*           THEN                      /* NO,                         */ 01536000
         LTR   RTNCODE,RTNCODE                                     0464 01537000
         BZ    @RF00464                                            0464 01538000
*             DO;                                                  0465 01539000
*PUTERR:      IF RTNCODE = 4                                       0466 01540000
*               THEN                  /* YES,                        */ 01541000
PUTERR   C     RTNCODE,@CF00049                                    0466 01542000
         BE    @RT00466                                            0466 01543000
*                 GOTO CLEANUP;       /* GO CLEAN UP & RETURN        */ 01544000
*             /* GETMAIN FAILURE?                                    */ 01545000
*             IF RTNCODE = 16                                      0468 01546000
*               THEN                  /* YES,                        */ 01547000
         C     RTNCODE,@CF00042                                    0468 01548000
         BNE   @RF00468                                            0468 01549000
*                 MSGNO = 2;          /* 'NOT ENOUGH SPACE'          */ 01550000
         LA    MSGNO,2                                             0469 01551000
*               ELSE                                               0470 01552000
*                 MSGNO = 13;         /* 'PUTLINE FAILURE'           */ 01553000
         B     @RC00468                                            0470 01554000
@RF00468 LA    MSGNO,13                                            0470 01555000
*             GOTO CLEANUP;           /* GO CLEAN UP & RETURN        */ 01556000
         B     CLEANUP                                             0471 01557000
*             END;                                                 0472 01558000
*         GOTO MORUS;                 /* CHECK FOR MORE USERS        */ 01559000
         B     MORUS                                               0473 01560000
*DATACHK: /* IS THERE ANY DATA LEFT TO BE PUT OUT?                   */ 01561000
*         IF OPASIZE ^= 1000                                       0474 01562000
*           THEN                      /* NO, FORMATTED DATA IS LEFT     01563000
*                                        IN THE OUTPUT AREA          */ 01564000
DATACHK  C     OPASIZE,@CF00386                                    0474 01565000
         BE    @RF00474                                            0474 01566000
*             CALL PUTDATA;           /* SEND THE DATA TO 'PUTLINE'  */ 01567000
         BAL   @14,PUTDATA                                         0475 01568000
*         /* CHECK WHETHER A VALID BRANCH HAS BEEN FOUND.            */ 01569000
*         IF VALDAT = '1'B                                         0476 01570000
*           THEN                      /* YES,                        */ 01571000
@RF00474 TM    VALDAT,B'00001000'                                  0476 01572000
         BO    @RT00476                                            0476 01573000
*             GOTO CLEANUP;           /* CLEANUP AND RETURN          */ 01574000
*         /* CHECK WHETHER THE SPECIFIED PASSWORD WAS FOUND.         */ 01575000
*         IF PASSWD(1:2) ^= '* '      /* WAS PASSWORD SPECIFIED?     */ 01576000
*          & PWFNDFLG = '0'B          /* AND NOT FOUND?              */ 01577000
*           THEN                      /* YES,                        */ 01578000
         L     @09,NODELADR(,CTABPTR)                              0478 01579000
         CLC   PASSWD(2,@09),@CC00407                              0478 01580000
         BE    @RF00478                                            0478 01581000
         TM    PWFNDFLG,B'10000000'                                0478 01582000
         BNZ   @RF00478                                            0478 01583000
*             DO;                                                  0479 01584000
*               MSGNO = 5;            /* SET ERRMSG NUMBER: 'SPECIFIED  01585000
*                                        PASSWORD NOT FOUND'         */ 01586000
         LA    MSGNO,5                                             0480 01587000
*               GOTO CLEANUP;         /* CLEAN UP & RETURN           */ 01588000
         B     CLEANUP                                             0481 01589000
*             END;                                                 0482 01590000
*         /* THE PASSWORD WAS FOUND. THIS MEANS THAT EITHER THE      */ 01591000
*         /* SPECIFIED ACCTNMBR OR PROCNAME WAS NOT FOUND.           */ 01592000
*         IF ACCTNO(1:2) ^= '* '      /* ACTNO SPECIFIED?            */ 01593000
*          & ACFNDFLG = '0'B          /* ACTNO FOUND?                */ 01594000
*           THEN                      /* NO,                         */ 01595000
@RF00478 L     @09,NODELADR(,CTABPTR)                              0483 01596000
         CLC   ACCTNO(2,@09),@CC00407                              0483 01597000
         BE    @RF00483                                            0483 01598000
         TM    ACFNDFLG,B'01000000'                                0483 01599000
         BNZ   @RF00483                                            0483 01600000
*             MSGNO = 6;              /* SET ERRMSG NUMBER: 'SPECIFIED  01601000
*                                        ACCTNMBR NOT FOUND'         */ 01602000
         LA    MSGNO,6                                             0484 01603000
*           ELSE                                                   0485 01604000
*             IF PROCNM(1:2) ^= '* '  /* WAS A PROC SPECIFIED?       */ 01605000
*               THEN                  /* YES,                        */ 01606000
         B     @RC00483                                            0485 01607000
@RF00483 L     @09,NODELADR(,CTABPTR)                              0485 01608000
         CLC   PROCNM(2,@09),@CC00407                              0485 01609000
         BE    @RF00485                                            0485 01610000
*                 MSGNO = 7;          /* SET ERRMSG NUMBER: 'SPECIFIED  01611000
*                                        PROCNAME NOT FOUND'         */ 01612000
         LA    MSGNO,7                                             0486 01613000
*CLEANUP: /* THE LIST FORMATTING ROUTINE HAS COMPLETED PROCESSING.   */ 01614000
*         /* PERFORM THE NECESSARY CLEANUP & RETURN TO THE LIST CP.  */ 01615000
*         /* TRANSFER THE MESSAGE NUMBER INTO THE CONTROL TABLE.     */ 01616000
*         IF MSGNO = 3                /* HAS GETMAIN ERROR OCCURRED? */ 01617000
*          & VALDAT = '0'B            /* HAS WORK BEEN DONE?         */ 01618000
*           THEN                      /* NO WORK DONE,               */ 01619000
@RF00485 DS    0H                                                  0487 01620000
@RC00483 DS    0H                                                  0487 01621000
CLEANUP  C     MSGNO,@CF00219                                      0487 01622000
         BNE   @RF00487                                            0487 01623000
         TM    VALDAT,B'00001000'                                  0487 01624000
         BNZ   @RF00487                                            0487 01625000
*             MSGNO = 30;             /* SET MESSAGE NUMBER          */ 01626000
         LA    MSGNO,30                                            0488 01627000
*         MSGNMBR = MSGNO;                                         0489 01628000
@RF00487 ST    MSGNO,MSGNMBR(,CTABPTR)                             0489 01629000
*         /* CHECK WHETHER THE TREE BUFFER HAS TO BE FREED.          */ 01630000
*         IF FREEFLG = '1'B                                        0490 01631000
*           THEN                      /* NO,                         */ 01632000
         TM    FREEFLG,B'00000100'                                 0490 01633000
         BNO   @RF00490                                            0490 01634000
*             DO;                                                  0491 01635000
*             RFY R1 RSTD;                                         0492 01636000
*             R1 = ACIOPTR;           /* ADDR OF WRITE PARMLIST      */ 01637000
         L     R1,ACIOPTR                                          0493 01638000
*             /* THE WRITE RTNE WILL FREE THE READ BUFFER.           */ 01639000
*             CALL IKJEFA52;                                       0494 01640000
         L     @15,@CV00143                                        0494 01641000
         BALR  @14,@15                                             0494 01642000
*             RFY R1 UNRSTD;                                       0495 01643000
*             END;                                                 0496 01644000
*         IF ACIODCBA ^= 0            /* IS THERE A BPAM DCB?        */ 01645000
*           THEN                      /* YES,                        */ 01646000
@RF00490 L     @01,ACIOPTR                                         0497 01647000
         L     @15,ACIODCBA-1(,@01)                                0497 01648000
         LA    @15,0(,@15)                                         0497 01649000
         LTR   @15,@15                                             0497 01650000
         BZ    @RF00497                                            0497 01651000
*             DO;                                                  0498 01652000
*             /* CHECK THE OPEN FLAG IN THE UADS DCB. IF THE DCB IS  */ 01653000
*             /* OPEN (FLAG=1), THE 'CLOSE' MACRO WILL BE ISSUED.    */ 01654000
*             RFY R2 RSTD;            /* RESTRICT DCB REGISTER       */ 01655000
*             R2 = ACIODCBA;          /* LOAD ADDR OF DCB INTO REG2  */ 01656000
         LR    R2,@15                                              0500 01657000
*             IF DCBOFLAG = '1'B      /* IS THE UADS DCB OPEN?       */ 01658000
*               THEN                  /* YES,                        */ 01659000
         TM    DCBOFLAG,B'00010000'                                0501 01660000
         BNO   @RF00501                                            0501 01661000
*                 GEN (CLOSE ((R2)),MF=(E,CLOSDYN))                0502 01662000
*                   REFS(CLOSDYN,R2);                              0502 01663000
         CLOSE ((R2)),MF=(E,CLOSDYN)                                    01664000
*             END;                                                 0503 01665000
@RF00501 DS    0H                                                  0504 01666000
*/* RETURN TO THE CALLER, IKJEFA40.                                  */ 01667000
*         RETURN CODE(RTNCODE);                                    0504 01668000
@RF00497 L     @13,4(,@13)                                         0504 01669000
         L     @00,@SIZDATD                                        0504 01670000
         LR    @01,@11                                             0504 01671000
         FREEMAIN R,LV=(0),A=(1)                                        01672000
         LR    @15,@10                                             0504 01673000
         L     @14,12(,@13)                                        0504 01674000
         LM    @00,@12,20(@13)                                     0504 01675000
         BR    @14                                                 0504 01676000
*PUTDATA: /********************************************************* */ 01677000
*         /*                                                         */ 01678000
*         /*           PUT THE DATA EXTRACTED FROM THE               */ 01679000
*         /*              UADS OUT TO THE TERMINAL                   */ 01680000
*         /*                                                         */ 01681000
*         /***********************************************************/ 01682000
*         PROC;                                                    0505 01683000
PUTDATA  STM   @14,@03,@SA00002                                    0505 01684000
         ST    @05,@SA00002+24                                     0505 01685000
         STM   @07,@09,@SA00002+28                                 0505 01686000
         STM   @11,@12,@SA00002+40                                 0505 01687000
*         /* BEFORE PASSING CONTROL TO PUTLINE, CHECK THE ATTENTION  */ 01688000
*         /* EXIT BIT IN THE ECB.                                    */ 01689000
*         IF ATTENTN = '1'B                                        0506 01690000
*           THEN                      /* THE EXIT BIT IS ON,         */ 01691000
         L     @09,ACCTPLP(,CTABPTR)                               0506 01692000
         L     @09,ACCTECBP(,@09)                                  0506 01693000
         TM    ATTENTN(@09),B'01000000'                            0506 01694000
         BNO   @RF00506                                            0506 01695000
*             RETURN TO CLEANUP;      /* GO CLEAN UP & RETURN        */ 01696000
         LA    @14,CLEANUP                                         0507 01697000
         LM    @15,@03,@SA00002+4                                  0507 01698000
         L     @05,@SA00002+24                                     0507 01699000
         LM    @07,@09,@SA00002+28                                 0507 01700000
         LM    @11,@12,@SA00002+40                                 0507 01701000
         BR    @14                                                 0507 01702000
*         NEXTLN1 = 0;                /* PTR TO NEXT LINE = 0        */ 01703000
@RF00506 SLR   @09,@09                                             0508 01704000
         ST    @09,NEXTLN1(,OUTAPTR)                               0508 01705000
*         USLNL1 = 4;                 /* COUNT = 4                   */ 01706000
         MVC   USLNL1(2,OUTAPTR),@CH00049                          0509 01707000
*         GEN (PUTLINE OUTPUT=(OUTPAREA,,MULTLIN,DATA),MF=(E,PLPLIST))  01708000
*           REFS(PLPLIST,OUTPAREA);                                0510 01709000
         PUTLINE OUTPUT=(OUTPAREA,,MULTLIN,DATA),MF=(E,PLPLIST)         01710000
*         RFY R15 RSTD;                                            0511 01711000
*         RTNCODE = R15;              /* SAVE THE RETURN CODE        */ 01712000
         LR    RTNCODE,R15                                         0512 01713000
*         RFY R15 UNRSTD;                                          0513 01714000
*         /* CHECK THE PUTLINE RETURN CODE.                          */ 01715000
*         IF RTNCODE ^= 0             /* WAS PUTLINE SUCCESSFUL?     */ 01716000
*           THEN                      /* NO, CHECK THE CODE          */ 01717000
         LTR   RTNCODE,RTNCODE                                     0514 01718000
         BZ    @RF00514                                            0514 01719000
*             RETURN TO PUTERR;                                    0515 01720000
         LA    @14,PUTERR                                          0515 01721000
         LM    @15,@03,@SA00002+4                                  0515 01722000
         L     @05,@SA00002+24                                     0515 01723000
         LM    @07,@09,@SA00002+28                                 0515 01724000
         LM    @11,@12,@SA00002+40                                 0515 01725000
         BR    @14                                                 0515 01726000
*         OUTAPTR = ADDR(OUTPAREA);   /* RESET POINTER TO START OF 0516 01727000
*                                        OUTPUT BUFFER               */ 01728000
@RF00514 LA    OUTAPTR,OUTPAREA                                    0516 01729000
*         OPASIZE = 1000;             /* RESET SIZE TO 1000          */ 01730000
         LA    OPASIZE,1000                                        0517 01731000
*         END PUTDATA;                                             0518 01732000
@EL00002 DS    0H                                                  0518 01733000
@EF00002 DS    0H                                                  0518 01734000
@ER00002 LM    @14,@03,@SA00002                                    0518 01735000
         L     @05,@SA00002+24                                     0518 01736000
         LM    @07,@09,@SA00002+28                                 0518 01737000
         LM    @11,@12,@SA00002+40                                 0518 01738000
         BR    @14                                                 0518 01739000
*         END IKJEFA42                                             0519 01740000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01741000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 01742000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01743000
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        * 01744000
*;                                                                 0519 01745000
@DATA    DS    0H                                                       01746000
@CH00174 DC    H'5'                                                     01747000
@CH00059 DC    H'10'                                                    01748000
@SM00496 MVC   CPLS(0),MCPLS                                            01749000
@SC00508 CLC   UADSANUM(0,@02),ACCTNO(@15)                              01750000
@SM00510 MVC   USIDDATA+255(0,OUTAPTR),@TS00001                         01751000
@SM00512 MVC   BUFUSID(0,OUTAPTR),UADSUSER(HEDBPTR)                     01752000
@SM00515 MVC   BUFACTN(0,OUTAPTR),UADSANUM(@09)                         01753000
@SM00517 MVC   AMSGHDR1(0),PTRMASK1(MSGPTR)                             01754000
@SM00519 MVC   INSRTT1(0),USRID(@09)                                    01755000
@DATD    DSECT                                                          01756000
         DS    0F                                                       01757000
@SA00001 DS    18F                                                      01758000
@SA00002 DS    12F                                                      01759000
@TF00001 DS    F                                                        01760000
IKJEFA42 CSECT                                                          01761000
         DS    0F                                                       01762000
@CF00032 DC    F'1'                                                     01763000
@CF00113 DC    F'2'                                                     01764000
@CF00219 DC    F'3'                                                     01765000
@CF00049 DC    F'4'                                                     01766000
@CH00049 EQU   @CF00049+2                                               01767000
@CF00040 DC    F'8'                                                     01768000
@CF00236 DC    F'12'                                                    01769000
@CF00042 DC    F'16'                                                    01770000
@CF00077 DC    F'24'                                                    01771000
@CF00369 DC    F'44'                                                    01772000
@CF00490 DC    F'60'                                                    01773000
@CF00491 DC    F'64'                                                    01774000
@CF00329 DC    F'256'                                                   01775000
@CF00486 DC    F'334'                                                   01776000
@CF00386 DC    F'1000'                                                  01777000
@CF00514 DC    XL4'0000FFFF'                                            01778000
@DATD    DSECT                                                          01779000
         DS    0D                                                       01780000
UADSPPTR DS    A                                                        01781000
UADSAPTR DS    A                                                        01782000
UADSRPTR DS    A                                                        01783000
UPTPTR   DS    A                                                        01784000
ACIOPTR  DS    A                                                        01785000
PWDBROTH DS    A                                                        01786000
ACTBROTH DS    A                                                        01787000
PROBROTH DS    A                                                        01788000
PERFPTR  DS    A                                                        01789000
TESTBYTE DS    FL1                                                      01790000
@TS00001 DS    CL256                                                    01791000
INDIC    DS    CL2                                                      01792000
         ORG   INDIC                                                    01793000
USIND    DS    BL1                                                      01794000
PWIND    EQU   INDIC+0                                                  01795000
ACIND    EQU   INDIC+0                                                  01796000
PRIND    EQU   INDIC+0                                                  01797000
VALDAT   EQU   INDIC+0                                                  01798000
FREEFLG  EQU   INDIC+0                                                  01799000
NOPWDFLG EQU   INDIC+0                                                  01800000
NOACTFLG EQU   INDIC+0                                                  01801000
PWFNDFLG DS    BL1                                                      01802000
ACFNDFLG EQU   INDIC+1                                                  01803000
NEXTUSER EQU   INDIC+1                                                  01804000
         ORG   INDIC+2                                                  01805000
UPTBIN   DS    CL17                                                     01806000
OUTPAREA DS    CL1008                                                   01807000
CVDAREA  DS    CL8                                                      01808000
PLPLIST  DS    CL16                                                     01809000
AMSGHDR1 DS    CL32                                                     01810000
         ORG   AMSGHDR1                                                 01811000
@NM00051 DS    AL4                                                      01812000
@NM00052 DS    3A                                                       01813000
SEGPTR13 DS    AL4                                                      01814000
@NM00053 DS    3A                                                       01815000
         ORG   AMSGHDR1+32                                              01816000
INSRT1   DS    CL44                                                     01817000
         ORG   INSRT1                                                   01818000
INSRTL1  DS    AL2                                                      01819000
INSRTO1  DS    AL2                                                      01820000
INSRTT1  DS    CL40                                                     01821000
         ORG   INSRT1+44                                                01822000
IKJEFA42 CSECT                                                          01823000
         DS    0F                                                       01824000
@SIZDATD DC    AL1(1)                                                   01825000
         DC    AL3(@ENDDATD-@DATD)                                      01826000
@CV00141 DC    V(LSTMSG)                                                01827000
@CV00142 DC    V(IKJEFA51)                                              01828000
@CV00143 DC    V(IKJEFA52)                                              01829000
         DS    0D                                                       01830000
LNUSID   DC    AL2(334)                                                 01831000
LNUSLIN1 DC    AL1(72)                                                  01832000
LNUSLIN2 DC    AL1(60)                                                  01833000
LNUSLIN3 DC    AL1(44)                                                  01834000
LNUSLIN4 DC    AL1(40)                                                  01835000
LNUSLIN5 DC    AL1(60)                                                  01836000
LNUSLIN6 DC    AL1(58)                                                  01837000
LNPFLIN1 DC    AL1(44)                                                  01838000
LNPFLIN2 DC    AL1(68)                                                  01839000
LNPWD    DC    AL1(24)                                                  01840000
LNACCT   DC    AL1(60)                                                  01841000
LNPROC   DC    AL1(64)                                                  01842000
@CC00438 DC    C'INSTALLATION ATTRIBUTES, IN HEX: '                     01843000
@CC00460 DC    C'NO PERFORMANCE GROUPS'                                 01844000
@CC00462 DC    C'PERFORMANCE GROUPS:  '                                 01845000
@CC00428 DC    C'  USER ATTRIBUTES:  '                                  01846000
@CC00452 DC    C'USER PROFILE TABLE: '                                  01847000
@CC00458 DC    C'CENTRAL SITE DEFAULT'                                  01848000
@CC00455 DC    C'DESTINATION  =  '                                      01849000
@CC00469 DC    C'  PROCSIZE= '                                          01850000
@CC00473 DC    C'UNIT NAME= '                                           01851000
@CC00446 DC    C'          '                                            01852000
@CC00450 DC    C'K BYTES   '                                            01853000
@CC00443 DC    C'MAXSIZE: '                                             01854000
@CC00475 DC    C'(NONE)  '                                              01855000
@CC00436 DC    C'NOMOUNT'                                               01856000
@CC00437 DC    C'  MOUNT'                                               01857000
@CC00430 DC    C'NOOPER'                                                01858000
@CC00431 DC    C'  OPER'                                                01859000
@CC00432 DC    C'NOACCT'                                                01860000
@CC00433 DC    C'  ACCT'                                                01861000
@CC00434 DC    C'NOJCL'                                                 01862000
@CC00435 DC    C'  JCL'                                                 01863000
@CC00445 DC    C'NOLIM'                                                 01864000
@CC00472 DC    C'    0'                                                 01865000
@CC00466 DC    C'(*)'                                                   01866000
@CC00471 DC    C'K, '                                                   01867000
@CC00407 DC    C'* '                                                    01868000
HEXREP   DS    CL256                                                    01869000
         ORG   HEXREP                                                   01870000
@NM00048 DC    240CL1' '                                                01871000
@NM00049 DC    CL1'0'                                                   01872000
         DC    CL1'1'                                                   01873000
         DC    CL1'2'                                                   01874000
         DC    CL1'3'                                                   01875000
         DC    CL1'4'                                                   01876000
         DC    CL1'5'                                                   01877000
         DC    CL1'6'                                                   01878000
         DC    CL1'7'                                                   01879000
         DC    CL1'8'                                                   01880000
         DC    CL1'9'                                                   01881000
         DC    CL1'A'                                                   01882000
         DC    CL1'B'                                                   01883000
         DC    CL1'C'                                                   01884000
         DC    CL1'D'                                                   01885000
         DC    CL1'E'                                                   01886000
         DC    CL1'F'                                                   01887000
         ORG   HEXREP+256                                               01888000
@DATD    DSECT                                                          01889000
IKJEFA42 CSECT                                                          01890000
MCPLS    DS   0D                                                        01891000
         CLOSE (,REREAD),MF=L                                           01892000
         PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                     01893000
         DCB   DDNAME=SYSUADS,RECFM=FB,DSORG=PO,MACRF=(R)               01894000
         OPEN  (,INPUT),MF=L                                            01895000
MCPLNG   DC    A(*-MCPLS)               LENGTH OF MODEL PARAMETER LIST  01896000
         DCBD  DSORG=(BS),DEVD=(DA)                                     01897000
@DATD    DSECT                          REESTABLISH AUTOMATIC DSECT     01898000
CPLS     DS    0D                                                       01899000
CLOSDYN  CLOSE (,REREAD),MF=L                                           01900000
PBLOK    PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                     01901000
UADBLOC  DCB   DDNAME=SYSUADS,RECFM=FB,DSORG=PO,MACRF=(R)               01902000
OPENBLK  OPEN  (,INPUT),MF=L                                            01903000
IKJEFA42 CSECT                                                          01904000
         DS   0H                                                        01905000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01906000
@DATD    DSECT                                                          01907000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01908000
@ENDDATD EQU   *                                                        01909000
IKJEFA42 CSECT                                                          01910000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01911000
@01      EQU   01                                                       01912000
@02      EQU   02                                                       01913000
@03      EQU   03                                                       01914000
@04      EQU   04                                                       01915000
@05      EQU   05                                                       01916000
@06      EQU   06                                                       01917000
@07      EQU   07                                                       01918000
@08      EQU   08                                                       01919000
@09      EQU   09                                                       01920000
@10      EQU   10                                                       01921000
@11      EQU   11                                                       01922000
@12      EQU   12                                                       01923000
@13      EQU   13                                                       01924000
@14      EQU   14                                                       01925000
@15      EQU   15                                                       01926000
MINDX    EQU   @03                                                      01927000
MSGNO    EQU   @08                                                      01928000
MSGPTR   EQU   @02                                                      01929000
MSGFIND  EQU   @03                                                      01930000
RTNCODE  EQU   @10                                                      01931000
NUM      EQU   @07                                                      01932000
GRPTR    EQU   @02                                                      01933000
BYTEP    EQU   @09                                                      01934000
OPASIZE  EQU   @06                                                      01935000
OUTAPTR  EQU   @04                                                      01936000
LEVL     EQU   @09                                                      01937000
BCNT     EQU   @02                                                      01938000
CTABPTR  EQU   @05                                                      01939000
IOPLPTR  EQU   @02                                                      01940000
DROBPTR  EQU   @02                                                      01941000
DNOBPTR  EQU   @07                                                      01942000
DPOBPTR  EQU   @02                                                      01943000
HEDBPTR  EQU   @03                                                      01944000
R1       EQU   @01                                                      01945000
R2       EQU   @02                                                      01946000
R15      EQU   @15                                                      01947000
DHED     EQU   0                                                        01948000
UADSMHDR EQU   DHED                                                     01949000
UADSUSER EQU   UADSMHDR+4                                               01950000
UADSBN01 EQU   UADSMHDR+12                                              01951000
UADSEXPF EQU   UADSBN01+1                                               01952000
UADSMAXC EQU   UADSMHDR+14                                              01953000
UADSATTR EQU   DHED+16                                                  01954000
USATR00  EQU   UADSATTR                                                 01955000
USATR01  EQU   UADSATTR                                                 01956000
USATR02  EQU   UADSATTR                                                 01957000
USATR03  EQU   UADSATTR                                                 01958000
UADSINST EQU   DHED+18                                                  01959000
UADSUPTP EQU   DHED+20                                                  01960000
UADSPWD1 EQU   DHED+24                                                  01961000
UADSPERP EQU   DHED+28                                                  01962000
UADSDEST EQU   DHED+32                                                  01963000
DPOB     EQU   0                                                        01964000
UADSPNEX EQU   DPOB+1                                                   01965000
UADSPSUB EQU   DPOB+4                                                   01966000
UADSPDAT EQU   DPOB+8                                                   01967000
DNOB     EQU   0                                                        01968000
AFLG01   EQU   DNOB                                                     01969000
UADSANEX EQU   DNOB+1                                                   01970000
UADSASUB EQU   DNOB+4                                                   01971000
UADSADAT EQU   DNOB+8                                                   01972000
DROB     EQU   0                                                        01973000
FLGR01   EQU   DROB                                                     01974000
UADSRNEX EQU   DROB+1                                                   01975000
UADSRDAT EQU   DROB+8                                                   01976000
DPOBD    EQU   0                                                        01977000
UADSPPWD EQU   DPOBD+4                                                  01978000
DNOBD    EQU   0                                                        01979000
UADSALEN EQU   DNOBD+44                                                 01980000
UADSANUM EQU   DNOBD+45                                                 01981000
DROBD    EQU   0                                                        01982000
UADSRNAM EQU   DROBD+4                                                  01983000
UADSRSIZ EQU   DROBD+14                                                 01984000
UADSUNAM EQU   DROBD+16                                                 01985000
IOPL     EQU   0                                                        01986000
IOPLIOPB EQU   IOPL+12                                                  01987000
UPT      EQU   0                                                        01988000
UPTSWS   EQU   UPT+12                                                   01989000
UPTPREFX EQU   UPT+16                                                   01990000
ACCTPL   EQU   0                                                        01991000
ACCTECBP EQU   ACCTPL+8                                                 01992000
@NM00019 EQU   0                                                        01993000
ATTENTN  EQU   @NM00019                                                 01994000
CTAB     EQU   0                                                        01995000
ACCTPLP  EQU   CTAB                                                     01996000
NODELADR EQU   CTAB+4                                                   01997000
RWPLADR  EQU   CTAB+8                                                   01998000
MSGNMBR  EQU   CTAB+12                                                  01999000
NLSTTAB  EQU   0                                                        02000000
USRLEN   EQU   NLSTTAB                                                  02001000
USRID    EQU   NLSTTAB+1                                                02002000
PASSWD   EQU   NLSTTAB+9                                                02003000
ACTLEN   EQU   NLSTTAB+17                                               02004000
ACCTNO   EQU   NLSTTAB+18                                               02005000
PROCNM   EQU   NLSTTAB+58                                               02006000
ACIOPARM EQU   0                                                        02007000
@NM00021 EQU   ACIOPARM                                                 02008000
ACIOFL03 EQU   @NM00021                                                 02009000
ACIODCBA EQU   ACIOPARM+1                                               02010000
ACIOMPTR EQU   ACIOPARM+4                                               02011000
ACIOLINK EQU   ACIOPARM+12                                              02012000
ACIOBUFR EQU   ACIOPARM+17                                              02013000
@NM00028 EQU   0                                                        02014000
MEMNAME  EQU   @NM00028+4                                               02015000
GROUP    EQU   0                                                        02016000
PERFGRP  EQU   0                                                        02017000
GCHAR    EQU   0                                                        02018000
USIDDATA EQU   0                                                        02019000
USIDLIN1 EQU   USIDDATA                                                 02020000
NEXTLN1  EQU   USIDLIN1                                                 02021000
USLNL1   EQU   USIDLIN1+4                                               02022000
USBYTE1  EQU   USIDLIN1+6                                               02023000
BUFUSID  EQU   USIDLIN1+11                                              02024000
USCONST1 EQU   USIDLIN1+18                                              02025000
OPERATTR EQU   USIDLIN1+38                                              02026000
ACCTATTR EQU   USIDLIN1+46                                              02027000
JCLATTR  EQU   USIDLIN1+54                                              02028000
MONTATTR EQU   USIDLIN1+61                                              02029000
USIDLIN2 EQU   USIDDATA+72                                              02030000
NEXTLN2  EQU   USIDLIN2                                                 02031000
USLNL2   EQU   USIDLIN2+4                                               02032000
USBYTE2  EQU   USIDLIN2+6                                               02033000
USCONST2 EQU   USIDLIN2+20                                              02034000
INSTATTR EQU   USIDLIN2+53                                              02035000
USIDLIN3 EQU   USIDDATA+132                                             02036000
NEXTLN3  EQU   USIDLIN3                                                 02037000
USLNL3   EQU   USIDLIN3+4                                               02038000
USBYTE3  EQU   USIDLIN3+6                                               02039000
USCONS3A EQU   USIDLIN3+20                                              02040000
USMAXSZ  EQU   USIDLIN3+29                                              02041000
USCONS3B EQU   USIDLIN3+34                                              02042000
USIDLIN4 EQU   USIDDATA+176                                             02043000
NEXTLN4  EQU   USIDLIN4                                                 02044000
USLNL4   EQU   USIDLIN4+4                                               02045000
USBYTE4  EQU   USIDLIN4+6                                               02046000
USCONST4 EQU   USIDLIN4+20                                              02047000
USIDLIN5 EQU   USIDDATA+216                                             02048000
NEXTLN5  EQU   USIDLIN5                                                 02049000
USLNL5   EQU   USIDLIN5+4                                               02050000
USBYTE5  EQU   USIDLIN5+6                                               02051000
UPTHEX   EQU   USIDLIN5+20                                              02052000
UPTUSID  EQU   USIDLIN5+53                                              02053000
USIDLIN6 EQU   USIDDATA+276                                             02054000
NEXTLN6  EQU   USIDLIN6                                                 02055000
USLNL6   EQU   USIDLIN6+4                                               02056000
USBYTE6  EQU   USIDLIN6+6                                               02057000
USCONST6 EQU   USIDLIN6+20                                              02058000
DESTINAT EQU   USIDLIN6+36                                              02059000
PERFLIN1 EQU   0                                                        02060000
PFNEXTL1 EQU   PERFLIN1                                                 02061000
PFLINEL1 EQU   PERFLIN1+4                                               02062000
PFBYTE1  EQU   PERFLIN1+6                                               02063000
PFCONST1 EQU   PERFLIN1+20                                              02064000
PERFLIN2 EQU   0                                                        02065000
PFNEXTL2 EQU   PERFLIN2                                                 02066000
PFLINEL2 EQU   PERFLIN2+4                                               02067000
PFBYTE2  EQU   PERFLIN2+6                                               02068000
PFCONST2 EQU   PERFLIN2+20                                              02069000
PWDDATA  EQU   0                                                        02070000
BUFACAD  EQU   PWDDATA                                                  02071000
PWLINEL  EQU   PWDDATA+4                                                02072000
PWBYTE   EQU   PWDDATA+6                                                02073000
BUFPWD   EQU   PWDDATA+13                                               02074000
ACCTDATA EQU   0                                                        02075000
BUFPRAD  EQU   ACCTDATA                                                 02076000
ACLINEL  EQU   ACCTDATA+4                                               02077000
ACBYTE   EQU   ACCTDATA+6                                               02078000
BUFACTN  EQU   ACCTDATA+15                                              02079000
PROCDATA EQU   0                                                        02080000
PRNEXTL1 EQU   PROCDATA                                                 02081000
PRLINEL1 EQU   PROCDATA+4                                               02082000
PRBYTE1  EQU   PROCDATA+6                                               02083000
BUFPROC  EQU   PROCDATA+17                                              02084000
PRCONST1 EQU   PROCDATA+25                                              02085000
PRSIZE   EQU   PROCDATA+37                                              02086000
PRCONST2 EQU   PROCDATA+42                                              02087000
PRCONST3 EQU   PROCDATA+45                                              02088000
UNITNAME EQU   PROCDATA+56                                              02089000
MOFFSET  EQU   0                                                        02090000
PTRMASK1 EQU   0                                                        02091000
SGNO1    EQU   PTRMASK1+4                                               02092000
DCBOFLAG EQU   DCBOFLGS                                                 02093000
ATTRBIN  EQU   UADSINST                                                 02094000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02095000
@NM00054 EQU   DCBOFLGS                                                 02096000
@NM00050 EQU   PTRMASK1                                                 02097000
@NM00047 EQU   PROCDATA+8                                               02098000
@NM00046 EQU   ACCTDATA+8                                               02099000
@NM00045 EQU   PWDDATA+21                                               02100000
@NM00044 EQU   PWDDATA+8                                                02101000
@NM00043 EQU   PERFLIN2+8                                               02102000
@NM00042 EQU   PERFLIN1+41                                              02103000
@NM00041 EQU   PERFLIN1+8                                               02104000
@NM00040 EQU   USIDLIN6+8                                               02105000
@NM00039 EQU   USIDLIN5+8                                               02106000
@NM00038 EQU   USIDLIN4+8                                               02107000
@NM00037 EQU   USIDLIN3+8                                               02108000
@NM00036 EQU   USIDLIN2+58                                              02109000
@NM00035 EQU   USIDLIN2+8                                               02110000
@NM00034 EQU   USIDLIN1+68                                              02111000
@NM00033 EQU   USIDLIN1+59                                              02112000
@NM00032 EQU   USIDLIN1+52                                              02113000
@NM00031 EQU   USIDLIN1+44                                              02114000
@NM00030 EQU   USIDLIN1+8                                               02115000
@NM00029 EQU   @NM00028                                                 02116000
@NM00027 EQU   ACIOPARM+21                                              02117000
@NM00026 EQU   ACIOPARM+20                                              02118000
@NM00025 EQU   ACIOPARM+16                                              02119000
@NM00024 EQU   ACIOPARM+8                                               02120000
@NM00023 EQU   @NM00021                                                 02121000
@NM00022 EQU   @NM00021                                                 02122000
@NM00020 EQU   @NM00019                                                 02123000
@NM00018 EQU   ACCTPL+16                                                02124000
@NM00017 EQU   ACCTPL+12                                                02125000
@NM00016 EQU   ACCTPL                                                   02126000
UPTPREFL EQU   UPT+23                                                   02127000
@NM00015 EQU   UPT+15                                                   02128000
UPTLDEL  EQU   UPT+14                                                   02129000
UPTCDEL  EQU   UPT+13                                                   02130000
UPTWTP   EQU   UPTSWS                                                   02131000
UPTMODE  EQU   UPTSWS                                                   02132000
UPTALD   EQU   UPTSWS                                                   02133000
UPTPAUS  EQU   UPTSWS                                                   02134000
UPTNCOM  EQU   UPTSWS                                                   02135000
UPTMID   EQU   UPTSWS                                                   02136000
UPTNPRM  EQU   UPTSWS                                                   02137000
UPTRCVR  EQU   UPTSWS                                                   02138000
UPTUSER  EQU   UPT+2                                                    02139000
@NM00014 EQU   UPT                                                      02140000
IOPLECB  EQU   IOPL+8                                                   02141000
IOPLECT  EQU   IOPL+4                                                   02142000
IOPLUPT  EQU   IOPL                                                     02143000
@NM00013 EQU   DROBD+12                                                 02144000
@NM00012 EQU   DROBD+1                                                  02145000
UADSRCTR EQU   DROBD                                                    02146000
UADSADRF EQU   DNOBD+4                                                  02147000
@NM00011 EQU   DNOBD+1                                                  02148000
UADSACTR EQU   DNOBD                                                    02149000
@NM00010 EQU   DPOBD+1                                                  02150000
UADSPCTR EQU   DPOBD                                                    02151000
@NM00009 EQU   DROB+4                                                   02152000
@NM00008 EQU   DROB                                                     02153000
@NM00007 EQU   DNOB                                                     02154000
@NM00006 EQU   DPOB                                                     02155000
PFLG01   EQU   DPOB                                                     02156000
@NM00005 EQU   DHED+44                                                  02157000
UADSSOUT EQU   DHED+43                                                  02158000
UADSSUBM EQU   DHED+42                                                  02159000
UADSSUBC EQU   DHED+41                                                  02160000
UADSSUBH EQU   DHED+40                                                  02161000
@NM00004 EQU   UADSATTR                                                 02162000
USATR04  EQU   UADSATTR                                                 02163000
@NM00003 EQU   UADSATTR                                                 02164000
@NM00002 EQU   UADSBN01+1                                               02165000
UADSXUSD EQU   UADSBN01+1                                               02166000
UADSXBLK EQU   UADSBN01+1                                               02167000
UADSNUSP EQU   UADSBN01+1                                               02168000
@NM00001 EQU   UADSBN01                                                 02169000
UADSFSQP EQU   UADSMHDR+2                                               02170000
UADSBLNG EQU   UADSMHDR                                                 02171000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02172000
@RT00084 EQU   DATACHK                                                  02173000
@RT00098 EQU   CLEANUP                                                  02174000
@RT00116 EQU   READOK                                                   02175000
@RT00130 EQU   MPREP                                                    02176000
@RT00135 EQU   DATACHK                                                  02177000
@RC00137 EQU   CLEANUP                                                  02178000
@RT00149 EQU   MORUS                                                    02179000
@RF00149 EQU   PWSRCH                                                   02180000
@RT00169 EQU   MORUS                                                    02181000
@RF00169 EQU   ACSRCH                                                   02182000
@RT00186 EQU   PRSRCH                                                   02183000
@RT00197 EQU   PRLOOP                                                   02184000
@RT00199 EQU   ACLOOP                                                   02185000
@RT00201 EQU   PWLOOP                                                   02186000
@RF00216 EQU   MORUS                                                    02187000
@RF00230 EQU   MORUS                                                    02188000
@RF00249 EQU   MORUS                                                    02189000
@RF00271 EQU   MORUS                                                    02190000
@RT00466 EQU   CLEANUP                                                  02191000
@RC00468 EQU   CLEANUP                                                  02192000
@RF00464 EQU   MORUS                                                    02193000
@RT00476 EQU   CLEANUP                                                  02194000
@ENDDATA EQU   *                                                        02195000
         END   IKJEFA42,(C'PLS1031',0701,78174)                         02196000
