         TITLE 'IKJEFA51 - ACCOUNT / READ ROUTINE                      *00001000
                        '                                               00002000
IKJEFA51 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA51  75.006'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          ACIOPTR=REG1;                /* INITIALIZE PTR TO READ  0018 00022000
*                                          PARAMETER BLOCK           */ 00023000
         LR    ACIOPTR,REG1                                        0018 00024000
*          DCBREG=ACIODCBA;             /* LOAD DCB BASE REGISTER    */ 00025000
         SLR   DCBREG,DCBREG                                       0019 00026000
         ICM   DCBREG,7,ACIODCBA(ACIOPTR)                          0019 00027000
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */ 00028000
*          DYNLFORM(1:INLINLNG)=INLINLFM(1:INLINLNG);              0020 00029000
         L     @10,INLINLNG                                        0020 00030000
         BCTR  @10,0                                               0020 00031000
         EX    @10,@SM00203                                        0020 00032000
*          /* ESTABLISH A BASE REGISTER FOR DCB MAPPING              */ 00033000
*          GEN (USING IHADCB,DCBREG)                               0021 00034000
*           REFS(DCBREG);                                          0021 00035000
         USING IHADCB,DCBREG                                            00036000
*          ACIONMBR=1;                  /* INITIALIZE NUMBER OF MEMBER  00037000
*                                          BLOCKS TO 1               */ 00038000
         MVI   ACIONMBR(ACIOPTR),X'01'                             0022 00039000
*          RFY REG0 RSTD;                                          0023 00040000
*          REG0=LENGTH(BLDLLIST);       /* GET LENGTH OF BLDLLIST    */ 00041000
         LA    REG0,344                                            0024 00042000
*          /* ISSUE O/S GETMAIN MACRO FOR BLDLLIST AND DECB          */ 00043000
*          GEN (GETMAIN ,LV=(REG0),A=BLDLPTR,MF=(E,DYNGTLST))      0025 00044000
*            REFS(REG0,DYNGTLST) SETS(BLDLPTR);                    0025 00045000
         GETMAIN ,LV=(REG0),A=BLDLPTR,MF=(E,DYNGTLST)                   00046000
*          RFY REG0 UNRSTD;                                        0026 00047000
*          /* CHECK RETURN CODE                                      */ 00048000
*          RFY REG15 RSTD;              /* RESTRICT RETURN CODE REG  */ 00049000
*          RETNCODE=REG15;              /* SAVE GETMAIN RETURN CODE  */ 00050000
         LR    RETNCODE,REG15                                      0028 00051000
*          RFY REG15 UNRSTD;            /* RELEASE RETURN CODE REG   */ 00052000
*          IF RETNCODE^=0                                          0030 00053000
*            THEN                       /* GETMAIN FAILED            */ 00054000
         LTR   RETNCODE,RETNCODE                                   0030 00055000
         BZ    @RF00030                                            0030 00056000
*              RETURN CODE(12);         /* RETURN WITH NO SPACE CODE */ 00057000
         L     @13,4(,@13)                                         0031 00058000
         L     @00,@SIZDATD                                        0031 00059000
         LR    @01,@11                                             0031 00060000
         FREEMAIN R,LV=(0),A=(1)                                        00061000
         LA    @15,12                                              0031 00062000
         L     @14,12(,@13)                                        0031 00063000
         LM    @00,@12,20(@13)                                     0031 00064000
         BR    @14                                                 0031 00065000
*          BLDLDATA=BLDLDATA&&BLDLDATA; /* CLEAR BLDL DATA AREA      */ 00066000
@RF00030 L     @10,BLDLPTR                                         0032 00067000
         XC    BLDLDATA(144,@10),BLDLDATA(@10)                     0032 00068000
*          REG1=ADDR(RDDECB);           /* GET ADDRESS OF DECB       */ 00069000
         LA    REG1,RDDECB(,@10)                                   0033 00070000
*          GEN (MVC 0(DECBLN,REG1),INLINRD)                        0034 00071000
*            REFS(INLINRD,DECBLN,REG1) SETS(RDDECB);               0034 00072000
         MVC 0(DECBLN,REG1),INLINRD                                     00073000
*          ACIOLINK=BLDLPTR;            /* INIT. ANCHOR OF BLDL CHAIN*/ 00074000
         L     @10,BLDLPTR                                         0035 00075000
         ST    @10,ACIOLINK(,ACIOPTR)                              0035 00076000
*          /* HAVE DIRECTORY OPERATIONS BEEN REQUESTED ?             */ 00077000
*          IF ACIOFL03='1'B                                        0036 00078000
*            THEN                       /* UADS DIRECTORY IS NEEDED  */ 00079000
         TM    ACIOFL03(ACIOPTR),B'00100000'                       0036 00080000
         BO    @RT00036                                            0036 00081000
*              GO TO IKJADIRC;          /* GO TO DIRECTORY HANDLER   */ 00082000
*          /* WAS A MEMBER NAME OR A BLDL ENTRY PROVIDED             */ 00083000
*          IF ACIOFL02='0'B                                        0038 00084000
*            THEN                       /* ACIOMPTR PTS TO MEMBERNAME*/ 00085000
         TM    ACIOFL02(ACIOPTR),B'01000000'                       0038 00086000
         BNZ   @RF00038                                            0038 00087000
*              MEMBRNAM=MEMNAME;        /* PICK UP MEMBER NAME       */ 00088000
         L     @10,ACIOMPTR(,ACIOPTR)                              0039 00089000
         MVC   MEMBRNAM(8),MEMNAME(@10)                            0039 00090000
*            ELSE                       /* ACIOMPTR PTS TO BLDL LIST */ 00091000
*              MEMBRNAM=ACIOMPTR->BLDLNAME(1);                     0040 00092000
         B     @RC00038                                            0040 00093000
@RF00038 L     @10,ACIOMPTR(,ACIOPTR)                              0040 00094000
         MVC   MEMBRNAM(8),BLDLNAME(@10)                           0040 00095000
*IKJALSET: /* CTL. PASSED HERE AFTER INITIAL DIRECTORY READ ALSO     */ 00096000
*          USERIDLN=8;                  /* INIT'LZE USRID LNTH TO MAX*/ 00097000
@RC00038 DS    0H                                                  0041 00098000
IKJALSET LA    USERIDLN,8                                          0041 00099000
*          DO WHILE MEMBRNAM(USERIDLN)=' ';/* CHECK FOR A NON BLANK  */ 00100000
         B     @DE00042                                            0042 00101000
@DL00042 DS    0H                                                  0043 00102000
*            USERIDLN=USERIDLN-1;       /* DECREMENT LENGTH BY ONE   */ 00103000
         BCTR  USERIDLN,0                                          0043 00104000
*            END;                                                  0044 00105000
@DE00042 LA    @10,MEMBRNAM-1(USERIDLN)                            0044 00106000
         CLI   0(@10),C' '                                         0044 00107000
         BE    @DL00042                                            0044 00108000
*          USERIDLN=USERIDLN-1;         /* POINT TO INDEX BYTE       */ 00109000
         BCTR  USERIDLN,0                                          0045 00110000
*          /* THE FOLLOWING SEQUENCE WILL DO BLDLS ON THE MEMBER NAME*/ 00111000
*          /* WITH THE 'INDEX' BYTE INCREMENTED BY ONE UNTIL A       */ 00112000
*          /* 'NOT FOUND' RESPONSE IS RECEIVED.  UPON EXIT, 'NMBR'   */ 00113000
*          /* WILL REFLECT THE TOTAL NUMBER OF MEMBER BLOCKS WHICH   */ 00114000
*          /* EXIST FOR THIS USERID AND 'ACIOLINK' WILL POINT TO A   */ 00115000
*          /* CHAIN OF BLDL ENTRIES, ONE FOR EACH MEMBER THUS FOUND. */ 00116000
*          NUMOFENT=10;                 /* MAXIMUM OF TEN ENTRIES    */ 00117000
         L     @10,BLDLPTR                                         0046 00118000
         MVC   NUMOFENT(2,@10),@CH00080                            0046 00119000
*          ENTLNGTH=LENGTH(BLDLENTY);   /* LENGTH = 14 BYTES         */ 00120000
         MVC   ENTLNGTH(2,@10),@CH00081                            0047 00121000
*          DO I=1 TO 10 ;               /* INIT EACH MEMBER NAME     */ 00122000
         LA    I,1                                                 0048 00123000
@DL00048 DS    0H                                                  0049 00124000
*            BLDLNAME(I)=MEMBRNAM;      /* GET BASE MEMBER NAME      */ 00125000
         L     @10,BLDLPTR                                         0049 00126000
         LR    @05,I                                               0049 00127000
         MH    @05,@CH00081                                        0049 00128000
         ST    @05,@TF00001                                        0049 00129000
         ALR   @05,@10                                             0049 00130000
         AL    @05,@CF00205                                        0049 00131000
         MVC   BLDLNAME-4(8,@05),MEMBRNAM                          0049 00132000
*            INDEXPTR=USERIDLN+ADDR(BLDLNAME(I)); /* POINT TO 'INDEX'*/ 00133000
         L     INDEXPTR,@TF00001                                   0050 00134000
         AL    @10,@CF00205                                        0050 00135000
         LA    INDEXPTR,BLDLNAME-4(INDEXPTR,@10)                   0050 00136000
         ALR   INDEXPTR,USERIDLN                                   0050 00137000
*            SYSINDEX=I+239;            /* BUMP INDEX                */ 00138000
         LA    @10,239                                             0051 00139000
         ALR   @10,I                                               0051 00140000
         STC   @10,SYSINDEX(,INDEXPTR)                             0051 00141000
*            END;                                                  0052 00142000
         AH    I,@CH00032                                          0052 00143000
         CH    I,@CH00080                                          0052 00144000
         BNH   @DL00048                                            0052 00145000
*          /* NOW, ISSUE BLDL MACRO TO SEE IF THIS MEMBERNAME EXISTS */ 00146000
*          RFY REG0 RSTD;                                          0053 00147000
*          REG0=BLDLPTR;                /* GET ADDRESS OF BLDL LIST  */ 00148000
         L     REG0,BLDLPTR                                        0054 00149000
*          GEN (BLDL (DCBREG),(0))                                 0055 00150000
*           REFS(DCBREG,REG0);                                     0055 00151000
         BLDL (DCBREG),(0)                                              00152000
*          RFY REG0 UNRSTD;                                        0056 00153000
*          RFY REG15 RSTD;              /* RESTRICT RETURN CODE REG  */ 00154000
*          BLDLRTCD=REG15;              /* SAVE BLDL RETURN CODE     */ 00155000
         LR    BLDLRTCD,REG15                                      0058 00156000
*          RFY REG15 UNRSTD;            /* RELEASE RETURN CODE REG   */ 00157000
*          IF BLDLRTCD>=8               /* CHECK RETURN CODE         */ 00158000
*            THEN                       /* BLDL HAD AN ERROR         */ 00159000
         CH    BLDLRTCD,@CH00055                                   0060 00160000
         BL    @RF00060                                            0060 00161000
*              RETURN CODE(8);          /* RETURN WITH BLDL ERROR COD*/ 00162000
         L     @13,4(,@13)                                         0061 00163000
         L     @00,@SIZDATD                                        0061 00164000
         LR    @01,@11                                             0061 00165000
         FREEMAIN R,LV=(0),A=(1)                                        00166000
         LA    @15,8                                               0061 00167000
         L     @14,12(,@13)                                        0061 00168000
         LM    @00,@12,20(@13)                                     0061 00169000
         BR    @14                                                 0061 00170000
*          IF R(1)=0                    /* WAS FIRST MEMBER FOUND?   */ 00171000
*            THEN                       /* NO,                       */ 00172000
@RF00060 L     @10,BLDLPTR                                         0062 00173000
         CLI   R(@10),0                                            0062 00174000
         BNE   @RF00062                                            0062 00175000
*              RETURN CODE(4);          /* RETURN WITH NOT FOUND CODE*/ 00176000
         L     @13,4(,@13)                                         0063 00177000
         L     @00,@SIZDATD                                        0063 00178000
         LR    @01,@11                                             0063 00179000
         FREEMAIN R,LV=(0),A=(1)                                        00180000
         LA    @15,4                                               0063 00181000
         L     @14,12(,@13)                                        0063 00182000
         LM    @00,@12,20(@13)                                     0063 00183000
         BR    @14                                                 0063 00184000
*          DO WHILE R(ACIONMBR)^=0;     /* SCAN BLDL LIST FOR MEMBERS*/ 00185000
@RF00062 B     @DE00064                                            0064 00186000
@DL00064 DS    0H                                                  0065 00187000
*            ACIONMBR=ACIONMBR+1;       /* COUNT MEMBER              */ 00188000
         LA    @10,1                                               0065 00189000
         SLR   @07,@07                                             0065 00190000
         IC    @07,ACIONMBR(,ACIOPTR)                              0065 00191000
         ALR   @10,@07                                             0065 00192000
         STC   @10,ACIONMBR(,ACIOPTR)                              0065 00193000
*            END;                                                  0066 00194000
@DE00064 SLR   @10,@10                                             0066 00195000
         IC    @10,ACIONMBR(,ACIOPTR)                              0066 00196000
         LR    @07,@10                                             0066 00197000
         MH    @07,@CH00081                                        0066 00198000
         L     @03,BLDLPTR                                         0066 00199000
         SLR   @00,@00                                             0066 00200000
         IC    @00,R-14(@07,@03)                                   0066 00201000
         CH    @00,@CH00166                                        0066 00202000
         BNE   @DL00064                                            0066 00203000
*          ACIONMBR=ACIONMBR-1;         /* DECREMENT MEMBER COUNT    */ 00204000
         BCTR  @10,0                                               0067 00205000
         STC   @10,ACIONMBR(,ACIOPTR)                              0067 00206000
*          /* 'ACIONMBR' AT THIS POINT PROPERLY REFLECTS THE NUMBER  */ 00207000
*          /* OF MEMBER BLOCKS TO BE READ FOR THE GIVEN USERID.  THIS*/ 00208000
*          /* NUMBER IS NOW UTILIZED IN COMPUTING THE SIZE OF THE STG*/ 00209000
*          /* NECESSARY TO HOLD ALL THE REQUESTED MEMBER BLOCKS.     */ 00210000
*          /* WAS A SINGLE PHYSICAL MEMBER READ REQUESTED            */ 00211000
*          IF ACIOFL01='1'B                                        0068 00212000
*            THEN                       /* SINGLE MEMBER I/O DESIRED */ 00213000
         TM    ACIOFL01(ACIOPTR),B'10000000'                       0068 00214000
         BNO   @RF00068                                            0068 00215000
*              ACIONMBR=1;              /* SET NUMBER OF BLOCKS TO 1 */ 00216000
         MVI   ACIONMBR(ACIOPTR),X'01'                             0069 00217000
*          RFY REG0 RSTD;                                          0070 00218000
@RF00068 DS    0H                                                  0071 00219000
*          REG0=DCBBLKSI*ACIONMBR;      /* LENGTH VALUE FOR GETMAIN =   00220000
*                                          BLKSIZE FROM UADS DCB*NMBR*/ 00221000
         LH    @10,DCBBLKSI                                        0071 00222000
         SLR   @05,@05                                             0071 00223000
         IC    @05,ACIONMBR(,ACIOPTR)                              0071 00224000
         MR    @04,@10                                             0071 00225000
         LR    REG0,@05                                            0071 00226000
*          /* SEE IF ROOM FOR A NEW MEMBER IS WANTED (ADD-AUGMENT)   */ 00227000
*          IF ACIOFL04='1'B                                        0072 00228000
*            THEN                       /* SPACE FOR ONE EXTRA WANTED*/ 00229000
         TM    ACIOFL04(ACIOPTR),B'00010000'                       0072 00230000
         BNO   @RF00072                                            0072 00231000
*              REG0=REG0+DCBBLKSI;      /* ADD 1 MORE BLOCK LENGTH   */ 00232000
         ALR   REG0,@10                                            0073 00233000
*          FREELVAL=REG0;               /* SAVE LENGTH OF GETMAIN    */ 00234000
@RF00072 ST    REG0,FREELVAL                                       0074 00235000
*          /* ISSUE O/S GETMAIN MACRO FOR UADS INPUT BUFFER          */ 00236000
*          GEN (GETMAIN ,LV=(REG0),A=ANSRPTR,MF=(E,DYNGTLST))      0075 00237000
*            REFS(REG0,DYNGTLST) SETS(ANSRPTR);                    0075 00238000
         GETMAIN ,LV=(REG0),A=ANSRPTR,MF=(E,DYNGTLST)                   00239000
*          RFY REG0 UNRSTD;                                        0076 00240000
*          /* CHECK RETURN CODE                                      */ 00241000
*          RFY REG15 RSTD;              /* RESTRICT RETURN CODE REG  */ 00242000
*          RETNCODE=REG15;              /* SAVE GETMAIN RETURN CODE  */ 00243000
         LR    RETNCODE,REG15                                      0078 00244000
*          RFY REG15 UNRSTD;            /* RELEASE RETURN CODE REG   */ 00245000
*          IF RETNCODE^=0                                          0080 00246000
*            THEN                       /* GETMAIN FAILED            */ 00247000
         LTR   RETNCODE,RETNCODE                                   0080 00248000
         BZ    @RF00080                                            0080 00249000
*              RETURN CODE(12);         /* RETURN WITH NO SPACE CODE */ 00250000
         L     @13,4(,@13)                                         0081 00251000
         L     @00,@SIZDATD                                        0081 00252000
         LR    @01,@11                                             0081 00253000
         FREEMAIN R,LV=(0),A=(1)                                        00254000
         LA    @15,12                                              0081 00255000
         L     @14,12(,@13)                                        0081 00256000
         LM    @00,@12,20(@13)                                     0081 00257000
         BR    @14                                                 0081 00258000
*          ACIOBUFR=ANSRPTR;            /* SET PTR TO INPUT BUFFER   */ 00259000
@RF00080 L     @10,ANSRPTR                                         0082 00260000
         STCM  @10,7,ACIOBUFR(ACIOPTR)                             0082 00261000
*          SYNADSAV=DCBSYNAD;           /* SAVE CALLER'S SYNAD ADDR  */ 00262000
         MVC   SYNADSAV(4),DCBSYNAD                                0083 00263000
*          ERRSWTCH='00'X;              /* INIT ERROR SW = 'NO ERROR'*/ 00264000
         MVI   ERRSWTCH,X'00'                                      0084 00265000
*          DCBSYNAD(2:4)=ADDR(IKJASYND);/* SET SYNAD EXIT ADDR       */ 00266000
         LA    @07,IKJASYND                                        0085 00267000
         STCM  @07,7,DCBSYNAD+1                                    0085 00268000
*          RFY (BUFREG,REG0) RSTD;                                 0086 00269000
*          BUFREG=ACIOBUFR;             /* PTR TO FIRST INPUT BUFFER */ 00270000
         LR    BUFREG,@10                                          0087 00271000
*          /* THE FOLLOWING ITERATIVE DO-GROUP EXECUTES A FIND, READ,*/ 00272000
*          /* AND CHECK SEQUENCE UNTIL ALL REQUESTED MEMBER BLOCKS   */ 00273000
*          /* HAVE BEEN ACQUIRED.                                    */ 00274000
*          DO I=1 TO ACIONMBR;                                     0088 00275000
         LA    I,1                                                 0088 00276000
         B     @DE00088                                            0088 00277000
@DL00088 DS    0H                                                  0089 00278000
*            REG0=ADDR(BLDLTTRK(I));    /* POINT TO NEXT TTR         */ 00279000
         LR    @10,I                                               0089 00280000
         MH    @10,@CH00081                                        0089 00281000
         L     @15,BLDLPTR                                         0089 00282000
         AL    @15,@CF00206                                        0089 00283000
         LA    REG0,BLDLTTRK-12(@10,@15)                           0089 00284000
*            /* ISSUE OS/360 FIND MACRO, TYPE C, TO FIND USERID      */ 00285000
*            GEN (FIND  (DCBREG),(REG0),C)                         0090 00286000
*             REFS(DCBREG,REG0);                                   0090 00287000
         FIND  (DCBREG),(REG0),C                                        00288000
*            /* READ A MEMBER BLOCK                                  */ 00289000
*            REG1=ADDR(RDDECB(I));      /* GET ADDRESS OF DECB       */ 00290000
         LR    @10,I                                               0091 00291000
         MH    @10,@CH00090                                        0091 00292000
         L     REG1,BLDLPTR                                        0091 00293000
         LA    REG1,RDDECB-20(@10,REG1)                            0091 00294000
*            GEN (READ  (1),SF,(DCBREG),(BUFREG),,MF=E)            0092 00295000
*             REFS(REG1,RDDECB,DCBREG,BUFREG);                     0092 00296000
         READ  (1),SF,(DCBREG),(BUFREG),,MF=E                           00297000
*            /* CHECK FOR COMPLETION                                 */ 00298000
*            GEN (CHECK (1))            /* SYNAD ENTERED IF ERROR    */ 00299000
*             REFS(REG1,RDDECB) FLOWS(IKJASYND);                   0093 00300000
         CHECK (1)                                                      00301000
*            /* DID AN I/O ERROR OCCUR                               */ 00302000
*            IF ERRSWTCH^='00'X         /* SWITCH SET BY SYNAD RTNE  */ 00303000
*              THEN                     /* AN I/O ERROR OCCURRED     */ 00304000
         CLI   ERRSWTCH,X'00'                                      0094 00305000
         BE    @RF00094                                            0094 00306000
*                DO;                                               0095 00307000
*                DCBSYNAD(2:4)=SYNADSAV(2:4); /* RESTORE SYNAD       */ 00308000
         MVC   DCBSYNAD+1(3),SYNADSAV+1                            0096 00309000
*                IF ERRSWTCH='01'X      /* DECIDE ON RETURN CODE     */ 00310000
*                  THEN                 /* SYNAD WORKED OK           */ 00311000
         CLI   ERRSWTCH,X'01'                                      0097 00312000
         BNE   @RF00097                                            0097 00313000
*                    RETNCODE=20;       /* CODE = I/O ERROR WITH MSG */ 00314000
         LA    RETNCODE,20                                         0098 00315000
*                  ELSE                 /* PUTLINE OR SYNADRLS FAILED*/ 00316000
*                    RETNCODE=28;       /* CODE = I/O ERR, NO MSG    */ 00317000
         B     @RC00097                                            0099 00318000
@RF00097 LA    RETNCODE,28                                         0099 00319000
*                GO TO IKJAEFAL;        /* GO TO RELEASE STG AND EXIT*/ 00320000
         B     IKJAEFAL                                            0100 00321000
*                END;                                              0101 00322000
*            BUFREG=BUFREG+DCBBLKSI;    /* STEP BUFFER POINTER       */ 00323000
@RF00094 AH    BUFREG,DCBBLKSI                                     0102 00324000
*          END;                         /* LOOP UNTIL COUNTREG HITS 0*/ 00325000
         AH    I,@CH00032                                          0103 00326000
@DE00088 SLR   @10,@10                                             0103 00327000
         IC    @10,ACIONMBR(,ACIOPTR)                              0103 00328000
         CR    I,@10                                               0103 00329000
         BNH   @DL00088                                            0103 00330000
*          RFY (BUFREG,REG0) UNRSTD;                               0104 00331000
*          DCBSYNAD(2:4)=SYNADSAV(2:4); /* RESTORE SYNAD PTR         */ 00332000
         MVC   DCBSYNAD+1(3),SYNADSAV+1                            0105 00333000
*          RETNCODE=0;                  /* INDICATE SUCCESSFUL COM-     00334000
*                                          PLETION TO CALLER         */ 00335000
         SLR   RETNCODE,RETNCODE                                   0106 00336000
*          RETURN CODE(RETNCODE);       /* LEAVE                     */ 00337000
         L     @13,4(,@13)                                         0107 00338000
         L     @00,@SIZDATD                                        0107 00339000
         LR    @01,@11                                             0107 00340000
         FREEMAIN R,LV=(0),A=(1)                                        00341000
         LR    @15,@07                                             0107 00342000
         L     @14,12(,@13)                                        0107 00343000
         LM    @00,@12,20(@13)                                     0107 00344000
         BR    @14                                                 0107 00345000
*IKJADIRC: /* CTL. PASSED HERE IF DIRECTORY HANDLING IS NEEDED       */ 00346000
*          /* SEE IF A DIRECTORY ONLY READ WAS REQUESTED             */ 00347000
*          IF ACIOFL06='1'B                                        0108 00348000
*            THEN                       /* READ DIRECTORY ONLY       */ 00349000
IKJADIRC TM    ACIOFL06(ACIOPTR),B'00000100'                       0108 00350000
         BO    @RT00108                                            0108 00351000
*              GO TO IKJADRRD;          /* GO TO READ A DIRECTORY BLK*/ 00352000
*          /* IS THIS THE FIRST REQUEST FOR DIRECTORY OPERATIONS ?   */ 00353000
*          IF ACIOMPTR^=0                                          0110 00354000
*            THEN                       /* NOT 1ST TIME THROUGH      */ 00355000
         L     @10,ACIOMPTR(,ACIOPTR)                              0110 00356000
         LTR   @10,@10                                             0110 00357000
         BNZ   @RT00110                                            0110 00358000
*              GO TO IKJAEOFT;          /* SKIP INITIAL READ OPERAT'N*/ 00359000
*IKJADRRD: /* CTL. PASSED OR DROPPED HERE TO READ A UADS DIRECTRY BLK*/ 00360000
*          DCBREG=ADDR(DIRDCB);         /* POINT TO BSAM DIRECTRY DCB*/ 00361000
IKJADRRD L     @10,ACIODRCT(,ACIOPTR)                              0112 00362000
         LR    DCBREG,@10                                          0112 00363000
*          SYNADSAV=DCBSYNAD;           /* SAVE CALLER'S SYNAD ADDR  */ 00364000
         MVC   SYNADSAV(4),DCBSYNAD                                0113 00365000
*          ERRSWTCH='00'X;              /* INIT ERROR SW = 'NO ERROR'*/ 00366000
         MVI   ERRSWTCH,X'00'                                      0114 00367000
*          DCBSYNAD(2:4)=ADDR(IKJASYND);/* SET SYNAD ADDRESS         */ 00368000
         LA    @07,IKJASYND                                        0115 00369000
         STCM  @07,7,DCBSYNAD+1                                    0115 00370000
*          RFY BUFREG RSTD;                                        0116 00371000
*          BUFREG=ADDR(DIRBLOCK);       /* ADDR OF DIRECTORY BUFFER  */ 00372000
         LA    BUFREG,DIRBLOCK(,@10)                               0117 00373000
*          /* READ A DIRECTORY BLOCK                                 */ 00374000
*          GEN (READ  DIRDECB,SF,(DCBREG),(BUFREG),,MF=E)          0118 00375000
*           REFS(DIRDECB,DCBREG,BUFREG);                           0118 00376000
         READ  DIRDECB,SF,(DCBREG),(BUFREG),,MF=E                       00377000
*          RFY BUFREG UNRSTD;                                      0119 00378000
*          /* CHECK FOR COMPLETION                                   */ 00379000
*          GEN (CHECK DIRDECB)          /* SYNAD ENTERED IF ERROR    */ 00380000
*           REFS(DIRDECB) FLOWS(IKJASYND);                         0120 00381000
         CHECK DIRDECB                                                  00382000
*          DCBSYNAD(2:4)=SYNADSAV(2:4); /* RESTORE SYNAD PTR         */ 00383000
         MVC   DCBSYNAD+1(3),SYNADSAV+1                            0121 00384000
*          DCBREG=ACIODCBA;             /* RESTORE DCB BASE REGISTER */ 00385000
         SLR   DCBREG,DCBREG                                       0122 00386000
         ICM   DCBREG,7,ACIODCBA(ACIOPTR)                          0122 00387000
*          /* DID AN I/O ERROR OCCUR ?                               */ 00388000
*          IF ERRSWTCH^='00'X           /* SWITCH SET BY SYNAD RTNE  */ 00389000
*            THEN                       /* AN I/O ERROR OCCURRED     */ 00390000
         CLI   ERRSWTCH,X'00'                                      0123 00391000
         BE    @RF00123                                            0123 00392000
*              DO;                                                 0124 00393000
*              IF ERRSWTCH='01'X        /* ANALYZE SYNAD RESULTS     */ 00394000
*                THEN                   /* SYNAD WORKED OK           */ 00395000
         CLI   ERRSWTCH,X'01'                                      0125 00396000
         BNE   @RF00125                                            0125 00397000
*                  RETNCODE=20;         /* CODE = I/O ERROR WITH MSG */ 00398000
         LA    RETNCODE,20                                         0126 00399000
*                ELSE                   /* PUTLINE OR SYNADRLS FAILED*/ 00400000
*                  RETNCODE=28;         /* CODE = I/O ERROR, NO MSG  */ 00401000
         B     @RC00125                                            0127 00402000
@RF00125 LA    RETNCODE,28                                         0127 00403000
*              RETURN CODE(RETNCODE);   /* RETURN WITH ERROR CODE    */ 00404000
@RC00125 L     @13,4(,@13)                                         0128 00405000
         L     @00,@SIZDATD                                        0128 00406000
         LR    @01,@11                                             0128 00407000
         FREEMAIN R,LV=(0),A=(1)                                        00408000
         LR    @15,@07                                             0128 00409000
         L     @14,12(,@13)                                        0128 00410000
         LM    @00,@12,20(@13)                                     0128 00411000
         BR    @14                                                 0128 00412000
*              END;                                                0129 00413000
*          /* REQUESTED TO READ DIRECTORY ONLY ?                     */ 00414000
*          IF ACIOFL06='1'B                                        0130 00415000
*            THEN                       /* READ DIRECTORY ONLY       */ 00416000
@RF00123 TM    ACIOFL06(ACIOPTR),B'00000100'                       0130 00417000
         BNO   @RF00130                                            0130 00418000
*              RETURN CODE(0);          /* RETURN WITH SUCESSFUL CODE*/ 00419000
         L     @13,4(,@13)                                         0131 00420000
         L     @00,@SIZDATD                                        0131 00421000
         LR    @01,@11                                             0131 00422000
         FREEMAIN R,LV=(0),A=(1)                                        00423000
         SLR   @15,@15                                             0131 00424000
         L     @14,12(,@13)                                        0131 00425000
         LM    @00,@12,20(@13)                                     0131 00426000
         BR    @14                                                 0131 00427000
*          IF ACIOMPTR^=0               /* WAS THIS THE FIRST READ?  */ 00428000
*            THEN                       /* NO - NOT FIRST TIME THRU  */ 00429000
@RF00130 L     @10,ACIOMPTR(,ACIOPTR)                              0132 00430000
         LTR   @10,@10                                             0132 00431000
         BNZ   @RT00132                                            0132 00432000
*              GO TO IKJAEXTT;          /* GO TEST FOR MORE EXTNSIONS*/ 00433000
*          ACIOMPTR=ADDR(DIRENTRX);     /* POINT TO 1ST ENTRY IN BLK */ 00434000
         L     @10,ACIODRCT(,ACIOPTR)                              0134 00435000
         LA    @10,DIRENTRX(,@10)                                  0134 00436000
         ST    @10,ACIOMPTR(,ACIOPTR)                              0134 00437000
*IKJAEOFT: /* CTL. PASSED OR DROPPED HERE TO TEST FOR LAST ENTRY     */ 00438000
*          IF MEMNAME='FFFFFFFFFFFFFFFF'X                          0135 00439000
*            THEN                       /* END-OF-DIRECTORY - LEAVE  */ 00440000
IKJAEOFT L     @10,ACIOMPTR(,ACIOPTR)                              0135 00441000
         CLC   MEMNAME(8,@10),@CB00185                             0135 00442000
         BNE   @RF00135                                            0135 00443000
*              RETURN CODE(24);         /* RETURN WITH ERROR CODE    */ 00444000
         L     @13,4(,@13)                                         0136 00445000
         L     @00,@SIZDATD                                        0136 00446000
         LR    @01,@11                                             0136 00447000
         FREEMAIN R,LV=(0),A=(1)                                        00448000
         LA    @15,24                                              0136 00449000
         L     @14,12(,@13)                                        0136 00450000
         LM    @00,@12,20(@13)                                     0136 00451000
         BR    @14                                                 0136 00452000
*          MEMBRNAM=MEMNAME;            /* SAVE INITIAL MEMBER NAME  */ 00453000
@RF00135 L     @10,ACIOMPTR(,ACIOPTR)                              0137 00454000
         MVC   MEMBRNAM(8),MEMNAME(@10)                            0137 00455000
*BUMP:     /* LOOP TO FIND NEXT USERID                               */ 00456000
*          ACIOMPTR=ACIOMPTR+           /* BUMP MEMBER NAME POINTER  */ 00457000
*            LENGTH(DIRENTRY)+(C&'1F'X)*2;/* LENGTH OF ENTRY         */ 00458000
BUMP     L     @10,ACIOMPTR(,ACIOPTR)                              0138 00459000
         LA    @07,12                                              0138 00460000
         ALR   @07,@10                                             0138 00461000
         LA    @03,31                                              0138 00462000
         SLR   @00,@00                                             0138 00463000
         IC    @00,C(,@10)                                         0138 00464000
         NR    @03,@00                                             0138 00465000
         ALR   @03,@03                                             0138 00466000
         ALR   @07,@03                                             0138 00467000
         ST    @07,ACIOMPTR(,ACIOPTR)                              0138 00468000
*          /* IS THIS THE END OF THE BLOCK ?                         */ 00469000
*          IF ACIOMPTR>=ADDR(DIRBLOCK)+DIRBLEXT                    0139 00470000
*            THEN                       /* TIME TO GET ANOTHER BLOCK */ 00471000
         L     @10,ACIODRCT(,ACIOPTR)                              0139 00472000
         LA    @03,DIRBLOCK(,@10)                                  0139 00473000
         AH    @03,DIRBLEXT(,@10)                                  0139 00474000
         CR    @07,@03                                             0139 00475000
         BL    @RF00139                                            0139 00476000
*              DO;                                                 0140 00477000
*              ACIOMPTR=ADDR(DIRENTRX); /* RESET PTR TO FIRST ENTRY  */ 00478000
         LA    @10,DIRENTRX(,@10)                                  0141 00479000
         ST    @10,ACIOMPTR(,ACIOPTR)                              0141 00480000
*              GO TO IKJADRRD;          /* GO TO READ NEXT DRECTRY BL*/ 00481000
         B     IKJADRRD                                            0142 00482000
*              END;                                                0143 00483000
*            ELSE                       /* NOT AT THE END YET        */ 00484000
*IKJAEXTT:     DO;                      /* CHECK AGAIN FOR LAST ENTRY*/ 00485000
@RF00139 DS    0H                                                  0144 00486000
IKJAEXTT DS    0H                                                  0145 00487000
*              IF MEMNAME='FFFFFFFFFFFFFFFF'X                      0145 00488000
*                THEN                   /* END-OF-DIRECTORY          */ 00489000
         L     @10,ACIOMPTR(,ACIOPTR)                              0145 00490000
         CLC   MEMNAME(8,@10),@CB00185                             0145 00491000
         BE    @RT00145                                            0145 00492000
*                  GOTO IKJALSET;       /* GO TO ISSUE BLDL          */ 00493000
*              USERIDLN=8;              /* INIT'LZE USRID LNTH TO MAX*/ 00494000
         LA    USERIDLN,8                                          0147 00495000
*              DO WHILE MEMNAME(USERIDLN)=' ';/* TEST FOR NONBLANK   */ 00496000
         B     @DE00148                                            0148 00497000
@DL00148 DS    0H                                                  0149 00498000
*                USERIDLN=USERIDLN-1;   /* DECREMENT LENGTH BY ONE   */ 00499000
         BCTR  USERIDLN,0                                          0149 00500000
*                END;                                              0150 00501000
@DE00148 L     @10,ACIOMPTR(,ACIOPTR)                              0150 00502000
         LR    @07,@10                                             0150 00503000
         ALR   @07,USERIDLN                                        0150 00504000
         AL    @07,@CF00207                                        0150 00505000
         CLI   MEMNAME(@07),C' '                                   0150 00506000
         BE    @DL00148                                            0150 00507000
*              IF MEMNAME(USERIDLN)^='0'/* IS THIS A BASE MEMBER?    */ 00508000
*                THEN                   /* NO, EXTENSION BLOCK       */ 00509000
         ALR   @10,USERIDLN                                        0151 00510000
         AL    @10,@CF00207                                        0151 00511000
         CLI   MEMNAME(@10),C'0'                                   0151 00512000
         BNE   @RT00151                                            0151 00513000
*                  GO TO BUMP;          /* GO BACK TO LOOK AT NEXT 1 */ 00514000
*              END;                                                0153 00515000
*          GO TO IKJALSET;              /* END OF IKJAMNAM - GO SEE IF  00516000
*                                          MORE BLDLS ARE NECESSARY  */ 00517000
         B     IKJALSET                                            0154 00518000
*IKJAEFAL: /* THIS SECTION RELEASES STORAGE ACQUIRED FOR AN IO BUFFER*/ 00519000
*          /* ISSUE O/S FREEMAIN TO RELEASE INPUT BUFFER             */ 00520000
*          GEN (FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST))              0155 00521000
*           REFS(ANSRPTR,DYNFRLST);                                0155 00522000
IKJAEFAL FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST)                           00523000
*          RETURN CODE(RETNCODE);       /* RETURN WITH ERROR CODE    */ 00524000
         L     @13,4(,@13)                                         0156 00525000
         L     @00,@SIZDATD                                        0156 00526000
         LR    @01,@11                                             0156 00527000
         FREEMAIN R,LV=(0),A=(1)                                        00528000
         LR    @15,@07                                             0156 00529000
         L     @14,12(,@13)                                        0156 00530000
         LM    @00,@12,20(@13)                                     0156 00531000
         BR    @14                                                 0156 00532000
*IKJASYND: /* CTL. RECEIVED HERE FROM SYSTEM IF AN I/O ERROR OCCURRED*/ 00533000
*          PROC;                                                   0157 00534000
@EL00001 L     @13,4(,@13)                                         0157 00535000
@EF00001 L     @00,@SIZDATD                                        0157 00536000
         LR    @01,@11                                             0157 00537000
         FREEMAIN R,LV=(0),A=(1)                                        00538000
@ER00001 LM    @14,@12,12(@13)                                     0157 00539000
         BR    @14                                                 0157 00540000
@PB00001 DS    0H                                                  0157 00541000
IKJASYND STM   @14,@12,@SA00002                                    0157 00542000
*          ERRSWTCH='01'X;              /* SET I/O ERROR SWITCH      */ 00543000
         MVI   ERRSWTCH,X'01'                                      0158 00544000
*          /* OBTAIN SYNAD MESSAGE AND SAVE AREA                     */ 00545000
*          GEN (SYNADAF ACSMETH=BPAM);                             0159 00546000
         SYNADAF ACSMETH=BPAM                                           00547000
*          OUTLNDS=OUTLNDS&&OUTLNDS;    /* CLEAR PARAM AREA FOR PUTLN*/ 00548000
         XC    OUTLNDS(24),OUTLNDS                                 0160 00549000
*          OUT1LINK=ADDR(OUT2LINK);     /* INDICATE TWO LEVEL MESSAGE*/ 00550000
         LA    @10,OUT2LINK                                        0161 00551000
         ST    @10,OUT1LINK                                        0161 00552000
*          OUT1SCNT=1;                  /* 1ST LEVEL MSG SEG COUNT =1*/ 00553000
         LA    @10,1                                               0162 00554000
         ST    @10,OUT1SCNT                                        0162 00555000
*          IOM1LN=LENGTH(IOM1);         /* LENGTH OF 1ST LEVEL MSG   */ 00556000
         MVC   IOM1LN(2),@CH00200                                  0163 00557000
*          IOM1OF=0;                    /* OFFSET FOR INSERTION N/A  */ 00558000
         SLR   @03,@03                                             0164 00559000
         STH   @03,IOM1OF                                          0164 00560000
*          IOM1ID=IOMSGID;              /* SUPPLY MESSAGE ID         */ 00561000
         MVC   IOM1ID(9),IOMSGID                                   0165 00562000
*          IOM1MSGN=ACIOMSGN;           /* PLUG IN CALLER'S MSG NO   */ 00563000
         MVC   IOM1MSGN(1),ACIOMSGN(ACIOPTR)                       0166 00564000
*          IOM1TXT=IOMSG1;              /* TEXT OF 1ST LEVEL MESSAGE */ 00565000
         MVC   IOM1TXT(36),IOMSG1                                  0167 00566000
*          OUT1SEG1=ADDR(IOM1);         /* POINT TO MSG IN LINE DESCR*/ 00567000
         LA    @15,IOM1                                            0168 00568000
         ST    @15,OUT1SEG1                                        0168 00569000
*          OUT2SCNT=1;                  /* 2ND LEVEL MSG SEG COUNT =1*/ 00570000
         ST    @10,OUT2SCNT                                        0169 00571000
*          REG1=REG1+20;                /* SET BASE FOR SYNAD INFO   */ 00572000
         AH    REG1,@CH00090                                       0170 00573000
*          IOM2LN=LENGTH(IOM2)+76;      /* 2ND LEVEL LENGTH = CONSTANT  00574000
*                                          INFO LENGTH + SYNAD     0171 00575000
*                                          MSG LENGTH (BYTES 50-125) */ 00576000
         MVC   IOM2LN(2,REG1),@CH00202                             0171 00577000
*          IOM2OF=0;                    /* OFFSET FOR INSERTION = N/A*/ 00578000
         STH   @03,IOM2OF(,REG1)                                   0172 00579000
*          IOM2ID=IOM1ID;               /* GET MSG ID FROM 1ST LEVEL */ 00580000
         MVC   IOM2ID(9,REG1),IOM1ID                               0173 00581000
*          IOM2TXT=IOMSG2;              /* FIXED TEXT FOR 2ND LEVEL  */ 00582000
         MVC   IOM2TXT(17,REG1),IOMSG2                             0174 00583000
*          OUT2SEG1=REG1;               /* POINT TO MSG IN LINE DESCR*/ 00584000
         ST    REG1,OUT2SEG1                                       0175 00585000
*          /* PREPARE PARM LIST FOR PUTLINE MACRO                    */ 00586000
*          IOPLPTR=ADDR(PUTLLIST);      /* SET BASE FOR PARM LIST    */ 00587000
         LA    IOPLPTR,PUTLLIST                                    0176 00588000
*          IOPL=ACIOPUTL->IOPL;         /* 1ST THREE WORDS FROM    0177 00589000
*                                          ACCOUNT PARM LIST         */ 00590000
         SLR   @10,@10                                             0177 00591000
         ICM   @10,7,ACIOPUTL(ACIOPTR)                             0177 00592000
         MVC   IOPL(16,IOPLPTR),IOPL(@10)                          0177 00593000
*          IOPLIOPB=ADDR(DYNPTLST);     /* POINT TO PUTLINE PARN BLK */ 00594000
         LA    @10,DYNPTLST                                        0178 00595000
         ST    @10,IOPLIOPB(,IOPLPTR)                              0178 00596000
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO ERROR MSG        */ 00597000
         L     @10,PTPBPTR(,IOPLPTR)                               0179 00598000
         LA    @06,OUTLNDS                                         0179 00599000
         ST    @06,PTPBOPUT(,@10)                                  0179 00600000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 00601000
*          GEN (PUTLINE ,MF=(E,PUTLLIST))                          0180 00602000
*            REFS(OUTLNDS,DYNPTLST);                               0180 00603000
         PUTLINE ,MF=(E,PUTLLIST)                                       00604000
*          RFY REG15 RSTD;              /* RESTRICT RETURN CODE REG  */ 00605000
*          RETNCODE=REG15;              /* SAVE RETURN CODE          */ 00606000
         LR    RETNCODE,REG15                                      0182 00607000
*          RFY REG15 UNRSTD;            /* RELEASE RETURN CODE REG   */ 00608000
*          IF RETNCODE^=0               /* CHECK RETURN CODE         */ 00609000
*            THEN                       /* PUTLINE EXCEPTION         */ 00610000
         LTR   RETNCODE,RETNCODE                                   0184 00611000
         BZ    @RF00184                                            0184 00612000
*              ERRSWTCH='03'X;          /* UPDATE I/O ERROR SWITCH   */ 00613000
         MVI   ERRSWTCH,X'03'                                      0185 00614000
*          GEN (SYNADRLS);              /* RETURN SYNAD SAVE AREA    */ 00615000
@RF00184 DS    0H                                                  0186 00616000
         SYNADRLS                                                       00617000
*          END IKJASYND;                                           0187 00618000
@EL00002 DS    0H                                                  0187 00619000
@EF00002 DS    0H                                                  0187 00620000
@ER00002 LM    @14,@12,@SA00002                                    0187 00621000
         BR    @14                                                 0187 00622000
*          END IKJEFA51                                            0188 00623000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00624000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 00625000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        * 00626000
*;                                                                 0188 00627000
@DATA    DS    0H                                                       00628000
@CH00166 DC    H'0'                                                     00629000
@CH00032 DC    H'1'                                                     00630000
@CH00055 DC    H'8'                                                     00631000
@CH00080 DC    H'10'                                                    00632000
@CH00081 DC    H'14'                                                    00633000
@CH00090 DC    H'20'                                                    00634000
@CH00200 DC    H'49'                                                    00635000
@CH00202 DC    H'106'                                                   00636000
@SM00203 MVC   DYNLFORM(0),INLINLFM                                     00637000
@DATD    DSECT                                                          00638000
         DS    0F                                                       00639000
@SA00001 DS    18F                                                      00640000
@SAV001  EQU   @SA00001                                                 00641000
@SA00002 DS    15F                                                      00642000
@TF00001 DS    F                                                        00643000
@ZTEMPS  DS    C                                                        00644000
@ZTEMPND EQU   *                                                        00645000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00646000
@TEMPS   EQU   @ZTEMPS                                                  00647000
@L       EQU   @ZLEN                                                    00648000
IKJEFA51 CSECT                                                          00649000
         DS    0F                                                       00650000
@CF00205 DC    F'-10'                                                   00651000
@CF00206 DC    F'-2'                                                    00652000
@CF00207 DC    F'-1'                                                    00653000
@DATD    DSECT                                                          00654000
         DS    0D                                                       00655000
BLDLPTR  DS    A                                                        00656000
MEMBREG  DS    A                                                        00657000
@NM00012 DS    CL8                                                      00658000
         ORG   @NM00012                                                 00659000
ANSRPTR  DS    AL4                                                      00660000
FREELVAL DS    FL4                                                      00661000
         ORG   @NM00012+8                                               00662000
MEMBRNAM DS    CL8                                                      00663000
SYNADSAV DS    CL4                                                      00664000
         ORG   SYNADSAV                                                 00665000
ERRSWTCH DS    CL1                                                      00666000
         ORG   SYNADSAV+4                                               00667000
PUTLLIST DS    CL16                                                     00668000
OUTLNDS  DS    CL24                                                     00669000
         ORG   OUTLNDS                                                  00670000
OUT1LINK DS    AL4                                                      00671000
OUT1SCNT DS    FL4                                                      00672000
OUT1SEG1 DS    AL4                                                      00673000
OUT2LINK DS    AL4                                                      00674000
OUT2SCNT DS    FL4                                                      00675000
OUT2SEG1 DS    AL4                                                      00676000
         ORG   OUTLNDS+24                                               00677000
IOM1     DS    CL49                                                     00678000
         ORG   IOM1                                                     00679000
IOM1LN   DS    FL2                                                      00680000
IOM1OF   DS    FL2                                                      00681000
IOM1ID   DS    CL9                                                      00682000
         ORG   IOM1ID                                                   00683000
@NM00013 DS    CL6                                                      00684000
IOM1MSGN DS    CL1                                                      00685000
         ORG   IOM1+13                                                  00686000
IOM1TXT  DS    CL36                                                     00687000
         ORG   IOM1+49                                                  00688000
IKJEFA51 CSECT                                                          00689000
         DS    0F                                                       00690000
@SIZDATD DC    AL1(1)                                                   00691000
         DC    AL3(@ENDDATD-@DATD)                                      00692000
@SIZ001  EQU   @SIZDATD                                                 00693000
         DS    0D                                                       00694000
@CB00185 DC    X'FFFFFFFFFFFFFFFF'                                      00695000
IOMSGID  DC    CL9'IKJ565X3I'                                           00696000
IOMSG1   DC    CL36' USER ATTRIBUTE DATA SET NOT USABLE+'               00697000
IOMSG2   DC    CL17' I/O SYNAD ERROR '                                  00698000
@DATD    DSECT                                                          00699000
IKJEFA51 CSECT                                                          00700000
INLINLFM DS    0F                                                       00701000
         FREEMAIN V,SP=1,MF=L                                           00702000
         GETMAIN EC,SP=1,MF=L              LENGTH & ANS PTR SET BY E    00703000
         PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                     00704000
         READ  DECB,SF,,,'S',MF=L          DCB & BUF PTR SET BY E FORM  00705000
INLINLNG DC    A(*-INLINLFM)                                            00706000
INLINRD  READ  DECB1,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00707000
         READ  DECB2,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00708000
         READ  DECB3,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00709000
         READ  DECB4,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00710000
         READ  DECB5,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00711000
         READ  DECB6,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00712000
         READ  DECB7,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00713000
         READ  DECB8,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00714000
         READ  DECB9,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00715000
         READ  DECB0,SF,,,'S',MF=L         DCB & BUF PTR SET BY E FORM  00716000
DECBLN   EQU   *-INLINRD                                                00717000
         DCBD  DSORG=PO,DEVD=DA            MAPPING OF BPAM DCB          00718000
@DATD    DSECT                                                          00719000
DYNLFORM DS    0F                                                       00720000
DYNFRLST FREEMAIN V,SP=1,MF=L                                           00721000
DYNGTLST GETMAIN EC,MF=L                   LENGTH & ANS PTR SET BY E    00722000
DYNPTLST PUTLINE ,MF=L                     WILL BE INIT'D FROM INLINPTL 00723000
DYNRDLST READ  DIRDECB,SF,,,'S',MF=L       DCB & BUF PTR SET BY E FORM  00724000
IKJEFA51 CSECT                                                          00725000
         DS   0H                                                        00726000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00727000
@DATD    DSECT                                                          00728000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00729000
@ENDDATD EQU   *                                                        00730000
@DATEND  EQU   *                                                        00731000
IKJEFA51 CSECT                                                          00732000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00733000
@01      EQU   01                                                       00734000
@02      EQU   02                                                       00735000
@03      EQU   03                                                       00736000
@04      EQU   04                                                       00737000
@05      EQU   05                                                       00738000
@06      EQU   06                                                       00739000
@07      EQU   07                                                       00740000
@08      EQU   08                                                       00741000
@09      EQU   09                                                       00742000
@10      EQU   10                                                       00743000
@11      EQU   11                                                       00744000
@12      EQU   12                                                       00745000
@13      EQU   13                                                       00746000
@14      EQU   14                                                       00747000
@15      EQU   15                                                       00748000
@0       EQU   00                                                       00749000
@1       EQU   01                                                       00750000
@2       EQU   02                                                       00751000
@3       EQU   03                                                       00752000
@4       EQU   04                                                       00753000
@5       EQU   05                                                       00754000
@6       EQU   06                                                       00755000
@7       EQU   07                                                       00756000
@8       EQU   08                                                       00757000
@9       EQU   09                                                       00758000
@A       EQU   10                                                       00759000
@B       EQU   11                                                       00760000
@C       EQU   12                                                       00761000
@D       EQU   13                                                       00762000
@E       EQU   14                                                       00763000
@F       EQU   15                                                       00764000
RETNCODE EQU   @07                                                      00765000
I        EQU   @07                                                      00766000
INDEXPTR EQU   @04                                                      00767000
USERIDLN EQU   @03                                                      00768000
BLDLRTCD EQU   @07                                                      00769000
ACIOPTR  EQU   @06                                                      00770000
IOPLPTR  EQU   @02                                                      00771000
REG0     EQU   @00                                                      00772000
REG1     EQU   @01                                                      00773000
DCBREG   EQU   @02                                                      00774000
BUFREG   EQU   @03                                                      00775000
REG15    EQU   @15                                                      00776000
IOPL     EQU   0                                                        00777000
IOPLIOPB EQU   IOPL+12                                                  00778000
PTPB     EQU   0                                                        00779000
PTPBOPUT EQU   PTPB+4                                                   00780000
ACIOPARM EQU   0                                                        00781000
@NM00002 EQU   ACIOPARM                                                 00782000
ACIOFL01 EQU   @NM00002                                                 00783000
ACIOFL02 EQU   @NM00002                                                 00784000
ACIOFL03 EQU   @NM00002                                                 00785000
ACIOFL04 EQU   @NM00002                                                 00786000
ACIOFL06 EQU   @NM00002                                                 00787000
ACIODCBA EQU   ACIOPARM+1                                               00788000
ACIOMPTR EQU   ACIOPARM+4                                               00789000
ACIODRCT EQU   ACIOPARM+8                                               00790000
ACIOLINK EQU   ACIOPARM+12                                              00791000
ACIONMBR EQU   ACIOPARM+16                                              00792000
ACIOBUFR EQU   ACIOPARM+17                                              00793000
ACIOMSGN EQU   ACIOPARM+20                                              00794000
ACIOPUTL EQU   ACIOPARM+21                                              00795000
BLDLLIST EQU   0                                                        00796000
BLDLDATA EQU   BLDLLIST                                                 00797000
NUMOFENT EQU   BLDLDATA                                                 00798000
ENTLNGTH EQU   BLDLDATA+2                                               00799000
BLDLENTY EQU   BLDLDATA+4                                               00800000
BLDLNAME EQU   BLDLENTY                                                 00801000
BLDLTTRK EQU   BLDLENTY+8                                               00802000
R        EQU   BLDLTTRK+2                                               00803000
RDDECB   EQU   BLDLLIST+144                                             00804000
@NM00009 EQU   0                                                        00805000
DIRDCB   EQU   @NM00009                                                 00806000
DIRBLOCK EQU   @NM00009+88                                              00807000
DIRBLEXT EQU   DIRBLOCK                                                 00808000
DIRENTRX EQU   DIRBLOCK+2                                               00809000
DIRENTRY EQU   0                                                        00810000
C        EQU   DIRENTRY+11                                              00811000
SYSINDEX EQU   0                                                        00812000
MEMNAME  EQU   0                                                        00813000
IOM2     EQU   0                                                        00814000
IOM2LN   EQU   IOM2                                                     00815000
IOM2OF   EQU   IOM2+2                                                   00816000
IOM2ID   EQU   IOM2+4                                                   00817000
IOM2TXT  EQU   IOM2+13                                                  00818000
PTPBPTR  EQU   IOPLIOPB                                                 00819000
*                                      START UNREFERENCED COMPONENTS    00820000
@NM00011 EQU   DIRENTRY+8                                               00821000
@NM00010 EQU   DIRENTRY                                                 00822000
@NM00008 EQU   BLDLENTY+13                                              00823000
@NM00007 EQU   BLDLENTY+12                                              00824000
@NM00006 EQU   BLDLTTRK+3                                               00825000
@NM00005 EQU   BLDLTTRK                                                 00826000
@NM00004 EQU   @NM00002                                                 00827000
@NM00003 EQU   @NM00002                                                 00828000
PTPBFLN  EQU   PTPB+8                                                   00829000
@NM00001 EQU   PTPB                                                     00830000
IOPLECB  EQU   IOPL+8                                                   00831000
IOPLECT  EQU   IOPL+4                                                   00832000
IOPLUPT  EQU   IOPL                                                     00833000
*                                      END UNREFERENCED COMPONENTS      00834000
@RT00036 EQU   IKJADIRC                                                 00835000
@RC00097 EQU   IKJAEFAL                                                 00836000
@RT00108 EQU   IKJADRRD                                                 00837000
@RT00110 EQU   IKJAEOFT                                                 00838000
@RT00132 EQU   IKJAEXTT                                                 00839000
@RT00145 EQU   IKJALSET                                                 00840000
@RT00151 EQU   BUMP                                                     00841000
@PB00002 EQU   @EL00001                                                 00842000
@EL01    EQU   @EL00001                                                 00843000
@ENDDATA EQU   *                                                        00844000
         END   IKJEFA51,(C'PL/S-II',0503,75006)                         00845000
