         TITLE 'IKJEFA53 - ACCOUNT / GETSPACE SUBROUTINE               *00001000
                        '                                               00002000
IKJEFA53 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA53  75.006'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          SPACPTR=R1;                  /* SAVE PTR TO SPACPARM      */ 00022000
         LR    SPACPTR,R1                                          0010 00023000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER REG     */ 00024000
*          /* CLEAR OUTPUT PORTION OF PARAMETER BLOCK TO ZERO        */ 00025000
*          SPACOFST=0;                                             0012 00026000
         SLR   @10,@10                                             0012 00027000
         ST    @10,SPACOFST(,SPACPTR)                              0012 00028000
*          /* ROUND UP REQUESTED LENGTH TO A MULTIPLE OF 4           */ 00029000
*          SPACLNTH=SPACLNTH+3;         /* INSURE MULTIPLE IS NEXT 0013 00030000
*                                          HIGHER                    */ 00031000
         LA    @10,3                                               0013 00032000
         AH    @10,SPACLNTH(,SPACPTR)                              0013 00033000
         STH   @10,SPACLNTH(,SPACPTR)                              0013 00034000
*          GTSPLBIT(7:8)='00'B;         /* ROUND OFF TO MULTIPLE OF 4*/ 00035000
         NI    GTSPLBIT(SPACPTR),B'11111100'                       0014 00036000
*          /* ESTABLISH LOCAL ADDRESSABILITY                         */ 00037000
*          HEDBPTR=SPACMPTR;            /* BASE POINTER FOR HEADER   */ 00038000
         L     HEDBPTR,SPACMPTR(,SPACPTR)                          0015 00039000
*          /**********************************************************/ 00040000
*          /* THE FOLLOWING ITERATIVE DO-GROUP WILL EXECUTE ONCE FOR */ 00041000
*          /* EACH MEMBER BLOCK INCLUDED IN SPACMCNT.  ONE EXECUTION */ 00042000
*          /* WILL RESULT IN THE SEARCH OF THE BLOCK'S FREE SPACE Q  */ 00043000
*          /* AND THE UPDATING OF SAME IF AN ELEMENT LARGE ENOUGH TO */ 00044000
*          /* SATISFY THE CALLER'S REQUEST IS FOUND.                 */ 00045000
*          /**********************************************************/ 00046000
*          DO LOOPCNT=SPACMCNT TO 1 BY -1; /* OPTIMUM LOOP CONTROLS  */ 00047000
         LH    LOOPCNT,SPACMCNT(,SPACPTR)                          0016 00048000
         B     @DE00016                                            0016 00049000
@DL00016 DS    0H                                                  0017 00050000
*            /* SEE IF THE QUEUE IS WORTH SEARCHING                  */ 00051000
*            IF UADSNUSP='1'B           /* FREE SPACE LIMITED TO 4 OR*/ 00052000
*             | UADSFSQP=0              /* 8 BYTE ELEMENTS OR NONE   */ 00053000
*              THEN                     /* SKIP THIS BLOCK - TRY NEXT*/ 00054000
         TM    UADSNUSP(HEDBPTR),B'10000000'                       0017 00055000
         BO    @RT00017                                            0017 00056000
         LH    @10,UADSFSQP(,HEDBPTR)                              0017 00057000
         LTR   @10,@10                                             0017 00058000
         BZ    @RT00017                                            0017 00059000
*                GO TO BUMPPTRS;        /* STEP POINTERS FOR NEXT BLK*/ 00060000
*            USELESS=1;                 /* INITIALIZE SWITCH TO ASSUME  00061000
*                                          NO USABLE SPACE IN BLOCK  */ 00062000
         LA    USELESS,1                                           0019 00063000
*            SPACWPTR=HEDBPTR;          /* WORK PTR SET TO HEAD OF Q */ 00064000
         LR    SPACWPTR,HEDBPTR                                    0020 00065000
*SEARCHQ:    /* FOLLOWING CODE SEARCHES THE FSQ OF ONE MEMBER BLOCK  */ 00066000
*            FSQEPTR=                   /* POINT TO NEXT FSQ ELEMENT */ 00067000
*             SPACWPTR->FSQENEXT        /* BY ADDING OFFSET          */ 00068000
*             +HEDBPTR;                 /*  TO MEMBER ORIGIN         */ 00069000
SEARCHQ  LR    FSQEPTR,HEDBPTR                                     0021 00070000
         AH    FSQEPTR,FSQENEXT(,SPACWPTR)                         0021 00071000
*            IF FSQELNTH<SPACLNTH       /* DOES THIS ELEMENT SATISFY    00072000
*                                          THE REQUEST               */ 00073000
*              THEN                     /* NO,                       */ 00074000
         LH    @10,FSQELNTH(,FSQEPTR)                              0022 00075000
         CH    @10,SPACLNTH(,SPACPTR)                              0022 00076000
         BNL   @RF00022                                            0022 00077000
*                IF FSQELNTH>8          /* IS SPACE USEABLE?         */ 00078000
*                  THEN                 /* NO,                       */ 00079000
         CH    @10,@CH00040                                        0023 00080000
         BNH   @RF00023                                            0023 00081000
*                    USELESS=0;         /* TURN OFF USELESS SWITCH   */ 00082000
         SLR   USELESS,USELESS                                     0024 00083000
*                  ELSE;                /* CONTINUE WITH NEXT FSQ    */ 00084000
@RF00023 DS    0H                                                  0026 00085000
*              ELSE                     /* THE SPACE HAS BEEN FOUND  */ 00086000
*                DO;                                               0026 00087000
         B     @RC00022                                            0026 00088000
@RF00022 DS    0H                                                  0027 00089000
*                FSQELNTH=FSQELNTH-SPACLNTH; /* REDUCE LENGTH OF THIS   00090000
*                                                 FREE SPACE         */ 00091000
         LH    @10,FSQELNTH(,FSQEPTR)                              0027 00092000
         SH    @10,SPACLNTH(,SPACPTR)                              0027 00093000
         STH   @10,FSQELNTH(,FSQEPTR)                              0027 00094000
*                USRLEN=8;              /* INITIALIZE LENGTH COUNT   */ 00095000
         LA    USRLEN,8                                            0028 00096000
*                /* FIND THE INDEX BYTE IMMEDIATELY AFTER USERID     */ 00097000
*                DO WHILE UADSUSER(USRLEN)=' ';/* TEST FOR BLANK     */ 00098000
         B     @DE00029                                            0029 00099000
@DL00029 DS    0H                                                  0030 00100000
*                  USRLEN=USRLEN-1;     /* DECREMENT LENGTH          */ 00101000
         BCTR  USRLEN,0                                            0030 00102000
*                  END;                                            0031 00103000
@DE00029 LR    @10,HEDBPTR                                         0031 00104000
         ALR   @10,USRLEN                                          0031 00105000
         CLI   UADSUSER-1(@10),C' '                                0031 00106000
         BE    @DL00029                                            0031 00107000
*                SPACOFST=              /* OUTPUT OFFSET =           */ 00108000
*                  FSQELNTH             /* REMAINING LENGTH OF THIS     00109000
*                                          SPACE                     */ 00110000
*                  +SPACWPTR->FSQENEXT  /* + OFFSET OF THIS FSQE     */ 00111000
*                  +UADSBLNG*(UADSUSER(USRLEN)&'0F'X);/* + MEMBR   0032 00112000
*                                                        OFFSET      */ 00113000
         LH    @10,FSQELNTH(,FSQEPTR)                              0032 00114000
         LH    @15,FSQENEXT(,SPACWPTR)                             0032 00115000
         ALR   @15,@10                                             0032 00116000
         LA    @14,15                                              0032 00117000
         SLR   @09,@09                                             0032 00118000
         IC    @09,UADSUSER-1(USRLEN,HEDBPTR)                      0032 00119000
         NR    @14,@09                                             0032 00120000
         MH    @14,UADSBLNG(,HEDBPTR)                              0032 00121000
         ALR   @15,@14                                             0032 00122000
         ST    @15,SPACOFST(,SPACPTR)                              0032 00123000
*                /* SHOULD THE ELEMENT BE DELETED FROM FREE SPACE Q  */ 00124000
*                IF FSQELNTH=0                                     0033 00125000
*                  THEN                 /* SPACE COMPLETELY USED     */ 00126000
         LTR   @10,@10                                             0033 00127000
         BNZ   @RF00033                                            0033 00128000
*                    SPACWPTR->FSQENEXT=                           0034 00129000
*                      FSQENEXT;        /* REMOVE THIS ELEMENT FROM Q*/ 00130000
         LH    @10,FSQENEXT(,FSQEPTR)                              0034 00131000
         STH   @10,FSQENEXT(,SPACWPTR)                             0034 00132000
*                /* SEE IF THE QUEUE MUST BE PROCESSED ANY FURTHER   */ 00133000
*                IF FSQELNTH>8          /* IF SPACE REMAINS IN THIS  */ 00134000
*                 | USELESS=0           /* ELEMNT OR FOUND PREVIOUSLY*/ 00135000
*                  THEN                 /* NO MORE TO BE DONE        */ 00136000
@RF00033 CLC   FSQELNTH(2,FSQEPTR),@CH00040                        0035 00137000
         BH    @RT00035                                            0035 00138000
         LTR   USELESS,USELESS                                     0035 00139000
         BNZ   @RF00035                                            0035 00140000
@RT00035 DS    0H                                                  0036 00141000
*                    RETURN CODE(0);    /* RETURN WITH SUCCESS R. C. */ 00142000
         L     @13,4(,@13)                                         0036 00143000
         L     @00,@SIZDATD                                        0036 00144000
         LR    @01,@11                                             0036 00145000
         FREEMAIN R,LV=(0),A=(1)                                        00146000
         SLR   @15,@15                                             0036 00147000
         L     @14,12(,@13)                                        0036 00148000
         LM    @00,@12,20(@13)                                     0036 00149000
         BR    @14                                                 0036 00150000
*                /* MUST LOOK THROUGH REST OF Q FOR USABLE SPACE     */ 00151000
*                DO WHILE FSQENEXT^=0;  /* LOOP TO END OF FSQE CHAIN */ 00152000
@RF00035 B     @DE00037                                            0037 00153000
@DL00037 DS    0H                                                  0038 00154000
*                  /* UPDATE FSQE BASE POINTER                       */ 00155000
*                  FSQEPTR=FSQENEXT+HEDBPTR; /* ADD OFFSET TO BASE   */ 00156000
         LR    @10,HEDBPTR                                         0038 00157000
         AH    @10,FSQENEXT(,FSQEPTR)                              0038 00158000
         LR    FSQEPTR,@10                                         0038 00159000
*                  IF FSQELNTH>8        /* IS THE LENGTH USEABLE?    */ 00160000
*                    THEN               /* FOUND MORE USABLE SPACE   */ 00161000
         CLC   FSQELNTH(2,FSQEPTR),@CH00040                        0039 00162000
         BNH   @RF00039                                            0039 00163000
*                      RETURN CODE(0);  /* RETURN WITH SUCCESS R. C. */ 00164000
         L     @13,4(,@13)                                         0040 00165000
         L     @00,@SIZDATD                                        0040 00166000
         LR    @01,@11                                             0040 00167000
         FREEMAIN R,LV=(0),A=(1)                                        00168000
         SLR   @15,@15                                             0040 00169000
         L     @14,12(,@13)                                        0040 00170000
         LM    @00,@12,20(@13)                                     0040 00171000
         BR    @14                                                 0040 00172000
*                  END;                                            0041 00173000
@RF00039 DS    0H                                                  0041 00174000
@DE00037 LH    @10,FSQENEXT(,FSQEPTR)                              0041 00175000
         LTR   @10,@10                                             0041 00176000
         BNZ   @DL00037                                            0041 00177000
*                UADSNUSP='1'B;         /* SET NO USABLE SPACE SWITCH*/ 00178000
         OI    UADSNUSP(HEDBPTR),B'10000000'                       0042 00179000
*                RETURN CODE(0);        /* RETURN WITH SUCCESS R. C. */ 00180000
         L     @13,4(,@13)                                         0043 00181000
         L     @00,@SIZDATD                                        0043 00182000
         LR    @01,@11                                             0043 00183000
         FREEMAIN R,LV=(0),A=(1)                                        00184000
         SLR   @15,@15                                             0043 00185000
         L     @14,12(,@13)                                        0043 00186000
         LM    @00,@12,20(@13)                                     0043 00187000
         BR    @14                                                 0043 00188000
*                END;                   /* END OF 'FOUND' DO-GROUP   */ 00189000
*            /* IF SPACE WAS NOT FOUND, CONTROL PASSED HERE TO CHECK */ 00190000
*            /* FOR END OF QUEUE.                                    */ 00191000
*            IF FSQENEXT=0                                         0045 00192000
*              THEN                     /* THAT WAS THE LAST ELEMENT */ 00193000
@RC00022 LH    @10,FSQENEXT(,FSQEPTR)                              0045 00194000
         LTR   @10,@10                                             0045 00195000
         BZ    @RT00045                                            0045 00196000
*                GO TO BUMPPTRS;        /* TRY THE NEXT MEMBER BLOCK */ 00197000
*            SPACWPTR=FSQEPTR;          /* SAVE CURRENT FSQE PTR     */ 00198000
         LR    SPACWPTR,FSQEPTR                                    0047 00199000
*            GO TO SEARCHQ;             /* GO BACK TO SEARCH FURTHER */ 00200000
         B     SEARCHQ                                             0048 00201000
*BUMPPTRS:   /* CTL PASSED HERE IF REQUEST NOT SATISFIED IN THIS BLK */ 00202000
*            HEDBPTR=HEDBPTR+UADSBLNG;  /* STEP TO NEXT MEMBER BLOCK */ 00203000
BUMPPTRS AH    HEDBPTR,UADSBLNG(,HEDBPTR)                          0049 00204000
*          END;                         /* END OF ITERATIVE DO-GROUP    00205000
*                                          WHICH SEARCHES FREESPACE Q*/ 00206000
         BCTR  LOOPCNT,0                                           0050 00207000
@DE00016 LTR   LOOPCNT,LOOPCNT                                     0050 00208000
         BP    @DL00016                                            0050 00209000
*          /* CONTROL PASSED HERE ONLY IF NO ELIGIBLE SPACE FOUND IN */ 00210000
*          /* ANY OF THE GIVEN MEMBER BLOCKS                         */ 00211000
*          RETURN CODE(8);            /* RETURN TO CALLER          */   00212000
         L     @13,4(,@13)                                         0051 00213000
         L     @00,@SIZDATD                                        0051 00214000
         LR    @01,@11                                             0051 00215000
         FREEMAIN R,LV=(0),A=(1)                                        00216000
         LA    @15,8                                               0051 00217000
         L     @14,12(,@13)                                        0051 00218000
         LM    @00,@12,20(@13)                                     0051 00219000
         BR    @14                                                 0051 00220000
*          END IKJEFA53                                            0052 00221000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00222000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 00223000
*;                                                                 0052 00224000
@EL00001 L     @13,4(,@13)                                         0052 00225000
@EF00001 L     @00,@SIZDATD                                        0052 00226000
         LR    @01,@11                                             0052 00227000
         FREEMAIN R,LV=(0),A=(1)                                        00228000
@ER00001 LM    @14,@12,12(@13)                                     0052 00229000
         BR    @14                                                 0052 00230000
@DATA    DS    0H                                                       00231000
@CH00040 DC    H'8'                                                     00232000
@DATD    DSECT                                                          00233000
         DS    0F                                                       00234000
@SA00001 DS    18F                                                      00235000
@SAV001  EQU   @SA00001                                                 00236000
@ZTEMPS  DS    C                                                        00237000
@ZTEMPND EQU   *                                                        00238000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00239000
@TEMPS   EQU   @ZTEMPS                                                  00240000
@L       EQU   @ZLEN                                                    00241000
IKJEFA53 CSECT                                                          00242000
         DS    0F                                                       00243000
@DATD    DSECT                                                          00244000
         DS    0D                                                       00245000
IKJEFA53 CSECT                                                          00246000
         DS    0F                                                       00247000
@SIZDATD DC    AL1(1)                                                   00248000
         DC    AL3(@ENDDATD-@DATD)                                      00249000
@SIZ001  EQU   @SIZDATD                                                 00250000
         DS    0D                                                       00251000
IKJEFA53 CSECT                                                          00252000
         DS   0H                                                        00253000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00254000
@DATD    DSECT                                                          00255000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00256000
@ENDDATD EQU   *                                                        00257000
@DATEND  EQU   *                                                        00258000
IKJEFA53 CSECT                                                          00259000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00260000
@01      EQU   01                                                       00261000
@02      EQU   02                                                       00262000
@03      EQU   03                                                       00263000
@04      EQU   04                                                       00264000
@05      EQU   05                                                       00265000
@06      EQU   06                                                       00266000
@07      EQU   07                                                       00267000
@08      EQU   08                                                       00268000
@09      EQU   09                                                       00269000
@10      EQU   10                                                       00270000
@11      EQU   11                                                       00271000
@12      EQU   12                                                       00272000
@13      EQU   13                                                       00273000
@14      EQU   14                                                       00274000
@15      EQU   15                                                       00275000
@0       EQU   00                                                       00276000
@1       EQU   01                                                       00277000
@2       EQU   02                                                       00278000
@3       EQU   03                                                       00279000
@4       EQU   04                                                       00280000
@5       EQU   05                                                       00281000
@6       EQU   06                                                       00282000
@7       EQU   07                                                       00283000
@8       EQU   08                                                       00284000
@9       EQU   09                                                       00285000
@A       EQU   10                                                       00286000
@B       EQU   11                                                       00287000
@C       EQU   12                                                       00288000
@D       EQU   13                                                       00289000
@E       EQU   14                                                       00290000
@F       EQU   15                                                       00291000
USRLEN   EQU   @05                                                      00292000
SPACWPTR EQU   @06                                                      00293000
USELESS  EQU   @07                                                      00294000
LOOPCNT  EQU   @05                                                      00295000
SPACPTR  EQU   @04                                                      00296000
FSQEPTR  EQU   @02                                                      00297000
HEDBPTR  EQU   @03                                                      00298000
R1       EQU   @01                                                      00299000
DHED     EQU   0                                                        00300000
UADSMHDR EQU   DHED                                                     00301000
UADSBLNG EQU   UADSMHDR                                                 00302000
UADSFSQP EQU   UADSMHDR+2                                               00303000
UADSUSER EQU   UADSMHDR+4                                               00304000
UADSBN01 EQU   UADSMHDR+12                                              00305000
UADSNUSP EQU   UADSBN01+1                                               00306000
UADSATTR EQU   DHED+16                                                  00307000
UADSFSQE EQU   0                                                        00308000
FSQELNTH EQU   UADSFSQE                                                 00309000
FSQENEXT EQU   UADSFSQE+2                                               00310000
SPACPARM EQU   0                                                        00311000
SPACMPTR EQU   SPACPARM                                                 00312000
SPACMCNT EQU   SPACPARM+4                                               00313000
SPACLNTH EQU   SPACPARM+6                                               00314000
SPACOFST EQU   SPACPARM+8                                               00315000
GTSPLBIT EQU   SPACLNTH+1                                               00316000
*                                      START UNREFERENCED COMPONENTS    00317000
@NM00004 EQU   DHED+40                                                  00318000
UADSDEST EQU   DHED+32                                                  00319000
UADSPERP EQU   DHED+28                                                  00320000
UADSPWD1 EQU   DHED+24                                                  00321000
UADSUPTP EQU   DHED+20                                                  00322000
UADSINST EQU   DHED+18                                                  00323000
@NM00003 EQU   UADSATTR                                                 00324000
USATR03  EQU   UADSATTR                                                 00325000
USATR02  EQU   UADSATTR                                                 00326000
USATR01  EQU   UADSATTR                                                 00327000
USATR00  EQU   UADSATTR                                                 00328000
UADSMAXC EQU   UADSMHDR+14                                              00329000
@NM00002 EQU   UADSBN01+1                                               00330000
UADSEXPF EQU   UADSBN01+1                                               00331000
@NM00001 EQU   UADSBN01                                                 00332000
*                                      END UNREFERENCED COMPONENTS      00333000
@RT00017 EQU   BUMPPTRS                                                 00334000
@RT00045 EQU   BUMPPTRS                                                 00335000
@EL01    EQU   @EL00001                                                 00336000
@ENDDATA EQU   *                                                        00337000
         END   IKJEFA53,(C'PL/S-II',0503,75006)                         00338000
