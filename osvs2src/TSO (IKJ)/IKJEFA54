         TITLE 'IKJEFA54 - ACCOUNT / FREESPACE SUBROUTINE              *00001000
                        '                                               00002000
IKJEFA54 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA54  74.021'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          SPACPTR=R1;                  /* SAVE PTR TO SPACPARM      */ 00022000
         LR    SPACPTR,R1                                          0010 00023000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER REGISTER*/ 00024000
*          /* ROUND UP REQUESTED LENGTH TO A MULTIPLE OF 4           */ 00025000
*          SPACLNTH=SPACLNTH+3;         /* INSURE MULTIPLE IS NEXT 0012 00026000
*                                          HIGHER                    */ 00027000
         LA    @08,3                                               0012 00028000
         AH    @08,SPACLNTH(,SPACPTR)                              0012 00029000
         STH   @08,SPACLNTH(,SPACPTR)                              0012 00030000
*          FRSPLBLO(7:8)='00'B;         /* INSURE WORD BOUNDRY       */ 00031000
         NI    FRSPLBLO(SPACPTR),B'11111100'                       0013 00032000
*          HEDBPTR=SPACMPTR;            /* POINT TO FIRST MEMBER OF     00033000
*                                          USER ENTRY                */ 00034000
         L     HEDBPTR,SPACMPTR(,SPACPTR)                          0014 00035000
*          SPACEPTR=SPACOFST+HEDBPTR;   /* PTR TO SPACE TO BE FREED  */ 00036000
         LR    SPACEPTR,HEDBPTR                                    0015 00037000
         AL    SPACEPTR,SPACOFST(,SPACPTR)                         0015 00038000
*          /* MAKE SURE SPACEPTR POINTS TO A FULL-WORD BOUNDARY      */ 00039000
*          IF SPACEPTR//4^=0                                       0016 00040000
*            THEN                       /* SPACE NOT ON FULLWORD BDY */ 00041000
         LR    @00,SPACEPTR                                        0016 00042000
         SRDA  @00,32                                              0016 00043000
         D     @00,@CF00089                                        0016 00044000
         LTR   @00,@00                                             0016 00045000
         BZ    @RF00016                                            0016 00046000
*              RETURN CODE(4);          /* SET ERROR RTN CODE & EXIT */ 00047000
         L     @13,4(,@13)                                         0017 00048000
         L     @00,@SIZDATD                                        0017 00049000
         LR    @01,@11                                             0017 00050000
         FREEMAIN R,LV=(0),A=(1)                                        00051000
         LA    @15,4                                               0017 00052000
         L     @14,12(,@13)                                        0017 00053000
         LM    @00,@12,20(@13)                                     0017 00054000
         BR    @14                                                 0017 00055000
*          UPPERLIM=SPACEPTR+SPACLNTH;  /* POINT TO OUTER LIMIT      */ 00056000
@RF00016 LR    UPPERLIM,SPACEPTR                                   0018 00057000
         AH    UPPERLIM,SPACLNTH(,SPACPTR)                         0018 00058000
*          /* POINT TO MEMBER/BLOCK CONTAINING SPACE                 */ 00059000
*          HEDBPTR=HEDBPTR+UADSBLNG*((SPACEPTR-HEDBPTR)/UADSBLNG); 0019 00060000
         LH    @08,UADSBLNG(,HEDBPTR)                              0019 00061000
         LR    @06,SPACEPTR                                        0019 00062000
         SLR   @06,HEDBPTR                                         0019 00063000
         LR    @00,@06                                             0019 00064000
         SRDA  @00,32                                              0019 00065000
         DR    @00,@08                                             0019 00066000
         LR    @05,@08                                             0019 00067000
         MR    @04,@01                                             0019 00068000
         ALR   HEDBPTR,@05                                         0019 00069000
*          /* MAKE CERTAIN THAT THE OUTER LIMIT OF GIVEN SPACE DOES     00070000
*             NOT OVERLAP A SECOND MEMBER/BLOCK                      */ 00071000
*          IF UPPERLIM>HEDBPTR+UADSBLNG                            0020 00072000
*           /* OR DOES NOT OVERLAP A MEMBER/BLOCK HEADER.            */ 00073000
*           |SPACEPTR-HEDBPTR<LENGTH(UADSMHDR) /* WITHIN BASIC HDR   */ 00074000
*           |(SPACEPTR-HEDBPTR<ADDR(UADSPERP)-ADDR(UADSMHDR)       0020 00075000
*           &HEDBPTR=SPACMPTR)          /* THIS IS THE ORIGINAL MBR  */ 00076000
*           |(SPACEPTR-HEDBPTR<LENGTH(DHED) /* WITHIN ORIGINAL HDR   */ 00077000
*           &HEDBPTR=SPACMPTR           /* AND THIS IS THE ORIGNL MBR*/ 00078000
*           &UADSEXPF='1'B)             /* AND NEW FORMAT HEADER     */ 00079000
*            THEN                       /* GIVEN SPACE OVERLAPS HDR  */ 00080000
         LR    @08,HEDBPTR                                         0020 00081000
         AH    @08,UADSBLNG(,HEDBPTR)                              0020 00082000
         CR    UPPERLIM,@08                                        0020 00083000
         BH    @RT00020                                            0020 00084000
         LR    @08,SPACEPTR                                        0020 00085000
         SLR   @08,HEDBPTR                                         0020 00086000
         CH    @08,@CH00042                                        0020 00087000
         BL    @RT00020                                            0020 00088000
         LA    @06,UADSPERP(,HEDBPTR)                              0020 00089000
         SLR   @06,HEDBPTR                                         0020 00090000
         CR    @08,@06                                             0020 00091000
         BNL   @GL00001                                            0020 00092000
         C     HEDBPTR,SPACMPTR(,SPACPTR)                          0020 00093000
         BE    @RT00020                                            0020 00094000
@GL00001 LR    @08,SPACEPTR                                        0020 00095000
         SLR   @08,HEDBPTR                                         0020 00096000
         CH    @08,@CH00102                                        0020 00097000
         BNL   @RF00020                                            0020 00098000
         C     HEDBPTR,SPACMPTR(,SPACPTR)                          0020 00099000
         BNE   @RF00020                                            0020 00100000
         TM    UADSEXPF(HEDBPTR),B'01000000'                       0020 00101000
         BNO   @RF00020                                            0020 00102000
@RT00020 DS    0H                                                  0021 00103000
*              RETURN CODE(8);          /* SET ERROR RTN CODE & EXIT */ 00104000
         L     @13,4(,@13)                                         0021 00105000
         L     @00,@SIZDATD                                        0021 00106000
         LR    @01,@11                                             0021 00107000
         FREEMAIN R,LV=(0),A=(1)                                        00108000
         LA    @15,8                                               0021 00109000
         L     @14,12(,@13)                                        0021 00110000
         LM    @00,@12,20(@13)                                     0021 00111000
         BR    @14                                                 0021 00112000
*          PREVFSQE=HEDBPTR;            /* INITIALIZE WORKING PTR  0022 00113000
*                                          TO HEAD OF Q              */ 00114000
@RF00020 LR    PREVFSQE,HEDBPTR                                    0022 00115000
*          FSQEPTR=PREVFSQE->FSQENEXT+HEDBPTR;/* FSQENEXT IS RELATIVE   00116000
*                                          TO EACH MEMBER BLOCK HDR  */ 00117000
         LR    FSQEPTR,HEDBPTR                                     0023 00118000
         AH    FSQEPTR,FSQENEXT(,PREVFSQE)                         0023 00119000
*SCANFSQE: /* SCAN FOR A FSQE THAT CAN CONTROL THE SPACE TO BE FREED */ 00120000
*          IF FSQENEXT=0                /* CHECK FOR LAST FSQE       */ 00121000
*            THEN                       /* NO CURRENT FSQE ISN'T LAST*/ 00122000
SCANFSQE SLR   @03,@03                                             0024 00123000
         LH    @15,FSQENEXT(,FSQEPTR)                              0024 00124000
         CR    @15,@03                                             0024 00125000
         BE    @RT00024                                            0024 00126000
*              GOTO BLDFSQ;             /* GO TO BUILD A NEW FSQE    */ 00127000
*          /* DOES SPACE-TO-BE-FREED ADJOIN THIS FSQE ?              */ 00128000
*          IF SPACEPTR=FSQEPTR+FSQELNTH                            0026 00129000
*            THEN                       /* YES - LOWER BOUND COINCIDES  00130000
*                                          WITH UPPER END OF FSQE    */ 00131000
         LH    @14,FSQELNTH(,FSQEPTR)                              0026 00132000
         LR    @05,FSQEPTR                                         0026 00133000
         ALR   @05,@14                                             0026 00134000
         CR    SPACEPTR,@05                                        0026 00135000
         BNE   @RF00026                                            0026 00136000
*              DO;                                                 0027 00137000
*              FSQELNTH=FSQELNTH+SPACLNTH;  /* COMBINE LENGTHS       */ 00138000
         AH    @14,SPACLNTH(,SPACPTR)                              0028 00139000
         STH   @14,FSQELNTH(,FSQEPTR)                              0028 00140000
*              SPACEPTR->UADSFSQE=0;    /* CLEAR FIRST WORD OF SPACE */ 00141000
         ST    @03,UADSFSQE(,SPACEPTR)                             0029 00142000
*              IF FSQENEXT=0            /* IS THIS END OF Q?         */ 00143000
*                THEN                   /* YES, NO FURTHER CHECKING  */ 00144000
         CR    @15,@03                                             0030 00145000
         BE    @RT00030                                            0030 00146000
*                  GOTO CLEARSP;        /* GO TO CLEAR FREED SPACE   */ 00147000
*              PREVFSQE=FSQEPTR;        /* SAVE PTR TO PREVIOUS FSQE */ 00148000
         LR    PREVFSQE,FSQEPTR                                    0032 00149000
*              FSQEPTR=FSQENEXT+HEDBPTR;/* POINT TO NEXT FSQE        */ 00150000
         ALR   @15,HEDBPTR                                         0033 00151000
         LR    FSQEPTR,@15                                         0033 00152000
*              /* DOES THE NEW COMBINATION ELEMENT ADJOIN NEXT FSQE  */ 00153000
*              IF PREVFSQE+PREVFSQE->FSQELNTH=FSQEPTR              0034 00154000
*                THEN                   /* NEW SPACE ALSO CONTIGUOUS    00155000
*                                          TO NEXT FSQE              */ 00156000
         LH    @02,FSQELNTH(,PREVFSQE)                             0034 00157000
         LR    @15,PREVFSQE                                        0034 00158000
         ALR   @15,@02                                             0034 00159000
         CR    @15,FSQEPTR                                         0034 00160000
         BNE   @RF00034                                            0034 00161000
*                  DO;                                             0035 00162000
*                  /* COMBINE LENGTH OF SPACLNTH WITH FSQE LENGTH    */ 00163000
*                  PREVFSQE->FSQELNTH=FSQELNTH+PREVFSQE->FSQELNTH; 0036 00164000
         AH    @02,FSQELNTH(,FSQEPTR)                              0036 00165000
         STH   @02,FSQELNTH(,PREVFSQE)                             0036 00166000
*                  /* UPDATE PREVIOUS FSQE                           */ 00167000
*                  PREVFSQE->FSQENEXT=FSQENEXT;                    0037 00168000
         LH    @02,FSQENEXT(,FSQEPTR)                              0037 00169000
         STH   @02,FSQENEXT(,PREVFSQE)                             0037 00170000
*                  UADSFSQE=0;          /* CLEAR OLD FSQE            */ 00171000
         ST    @03,UADSFSQE(,FSQEPTR)                              0038 00172000
*                  END;                                            0039 00173000
*              GO TO CLEARSP;           /* GO TO CLEAR THE SPACE     */ 00174000
         B     CLEARSP                                             0040 00175000
*              END;                                                0041 00176000
*          /* DOES SPACE-TO-BE-FREED LIE ON LOW SIDE OF THIS FSQE ?  */ 00177000
*          IF UPPERLIM=FSQEPTR                                     0042 00178000
*            THEN                       /* YES - OUTER LIMIT OF SPACE   00179000
*                                          COINCIDES WITH THIS FSQE  */ 00180000
@RF00026 CR    UPPERLIM,FSQEPTR                                    0042 00181000
         BNE   @RF00042                                            0042 00182000
*              DO;                                                 0043 00183000
*              /* CTL. PASSED HERE WHEN SPACE-TO-BE-FREED IS       0044 00184000
*                 CONTIGUOUS ON LOW SIDE OF CURRENT FSQE             */ 00185000
*              /* NEW ELEMENT LENGTH = SUM OF OLD+NEW                */ 00186000
*              SPACEPTR->FSQELNTH=FSQELNTH+SPACLNTH;               0044 00187000
         LH    @15,FSQELNTH(,FSQEPTR)                              0044 00188000
         AH    @15,SPACLNTH(,SPACPTR)                              0044 00189000
         STH   @15,FSQELNTH(,SPACEPTR)                             0044 00190000
*              /* NEW ELEMENT LINKED FROM OLD                        */ 00191000
*              SPACEPTR->FSQENEXT=FSQENEXT;                        0045 00192000
         LH    @15,FSQENEXT(,FSQEPTR)                              0045 00193000
         STH   @15,FSQENEXT(,SPACEPTR)                             0045 00194000
*              /* UPDATE PREVIOUS FSQE                               */ 00195000
*              PREVFSQE->FSQENEXT=SPACEPTR-HEDBPTR;                0046 00196000
         LR    @15,SPACEPTR                                        0046 00197000
         SLR   @15,HEDBPTR                                         0046 00198000
         STH   @15,FSQENEXT(,PREVFSQE)                             0046 00199000
*              UADSFSQE=0;              /* CLEAR OLD FSQE            */ 00200000
         SLR   @08,@08                                             0047 00201000
         ST    @08,UADSFSQE(,FSQEPTR)                              0047 00202000
*              GO TO CLEARSP;           /* GO TO CLEAR THE SPACE     */ 00203000
         B     CLEARSP                                             0048 00204000
*              END;                                                0049 00205000
*          PREVFSQE=FSQEPTR;            /* SAVE PTR TO PREVIOUS FSQE */ 00206000
@RF00042 LR    PREVFSQE,FSQEPTR                                    0050 00207000
*          FSQEPTR=FSQENEXT+HEDBPTR;    /* FSQENEXT IS RELATIVE TO EACH 00208000
*                                          MEMBER BLOCK HDR          */ 00209000
         LR    @03,HEDBPTR                                         0051 00210000
         AH    @03,FSQENEXT(,FSQEPTR)                              0051 00211000
         LR    FSQEPTR,@03                                         0051 00212000
*          GOTO SCANFSQE;               /* CONTINUE SCAN             */ 00213000
         B     SCANFSQE                                            0052 00214000
*BLDFSQ:   /* CTL. PASSED OR DROPPED HERE WHEN SPACE-TO-BE-FREED   0053 00215000
*             IS NOT CONTIGUOUS TO ANY OTHER FSQE                    */ 00216000
*          SPACEPTR->FSQELNTH=SPACLNTH; /* ESTABLISH NEW LENGTH      */ 00217000
BLDFSQ   LH    @08,SPACLNTH(,SPACPTR)                              0053 00218000
         STH   @08,FSQELNTH(,SPACEPTR)                             0053 00219000
*          /* PICK UP LINKAGE OFFSET FROM OLD ELEMENT                */ 00220000
*          SPACEPTR->FSQENEXT=FSQENEXT;                            0054 00221000
         LH    @08,FSQENEXT(,FSQEPTR)                              0054 00222000
         STH   @08,FSQENEXT(,SPACEPTR)                             0054 00223000
*          FSQENEXT=SPACEPTR-HEDBPTR;   /* UPDATE OLD ELEMENT        */ 00224000
         LR    @08,SPACEPTR                                        0055 00225000
         SLR   @08,HEDBPTR                                         0055 00226000
         STH   @08,FSQENEXT(,FSQEPTR)                              0055 00227000
*CLEARSP:  /* CTL. PASSED OR DROPPED HERE TO CLEAR THE FREED SPACE 0056 00228000
*             AND RSET HEADER FLAG FOR USABLE SPACE                  */ 00229000
*          RFY (R0,R1,R14,R15) RSTD;    /* RESTRICT WORK REGISTERS   */ 00230000
CLEARSP  DS    0H                                                  0057 00231000
*          R0=SPACEPTR+4;               /* POINT TO SPACE TO CLEAR   */ 00232000
         LA    @05,4                                               0057 00233000
         LR    R0,SPACEPTR                                         0057 00234000
         ALR   R0,@05                                              0057 00235000
*          R1=SPACLNTH-4;               /* GET LENGTH OF SPACE       */ 00236000
         LCR   @05,@05                                             0058 00237000
         AH    @05,SPACLNTH(,SPACPTR)                              0058 00238000
         LR    R1,@05                                              0058 00239000
*          R15=0;                       /* CLEAR TO BINARY ZEROS     */ 00240000
         SLR   R15,R15                                             0059 00241000
*          GEN (MVCL   R0,R14)          /* CLEAR FREED SPACE         */ 00242000
*            REFS(R0,R1,R14,R15);                                  0060 00243000
         MVCL   R0,R14                                                  00244000
*          RFY (R0,R1,R14,R15) UNRSTD;  /* RELEASE WORK REGISTERS    */ 00245000
*          PREVFSQE=HEDBPTR;            /* INITIALIZE WORKING PTR  0062 00246000
*                                          TO HEAD OF Q              */ 00247000
         LR    PREVFSQE,HEDBPTR                                    0062 00248000
*          FSQEPTR=PREVFSQE->FSQENEXT+HEDBPTR;/* FSQENEXT IS RELATIVE   00249000
*                                          TO EACH MEMBER BLOCK HDR  */ 00250000
         LR    FSQEPTR,HEDBPTR                                     0063 00251000
         AH    FSQEPTR,FSQENEXT(,PREVFSQE)                         0063 00252000
*          DO WHILE FSQENEXT^=0;        /* SCAN FSQE CHAIN           */ 00253000
         B     @DE00064                                            0064 00254000
@DL00064 DS    0H                                                  0065 00255000
*            /* SEE IF CHAIN SHOULD BE REORDERED                     */ 00256000
*            IF FSQENEXT+HEDBPTR<FSQEPTR                           0065 00257000
*              THEN                     /* THIS FSQE IS OUT OF SEQ.  */ 00258000
         LH    @10,FSQENEXT(,FSQEPTR)                              0065 00259000
         LR    @09,HEDBPTR                                         0065 00260000
         ALR   @09,@10                                             0065 00261000
         CR    @09,FSQEPTR                                         0065 00262000
         BNL   @RF00065                                            0065 00263000
*                DO;                                               0066 00264000
*                FSQESAVE=FSQEPTR;      /* SAVE PTR TO THIS FSQE     */ 00265000
         LR    FSQESAVE,FSQEPTR                                    0067 00266000
*                PREVFSQE->FSQENEXT=FSQENEXT;/* ELIMINATE OLD FSQE   */ 00267000
         STH   @10,FSQENEXT(,PREVFSQE)                             0068 00268000
*                FSQEPTR=PREVFSQE->FSQENEXT+HEDBPTR;               0069 00269000
         ALR   @10,HEDBPTR                                         0069 00270000
         LR    FSQEPTR,@10                                         0069 00271000
*                FSQESAVE->FSQENEXT=FSQENEXT;                      0070 00272000
         LH    @10,FSQENEXT(,FSQEPTR)                              0070 00273000
         STH   @10,FSQENEXT(,FSQESAVE)                             0070 00274000
*                FSQENEXT=FSQESAVE-HEDBPTR;/* RECHAIN FSQE POINTERS  */ 00275000
         LR    @10,FSQESAVE                                        0071 00276000
         SLR   @10,HEDBPTR                                         0071 00277000
         STH   @10,FSQENEXT(,FSQEPTR)                              0071 00278000
*                END;                                              0072 00279000
*            /* NOW CHECK TO SEE IF FSQE'S ARE ADJACENT              */ 00280000
*            IF PREVFSQE+PREVFSQE->FSQELNTH=FSQEPTR/* FSQES ADJACENT?*/ 00281000
*              THEN                     /* YES,                      */ 00282000
@RF00065 LH    @10,FSQELNTH(,PREVFSQE)                             0073 00283000
         LR    @09,PREVFSQE                                        0073 00284000
         ALR   @09,@10                                             0073 00285000
         CR    @09,FSQEPTR                                         0073 00286000
         BNE   @RF00073                                            0073 00287000
*                DO;                    /* MERGE FSQES               */ 00288000
*                PREVFSQE->FSQELNTH=PREVFSQE->FSQELNTH+FSQELNTH;   0075 00289000
         AH    @10,FSQELNTH(,FSQEPTR)                              0075 00290000
         STH   @10,FSQELNTH(,PREVFSQE)                             0075 00291000
*                PREVFSQE->FSQENEXT=FSQENEXT; /* RE-ORDER CHAIN      */ 00292000
         LH    @10,FSQENEXT(,FSQEPTR)                              0076 00293000
         STH   @10,FSQENEXT(,PREVFSQE)                             0076 00294000
*                UADSFSQE=0;            /* CLEAR OLD FSQE            */ 00295000
         SLR   @09,@09                                             0077 00296000
         ST    @09,UADSFSQE(,FSQEPTR)                              0077 00297000
*                FSQEPTR=PREVFSQE->FSQENEXT+HEDBPTR;/* UPDATE POINTER*/ 00298000
         ALR   @10,HEDBPTR                                         0078 00299000
         LR    FSQEPTR,@10                                         0078 00300000
*                END;                                              0079 00301000
*              PREVFSQE=FSQEPTR;        /* SAVE PTR TO PREVIOUS FSQE */ 00302000
@RF00073 LR    PREVFSQE,FSQEPTR                                    0080 00303000
*              FSQEPTR=FSQENEXT+HEDBPTR;/* FSQENEXT IS RELATIVE TO EACH 00304000
*                                          MEMBER BLOCK HDR          */ 00305000
         LR    @10,HEDBPTR                                         0081 00306000
         AH    @10,FSQENEXT(,FSQEPTR)                              0081 00307000
         LR    FSQEPTR,@10                                         0081 00308000
*              END;                                                0082 00309000
@DE00064 LH    @10,FSQENEXT(,FSQEPTR)                              0082 00310000
         LTR   @10,@10                                             0082 00311000
         BNZ   @DL00064                                            0082 00312000
*          UADSNUSP='0'B;               /* TURN OFF 'NO USABLE SP' SW*/ 00313000
         NI    UADSNUSP(HEDBPTR),B'01111111'                       0083 00314000
*          RETURN CODE(0);              /* SIGNAL SUCCESS TO CALLER  */ 00315000
         L     @13,4(,@13)                                         0084 00316000
         L     @00,@SIZDATD                                        0084 00317000
         LR    @01,@11                                             0084 00318000
         FREEMAIN R,LV=(0),A=(1)                                        00319000
         SLR   @15,@15                                             0084 00320000
         L     @14,12(,@13)                                        0084 00321000
         LM    @00,@12,20(@13)                                     0084 00322000
         BR    @14                                                 0084 00323000
*          END IKJEFA54                                            0085 00324000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00325000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 00326000
*;                                                                 0085 00327000
@DATA    DS    0H                                                       00328000
@CH00042 DC    H'16'                                                    00329000
@CH00102 DC    H'64'                                                    00330000
@DATD    DSECT                                                          00331000
         DS    0F                                                       00332000
@SA00001 DS    18F                                                      00333000
IKJEFA54 CSECT                                                          00334000
         DS    0F                                                       00335000
@CF00089 DC    F'4'                                                     00336000
@DATD    DSECT                                                          00337000
         DS    0D                                                       00338000
IKJEFA54 CSECT                                                          00339000
         DS    0F                                                       00340000
@SIZDATD DC    AL1(1)                                                   00341000
         DC    AL3(@ENDDATD-@DATD)                                      00342000
         DS    0D                                                       00343000
IKJEFA54 CSECT                                                          00344000
         DS   0H                                                        00345000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00346000
@DATD    DSECT                                                          00347000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00348000
@ENDDATD EQU   *                                                        00349000
IKJEFA54 CSECT                                                          00350000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00351000
@01      EQU   01                                                       00352000
@02      EQU   02                                                       00353000
@03      EQU   03                                                       00354000
@04      EQU   04                                                       00355000
@05      EQU   05                                                       00356000
@06      EQU   06                                                       00357000
@07      EQU   07                                                       00358000
@08      EQU   08                                                       00359000
@09      EQU   09                                                       00360000
@10      EQU   10                                                       00361000
@11      EQU   11                                                       00362000
@12      EQU   12                                                       00363000
@13      EQU   13                                                       00364000
@14      EQU   14                                                       00365000
@15      EQU   15                                                       00366000
UPPERLIM EQU   @02                                                      00367000
SPACEPTR EQU   @09                                                      00368000
FSQESAVE EQU   @02                                                      00369000
PREVFSQE EQU   @08                                                      00370000
SPACPTR  EQU   @10                                                      00371000
FSQEPTR  EQU   @06                                                      00372000
HEDBPTR  EQU   @07                                                      00373000
R0       EQU   @00                                                      00374000
R1       EQU   @01                                                      00375000
R14      EQU   @14                                                      00376000
R15      EQU   @15                                                      00377000
DHED     EQU   0                                                        00378000
UADSMHDR EQU   DHED                                                     00379000
UADSBLNG EQU   UADSMHDR                                                 00380000
UADSBN01 EQU   UADSMHDR+12                                              00381000
UADSNUSP EQU   UADSBN01+1                                               00382000
UADSEXPF EQU   UADSBN01+1                                               00383000
UADSATTR EQU   DHED+16                                                  00384000
UADSPERP EQU   DHED+28                                                  00385000
UADSFSQE EQU   0                                                        00386000
FSQELNTH EQU   UADSFSQE                                                 00387000
FSQENEXT EQU   UADSFSQE+2                                               00388000
SPACPARM EQU   0                                                        00389000
SPACMPTR EQU   SPACPARM                                                 00390000
SPACLNTH EQU   SPACPARM+6                                               00391000
SPACOFST EQU   SPACPARM+8                                               00392000
FRSPLBLO EQU   SPACLNTH+1                                               00393000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00394000
SPACMCNT EQU   SPACPARM+4                                               00395000
@NM00004 EQU   DHED+40                                                  00396000
UADSDEST EQU   DHED+32                                                  00397000
UADSPWD1 EQU   DHED+24                                                  00398000
UADSUPTP EQU   DHED+20                                                  00399000
UADSINST EQU   DHED+18                                                  00400000
@NM00003 EQU   UADSATTR                                                 00401000
USATR03  EQU   UADSATTR                                                 00402000
USATR02  EQU   UADSATTR                                                 00403000
USATR01  EQU   UADSATTR                                                 00404000
USATR00  EQU   UADSATTR                                                 00405000
UADSMAXC EQU   UADSMHDR+14                                              00406000
@NM00002 EQU   UADSBN01+1                                               00407000
@NM00001 EQU   UADSBN01                                                 00408000
UADSUSER EQU   UADSMHDR+4                                               00409000
UADSFSQP EQU   UADSMHDR+2                                               00410000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00411000
@RT00024 EQU   BLDFSQ                                                   00412000
@RT00030 EQU   CLEARSP                                                  00413000
@RF00034 EQU   CLEARSP                                                  00414000
@ENDDATA EQU   *                                                        00415000
         END   IKJEFA54                                                 00416000
