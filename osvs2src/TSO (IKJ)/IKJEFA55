         TITLE 'IKJEFA55 - ACCOUNT / PARSE VALIDITY CHECK EXIT ROUTINES*00001000
               S        '                                               00002000
IKJEFA55 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IKJEFA55  77.012'                                 0001 00009000
ACCTEXTR DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00152-ACCTEXTR)                                   00013000
         ENTRY ACCTEXTR                                                 00014000
PASSEXTR DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00164-PASSEXTR)                                   00018000
         ENTRY PASSEXTR                                                 00019000
PROCEXTR DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00175-PROCEXTR)                                   00023000
         ENTRY PROCEXTR                                                 00024000
USIDEXTR DS    0H                                                  0001 00025000
         USING *,@15                                               0001 00026000
         B     @PROLOG                                             0001 00027000
         DC    AL2(@EP00184-USIDEXTR)                                   00028000
         ENTRY USIDEXTR                                                 00029000
SIZEEXIT DS    0H                                                  0001 00030000
         USING *,@15                                               0001 00031000
         B     @PROLOG                                             0001 00032000
         DC    AL2(@EP00299-SIZEEXIT)                                   00033000
         ENTRY SIZEEXIT                                                 00034000
USDAEXIT DS    0H                                                  0001 00035000
         USING *,@15                                               0001 00036000
         B     @PROLOG                                             0001 00037000
         DC    AL2(@EP00316-USDAEXIT)                                   00038000
         ENTRY USDAEXIT                                                 00039000
PERFEXIT DS    0H                                                  0001 00040000
         USING *,@15                                               0001 00041000
         B     @PROLOG                                             0001 00042000
         DC    AL2(@EP00331-PERFEXIT)                                   00043000
         ENTRY PERFEXIT                                                 00044000
         DROP  @15                                                      00045000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00046000
         BALR  @12,0                                               0001 00047000
@PSTART  DS    0H                                                  0001 00048000
         USING @PSTART,@12                                         0001 00049000
         L     @00,@SIZDATD                                        0001 00050000
         GETMAIN  R,LV=(0)                                              00051000
         LR    @11,@01                                             0001 00052000
         USING @DATD,@11                                           0001 00053000
         ST    @13,@SA00001+4                                      0001 00054000
         LM    @15,@01,16(@13)                                     0001 00055000
         ST    @11,8(,@13)                                         0001 00056000
         LR    @13,@11                                             0001 00057000
         AH    @15,4(,@15)                                         0001 00058000
         BR    @15                                                 0001 00059000
@EP00001 DS    0H                                                  0002 00060000
*          PARSPTR=R1;                /* INITIALIZE PTR TO PARSE   0025 00061000
*                                        PARAMETER LIST              */ 00062000
         LR    PARSPTR,R1                                          0025 00063000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00064000
*          FREEPTRS=FREEPTRS&&FREEPTRS;/* CLEAR FREEMAIN POINTERS    */ 00065000
         XC    FREEPTRS(20),FREEPTRS                               0027 00066000
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */ 00067000
*          DYNLFORM(1:INLINLNG) = INLINLFM(1:INLINLNG);            0028 00068000
         L     @15,INLINLNG                                        0028 00069000
         BCTR  @15,0                                               0028 00070000
         EX    @15,@SM00261                                        0028 00071000
*          SWITCHS = SWITCHS&&SWITCHS;/* CLEAR LOGIC SWITCHES        */ 00072000
         XC    SWITCHS(1),SWITCHS                                  0029 00073000
*          VCHKPTR = USERWORD;        /* SAVE POINTER TO COMM AREA   */ 00074000
         L     VCHKPTR,USERWORD(,PARSPTR)                          0030 00075000
*          NLSTTAB=NLSTTAB&&NLSTTAB;  /* CLEAR NODELIST TABLE        */ 00076000
         L     @01,NODEPTR(,VCHKPTR)                               0031 00077000
         XC    NLSTTAB(66,@01),NLSTTAB(@01)                        0031 00078000
*          EXITRTCD = 0;              /* INITIALIZE RETURN CODE TO 0 */ 00079000
         SLR   @15,@15                                             0032 00080000
         ST    @15,EXITRTCD(,VCHKPTR)                              0032 00081000
*          RETNCODE=0;                /* TELL PARSE NODELIST IS O K  */ 00082000
         SLR   RETNCODE,RETNCODE                                   0033 00083000
*          NUMOFLVL=0;                /* INITIALIZE COUNTER TO ZERO  */ 00084000
         SLR   NUMOFLVL,NUMOFLVL                                   0034 00085000
*          /* OBTAIN DYNAMIC STORAGE FOR PARSE PARAMETER CONTROL LIST*/ 00086000
*          RFY R0 RSTD;               /* RESTRICT GETMAIN LENGTH REG */ 00087000
*          R0 = PCLLNGTH;             /* SET LENGTH FOR GETMAIN      */ 00088000
         L     @01,NDPCLPTR                                        0036 00089000
         LH    R0,PCLLNGTH(,@01)                                   0036 00090000
*          PLENGTH=R0;                /* SAVE PCL LENGTH FOR FREEMAIN*/ 00091000
         ST    R0,PLENGTH                                          0037 00092000
*          GEN (GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST))       0038 00093000
*            SETS(PCLPTR) REFS(DYNGTLST,R0);                       0038 00094000
         GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST)                    00095000
*          /* INITIALIZE THE PARSE PCL FROM THE MODEL.             0039 00096000
*             PCL MUST BE MOVED INTO DYNAMIC STORAGE SINCE IT      0039 00097000
*             WILL BE MODIFIED.                                      */ 00098000
*          RFY (R1,R14,R15) RSTD;     /* RESTRICT WORK REGISTERS     */ 00099000
*          R0=PCLPTR;                 /* GET TO ADDRESS              */ 00100000
         L     R0,PCLPTR                                           0040 00101000
*          R1=PLENGTH;                /* LOAD R1 WITH LENGTH         */ 00102000
         L     @05,PLENGTH                                         0041 00103000
         LR    R1,@05                                              0041 00104000
*          R14=NDPCLPTR;              /* GET FROM ADDRESS            */ 00105000
         L     R14,NDPCLPTR                                        0042 00106000
*          R15=PLENGTH;               /* LOAD R15 WITH LENGTH        */ 00107000
         LR    R15,@05                                             0043 00108000
*          GEN (MVCL  R0,R14)         /* MOVE PCL TO GOTTEN CORE     */ 00109000
*            REFS(R0,R1,R14,R15);                                  0044 00110000
         MVCL  R0,R14                                                   00111000
*          RFY (R0,R1,R14,R15) UNRSTD;/* RELEASE WORK REGISTERS      */ 00112000
*          PCEPTR = PCLPTR+PASSLNG;   /* POINT TO PASSWORD PCE       */ 00113000
         L     @15,PCLPTR                                          0046 00114000
         LH    PCEPTR,PASSLNG                                      0046 00115000
         ALR   PCEPTR,@15                                          0046 00116000
*          PCLFLAGS = PCLFLAGS&'EF'X; /* MAKE PASSWORD OPTIONAL      */ 00117000
         LA    @14,239                                             0047 00118000
         SLR   @05,@05                                             0047 00119000
         IC    @05,PCLFLAGS(,PCEPTR)                               0047 00120000
         NR    @05,@14                                             0047 00121000
         STC   @05,PCLFLAGS(,PCEPTR)                               0047 00122000
*          PCEPTR = PCLPTR+ACCTLNG;   /* POINT TO ACCTNMBR PCE       */ 00123000
         LH    PCEPTR,ACCTLNG                                      0048 00124000
         ALR   PCEPTR,@15                                          0048 00125000
*          PCLFLAGS = PCLFLAGS&'EF'X; /* MAKE ACCTNMBR OPTIONAL      */ 00126000
         SLR   @05,@05                                             0049 00127000
         IC    @05,PCLFLAGS(,PCEPTR)                               0049 00128000
         NR    @05,@14                                             0049 00129000
         STC   @05,PCLFLAGS(,PCEPTR)                               0049 00130000
*          PCEPTR = PCLPTR+PROCLNG;   /* POINT TO PROCEDURE PCE      */ 00131000
         LH    @05,PROCLNG                                         0050 00132000
         LR    @04,@15                                             0050 00133000
         ALR   @04,@05                                             0050 00134000
         LR    PCEPTR,@04                                          0050 00135000
*          PCLFLAGS = PCLFLAGS&'EF'X; /* MAKE PROCEDURE OPTIONAL     */ 00136000
         SLR   @03,@03                                             0051 00137000
         IC    @03,PCLFLAGS(,PCEPTR)                               0051 00138000
         NR    @14,@03                                             0051 00139000
         STC   @14,PCLFLAGS(,PCEPTR)                               0051 00140000
*          IF CMDIND = 3              /* IS THIS A DELETE SUBCOMMAND?*/ 00141000
*            THEN                     /* YES,                        */ 00142000
         CLI   CMDIND(VCHKPTR),3                                   0052 00143000
         BNE   @RF00052                                            0052 00144000
*              DO;                                                 0053 00145000
*              PCEPTR = PCLPTR+PROCLNG;/* POINT TO PROC PCE          */ 00146000
         LR    PCEPTR,@04                                          0054 00147000
*              PCLFLAGS = 0;          /* SET END OF PCL INDICATOR    */ 00148000
         MVI   PCLFLAGS(PCEPTR),X'00'                              0055 00149000
*              PCLENDO = PROCLNG;     /* SET END OFFSET TO FOLLOW  0056 00150000
*                                        ACCTPCE                     */ 00151000
         STH   @05,PCLENDO+2(,@15)                                 0056 00152000
*              END;                                                0057 00153000
*          /* OBTAIN DYNAMIC STORAGE FOR A 'BUFFER' FOR THE NODELIST */ 00154000
*          RFY R0 RSTD;               /* RESERVE REG. FOR GETMAIN    */ 00155000
@RF00052 DS    0H                                                  0059 00156000
*          R0=PDELEN+4;               /* LENGTH OF NODELIST + HEADR  */ 00157000
         L     @09,PDEPTR(,PARSPTR)                                0059 00158000
         LA    R0,4                                                0059 00159000
         AH    R0,PDELEN(,@09)                                     0059 00160000
*          NDBUFLN=R0;                /* SAVE LENGTH FOR FREEMAIN    */ 00161000
         ST    R0,NDBUFLN                                          0060 00162000
*          /* ISSUE OS/360 GETMAIN MACRO FOR A 'BUFFER'              */ 00163000
*          GEN (GETMAIN EC,LV=(R0),A=NDBUFPTR,MF=(E,DYNGTLST))     0061 00164000
*            SETS(NDBUFPTR) REFS(DYNGTLST,R0);                     0061 00165000
         GETMAIN EC,LV=(R0),A=NDBUFPTR,MF=(E,DYNGTLST)                  00166000
*          NDBUFLNG=NDBUFLN;          /* FILL IN BUFFER HEADER       */ 00167000
         L     @09,NDBUFLN                                         0062 00168000
         L     @01,NDBUFPTR                                        0062 00169000
         STH   @09,NDBUFLNG(,@01)                                  0062 00170000
*          NDBFOFST=0;                /* SET OFFSET TO DATA ORIGIN   */ 00171000
         SLR   @15,@15                                             0063 00172000
         STH   @15,NDBFOFST(,@01)                                  0063 00173000
*          /* MOVE NODELIST P-STRING INTO MAKESHIFT 'BUFFER'         */ 00174000
*          RFY (R1,R14,R15) RSTD;     /* RESTRICT WORK REGISTERS     */ 00175000
*          R0=NDBUFPTR+4;             /* GET TO ADDRESS              */ 00176000
         L     @05,NDBUFPTR                                        0065 00177000
         LA    @04,4                                               0065 00178000
         ALR   @05,@04                                             0065 00179000
         LR    R0,@05                                              0065 00180000
*          R1=NDBUFLN-4;              /* LOAD R1 WITH LENGTH         */ 00181000
         SLR   @09,@04                                             0066 00182000
         LR    R1,@09                                              0066 00183000
*          R14=PDEADD;                /* GET FROM ADDRESS            */ 00184000
         L     @05,PDEPTR(,PARSPTR)                                0067 00185000
         L     R14,PDEADD(,@05)                                    0067 00186000
*          R15=NDBUFLN-4;             /* LOAD R15 WITH LENGTH        */ 00187000
         LR    R15,@09                                             0068 00188000
*          GEN (MVCL  R0,R14)         /* MOVE PCL TO GOTTEN CORE     */ 00189000
*            REFS(R0,R1,R14,R15);                                  0069 00190000
         MVCL  R0,R14                                                   00191000
*          RFY (R0,R1,R14,R15) UNRSTD;/* RELEASE WORK REGISTERS      */ 00192000
*          /* BUILD PARSE PARAMETER LIST (PPL) FOR NESTED PARSE      */ 00193000
*          NDPRSLST(1:12)=PPLPTRA->PPL;/* FIRST THREE WORDS FROM   0071 00194000
*                                        SUBCOMMAND PPL              */ 00195000
         L     @09,PPLPTRA(,VCHKPTR)                               0071 00196000
         MVC   NDPRSLST(12),PPL(@09)                               0071 00197000
*          PPLPTR=ADDR(NDPRSLST);     /* ESTABLISH PPL ADDRESSABLTY  */ 00198000
         LA    PPLPTR,NDPRSLST                                     0072 00199000
*          PPLPCL=PCLPTR;             /* ADDRESS OF NODELIST PCL     */ 00200000
         L     @09,PCLPTR                                          0073 00201000
         ST    @09,PPLPCL(,PPLPTR)                                 0073 00202000
*          PPLANS=ADDR(NDANSPL);      /* NODEPLAD WILL POINT TO    0074 00203000
*                                        NODELIST PDL AFTER PARSE    */ 00204000
         LA    @09,NDANSPL                                         0074 00205000
         ST    @09,PPLANS(,PPLPTR)                                 0074 00206000
*          PPLCBUF=NDBUFPTR;          /* ADDR OF NODELIST 'BUFFER'   */ 00207000
         L     @09,NDBUFPTR                                        0075 00208000
         ST    @09,PPLCBUF(,PPLPTR)                                0075 00209000
*          RFY R13 RSTD;                                           0076 00210000
*          PPLUWA=R13;                /* PASS ALONG ADDR OF MAINLINE    00211000
*                                        REG SAVE AREA SO THAT     0077 00212000
*                                        VALIDITY CHECK EXIT ROUTINES   00213000
*                                        CAN RESTORE ADDRESSABILITY  */ 00214000
         ST    R13,PPLUWA(,PPLPTR)                                 0077 00215000
*          RFY R13 UNRSTD;                                         0078 00216000
*          PASSSW='0'B;               /* INITIALIZE PASSWORD STATUS     00217000
*                                        SWITCH TO SIGNAL 'PASSWORD     00218000
*                                        EXIT ROUTINE NOT EXECUTING  */ 00219000
         NI    PASSSW,B'10111111'                                  0079 00220000
*          /* LINK TO PARSE ROUTINE                                  */ 00221000
*          GEN (LINK  EP=IKJPARS,MF=(E,NDPRSLST))                  0080 00222000
*            FLOWS(USIDEXIT,PASSEXIT,ACCTEXIT,PROCEXIT) REFS(NDPRSLST); 00223000
         LINK  EP=IKJPARS,MF=(E,NDPRSLST)                               00224000
*          RFY R15 RSTD;              /* RESTRICT RETURN CODE REG    */ 00225000
*          PARSRTCD=R15;              /* SAVE RETURN CODE            */ 00226000
         LR    PARSRTCD,R15                                        0082 00227000
*          RFY R15 UNRSTD;            /* RELEASE RETURN CODE REG     */ 00228000
*          /* CHECK RETURN CODE                                      */ 00229000
*          IF PARSRTCD^=0                                          0084 00230000
*            THEN                     /* PARSE EXCEPTION             */ 00231000
         LTR   PARSRTCD,PARSRTCD                                   0084 00232000
         BZ    @RF00084                                            0084 00233000
*                DO;                                               0085 00234000
*                IF PARSRTCD^=20      /* DID IKJDEXIT SAVE THE     0086 00235000
*                                        RETURN CODE?                */ 00236000
*                  THEN               /* NO,                         */ 00237000
         C     PARSRTCD,@CF00187                                   0086 00238000
         BE    @RF00086                                            0086 00239000
*                    EXITRTCD=PARSRTCD; /* SAVE THE RETURN CODE      */ 00240000
         ST    PARSRTCD,EXITRTCD(,VCHKPTR)                         0087 00241000
*                RETNCODE=12;         /* TELL PARSE TO QUIT          */ 00242000
@RF00086 LA    RETNCODE,12                                         0088 00243000
*                GOTO NDCLNUP;        /* GO TO ERROR TERMINATION     */ 00244000
         B     NDCLNUP                                             0089 00245000
*                END;                                              0090 00246000
*          /* NOW, COUNT THE ITEMS FOUND BY PARSE IN THE NODELIST    */ 00247000
*          PDLPTR=NODEPLAD+8;         /* INITIALIZE PTR TO PDL       */ 00248000
@RF00084 LA    PDLPTR,8                                            0091 00249000
         L     @09,NODEPLAD-1                                      0091 00250000
         LA    @09,0(,@09)                                         0091 00251000
         ALR   PDLPTR,@09                                          0091 00252000
*          /* LOOK AT PDE FLAGS TO ASCERTAIN PRESENCE OF NODE        */ 00253000
*          IF PDLFLG(1)='0'B          /* WAS USERID SPECIFIED?       */ 00254000
*            THEN                     /* NO,                         */ 00255000
         TM    PDLFLG(PDLPTR),B'10000000'                          0092 00256000
         BNZ   @RF00092                                            0092 00257000
*              DO;                                                 0093 00258000
*              RETNCODE=4;            /* TELL PARSE TO PROMPT        */ 00259000
         LA    RETNCODE,4                                          0094 00260000
*              GOTO NDCLNUP;          /* GO TO ERROR TERMINATION     */ 00261000
         B     NDCLNUP                                             0095 00262000
*              END;                                                0096 00263000
*          USRID=NODEITEM(1:PDLLEN);  /* PUT USERID IN NODELIST TAB  */ 00264000
@RF00092 L     @09,NODEPTR(,VCHKPTR)                               0097 00265000
         MVI   USRID+1(@09),C' '                                   0097 00266000
         MVC   USRID+2(6,@09),USRID+1(@09)                         0097 00267000
         LH    @06,PDLLEN(,PDLPTR)                                 0097 00268000
         LR    @03,@06                                             0097 00269000
         BCTR  @03,0                                               0097 00270000
         L     @01,PDLADD(,PDLPTR)                                 0097 00271000
         EX    @03,@SM00264                                        0097 00272000
*          USRLEN=PDLLEN;             /* PUT USERID LENGTH INTO TAB  */ 00273000
         STC   @06,USRLEN(,@09)                                    0098 00274000
*          NUMOFLVL=NUMOFLVL+1;       /* COUNT THIS NODE LEVEL       */ 00275000
         LA    @06,1                                               0099 00276000
         ALR   NUMOFLVL,@06                                        0099 00277000
*          PDLPTR=PDLPTR+8;           /* STEP TO NEXT NODE-ITEM      */ 00278000
         LA    @03,8                                               0100 00279000
         ALR   PDLPTR,@03                                          0100 00280000
*          IF PDLFLG(1)='0'B          /* WAS PASSWD SPECIFIED?       */ 00281000
*            THEN                     /* NO,                         */ 00282000
         TM    PDLFLG(PDLPTR),B'10000000'                          0101 00283000
         BZ    @RT00101                                            0101 00284000
*              GOTO EXIT;             /* GO CHECK FOR CALLERS EXIT   */ 00285000
*          PASSWD=NODEITEM(1:PDLLEN); /* PUT PASSWD IN NODELIST TAB  */ 00286000
         MVI   PASSWD+1(@09),C' '                                  0103 00287000
         MVC   PASSWD+2(6,@09),PASSWD+1(@09)                       0103 00288000
         LH    @15,PDLLEN(,PDLPTR)                                 0103 00289000
         BCTR  @15,0                                               0103 00290000
         L     @01,PDLADD(,PDLPTR)                                 0103 00291000
         EX    @15,@SM00266                                        0103 00292000
*          NUMOFLVL=NUMOFLVL+1;       /* COUNT THIS NODE LEVEL       */ 00293000
         ALR   NUMOFLVL,@06                                        0104 00294000
*          PDLPTR=PDLPTR+8;           /* STEP TO NEXT NODE-ITEM      */ 00295000
         ALR   PDLPTR,@03                                          0105 00296000
*          IF PDLFLG(1)='0'B          /* WAS ACCTNO SPECIFIED?       */ 00297000
*            THEN                     /* NO,                         */ 00298000
         TM    PDLFLG(PDLPTR),B'10000000'                          0106 00299000
         BZ    @RT00106                                            0106 00300000
*              GOTO EXIT;             /* GO CHECK FOR CALLERS EXIT   */ 00301000
*          ACCTNO=NODEITEM(1:PDLLEN); /* PUT ACCTNO IN NODELIST TAB  */ 00302000
         MVI   ACCTNO+1(@09),C' '                                  0108 00303000
         MVC   ACCTNO+2(38,@09),ACCTNO+1(@09)                      0108 00304000
         LH    @15,PDLLEN(,PDLPTR)                                 0108 00305000
         LR    @14,@15                                             0108 00306000
         BCTR  @14,0                                               0108 00307000
         L     @01,PDLADD(,PDLPTR)                                 0108 00308000
         EX    @14,@SM00268                                        0108 00309000
*          ACTLEN=PDLLEN;             /* PUT ACCTNO LENGTH INTO TAB  */ 00310000
         STC   @15,ACTLEN(,@09)                                    0109 00311000
*          NUMOFLVL=NUMOFLVL+1;       /* COUNT THIS NODE LEVEL       */ 00312000
         ALR   NUMOFLVL,@06                                        0110 00313000
*          PDLPTR=PDLPTR+8;           /* STEP TO NEXT NODE-ITEM      */ 00314000
         ALR   PDLPTR,@03                                          0111 00315000
*          IF PDLFLG(1)='0'B          /* WAS PROCNM SPECIFIED?       */ 00316000
*            THEN                     /* NO,                         */ 00317000
         TM    PDLFLG(PDLPTR),B'10000000'                          0112 00318000
         BZ    @RT00112                                            0112 00319000
*              GOTO EXIT;             /* GO CHECK FOR CALLERS EXIT   */ 00320000
*          PROCNM=NODEITEM(1:PDLLEN); /* PUT PROCNM IN NODELIST TAB  */ 00321000
         MVI   PROCNM+1(@09),C' '                                  0114 00322000
         MVC   PROCNM+2(6,@09),PROCNM+1(@09)                       0114 00323000
         LH    @03,PDLLEN(,PDLPTR)                                 0114 00324000
         BCTR  @03,0                                               0114 00325000
         L     @01,PDLADD(,PDLPTR)                                 0114 00326000
         EX    @03,@SM00270                                        0114 00327000
*          NUMOFLVL=NUMOFLVL+1;       /* COUNT THIS NODE LEVEL       */ 00328000
         ALR   NUMOFLVL,@06                                        0115 00329000
*EXIT:     NUMOFLV=NUMOFLVL;          /* SET NODE LEVEL COUNTER      */ 00330000
EXIT     STC   NUMOFLVL,NUMOFLV(,VCHKPTR)                          0116 00331000
*          IF EXITADD^=0              /* IS AN EXIT SPECIFIED?       */ 00332000
*            THEN                     /* YES,                        */ 00333000
         L     @10,EXITADD(,VCHKPTR)                               0117 00334000
         LTR   @10,@10                                             0117 00335000
         BZ    @RF00117                                            0117 00336000
*              DO;                                                 0118 00337000
*              RFY R1 RSTD;           /* RESTRICT REGISTERS          */ 00338000
*              R1=SAVARAD;            /* POINT TO SUBCOMMAND SAVE  0120 00339000
*                                          AREA                      */ 00340000
         L     R1,SAVARAD(,VCHKPTR)                                0120 00341000
*              CALL SUBEXIT;          /* GO TO THE EXIT              */ 00342000
         LR    @15,@10                                             0121 00343000
         BALR  @14,@15                                             0121 00344000
*              RFY R1 UNRSTD;         /* RELEASE REGISTERS           */ 00345000
*              RFY R15 RSTD;                                       0123 00346000
*              RETNCODE=R15;          /* SET EXIT'S RETURN CODE      */ 00347000
         LR    RETNCODE,R15                                        0124 00348000
*              RFY R15 UNRSTD;                                     0125 00349000
*              END;                                                0126 00350000
*NDCLNUP:  /* CTL. PASSED OR DROPPED HERE TO CLEAN UP                */ 00351000
*          RFY R1 RSTD;               /* RESTRICT PDL POINTER REG    */ 00352000
@RF00117 DS    0H                                                  0127 00353000
NDCLNUP  DS    0H                                                  0128 00354000
*          R1=ADDR(NDANSPL);          /* ADDRESS PDL POINTER @ZA16396*/ 00355000
         LA    R1,NDANSPL                                          0128 00356000
*          CALL PARSREL;              /* GO TO FREE PDL AREA         */ 00357000
         BAL   @14,PARSREL                                         0129 00358000
*          RFY R1 UNRSTD;             /* RELEASE PDL POINTER REG     */ 00359000
*          /* WAS A PCL 'BUFFER' ACQUIRED ?                          */ 00360000
*          IF PCLPTR^=NDPCLPTR                                     0131 00361000
*            THEN                     /* MUST FREEMAIN THE BUFFER    */ 00362000
         CLC   PCLPTR(4),NDPCLPTR                                  0131 00363000
         BE    @RF00131                                            0131 00364000
*              DO;                                                 0132 00365000
*                RFY R0 RSTD;         /* RESTRICT PARM REGISTER      */ 00366000
*                R0=PLENGTH;          /* BUFFER LENGTH TO PARM REG   */ 00367000
         L     R0,PLENGTH                                          0134 00368000
*                /* ISSUE OS/360 FREEMAIN MACRO TO RELEASE BUFFER    */ 00369000
*                GEN (FREEMAIN V,A=PCLPTR,MF=(E,DYNFRLST))         0135 00370000
*                  REFS(DYNFRLST,PCLPTR,PLENGTH);                  0135 00371000
         FREEMAIN V,A=PCLPTR,MF=(E,DYNFRLST)                            00372000
*                RFY R0 UNRSTD;       /* RELEASE PARM REGISTER       */ 00373000
*              END;                                                0137 00374000
*          /* WAS A NODELIST 'BUFFER' ACQUIRED ?                     */ 00375000
*          IF NDBUFPTR^=0                                          0138 00376000
*            THEN                     /* MUST FREEMAIN THE BUFFER    */ 00377000
@RF00131 L     @10,NDBUFPTR                                        0138 00378000
         LTR   @10,@10                                             0138 00379000
         BZ    @RF00138                                            0138 00380000
*              DO;                                                 0139 00381000
*                RFY R0 RSTD;         /* RESTRICT PARM REGISTER      */ 00382000
*                R0=NDBUFLNG;         /* BUFFER LENGTH TO PARM REG   */ 00383000
         LH    R0,NDBUFLNG(,@10)                                   0141 00384000
*                /* ISSUE OS/360 FREEMAIN MACRO TO RELEASE BUFFER    */ 00385000
*                GEN (FREEMAIN V,A=NDBUFPTR,MF=(E,DYNFRLST))       0142 00386000
*                  REFS(DYNFRLST,NDBUFLN,NDBUFPTR);                0142 00387000
         FREEMAIN V,A=NDBUFPTR,MF=(E,DYNFRLST)                          00388000
*                RFY R0 UNRSTD;       /* RELEASE PARM REGISTER       */ 00389000
*              END;                                                0144 00390000
*          RETURN CODE(RETNCODE);                                  0145 00391000
@RF00138 L     @13,4(,@13)                                         0145 00392000
         L     @00,@SIZDATD                                        0145 00393000
         LR    @01,@11                                             0145 00394000
         FREEMAIN R,LV=(0),A=(1)                                        00395000
         LR    @15,@08                                             0145 00396000
         L     @14,12(,@13)                                        0145 00397000
         LM    @00,@12,20(@13)                                     0145 00398000
         BR    @14                                                 0145 00399000
*          /* PARSREL: ROUTINE TO RELEASE PARSE PDL AREA             */ 00400000
*PARSREL:  PROC;                                                   0146 00401000
PARSREL  STM   @14,@12,@SA00002                                    0146 00402000
*          RFY R1 RSTD;              /* RESTRICT WORK REGISTER       */ 00403000
*          IF R1 ^= 0                /* IS THERE A PDL POINTER?      */ 00404000
*            THEN                    /* YES,                         */ 00405000
         LTR   R1,R1                                               0148 00406000
         BZ    @RF00148                                            0148 00407000
*              GEN (IKJRLSA (R1))    /* ISSUE TSO MACRO TO FREE PDL  */ 00408000
*                REFS(R1);                                         0149 00409000
         IKJRLSA (R1)                                                   00410000
*          RFY R1 UNRSTD;            /* RELEASE WORK REGISTER        */ 00411000
*          END PARSREL;                                            0151 00412000
@EL00002 DS    0H                                                  0151 00413000
@EF00002 DS    0H                                                  0151 00414000
@ER00002 LM    @14,@12,@SA00002                                    0151 00415000
         BR    @14                                                 0151 00416000
*ACCTEXTR: /* EXTERNAL ENTRY POINT TO CHECK THE VALIDITY OF AN ACCOUNT  00417000
*             NUMBER.                                                */ 00418000
*          ENTRY;                                                  0152 00419000
@EP00152 DS    0H                                                  0153 00420000
*          RFY R1 RSTD;               /* RESTRICT PARAMETER POINTER  */ 00421000
*          PARSPTR=R1;                /* PTR TO PARSE PARM LIST      */ 00422000
         LR    PARSPTR,R1                                          0154 00423000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00424000
*          VCHKPTR = USERWORD;        /* SAVE POINTER TO COMM AREA   */ 00425000
         L     VCHKPTR,USERWORD(,PARSPTR)                          0156 00426000
*          IF CMDIND^=1               /* IF THIS ISNT AN ADD COMMAND */ 00427000
*           & PDELEN=1                /* AND LENGTH EQUAL ONE        */ 00428000
*           & PDECHAR='*'             /* AND IT IS AN ASTERISK       */ 00429000
*            THEN                     /* YES                         */ 00430000
         CLI   CMDIND(VCHKPTR),1                                   0157 00431000
         BE    @RF00157                                            0157 00432000
         L     @10,PDEPTR(,PARSPTR)                                0157 00433000
         CLC   PDELEN(2,@10),@CH00032                              0157 00434000
         BNE   @RF00157                                            0157 00435000
         L     @10,PDEADD(,@10)                                    0157 00436000
         CLI   PDECHAR(@10),C'*'                                   0157 00437000
         BNE   @RF00157                                            0157 00438000
*              RETURN CODE(4);        /* TELL PARSE TO PROMPT        */ 00439000
         L     @13,4(,@13)                                         0158 00440000
         L     @00,@SIZDATD                                        0158 00441000
         LR    @01,@11                                             0158 00442000
         FREEMAIN R,LV=(0),A=(1)                                        00443000
         LA    @15,4                                               0158 00444000
         L     @14,12(,@13)                                        0158 00445000
         LM    @00,@12,20(@13)                                     0158 00446000
         BR    @14                                                 0158 00447000
*          /* SCAN FOR AN APOSTROPHE TO END OF CHARACTER STRING      */ 00448000
*          DO BYTEPTR=PDELEN TO 1 BY -1;                           0159 00449000
@RF00157 L     @10,PDEPTR(,PARSPTR)                                0159 00450000
         LH    BYTEPTR,PDELEN(,@10)                                0159 00451000
         B     @DE00159                                            0159 00452000
@DL00159 DS    0H                                                  0160 00453000
*            IF PDECHAR(BYTEPTR)='''' /* IS THIS CHAR AN APOSTROPHE  */ 00454000
*              THEN                   /* YES - ACCOUNT NUMBER NG     */ 00455000
         L     @10,PDEPTR(,PARSPTR)                                0160 00456000
         L     @10,PDEADD(,@10)                                    0160 00457000
         ALR   @10,BYTEPTR                                         0160 00458000
         BCTR  @10,0                                               0160 00459000
         CLI   PDECHAR(@10),C''''                                  0160 00460000
         BNE   @RF00160                                            0160 00461000
*                RETURN CODE(4);      /* TELL PARSE TO PROMPT        */ 00462000
         L     @13,4(,@13)                                         0161 00463000
         L     @00,@SIZDATD                                        0161 00464000
         LR    @01,@11                                             0161 00465000
         FREEMAIN R,LV=(0),A=(1)                                        00466000
         LA    @15,4                                               0161 00467000
         L     @14,12(,@13)                                        0161 00468000
         LM    @00,@12,20(@13)                                     0161 00469000
         BR    @14                                                 0161 00470000
*          END;                       /* REPEAT TIL LNGTH GOES TO 0  */ 00471000
@RF00160 BCTR  BYTEPTR,0                                           0162 00472000
@DE00159 LTR   BYTEPTR,BYTEPTR                                     0162 00473000
         BP    @DL00159                                            0162 00474000
*          RETURN CODE(0);            /* AND RETURN TO PARSE         */ 00475000
         L     @13,4(,@13)                                         0163 00476000
         L     @00,@SIZDATD                                        0163 00477000
         LR    @01,@11                                             0163 00478000
         FREEMAIN R,LV=(0),A=(1)                                        00479000
         SLR   @15,@15                                             0163 00480000
         L     @14,12(,@13)                                        0163 00481000
         LM    @00,@12,20(@13)                                     0163 00482000
         BR    @14                                                 0163 00483000
*PASSEXTR: /* EXTERNAL ENTRY POINT TO CHECK THE VALIDITY OF A      0164 00484000
*             PASSWORD.                                              */ 00485000
*          ENTRY;                                                  0164 00486000
@EP00164 DS    0H                                                  0165 00487000
*          RFY R1 RSTD;               /* RESTRICT PARAMETER POINTER  */ 00488000
*          PARSPTR=R1;                /* PTR TO PARSE PARM LIST      */ 00489000
         LR    PARSPTR,R1                                          0166 00490000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00491000
*          VCHKPTR = USERWORD;        /* SAVE POINTER TO COMM AREA   */ 00492000
         L     VCHKPTR,USERWORD(,PARSPTR)                          0168 00493000
*          IF CMDIND^=1               /* IF THIS ISNT AN ADD COMMAND */ 00494000
*           & PDELEN=1                /* AND LENGTH EQUAL ONE        */ 00495000
*           & PDECHAR='*'             /* AND IT IS AN ASTERISK       */ 00496000
*            THEN                     /* YES                         */ 00497000
         CLI   CMDIND(VCHKPTR),1                                   0169 00498000
         BE    @RF00169                                            0169 00499000
         L     @10,PDEPTR(,PARSPTR)                                0169 00500000
         CLC   PDELEN(2,@10),@CH00032                              0169 00501000
         BNE   @RF00169                                            0169 00502000
         L     @10,PDEADD(,@10)                                    0169 00503000
         CLI   PDECHAR(@10),C'*'                                   0169 00504000
         BNE   @RF00169                                            0169 00505000
*              RETURN CODE(4);        /* TELL PARSE TO PROMPT        */ 00506000
         L     @13,4(,@13)                                         0170 00507000
         L     @00,@SIZDATD                                        0170 00508000
         LR    @01,@11                                             0170 00509000
         FREEMAIN R,LV=(0),A=(1)                                        00510000
         LA    @15,4                                               0170 00511000
         L     @14,12(,@13)                                        0170 00512000
         LM    @00,@12,20(@13)                                     0170 00513000
         BR    @14                                                 0170 00514000
*          PASSSW='1'B;               /* SIGNAL THAT 'PASSEXTR' IS 0171 00515000
*                                        IN CONTROL                  */ 00516000
@RF00169 OI    PASSSW,B'01000000'                                  0171 00517000
*          CALL IKJDEXIT;             /* DROP INTO ID EXIT ROUTINE   */ 00518000
         BAL   @14,IKJDEXIT                                        0172 00519000
*          PASSSW='0'B;               /* RESET PASSWORD SWITCH       */ 00520000
         NI    PASSSW,B'10111111'                                  0173 00521000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00522000
         L     @13,4(,@13)                                         0174 00523000
         L     @00,@SIZDATD                                        0174 00524000
         LR    @01,@11                                             0174 00525000
         FREEMAIN R,LV=(0),A=(1)                                        00526000
         LR    @15,@08                                             0174 00527000
         L     @14,12(,@13)                                        0174 00528000
         LM    @00,@12,20(@13)                                     0174 00529000
         BR    @14                                                 0174 00530000
*PROCEXTR: /* EXTERNAL ENTRY POINT TO CHECK THE VALIDITY OF A      0175 00531000
*             PROCEDURE NAME.                                        */ 00532000
*          ENTRY;                                                  0175 00533000
@EP00175 DS    0H                                                  0176 00534000
*          RFY R1 RSTD;               /* RESTRICT PARAMETER POINTER  */ 00535000
*          PARSPTR=R1;                /* PTR TO PARSE PARM LIST      */ 00536000
         LR    PARSPTR,R1                                          0177 00537000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00538000
*          VCHKPTR = USERWORD;        /* SAVE POINTER TO COMM AREA   */ 00539000
         L     VCHKPTR,USERWORD(,PARSPTR)                          0179 00540000
*          IF PDELEN=1                /* IF LENGTH EQUAL ONE         */ 00541000
*           & PDECHAR='*'             /* AND IT IS AN ASTERISK       */ 00542000
*            THEN                     /* YES                         */ 00543000
         L     @10,PDEPTR(,PARSPTR)                                0180 00544000
         CLC   PDELEN(2,@10),@CH00032                              0180 00545000
         BNE   @RF00180                                            0180 00546000
         L     @10,PDEADD(,@10)                                    0180 00547000
         CLI   PDECHAR(@10),C'*'                                   0180 00548000
         BNE   @RF00180                                            0180 00549000
*              RETURN CODE(4);        /* TELL PARSE TO PROMPT        */ 00550000
         L     @13,4(,@13)                                         0181 00551000
         L     @00,@SIZDATD                                        0181 00552000
         LR    @01,@11                                             0181 00553000
         FREEMAIN R,LV=(0),A=(1)                                        00554000
         LA    @15,4                                               0181 00555000
         L     @14,12(,@13)                                        0181 00556000
         LM    @00,@12,20(@13)                                     0181 00557000
         BR    @14                                                 0181 00558000
*          CALL IKJDEXIT;             /* DROP INTO ID EXIT ROUTINE   */ 00559000
@RF00180 BAL   @14,IKJDEXIT                                        0182 00560000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00561000
         L     @13,4(,@13)                                         0183 00562000
         L     @00,@SIZDATD                                        0183 00563000
         LR    @01,@11                                             0183 00564000
         FREEMAIN R,LV=(0),A=(1)                                        00565000
         LR    @15,@08                                             0183 00566000
         L     @14,12(,@13)                                        0183 00567000
         LM    @00,@12,20(@13)                                     0183 00568000
         BR    @14                                                 0183 00569000
*USIDEXTR: /* EXTERNAL ENTRY POINT TO CHECK THE VALIDITY OF A USERID.*/ 00570000
*          ENTRY;                                                  0184 00571000
@EP00184 DS    0H                                                  0185 00572000
*          RFY R1 RSTD;               /* RESTRICT PARAMETER POINTER  */ 00573000
*          PARSPTR=R1;                /* PTR TO PARSE PARM LIST      */ 00574000
         LR    PARSPTR,R1                                          0186 00575000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00576000
*          VCHKPTR = USERWORD;        /* SAVE POINTER TO COMM AREA   */ 00577000
         L     VCHKPTR,USERWORD(,PARSPTR)                          0188 00578000
*          IF PDELEN=1                /* IF LENGTH EQUAL ONE         */ 00579000
*           & PDECHAR='*'             /* AND IT IS AN ASTERISK       */ 00580000
*            THEN                     /* YES                         */ 00581000
         L     @10,PDEPTR(,PARSPTR)                                0189 00582000
         CLC   PDELEN(2,@10),@CH00032                              0189 00583000
         BNE   @RF00189                                            0189 00584000
         L     @10,PDEADD(,@10)                                    0189 00585000
         CLI   PDECHAR(@10),C'*'                                   0189 00586000
         BNE   @RF00189                                            0189 00587000
*              RETURN CODE(4);        /* TELL PARSE TO PROMPT        */ 00588000
         L     @13,4(,@13)                                         0190 00589000
         L     @00,@SIZDATD                                        0190 00590000
         LR    @01,@11                                             0190 00591000
         FREEMAIN R,LV=(0),A=(1)                                        00592000
         LA    @15,4                                               0190 00593000
         L     @14,12(,@13)                                        0190 00594000
         LM    @00,@12,20(@13)                                     0190 00595000
         BR    @14                                                 0190 00596000
*          CALL IKJDEXIT;             /* DROP INTO ID EXIT ROUTINE   */ 00597000
@RF00189 BAL   @14,IKJDEXIT                                        0191 00598000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00599000
         L     @13,4(,@13)                                         0192 00600000
         L     @00,@SIZDATD                                        0192 00601000
         LR    @01,@11                                             0192 00602000
         FREEMAIN R,LV=(0),A=(1)                                        00603000
         LR    @15,@08                                             0192 00604000
         L     @14,12(,@13)                                        0192 00605000
         LM    @00,@12,20(@13)                                     0192 00606000
         BR    @14                                                 0192 00607000
*USIDEXIT: /* ENTRY POINT FOR FIRST-CHARACTER VALIDITY CHECK EXIT  0193 00608000
*             ROUTINE                                                */ 00609000
*          PROC OPTIONS(NOSAVEAREA);                               0193 00610000
USIDEXIT STM   @14,@12,12(@13)                                     0193 00611000
*          /* FIX UP ADDRESSABILITY                                  */ 00612000
*          RFY (R1,R2,R13) RSTD;      /* RESTRICT REGISTERS          */ 00613000
*          R2=SAVEARP;                /* GET PTR TO SAVE AREA        */ 00614000
         L     R2,SAVEARP+4(,R1)                                   0195 00615000
*          GEN (LM  R2,R12,28(R2));   /* RESTORE REGISTERS           */ 00616000
         LM  R2,R12,28(R2)                                              00617000
*          EXITSAVE(2)=R13;           /* SAVE PARSE SAVE AREA PTR    */ 00618000
         ST    R13,EXITSAVE+4                                      0197 00619000
*          R13=ADDR(EXITSAVE);        /* POINT TO SAVE AREA          */ 00620000
         LA    R13,EXITSAVE                                        0198 00621000
*          USIDSW='1'B;               /* SIGNAL THAT 'USIDEXIT' IS 0199 00622000
*                                        IN CONTROL                  */ 00623000
         OI    USIDSW,B'10000000'                                  0199 00624000
*          CALL IKJDEXIT;             /* DROP INTO ID EXIT ROUTINE   */ 00625000
         BAL   @14,IKJDEXIT                                        0200 00626000
*          USIDSW='0'B;               /* RESET USERID SWITCH         */ 00627000
         NI    USIDSW,B'01111111'                                  0201 00628000
*          R13=EXITSAVE(2);           /* RESTORE PARSE SAVE AREA PTR */ 00629000
         L     R13,EXITSAVE+4                                      0202 00630000
*          RFY (R1,R2) UNRSTD;        /* RELEASE REGISTERS           */ 00631000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00632000
         LR    @15,RETNCODE                                        0204 00633000
         L     @14,12(,@13)                                        0204 00634000
         LM    @00,@12,20(@13)                                     0204 00635000
         BR    @14                                                 0204 00636000
*          END USIDEXIT;                                           0205 00637000
*          /* ENTRY POINT FOR PASSWORD VALIDITY CHECK EXIT RTNE TO 0206 00638000
*             FIX UP ADDRESSABILITY                                  */ 00639000
*PASSEXIT: PROC OPTIONS(NOSAVEAREA);                               0206 00640000
PASSEXIT STM   @14,@12,12(@13)                                     0206 00641000
*          RFY (R1,R2,R13) RSTD;      /* RESTRICT REGISTERS          */ 00642000
*          R2=SAVEARP;                /* GET PTR TO SAVE AREA        */ 00643000
         L     R2,SAVEARP+4(,R1)                                   0208 00644000
*          GEN (LM  R2,R12,28(R2));   /* RESTORE REGISTERS           */ 00645000
         LM  R2,R12,28(R2)                                              00646000
*          EXITSAVE(2)=R13;           /* SAVE PARSE SAVE AREA PTR    */ 00647000
         ST    R13,EXITSAVE+4                                      0210 00648000
*          R13=ADDR(EXITSAVE);        /* POINT TO SAVE AREA          */ 00649000
         LA    R13,EXITSAVE                                        0211 00650000
*          PASSSW='1'B;               /* SIGNAL THAT 'PASSEXIT' IS 0212 00651000
*                                        IN CONTROL                  */ 00652000
         OI    PASSSW,B'01000000'                                  0212 00653000
*          PCEPTR = PCLPTR+PASSLNG;   /* POINT TO PASSWORD PCE       */ 00654000
         LH    PCEPTR,PASSLNG                                      0213 00655000
         AL    PCEPTR,PCLPTR                                       0213 00656000
*          PCLFLAGS = PCLFLAGS|'10'X; /* MAKE PASSWORD REQUIRED      */ 00657000
         LA    @10,16                                              0214 00658000
         SLR   @08,@08                                             0214 00659000
         IC    @08,PCLFLAGS(,PCEPTR)                               0214 00660000
         OR    @10,@08                                             0214 00661000
         STC   @10,PCLFLAGS(,PCEPTR)                               0214 00662000
*          RFY PARSLST BASED(R1);     /* RESET PARS PARM LIST PTRS   */ 00663000
*          IF PDELEN > 8              /* IS THE LENGTH INVALID?      */ 00664000
*            THEN                     /* YES,                        */ 00665000
         L     @10,PDEPTR(,R1)                                     0216 00666000
         LH    @10,PDELEN(,@10)                                    0216 00667000
         C     @10,@CF00066                                        0216 00668000
         BNH   @RF00216                                            0216 00669000
*              RETNCODE = 4;          /* TELL PARSE TO PROMPT        */ 00670000
         LA    RETNCODE,4                                          0217 00671000
*            ELSE                     /* THE LENGTH IS VALID         */ 00672000
*              CALL IKJDEXIT;         /* DROP INTO ID EXIT ROUTINE   */ 00673000
         B     @RC00216                                            0218 00674000
@RF00216 BAL   @14,IKJDEXIT                                        0218 00675000
*          PASSSW='0'B;               /* RESET PASSWORD SWITCH       */ 00676000
@RC00216 NI    PASSSW,B'10111111'                                  0219 00677000
*          R13=EXITSAVE(2);           /* RESTORE PARSE SAVE AREA PTR */ 00678000
         L     R13,EXITSAVE+4                                      0220 00679000
*          RFY PARSLST BASED(PARSPTR);/* RESET PARSE PARM LIST PTR   */ 00680000
*          RFY (R1,R2) UNRSTD;        /* RELEASE REGISTERS           */ 00681000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00682000
         LR    @15,RETNCODE                                        0223 00683000
         L     @14,12(,@13)                                        0223 00684000
         LM    @00,@12,20(@13)                                     0223 00685000
         BR    @14                                                 0223 00686000
*          END PASSEXIT;                                           0224 00687000
*     /* THE ACCOUNT NUMBER VALIDITY CHECK EXIT ROUTINE EXAMINES ALL */ 00688000
*     /* ACCOUNT NUMBER OPERANDS ENTERED IN ACCOUNT SUBCOMMANDS FOR  */ 00689000
*     /* APOSTROPHES.  ACCOUNT NUMBERS CONTAINING APOSTROPHES ARE    */ 00690000
*     /* REJECTED BECAUSE ACCOUNT NUMBERS WHICH ARE ENTERED INTO THE */ 00691000
*     /* UADS MAY BE USED BY THE LOGON COMMAND PROCESSOR IN CREATING */ 00692000
*     /* JOB CARD IMAGES FOR THE READER/INTERPRETER.  THE LOGON      */ 00693000
*     /* PROCESSOR WILL ENCLOSE THE ACCOUNT NUMBER IN APOSTROPHES TO */ 00694000
*     /* GAIN ACCEPTANCE BY THE READER/INTERPRETER OF OTHER SPECIAL  */ 00695000
*     /* CHARACTERS WHICH ARE PERMITTED IN ACCOUNT NUMBERS.  EMBEDDED*/ 00696000
*     /* APOSTROPHES MUST THEREFORE BE SCREENED OUT.                 */ 00697000
*     /***************************************************************/ 00698000
*ACCTEXIT: PROC OPTIONS(NOSAVEAREA);                               0225 00699000
ACCTEXIT STM   @14,@12,12(@13)                                     0225 00700000
*          /* FIX UP ADDRESSABILITY                                  */ 00701000
*          RFY (R1,R2) RSTD;          /* RESTRICT REGISTERS          */ 00702000
*          R2=SAVEARP;                /* GET PTR TO SAVE AREA        */ 00703000
         L     R2,SAVEARP+4(,R1)                                   0227 00704000
*          GEN (LM  R2,R12,28(R2));   /* RESTORE REGISTERS           */ 00705000
         LM  R2,R12,28(R2)                                              00706000
*          RETNCODE=0;                                             0229 00707000
         SLR   RETNCODE,RETNCODE                                   0229 00708000
*          PCEPTR = PCLPTR+ACCTLNG;   /* POINT TO ACCTNMBR PCE       */ 00709000
         LH    PCEPTR,ACCTLNG                                      0230 00710000
         AL    PCEPTR,PCLPTR                                       0230 00711000
*          PCLFLAGS = PCLFLAGS|'10'X; /* MAKE ACCTNMBR REQUIRED      */ 00712000
         LA    @10,16                                              0231 00713000
         SLR   @03,@03                                             0231 00714000
         IC    @03,PCLFLAGS(,PCEPTR)                               0231 00715000
         OR    @10,@03                                             0231 00716000
         STC   @10,PCLFLAGS(,PCEPTR)                               0231 00717000
*          RFY PARSLST BASED(R1);     /* RESET PARS PARM LIST PTRS   */ 00718000
*          IF PDELEN > 40             /* IS THE LENGTH INVALID?      */ 00719000
*            THEN                     /* YES,                        */ 00720000
         L     @10,PDEPTR(,R1)                                     0233 00721000
         LH    @10,PDELEN(,@10)                                    0233 00722000
         C     @10,@CF00118                                        0233 00723000
         BNH   @RF00233                                            0233 00724000
*              RETNCODE = 4;          /* TELL PARSE TO PROMPT        */ 00725000
         LA    RETNCODE,4                                          0234 00726000
*            ELSE                     /* THE LENGTH IS VALID         */ 00727000
*              /* SCAN FOR AN APOSTROPHE TO END OF CHARACTER STRING  */ 00728000
*              DO BYTEPTR=PDELEN TO 1 BY -1;                       0235 00729000
         B     @RC00233                                            0235 00730000
@RF00233 L     @10,PDEPTR(,R1)                                     0235 00731000
         LH    BYTEPTR,PDELEN(,@10)                                0235 00732000
         B     @DE00235                                            0235 00733000
@DL00235 DS    0H                                                  0236 00734000
*                IF PDECHAR(BYTEPTR)='''' /* IS CHAR AN APOSTROPHE?  */ 00735000
*                  THEN               /* YES - ACCOUNT NUMBER NG     */ 00736000
         L     @10,PDEPTR(,R1)                                     0236 00737000
         L     @10,PDEADD(,@10)                                    0236 00738000
         ALR   @10,BYTEPTR                                         0236 00739000
         BCTR  @10,0                                               0236 00740000
         CLI   PDECHAR(@10),C''''                                  0236 00741000
         BNE   @RF00236                                            0236 00742000
*                    RETNCODE=4;      /* TELL PARSE TO PROMPT        */ 00743000
         LA    RETNCODE,4                                          0237 00744000
*              END;                   /* REPEAT TIL LNGTH GOES TO 0  */ 00745000
@RF00236 BCTR  BYTEPTR,0                                           0238 00746000
@DE00235 LTR   BYTEPTR,BYTEPTR                                     0238 00747000
         BP    @DL00235                                            0238 00748000
*          RETURN CODE(RETNCODE);     /* AND RETURN TO PARSE         */ 00749000
@RC00233 LR    @15,RETNCODE                                        0239 00750000
         L     @14,12(,@13)                                        0239 00751000
         LM    @00,@12,20(@13)                                     0239 00752000
         BR    @14                                                 0239 00753000
*          RFY PARSLST BASED(PARSPTR);/* RESET PARSE PARM LIST PTR   */ 00754000
*          END ACCTEXIT;                                           0241 00755000
*          /* ENTRY POINT FOR PROCEDURE NAME VALIDITY CHECK EXIT   0242 00756000
*             ROUTINE                                                */ 00757000
*PROCEXIT: PROC OPTIONS(NOSAVEAREA);                               0242 00758000
PROCEXIT STM   @14,@12,12(@13)                                     0242 00759000
*        /* FIX UP ADDRESSABILITY                                    */ 00760000
*          RFY (R1,R2) RSTD;          /* RESTRICT REGISTERS          */ 00761000
*          R2=SAVEARP;                /* GET PTR TO SAVE AREA        */ 00762000
         L     R2,SAVEARP+4(,R1)                                   0244 00763000
*          GEN (LM  R2,R12,28(R2));   /* RESTORE REGISTERS           */ 00764000
         LM  R2,R12,28(R2)                                              00765000
*          EXITSAVE(2)=R13;           /* SAVE PARSE SAVE AREA PTR    */ 00766000
         ST    R13,EXITSAVE+4                                      0246 00767000
*          R13=ADDR(EXITSAVE);        /* POINT TO SAVE AREA          */ 00768000
         LA    R13,EXITSAVE                                        0247 00769000
*          PROCSW='1'B;               /* SIGNAL THAT 'PROCEXIT' IS 0248 00770000
*                                        IN CONTROL                  */ 00771000
         OI    PROCSW,B'00100000'                                  0248 00772000
*          PCEPTR = PCLPTR+PROCLNG;   /* POINT TO PROCEDURE PCE      */ 00773000
         LH    PCEPTR,PROCLNG                                      0249 00774000
         AL    PCEPTR,PCLPTR                                       0249 00775000
*          PCLFLAGS = PCLFLAGS|'10'X; /* MAKE PROCEDURE REQUIRED     */ 00776000
         LA    @10,16                                              0250 00777000
         SLR   @08,@08                                             0250 00778000
         IC    @08,PCLFLAGS(,PCEPTR)                               0250 00779000
         OR    @10,@08                                             0250 00780000
         STC   @10,PCLFLAGS(,PCEPTR)                               0250 00781000
*          RFY PARSLST BASED(R1);     /* RESET PARS PARM LIST PTRS   */ 00782000
*          IF PDELEN > 8              /* IS THE LENGTH INVALID?      */ 00783000
*            THEN                     /* YES,                        */ 00784000
         L     @10,PDEPTR(,R1)                                     0252 00785000
         LH    @10,PDELEN(,@10)                                    0252 00786000
         C     @10,@CF00066                                        0252 00787000
         BNH   @RF00252                                            0252 00788000
*              RETNCODE = 4;          /* TELL PARSE TO PROMPT        */ 00789000
         LA    RETNCODE,4                                          0253 00790000
*            ELSE                     /* THE LENGTH IS VALID         */ 00791000
*              CALL IKJDEXIT;         /* DROP INTO ID EXIT ROUTINE   */ 00792000
         B     @RC00252                                            0254 00793000
@RF00252 BAL   @14,IKJDEXIT                                        0254 00794000
*          PROCSW='0'B;               /* RESET PROCEDURE SWITCH      */ 00795000
@RC00252 NI    PROCSW,B'11011111'                                  0255 00796000
*          R13=EXITSAVE(2);           /* RESTORE PARSE SAVE AREA PTR */ 00797000
         L     R13,EXITSAVE+4                                      0256 00798000
*          RFY PARSLST BASED(PARSPTR);/* RESET PARSE PARM LIST PTR   */ 00799000
*          RFY (R1,R2) UNRSTD;        /* RELEASE REGISTERS           */ 00800000
*          RETURN CODE(RETNCODE);     /* RETURN TO PARSE             */ 00801000
         LR    @15,RETNCODE                                        0259 00802000
         L     @14,12(,@13)                                        0259 00803000
         LM    @00,@12,20(@13)                                     0259 00804000
         BR    @14                                                 0259 00805000
*          END PROCEXIT;                                           0260 00806000
*          /**********************************************************/ 00807000
*          /* IKJDEXIT:FIRST-CHARACTER VALIDITY CHECK EXIT ROUTINE - */ 00808000
*          /*   .USED WITH THE USERID, PASSWORD, AND PROCEDURE NAME  */ 00809000
*          /*    DEFINITIONS.                                        */ 00810000
*          /*   .VALIDATES THE FIRST CHARACTER OF EACH OF THE ABOVE  */ 00811000
*          /*    VIA A NESTED CALL TO PARSE.                         */ 00812000
*          /*   .THE 'IKJIDENT' DEFINITIONS GIVEN TO PARSE FOR EACH  */ 00813000
*          /*    OF THE ABOVE SPECIFY 'FIRST=ANY' FOR THE FIRST      */ 00814000
*          /*    CHARACTER CRITERION.  THIS ROUTINE DETERMINES       */ 00815000
*          /*    WHETHER THE FIRST CHARACTER IS ALPHA OR NOT BY      */ 00816000
*          /*    RE-PARSING EACH ITEM BY ITSELF WITH TWO 'IKJIDENTS':*/ 00817000
*          /*    THE FIRST SPECIFYING 'FIRST=ALPHA', AND THE SECOND, */ 00818000
*          /*    'FIRST=ANY'.                                        */ 00819000
*          /*   .IF THE FIRST CHARACTER IS ALPHA, THE ITEM SHOWS UP  */ 00820000
*          /*    UNDER THE FIRST 'IKJIDENT' AND IS ACCEPTED BY THIS  */ 00821000
*          /*    EXIT ROUTINE.                                       */ 00822000
*          /*   .IF THE FIRST CHARACTER IS NOT ALPHA, THE ITEM SHOWS */ 00823000
*          /*    UP UNDER THE SECOND 'IKJIDENT' AND IS REJECTED BY   */ 00824000
*          /*    THIS ROUTINE.                                       */ 00825000
*          /*                                                        */ 00826000
*          /* IDEXIT IS ENTERED FROM PARSE WITH REG. 1 POINTING TO   */ 00827000
*          /*    TWO WORDS CONTAINING THE PARAMETER'S PDE ADDRESS    */ 00828000
*          /*    AND THE USER WORD PASSED IN THE INPUT PARAMETER LIST*/ 00829000
*          /*    (PPL) RESPECTIVELY.                                 */ 00830000
*          /*                                                        */ 00831000
*          /* IDEXIT RETURNS TO PARSE WITH A RETURN CODE IN REG. 15  */ 00832000
*          /*    AS FOLLOWS:                                         */ 00833000
*          /*        0 - PARAMETER IS VALID (1ST CHARACTER = ALPHA)  */ 00834000
*          /*        4 - PARAMETER INVALID - ISSUE MSG AND PROMPT    */ 00835000
*          /*        8 - PARAMETER INVALID - JUST PROMPT             */ 00836000
*          /*       12 - ERROR IN EXIT ROUTINE - FLUSH CMD & CLEANUP */ 00837000
*          /**********************************************************/ 00838000
*IKJDEXIT: PROC;                                                   0261 00839000
IKJDEXIT STM   @14,@07,@SA00007                                    0261 00840000
         STM   @09,@12,@SA00007+40                                 0261 00841000
*          RFY R1 RSTD;               /* RESTRICT PARAMETER POINTER  */ 00842000
*          RFY PARSLST BASED(PARSPTR2);/* RESET PARS PARM LIST PTRS  */ 00843000
*          PARSPTR2=R1;               /* INITIALIZE PTR TO PARSE   0264 00844000
*                                        PARAMETER LIST              */ 00845000
         LR    PARSPTR2,R1                                         0264 00846000
*          RFY R1 UNRSTD;             /* RELEASE PARAMETER POINTER   */ 00847000
*          /* CONSTRUCT ONE ITEM 'BUFFER' FOR PARSE                  */ 00848000
*          IDBUFLNG=PDELEN+4;         /* LENGTH INCLUDES 4-BYTE HDR  */ 00849000
         L     @10,PDEPTR(,PARSPTR2)                               0266 00850000
         LH    @03,PDELEN(,@10)                                    0266 00851000
         LA    @01,4(,@03)                                         0266 00852000
         STH   @01,IDBUFLNG                                        0266 00853000
*          IDBFOFST=0;                /* OFFSET TO DATA ORIGIN       */ 00854000
         SLR   @15,@15                                             0267 00855000
         STH   @15,IDBFOFST                                        0267 00856000
*          IDID(1:PDELEN)=PDECHARS;   /* MOVE ITEM FROM CMD BUFFER 0268 00857000
*                                        VIA PDE                     */ 00858000
         BCTR  @03,0                                               0268 00859000
         L     @10,PDEADD(,@10)                                    0268 00860000
         EX    @03,@SM00277                                        0268 00861000
*          /* BUILD PARSE PARAMETER LIST (PPL) FOR NESTED PARSE      */ 00862000
*          IDPRSLST(1:12)=PPLPTRA->PPL;/* FIRST THREE WORDS FROM   0269 00863000
*                                        SUBCOMMAND PPL              */ 00864000
         L     @10,PPLPTRA(,VCHKPTR)                               0269 00865000
         MVC   IDPRSLST(12),PPL(@10)                               0269 00866000
*          PPLPTR=ADDR(IDPRSLST);     /* ESTABLISH PPL ADDRESSABLTY  */ 00867000
         LA    PPLPTR,IDPRSLST                                     0270 00868000
*          PPLANS=ADDR(IDANSPL);      /* IDPDLAD WILL POINT TO     0271 00869000
*                                        PARAMETER DESCRIPTOR LIST 0271 00870000
*                                        (PDL) AFTER PARSE           */ 00871000
         LA    @10,IDANSPL                                         0271 00872000
         ST    @10,PPLANS(,PPLPTR)                                 0271 00873000
*          PPLCBUF=ADDR(IDBUFFER);    /* PTR TO IDENTIFIER 'BUFFER'  */ 00874000
         LA    @10,IDBUFFER                                        0272 00875000
         ST    @10,PPLCBUF(,PPLPTR)                                0272 00876000
*          IF USIDSW = '1'B           /* IS THIS A USERID?           */ 00877000
*            THEN                     /* YES,                        */ 00878000
         TM    USIDSW,B'10000000'                                  0273 00879000
         BNO   @RF00273                                            0273 00880000
*              PPLPCL = IDPCLPTR;     /* USE USERID PCE              */ 00881000
         L     @10,IDPCLPTR                                        0274 00882000
         ST    @10,PPLPCL(,PPLPTR)                                 0274 00883000
*            ELSE                     /* NO,                         */ 00884000
*              IF PASSSW = '1'B       /* IS THIS A PASSWORD?         */ 00885000
*                THEN                 /* YES,                        */ 00886000
         B     @RC00273                                            0275 00887000
@RF00273 TM    PASSSW,B'01000000'                                  0275 00888000
         BNO   @RF00275                                            0275 00889000
*                  PPLPCL = PAPCLPTR; /* USE PASSWORD PCE            */ 00890000
         L     @10,PAPCLPTR                                        0276 00891000
         ST    @10,PPLPCL(,PPLPTR)                                 0276 00892000
*                ELSE                 /* THIS IS A PROCEDURE         */ 00893000
*                  IF CMDIND = 1      /* IS THIS AN ADD COMMAND      */ 00894000
*                    THEN             /* YES,                        */ 00895000
         B     @RC00275                                            0277 00896000
@RF00275 CLI   CMDIND(VCHKPTR),1                                   0277 00897000
         BNE   @RF00277                                            0277 00898000
*                      PPLPCL = R1PCLPTR;/* USE ADD'S PROC PCE       */ 00899000
         L     @10,R1PCLPTR                                        0278 00900000
         ST    @10,PPLPCL(,PPLPTR)                                 0278 00901000
*                    ELSE             /* NO,                         */ 00902000
*                      PPLPCL = R2PCLPTR;/* USE '*' PROC PCE         */ 00903000
         B     @RC00277                                            0279 00904000
@RF00277 L     @10,R2PCLPTR                                        0279 00905000
         ST    @10,PPLPCL(,PPLPTR)                                 0279 00906000
*          /* LINK TO PARSE ROUTINE                                  */ 00907000
*          GEN (LINK  EP=IKJPARS,MF=(E,IDPRSLST))                  0280 00908000
*            REFS(IDPRSLST);                                       0280 00909000
@RC00277 DS    0H                                                  0280 00910000
@RC00275 DS    0H                                                  0280 00911000
@RC00273 DS    0H                                                  0280 00912000
         LINK  EP=IKJPARS,MF=(E,IDPRSLST)                               00913000
*          RFY R15 RSTD;              /* RESTRICT RETURN CODE REG    */ 00914000
*          PARSRTCD=R15;              /* SAVE RETURN CODE            */ 00915000
         LR    PARSRTCD,R15                                        0282 00916000
*          RFY R15 UNRSTD;            /* RELEASE RETURN CODE REG     */ 00917000
*          /* CHECK RETURN CODE                                      */ 00918000
*          IF PARSRTCD^=0                                          0284 00919000
*            THEN                     /* PARSE EXCEPTION             */ 00920000
         LTR   PARSRTCD,PARSRTCD                                   0284 00921000
         BZ    @RF00284                                            0284 00922000
*              DO;                                                 0285 00923000
*                EXITRTCD=PARSRTCD;   /* SAVE PARSE RETURN CODE      */ 00924000
         ST    PARSRTCD,EXITRTCD(,VCHKPTR)                         0286 00925000
*                RETNCODE=12;         /* SIGNAL FOR PARSE TO QUIT    */ 00926000
         LA    RETNCODE,12                                         0287 00927000
*                GOTO EXITEND;                                     0288 00928000
         B     EXITEND                                             0288 00929000
*              END;                                                0289 00930000
*          /* NOW, SEE IF THE FIRST ITEM IS PRESENT IN THE PDL       */ 00931000
*          IF IDALFAFL(1)='1'B                                     0290 00932000
*            THEN                     /* PARAMETER IS VALID          */ 00933000
@RF00284 L     @10,IDPDLAD-1                                       0290 00934000
         TM    IDALFAFL(@10),B'10000000'                           0290 00935000
         BNO   @RF00290                                            0290 00936000
*              RETNCODE=0;            /* SIGNAL 'PARAM OK' TO PARSE  */ 00937000
         SLR   RETNCODE,RETNCODE                                   0291 00938000
*            ELSE                     /* PARAMETER IN NOT VALID      */ 00939000
*              RETNCODE=4;            /* SIGNAL PARSE TO PROMPT      */ 00940000
         B     @RC00290                                            0292 00941000
@RF00290 LA    RETNCODE,4                                          0292 00942000
*          /* MUST ISSUE 'IKJRLSA' MACRO NOW TO FREE PARSE PDL       */ 00943000
*          RFY R1 RSTD;               /* RESTRICT PDL POINTER REG    */ 00944000
@RC00290 DS    0H                                                  0294 00945000
*EXITEND:  R1=ADDR(IDANSPL);          /* ADDRESS PDL POINTER @ZA16396*/ 00946000
EXITEND  LA    R1,IDANSPL                                          0294 00947000
*          CALL PARSREL;              /* GO TO FREE PDL AREA         */ 00948000
         BAL   @14,PARSREL                                         0295 00949000
*          RFY R1 UNRSTD;             /* RELEASE PDL POINTER REG     */ 00950000
*          RFY PARSLST BASED(PARSPTR);/* RESET PARSE PARM LIST PTR   */ 00951000
*          END IKJDEXIT;                                           0298 00952000
@EL00007 DS    0H                                                  0298 00953000
@EF00007 DS    0H                                                  0298 00954000
@ER00007 LM    @14,@07,@SA00007                                    0298 00955000
         LM    @09,@12,@SA00007+40                                 0298 00956000
         BR    @14                                                 0298 00957000
*          /**********************************************************/ 00958000
*          /* SIZEXIT: REGION SIZE VALIDITY CHECK EXIT ROUTINE -     */ 00959000
*          /*   .CONVERTS THE VALUE TO BINARY                        */ 00960000
*          /*   .MAKES CERTAIN THE VALUE IS LESS THAN 64K-1 (65,535) */ 00961000
*          /*    WHICH IS THE CAPACITY OF AN HALF-WORD               */ 00962000
*          /*   .IF THE VALUE IS LARGER THAN 64K-1, PARSE IS TOLD TO */ 00963000
*          /*    PROMPT FOR A NEW VALUE.                             */ 00964000
*          /*                                                        */ 00965000
*          /* SIZEXIT IS ENTERED FROM PARSE WITH REG. 1 POINTING TO  */ 00966000
*          /*    TWO WORDS CONTAINING:                               */ 00967000
*          /*        WORD1 - THE ADDR OF THE 'SIZE' OR 'MAXSIZE' PDE */ 00968000
*          /*        WORD2 - THE USER WORD PASSED IN THE PARM. LIST  */ 00969000
*          /*                                                        */ 00970000
*          /* SIZEXIT RETURNS TO PARSE WITH A RETURN CODE IN REG. 15 */ 00971000
*          /*    AS FOLLOWS:                                         */ 00972000
*          /*        0 - PARAMETER (SIZE-VALUE) IS VALID             */ 00973000
*          /*        4 - PARAMETER INVALID - ISSUE MSG AND PROMPT    */ 00974000
*          /*        8 - PARAMETER INVALID - JUST PROMPT (NOT USED)  */ 00975000
*          /**********************************************************/ 00976000
*SIZEEXIT: ENTRY;                                                  0299 00977000
@EP00299 DS    0H                                                  0300 00978000
*          /* HOUSEKEEPING                                           */ 00979000
*          RFY (R1,R2) RSTD;          /* RESERVE REG. FOR PACK LNTH  */ 00980000
*          PARSPTR=R1;                /* SAVE POINTER FROM PARSE     */ 00981000
         LR    PARSPTR,R1                                          0301 00982000
*          R1=PDEADD;                 /* POINT TO UNPACKED VALUE     */ 00983000
         L     @10,PDEPTR(,PARSPTR)                                0302 00984000
         L     R1,PDEADD(,@10)                                     0302 00985000
*          R2=PDELEN-1;               /* GET LENGTH OF VALUE         */ 00986000
         LH    R2,PDELEN(,@10)                                     0303 00987000
         BCTR  R2,0                                                0303 00988000
*          /* PACK VALUE AND CONVERT TO BINARY                       */ 00989000
*          GEN (EX    R2,PACKER)      /* PACK VALUE TO DECSIZE       */ 00990000
*            SETS(DECSIZE) REFS(PACKER,R1,R2);                     0304 00991000
         EX    R2,PACKER                                                00992000
*          RFY R2 UNRSTD;             /* GIVE BACK REGISTER          */ 00993000
*          CVB (R1,DECSIZE);          /* CONVERT DECSIZE TO BINARY   */ 00994000
         CVB   R1,DECSIZE                                          0306 00995000
*          /* ROUND UP TO AN EVEN NUMBER (COMPATIBLE WITH JCL)       */ 00996000
*          R1=R1+1;                   /* ADD ONE                     */ 00997000
         AL    R1,@CF00032                                         0307 00998000
*          R1=R1&'FFFFFFFE'X;         /* TURN OFF LOW ORDER BIT      */ 00999000
         N     R1,@CF00243                                         0308 01000000
*          /* MAKE SURE THAT THE VALUE IS LESS THAN 64K-1            */ 01001000
*          IF R1<65535                                             0309 01002000
*            THEN                     /* IT WILL FIT IN AN HALFWORD  */ 01003000
         C     R1,@CF00244                                         0309 01004000
         BNL   @RF00309                                            0309 01005000
*              DO;                                                 0310 01006000
*              PDEFLG=R1;             /* MOVE BINARY VALUE INTO PDE  */ 01007000
         L     @10,PDEPTR(,PARSPTR)                                0311 01008000
         STH   R1,PDEFLG(,@10)                                     0311 01009000
*              RETURN CODE(0);        /* GO TO RETURN TO PARSE       */ 01010000
         L     @13,4(,@13)                                         0312 01011000
         L     @00,@SIZDATD                                        0312 01012000
         LR    @01,@11                                             0312 01013000
         FREEMAIN R,LV=(0),A=(1)                                        01014000
         SLR   @15,@15                                             0312 01015000
         L     @14,12(,@13)                                        0312 01016000
         LM    @00,@12,20(@13)                                     0312 01017000
         BR    @14                                                 0312 01018000
*              END;                                                0313 01019000
*            ELSE                                                  0314 01020000
*              RETURN CODE(4);        /* SIGNAL TO PARSE TO PROMPT   */ 01021000
@RF00309 L     @13,4(,@13)                                         0314 01022000
         L     @00,@SIZDATD                                        0314 01023000
         LR    @01,@11                                             0314 01024000
         FREEMAIN R,LV=(0),A=(1)                                        01025000
         LA    @15,4                                               0314 01026000
         L     @14,12(,@13)                                        0314 01027000
         LM    @00,@12,20(@13)                                     0314 01028000
         BR    @14                                                 0314 01029000
*          RFY R1 UNRSTD;                                          0315 01030000
*          /**********************************************************/ 01031000
*          /* USERDATA VALIDITY CHECK EXIT ROUTINE -                 */ 01032000
*          /*   .MAKES CERTAIN THE VALUE IS THE EBCDIC               */ 01033000
*          /*    REPRESENTATION OF A HEX CHARACTER                   */ 01034000
*          /*    WHICH IS THE CAPACITY OF AN HALF-WORD               */ 01035000
*          /*   .IF THE VALUE IS NOT HEX, PARSE IS TOLD TO           */ 01036000
*          /*    PROMPT FOR A NEW VALUE.                             */ 01037000
*          /*                                                        */ 01038000
*          /* USDAEXIT IS ENTERED FROM PARSE WITH REG. 1 POINTING TO */ 01039000
*          /*    TWO WORDS CONTAINING:                               */ 01040000
*          /*        WORD1 - THE ADDR OF THE 'USERDATA' PDE          */ 01041000
*          /*        WORD2 - THE USER WORD PASSED IN THE PARM. LIST  */ 01042000
*          /*                                                        */ 01043000
*          /* USEREXIT RETURNS TO PARSE WITH A RETURN CODE IN REG. 15*/ 01044000
*          /*    AS FOLLOWS:                                         */ 01045000
*          /*        0 - PARAMETER (USERDATA) IS VALID               */ 01046000
*          /*        4 - PARAMETER INVALID - ISSUE MSG AND PROMPT    */ 01047000
*          /*        8 - PARAMETER INVALID - JUST PROMPT (NOT USED)  */ 01048000
*          /**********************************************************/ 01049000
*USDAEXIT: ENTRY;                                                  0316 01050000
@EP00316 DS    0H                                                  0317 01051000
*          /* HOUSEKEEPING                                           */ 01052000
*          RFY R1 RSTD;               /* RESERVE PARAMETER LIST RGS  */ 01053000
*          PARSPTR=R1;                /* SAVE POINTER FROM PARSE     */ 01054000
         LR    PARSPTR,R1                                          0318 01055000
*          IF PDELEN^=4               /* IS THE LENGTH = 4           */ 01056000
*            THEN                     /* NO,                         */ 01057000
         L     @10,PDEPTR(,PARSPTR)                                0319 01058000
         CLC   PDELEN(2,@10),@CH00081                              0319 01059000
         BE    @RF00319                                            0319 01060000
*              RETURN CODE(4);        /* TELL PARSE TO PROMPT        */ 01061000
         L     @13,4(,@13)                                         0320 01062000
         L     @00,@SIZDATD                                        0320 01063000
         LR    @01,@11                                             0320 01064000
         FREEMAIN R,LV=(0),A=(1)                                        01065000
         LA    @15,4                                               0320 01066000
         L     @14,12(,@13)                                        0320 01067000
         LM    @00,@12,20(@13)                                     0320 01068000
         BR    @14                                                 0320 01069000
*          DO BYTEPTR=4 TO 1 BY -1;   /* CHECK EACH CHAR             */ 01070000
@RF00319 LA    BYTEPTR,4                                           0321 01071000
@DL00321 DS    0H                                                  0322 01072000
*            IF PDECHAR(BYTEPTR)>'C0'X/* IS THE VALUE A THRU F       */ 01073000
*             &PDECHAR(BYTEPTR)<'C7'X                              0322 01074000
*              THEN                   /* YES,                        */ 01075000
         L     @10,PDEPTR(,PARSPTR)                                0322 01076000
         L     @10,PDEADD(,@10)                                    0322 01077000
         LR    @07,@10                                             0322 01078000
         ALR   @07,BYTEPTR                                         0322 01079000
         BCTR  @07,0                                               0322 01080000
         CLI   PDECHAR(@07),X'C0'                                  0322 01081000
         BNH   @RF00322                                            0322 01082000
         LR    @07,@10                                             0322 01083000
         ALR   @07,BYTEPTR                                         0322 01084000
         BCTR  @07,0                                               0322 01085000
         CLI   PDECHAR(@07),X'C7'                                  0322 01086000
         BNL   @RF00322                                            0322 01087000
*                HEXCHAR(BYTEPTR)=    /* ADD X'39' TO MAKE IT HEX    */ 01088000
*                  PDECHAR(BYTEPTR)+57;                            0323 01089000
         LA    @07,57                                              0323 01090000
         BCTR  @10,0                                               0323 01091000
         SLR   @02,@02                                             0323 01092000
         IC    @02,PDECHAR(BYTEPTR,@10)                            0323 01093000
         ALR   @07,@02                                             0323 01094000
         STC   @07,HEXCHAR-1(BYTEPTR)                              0323 01095000
*              ELSE                   /* IS THE VALUE LESS THAN 0    */ 01096000
*                IF PDECHAR(BYTEPTR)<'F0'X                         0324 01097000
*                  THEN               /* YES,                        */ 01098000
         B     @RC00322                                            0324 01099000
@RF00322 L     @10,PDEPTR(,PARSPTR)                                0324 01100000
         L     @10,PDEADD(,@10)                                    0324 01101000
         ALR   @10,BYTEPTR                                         0324 01102000
         BCTR  @10,0                                               0324 01103000
         CLI   PDECHAR(@10),X'F0'                                  0324 01104000
         BNL   @RF00324                                            0324 01105000
*                    RETURN CODE(4);  /* VALUE IS INVALID            */ 01106000
         L     @13,4(,@13)                                         0325 01107000
         L     @00,@SIZDATD                                        0325 01108000
         LR    @01,@11                                             0325 01109000
         FREEMAIN R,LV=(0),A=(1)                                        01110000
         LA    @15,4                                               0325 01111000
         L     @14,12(,@13)                                        0325 01112000
         LM    @00,@12,20(@13)                                     0325 01113000
         BR    @14                                                 0325 01114000
*                  ELSE               /* NO,                         */ 01115000
*                    HEXCHAR(BYTEPTR)=/* MOVE THE NUMBER             */ 01116000
*                      PDECHAR(BYTEPTR);                           0326 01117000
@RF00324 LA    @10,HEXCHAR-1(BYTEPTR)                              0326 01118000
         L     @07,PDEPTR(,PARSPTR)                                0326 01119000
         L     @07,PDEADD(,@07)                                    0326 01120000
         ALR   @07,BYTEPTR                                         0326 01121000
         BCTR  @07,0                                               0326 01122000
         MVC   0(1,@10),PDECHAR(@07)                               0326 01123000
*          END;                                                    0327 01124000
@RC00322 BCTR  BYTEPTR,0                                           0327 01125000
         LTR   BYTEPTR,BYTEPTR                                     0327 01126000
         BP    @DL00321                                            0327 01127000
*          PACK (DECSIZE,HEXCHAR);    /* PACK VALUE                  */ 01128000
         PACK  DECSIZE(8),HEXCHAR(5)                               0328 01129000
*          PDEFLG=DECSIZE(6:7);       /* MOVE USERDATA INTO PDE      */ 01130000
         L     @10,PDEPTR(,PARSPTR)                                0329 01131000
         MVC   PDEFLG(2,@10),DECSIZE+5                             0329 01132000
*          RETURN CODE(0);            /* RETURN TO PARSE             */ 01133000
         L     @13,4(,@13)                                         0330 01134000
         L     @00,@SIZDATD                                        0330 01135000
         LR    @01,@11                                             0330 01136000
         FREEMAIN R,LV=(0),A=(1)                                        01137000
         SLR   @15,@15                                             0330 01138000
         L     @14,12(,@13)                                        0330 01139000
         LM    @00,@12,20(@13)                                     0330 01140000
         BR    @14                                                 0330 01141000
*          /**********************************************************/ 01142000
*          /* PERFEXIT: PERFORMANCE GROUP VALIDITY CHECK EXIT ROUTINE*/ 01143000
*          /*   .CONVERTS THE VALUE TO BINARY                        */ 01144000
*          /*   .MAKES CERTAIN THE VALUE IS LESS THAN 255            */ 01145000
*          /*   .INSURES THAT NOT GROUP IS SPECIFIED MORE THAN ONCE. */ 01146000
*          /*   .INSERTS THE GROUP NUMBER IN A RELATIVE POSITION     */ 01147000
*          /*      WITHIN A STRING OF 255 BITS.                      */ 01148000
*          /*                                                        */ 01149000
*          /* PERFEXIT IS ENTERED FROM PARSE WITH REG. 1 POINTING TO */ 01150000
*          /*    TWO WORDS CONTAINING:                               */ 01151000
*          /*        WORD1 - THE ADDR OF ONE OF THE GROUP NUMBERS    */ 01152000
*          /*        SPECIFIED BY THE USER                           */ 01153000
*          /*        WORD2 - THE USER WORD PASSED IN THE PARM. LIST  */ 01154000
*          /*                                                        */ 01155000
*          /* PERFEXIT RETURNS TO PARSE WITH A RETURN CODE IN REG. 15*/ 01156000
*          /*    AS FOLLOWS:                                         */ 01157000
*          /*        0 - PARAMETER (GROUP-VALUE) IS VALID            */ 01158000
*          /*        4 - PARAMETER INVALID - ISSUE MSG AND PROMPT    */ 01159000
*          /*        8 - PARAMETER INVALID - JUST PROMPT (NOT USED)  */ 01160000
*          /**********************************************************/ 01161000
*PERFEXIT: ENTRY;                                                  0331 01162000
@EP00331 DS    0H                                                  0332 01163000
*          /* HOUSEKEEPING                                     Y02678*/ 01164000
*          RFY (R1,R2) RSTD;          /* RESERVE REG. FOR PACK LNTH     01165000
*                                                              Y02678*/ 01166000
*          PARSPTR=R1;                /* SAVE POINTER FROM PARSE   0333 01167000
*                                                              Y02678*/ 01168000
         LR    PARSPTR,R1                                          0333 01169000
*          R1=PDEADD;                 /* POINT TO UNPACKED VALUE   0334 01170000
*                                                              Y02678*/ 01171000
         L     @10,PDEPTR(,PARSPTR)                                0334 01172000
         L     R1,PDEADD(,@10)                                     0334 01173000
*          R2=PDELEN-1;               /* GET SIZE LENGTH FROM PDE  0335 01174000
*                                                              Y02678*/ 01175000
         LH    R2,PDELEN(,@10)                                     0335 01176000
         BCTR  R2,0                                                0335 01177000
*          RFY VCHKPL BASED(USERWORD);/* RESPECIFY COMM AREA PTR   0336 01178000
*                                                              Y02678*/ 01179000
*          /* PACK VALUE AND CONVERT TO BINARY                 Y02678*/ 01180000
*          GEN (EX    R2,PACKER)      /* PACK VALUE TO DECSIZE Y02678*/ 01181000
*            SETS(DECSIZE) REFS(PACKER,R1,R2);                     0337 01182000
         EX    R2,PACKER                                                01183000
*          RFY R2 UNRSTD;             /* GIVE BACK REGISTER    Y02678*/ 01184000
*          CVB (R1,DECSIZE);          /* CONVERT DECSIZE TO BINARY 0339 01185000
*                                                              Y02678*/ 01186000
         CVB   R1,DECSIZE                                          0339 01187000
*          IF R1= 0                   /* MAKE SURE THAT THE VALUE IS */ 01188000
*           | R1>'FF'X                /* NOT ZERO AND LESS THAN 255  */ 01189000
*            THEN                     /* GROUP NUMBER IS INVALID     */ 01190000
         LTR   R1,R1                                               0340 01191000
         BZ    @RT00340                                            0340 01192000
         C     R1,@CF00259                                         0340 01193000
         BNH   @RF00340                                            0340 01194000
@RT00340 DS    0H                                                  0341 01195000
*              RETURN CODE(4);        /* SIGNAL TO PARSE TO PROMPT 0341 01196000
*                                                              Y02678*/ 01197000
         L     @13,4(,@13)                                         0341 01198000
         L     @00,@SIZDATD                                        0341 01199000
         LR    @01,@11                                             0341 01200000
         FREEMAIN R,LV=(0),A=(1)                                        01201000
         LA    @15,4                                               0341 01202000
         L     @14,12(,@13)                                        0341 01203000
         LM    @00,@12,20(@13)                                     0341 01204000
         BR    @14                                                 0341 01205000
*          VALUE=R1;                  /* SAVE VALUE            Y02678*/ 01206000
@RF00340 LR    VALUE,R1                                            0342 01207000
*          BYTEAD=VALUE/8;            /* GET BYTE POS. IN STRING   0343 01208000
*                                                              Y02678*/ 01209000
         LR    BYTEAD,VALUE                                        0343 01210000
         SRL   BYTEAD,3                                            0343 01211000
*          BITAD=VALUE//8;            /* GET BIT POS. IN BYTE  Y02678*/ 01212000
         LR    @08,VALUE                                           0344 01213000
         SRDA  @08,32                                              0344 01214000
         D     @08,@CF00066                                        0344 01215000
         LR    BITAD,@08                                           0344 01216000
*          IF BITAD=0                 /* IS VALUE A MULTIPLE OF 8?   */ 01217000
*            THEN                     /* YES,                        */ 01218000
         C     BITAD,@CF00178                                      0345 01219000
         BNE   @RF00345                                            0345 01220000
*              R1=1;                  /* SET LOW ORDER BIT IN      0346 01221000
*                                        REG 1                 Y02678*/ 01222000
         LA    R1,1                                                0346 01223000
*            ELSE                     /* NO,                         */ 01224000
*              DO;                                                 0347 01225000
         B     @RC00345                                            0347 01226000
@RF00345 DS    0H                                                  0348 01227000
*              BYTEAD=BYTEAD+1;       /* REFERENCE NEXT BYTE         */ 01228000
         LA    BYTEAD,1(,BYTEAD)                                   0348 01229000
*              R1='80'X;              /* SET HIGH ORDER BIT IN     0349 01230000
*                                        REG 1                 Y02678*/ 01231000
         LA    R1,128                                              0349 01232000
*              DO WHILE BITAD^=1;     /* POSITION BIT IN R1    Y02678*/ 01233000
         B     @DE00350                                            0350 01234000
@DL00350 DS    0H                                                  0351 01235000
*                R1=R1/2;             /* SHIFT BIT TO RIGHT    Y02678*/ 01236000
         SRL   R1,1                                                0351 01237000
*                BITAD=BITAD-1;       /* DECREMENT BIT POSITIONY02678*/ 01238000
         BCTR  BITAD,0                                             0352 01239000
*                END;                                              0353 01240000
@DE00350 C     BITAD,@CF00032                                      0353 01241000
         BNE   @DL00350                                            0353 01242000
*              END;                                                0354 01243000
*          TESTBYTE=STRING(BYTEAD);   /* GET EXISTING BYTE FROM PERF    01244000
*                                        GROUP                 Y02678*/ 01245000
@RC00345 L     @10,USERWORD(,PARSPTR)                              0355 01246000
         L     @10,PERFPTR(,@10)                                   0355 01247000
         BCTR  @10,0                                               0355 01248000
         SLR   TESTBYTE,TESTBYTE                                   0355 01249000
         IC    TESTBYTE,STRING(BYTEAD,@10)                         0355 01250000
*          TESTBIT=TESTBYTE&R1;       /* SEE IF THIS BIT IS ON Y02678*/ 01251000
         LR    @10,TESTBYTE                                        0356 01252000
         NR    @10,R1                                              0356 01253000
         STC   @10,TESTBIT                                         0356 01254000
*          IF TESTBIT ^=0             /* WAS BIT ALREADY ON?   Y02678*/ 01255000
*            THEN                     /* YES, GROUP WAS SPECIFIED  0357 01256000
*                                                              Y02678*/ 01257000
         CLI   TESTBIT,0                                           0357 01258000
         BE    @RF00357                                            0357 01259000
*              RETURN CODE(4);        /* SIGNAL TO PARSE TO PROMPT 0358 01260000
*                                                              Y02678*/ 01261000
         L     @13,4(,@13)                                         0358 01262000
         L     @00,@SIZDATD                                        0358 01263000
         LR    @01,@11                                             0358 01264000
         FREEMAIN R,LV=(0),A=(1)                                        01265000
         LA    @15,4                                               0358 01266000
         L     @14,12(,@13)                                        0358 01267000
         LM    @00,@12,20(@13)                                     0358 01268000
         BR    @14                                                 0358 01269000
*          TESTBYTE=TESTBYTE|R1;      /* TURN THIS BIT ON      Y02678*/ 01270000
@RF00357 OR    TESTBYTE,R1                                         0359 01271000
*          STRING(BYTEAD)=TESTBYTE;   /* STORE BYTE INTO PERF GROUP     01272000
*                                                              Y02678*/ 01273000
         L     @10,USERWORD(,PARSPTR)                              0360 01274000
         L     @10,PERFPTR(,@10)                                   0360 01275000
         BCTR  @10,0                                               0360 01276000
         STC   TESTBYTE,STRING(BYTEAD,@10)                         0360 01277000
*          RETURN CODE(0);            /* TELL PARSE VALUE IS O K   0361 01278000
*                                                              Y02678*/ 01279000
         L     @13,4(,@13)                                         0361 01280000
         L     @00,@SIZDATD                                        0361 01281000
         LR    @01,@11                                             0361 01282000
         FREEMAIN R,LV=(0),A=(1)                                        01283000
         SLR   @15,@15                                             0361 01284000
         L     @14,12(,@13)                                        0361 01285000
         LM    @00,@12,20(@13)                                     0361 01286000
         BR    @14                                                 0361 01287000
*          RFY R1 UNRSTD;                                          0362 01288000
*          END IKJEFA55                                            0363 01289000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01290000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        * 01291000
*;                                                                 0363 01292000
@DATA    DS    0H                                                       01293000
@CH00081 DC    H'4'                                                     01294000
@SM00261 MVC   DYNLFORM(0),INLINLFM                                     01295000
@SM00264 MVC   USRID(0,@09),NODEITEM(@01)                               01296000
@SM00266 MVC   PASSWD(0,@09),NODEITEM(@01)                              01297000
@SM00268 MVC   ACCTNO(0,@09),NODEITEM(@01)                              01298000
@SM00270 MVC   PROCNM(0,@09),NODEITEM(@01)                              01299000
@SM00277 MVC   IDID(0),PDECHARS(@10)                                    01300000
@DATD    DSECT                                                          01301000
         DS    0F                                                       01302000
@SA00001 DS    18F                                                      01303000
@SA00002 DS    15F                                                      01304000
@SA00007 DS    14F                                                      01305000
IKJEFA55 CSECT                                                          01306000
         DS    0F                                                       01307000
@CF00178 DC    F'0'                                                     01308000
@CF00032 DC    F'1'                                                     01309000
@CH00032 EQU   @CF00032+2                                               01310000
@CF00066 DC    F'8'                                                     01311000
@CF00187 DC    F'20'                                                    01312000
@CF00118 DC    F'40'                                                    01313000
@CF00244 DC    F'65535'                                                 01314000
@CF00243 DC    XL4'FFFFFFFE'                                            01315000
@CF00259 DC    XL4'FF'                                                  01316000
@DATD    DSECT                                                          01317000
         DS    0D                                                       01318000
IDANSPL  DS    AL4                                                      01319000
         ORG   IDANSPL                                                  01320000
@NM00006 DS    BL1                                                      01321000
IDPDLAD  DS    AL3                                                      01322000
         ORG   IDANSPL+4                                                01323000
HEXCHAR  DS    CL5                                                      01324000
         DS    CL3                                                      01325000
NDPRSLST DS    CL28                                                     01326000
FREEPTRS DS    CL20                                                     01327000
         ORG   FREEPTRS                                                 01328000
NDANSPL  DS    AL4                                                      01329000
         ORG   NDANSPL                                                  01330000
@NM00003 DS    BL1                                                      01331000
NODEPLAD DS    AL3                                                      01332000
         ORG   FREEPTRS+4                                               01333000
NDBUFPTR DS    AL4                                                      01334000
NDBUFLN  DS    FL4                                                      01335000
PCLPTR   DS    AL4                                                      01336000
PLENGTH  DS    FL4                                                      01337000
         ORG   FREEPTRS+20                                              01338000
SWITCHS  DS    CL1                                                      01339000
         ORG   SWITCHS                                                  01340000
USIDSW   DS    BL1                                                      01341000
PASSSW   EQU   SWITCHS+0                                                01342000
PROCSW   EQU   SWITCHS+0                                                01343000
         ORG   SWITCHS+1                                                01344000
         DS    CL3                                                      01345000
DECSIZE  DS    CL8                                                      01346000
IDPRSLST DS    CL28                                                     01347000
IDBUFFER DS    CL12                                                     01348000
         ORG   IDBUFFER                                                 01349000
IDBUFLNG DS    FL2                                                      01350000
IDBFOFST DS    AL2                                                      01351000
IDID     DS    CL8                                                      01352000
         ORG   IDBUFFER+12                                              01353000
TESTBIT  DS    BL1                                                      01354000
         DS    CL3                                                      01355000
EXITSAVE DS    18F                                                      01356000
IKJEFA55 CSECT                                                          01357000
         DS    0F                                                       01358000
@SIZDATD DC    AL1(1)                                                   01359000
         DC    AL3(@ENDDATD-@DATD)                                      01360000
         DS    0D                                                       01361000
IDPCLPTR DC    AL4(USIDPARS)                                            01362000
PAPCLPTR DC    AL4(PASSPARS)                                            01363000
R1PCLPTR DC    AL4(PROCPAR1)                                            01364000
R2PCLPTR DC    AL4(PROCPAR2)                                            01365000
NDPCLPTR DC    AL4(NODEPARS)                                            01366000
PASSLNG  DC    AL2(PASSPCE-PCLSTART)                                    01367000
ACCTLNG  DC    AL2(ACCTPCE-PCLSTART)                                    01368000
PROCLNG  DC    AL2(PROCPCE-PCLSTART)                                    01369000
@DATD    DSECT                                                          01370000
IKJEFA55 CSECT                                                          01371000
NODEPARS CSECT                                                          01372000
PCLSTART EQU   *                                                        01373000
NODEPARS IKJPARM                                                        01374000
USERA    IKJIDENT 'NODELIST-USERID',MAXLNTH=7,FIRST=ANY,OTHER=ANY,     *01375000
               PROMPT='NODELIST-USERID',VALIDCK=USIDEXIT                01376000
PASSPCE  EQU   *                                                        01377000
PASSA    IKJIDENT 'NODELIST-PASSWORD',FIRST=ANY,OTHER=ANY,             *01378000
               PROMPT='NODELIST-PASSWORD',VALIDCK=PASSEXIT              01379000
ACCTPCE  EQU   *                                                        01380000
ACCTA    IKJIDENT 'NODELIST-ACCOUNT NUMBER',FIRST=ANY,OTHER=ANY,       *01381000
               PROMPT='NODELIST-ACCOUNT NUMBER',VALIDCK=ACCTEXIT        01382000
PROCPCE  EQU   *                                                        01383000
PROCA    IKJIDENT 'NODELIST-PROCEDURE NAME',FIRST=ANY,OTHER=ANY,       *01384000
               PROMPT='NODELIST-PROCEDURE NAME',VALIDCK=PROCEXIT        01385000
         IKJENDP                                                        01386000
USIDPARS IKJPARM DSECT=USIDPDLD                                         01387000
USIDENT1 IKJIDENT 'USERID',ASTERISK,FIRST=ALPHA,OTHER=ALPHANUM          01388000
UDIDENT2 IKJIDENT 'DUM',FIRST=ANY,OTHER=ANY                             01389000
         IKJENDP                                                        01390000
PASSPARS IKJPARM DSECT=PASSPDLD                                         01391000
PASSENT1 IKJIDENT 'PASSWORD',ASTERISK,FIRST=ALPHANUM,OTHER=ALPHANUM     01392000
PASSENT2 IKJIDENT 'DUM',FIRST=ANY,OTHER=ANY                             01393000
         IKJENDP                                                        01394000
PROCPAR1 IKJPARM DSECT=PROCPDL1                                         01395000
PROCENT1 IKJIDENT 'PROCEDURE NAME',FIRST=ALPHA,OTHER=ALPHANUM           01396000
PROCENT2 IKJIDENT 'DUM',FIRST=ANY,OTHER=ANY                             01397000
         IKJENDP                                                        01398000
PROCPAR2 IKJPARM DSECT=PROCPDL2                                         01399000
PROCENT3 IKJIDENT 'PROCEDURE NAME',ASTERISK,FIRST=ALPHA,OTHER=ALPHANUM  01400000
PROCENT4 IKJIDENT 'DUM',FIRST=ANY,OTHER=ANY                             01401000
         IKJENDP                                                        01402000
@DATD    DSECT                                                          01403000
IKJEFA55 CSECT                                                          01404000
INLINLFM DS    0F                                                       01405000
         FREEMAIN V,SP=1,MF=L             LENGTH & ADD SET BY E         01406000
         GETMAIN EC,SP=1,MF=L             LENGTH & ANS PTR SET BY E     01407000
INLINLNG DC    A(*-INLINLFM)              LENGTH OF L-FORM MACROS       01408000
PACKER   PACK  DECSIZE(8),0(0,R1)         MODEL PACK INSTRUCTION        01409000
@DATD    DSECT                                                          01410000
DYNLFORM DS    0F                                                       01411000
DYNFRLST FREEMAIN V,SP=1,MF=L             LENGTH & ADD SET BY E         01412000
DYNGTLST GETMAIN EC,SP=1,MF=L             WILL BE INIT'D FROM INLINGTM  01413000
IKJEFA55 CSECT                                                          01414000
         DS   0H                                                        01415000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01416000
@DATD    DSECT                                                          01417000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01418000
@ENDDATD EQU   *                                                        01419000
IKJEFA55 CSECT                                                          01420000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01421000
@01      EQU   01                                                       01422000
@02      EQU   02                                                       01423000
@03      EQU   03                                                       01424000
@04      EQU   04                                                       01425000
@05      EQU   05                                                       01426000
@06      EQU   06                                                       01427000
@07      EQU   07                                                       01428000
@08      EQU   08                                                       01429000
@09      EQU   09                                                       01430000
@10      EQU   10                                                       01431000
@11      EQU   11                                                       01432000
@12      EQU   12                                                       01433000
@13      EQU   13                                                       01434000
@14      EQU   14                                                       01435000
@15      EQU   15                                                       01436000
PCEPTR   EQU   @09                                                      01437000
VALUE    EQU   @04                                                      01438000
TESTBYTE EQU   @02                                                      01439000
BITAD    EQU   @02                                                      01440000
BYTEAD   EQU   @03                                                      01441000
PDLPTR   EQU   @02                                                      01442000
NUMOFLVL EQU   @10                                                      01443000
PARSRTCD EQU   @02                                                      01444000
RETNCODE EQU   @08                                                      01445000
PARSPTR2 EQU   @02                                                      01446000
BYTEPTR  EQU   @03                                                      01447000
PARSPTR  EQU   @06                                                      01448000
VCHKPTR  EQU   @07                                                      01449000
PPLPTR   EQU   @06                                                      01450000
R0       EQU   @00                                                      01451000
R1       EQU   @01                                                      01452000
R2       EQU   @02                                                      01453000
R13      EQU   @13                                                      01454000
R14      EQU   @14                                                      01455000
R15      EQU   @15                                                      01456000
R12      EQU   @12                                                      01457000
PPL      EQU   0                                                        01458000
PPLPCL   EQU   PPL+12                                                   01459000
PPLANS   EQU   PPL+16                                                   01460000
PPLCBUF  EQU   PPL+20                                                   01461000
PPLUWA   EQU   PPL+24                                                   01462000
VCHKPL   EQU   0                                                        01463000
EXITADD  EQU   VCHKPL                                                   01464000
EXITRTCD EQU   VCHKPL+4                                                 01465000
NODEPTR  EQU   VCHKPL+8                                                 01466000
PERFPTR  EQU   VCHKPL+12                                                01467000
PPLPTRA  EQU   VCHKPL+16                                                01468000
SAVARAD  EQU   VCHKPL+20                                                01469000
CMDIND   EQU   VCHKPL+24                                                01470000
NUMOFLV  EQU   VCHKPL+25                                                01471000
SUBEXIT  EQU   0                                                        01472000
PARSLST  EQU   0                                                        01473000
PDEPTR   EQU   PARSLST                                                  01474000
USERWORD EQU   PARSLST+4                                                01475000
@NM00002 EQU   0                                                        01476000
PDEADD   EQU   @NM00002                                                 01477000
PDELEN   EQU   @NM00002+4                                               01478000
PDEFLG   EQU   @NM00002+6                                               01479000
SAVEARP  EQU   0                                                        01480000
PDECHARS EQU   0                                                        01481000
@NM00004 EQU   0                                                        01482000
NDBUFLNG EQU   @NM00004                                                 01483000
NDBFOFST EQU   @NM00004+2                                               01484000
@NM00005 EQU   0                                                        01485000
PDLADD   EQU   @NM00005                                                 01486000
PDLLEN   EQU   @NM00005+4                                               01487000
PDLFLG   EQU   @NM00005+6                                               01488000
NODEITEM EQU   0                                                        01489000
NLSTTAB  EQU   0                                                        01490000
USRLEN   EQU   NLSTTAB                                                  01491000
USRID    EQU   NLSTTAB+1                                                01492000
PASSWD   EQU   NLSTTAB+9                                                01493000
ACTLEN   EQU   NLSTTAB+17                                               01494000
ACCTNO   EQU   NLSTTAB+18                                               01495000
PROCNM   EQU   NLSTTAB+58                                               01496000
@NM00007 EQU   0                                                        01497000
IDALFAFL EQU   @NM00007+14                                              01498000
STRING   EQU   0                                                        01499000
PCLLNGTH EQU   0                                                        01500000
PCLENDO  EQU   0                                                        01501000
PCLFLAGS EQU   0                                                        01502000
PDECHAR  EQU   PDECHARS                                                 01503000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01504000
@NM00010 EQU   @NM00007+12                                              01505000
@NM00009 EQU   @NM00007+8                                               01506000
@NM00008 EQU   @NM00007                                                 01507000
@NM00001 EQU   PARSLST+8                                                01508000
PPLECB   EQU   PPL+8                                                    01509000
PPLECT   EQU   PPL+4                                                    01510000
PPLUPT   EQU   PPL                                                      01511000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01512000
@RT00101 EQU   EXIT                                                     01513000
@RT00106 EQU   EXIT                                                     01514000
@RT00112 EQU   EXIT                                                     01515000
@RF00148 EQU   @EL00002                                                 01516000
@ENDDATA EQU   *                                                        01517000
         END   IKJEFA55,(C'PLS1137',0701,77012)                         01518000
