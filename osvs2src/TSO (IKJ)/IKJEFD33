         TITLE 'ALLOCATE SPACE PROCESSOR                               *00001000
                        '                                               00002000
IKJEFD33 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFD33  78.174'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00022000
         MVC   @PC00001(4),0(@01)                                  0001 00023000
*/********************************************************************/ 00024000
*/*                                                                  */ 00025000
*/* SEGMENT NAME -                                                   */ 00026000
*/*      SPACERTE                                                    */ 00027000
*/*                                                                  */ 00028000
*/* FUNCTION -                                                       */ 00029000
*/*      THIS ROUTINE HANDLES ALL SPACE PARAMETERS (SPACE, SPACE     */ 00030000
*/*      INCREMENT, BLOCK, AVBLOCK, TRACKS, CYLINDERS, AND DIR).     */ 00031000
*/*      PROMPTING AND BUILDING TEXT UNITS IS DONE WHERE NECESSARY.  */ 00032000
*/*                                                                  */ 00033000
*/* OPERATION -                                                      */ 00034000
*/*      IF BLOCK ENTERED, AND USING NOT, BUILD TEXT UNIT FOR DCB    */ 00035000
*/*      PARAMETER BLOCKSIZE. IF BLOCK IS ENTERED AND SPACE IS NOT,  */ 00036000
*/*      MARK BLOCK NOT ENTERED - TO BE USED ONLY AS DCB BLOCKSIZE.  */ 00037000
*/*      IF BLOCK IS ENTERED, AND SPACE IS ENTERED, INVOKE SPCTEXT   */ 00038000
*/*      TO PROCESS SPACE. IF BLOCK NOT ENTERED, BUT AVBLOCK, TRACKS */ 00039000
*/*      OR CYLINDERS IS ENTERED AND SPACE IS ENTERED, INVOKE        */ 00040000
*/*      SPCTEXT TO PROCESS SPACE. IF SPACE IS NOT ENTERED, PROMPT   */ 00041000
*/*      FOR SPACE PARAMETER. IF NEITHER OF THE BLOCK, AVBLOCK,      */ 00042000
*/*      TRACKS OR CYLINDERS IS ENTERED, AND SPACE IS ENTERED,       */ 00043000
*/*      PROMPT FOR BLOCK PARAMETER AND REPEAT ABOVE PROCESS. IF     */ 00044000
*/*      DIR IS NOT ENTERED AND A MEMBER NAME IS SPECIFIED, PROMPT   */ 00045000
*/*      FOR DIR VALUE.                                              */ 00046000
*/*      IF RLSE OR ROUND ARE ENTERED BUT SPACE AND UNIT OF  @ZA08703*/ 00047000
*/*      SPACE WERE NOT ENTERED SPACE AND UNIT OF SPACE WILL @ZA08703*/ 00048000
*/*      BE DEFAULTED.                                       @ZA08703*/ 00049000
*/*                                                                  */ 00050000
*/* INPUT -                                                          */ 00051000
*/*      PTR TO SPACE PDE                                            */ 00052000
*/*      PTR TO USING PDE                                            */ 00053000
*/*      PTR TO DSNAME PDE                                           */ 00054000
*/*      PTR TO BLOCK/AVBLOCK/TRACKS/CYLINDERS PDE                   */ 00055000
*/*      PTR TO DIR PDE                                              */ 00056000
*/*                                                                  */ 00057000
*/* OUTPUT -                                                         */ 00058000
*/*      NECESSARY PROMPTING DONE                                    */ 00059000
*/*      TEXT UNITS BUILT WHERE NEEDED                               */ 00060000
*/*                                                                  */ 00061000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00062000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00063000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00064000
*/********************************************************************/ 00065000
*    SPACERTE:                                                     0061 00066000
*        AWAPTR = R1;                  /* PTR TO WORKAREA            */ 00067000
SPACERTE LR    AWAPTR,R1                                           0061 00068000
*        CNVRTYPE = '00'X;             /* INITIALIZE FLAGS           */ 00069000
         MVI   CNVRTYPE,X'00'                                      0062 00070000
*        INC = ADDNUM + 1;             /* INITIALIZE SUBSCRIPT       */ 00071000
         L     @10,GTPLPTR(,AWAPTR)                                0063 00072000
         L     @10,GTPLABLK(,@10)                                  0063 00073000
         LA    INC,1                                               0063 00074000
         AH    INC,ADDNUM(,@10)                                    0063 00075000
*        IF DIRPDE = 0 THEN            /* IF DIR NOT ENTERED,        */ 00076000
         L     @10,PTRPDL(,AWAPTR)                                 0064 00077000
         LH    @02,DIRPDE(,@10)                                    0064 00078000
         LTR   @02,@02                                             0064 00079000
         BNZ   @RF00064                                            0064 00080000
*          DO;                         /* AND                        */ 00081000
*            IF MBRPRES = '1'B &       /* IF MEMBER SPEC AND @OZ05962*/ 00082000
*              DSEXISTS = '0'B THEN   /* DATA SET NEW       @OZ05962*/  00083000
         TM    MBRPRES(@10),B'10000000'                            0066 00084000
         BNO   @RF00066                                            0066 00085000
         TM    DSEXISTS(AWAPTR),B'00100000'                        0066 00086000
         BNZ   @RF00066                                            0066 00087000
*              CALL PRMPTDIR;          /* POINT FOR DIRECTORY        */ 00088000
         BAL   @14,PRMPTDIR                                        0067 00089000
*          END;                                                    0068 00090000
@RF00066 DS    0H                                                  0069 00091000
*        DO WHILE (CONT ='0'B);        /* CHECK CONTROL SWITCH       */ 00092000
@RF00064 B     @DE00069                                            0069 00093000
@DL00069 DS    0H                                                  0070 00094000
*        IF BLOKPDE = 1 THEN           /* IF BLOCK ENTERED,          */ 00095000
         L     @10,PTRPDL(,AWAPTR)                                 0070 00096000
         CLC   BLOKPDE(2,@10),@CH00033                             0070 00097000
         BNE   @RF00070                                            0070 00098000
*          DO;                                                     0071 00099000
*            CONT= '1'B;               /* INDICATE TO EXIT DO-WHILE  */ 00100000
         OI    CONT(AWAPTR),B'00010000'                            0072 00101000
*            IF USINGPDE = 0 THEN      /* IF USING NOT ENTERED,      */ 00102000
         LH    @10,USINGPDE(,@10)                                  0073 00103000
         LTR   @10,@10                                             0073 00104000
         BNZ   @RF00073                                            0073 00105000
*              DO;                                                 0074 00106000
*                BLKCNVRT = '1'B;      /* INDICATE TO CONVERT BLOCK  */ 00107000
         OI    BLKCNVRT,B'10000000'                                0075 00108000
*                CALL CONVERT;         /* INVOKE CONVERSION RTN      */ 00109000
         BAL   @14,CONVERT                                         0076 00110000
*                CALL DCBTEXT;         /* SET UP DCB TEXT            */ 00111000
         BAL   @14,DCBTEXT                                         0077 00112000
*              END;                                                0078 00113000
*            IF SPACEPDE = 0 & DIRPDE=0 THEN /* IF SPACE NOT       0079 00114000
*                                               ENTERED,     @YM06119*/ 00115000
@RF00073 SLR   @10,@10                                             0079 00116000
         L     @02,PTRPDL(,AWAPTR)                                 0079 00117000
         CH    @10,SPACEPDE(,@02)                                  0079 00118000
         BNE   @RF00079                                            0079 00119000
         CH    @10,DIRPDE(,@02)                                    0079 00120000
         BNE   @RF00079                                            0079 00121000
*              BLOKPDE = 0;            /* MARK BLOCK IGNORED         */ 00122000
         STH   @10,BLOKPDE(,@02)                                   0080 00123000
*            ELSE                      /* IF SPACE ENTERED,          */ 00124000
*              DO;                                   /*      @YM06119*/ 00125000
         B     @RC00079                                            0081 00126000
@RF00079 DS    0H                                                  0082 00127000
*                IF SPACEPDE = 0 & DIRPDE = 1 THEN   /*      @YM06119*/ 00128000
         L     @10,PTRPDL(,AWAPTR)                                 0082 00129000
         LH    @02,SPACEPDE(,@10)                                  0082 00130000
         LTR   @02,@02                                             0082 00131000
         BNZ   @RF00082                                            0082 00132000
         CLC   DIRPDE(2,@10),@CH00033                              0082 00133000
         BNE   @RF00082                                            0082 00134000
*                  CALL PRMPTSPC;                    /*      @YM06119*/ 00135000
         BAL   @14,PRMPTSPC                                        0083 00136000
*                CALL SPCTEXT;                       /*      @YM06119*/ 00137000
@RF00082 BAL   @14,SPCTEXT                                         0084 00138000
*              END;                                  /*      @YM06119*/ 00139000
*          END;                                                    0086 00140000
*        ELSE                                                      0087 00141000
*          DO;                         /* IF BLOCK NOT ENTERED,      */ 00142000
         B     @RC00070                                            0087 00143000
@RF00070 DS    0H                                                  0088 00144000
*            IF BLOKPDE > 1 THEN       /* BUT AVBLOCK, TRK OR CYL    */ 00145000
         LA    @10,1                                               0088 00146000
         L     @02,PTRPDL(,AWAPTR)                                 0088 00147000
         CH    @10,BLOKPDE(,@02)                                   0088 00148000
         BNL   @RF00088                                            0088 00149000
*              DO;                     /* ENTERED,                   */ 00150000
*                CONT = '1'B;          /* INDICATE TO EXIT DO-WHILE  */ 00151000
         OI    CONT(AWAPTR),B'00010000'                            0090 00152000
*                IF SPACEPDE = 1 THEN  /* IF SPACE ENTERED,          */ 00153000
         CH    @10,SPACEPDE(,@02)                                  0091 00154000
         BNE   @RF00091                                            0091 00155000
*                  CALL SPCTEXT;       /* GO TO PROCESS              */ 00156000
         BAL   @14,SPCTEXT                                         0092 00157000
*                ELSE                  /* IF SPACE NOT ENTERED,      */ 00158000
*                  DO;                 /* THEN                       */ 00159000
         B     @RC00091                                            0093 00160000
@RF00091 DS    0H                                                  0094 00161000
*                    CALL PRMPTSPC;    /* PROMPT FOR SPACE VALUE     */ 00162000
         BAL   @14,PRMPTSPC                                        0094 00163000
*                    IF RBCODE12 = '0'B THEN                       0095 00164000
         TM    RBCODE12(AWAPTR),B'10000000'                        0095 00165000
         BNZ   @RF00095                                            0095 00166000
*                      CALL SPCTEXT;   /* PROCESS SPACE PARMS        */ 00167000
         BAL   @14,SPCTEXT                                         0096 00168000
*                  END;                                            0097 00169000
*              END;                                                0098 00170000
*            ELSE                      /* IF NEITHER BLOCK,AVBLOCK,  */ 00171000
*              DO;                     /* TRK OR CYL ENTERED,        */ 00172000
         B     @RC00088                                            0099 00173000
@RF00088 DS    0H                                                  0100 00174000
*                IF SPACEPDE = 1 | DIRPDE=1 THEN /* AND SPACE IS   0100 00175000
*                                                   ENTERED, @YM06119*/ 00176000
         LA    @10,1                                               0100 00177000
         L     @02,PTRPDL(,AWAPTR)                                 0100 00178000
         CH    @10,SPACEPDE(,@02)                                  0100 00179000
         BE    @RT00100                                            0100 00180000
         CH    @10,DIRPDE(,@02)                                    0100 00181000
         BNE   @RF00100                                            0100 00182000
@RT00100 DS    0H                                                  0101 00183000
*                  DO;                                             0101 00184000
*                  CALL PRMPTBLK;      /* PROMPT FOR BLOCK PARM      */ 00185000
         BAL   @14,PRMPTBLK                                        0102 00186000
*                  IF RBCODE12 = '1'B THEN                         0103 00187000
         TM    RBCODE12(AWAPTR),B'10000000'                        0103 00188000
         BNO   @RF00103                                            0103 00189000
*                    CONT = '1'B;                                  0104 00190000
         OI    CONT(AWAPTR),B'00010000'                            0104 00191000
*                  END;                                            0105 00192000
*                ELSE                  /* OTHERWISE,                 */ 00193000
*                  IF RLSEPDE ^= 0 |   /* IF ANY OTHER SPACE @ZA08703*/ 00194000
*                     RNDPDE ^= 0      /* TYPE INFO SPECIFIED@ZA08703*/ 00195000
*                    THEN              /* SPACE AND UNIT OF  @ZA08703*/ 00196000
         B     @RC00100                                            0106 00197000
@RF00100 SLR   @10,@10                                             0106 00198000
         L     @02,PTRPDL(,AWAPTR)                                 0106 00199000
         CH    @10,RLSEPDE(,@02)                                   0106 00200000
         BNE   @RT00106                                            0106 00201000
         CH    @10,RNDPDE(,@02)                                    0106 00202000
         BE    @RF00106                                            0106 00203000
@RT00106 DS    0H                                                  0107 00204000
*                      CALL SPCDEFLT;  /* SPACE GET DEFAULTED@ZA08703*/ 00205000
         BAL   @14,SPCDEFLT                                        0107 00206000
*                    ELSE              /* OTHERWISE          @ZA08703*/ 00207000
*                      CONT = '1'B;    /* GET OUT OF LOOP    @ZA08703*/ 00208000
         B     @RC00106                                            0108 00209000
@RF00106 OI    CONT(AWAPTR),B'00010000'                            0108 00210000
*              END;                                                0109 00211000
@RC00106 DS    0H                                                  0109 00212000
@RC00100 DS    0H                                                  0110 00213000
*          END;                                                    0110 00214000
@RC00088 DS    0H                                                  0111 00215000
*        END;                          /* END DO-WHILE               */ 00216000
@RC00070 DS    0H                                                  0111 00217000
@DE00069 TM    CONT(AWAPTR),B'00010000'                            0111 00218000
         BZ    @DL00069                                            0111 00219000
*        RETURN;                                                   0112 00220000
@EL00001 L     @13,4(,@13)                                         0112 00221000
@EF00001 L     @00,@SIZDATD                                        0112 00222000
         LR    @01,@11                                             0112 00223000
         FREEMAIN R,LV=(0),A=(1)                                        00224000
@ER00001 LM    @14,@12,12(@13)                                     0112 00225000
         BR    @14                                                 0112 00226000
*/********************************************************************/ 00227000
*/*                                                                  */ 00228000
*/* SEGMENT NAME -                                                   */ 00229000
*/*      SPCTEXT                                                     */ 00230000
*/*                                                                  */ 00231000
*/* FUNCTION -                                                       */ 00232000
*/*      THIS ROUTINE CONVERTS THE PRIMARY AND SECONDARY SPACE       */ 00233000
*/*      PARAMETERS TO BINARY, AND BUILDS THE TEXT UNITS FOR SPACE.  */ 00234000
*/*                                                                  */ 00235000
*/* OPERATION -                                                      */ 00236000
*/*      THE PRIMARY SPACE QUANTITY IS CONVERTED TO BINARY. THE TEXT */ 00237000
*/*      UNIT IS BUILT. IF A SECONDARY SPACE VALUE IS SPECIFIED, IT  */ 00238000
*/*      IS CONVERTED TO BINARY. THE TEXT UNIT IS BUILT. THE SPACE   */ 00239000
*/*      PDE IS MARKED NOT ENTERED - SO THAT GENTRANS WILL NOT TRY   */ 00240000
*/*      TO TRANSLATE IT.                                            */ 00241000
*/*                                                                  */ 00242000
*/* INPUT -                                                          */ 00243000
*/*      SPACE PDE                                                   */ 00244000
*/*                                                                  */ 00245000
*/* OUTPUT -                                                         */ 00246000
*/*      SPACE TEXT UNITS IN LIST                                    */ 00247000
*/*                                                                  */ 00248000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00249000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00250000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00251000
*/*                                                                  */ 00252000
*/*        THE GENTRANS ROUTINE CANNOT HANDLE THE SPACE PARAMETER    */ 00253000
*/*        BECAUSE OF THE FORMAT - A KEYWORD WITH A SUBFIELD LIST,   */ 00254000
*/*        WHERE EACH ELEMENT IN THE LIST HAS A DIFFERENT KEY.  IF   */ 00255000
*/*        THE FORMAT CHANGES, OR GENTRANS CHANGES, THESE TEXT UNITS */ 00256000
*/*        MAY BE HANDLED BY GENTRANS.                               */ 00257000
*/********************************************************************/ 00258000
*    SPCTEXT: PROC;                                                0113 00259000
SPCTEXT  STM   @14,@03,@SA00002                                    0113 00260000
         STM   @06,@12,@SA00002+24                                 0113 00261000
*        SPCCNVRT = '1'B;              /* INDICATE TO CONVERT SPACE  */ 00262000
         OI    SPCCNVRT,B'01000000'                                0114 00263000
*        CALL CONVERT;                 /* INVOKE CONVERSION RTN      */ 00264000
         BAL   @14,CONVERT                                         0115 00265000
*        ADDNUM = ADDNUM + 1;          /* INCREMENT TEXT COUNTER     */ 00266000
         L     @10,GTPLPTR(,AWAPTR)                                0116 00267000
         L     @10,GTPLABLK(,@10)                                  0116 00268000
         LA    @02,1                                               0116 00269000
         LH    @15,ADDNUM(,@10)                                    0116 00270000
         ALR   @15,@02                                             0116 00271000
         STH   @15,ADDNUM(,@10)                                    0116 00272000
*        ADLKEY = DALPRIME;            /* SET KEY,                   */ 00273000
         L     @15,TXT(,AWAPTR)                                    0117 00274000
         MVC   ADLKEY(2,@15),@CH00412                              0117 00275000
*        ADLNBR = 1;                   /* NUMBER,                    */ 00276000
         STH   @02,ADLNBR(,@15)                                    0118 00277000
*        ADLLEN = 3;                   /* LENGTH AND PARM IN TEXT    */ 00278000
         LA    @14,3                                               0119 00279000
         STH   @14,ADLLEN(,@15)                                    0119 00280000
*        ADLPARM(1:ADLLEN)=SAVPARM(2:4);                           0120 00281000
         LR    @09,@14                                             0120 00282000
         BCTR  @09,0                                               0120 00283000
         EX    @09,@SM00677                                        0120 00284000
*        ADDTEXT(INC) = TXT;           /* PTR TO TEXT IN LIST        */ 00285000
         LR    @09,INC                                             0121 00286000
         SLA   @09,2                                               0121 00287000
         ST    @15,ADDTEXT-4(@09,@10)                              0121 00288000
*        TXT=TXT+6 + ADLLEN;           /* INCREMNT TEXT PTR          */ 00289000
         AL    @15,@CF00168                                        0122 00290000
         ALR   @15,@14                                             0122 00291000
         ST    @15,TXT(,AWAPTR)                                    0122 00292000
*        INC=INC+1;                    /* INCREMENT SUBSCRIPT        */ 00293000
         ALR   INC,@02                                             0123 00294000
*        IF SPCPRES2 = '1'B THEN       /* IF SECONDARY SPACE ENTERED */ 00295000
         L     @10,PTRPDL(,AWAPTR)                                 0124 00296000
         TM    SPCPRES2(@10),B'10000000'                           0124 00297000
         BNO   @RF00124                                            0124 00298000
*          DO;                                                     0125 00299000
*            INCCNVRT = '1'B;          /* INDICATE TO CONVERT SECND  */ 00300000
         OI    INCCNVRT,B'00100000'                                0126 00301000
*            CALL CONVERT;             /* INVOKE CONVERSION RTN      */ 00302000
         BAL   @14,CONVERT                                         0127 00303000
*            ADDNUM = ADDNUM + 1;      /* INCREMENT TEXT COUNTER     */ 00304000
         L     @10,GTPLPTR(,AWAPTR)                                0128 00305000
         L     @10,GTPLABLK(,@10)                                  0128 00306000
         LA    @02,1                                               0128 00307000
         LH    @15,ADDNUM(,@10)                                    0128 00308000
         ALR   @15,@02                                             0128 00309000
         STH   @15,ADDNUM(,@10)                                    0128 00310000
*            ADLKEY = DALSECND;        /* SET KEY,                   */ 00311000
         L     @15,TXT(,AWAPTR)                                    0129 00312000
         MVC   ADLKEY(2,@15),@CH00414                              0129 00313000
*            ADLNBR = 1;               /* NUMBER,                    */ 00314000
         STH   @02,ADLNBR(,@15)                                    0130 00315000
*            ADLLEN = 3;               /* LENGTH AND PARM IN TEXT    */ 00316000
         LA    @14,3                                               0131 00317000
         STH   @14,ADLLEN(,@15)                                    0131 00318000
*            ADLPARM(1:ADLLEN)=SAVPARM(2:4);                       0132 00319000
         LR    @09,@14                                             0132 00320000
         BCTR  @09,0                                               0132 00321000
         EX    @09,@SM00677                                        0132 00322000
*            ADDTEXT(INC)= TXT;        /* PTR TO TEXT IN LIST        */ 00323000
         LR    @09,INC                                             0133 00324000
         SLA   @09,2                                               0133 00325000
         ST    @15,ADDTEXT-4(@09,@10)                              0133 00326000
*            TXT=TXT+6 + ADLLEN;       /* INCREMENT TEXT PTR         */ 00327000
         AL    @15,@CF00168                                        0134 00328000
         ALR   @15,@14                                             0134 00329000
         ST    @15,TXT(,AWAPTR)                                    0134 00330000
*            INC=INC+1;                /* INCREMENT SUBSCRIPT        */ 00331000
         ALR   INC,@02                                             0135 00332000
*          END;                                                    0136 00333000
*        SPACEPDE = 0;                 /* MARK SPACE NOT ENTERED     */ 00334000
@RF00124 L     @10,PTRPDL(,AWAPTR)                                 0137 00335000
         SLR   @02,@02                                             0137 00336000
         STH   @02,SPACEPDE(,@10)                                  0137 00337000
* END SPCTEXT;                                                     0138 00338000
@EL00002 DS    0H                                                  0138 00339000
@EF00002 DS    0H                                                  0138 00340000
@ER00002 LM    @14,@03,@SA00002                                    0138 00341000
         LM    @06,@12,@SA00002+24                                 0138 00342000
         BR    @14                                                 0138 00343000
*/********************************************************************/ 00344000
*/*                                                                  */ 00345000
*/* SEGMENT NAME -                                                   */ 00346000
*/*      CONVERT                                                     */ 00347000
*/*                                                                  */ 00348000
*/* FUNCTION -                                                       */ 00349000
*/*      THIS ROUTINE CONVERTS THE NUMERIC VALUES FOR BLOCK, SPACE   */ 00350000
*/*      AND SPACE INCREMNT TO BINARY.                               */ 00351000
*/*                                                                  */ 00352000
*/* OPERATION -                                                      */ 00353000
*/*      THE PACK AREA IS CLEARED. DETERMINE THE PARAMETER TO BE     */ 00354000
*/*      CONVERTED, AND SAVE THE APPROPRIATE LENGTH AND VALUE.       */ 00355000
*/*      PERFORM THE CONVERSION AND SAVE THE RESULTS.                */ 00356000
*/*                                                                  */ 00357000
*/* INPUT -                                                          */ 00358000
*/*      PTR TO SPACE PDE                                            */ 00359000
*/*      PTR TO BLOCK PDE                                            */ 00360000
*/*                                                                  */ 00361000
*/* OUTPUT -                                                         */ 00362000
*/*      NUMERIC VALUE CONVERTED TO BINARY                           */ 00363000
*/*                                                                  */ 00364000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00365000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00366000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00367000
*/********************************************************************/ 00368000
*    CONVERT:  PROC;                                               0139 00369000
CONVERT  STM   @14,@04,@SA00003                                    0139 00370000
         STM   @06,@12,@SA00003+28                                 0139 00371000
*        PKAREA(1) = 'F0'X;            /* FIRST BYTE SET TO F0       */ 00372000
         MVI   PKAREA,X'F0'                                        0140 00373000
*        P = ADDR(PKAREA(1));          /* POINT TO FIRST BYTE        */ 00374000
         LA    @10,PKAREA                                          0141 00375000
         ST    @10,P(,AWAPTR)                                      0141 00376000
*        Q = ADDR(PKAREA(2));          /* POINT TO SECOND BYTE       */ 00377000
         LA    @04,PKAREA+1                                        0142 00378000
         ST    @04,Q(,AWAPTR)                                      0142 00379000
*        Q -> AREA1 = P -> AREA2;      /* SET PACKAREA TO ALL F0     */ 00380000
         MVC   AREA1(15,@04),AREA2(@10)                            0143 00381000
*        IF BLKCNVRT = '1'B THEN       /* IF BLOCK TO BE CONVERTED,  */ 00382000
         TM    BLKCNVRT,B'10000000'                                0144 00383000
         BNO   @RF00144                                            0144 00384000
*          DO;                                                     0145 00385000
*            VALLEN = BLKLEN;          /* SAVE BLOCK LENGTH AND      */ 00386000
         L     @10,PTRPDL(,AWAPTR)                                 0146 00387000
         LH    VALLEN,BLKLEN(,@10)                                 0146 00388000
*            VALBUF = BLKBUF;          /* BLOCK BUFFER               */ 00389000
         L     @10,BLKPTR(,@10)                                    0147 00390000
         MVC   VALBUF(8),BLKBUF(@10)                               0147 00391000
*          END;                                                    0148 00392000
*        ELSE                                                      0149 00393000
*          IF SPCCNVRT = '1'B THEN     /* IF SPACE TO BE CONVERTED   */ 00394000
         B     @RC00144                                            0149 00395000
@RF00144 TM    SPCCNVRT,B'01000000'                                0149 00396000
         BNO   @RF00149                                            0149 00397000
*            DO;                                                   0150 00398000
*              VALLEN = SPACELEN;      /* SAVE SPACE LENGTH AND      */ 00399000
         L     @10,PTRPDL(,AWAPTR)                                 0151 00400000
         LH    VALLEN,SPACELEN(,@10)                               0151 00401000
*              VALBUF = SPACEBUF;      /* SPACE BUFFER               */ 00402000
         L     @10,SPACEPTR(,@10)                                  0152 00403000
         MVC   VALBUF(8),SPACEBUF(@10)                             0152 00404000
*            END;                                                  0153 00405000
*          ELSE                                                    0154 00406000
*            IF INCCNVRT = '1'B THEN   /* IF SECONDARY SPACE TO BE   */ 00407000
         B     @RC00149                                            0154 00408000
@RF00149 TM    INCCNVRT,B'00100000'                                0154 00409000
         BNO   @RF00154                                            0154 00410000
*              DO;                     /* CONVERTED,                 */ 00411000
*                VALLEN = SPACLEN2;    /* SAVE SEC SPACE LENGTH      */ 00412000
         L     @10,PTRPDL(,AWAPTR)                                 0156 00413000
         LH    VALLEN,SPACLEN2(,@10)                               0156 00414000
*                VALBUF = SPACBUF2;    /* AND SEC SPACE BUFFER       */ 00415000
         L     @10,SPACPTR2(,@10)                                  0157 00416000
         MVC   VALBUF(8),SPACBUF2(@10)                             0157 00417000
*              END;                                                0158 00418000
*        RFY Y RSTD;                                               0159 00419000
@RF00154 DS    0H                                                  0159 00420000
@RC00149 DS    0H                                                  0159 00421000
@RC00144 DS    0H                                                  0160 00422000
*        Y = 8 - VALLEN + ADDR(PKAREA);/* POINT TO BUFFER POSITION   */ 00423000
         LA    Y,8                                                 0160 00424000
         SLR   Y,VALLEN                                            0160 00425000
         LA    @10,PKAREA                                          0160 00426000
         ALR   Y,@10                                               0160 00427000
*        PKAREA1(1:VALLEN)= VALBUF(1:VALLEN);/* MOVE PARM TO BUFFER  */ 00428000
         LR    @10,VALLEN                                          0161 00429000
         BCTR  @10,0                                               0161 00430000
         EX    @10,@SM00680                                        0161 00431000
*        GENERATE REFS(CVBAREA);                                   0162 00432000
         PACK  CVBAREA(8),PKAREA(8)                                     00433000
         CVB   Y,CVBAREA                                                00434000
*        SAVPARM = Y;                  /* SAVE RESULT                */ 00435000
         ST    Y,@TF00001                                          0163 00436000
         MVC   SAVPARM(4),@TF00001                                 0163 00437000
*        RFY Y UNRSTD;                                             0164 00438000
*        CNVRTYPE = '00'X;             /* CLEAR FLAG FIELD           */ 00439000
         MVI   CNVRTYPE,X'00'                                      0165 00440000
*   END CONVERT;                                                   0166 00441000
@EL00003 DS    0H                                                  0166 00442000
@EF00003 DS    0H                                                  0166 00443000
@ER00003 LM    @14,@04,@SA00003                                    0166 00444000
         LM    @06,@12,@SA00003+28                                 0166 00445000
         BR    @14                                                 0166 00446000
*/********************************************************************/ 00447000
*/*                                                                  */ 00448000
*/* SEGMENT NAME -                                                   */ 00449000
*/*      DCBTEXT                                                     */ 00450000
*/*                                                                  */ 00451000
*/* FUNCTION -                                                       */ 00452000
*/*      THIS ROUTINE SETS UP THE TEXT UNIT FOR DCB BLOCK SIZE.      */ 00453000
*/*                                                                  */ 00454000
*/* OPERATION -                                                      */ 00455000
*/*      THE COUNTER FOR THE NUMBER OF ENTRIES IS INCREMENTED. THE   */ 00456000
*/*      KEY, NUMBER, LENGTH, AND VALUE ARE PUT INTO THE TEXT. THE   */ 00457000
*/*      ADDRESS OF THE TEXT IS PUT INTO THE ADDRESS LIST.           */ 00458000
*/*                                                                  */ 00459000
*/* INPUT -                                                          */ 00460000
*/*      PTR TO VALUE                                                */ 00461000
*/*                                                                  */ 00462000
*/* OUTPUT -                                                         */ 00463000
*/*      TEXT UNIT BUILT                                             */ 00464000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00465000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00466000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00467000
*/*                                                                  */ 00468000
*/*        THIS TEXT UNIT MUST BE SET UP SINCE THE BLOCK PARAMETER   */ 00469000
*/*        NEEDS 2 KEYS - DCB BLOCK SIZE, AND AVERAGE RECORD LENGTH. */ 00470000
*/*        GENTRANS CAN PROCESS THE KEY FOR AVERAGE RECORD LENGTH.   */ 00471000
*/********************************************************************/ 00472000
*    DCBTEXT:  PROC OPTIONS(NOSAVEAREA);                           0167 00473000
DCBTEXT  STM   @14,@03,12(@13)                                     0167 00474000
         STM   @05,@12,40(@13)                                     0167 00475000
*        ADDNUM = ADDNUM + 1;               /* INCREMENT ENTRY CTR   */ 00476000
         L     @10,GTPLPTR(,AWAPTR)                                0168 00477000
         L     @10,GTPLABLK(,@10)                                  0168 00478000
         LA    @05,1                                               0168 00479000
         LH    @02,ADDNUM(,@10)                                    0168 00480000
         ALR   @02,@05                                             0168 00481000
         STH   @02,ADDNUM(,@10)                                    0168 00482000
*        ADLKEY = DALBLKSZ;                 /* PUT KEY,              */ 00483000
         L     @02,TXT(,AWAPTR)                                    0169 00484000
         MVC   ADLKEY(2,@02),@CH00488                              0169 00485000
*        ADLNBR = 1;                        /* NUMBER,               */ 00486000
         STH   @05,ADLNBR(,@02)                                    0170 00487000
*        ADLLEN = 2;                        /* LENGTH AND            */ 00488000
         LA    @15,2                                               0171 00489000
         STH   @15,ADLLEN(,@02)                                    0171 00490000
*        ADLPARM(1:ADLLEN)=SAVPARM(3:4);    /* PARM INTO TEXT        */ 00491000
         BCTR  @15,0                                               0172 00492000
         EX    @15,@SM00682                                        0172 00493000
*        ADDTEXT(INC) = TXT;                /* TEXT PTR IN LIST      */ 00494000
         LR    @15,INC                                             0173 00495000
         SLA   @15,2                                               0173 00496000
         ST    @02,ADDTEXT-4(@15,@10)                              0173 00497000
*        TXT = TXT + 8;                     /* INCREMENT TEXT PTR    */ 00498000
         AL    @02,@CF00095                                        0174 00499000
         ST    @02,TXT(,AWAPTR)                                    0174 00500000
*        INC = INC + 1;                     /* INCREMENT SUBSCRIPT   */ 00501000
         ALR   INC,@05                                             0175 00502000
*   END  DCBTEXT;                                                  0176 00503000
@EL00004 DS    0H                                                  0176 00504000
@EF00004 DS    0H                                                  0176 00505000
@ER00004 LM    @14,@03,12(@13)                                     0176 00506000
         LM    @05,@12,40(@13)                                     0176 00507000
         BR    @14                                                 0176 00508000
*/********************************************************************/ 00509000
*/*                                                                  */ 00510000
*/* SEGMENT NAME -                                                   */ 00511000
*/*      PRMPTSPC                                                    */ 00512000
*/*                                                                  */ 00513000
*/* FUNCTION -                                                       */ 00514000
*/*      THIS ROUTINE REENTERS PARSE TO PROMPT FOR A SPACE VALUE     */ 00515000
*/*      WHEN ONE HAS NOT BEEN ENTERED AND IS REQUIRED.              */ 00516000
*/*                                                                  */ 00517000
*/* OPERATION -                                                      */ 00518000
*/*      INVOKE PARSE WITH A SECONDARY PCL AND PDL ADDRESS. IF PARSE */ 00519000
*/*      FAILS, INVOKE PARSERR ROUTINE. ELSE, OVERLAY THE ORIGINAL   */ 00520000
*/*      PDE WITH THE PDE ROTURNED FORM THE PROMPT. RELEASE THE      */ 00521000
*/*      PROMPT PDE.                                                 */ 00522000
*/*                                                                  */ 00523000
*/* INPUT -                                                          */ 00524000
*/*      PTR TO SPACE PDE                                            */ 00525000
*/*      PTR TO SECONDARY PCL                                        */ 00526000
*/*                                                                  */ 00527000
*/* OUTPUT -                                                         */ 00528000
*/*      SPACE PDE OVERLAID  WITH NEW DATA                           */ 00529000
*/*                                                                  */ 00530000
*/* NOTE:  THIS ROTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN     */ 00531000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00532000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00533000
*/********************************************************************/ 00534000
*    PRMPTSPC: PROC;                                               0177 00535000
PRMPTSPC STM   @14,@12,@SA00005                                    0177 00536000
*        ENTRYCD = 5;                  /* INDICATE SPACE PROMPT      */ 00537000
         MVC   ENTRYCD(2,AWAPTR),@CH00064                          0178 00538000
*        R1 = AWAPTR;                  /* WORKAREA PTR IN REG 1      */ 00539000
         LR    R1,AWAPTR                                           0179 00540000
*        CALL IKJEFD37;                /* INVOKE PARSE               */ 00541000
         L     @15,@CV00045                                        0180 00542000
         BALR  @14,@15                                             0180 00543000
*        IF RCODESV > 0 THEN           /* IF PARSE FAILED,           */ 00544000
         L     @10,RCODESV(,AWAPTR)                                0181 00545000
         LTR   @10,@10                                             0181 00546000
         BNP   @RF00181                                            0181 00547000
*          DO;                                                     0182 00548000
*            ENTRYCD = 2;              /* SET ENTRY CODE             */ 00549000
         MVC   ENTRYCD(2,AWAPTR),@CH00061                          0183 00550000
*            R1 = AWAPTR;              /* WORKAREA PTR IN REG 1      */ 00551000
         LR    R1,AWAPTR                                           0184 00552000
*            CALL IKJEFD35;            /* PROCESS PARSE ERROR        */ 00553000
         L     @15,@CV00044                                        0185 00554000
         BALR  @14,@15                                             0185 00555000
*          END;                                                    0186 00556000
*        ELSE                                                      0187 00557000
*          DO;                         /* IF PARSE SUCCESSFUL,       */ 00558000
         B     @RC00181                                            0187 00559000
@RF00181 DS    0H                                                  0188 00560000
*            SPACEPTR = ADDR(NSPCBUF1);/* PTR IN PDE TO NEW BUFFER   */ 00561000
         L     @10,PTRPDL(,AWAPTR)                                 0188 00562000
         LA    @02,NSPCBUF1                                        0188 00563000
         ST    @02,SPACEPTR(,@10)                                  0188 00564000
*            NSPCBUF1(1:SPCLEN1)=SPCBUF1(1:SPCLEN1);               0189 00565000
         L     @02,PMPTPDL(,AWAPTR)                                0189 00566000
         LH    @15,SPCLEN1(,@02)                                   0189 00567000
         LR    @14,@15                                             0189 00568000
         BCTR  @14,0                                               0189 00569000
         L     @01,SPCPTR1(,@02)                                   0189 00570000
         EX    @14,@SM00684                                        0189 00571000
*            SPACELEN = SPCLEN1;       /* LENGTH, AND                */ 00572000
         STH   @15,SPACELEN(,@10)                                  0190 00573000
*            SPACEFLG = SPCFLAG1;      /* FLAGS - INTO OLD PDE       */ 00574000
         MVC   SPACEFLG(1,@10),SPCFLAG1(@02)                       0191 00575000
*            IF SPC2PRES = '1'B THEN   /* IF SEC SPACE ENTERED,      */ 00576000
         TM    SPC2PRES(@02),B'10000000'                           0192 00577000
         BNO   @RF00192                                            0192 00578000
*              DO;                                                 0193 00579000
*                SPACPTR2 = ADDR(NSPCBUF2);  /* MOVE POINTER,        */ 00580000
         LA    @15,NSPCBUF2                                        0194 00581000
         ST    @15,SPACPTR2(,@10)                                  0194 00582000
*                NSPCBUF2(1:SPCLEN2)=SPCBUF2(1:SPCLEN2);           0195 00583000
         LH    @15,SPCLEN2(,@02)                                   0195 00584000
         LR    @14,@15                                             0195 00585000
         BCTR  @14,0                                               0195 00586000
         L     @01,SPCPTR2(,@02)                                   0195 00587000
         EX    @14,@SM00686                                        0195 00588000
*                SPACLEN2 = SPCLEN2;         /* LENGTH,  AND         */ 00589000
         STH   @15,SPACLEN2(,@10)                                  0196 00590000
*                SPACFLG2 = SPCFLAG2;        /* FLAGS INTO OLD PDE   */ 00591000
         MVC   SPACFLG2(1,@10),SPCFLAG2(@02)                       0197 00592000
*             END;                                                 0198 00593000
*            RFY R5 RSTD;                                          0199 00594000
@RF00192 DS    0H                                                  0200 00595000
*            R5 = ADDR(PMPTPDL);       /* PROMPT PDL IN REG 5        */ 00596000
         LA    R5,PMPTPDL(,AWAPTR)                                 0200 00597000
*            GEN (IKJRLSA (5));        /* RELEASE PROMPT PDL         */ 00598000
         IKJRLSA (5)                                                    00599000
*            RFY R5 UNRSTD;                                        0202 00600000
*          END;                                                    0203 00601000
*   END PRMPTSPC;                                                  0204 00602000
@EL00005 DS    0H                                                  0204 00603000
@EF00005 DS    0H                                                  0204 00604000
@ER00005 LM    @14,@12,@SA00005                                    0204 00605000
         BR    @14                                                 0204 00606000
*/********************************************************************/ 00607000
*/*                                                                  */ 00608000
*/* SEGMENT NAME -                                                   */ 00609000
*/*      PRMPTBLK                                                    */ 00610000
*/*                                                                  */ 00611000
*/* FUNCTION -                                                       */ 00612000
*/*      THIS ROUTINE PROMPTS THE USER TO ENTER BLOCK, AVBLOCK,      */ 00613000
*/*      TRACKS OR CYLINDERS WHEN THE PARAMETER HAS BEEN OMITTED     */ 00614000
*/*      AND IS REQUIRED.                                            */ 00615000
*/*                                                                  */ 00616000
*/* OPERATION -                                                      */ 00617000
*/*      INVOKE PARSE WITH A SECONDARY PCL AND PDL ADDRESS. IF PARSE */ 00618000
*/*      FAILS, INVOKE PARSERR ROUTINE. ELSE, OVERLAY THE ORIGINAL   */ 00619000
*/*      PDE WITH THE PADE RETURNED FROM THE PROMPT. RELEASE THE     */ 00620000
*/*      PROMPT PDL.                                                 */ 00621000
*/*                                                                  */ 00622000
*/* INPUT -                                                          */ 00623000
*/*      PTR TO BLOCK PDE                                            */ 00624000
*/*      PTR TO SECONDARY PCL                                        */ 00625000
*/*                                                                  */ 00626000
*/* OUTPUT -                                                         */ 00627000
*/*      BLOCK PDE OVERLAID WITH NEW DATA                            */ 00628000
*/*                                                                  */ 00629000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00630000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00631000
*/*        INLCUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00632000
*/*************************(******************************************/ 00633000
*    PRMPTBLK: PROC;                                               0205 00634000
PRMPTBLK STM   @14,@12,@SA00006                                    0205 00635000
*        ENTRYCD = 7;                  /* INDICATE PROMPT FOR BLOCK  */ 00636000
         MVC   ENTRYCD(2,AWAPTR),@CH00175                          0206 00637000
*        R1 = AWAPTR;                  /* WORKAREA PTR IN REG 1      */ 00638000
         LR    R1,AWAPTR                                           0207 00639000
*        CALL IKJEFD37;                /* INVOKE PARSE               */ 00640000
         L     @15,@CV00045                                        0208 00641000
         BALR  @14,@15                                             0208 00642000
*        IF RCODESV > 0 THEN           /* IF PARSE FAILED,           */ 00643000
         L     @10,RCODESV(,AWAPTR)                                0209 00644000
         LTR   @10,@10                                             0209 00645000
         BNP   @RF00209                                            0209 00646000
*          DO;                         /* THEN                       */ 00647000
*            ENTRYCD = 2;              /* INDICATE PARSE ERROR       */ 00648000
         MVC   ENTRYCD(2,AWAPTR),@CH00061                          0211 00649000
*            R1 = AWAPTR;              /* WORKAREA PTR IN REG 1      */ 00650000
         LR    R1,AWAPTR                                           0212 00651000
*            CALL IKJEFD35;            /* ISSUE ERROR MESSAGE        */ 00652000
         L     @15,@CV00044                                        0213 00653000
         BALR  @14,@15                                             0213 00654000
*          END;                                                    0214 00655000
*        ELSE                                                      0215 00656000
*          DO;                         /* IF PARSE SUCCESSFUL,       */ 00657000
         B     @RC00209                                            0215 00658000
@RF00209 DS    0H                                                  0216 00659000
*            RFY R5 RSTD;              /* RESTRICT REG 5             */ 00660000
*            R5 = ADDR(PMPTPDL);       /* PROMPT PDL IN REG 5        */ 00661000
         LA    R5,PMPTPDL(,AWAPTR)                                 0217 00662000
*            GEN (IKJRLSA (5));        /* RELEASE PROMPT PDL         */ 00663000
         IKJRLSA (5)                                                    00664000
*            RFY R5 UNRSTD;            /* UNRESTRICT REG 5           */ 00665000
*          END;                                                    0220 00666000
*   END PRMPTBLK;                                                  0221 00667000
@EL00006 DS    0H                                                  0221 00668000
@EF00006 DS    0H                                                  0221 00669000
@ER00006 LM    @14,@12,@SA00006                                    0221 00670000
         BR    @14                                                 0221 00671000
*/********************************************************************/ 00672000
*/*                                                                  */ 00673000
*/* SEGMENT NAME -                                                   */ 00674000
*/*      PRMPTDIR                                                    */ 00675000
*/*                                                                  */ 00676000
*/* FUNCTION -                                                       */ 00677000
*/*      THIS ROUTINE PROMPTS THE USER TO ENTER A DIR VALUE WHEN     */ 00678000
*/*      THE PARAMETER HAS BEEN OMITTED AND IS REQUIRED.             */ 00679000
*/*                                                                  */ 00680000
*/* OPERATION -                                                      */ 00681000
*/*      INVOKE PARSE WITH A SECONDARY PCL AND PDL ADDRESS. IF PARSE */ 00682000
*/*      FAILS, INVOKE PARSERR ROUTINE. ELSE, OVERLAY THE ORIGINAL   */ 00683000
*/*      PDE WITH THE PDE RETURNED FROM THE PROMPT. RELEASE THE      */ 00684000
*/*      PROMPT PDL.                                                 */ 00685000
*/*                                                                  */ 00686000
*/* INPUT -                                                          */ 00687000
*/*      PTR TO DIR PDE                                              */ 00688000
*/*      PTR TO SECONDARY PCL                                        */ 00689000
*/*                                                                  */ 00690000
*/* OUTPUT -                                                         */ 00691000
*/*      DIR PDE OVERLAID WITH NEW DATA                              */ 00692000
*/*                                                                  */ 00693000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00694000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00695000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00696000
*/********************************************************************/ 00697000
*   PRMPTDIR:  PROC;                                               0222 00698000
PRMPTDIR STM   @14,@12,@SA00007                                    0222 00699000
*        ENTRYCD = 6;                  /* INDICATE PROMPT FOR DIR    */ 00700000
         MVC   ENTRYCD(2,AWAPTR),@CH00168                          0223 00701000
*        R1 = AWAPTR;                  /* WORKAREA PTR IN REG 1      */ 00702000
         LR    R1,AWAPTR                                           0224 00703000
*        CALL IKJEFD37;                /* INVOKE PARSE               */ 00704000
         L     @15,@CV00045                                        0225 00705000
         BALR  @14,@15                                             0225 00706000
*        IF RCODESV > 0 THEN           /* IF PARSE FAILED,           */ 00707000
         L     @10,RCODESV(,AWAPTR)                                0226 00708000
         LTR   @10,@10                                             0226 00709000
         BNP   @RF00226                                            0226 00710000
*          DO;                         /* THEN                       */ 00711000
*            ENTRYCD = 2;              /* SET ENTRY CODE             */ 00712000
         MVC   ENTRYCD(2,AWAPTR),@CH00061                          0228 00713000
*            R1 = AWAPTR;              /* WORKAREA PTR IN REG 1      */ 00714000
         LR    R1,AWAPTR                                           0229 00715000
*            CALL IKJEFD35;            /* PROCESS PARSE ERROR        */ 00716000
         L     @15,@CV00044                                        0230 00717000
         BALR  @14,@15                                             0230 00718000
*          END;                                                    0231 00719000
*        ELSE                                                      0232 00720000
*          DO;                         /* IF PARSE SUCCESSFUL,       */ 00721000
         B     @RC00226                                            0232 00722000
@RF00226 DS    0H                                                  0233 00723000
*            DIRPDE = 1;                                           0233 00724000
         L     @10,PTRPDL(,AWAPTR)                                 0233 00725000
         MVC   DIRPDE(2,@10),@CH00033                              0233 00726000
*            DIRPTR = ADDR(NDIRBUF1);  /* PTR IN PDE TO NEW BUFFER   */ 00727000
         LA    @02,NDIRBUF1                                        0234 00728000
         ST    @02,DIRPTR(,@10)                                    0234 00729000
*            NDIRBUF1(1:DIRLEN1)=DIRBUF1(1:DIRLEN1);               0235 00730000
         L     @02,PMPTPDL(,AWAPTR)                                0235 00731000
         LH    @15,DIRLEN1(,@02)                                   0235 00732000
         LR    @14,@15                                             0235 00733000
         BCTR  @14,0                                               0235 00734000
         L     @01,DIRPTR1(,@02)                                   0235 00735000
         EX    @14,@SM00688                                        0235 00736000
*            DIRLEN = DIRLEN1;         /* LENGTH, AND                */ 00737000
         STH   @15,DIRLEN(,@10)                                    0236 00738000
*            DIRFLAGS = DIRFLAG1;      /* FLAGS INTO OLD PDE         */ 00739000
         MVC   DIRFLAGS(1,@10),DIRFLAG1(@02)                       0237 00740000
*            RFY R5 RSTD;              /* RESTRICT REG 5             */ 00741000
*            R5 = ADDR(PMPTPDL);       /* PROMPT PDL IN REG 5        */ 00742000
         LA    R5,PMPTPDL(,AWAPTR)                                 0239 00743000
*            GEN (IKJRLSA (5));        /* RELEASE PROMPT PDL         */ 00744000
         IKJRLSA (5)                                                    00745000
*            RFY R5 UNRSTD;            /* UNRESTRICT REG 5           */ 00746000
*          END;                                                    0242 00747000
*   END PRMPTDIR;                                                  0243 00748000
@EL00007 DS    0H                                                  0243 00749000
@EF00007 DS    0H                                                  0243 00750000
@ER00007 LM    @14,@12,@SA00007                                    0243 00751000
         BR    @14                                                 0243 00752000
*                                                                  0244 00753000
*                                                                  0244 00754000
*                                                                  0244 00755000
*    /****************************************************************/ 00756000
*    /*                                                              */ 00757000
*    /* SUBROUTINE - SPCDEFLT                                        */ 00758000
*    /* FUNCTION - PROVIDE MINIMAL DEFAULTS FOR PRIMARY, SECONDARY   */ 00759000
*    /*     AND UNIT OF SPACE WHEN NO SPACE DEFAULTING CAN BE        */ 00760000
*    /*     PERFORMED BY SVC99. THIS OCCURS WHEN KEYWORDS RLSE OR    */ 00761000
*    /*     ROUND HAVE BEEN SPECIFIED BY THE TERMINAL USER WITHOUT   */ 00762000
*    /*     ANY OTHER SPACE TYPE PARAMETERS.                 @ZA08703*/ 00763000
*    /*                                                              */ 00764000
*    /* OPERATION - LOAD IEFAB445 (ALLOCATION DEFAULT CSECT)         */ 00765000
*    /*     CONVERT PRIMARY,SECONDARY,AVBLKSIZE AND DIRECTORY        */ 00766000
*    /*     VALUES TO EBCDIC AND UPDATE PDE'S FOR THESE VALUES       */ 00767000
*    /*     TO INDICATE THEIR PRESENCE AND POINT TO THESE DEFAULT    */ 00768000
*    /*     VALUES. DELETE IEFAB445.                                 */ 00769000
*    /*                                                              */ 00770000
*    /* INPUT - ALLOCATE COMMAND'S PDL                               */ 00771000
*    /*         IEFAB445 (ALLOCATION DEFAULT CSECT)                  */ 00772000
*    /*                                                              */ 00773000
*    /* OUTPUT - ALLOCATE COMMAND'S PDL OVERLAID WITH DEFAULTED      */ 00774000
*    /*          DATA.                                               */ 00775000
*    /*                                                              */ 00776000
*    /* NOTE - IEFAB445 IS THE ALLOCATION DEFAULT CSECT. IT IS       */ 00777000
*    /*        MAPPED BY MACRO IEFZB445.                             */ 00778000
*    /*                                                              */ 00779000
*    /****************************************************************/ 00780000
*    SPCDEFLT: PROC;                   /* DEFAULT SPACE      @ZA08703*/ 00781000
SPCDEFLT STM   @14,@12,@SA00008                                    0244 00782000
*          RFY (R0) RSTD;              /* RESERVE REG 0      @ZA08703*/ 00783000
*          GEN SETS(R0) (LOAD EP=IEFAB445); /* LOAD DEFAULT  @ZA08703*/ 00784000
         LOAD EP=IEFAB445                                               00785000
*          AB445PTR = R0;              /* CSECT,SET BASE FOR @ZA08703*/ 00786000
         LR    AB445PTR,R0                                         0247 00787000
*          RFY (R0) UNRSTD;            /* MAPPING MACRO      @ZA08703*/ 00788000
*          INPTR = ADDR(DEFPQTY);      /* MOVE OVERLAY       @ZA08703*/ 00789000
         LR    INPTR,AB445PTR                                      0249 00790000
*          CVD(FIXED24,PKAREA);        /* GET EBCDIC FOR     @ZA08703*/ 00791000
         LR    @10,INPTR                                           0250 00792000
         BCTR  @10,0                                               0250 00793000
         L     @10,FIXED24(,@10)                                   0250 00794000
         LA    @10,0(,@10)                                         0250 00795000
         CVD   @10,@TS00001                                        0250 00796000
         MVC   PKAREA(8),@TS00001                                  0250 00797000
*          UNPK(NSPCBUF1,PKAREA(4:8)); /* PRIMARY SPACE      @ZA08703*/ 00798000
         UNPK  NSPCBUF1(8),PKAREA+3(5)                             0251 00799000
*          SPACEPTR = ADDR(NSPCBUF1);  /* OVERLAY PDE        @ZA08703*/ 00800000
         L     @10,PTRPDL(,AWAPTR)                                 0252 00801000
         LA    @05,NSPCBUF1                                        0252 00802000
         ST    @05,SPACEPTR(,@10)                                  0252 00803000
*          SPACELEN = 8;               /* SET LENGTH         @ZA08703*/ 00804000
         LA    @05,8                                               0253 00805000
         STH   @05,SPACELEN(,@10)                                  0253 00806000
*          SPACPRES = '1'B;            /* INDICATE SPACE     @ZA08703*/ 00807000
         OI    SPACPRES(@10),B'10000000'                           0254 00808000
*          SPACEPDE = 1;               /* PRESENT            @ZA08703*/ 00809000
         MVC   SPACEPDE(2,@10),@CH00033                            0255 00810000
*          IF DEFSQTY ^= 0             /* IF SECONDARY AMT   @ZA08703*/ 00811000
*            THEN DO;                  /* HAS DEFAULT        @ZA08703*/ 00812000
         MVC   @ZT00001+1(3),DEFSQTY(AB445PTR)                     0256 00813000
         L     @02,@ZT00001                                        0256 00814000
         LTR   @02,@02                                             0256 00815000
         BZ    @RF00256                                            0256 00816000
*              INPTR = ADDR(DEFSQTY);  /* SET OVERLAY        @ZA08703*/ 00817000
         LA    INPTR,DEFSQTY(,AB445PTR)                            0258 00818000
*              CVD(FIXED24,PKAREA);    /* CONVERT TO EBCDIC  @ZA08703*/ 00819000
         LR    @02,INPTR                                           0259 00820000
         BCTR  @02,0                                               0259 00821000
         L     @02,FIXED24(,@02)                                   0259 00822000
         LA    @02,0(,@02)                                         0259 00823000
         CVD   @02,@TS00001                                        0259 00824000
         MVC   PKAREA(8),@TS00001                                  0259 00825000
*              UNPK(NSPCBUF2,PKAREA(4:8));/* FOR PDE         @ZA08703*/ 00826000
         UNPK  NSPCBUF2(8),PKAREA+3(5)                             0260 00827000
*              SPACPTR2 = ADDR(NSPCBUF2); /* OVERLAY PDE     @ZA08703*/ 00828000
         LA    @05,NSPCBUF2                                        0261 00829000
         ST    @05,SPACPTR2(,@10)                                  0261 00830000
*              SPACLEN2 = 8;              /* SET LENGTH      @ZA08703*/ 00831000
         LA    @05,8                                               0262 00832000
         STH   @05,SPACLEN2(,@10)                                  0262 00833000
*              SPCPRES2 = '1'B;        /* INDICATE VALUE     @ZA08703*/ 00834000
         OI    SPCPRES2(@10),B'10000000'                           0263 00835000
*            END;                      /* PRESENT            @ZA08703*/ 00836000
*          IF DEFDQTY ^= 0             /* IF DEFAULT FOR     @ZA08703*/ 00837000
*            THEN DO;                  /* DIRECTORY BLOCKS   @ZA08703*/ 00838000
@RF00256 L     @10,DEFDQTY-1(,AB445PTR)                            0265 00839000
         LA    @10,0(,@10)                                         0265 00840000
         LTR   @10,@10                                             0265 00841000
         BZ    @RF00265                                            0265 00842000
*              INPTR = ADDR(DEFDQTY);  /* SET OVERLAY        @ZA08703*/ 00843000
         LA    INPTR,DEFDQTY(,AB445PTR)                            0267 00844000
*              CVD(FIXED24,PKAREA);    /* GET IT'S EBCDIC    @ZA08703*/ 00845000
         LR    @10,INPTR                                           0268 00846000
         BCTR  @10,0                                               0268 00847000
         L     @10,FIXED24(,@10)                                   0268 00848000
         LA    @10,0(,@10)                                         0268 00849000
         CVD   @10,@TS00001                                        0268 00850000
         MVC   PKAREA(8),@TS00001                                  0268 00851000
*              UNPK(NDIRBUF1,PKAREA(4:8));  /* EQUIVALENT    @ZA08703*/ 00852000
         UNPK  NDIRBUF1(8),PKAREA+3(5)                             0269 00853000
*              DIRPDE = 1;             /* SHOW KEYWD PRESENT @ZA08703*/ 00854000
         L     @10,PTRPDL(,AWAPTR)                                 0270 00855000
         MVC   DIRPDE(2,@10),@CH00033                              0270 00856000
*              DIRPTR = ADDR(NDIRBUF1);/* OVERLAY PDE        @ZA08703*/ 00857000
         LA    @05,NDIRBUF1                                        0271 00858000
         ST    @05,DIRPTR(,@10)                                    0271 00859000
*              DIRLEN = 8;             /* SET LENGTH         @ZA08703*/ 00860000
         MVC   DIRLEN(2,@10),@CH00095                              0272 00861000
*              DIRPRES = '1'B;         /* SHOW VALUE PRESENT @ZA08703*/ 00862000
         OI    DIRPRES(@10),B'10000000'                            0273 00863000
*            END;                      /*                    @ZA08703*/ 00864000
*          IF DEFBLKLN = '1'B          /* IF UNITS OF SPACE  @ZA08703*/ 00865000
*            THEN DO;                  /* IN AVBLOCK         @ZA08703*/ 00866000
@RF00265 TM    DEFBLKLN(AB445PTR),B'00100000'                      0275 00867000
         BNO   @RF00275                                            0275 00868000
*              BLOKPDE = 2;            /* SHOW AVBLOCK REQ'D @ZA08703*/ 00869000
         L     @10,PTRPDL(,AWAPTR)                                 0277 00870000
         MVC   BLOKPDE(2,@10),@CH00061                             0277 00871000
*              INPTR = ADDR(DEFDRLH);  /* SET OVERLAY        @ZA08703*/ 00872000
         LA    INPTR,DEFDRLH(,AB445PTR)                            0278 00873000
*              CVD(FIXED24,PKAREA);    /* GET EBCDIC FOR     @ZA08703*/ 00874000
         LR    @02,INPTR                                           0279 00875000
         BCTR  @02,0                                               0279 00876000
         L     @02,FIXED24(,@02)                                   0279 00877000
         LA    @02,0(,@02)                                         0279 00878000
         CVD   @02,@TS00001                                        0279 00879000
         MVC   PKAREA(8),@TS00001                                  0279 00880000
*              UNPK(NBLKBUF1,PKAREA(4:8));    /* AVBLOCK LEN @ZA08703*/ 00881000
         UNPK  NBLKBUF1(8,AWAPTR),PKAREA+3(5)                      0280 00882000
*              ABLKPTR = ADDR(NBLKBUF1);      /* OVERLAY PDE @ZA08703*/ 00883000
         LA    @05,NBLKBUF1(,AWAPTR)                               0281 00884000
         ST    @05,ABLKPTR(,@10)                                   0281 00885000
*              ABLKLEN = 8;            /* SET LENGTH         @ZA08703*/ 00886000
         MVC   ABLKLEN(2,@10),@CH00095                             0282 00887000
*              ABLKPRES = '1'B;        /* INDICATE AVBLOCK   @ZA08703*/ 00888000
         OI    ABLKPRES(@10),B'10000000'                           0283 00889000
*            END;                      /* VALUE SUPPLIED     @ZA08703*/ 00890000
*          IF DEFTRK = '1'B            /* IF UNITS OF SPACE  @ZA08703*/ 00891000
*            THEN                      /* ARE IN TRACKS      @ZA08703*/ 00892000
@RF00275 TM    DEFTRK(AB445PTR),B'10000000'                        0285 00893000
         BNO   @RF00285                                            0285 00894000
*              BLOKPDE = 3;            /* INDICATE TRACKS    @ZA08703*/ 00895000
         L     @10,PTRPDL(,AWAPTR)                                 0286 00896000
         MVC   BLOKPDE(2,@10),@CH00319                             0286 00897000
*          IF DEFCYL = '1'B            /* IF UNITS OF SPACE  @ZA08703*/ 00898000
*            THEN                      /* ARE IN CYLINDERS   @ZA08703*/ 00899000
@RF00285 TM    DEFCYL(AB445PTR),B'01000000'                        0287 00900000
         BNO   @RF00287                                            0287 00901000
*              BLOKPDE = 4;            /* INDICATE CYLINDERS @ZA08703*/ 00902000
         L     @10,PTRPDL(,AWAPTR)                                 0288 00903000
         MVC   BLOKPDE(2,@10),@CH00317                             0288 00904000
*          GEN(DELETE EP=IEFAB445);    /* DELETE DEFAULT     @ZA08703*/ 00905000
@RF00287 DS    0H                                                  0289 00906000
         DELETE EP=IEFAB445                                             00907000
*        END SPCDEFLT;                 /* CSECT              @ZA08703*/ 00908000
@EL00008 DS    0H                                                  0290 00909000
@EF00008 DS    0H                                                  0290 00910000
@ER00008 LM    @14,@12,@SA00008                                    0290 00911000
         BR    @14                                                 0290 00912000
*                                                                  0291 00913000
*    END IKJEFD33                                                  0291 00914000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00915000
*/*%INCLUDE SYSLIB  (IKJZT430)                                        * 00916000
*/*%INCLUDE SYSLIB  (IKJZB831)                                        * 00917000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        * 00918000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        * 00919000
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        * 00920000
*/*%INCLUDE SYSLIB  (IEFZB445)                                        * 00921000
*;                                                                 0291 00922000
@DATA    DS    0H                                                       00923000
@CH00033 DC    H'1'                                                     00924000
@CH00061 DC    H'2'                                                     00925000
@CH00319 DC    H'3'                                                     00926000
@CH00317 DC    H'4'                                                     00927000
@CH00064 DC    H'5'                                                     00928000
@CH00175 DC    H'7'                                                     00929000
@CH00412 DC    XL2'000A'                                                00930000
@CH00414 DC    XL2'000B'                                                00931000
@CH00488 DC    XL2'0030'                                                00932000
@SM00677 MVC   ADLPARM(0,@15),SAVPARM+1                                 00933000
@SM00680 MVC   PKAREA1(0,Y),VALBUF                                      00934000
@SM00682 MVC   ADLPARM(0,@02),SAVPARM+2                                 00935000
@SM00684 MVC   NSPCBUF1(0),SPCBUF1(@01)                                 00936000
@SM00686 MVC   NSPCBUF2(0),SPCBUF2(@01)                                 00937000
@SM00688 MVC   NDIRBUF1(0),DIRBUF1(@01)                                 00938000
@DATD    DSECT                                                          00939000
         DS    0F                                                       00940000
@SA00001 DS    18F                                                      00941000
@PC00001 DS    1F                                                       00942000
@SAV001  EQU   @SA00001                                                 00943000
@SA00007 DS    15F                                                      00944000
@SA00003 DS    14F                                                      00945000
@SA00005 DS    15F                                                      00946000
@SA00002 DS    13F                                                      00947000
@SA00006 DS    15F                                                      00948000
@SA00008 DS    15F                                                      00949000
@TF00001 DS    F                                                        00950000
@ZTEMPS  DS    0F                                                       00951000
@ZT00001 DC    F'0'                                                     00952000
@ZTEMPND EQU   *                                                        00953000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00954000
@TEMPS   EQU   @ZTEMPS                                                  00955000
@L       EQU   @ZLEN                                                    00956000
IKJEFD33 CSECT                                                          00957000
         DS    0F                                                       00958000
@CF00168 DC    F'6'                                                     00959000
@CH00168 EQU   @CF00168+2                                               00960000
@CF00095 DC    F'8'                                                     00961000
@CH00095 EQU   @CF00095+2                                               00962000
@DATD    DSECT                                                          00963000
         DS    0D                                                       00964000
PDLADDR2 DS    A                                                        00965000
         DS    0D                                                       00966000
@TS00001 DS    CL8                                                      00967000
CNVRTYPE DS    CL1                                                      00968000
         ORG   CNVRTYPE                                                 00969000
BLKCNVRT DS    BL1                                                      00970000
SPCCNVRT EQU   CNVRTYPE+0                                               00971000
INCCNVRT EQU   CNVRTYPE+0                                               00972000
@NM00008 EQU   CNVRTYPE+0                                               00973000
         ORG   CNVRTYPE+1                                               00974000
SAVPARM  DS    CL4                                                      00975000
VALBUF   DS    CL8                                                      00976000
NSPCBUF1 DS    CL8                                                      00977000
NSPCBUF2 DS    CL8                                                      00978000
NDIRBUF1 DS    CL8                                                      00979000
PKAREA   DS    CL8                                                      00980000
         DS    CL3                                                      00981000
CVBAREA  DS    CL8                                                      00982000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00983000
@ENDDATD EQU   *                                                        00984000
@DATEND  EQU   *                                                        00985000
IKJEFD33 CSECT                                                          00986000
         DS    0F                                                       00987000
@SIZDATD DC    AL1(1)                                                   00988000
         DC    AL3(@ENDDATD-@DATD)                                      00989000
@SIZ001  EQU   @SIZDATD                                                 00990000
@CV00044 DC    V(IKJEFD35)                                              00991000
@CV00045 DC    V(IKJEFD37)                                              00992000
         DS    0D                                                       00993000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00994000
@01      EQU   01                                                       00995000
@02      EQU   02                                                       00996000
@03      EQU   03                                                       00997000
@04      EQU   04                                                       00998000
@05      EQU   05                                                       00999000
@06      EQU   06                                                       01000000
@07      EQU   07                                                       01001000
@08      EQU   08                                                       01002000
@09      EQU   09                                                       01003000
@10      EQU   10                                                       01004000
@11      EQU   11                                                       01005000
@12      EQU   12                                                       01006000
@13      EQU   13                                                       01007000
@14      EQU   14                                                       01008000
@15      EQU   15                                                       01009000
@0       EQU   00                                                       01010000
@1       EQU   01                                                       01011000
@2       EQU   02                                                       01012000
@3       EQU   03                                                       01013000
@4       EQU   04                                                       01014000
@5       EQU   05                                                       01015000
@6       EQU   06                                                       01016000
@7       EQU   07                                                       01017000
@8       EQU   08                                                       01018000
@9       EQU   09                                                       01019000
@A       EQU   10                                                       01020000
@B       EQU   11                                                       01021000
@C       EQU   12                                                       01022000
@D       EQU   13                                                       01023000
@E       EQU   14                                                       01024000
@F       EQU   15                                                       01025000
INPTR    EQU   @05                                                      01026000
AB445PTR EQU   @04                                                      01027000
VALLEN   EQU   @05                                                      01028000
INC      EQU   @04                                                      01029000
AWAPTR   EQU   @03                                                      01030000
R0       EQU   @00                                                      01031000
R1       EQU   @01                                                      01032000
R5       EQU   @05                                                      01033000
Y        EQU   @08                                                      01034000
R13      EQU   @13                                                      01035000
R14      EQU   @01                                                      01036000
R15      EQU   @15                                                      01037000
ALLOCWA  EQU   0                                                        01038000
CPPLPTR  EQU   ALLOCWA                                                  01039000
PTRPDL   EQU   ALLOCWA+4                                                01040000
GTPLPTR  EQU   ALLOCWA+8                                                01041000
SWITCH   EQU   ALLOCWA+12                                               01042000
RBCODE12 EQU   SWITCH                                                   01043000
CONT     EQU   SWITCH                                                   01044000
SWITCH2  EQU   ALLOCWA+13                                               01045000
DSEXISTS EQU   SWITCH2                                                  01046000
ENTRYCD  EQU   ALLOCWA+14                                               01047000
TXT      EQU   ALLOCWA+16                                               01048000
RCODESV  EQU   ALLOCWA+24                                               01049000
VCFLAGS  EQU   ALLOCWA+36                                               01050000
PMPTPDL  EQU   ALLOCWA+40                                               01051000
P        EQU   ALLOCWA+52                                               01052000
Q        EQU   ALLOCWA+56                                               01053000
CMDTWO   EQU   ALLOCWA+60                                               01054000
NBLKBUF1 EQU   ALLOCWA+164                                              01055000
PPLPTR   EQU   ALLOCWA+172                                              01056000
ALLOCPDL EQU   0                                                        01057000
BLOKPDE  EQU   ALLOCPDL+16                                              01058000
SPACEPDE EQU   ALLOCPDL+18                                              01059000
DIRPDE   EQU   ALLOCPDL+20                                              01060000
USINGPDE EQU   ALLOCPDL+22                                              01061000
RLSEPDE  EQU   ALLOCPDL+42                                              01062000
RNDPDE   EQU   ALLOCPDL+44                                              01063000
DSNPDE   EQU   ALLOCPDL+48                                              01064000
DSNPTR   EQU   DSNPDE                                                   01065000
DSNFLAGS EQU   DSNPDE+6                                                 01066000
MBRPTR   EQU   DSNPDE+8                                                 01067000
MBRFLAGS EQU   DSNPDE+14                                                01068000
MBRPRES  EQU   MBRFLAGS                                                 01069000
PASSPTR  EQU   DSNPDE+16                                                01070000
PASSFLAG EQU   DSNPDE+22                                                01071000
DDNMEPDE EQU   ALLOCPDL+76                                              01072000
DDNPTR   EQU   DDNMEPDE                                                 01073000
DDNFLAGS EQU   DDNMEPDE+6                                               01074000
CLASPDE  EQU   ALLOCPDL+84                                              01075000
CLASPTR  EQU   CLASPDE                                                  01076000
CLASFLG  EQU   CLASPDE+6                                                01077000
SERPDE   EQU   ALLOCPDL+92                                              01078000
SERPTR   EQU   SERPDE                                                   01079000
SERFLAGS EQU   SERPDE+6                                                 01080000
BLKPDE   EQU   ALLOCPDL+104                                             01081000
BLKPTR   EQU   BLKPDE                                                   01082000
BLKLEN   EQU   BLKPDE+4                                                 01083000
BLKFLAGS EQU   BLKPDE+6                                                 01084000
ABLKPDE  EQU   ALLOCPDL+112                                             01085000
ABLKPTR  EQU   ABLKPDE                                                  01086000
ABLKLEN  EQU   ABLKPDE+4                                                01087000
ABLKFLG  EQU   ABLKPDE+6                                                01088000
ABLKPRES EQU   ABLKFLG                                                  01089000
SPACPDE  EQU   ALLOCPDL+120                                             01090000
SPACEPTR EQU   SPACPDE                                                  01091000
SPACELEN EQU   SPACPDE+4                                                01092000
SPACEFLG EQU   SPACPDE+6                                                01093000
SPACPRES EQU   SPACEFLG                                                 01094000
SPACPDE2 EQU   ALLOCPDL+128                                             01095000
SPACPTR2 EQU   SPACPDE2                                                 01096000
SPACLEN2 EQU   SPACPDE2+4                                               01097000
SPACFLG2 EQU   SPACPDE2+6                                               01098000
SPCPRES2 EQU   SPACFLG2                                                 01099000
DIRECPDE EQU   ALLOCPDL+136                                             01100000
DIRPTR   EQU   DIRECPDE                                                 01101000
DIRLEN   EQU   DIRECPDE+4                                               01102000
DIRFLAGS EQU   DIRECPDE+6                                               01103000
DIRPRES  EQU   DIRFLAGS                                                 01104000
ATTRPDE  EQU   ALLOCPDL+144                                             01105000
ATTRPTR  EQU   ATTRPDE                                                  01106000
ATTRFLAG EQU   ATTRPDE+6                                                01107000
USIDPDE  EQU   ALLOCPDL+152                                             01108000
USIDPTR  EQU   USIDPDE                                                  01109000
USIDFLAG EQU   USIDPDE+6                                                01110000
UTYPPDE  EQU   ALLOCPDL+160                                             01111000
UTYPPTR  EQU   UTYPPDE                                                  01112000
UTYPFLAG EQU   UTYPPDE+6                                                01113000
UNCNTPDE EQU   ALLOCPDL+168                                             01114000
UCNTPTR  EQU   UNCNTPDE                                                 01115000
UCNTFLAG EQU   UNCNTPDE+6                                               01116000
POSTPDE  EQU   ALLOCPDL+180                                             01117000
POSPTR   EQU   POSTPDE                                                  01118000
POSFLAG  EQU   POSTPDE+6                                                01119000
MXVOLPDE EQU   ALLOCPDL+188                                             01120000
MXVOLPTR EQU   MXVOLPDE                                                 01121000
MXVOLFLG EQU   MXVOLPDE+6                                               01122000
VOLSQPDE EQU   ALLOCPDL+196                                             01123000
VOLSQPTR EQU   VOLSQPDE                                                 01124000
VOLSQFLG EQU   VOLSQPDE+6                                               01125000
MSVGPDE  EQU   ALLOCPDL+204                                             01126000
MSVGPTR  EQU   MSVGPDE                                                  01127000
MSVGFLG  EQU   MSVGPDE+6                                                01128000
DSNBUF   EQU   0                                                        01129000
BLKBUF   EQU   0                                                        01130000
SPACEBUF EQU   0                                                        01131000
SPACBUF2 EQU   0                                                        01132000
GTPL     EQU   0                                                        01133000
GTPLABLK EQU   GTPL+16                                                  01134000
TEXTCORE EQU   0                                                        01135000
ADDNUM   EQU   TEXTCORE                                                 01136000
ADDTEXT  EQU   TEXTCORE+4                                               01137000
ADLTEXT  EQU   0                                                        01138000
ADLKEY   EQU   ADLTEXT                                                  01139000
ADLNBR   EQU   ADLTEXT+2                                                01140000
ADLLEN   EQU   ADLTEXT+4                                                01141000
ADLPARM  EQU   ADLTEXT+6                                                01142000
PPL      EQU   0                                                        01143000
CPPL     EQU   0                                                        01144000
SPCPDE1  EQU   0                                                        01145000
SPCPTR1  EQU   SPCPDE1+8                                                01146000
SPCLEN1  EQU   SPCPDE1+12                                               01147000
SPCFLAG1 EQU   SPCPDE1+14                                               01148000
SPCPTR2  EQU   SPCPDE1+16                                               01149000
SPCLEN2  EQU   SPCPDE1+20                                               01150000
SPCFLAG2 EQU   SPCPDE1+22                                               01151000
SPC2PRES EQU   SPCFLAG2                                                 01152000
SPCBUF1  EQU   0                                                        01153000
SPCBUF2  EQU   0                                                        01154000
DIRPDE1  EQU   0                                                        01155000
DIRPTR1  EQU   DIRPDE1+8                                                01156000
DIRLEN1  EQU   DIRPDE1+12                                               01157000
DIRFLAG1 EQU   DIRPDE1+14                                               01158000
DIRBUF1  EQU   0                                                        01159000
IEFAB445 EQU   0                                                        01160000
DEFSPACE EQU   IEFAB445                                                 01161000
DEFPQTY  EQU   DEFSPACE                                                 01162000
DEFSQTY  EQU   DEFSPACE+3                                               01163000
DEFDRLH  EQU   DEFSPACE+6                                               01164000
DEFDQTY  EQU   DEFSPACE+9                                               01165000
@NM00017 EQU   DEFSPACE+12                                              01166000
DEFTRK   EQU   @NM00017                                                 01167000
DEFCYL   EQU   @NM00017                                                 01168000
DEFBLKLN EQU   @NM00017                                                 01169000
PKAREA1  EQU   0                                                        01170000
AREA1    EQU   0                                                        01171000
AREA2    EQU   0                                                        01172000
FIXED24  EQU   0                                                        01173000
ABLKBUF  EQU   0                                                        01174000
ATTRBUF  EQU   0                                                        01175000
CLASSBUF EQU   0                                                        01176000
DDNBUF   EQU   0                                                        01177000
DIRBUF   EQU   0                                                        01178000
MBRBUF   EQU   0                                                        01179000
MSVGBUF  EQU   0                                                        01180000
MXVOLBUF EQU   0                                                        01181000
PASSBUF  EQU   0                                                        01182000
POSTBUF  EQU   0                                                        01183000
SERBUF   EQU   0                                                        01184000
UCNTBUF  EQU   0                                                        01185000
USIDBUF  EQU   0                                                        01186000
UTYPBUF  EQU   0                                                        01187000
VSEQBUF  EQU   0                                                        01188000
INPARMS  EQU   0                                                        01189000
*                                      START UNREFERENCED COMPONENTS    01190000
DEFUNIT  EQU   IEFAB445+13                                              01191000
DEFROUND EQU   @NM00017                                                 01192000
DEFALX   EQU   @NM00017                                                 01193000
DEFMIXG  EQU   @NM00017                                                 01194000
DEFCONTG EQU   @NM00017                                                 01195000
DEFRLSE  EQU   @NM00017                                                 01196000
@NM00016 EQU   DIRPDE1+15                                               01197000
@NM00015 EQU   DIRPDE1+4                                                01198000
@NM00014 EQU   DIRPDE1                                                  01199000
@NM00013 EQU   SPCPDE1+23                                               01200000
@NM00012 EQU   SPCFLAG2                                                 01201000
@NM00011 EQU   SPCPDE1+15                                               01202000
@NM00010 EQU   SPCPDE1+4                                                01203000
@NM00009 EQU   SPCPDE1                                                  01204000
CPPLECT  EQU   CPPL+12                                                  01205000
CPPLPSCB EQU   CPPL+8                                                   01206000
CPPLUPT  EQU   CPPL+4                                                   01207000
CPPLCBUF EQU   CPPL                                                     01208000
PPLUWA   EQU   PPL+24                                                   01209000
PPLCBUF  EQU   PPL+20                                                   01210000
PPLANS   EQU   PPL+16                                                   01211000
PPLPCL   EQU   PPL+12                                                   01212000
PPLECB   EQU   PPL+8                                                    01213000
PPLECT   EQU   PPL+4                                                    01214000
PPLUPT   EQU   PPL                                                      01215000
ADDUNIT  EQU   TEXTCORE+36                                              01216000
@NM00007 EQU   TEXTCORE+2                                               01217000
GTPLOUTA EQU   GTPL+20                                                  01218000
GTPLTBLE EQU   GTPL+12                                                  01219000
GTPLKLST EQU   GTPL+8                                                   01220000
GTPLPCL  EQU   GTPL+4                                                   01221000
GTPLPDL  EQU   GTPL                                                     01222000
DSNTERM  EQU   DSNBUF                                                   01223000
MSVGRSV2 EQU   MSVGPDE+7                                                01224000
MSVGRSV1 EQU   MSVGFLG                                                  01225000
MSVGPRES EQU   MSVGFLG                                                  01226000
MSVGLEN  EQU   MSVGPDE+4                                                01227000
VOLRSV2  EQU   VOLSQPDE+7                                               01228000
VOLRSV1  EQU   VOLSQFLG                                                 01229000
VOLPRES  EQU   VOLSQFLG                                                 01230000
VOLSQLEN EQU   VOLSQPDE+4                                               01231000
MXVRSV2  EQU   MXVOLPDE+7                                               01232000
MXVRSV1  EQU   MXVOLFLG                                                 01233000
MXVPRES  EQU   MXVOLFLG                                                 01234000
MXVOLLEN EQU   MXVOLPDE+4                                               01235000
POSRSV2  EQU   POSTPDE+7                                                01236000
POSRSV1  EQU   POSFLAG                                                  01237000
POSPRES  EQU   POSFLAG                                                  01238000
POSLEN   EQU   POSTPDE+4                                                01239000
LABLRSV1 EQU   ALLOCPDL+178                                             01240000
LABELPDE EQU   ALLOCPDL+176                                             01241000
UCNTRSV2 EQU   UNCNTPDE+7                                               01242000
UCNTRSV1 EQU   UCNTFLAG                                                 01243000
UCNTPRES EQU   UCNTFLAG                                                 01244000
UCNTLEN  EQU   UNCNTPDE+4                                               01245000
UTYPRSV2 EQU   UTYPPDE+7                                                01246000
UTYPRSV1 EQU   UTYPFLAG                                                 01247000
UTYPPRES EQU   UTYPFLAG                                                 01248000
UTYPLEN  EQU   UTYPPDE+4                                                01249000
USIDRSV2 EQU   USIDPDE+7                                                01250000
USIDRSV1 EQU   USIDFLAG                                                 01251000
USIDPRES EQU   USIDFLAG                                                 01252000
USIDLEN  EQU   USIDPDE+4                                                01253000
ATTRRSV2 EQU   ATTRPDE+7                                                01254000
ATTRRSV1 EQU   ATTRFLAG                                                 01255000
ATTRPRES EQU   ATTRFLAG                                                 01256000
ATTRLEN  EQU   ATTRPDE+4                                                01257000
DIRRSV2  EQU   DIRECPDE+7                                               01258000
DIRRSV1  EQU   DIRFLAGS                                                 01259000
SPCRSV22 EQU   SPACPDE2+7                                               01260000
SPCRSV12 EQU   SPACFLG2                                                 01261000
SPACRSV2 EQU   SPACPDE+7                                                01262000
SPACRSV1 EQU   SPACEFLG                                                 01263000
ABLKRSV2 EQU   ABLKPDE+7                                                01264000
ABLKRSV1 EQU   ABLKFLG                                                  01265000
BLKRSV2  EQU   BLKPDE+7                                                 01266000
BLKRSV1  EQU   BLKFLAGS                                                 01267000
BLKPRES  EQU   BLKFLAGS                                                 01268000
SERNEXT  EQU   SERPDE+8                                                 01269000
SERRSV2  EQU   SERPDE+7                                                 01270000
SERRSV1  EQU   SERFLAGS                                                 01271000
SERPRES  EQU   SERFLAGS                                                 01272000
SERLEN   EQU   SERPDE+4                                                 01273000
CLASRSV2 EQU   CLASPDE+7                                                01274000
CLASRSV1 EQU   CLASFLG                                                  01275000
CLASPRES EQU   CLASFLG                                                  01276000
CLASLEN  EQU   CLASPDE+4                                                01277000
DDNRSV2  EQU   DDNMEPDE+7                                               01278000
DDNRSV1  EQU   DDNFLAGS                                                 01279000
DDNPRES  EQU   DDNFLAGS                                                 01280000
DDNLEN   EQU   DDNMEPDE+4                                               01281000
DSNNEXT  EQU   DSNPDE+24                                                01282000
PASSRSV2 EQU   DSNPDE+23                                                01283000
PASSRSV1 EQU   PASSFLAG                                                 01284000
PASSPRES EQU   PASSFLAG                                                 01285000
PASSLEN  EQU   DSNPDE+20                                                01286000
MBRRSV2  EQU   DSNPDE+15                                                01287000
MBRRSV1  EQU   MBRFLAGS                                                 01288000
MBRLEN   EQU   DSNPDE+12                                                01289000
DSNRSV2  EQU   DSNPDE+7                                                 01290000
DSNRSV1  EQU   DSNFLAGS                                                 01291000
DSNQUOT  EQU   DSNFLAGS                                                 01292000
DSNPRES  EQU   DSNFLAGS                                                 01293000
DSNLENGH EQU   DSNPDE+4                                                 01294000
DISPPDE  EQU   ALLOCPDL+46                                              01295000
VSEQPDE  EQU   ALLOCPDL+40                                              01296000
PRIVPDE  EQU   ALLOCPDL+38                                              01297000
MAXVPDE  EQU   ALLOCPDL+36                                              01298000
POSPDE   EQU   ALLOCPDL+34                                              01299000
LABLPDE  EQU   ALLOCPDL+32                                              01300000
UCNTPDE  EQU   ALLOCPDL+30                                              01301000
UNITPDE  EQU   ALLOCPDL+28                                              01302000
HOLDPDE  EQU   ALLOCPDL+26                                              01303000
DESTPDE  EQU   ALLOCPDL+24                                              01304000
VOLPDE   EQU   ALLOCPDL+14                                              01305000
STATSPDE EQU   ALLOCPDL+12                                              01306000
FILEPDE  EQU   ALLOCPDL+10                                              01307000
DSPDE    EQU   ALLOCPDL+8                                               01308000
@NM00006 EQU   ALLOCPDL+4                                               01309000
@NM00005 EQU   ALLOCPDL                                                 01310000
FIRSTPTR EQU   ALLOCWA+176                                              01311000
COMMECB  EQU   ALLOCWA+160                                              01312000
PDLADDR3 EQU   ALLOCWA+156                                              01313000
PPLTWO   EQU   ALLOCWA+128                                              01314000
CMDTWOBF EQU   CMDTWO+4                                                 01315000
CMDTWOOF EQU   CMDTWO+2                                                 01316000
CMDTWOLN EQU   CMDTWO                                                   01317000
MSGPTR   EQU   ALLOCWA+48                                               01318000
PRCODE   EQU   ALLOCWA+44                                               01319000
@NM00004 EQU   ALLOCWA+38                                               01320000
NCLASBUF EQU   ALLOCWA+37                                               01321000
@NM00003 EQU   VCFLAGS                                                  01322000
SPACE2   EQU   VCFLAGS                                                  01323000
SPACE1   EQU   VCFLAGS                                                  01324000
AVBLK    EQU   VCFLAGS                                                  01325000
PTRMSGS  EQU   ALLOCWA+32                                               01326000
DSNCTR   EQU   ALLOCWA+30                                               01327000
VLISTCTR EQU   ALLOCWA+28                                               01328000
PTRS99RB EQU   ALLOCWA+20                                               01329000
@NM00002 EQU   SWITCH2                                                  01330000
@NM00001 EQU   SWITCH2                                                  01331000
FIRSTPDE EQU   SWITCH                                                   01332000
AWARSV1  EQU   SWITCH                                                   01333000
ASTRSK   EQU   SWITCH                                                   01334000
TERMOPT  EQU   SWITCH                                                   01335000
PROMPT   EQU   SWITCH                                                   01336000
DSOVRLAY EQU   SWITCH                                                   01337000
*                                      END UNREFERENCED COMPONENTS      01338000
@RC00079 EQU   @RC00070                                                 01339000
@RC00091 EQU   @RC00088                                                 01340000
@RF00095 EQU   @RC00088                                                 01341000
@RF00103 EQU   @RC00100                                                 01342000
@RC00181 EQU   @EL00005                                                 01343000
@RC00209 EQU   @EL00006                                                 01344000
@RC00226 EQU   @EL00007                                                 01345000
@EL01    EQU   @EL00001                                                 01346000
@ENDDATA EQU   *                                                        01347000
         END   IKJEFD33,(C'PLS1037',0701,78174)                         01348000
