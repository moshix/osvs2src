         TITLE 'CONCATENATION ROUTINE                                  *00001000
                        '                                               00002000
IKJEFD34 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFD34  75.248'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00022000
         MVC   @PC00001(4),0(@01)                                  0001 00023000
*/********************************************************************/ 00024000
*/*                                                                  */ 00025000
*/* SEGMENT NAME -                                                   */ 00026000
*/*      CONCATRQ                                                    */ 00027000
*/*                                                                  */ 00028000
*/* FUNCTION -                                                       */ 00029000
*/*      THIS ROUTINE PROCESSES A CONCATENATION REQUEST.             */ 00030000
*/*                                                                  */ 00031000
*/* OPERATION -                                                      */ 00032000
*/*      IF A STATUS OF MOD, NEW OR SYSOUT WAS SPECIFIED,            */ 00033000
*/*      THEN ISSUE AN ERROR MESSAGE AND TERMINATE.                  */ 00034000
*/*      IF FILE WAS NOT SPECIFIED, PROMPT THE USER                  */ 00035000
*/*      TO ENTER A FILENAME. MARK EXTRANEOUS PARAMETERS NOT         */ 00036000
*/*      ENTERED IN THE PDL. ISSUE A GETMAIN FOR STORAGE TO HOLD     */ 00037000
*/*      THE TEXT UNITS FOR THE DDNAMES ASSOCIATED WITH EACH DATA    */ 00038000
*/*      SET. TRANSLATE PARAMETERS TO TEXT FORMAT. INVOKE ROUTINE    */ 00039000
*/*      CONCTDSN TO ALLOCATE EACH DATA SET. IF THE ALLOCATION WAS   */ 00040000
*/*      SUCCESSFUL, INVOKE DYNAMIC ALLOCATION TO CONCATENATE THE    */ 00041000
*/*      DDNAMES.                                                    */ 00042000
*/*                                                                  */ 00043000
*/* INPUT -                                                          */ 00044000
*/*      PTR TO PDL                                                  */ 00045000
*/*                                                                  */ 00046000
*/* OUTPUT -                                                         */ 00047000
*/*      RBCODE12 = 0 - CONCATENATION SUCCESSFUL                     */ 00048000
*/*                 1 - ERROR IN ALLOCATION OR CONCATENATION         */ 00049000
*/*                                                                  */ 00050000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00051000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00052000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00053000
*/********************************************************************/ 00054000
*    CONCATRQ:                                                     0088 00055000
*          AWAPTR = R1;                     /* POINTER TO WORKAREA   */ 00056000
CONCATRQ LR    AWAPTR,R1                                           0088 00057000
*          INC = ADDNUM + 1;                /* SUBSCRIPT USED FOR  0089 00058000
*                                              ADDITIONAL TEXT       */ 00059000
         L     @06,GTPLPTR(,AWAPTR)                                0089 00060000
         L     @06,GTPLABLK(,@06)                                  0089 00061000
         LA    INC,1                                               0089 00062000
         AH    INC,ADDNUM(,@06)                                    0089 00063000
*          CNCTFLAG = '00'X;                /* INITIALIZE FLAGS      */ 00064000
         MVI   CNCTFLAG,X'00'                                      0090 00065000
*          IF STATSPDE > 2 THEN             /* IF MOD,NEW OR SYSOUT, */ 00066000
         L     @06,PTRPDL(,AWAPTR)                                 0091 00067000
         LH    @06,STATSPDE(,@06)                                  0091 00068000
         C     @06,@CF00080                                        0091 00069000
         BNH   @RF00091                                            0091 00070000
*            DO;                            /* THEN                  */ 00071000
*              RBCODE12 = '1'B;             /* INDICATE ALLOC FAILED */ 00072000
         OI    RBCODE12(AWAPTR),B'10000000'                        0093 00073000
*              STATSERR = '1'B;             /* INDICATE ERROR TYPE   */ 00074000
         OI    STATSERR,B'10000000'                                0094 00075000
*              CALL CCERRMSG;               /* ISSUE ERROR MSG       */ 00076000
         BAL   @14,CCERRMSG                                        0095 00077000
*            END;                                                  0096 00078000
*          ELSE                                                    0097 00079000
*            DO;                                                   0097 00080000
         B     @RC00091                                            0097 00081000
@RF00091 DS    0H                                                  0098 00082000
*              IF FILEPDE = 0 THEN          /* IF FILE NOT ENTERED,  */ 00083000
         L     @06,PTRPDL(,AWAPTR)                                 0098 00084000
         LH    @06,FILEPDE(,@06)                                   0098 00085000
         LTR   @06,@06                                             0098 00086000
         BNZ   @RF00098                                            0098 00087000
*                CALL PRMPTDDN;             /* PROMPT FOR FILENAME   */ 00088000
         BAL   @14,PRMPTDDN                                        0099 00089000
*              I = 1;                       /* INITIALIZE SUBSCRIPT  */ 00090000
@RF00098 LA    I,1                                                 0100 00091000
*    /* MARK EXTRANEOUS PARAMETERS NOT ENTERED IN PDL                */ 00092000
*              DO WHILE (CONT='0'B);                               0101 00093000
         B     @DE00101                                            0101 00094000
@DL00101 DS    0H                                                  0102 00095000
*              IF CONCTEXT(I)='00'X THEN    /* IF END OF LIST,       */ 00096000
         LA    @06,CONCTEXT-1(I)                                   0102 00097000
         CLI   0(@06),X'00'                                        0102 00098000
         BNE   @RF00102                                            0102 00099000
*                CONT='1'B;                 /* EXIT DO-WHILE         */ 00100000
         OI    CONT(AWAPTR),B'00010000'                            0103 00101000
*              ELSE                         /* ELSE,                 */ 00102000
*                DO;                        /* GET ADDRESS OF PDE    */ 00103000
         B     @RC00102                                            0104 00104000
@RF00102 DS    0H                                                  0105 00105000
*                 EXTRAN = ADDR(ALLOCPDL)+CONCTEXT(I);             0105 00106000
         SLR   EXTRAN,EXTRAN                                       0105 00107000
         IC    EXTRAN,CONCTEXT-1(I)                                0105 00108000
         AL    EXTRAN,PTRPDL(,AWAPTR)                              0105 00109000
*                 PDEEXT = 0;               /* SET PDE TO 0          */ 00110000
         SLR   @06,@06                                             0106 00111000
         STH   @06,PDEEXT(,EXTRAN)                                 0106 00112000
*                 I = I+1;                  /* INCREMENT SUBSCRIPT   */ 00113000
         AL    I,@CF00033                                          0107 00114000
*                END;                                              0108 00115000
*              END;                         /* END DO-WHILE          */ 00116000
@RC00102 DS    0H                                                  0109 00117000
@DE00101 TM    CONT(AWAPTR),B'00010000'                            0109 00118000
         BZ    @DL00101                                            0109 00119000
*              CONT = '0'B;                 /* RESET SWITCH          */ 00120000
         NI    CONT(AWAPTR),B'11101111'                            0110 00121000
*              SIZE = (DSNCTR*10) + 16;     /* CORE NEEDED FOR CONCAT*/ 00122000
         LH    @02,DSNCTR(,AWAPTR)                                 0111 00123000
         MH    @02,@CH00839                                        0111 00124000
         LA    @02,16(,@02)                                        0111 00125000
         ST    @02,@TF00001                                        0111 00126000
         MVC   SIZE(3),@TF00001+1                                  0111 00127000
*              SPNO = '01'X;                /* SUBPOOL NUMBER        */ 00128000
         MVI   SPNO,X'01'                                          0112 00129000
*              R0 = CORE;                   /* SBPOOL AND SIZE IN 0  */ 00130000
         L     R0,CORE                                             0113 00131000
*              GEN (GETMAIN R,LV=(0));      /* ISSUE GETMAIN         */ 00132000
         GETMAIN R,LV=(0)                                               00133000
*              DDNAPTR = R1;                /* PTR TO STORAGE        */ 00134000
         LR    DDNAPTR,R1                                          0115 00135000
*              DDLST = ADDR(DDNMLEN);       /* PTR TO LIST POSITION  */ 00136000
         LA    DDLST,DDNMLEN(,DDNAPTR)                             0116 00137000
*              PERMCTPT = ADDR(PERMCTXT);   /* TEXT FOR PERM CONCAT  */ 00138000
         LA    @02,PERMCTXT(,DDNAPTR)                              0117 00139000
         ST    @02,PERMCTPT(,DDNAPTR)                              0117 00140000
*              PERMCTKY = DCCPERMC;         /* KEY AND               */ 00141000
         MVC   PERMCTKY(2,DDNAPTR),@CH00620                        0118 00142000
*              PERMCTNM = 0;                /* NUMBER                */ 00143000
         SLR   @02,@02                                             0119 00144000
         STH   @02,PERMCTNM(,DDNAPTR)                              0119 00145000
*              DDNMPTR = ADDR(DDNMTXT);     /* TEXT FOR DDNAMES      */ 00146000
         LA    @02,DDNMTXT(,DDNAPTR)                               0120 00147000
         ST    @02,DDNMPTR(,DDNAPTR)                               0120 00148000
*              DDNMKEY = DCCDDNAM;          /* KEY AND               */ 00149000
         MVC   DDNMKEY(2,DDNAPTR),@CH00614                         0121 00150000
*              DDNMNBR = DSNCTR;            /* NUMBER                */ 00151000
         LH    @02,DSNCTR(,AWAPTR)                                 0122 00152000
         STH   @02,DDNMNBR(,DDNAPTR)                               0122 00153000
*              DDNMEND = '1'B;              /* END OF ADDR LIST      */ 00154000
         OI    DDNMEND(DDNAPTR),B'10000000'                        0123 00155000
*              CALL CNCATTXT;               /* SET UP TEXT UNITS     */ 00156000
         BAL   @14,CNCATTXT                                        0124 00157000
*              CALL TRANSRTN;               /* TRANSLATE PARAMETERS  */ 00158000
         BAL   @14,TRANSRTN                                        0125 00159000
*              IF RBCODE12 = '0'B THEN      /* IF TRANSLATE          */ 00160000
         TM    RBCODE12(AWAPTR),B'10000000'                        0126 00161000
         BNZ   @RF00126                                            0126 00162000
*                DO;                        /* SUCCESSFUL,           */ 00163000
*                  CALL CONCTDSN;           /* ALLOC EACH DATASET    */ 00164000
         BAL   @14,CONCTDSN                                        0128 00165000
*                  IF RBCODE12 = '0'B THEN  /* IF ALLOCATION GOOD,   */ 00166000
         TM    RBCODE12(AWAPTR),B'10000000'                        0129 00167000
         BNZ   @RF00129                                            0129 00168000
*                    DO;                                           0130 00169000
*                  S99VERB = S99VRBCC;      /* SET CONCAT VERB       */ 00170000
         L     @10,PTRS99RB(,AWAPTR)                               0131 00171000
         MVI   S99VERB(@10),X'03'                                  0131 00172000
*                  S99TXTPP = DDNAPTR;      /* SET PTR TO CONCAT TEXT*/ 00173000
         ST    DDNAPTR,S99TXTPP(,@10)                              0132 00174000
*                  CALL DYNSVC;             /* INVOKE DYN ALLOCATION */ 00175000
         BAL   @14,DYNSVC                                          0133 00176000
*                  IF RCODESV > 0 THEN      /* IF ALLOCATION FAILED  */ 00177000
         L     @10,RCODESV(,AWAPTR)                                0134 00178000
         LTR   @10,@10                                             0134 00179000
         BNP   @RF00134                                            0134 00180000
*                    DO;                    /* THEN                  */ 00181000
*                      RBCODE12 = '1'B;     /* INDICATE ALLOC FAILED */ 00182000
         OI    RBCODE12(AWAPTR),B'10000000'                        0136 00183000
*                      CALL CONCTERR;       /* ISSUE MSG & FREE DS   */ 00184000
         BAL   @14,CONCTERR                                        0137 00185000
*                    END;                                          0138 00186000
*                    END;                                          0139 00187000
@RF00134 DS    0H                                                  0140 00188000
*                END;                                              0140 00189000
@RF00129 DS    0H                                                  0141 00190000
*            END;                                                  0141 00191000
@RF00126 DS    0H                                                  0142 00192000
*        IF RBCODE12 = '1'B THEN       /* IF ERROR OCCURRED          */ 00193000
@RC00091 TM    RBCODE12(AWAPTR),B'10000000'                        0142 00194000
         BNO   @RF00142                                            0142 00195000
*          RETCODE = 12;               /* RETURN CODE OF 12          */ 00196000
         L     @10,REGSAVE(,R13)                                   0143 00197000
         MVC   RETCODE(4,@10),@CF00845                             0143 00198000
*        ELSE                          /* ELSE                       */ 00199000
*          RETCODE = 0;                /* RETURN CODE 0              */ 00200000
         B     @RC00142                                            0144 00201000
@RF00142 L     @10,REGSAVE(,R13)                                   0144 00202000
         SLR   @15,@15                                             0144 00203000
         ST    @15,RETCODE(,@10)                                   0144 00204000
*        RETURN;                                                   0145 00205000
@EL00001 L     @13,4(,@13)                                         0145 00206000
@EF00001 L     @00,@SIZDATD                                        0145 00207000
         LR    @01,@11                                             0145 00208000
         FREEMAIN R,LV=(0),A=(1)                                        00209000
@ER00001 LM    @14,@12,12(@13)                                     0145 00210000
         BR    @14                                                 0145 00211000
*/********************************************************************/ 00212000
*/*                                                                  */ 00213000
*/* SEGMENT NAME -                                                   */ 00214000
*/*      CNCATTXT                                                    */ 00215000
*/*                                                                  */ 00216000
*/* FUNCTION -                                                       */ 00217000
*/*      THIS ROUTINE BUILDS ADDITIONAL TEXT UNITS NEEDED WHEN       */ 00218000
*/*      ALLOCATING DATA SETS TO BE CONCATENATED.                    */ 00219000
*/*                                                                  */ 00220000
*/* OPERATION -                                                      */ 00221000
*/*      BUILD TEXT UNIT TO RETURN DDNAME. BUILD TEXT UNIT TO RETURN */ 00222000
*/*      DSORG.                                                      */ 00223000
*/*                                                                  */ 00224000
*/* INPUT -                                                          */ 00225000
*/*      WORKAREA                                                    */ 00226000
*/*                                                                  */ 00227000
*/* OUTPUT -                                                         */ 00228000
*/*      TEXT UNITS BUILT                                            */ 00229000
*/*                                                                  */ 00230000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00231000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00232000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00233000
*/*                                                                  */ 00234000
*/*        THESE TEXT UNITS HAVE TO BE SET UP HERE BECAUSE GENTRANS  */ 00235000
*/*        CAN ONLY BUILD TEXT UNITS RELATED TO PARAMETERS IN        */ 00236000
*/*        THE PDL.                                                  */ 00237000
*/********************************************************************/ 00238000
*    CNCATTXT: PROC;                                               0146 00239000
         B     @EL00001                                            0146 00240000
CNCATTXT STM   @14,@07,12(@13)                                     0146 00241000
         STM   @09,@12,56(@13)                                     0146 00242000
*        ADDNUM = ADDNUM + 1;          /* INCREMENT TEXT COUNTER     */ 00243000
         L     @10,GTPLPTR(,AWAPTR)                                0147 00244000
         L     @10,GTPLABLK(,@10)                                  0147 00245000
         LA    @09,1                                               0147 00246000
         LH    @02,ADDNUM(,@10)                                    0147 00247000
         ALR   @02,@09                                             0147 00248000
         STH   @02,ADDNUM(,@10)                                    0147 00249000
*        ADLKEY = DALRTDDN;            /* RETURN DDNAME KEY          */ 00250000
         L     @15,TXT(,AWAPTR)                                    0148 00251000
         MVC   ADLKEY(2,@15),@CH00782                              0148 00252000
*        ADLNBR = 1;                   /* NUMBER                     */ 00253000
         STH   @09,ADLNBR(,@15)                                    0149 00254000
*        ADLLEN = 8;                   /* MAX LENGTH                 */ 00255000
         LA    @14,8                                               0150 00256000
         STH   @14,ADLLEN(,@15)                                    0150 00257000
*        ADDTEXT(INC) = TXT;           /* PTR TO TEXT UNIT IN LIST   */ 00258000
         LR    @07,INC                                             0151 00259000
         SLA   @07,2                                               0151 00260000
         ST    @15,@TF00001                                        0151 00261000
         ALR   @07,@10                                             0151 00262000
         MVC   ADDTEXT-4(4,@07),@TF00001                           0151 00263000
*        TXT = TXT + 14;               /* INCREMENT TEXT PTR         */ 00264000
         AL    @15,@CF00463                                        0152 00265000
         ST    @15,TXT(,AWAPTR)                                    0152 00266000
*        INC = INC + 1;                /* INCREMENT ADDR SUBSCRIPT   */ 00267000
         ALR   INC,@09                                             0153 00268000
*        ADDNUM = ADDNUM + 1;          /* INCREMENT TEXT COUNTER     */ 00269000
         ALR   @02,@09                                             0154 00270000
         STH   @02,ADDNUM(,@10)                                    0154 00271000
*        ADLKEY = DALRTORG;            /* RETURN DSORG KEY           */ 00272000
         MVC   ADLKEY(2,@15),@CH00786                              0155 00273000
*        ADLNBR = 1;                   /* NUMBER                     */ 00274000
         STH   @09,ADLNBR(,@15)                                    0156 00275000
*        ADLLEN = 2;                   /* LENGTH                     */ 00276000
         MVC   ADLLEN(2,@15),@CH00080                              0157 00277000
*        ADDTEXT(INC) = TXT;           /* PTR TO TEXT UNIT IN LIST   */ 00278000
         LR    @02,INC                                             0158 00279000
         SLA   @02,2                                               0158 00280000
         ST    @15,@TF00001                                        0158 00281000
         ALR   @10,@02                                             0158 00282000
         MVC   ADDTEXT-4(4,@10),@TF00001                           0158 00283000
*        TXT = TXT + 8;                /* INCREMENT TEXT PTR         */ 00284000
         ALR   @15,@14                                             0159 00285000
         ST    @15,TXT(,AWAPTR)                                    0159 00286000
*        INC = INC + 1;                /* INCREMENT ADDR SUBSCRIPT   */ 00287000
         ALR   INC,@09                                             0160 00288000
*   END CNCATTXT;                                                  0161 00289000
@EL00002 DS    0H                                                  0161 00290000
@EF00002 DS    0H                                                  0161 00291000
@ER00002 LM    @14,@07,12(@13)                                     0161 00292000
         LM    @09,@12,56(@13)                                     0161 00293000
         BR    @14                                                 0161 00294000
*/********************************************************************/ 00295000
*/*                                                                  */ 00296000
*/* SEGMENT NAME -                                                   */ 00297000
*/*      CONCTDSN                                                    */ 00298000
*/*                                                                  */ 00299000
*/* FUNCTION -                                                       */ 00300000
*/*      THIS ROUTINE ALLOCATES A LIST OF DATA SETS TO BE            */ 00301000
*/*      CONCATENATED.                                               */ 00302000
*/*                                                                  */ 00303000
*/* OPERATION -                                                      */ 00304000
*/*      ALLOCATE ONE DATA SET AT A TIME. IF THE ALLOCATION IS NOT   */ 00305000
*/*      SUCCESSFUL, ISSUE AN ERROR MESSAGE AND TERMINATE. IF THE    */ 00306000
*/*      DSORG IS NOT THE SAME FOR ALL THE DATA SETS IN THE LIST,    */ 00307000
*/*      ISSUE AN ERROR MESSAGE AND TERMINATE. IF EITHER OF THE      */ 00308000
*/*      ABOVE ERRORS ARE FOUND, ROUTINE CONCTERR IS INVOKED TO      */ 00309000
*/*      FREE ANY PREVIOUSLY ALLOCATED DATA SETS.                    */ 00310000
*/*                                                                  */ 00311000
*/* INPUT -                                                          */ 00312000
*/*      PTR TO DSNAME, MEMBER AND PASSWORD TEXT UNITS               */ 00313000
*/*                                                                  */ 00314000
*/* OUTPUT -                                                         */ 00315000
*/*      RBCODE12 = 0 - ALLOCATION OF LIST SUCCESSFUL                */ 00316000
*/*                 1 - ERROR IN ALLOCATION                          */ 00317000
*/*                                                                  */ 00318000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00319000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00320000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00321000
*/********************************************************************/ 00322000
*    CONCTDSN: PROC;                                               0162 00323000
CONCTDSN STM   @14,@07,@SA00003                                    0162 00324000
         STM   @09,@12,@SA00003+40                                 0162 00325000
*        DPTR2 = ADDR(DALEN);               /* PTR TO DSN LEN & PARM */ 00326000
         L     @15,TUDSN(,GTPLOUT1)                                0163 00327000
         LA    DPTR2,DALEN(,@15)                                   0163 00328000
*        LISTNMBR = DSNCTR;                 /* SAVE DSN NUMBER       */ 00329000
         LH    LISTNMBR,DSNCTR(,AWAPTR)                            0164 00330000
*        DANUM = 1;                         /* SET DSN NUMBER TO 1   */ 00331000
         MVC   DANUM(2,@15),@CH00033                               0165 00332000
*        IF TUMBR ^= 0 THEN                 /* IF MEMBER UNIT BUILT  */ 00333000
         SLR   @15,@15                                             0166 00334000
         L     @14,TUMBR(,GTPLOUT1)                                0166 00335000
         CR    @14,@15                                             0166 00336000
         BE    @RF00166                                            0166 00337000
*         DO;                               /* THEN                  */ 00338000
*           MPTR2 = ADDR(MBLEN);            /* PTR TO MBR LEN & PARM */ 00339000
         LA    MPTR2,MBLEN(,@14)                                   0168 00340000
*           SAVMBLEN = MEMLEN;              /* SAVE MEMBER LENGTH    */ 00341000
         LH    @01,MEMLEN(,MPTR2)                                  0169 00342000
         LR    SAVMBLEN,@01                                        0169 00343000
*           IF MEMLEN = 0 THEN              /* IF MBR NOT ENTERED,   */ 00344000
         CR    @01,@15                                             0170 00345000
         BNE   @RF00170                                            0170 00346000
*             DO;                           /* THEN,                 */ 00347000
*               MBKEY = 0;                  /* SET KEY TO 0          */ 00348000
         STH   @15,MBKEY(,@14)                                     0172 00349000
*               MBNUM = 0;                  /* SET NUMBER TO 0       */ 00350000
         STH   @15,MBNUM(,@14)                                     0173 00351000
*             END;                                                 0174 00352000
*           ELSE                            /* ELSE,                 */ 00353000
*             MBNUM = 1;                    /* SET MBR NUMBER TO 1   */ 00354000
         B     @RC00170                                            0175 00355000
@RF00170 L     @01,TUMBR(,GTPLOUT1)                                0175 00356000
         MVC   MBNUM(2,@01),@CH00033                               0175 00357000
*         END;                                                     0176 00358000
@RC00170 DS    0H                                                  0177 00359000
*        IF TUPSWD ^= 0 THEN                /* IF PSWORD UNIT BUILT  */ 00360000
@RF00166 SLR   @15,@15                                             0177 00361000
         L     @14,TUPSWD(,GTPLOUT1)                               0177 00362000
         CR    @14,@15                                             0177 00363000
         BE    @RF00177                                            0177 00364000
*         DO;                               /* THEN                  */ 00365000
*           PPTR2 = ADDR(PWLEN);            /* PTR TO PSW LEN & PARM */ 00366000
         LA    PPTR2,PWLEN(,@14)                                   0179 00367000
*           SAVPWLEN = PSWLEN;              /* SAVE PASSWORD LENGTH  */ 00368000
         LH    @01,PSWLEN(,PPTR2)                                  0180 00369000
         STH   @01,SAVPWLEN                                        0180 00370000
*           IF PSWLEN = 0 THEN              /* IF PSW NOT ENTERED,   */ 00371000
         CR    @01,@15                                             0181 00372000
         BNE   @RF00181                                            0181 00373000
*             DO;                           /* THEN                  */ 00374000
*               PWKEY = 0;                  /* SET KEY TO 0          */ 00375000
         STH   @15,PWKEY(,@14)                                     0183 00376000
*               PWNUM = 0;                  /* SET NUMBER TO 0       */ 00377000
         STH   @15,PWNUM(,@14)                                     0184 00378000
*             END;                                                 0185 00379000
*           ELSE                            /* ELSE,                 */ 00380000
*             PWNUM = 1;                    /* SET PSW NUMBER TO 1   */ 00381000
         B     @RC00181                                            0186 00382000
@RF00181 L     @01,TUPSWD(,GTPLOUT1)                               0186 00383000
         MVC   PWNUM(2,@01),@CH00033                               0186 00384000
*         END;                                                     0187 00385000
@RC00181 DS    0H                                                  0188 00386000
*        CNCTFLG1 = '00'X;                  /* SET FLAGS TO 0        */ 00387000
@RF00177 MVI   CNCTFLG1,X'00'                                      0188 00388000
*        S99NOCNV = '1'B;                   /* DONT USE EXISTING   0189 00389000
*                                              ALLOCATIONS           */ 00390000
         L     @01,PTRS99RB(,AWAPTR)                               0189 00391000
         OI    S99NOCNV(@01),B'01000000'                           0189 00392000
*        DO WHILE (SEARCH = '0'B);          /* ALLOCATE DS LIST      */ 00393000
         B     @DE00190                                            0190 00394000
@DL00190 DS    0H                                                  0191 00395000
*          CALL DYNSVC;                     /* INVOKE DYN ALLOCATION */ 00396000
         BAL   @14,DYNSVC                                          0191 00397000
*          IF LISTNMBR = DSNCTR THEN        /* IF 1ST DS IN LIST,    */ 00398000
         CH    LISTNMBR,DSNCTR(,AWAPTR)                            0192 00399000
         BNE   @RF00192                                            0192 00400000
*            CALL FIRSTCC;                  /* PROCESS               */ 00401000
         BAL   @14,FIRSTCC                                         0193 00402000
*          ELSE                             /* IF NOT 1ST DS,        */ 00403000
*            CALL OTHERCC;                  /* PROCESS               */ 00404000
         B     @RC00192                                            0194 00405000
@RF00192 BAL   @14,OTHERCC                                         0194 00406000
*          IF RBCODE12 = '0'B THEN          /* IF NO ERROR FOUND     */ 00407000
@RC00192 TM    RBCODE12(AWAPTR),B'10000000'                        0195 00408000
         BNZ   @RF00195                                            0195 00409000
*            DO;                            /* WHILE PROCESSING      */ 00410000
*              LISTNMBR = LISTNMBR-1;       /* DECREMENT COUNTER     */ 00411000
         BCTR  LISTNMBR,0                                          0197 00412000
*              IF LISTNMBR = 0 THEN         /* IF COUNTER 0          */ 00413000
         LTR   LISTNMBR,LISTNMBR                                   0198 00414000
         BNZ   @RF00198                                            0198 00415000
*                SEARCH = '1'B;             /* EXIT FROM DO-WHILE    */ 00416000
         OI    SEARCH,B'10000000'                                  0199 00417000
*              ELSE                         /* OTHERWISE             */ 00418000
*                DO;                        /* PROCESS NEXT DSN      */ 00419000
         B     @RC00198                                            0200 00420000
@RF00198 DS    0H                                                  0201 00421000
*                  DPTR2 = DPTR2+2+DALEN;   /* UPDATE DSN PTR,       */ 00422000
         LA    @15,2                                               0201 00423000
         LR    @14,DPTR2                                           0201 00424000
         ALR   @14,@15                                             0201 00425000
         L     @01,TUDSN(,GTPLOUT1)                                0201 00426000
         AH    @14,DALEN(,@01)                                     0201 00427000
         LR    DPTR2,@14                                           0201 00428000
*                  DALEN = DATALEN;         /* MOVE DS LEN & PARM    */ 00429000
         LH    @00,DATALEN(,DPTR2)                                 0202 00430000
         STH   @00,DALEN(,@01)                                     0202 00431000
*                  DAPARM(1:DALEN)=DATAVAL(1:DALEN);               0203 00432000
         BCTR  @00,0                                               0203 00433000
         LR    @14,@00                                             0203 00434000
         EX    @14,@SM00888                                        0203 00435000
*                  IF TUMBR ^= 0 THEN       /* IF MEMBER UNIT BUILT  */ 00436000
         SLR   @14,@14                                             0204 00437000
         L     @01,TUMBR(,GTPLOUT1)                                0204 00438000
         CR    @01,@14                                             0204 00439000
         BE    @RF00204                                            0204 00440000
*                   DO;                     /* THEN                  */ 00441000
*                  MPTR2 = MPTR2+2+SAVMBLEN;/* PTR TO MBR LEN & PARM */ 00442000
         ALR   @15,MPTR2                                           0206 00443000
         ALR   @15,SAVMBLEN                                        0206 00444000
         LR    MPTR2,@15                                           0206 00445000
*                  SAVMBLEN = MEMLEN;       /* SAVE MEMBER LENGTH    */ 00446000
         LH    @15,MEMLEN(,MPTR2)                                  0207 00447000
         LR    SAVMBLEN,@15                                        0207 00448000
*                  IF MEMLEN = 0 THEN       /* IF MBR NOT ENTERED,   */ 00449000
         CR    @15,@14                                             0208 00450000
         BNE   @RF00208                                            0208 00451000
*                    DO;                    /* THEN                  */ 00452000
*                    MBKEY = 0;             /* SET KEY TO 0          */ 00453000
         STH   @14,MBKEY(,@01)                                     0210 00454000
*                    MBNUM = 0;             /* SET NUMBER TO 0       */ 00455000
         STH   @14,MBNUM(,@01)                                     0211 00456000
*                    END;                                          0212 00457000
*                  ELSE                                            0213 00458000
*                    DO;                    /* OTHERWISE             */ 00459000
         B     @RC00208                                            0213 00460000
@RF00208 DS    0H                                                  0214 00461000
*                      MBKEY = DALMEMBR;    /* SET MEMBER KEY        */ 00462000
         L     @15,TUMBR(,GTPLOUT1)                                0214 00463000
         MVC   MBKEY(2,@15),@CH00618                               0214 00464000
*                      MBNUM = 1;           /* SET MBR NUMBER        */ 00465000
         MVC   MBNUM(2,@15),@CH00033                               0215 00466000
*                      MBLEN = MEMLEN;      /* MOVE MBR LEN & PARM   */ 00467000
         LH    @14,MEMLEN(,MPTR2)                                  0216 00468000
         STH   @14,MBLEN(,@15)                                     0216 00469000
*                      MBPARM(1:MBLEN)=MBRVAL(1:MBLEN);            0217 00470000
         BCTR  @14,0                                               0217 00471000
         EX    @14,@SM00890                                        0217 00472000
*                    END;                                          0218 00473000
*                   END;                                           0219 00474000
@RC00208 DS    0H                                                  0220 00475000
*                  IF TUPSWD ^= 0 THEN      /* IF PSWORD UNIT BUILT  */ 00476000
@RF00204 SLR   @15,@15                                             0220 00477000
         L     @14,TUPSWD(,GTPLOUT1)                               0220 00478000
         CR    @14,@15                                             0220 00479000
         BE    @RF00220                                            0220 00480000
*                   DO;                     /* THEN                  */ 00481000
*                  PPTR2 = PPTR2+2+SAVPWLEN;/* PTR TO PSW LEN & PARM */ 00482000
         LA    @01,2                                               0222 00483000
         ALR   @01,PPTR2                                           0222 00484000
         AH    @01,SAVPWLEN                                        0222 00485000
         LR    PPTR2,@01                                           0222 00486000
*                  SAVPWLEN = PSWLEN;       /* SAVE PASSWORD LENGTH  */ 00487000
         LH    @01,PSWLEN(,PPTR2)                                  0223 00488000
         STH   @01,SAVPWLEN                                        0223 00489000
*                  IF PSWLEN = 0 THEN       /* IF PSW NOT ENTERED,   */ 00490000
         CR    @01,@15                                             0224 00491000
         BNE   @RF00224                                            0224 00492000
*                    DO;                    /* THEN                  */ 00493000
*                    PWKEY = 0;             /* SET KEY TO 0          */ 00494000
         STH   @15,PWKEY(,@14)                                     0226 00495000
*                    PWNUM = 0;             /* SET NUMBER TO 0       */ 00496000
         STH   @15,PWNUM(,@14)                                     0227 00497000
*                    END;                                          0228 00498000
*                  ELSE                                            0229 00499000
*                    DO;                    /* OTHERWISE             */ 00500000
         B     @RC00224                                            0229 00501000
@RF00224 DS    0H                                                  0230 00502000
*                      PWKEY = DALPASSW;    /* SET PASSWORD KEY      */ 00503000
         L     @15,TUPSWD(,GTPLOUT1)                               0230 00504000
         MVC   PWKEY(2,@15),@CH00772                               0230 00505000
*                      PWNUM = 1;           /* SET PASSWORD NUMBER   */ 00506000
         MVC   PWNUM(2,@15),@CH00033                               0231 00507000
*                      PWLEN = PSWLEN;      /* MOVE PSW LEN & PARM   */ 00508000
         LH    @14,PSWLEN(,PPTR2)                                  0232 00509000
         STH   @14,PWLEN(,@15)                                     0232 00510000
*                      PWPARM(1:PWLEN)=PSWVAL(1:PWLEN);            0233 00511000
         BCTR  @14,0                                               0233 00512000
         EX    @14,@SM00892                                        0233 00513000
*                    END;                                          0234 00514000
*                   END;                                           0235 00515000
*                END;                                              0236 00516000
*            END;                                                  0237 00517000
*          ELSE                             /* IF ERROR IN PROCESSING*/ 00518000
*            SEARCH = '1'B;                 /* EXIT DO-WHILE         */ 00519000
         B     @RC00195                                            0238 00520000
@RF00195 OI    SEARCH,B'10000000'                                  0238 00521000
*        END;                               /* END DO-WHILE          */ 00522000
@RC00195 DS    0H                                                  0239 00523000
@DE00190 TM    SEARCH,B'10000000'                                  0239 00524000
         BZ    @DL00190                                            0239 00525000
*        SEARCH = '0'B;                     /* RE-SET SWITCH         */ 00526000
         NI    SEARCH,B'01111111'                                  0240 00527000
*        S99NOCNV = '0'B;                   /* TURN OFF NO CONVERT   */ 00528000
         L     @10,PTRS99RB(,AWAPTR)                               0241 00529000
         NI    S99NOCNV(@10),B'10111111'                           0241 00530000
*   END CONCTDSN;                                                  0242 00531000
@EL00003 DS    0H                                                  0242 00532000
@EF00003 DS    0H                                                  0242 00533000
@ER00003 LM    @14,@07,@SA00003                                    0242 00534000
         LM    @09,@12,@SA00003+40                                 0242 00535000
         BR    @14                                                 0242 00536000
*/********************************************************************/ 00537000
*/*                                                                  */ 00538000
*/* SEGMENT NAME -                                                   */ 00539000
*/*      CONCTERR                                                    */ 00540000
*/*                                                                  */ 00541000
*/* FUNCTION -                                                       */ 00542000
*/*      THIS ROUTINE FREES ANY DATA SETS THAT HAVE BEEN ALLOCATED   */ 00543000
*/*      PRIOR TO FINDING AN ERROR IN THE CONCATENATION REQUEST.     */ 00544000
*/*                                                                  */ 00545000
*/* OPERATION -                                                      */ 00546000
*/*      EACH DDNAME IS FREED. IF AN ERROR OCCURS WHILE FREEING ANY  */ 00547000
*/*      OF THE DATA SETS, ISSUE AN ERROR MESSAGE AND CONTINUE.      */ 00548000
*/*      WHEN ALL THE DATA SETS HAVE BEEN FREED, ISSUE THE           */ 00549000
*/*      APPROPRIATE ERROR MSG.                                      */ 00550000
*/*                                                                  */ 00551000
*/* INPUT -                                                          */ 00552000
*/*      LIST OF DDNAMES                                             */ 00553000
*/*                                                                  */ 00554000
*/* OUTPUT -                                                         */ 00555000
*/*      LIST OF DDNAMES FREED                                       */ 00556000
*/*                                                                  */ 00557000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00558000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00559000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00560000
*/********************************************************************/ 00561000
*    CONCTERR: PROC;                                               0243 00562000
CONCTERR STM   @14,@04,@SA00004                                    0243 00563000
         STM   @06,@12,@SA00004+28                                 0243 00564000
*        DDLST = ADDR(DDNMLEN);        /* PTR TO DD LEN & PARM       */ 00565000
         LA    DDLST,DDNMLEN(,DDNAPTR)                             0244 00566000
*        IF ALLOCERR = '1'B THEN       /* IF ALLOCATION ERROR        */ 00567000
         TM    ALLOCERR,B'01000000'                                0245 00568000
         BNO   @RF00245                                            0245 00569000
*          DSFREED = DSNCTR - LISTNMBR;/* GET NUMBER TO FREE         */ 00570000
         LH    DSFREED,DSNCTR(,AWAPTR)                             0246 00571000
         SLR   DSFREED,LISTNMBR                                    0246 00572000
*        ELSE                          /* IF OTHER ERROR,            */ 00573000
*          DSFREED = DSNCTR - LISTNMBR +1;   /* ADD 1 MORE           */ 00574000
         B     @RC00245                                            0247 00575000
@RF00245 LH    DSFREED,DSNCTR(,AWAPTR)                             0247 00576000
         SLR   DSFREED,LISTNMBR                                    0247 00577000
         AL    DSFREED,@CF00033                                    0247 00578000
*        PERMCTKY = DUNUNALC;          /* SET UNALLOC OPTION KEY     */ 00579000
@RC00245 MVC   PERMCTKY(2,DDNAPTR),@CH00626                        0248 00580000
*        DDNMPTR = ADDR(DDFREEBF);     /* PTR TO TEXT TO BE BUILT    */ 00581000
         LA    @10,DDFREEBF                                        0249 00582000
         ST    @10,DDNMPTR(,DDNAPTR)                               0249 00583000
*        DDFKEY = DUNDDNAM;            /* SET KEY IN TEXT UNIT       */ 00584000
         MVC   DDFKEY(2),@CH00614                                  0250 00585000
*        DDFNUM = 1;                   /* SET NUMBER TO 1            */ 00586000
         MVC   DDFNUM(2),@CH00033                                  0251 00587000
*        DDFLEN = DDNMLNGH;            /* MOVE DDNAME LENGTH         */ 00588000
         LH    @10,DDNMLNGH(,DDLST)                                0252 00589000
         STH   @10,DDFLEN                                          0252 00590000
*        DDFVAL(1:DDFLEN)=DDNMPARM(1:DDFLEN);  /* MOVE DDNAME        */ 00591000
         BCTR  @10,0                                               0253 00592000
         EX    @10,@SM00896                                        0253 00593000
*        S99VERB = S99VRBUN;           /* SET UNALLOC VERB CODE      */ 00594000
         L     @10,PTRS99RB(,AWAPTR)                               0254 00595000
         MVI   S99VERB(@10),X'02'                                  0254 00596000
*        S99TXTPP = DDNAPTR;           /* PTR TO DDNAMES             */ 00597000
         ST    DDNAPTR,S99TXTPP(,@10)                              0255 00598000
*        S99NOCNV = '0'B;              /* TURN OFF FLAGS             */ 00599000
         NI    S99NOCNV(@10),B'10111111'                           0256 00600000
*        DDNMEND = '1'B;               /* END ADDRESS LIST           */ 00601000
         OI    DDNMEND(DDNAPTR),B'10000000'                        0257 00602000
*        DO WHILE (SEARCH='0'B);       /* UNALLOCATE DDNAMES         */ 00603000
         B     @DE00258                                            0258 00604000
@DL00258 DS    0H                                                  0259 00605000
*          CALL DYNSVC;                /* INVOKE DYN ALLOCATION      */ 00606000
         BAL   @14,DYNSVC                                          0259 00607000
*          IF RCODESV > 0 THEN         /* IF UNALLOCATION FAILED,    */ 00608000
         L     @10,RCODESV(,AWAPTR)                                0260 00609000
         LTR   @10,@10                                             0260 00610000
         BNP   @RF00260                                            0260 00611000
*            DO;                                                   0261 00612000
*              ENTRYCD = 1;            /* SET ENTRY CODE             */ 00613000
         MVC   ENTRYCD(2,AWAPTR),@CH00033                          0262 00614000
*              R1 = AWAPTR;            /* WORKAREA PTR IN REG 1      */ 00615000
         LR    R1,AWAPTR                                           0263 00616000
*              CALL IKJEFD35;          /* ISSUE ERROR MESSAGE        */ 00617000
         L     @15,@CV00340                                        0264 00618000
         BALR  @14,@15                                             0264 00619000
*            END;                                                  0265 00620000
*          DSFREED = DSFREED-1;        /* DECREMENT CTR BY 1         */ 00621000
@RF00260 BCTR  DSFREED,0                                           0266 00622000
*          IF DSFREED = 0 THEN         /* IF CTR IS 0 (END OF LIST)  */ 00623000
         LTR   DSFREED,DSFREED                                     0267 00624000
         BNZ   @RF00267                                            0267 00625000
*            SEARCH = '1'B;            /* EXIT FROM DO-WHILE         */ 00626000
         OI    SEARCH,B'10000000'                                  0268 00627000
*          ELSE                                                    0269 00628000
*            DO;                       /* OTHERWISE, UPDATE PTR TO   */ 00629000
         B     @RC00267                                            0269 00630000
@RF00267 DS    0H                                                  0270 00631000
*              DDLST = DDLST + 2 + DDNMLNGH; /* DD LEN AND PARM      */ 00632000
         LA    @10,2                                               0270 00633000
         ALR   @10,DDLST                                           0270 00634000
         AH    @10,DDNMLNGH(,DDLST)                                0270 00635000
         LR    DDLST,@10                                           0270 00636000
*              DDFLEN = DDNMLNGH;     /* MOVE LEN AND PARM          */  00637000
         LH    @10,DDNMLNGH(,DDLST)                                0271 00638000
         STH   @10,DDFLEN                                          0271 00639000
*              DDFVAL(1:DDFLEN)=DDNMPARM(1:DDFLEN);                0272 00640000
         BCTR  @10,0                                               0272 00641000
         EX    @10,@SM00896                                        0272 00642000
*            END;                                                  0273 00643000
*        END;                          /* END DO-WHILE               */ 00644000
@RC00267 DS    0H                                                  0274 00645000
@DE00258 TM    SEARCH,B'10000000'                                  0274 00646000
         BZ    @DL00258                                            0274 00647000
*        SEARCH = '0'B;                /* RESET SWITCH               */ 00648000
         NI    SEARCH,B'01111111'                                  0275 00649000
*        CALL CCERRMSG;                /* ISSUE APPROPRIATE MSG      */ 00650000
         BAL   @14,CCERRMSG                                        0276 00651000
*   END CONCTERR;                                                  0277 00652000
@EL00004 DS    0H                                                  0277 00653000
@EF00004 DS    0H                                                  0277 00654000
@ER00004 LM    @14,@04,@SA00004                                    0277 00655000
         LM    @06,@12,@SA00004+28                                 0277 00656000
         BR    @14                                                 0277 00657000
*/********************************************************************/ 00658000
*/*                                                                  */ 00659000
*/* SEGMENT NAME -                                                   */ 00660000
*/*      FIRSTCC                                                     */ 00661000
*/*                                                                  */ 00662000
*/* FUNCTION -                                                       */ 00663000
*/*      IF DYNAMIC ALLOCATION FAILED DUE TO FILE IN USE, PROMPT     */ 00664000
*/*      THE USER FOR THE OPTION. IF USER REQUESTS TO TERMINATE,     */ 00665000
*/*      ISSUE MESSAGE AND TERMINATE. IF MORE THAN 16 PARTITIONED    */ 00666000
*/*      DATA SETS SPECIFIED, ISSUE ERROR MESSAGE AND TERMINATE.     */ 00667000
*/*      ELSE, SAVE THE DSORG (FOR LATER COMPARISONS) AND THE        */ 00668000
*/*      DDNAME.                                                     */ 00669000
*/*                                                                  */ 00670000
*/* INPUT -                                                          */ 00671000
*/*      WORKAREA                                                    */ 00672000
*/*                                                                  */ 00673000
*/* OUTPUT -                                                         */ 00674000
*/*      RBCODE12 = 0 - CONTINUE WITH NEXT DSNAME                    */ 00675000
*/*                 1 - ERROR FOUND, TERMINATE                       */ 00676000
*/*                                                                  */ 00677000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00678000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00679000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00680000
*/********************************************************************/ 00681000
*    FIRSTCC: PROC;                                                0278 00682000
FIRSTCC  STM   @14,@04,@SA00005                                    0278 00683000
         STM   @06,@12,@SA00005+28                                 0278 00684000
*        IF RCODESV > 0 & S99ERROR = '0410'X  THEN  /* IF ALLOCATION    00685000
*                                                    FAILED  @YM06354*/ 00686000
         L     @10,RCODESV(,AWAPTR)                                0279 00687000
         LTR   @10,@10                                             0279 00688000
         BNP   @RF00279                                            0279 00689000
         L     @09,PTRS99RB(,AWAPTR)                               0279 00690000
         CLC   S99ERROR(2,@09),@CB00860                            0279 00691000
         BNE   @RF00279                                            0279 00692000
*          DO;                         /* & FILE IN USE THEN @YM06354*/ 00693000
*            SAVERC = RCODESV;         /* SAVE DYN RC        @Z30LPKH*/ 00694000
         LR    SAVERC,@10                                          0281 00695000
*            R1 = AWAPTR;              /* WORKAREA PTR IN REG 1      */ 00696000
         LR    R1,AWAPTR                                           0282 00697000
*            CALL IKJEFD36;            /* PROMPT FOR FILE OPTION     */ 00698000
         L     @15,@CV00341                                        0283 00699000
         BALR  @14,@15                                             0283 00700000
*            RCODESV = SAVERC;         /* RESTORE DYN RC     @Z30LPKH*/ 00701000
         ST    SAVERC,RCODESV(,AWAPTR)                             0284 00702000
*            IF TERMOPT = '1'B THEN    /* IF OPTION TO TERMINATE     */ 00703000
         TM    TERMOPT(AWAPTR),B'00001000'                         0285 00704000
         BNO   @RF00285                                            0285 00705000
*            DO;                       /* THEN                       */ 00706000
*            TERMOPT = '0'B;           /* TURN OFF INDICATOR         */ 00707000
         NI    TERMOPT(AWAPTR),B'11110111'                         0287 00708000
*            ALLOCERR = '1'B;          /* INDICATE ERROR TYPE        */ 00709000
         OI    ALLOCERR,B'01000000'                                0288 00710000
*            CALL CCERRMSG;            /* ISSUE ERROR MESSAGE        */ 00711000
         BAL   @14,CCERRMSG                                        0289 00712000
*            END;                                                  0290 00713000
*            ELSE                                 /*         @YM06354*/ 00714000
*              FREEFL = '1'B;                     /*         @YM06354*/ 00715000
         B     @RC00285                                            0291 00716000
@RF00285 OI    FREEFL,B'00001000'                                  0291 00717000
*          END;                                   /*         @YM06354*/ 00718000
*        ELSE                          /*                    @OZ02964*/ 00719000
*            IF RCODESV > 0 & S99ERROR ^= '0410'X THEN  /*   @YM06354*/ 00720000
         B     @RC00279                                            0293 00721000
@RF00279 L     @10,RCODESV(,AWAPTR)                                0293 00722000
         LTR   @10,@10                                             0293 00723000
         BNP   @RF00293                                            0293 00724000
         L     @10,PTRS99RB(,AWAPTR)                               0293 00725000
         CLC   S99ERROR(2,@10),@CB00860                            0293 00726000
         BE    @RF00293                                            0293 00727000
*              DO;                                                 0294 00728000
*                ALLOCERR = '1'B;      /* INDICATE ERROR TYPE        */ 00729000
         OI    ALLOCERR,B'01000000'                                0295 00730000
*                ENTRYCD = 1;          /* SET ENTRY CODE             */ 00731000
         MVC   ENTRYCD(2,AWAPTR),@CH00033                          0296 00732000
*                R1 = AWAPTR;          /* WORKAREA IN REG 1          */ 00733000
         LR    R1,AWAPTR                                           0297 00734000
*                CALL IKJEFD35;        /* ISSUE DYNALLOC ERROR MSG   */ 00735000
         L     @15,@CV00340                                        0298 00736000
         BALR  @14,@15                                             0298 00737000
*                CALL CCERRMSG;        /* ISSUE ERROR MESSAGE        */ 00738000
         BAL   @14,CCERRMSG                                        0299 00739000
*              END;                                                0300 00740000
*        IF FREEFL = '1'B | RCODESV = 0 THEN /* IF ALLOCATION      0301 00741000
*                                                 SUCCESSFUL @YM06354*/ 00742000
@RF00293 DS    0H                                                  0301 00743000
@RC00279 TM    FREEFL,B'00001000'                                  0301 00744000
         BO    @RT00301                                            0301 00745000
         L     @10,RCODESV(,AWAPTR)                                0301 00746000
         LTR   @10,@10                                             0301 00747000
         BNZ   @RF00301                                            0301 00748000
@RT00301 DS    0H                                                  0302 00749000
*          DO;                         /* THEN                       */ 00750000
*            FILEKY = 0;               /* SET FILE KEY TO 0          */ 00751000
         SLR   @10,@10                                             0303 00752000
         L     @09,TUFILE(,GTPLOUT1)                               0303 00753000
         STH   @10,FILEKY(,@09)                                    0303 00754000
*            FILENUM = 0;                                          0304 00755000
         STH   @10,FILENUM(,@09)                                   0304 00756000
*            DDNMLNGH = RTDDNLEN;      /* SAVE DDNAME RETURNED       */ 00757000
         L     @10,TURTDDN(,GTPLOUT1)                              0305 00758000
         LH    @09,RTDDNLEN(,@10)                                  0305 00759000
         STH   @09,DDNMLNGH(,DDLST)                                0305 00760000
*            DDNMPARM(1:RTDDNLEN) = RTDDNAME(1:RTDDNLEN);          0306 00761000
         LR    @07,@09                                             0306 00762000
         BCTR  @07,0                                               0306 00763000
         EX    @07,@SM00900                                        0306 00764000
*            DDLST = DDLST + 2 + RTDDNLEN;                         0307 00765000
         LA    @07,2                                               0307 00766000
         ALR   @07,DDLST                                           0307 00767000
         ALR   @07,@09                                             0307 00768000
         LR    DDLST,@07                                           0307 00769000
*            RTDDNLEN = 8;             /* SET DDNAME LENGTH TO 8     */ 00770000
         MVC   RTDDNLEN(2,@10),@CH00096                            0308 00771000
*                                      /* IF DSORG PARTITIONED AND 0309 00772000
*                                         OVER 16 DSNAMES GIVEN,     */ 00773000
*            IF DSNCTR > 16 & PARTND = '1'B THEN                   0309 00774000
         LH    @10,DSNCTR(,AWAPTR)                                 0309 00775000
         C     @10,@CF00613                                        0309 00776000
         BNH   @RF00309                                            0309 00777000
         L     @10,TURTDSO(,GTPLOUT1)                              0309 00778000
         TM    PARTND(@10),B'00000010'                             0309 00779000
         BNO   @RF00309                                            0309 00780000
*              DO;                     /* THEN                       */ 00781000
*                MAXERR = '1'B;        /* INDICATE ERROR TYPE        */ 00782000
         OI    MAXERR,B'00100000'                                  0311 00783000
*                CALL CONCTERR;        /* ISSUE ERROR MESSAGE        */ 00784000
         BAL   @14,CONCTERR                                        0312 00785000
*              END;                                                0313 00786000
*            ELSE                                                  0314 00787000
*              DO;                                                 0314 00788000
         B     @RC00309                                            0314 00789000
@RF00309 DS    0H                                                  0315 00790000
*                IF SEQUEN = '1'B THEN /* IF SEQUENTIAL DSORG        */ 00791000
         L     @10,TURTDSO(,GTPLOUT1)                              0315 00792000
         TM    SEQUEN(@10),B'01000000'                             0315 00793000
         BNO   @RF00315                                            0315 00794000
*                  DSORGSQ = '1'B;     /* INDICATE SO                */ 00795000
         OI    DSORGSQ,B'01000000'                                 0316 00796000
*                ELSE                                              0317 00797000
*                  IF PARTND = '1'B THEN   /* IF PARTITIONED DSORG   */ 00798000
         B     @RC00315                                            0317 00799000
@RF00315 L     @10,TURTDSO(,GTPLOUT1)                              0317 00800000
         TM    PARTND(@10),B'00000010'                             0317 00801000
         BNO   @RF00317                                            0317 00802000
*                    IF MBNUM = 1 THEN     /* WITH MEMB SPEC @ZA04568*/ 00803000
         L     @10,TUMBR(,GTPLOUT1)                                0318 00804000
         CLC   MBNUM(2,@10),@CH00033                               0318 00805000
         BNE   @RF00318                                            0318 00806000
*                      DSORGSQ = '1'B;     /* INDICATE SEQ   @ZA04568*/ 00807000
         OI    DSORGSQ,B'01000000'                                 0319 00808000
*                    ELSE                  /* DSORG. MEM NOT @ZA04568*/ 00809000
*                      DSORGPR = '1'B;     /* SPEC DSORD IS  @ZA04568*/ 00810000
         B     @RC00318                                            0320 00811000
@RF00318 OI    DSORGPR,B'00100000'                                 0320 00812000
*                                          /* PARTITIONED    @ZA04568*/ 00813000
*                  ELSE                                            0321 00814000
*                    IF VSAM = '1'B THEN   /* IF VSAM DATA SET       */ 00815000
         B     @RC00317                                            0321 00816000
@RF00317 L     @10,TURTDSO(,GTPLOUT1)                              0321 00817000
         TM    VSAM(@10),B'00010000'                               0321 00818000
         BNO   @RF00321                                            0321 00819000
*                      DSORGVM = '1'B;     /* INDICATE SO            */ 00820000
         OI    DSORGVM,B'00010000'                                 0322 00821000
*                    ELSE                                          0323 00822000
*                      DO;                 /* IF NEITHER OF ABOVE    */ 00823000
         B     @RC00321                                            0323 00824000
@RF00321 DS    0H                                                  0324 00825000
*                        INVORG = '1'B;    /* INDICATE ERROR TYPE    */ 00826000
         OI    INVORG,B'00001000'                                  0324 00827000
*                        CALL CONCTERR;    /* ISSUE ERROR MESSAGE    */ 00828000
         BAL   @14,CONCTERR                                        0325 00829000
*                      END;                                        0326 00830000
*              END;                                                0327 00831000
*          END;                                                    0328 00832000
*    END FIRSTCC;                                                  0329 00833000
@EL00005 DS    0H                                                  0329 00834000
@EF00005 DS    0H                                                  0329 00835000
@ER00005 LM    @14,@04,@SA00005                                    0329 00836000
         LM    @06,@12,@SA00005+28                                 0329 00837000
         BR    @14                                                 0329 00838000
*/********************************************************************/ 00839000
*/*                                                                  */ 00840000
*/* SEGMENT NAME -                                                   */ 00841000
*/*      OTHERCC                                                     */ 00842000
*/*                                                                  */ 00843000
*/* FUNCTION -                                                       */ 00844000
*/*      THIS ROUTINE PROCESSES DATA SETS IN THE LIST OTHER THAN     */ 00845000
*/*      THE FIRST DATA SET.                                         */ 00846000
*/*                                                                  */ 00847000
*/* OPERATION -                                                      */ 00848000
*/*      IF DYNAMIC ALLOCATION FAILED, ISSUE ERROR MESSAGE AND       */ 00849000
*/*      TERMINATE. IF THE DATA SET ORGANIZATION IS NOT THE SAME     */ 00850000
*/*      AS THAT OF THE FIRST DATA SET, ISSUE AN ERROR MESSAGE AND   */ 00851000
*/*      TERMINATE. SAVE THE DDNAME RETURNED BY DYNAMIC ALLOCATION   */ 00852000
*/*      FOR THIS DATA SET.                                          */ 00853000
*/*                                                                  */ 00854000
*/* INPUT -                                                          */ 00855000
*/*      DATA SET ORGANIZATION                                       */ 00856000
*/*      DDNAME                                                      */ 00857000
*/*                                                                  */ 00858000
*/* OUTPUT -                                                         */ 00859000
*/*      RBCODE12 = 0 - CONTINUE WITH NEXT DSNAME                    */ 00860000
*/*                 1 - ERROR FOUND, TERMINATE                       */ 00861000
*/*                                                                  */ 00862000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00863000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00864000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00865000
*/********************************************************************/ 00866000
*    OTHERCC: PROC;                                                0330 00867000
OTHERCC  STM   @14,@04,@SA00006                                    0330 00868000
         STM   @06,@12,@SA00006+28                                 0330 00869000
*        IF RCODESV > 0 THEN           /* IF ALLOCATION FAILED,      */ 00870000
         L     @10,RCODESV(,AWAPTR)                                0331 00871000
         LTR   @10,@10                                             0331 00872000
         BNP   @RF00331                                            0331 00873000
*          DO;                         /* THEN                       */ 00874000
*            ALLOCERR = '1'B;          /* INDICATE ERROR TYPE        */ 00875000
         OI    ALLOCERR,B'01000000'                                0333 00876000
*            ENTRYCD = 1;              /* SET ENTRY CODE             */ 00877000
         MVC   ENTRYCD(2,AWAPTR),@CH00033                          0334 00878000
*            R1 = AWAPTR;              /* WORKAREA IN REG 1          */ 00879000
         LR    R1,AWAPTR                                           0335 00880000
*            CALL IKJEFD35;            /* ISSUE DYNALLOC ERROR MSG   */ 00881000
         L     @15,@CV00340                                        0336 00882000
         BALR  @14,@15                                             0336 00883000
*            CALL CONCTERR;            /* ISSUE ERROR MESSAGE        */ 00884000
         BAL   @14,CONCTERR                                        0337 00885000
*          END;                                                    0338 00886000
*        ELSE                          /* ELSE,                      */ 00887000
*          DO;                                                     0339 00888000
         B     @RC00331                                            0339 00889000
@RF00331 DS    0H                                                  0340 00890000
*            DDNMLNGH = RTDDNLEN;      /* SAVE DDNAME RETURNED       */ 00891000
         L     @10,TURTDDN(,GTPLOUT1)                              0340 00892000
         LH    @09,RTDDNLEN(,@10)                                  0340 00893000
         STH   @09,DDNMLNGH(,DDLST)                                0340 00894000
*            DDNMPARM(1:RTDDNLEN) = RTDDNAME(1:RTDDNLEN);          0341 00895000
         LR    @07,@09                                             0341 00896000
         BCTR  @07,0                                               0341 00897000
         EX    @07,@SM00900                                        0341 00898000
*            DDLST = DDLST +2 + RTDDNLEN;                          0342 00899000
         LA    @10,2                                               0342 00900000
         ALR   @10,DDLST                                           0342 00901000
         ALR   @10,@09                                             0342 00902000
         LR    DDLST,@10                                           0342 00903000
*                                      /* CHECK DSORG TO BE SAME     */ 00904000
*            IF (DSORGSQ='1'B & (SEQUEN='0'B & MBNUM=0))|  /*@ZA04568*/ 00905000
*               (DSORGPR='1'B & PARTND='0'B) |                     0343 00906000
*               (DSORGPR='1'B & (PARTND='1'B & MBNUM=1))|  /*@ZA04568*/ 00907000
*                (DSORGVM='1'B & VSAM='0'B) THEN                   0343 00908000
         TM    DSORGSQ,B'01000000'                                 0343 00909000
         BNO   @GL00007                                            0343 00910000
         L     @10,TURTDSO(,GTPLOUT1)                              0343 00911000
         TM    SEQUEN(@10),B'01000000'                             0343 00912000
         BNZ   @GL00007                                            0343 00913000
         L     @10,TUMBR(,GTPLOUT1)                                0343 00914000
         LH    @10,MBNUM(,@10)                                     0343 00915000
         LTR   @10,@10                                             0343 00916000
         BZ    @RT00343                                            0343 00917000
@GL00007 TM    DSORGPR,B'00100000'                                 0343 00918000
         BNO   @GL00006                                            0343 00919000
         L     @10,TURTDSO(,GTPLOUT1)                              0343 00920000
         TM    PARTND(@10),B'00000010'                             0343 00921000
         BZ    @RT00343                                            0343 00922000
@GL00006 TM    DSORGPR,B'00100000'                                 0343 00923000
         BNO   @GL00005                                            0343 00924000
         L     @10,TURTDSO(,GTPLOUT1)                              0343 00925000
         TM    PARTND(@10),B'00000010'                             0343 00926000
         BNO   @GL00005                                            0343 00927000
         L     @10,TUMBR(,GTPLOUT1)                                0343 00928000
         CLC   MBNUM(2,@10),@CH00033                               0343 00929000
         BE    @RT00343                                            0343 00930000
@GL00005 TM    DSORGVM,B'00010000'                                 0343 00931000
         BNO   @RF00343                                            0343 00932000
         L     @10,TURTDSO(,GTPLOUT1)                              0343 00933000
         TM    VSAM(@10),B'00010000'                               0343 00934000
         BNZ   @RF00343                                            0343 00935000
@RT00343 DS    0H                                                  0344 00936000
*              DO;                     /* NO -                       */ 00937000
*                DSORGERR = '1'B;      /* INDICATE ERROR TYPE        */ 00938000
         OI    DSORGERR,B'00010000'                                0345 00939000
*                CALL CONCTERR;        /* ISSUE ERROR MESSAGE        */ 00940000
         BAL   @14,CONCTERR                                        0346 00941000
*              END;                                                0347 00942000
*          END;                                                    0348 00943000
*    END OTHERCC;                                                  0349 00944000
@EL00006 DS    0H                                                  0349 00945000
@EF00006 DS    0H                                                  0349 00946000
@ER00006 LM    @14,@04,@SA00006                                    0349 00947000
         LM    @06,@12,@SA00006+28                                 0349 00948000
         BR    @14                                                 0349 00949000
*/********************************************************************/ 00950000
*/*                                                                  */ 00951000
*/* SEGMENT NAME -                                                   */ 00952000
*/*      CCERRMSG                                                    */ 00953000
*/*                                                                  */ 00954000
*/* FUNCTION -                                                       */ 00955000
*/*      THIS ROUTINE ISSUES A MESSAGE WHEN AN ERROR HAS BEEN FOUND  */ 00956000
*/*      IN THE CONCATENATION REQUEST.                               */ 00957000
*/*                                                                  */ 00958000
*/* OPERATION -                                                      */ 00959000
*/*      THE FIRST LEVEL MESSAGE NOTIFIES THE USER THAT THE DATA SETS*/ 00960000
*/*      WERE NOT CONCATENATED. THE SECOND LEVEL MESSAGE GIVES ONE   */ 00961000
*/*      OF THE FOLLOWING REASONS-                                   */ 00962000
*/*      NUMBER OF DATA SETS IN THE LIST EXCEEDS THE MAXIMUM, DSORG  */ 00963000
*/*      IS NOT THE SAME FOR ALL DATA SETS IN THE LIST, STATUS IS    */ 00964000
*/*      NEW,MOD, OR SYSOUT, OR ALLOCATION ERROR OCCURRED.           */ 00965000
*/*                                                                  */ 00966000
*/* INPUT -                                                          */ 00967000
*/*      ERROR TYPE INDICATOR                                        */ 00968000
*/*                                                                  */ 00969000
*/* OUTPUT -                                                         */ 00970000
*/*      MESSAGE ISSUED                                              */ 00971000
*/*                                                                  */ 00972000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00973000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00974000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00975000
*/********************************************************************/ 00976000
*    CCERRMSG: PROC;                                               0350 00977000
CCERRMSG STM   @14,@12,@SA00007                                    0350 00978000
*        MSGTABLE = MSGTABLE && MSGTABLE;/* CLEAR INTERFACE AREA     */ 00979000
         L     @10,MSGPTR(,AWAPTR)                                 0351 00980000
         XC    MSGTABLE(64,@10),MSGTABLE(@10)                      0351 00981000
*        RBCODE12 = '1'B;                /* INDICATE ALLOC FAILED    */ 00982000
         OI    RBCODE12(AWAPTR),B'10000000'                        0352 00983000
*        IF MAXERR = '1'B THEN           /* IF MAXIMUM ERROR,        */ 00984000
         TM    MAXERR,B'00100000'                                  0353 00985000
         BNO   @RF00353                                            0353 00986000
*          MSGID = '107A';               /* SET MESSAGE ID           */ 00987000
         MVC   MSGID(4,@10),@CC00867                               0354 00988000
*        IF DSORGERR = '1'B THEN         /* IF DSORG ERROR,          */ 00989000
@RF00353 TM    DSORGERR,B'00010000'                                0355 00990000
         BNO   @RF00355                                            0355 00991000
*          MSGID = '106A';               /* SET MESSAGE ID           */ 00992000
         L     @10,MSGPTR(,AWAPTR)                                 0356 00993000
         MVC   MSGID(4,@10),@CC00868                               0356 00994000
*        IF INVORG = '1'B THEN           /* IF INVALID DSORG,        */ 00995000
@RF00355 TM    INVORG,B'00001000'                                  0357 00996000
         BNO   @RF00357                                            0357 00997000
*          MSGID = '110A';               /* SET MESSAGE ID           */ 00998000
         L     @10,MSGPTR(,AWAPTR)                                 0358 00999000
         MVC   MSGID(4,@10),@CC00869                               0358 01000000
*        IF STATSERR = '1'B THEN         /* IF STATUS ERROR,         */ 01001000
@RF00357 TM    STATSERR,B'10000000'                                0359 01002000
         BNO   @RF00359                                            0359 01003000
*          DO;                           /* THEN                     */ 01004000
*            MSGID = '108A';             /* SET MESSAGE ID           */ 01005000
         L     @10,MSGPTR(,AWAPTR)                                 0361 01006000
         MVC   MSGID(4,@10),@CC00870                               0361 01007000
*            IF STATSPDE = 3 THEN        /* IF STATUS MOD,           */ 01008000
         L     @05,PTRPDL(,AWAPTR)                                 0362 01009000
         CLC   STATSPDE(2,@05),@CH00320                            0362 01010000
         BNE   @RF00362                                            0362 01011000
*              DO;                       /* THEN                     */ 01012000
*                VAR1 = ADDR(MOD);       /* PUT MOD VARIABLE         */ 01013000
         LA    @05,MOD                                             0364 01014000
         ST    @05,@TF00001                                        0364 01015000
         MVC   VAR1(3,@10),@TF00001+1                              0364 01016000
*                L1 = LENGTH(MOD);       /* AND LENGTH IN LIST       */ 01017000
         MVI   L1(@10),X'03'                                       0365 01018000
*              END;                                                0366 01019000
*            IF STATSPDE = 4 THEN        /* IF STATUS NEW            */ 01020000
@RF00362 L     @10,PTRPDL(,AWAPTR)                                 0367 01021000
         CLC   STATSPDE(2,@10),@CH00318                            0367 01022000
         BNE   @RF00367                                            0367 01023000
*              DO;                       /* THEN,                    */ 01024000
*                VAR1 = ADDR(NEW);       /* PUT NEW VARIABLE         */ 01025000
         L     @10,MSGPTR(,AWAPTR)                                 0369 01026000
         LA    @05,NEW                                             0369 01027000
         ST    @05,@TF00001                                        0369 01028000
         MVC   VAR1(3,@10),@TF00001+1                              0369 01029000
*                L1 = LENGTH(NEW);       /* AND LENGTH IN LIST       */ 01030000
         MVI   L1(@10),X'03'                                       0370 01031000
*              END;                                                0371 01032000
*            IF STATSPDE = 5 THEN        /* IF STATUS SYSOUT         */ 01033000
@RF00367 L     @10,PTRPDL(,AWAPTR)                                 0372 01034000
         CLC   STATSPDE(2,@10),@CH00047                            0372 01035000
         BNE   @RF00372                                            0372 01036000
*              DO;                       /* THEN                     */ 01037000
*                VAR1 = ADDR(SYSOUT);    /* PUT SYSOUT VARIABLE      */ 01038000
         L     @10,MSGPTR(,AWAPTR)                                 0374 01039000
         LA    @05,SYSOUT                                          0374 01040000
         ST    @05,@TF00001                                        0374 01041000
         MVC   VAR1(3,@10),@TF00001+1                              0374 01042000
*                L1 = LENGTH(SYSOUT);    /* AND LENGTH IN LIST       */ 01043000
         MVI   L1(@10),X'06'                                       0375 01044000
*              END;                                                0376 01045000
*          END;                                                    0377 01046000
@RF00372 DS    0H                                                  0378 01047000
*        IF ALLOCERR = '1'B THEN         /* IF ALLOCATION ERROR,     */ 01048000
@RF00359 TM    ALLOCERR,B'01000000'                                0378 01049000
         BNO   @RF00378                                            0378 01050000
*          DO;                                                     0379 01051000
*            MSGID = '109A';             /* SET MESSAGE ID           */ 01052000
         L     @10,MSGPTR(,AWAPTR)                                 0380 01053000
         MVC   MSGID(4,@10),@CC00872                               0380 01054000
*            VAR1 = ADDR(DAPARM);        /* PUT DSNAME VARIABLE      */ 01055000
         L     @05,TUDSN(,GTPLOUT1)                                0381 01056000
         LA    @02,DAPARM(,@05)                                    0381 01057000
         ST    @02,@TF00001                                        0381 01058000
         MVC   VAR1(3,@10),@TF00001+1                              0381 01059000
*            L1 = DALEN;                 /* AND LENGTH IN LIST       */ 01060000
         LH    @05,DALEN(,@05)                                     0382 01061000
         STC   @05,L1(,@10)                                        0382 01062000
*          END;                                                    0383 01063000
*        LISTPTR = ADDR(MSGCSECT);       /* ADDR OF PARM LIST        */ 01064000
@RF00378 L     @10,MSGPTR(,AWAPTR)                                 0384 01065000
         LA    @05,MSGCSECT(,@10)                                  0384 01066000
         ST    @05,LISTPTR(,@10)                                   0384 01067000
*        MTCPPL = CPPLPTR;               /* PTR TO CPPL              */ 01068000
         L     @05,CPPLPTR(,AWAPTR)                                0385 01069000
         ST    @05,MTCPPL(,@10)                                    0385 01070000
*        ECBPTR = ADDR(COMMECB);         /* PTR TO ECB               */ 01071000
         LA    @05,COMMECB(,AWAPTR)                                0386 01072000
         ST    @05,ECBPTR(,@10)                                    0386 01073000
*        COMMECB = 0;                    /* INIT ECB TO 0            */ 01074000
         SLR   @05,@05                                             0387 01075000
         ST    @05,COMMECB(,AWAPTR)                                0387 01076000
*        MTHIGH = '1'B;                  /* SET HIGH ORDER BIT ON    */ 01077000
         OI    MTHIGH(@10),B'10000000'                             0388 01078000
*        MTPUTLSW = '1'B;                /* INDICATE PUTLINE         */ 01079000
         OI    MTPUTLSW(@10),B'01000000'                           0389 01080000
*        MSGCSECT = PTRMSGS;             /* MSG CSECT ADDRESS        */ 01081000
         L     @05,PTRMSGS(,AWAPTR)                                0390 01082000
         ST    @05,MSGCSECT(,@10)                                  0390 01083000
*        R1 = ADDR(MSGTABLE);            /* PARM LIST IN REG 1       */ 01084000
         LR    R1,@10                                              0391 01085000
*        GEN (LINK EP=IKJEFF02);         /* INVOKE MESSAGE PROCESSOR */ 01086000
*                                                                  0392 01087000
         LINK EP=IKJEFF02                                               01088000
*    END CCERRMSG;                                                 0393 01089000
@EL00007 DS    0H                                                  0393 01090000
@EF00007 DS    0H                                                  0393 01091000
@ER00007 LM    @14,@12,@SA00007                                    0393 01092000
         BR    @14                                                 0393 01093000
*/********************************************************************/ 01094000
*/*                                                                  */ 01095000
*/* SEGMENT NAME -                                                   */ 01096000
*/*      PRMPTDDN                                                    */ 01097000
*/*                                                                  */ 01098000
*/* FUNCTION -                                                       */ 01099000
*/*      THIS ROUTINE PROMPTS THE USER TO ENTER A FILENAME WHEN      */ 01100000
*/*      THE PARAMETER HAS BEEN OMITTED AND IS REQUIRED.             */ 01101000
*/*                                                                  */ 01102000
*/* OPERATION -                                                      */ 01103000
*/*       INVOKE PARSE WITH A SECONDARY PCL AND PDL ADDRESS.  IF     */ 01104000
*/*       PARSE FAILS, ISSUE ERROR MESSAGE. ELSE, OVERLAY THE        */ 01105000
*/*       ORIGINAL PDE WITH THE PDE RETURNED FROM THE PROMPT.        */ 01106000
*/*                                                                  */ 01107000
*/* INPUT -                                                          */ 01108000
*/*       PTR TO FILE PDE                                            */ 01109000
*/*       PTR TO SECONDARY PCL                                       */ 01110000
*/*                                                                  */ 01111000
*/* OUTPUT -                                                         */ 01112000
*/*       FILE PDE OVERLAID WITH NEW DATA                            */ 01113000
*/*                                                                  */ 01114000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01115000
*/*        CAN BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE  */ 01116000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01117000
*/********************************************************************/ 01118000
*    PRMPTDDN: PROC;                                               0394 01119000
PRMPTDDN STM   @14,@12,@SA00008                                    0394 01120000
*        ENTRYCD = 4;                      /* INDICATE DDN PROMPT    */ 01121000
         MVC   ENTRYCD(2,AWAPTR),@CH00318                          0395 01122000
*        R1 = AWAPTR;                      /* WORKAREA PTR IN REG 1  */ 01123000
         LR    R1,AWAPTR                                           0396 01124000
*        CALL IKJEFD37;                                            0397 01125000
         L     @15,@CV00342                                        0397 01126000
         BALR  @14,@15                                             0397 01127000
*        IF RCODESV > 0 THEN               /* IF RETURN CODE >0      */ 01128000
         L     @10,RCODESV(,AWAPTR)                                0398 01129000
         LTR   @10,@10                                             0398 01130000
         BNP   @RF00398                                            0398 01131000
*          DO;                                                     0399 01132000
*            ENTRYCD = 2;                  /* SET ENTRY CODE         */ 01133000
         MVC   ENTRYCD(2,AWAPTR),@CH00080                          0400 01134000
*            R1 = AWAPTR;                                          0401 01135000
         LR    R1,AWAPTR                                           0401 01136000
*            CALL IKJEFD35;                                        0402 01137000
         L     @15,@CV00340                                        0402 01138000
         BALR  @14,@15                                             0402 01139000
*          END;                                                    0403 01140000
*        ELSE                                                      0404 01141000
*          DO;                             /* ELSE,                  */ 01142000
         B     @RC00398                                            0404 01143000
@RF00398 DS    0H                                                  0405 01144000
*            FILEPDE = 1;                  /* INDICATE FILE PRESENT  */ 01145000
         L     @10,PTRPDL(,AWAPTR)                                 0405 01146000
         MVC   FILEPDE(2,@10),@CH00033                             0405 01147000
*            DDNPTR = ADDR(NDDNBUF1);      /* PTR TO NEW BUFFER      */ 01148000
         LA    @02,NDDNBUF1                                        0406 01149000
         ST    @02,DDNPTR(,@10)                                    0406 01150000
*            DDNLEN = DDLNGH2;             /* NEW LENGTH             */ 01151000
         L     @02,PMPTPDL(,AWAPTR)                                0407 01152000
         LH    @15,DDLNGH2(,@02)                                   0407 01153000
         STH   @15,DDNLEN(,@10)                                    0407 01154000
*            DDNFLAGS = DDFLAG2;           /* FLAGS AND PARM         */ 01155000
         MVC   DDNFLAGS(1,@10),DDFLAG2(@02)                        0408 01156000
*            NDDNBUF1(1:DDNLEN) = DDNBUF1(1:DDNLEN);               0409 01157000
         BCTR  @15,0                                               0409 01158000
         L     @10,DDPTR2(,@02)                                    0409 01159000
         EX    @15,@SM00903                                        0409 01160000
*            RFY R5 RSTD;                  /* RESTRICT REG 5         */ 01161000
*            R5 = ADDR(PMPTPDL);          /* PROMPT PDL IN REG 5    */  01162000
         LA    R5,PMPTPDL(,AWAPTR)                                 0411 01163000
*            GEN (IKJRLSA (5));            /* RELEASE PDL            */ 01164000
         IKJRLSA (5)                                                    01165000
*            RFY R5 UNRSTD;                /* UNRESTRICT REG 5       */ 01166000
*          END;                                                    0414 01167000
*    END PRMPTDDN;                                                 0415 01168000
@EL00008 DS    0H                                                  0415 01169000
@EF00008 DS    0H                                                  0415 01170000
@ER00008 LM    @14,@12,@SA00008                                    0415 01171000
         BR    @14                                                 0415 01172000
*/********************************************************************/ 01173000
*/*                                                                  */ 01174000
*/* SEGMENT NAME -                                                   */ 01175000
*/*      TRANSRTN                                                    */ 01176000
*/*                                                                  */ 01177000
*/* FUNCTION -                                                       */ 01178000
*/*      THIS MODULE INVOKES GENTRANS TO TRANSLATE PARAMETERS TO     */ 01179000
*/*      DYNAMIC ALLOCATION TEXT FORMAT.                             */ 01180000
*/*                                                                  */ 01181000
*/* OPERATION -                                                      */ 01182000
*/*      THE TEXT UNIT FOR PERMANENT ALLOCATION IS SET UP. GENTRANS  */ 01183000
*/*      IS INVOKED. IF GENTRANS FAILS, AN INDICATOR IS SET TO       */ 01184000
*/*      SHOW THE ERROR. ELSE, THE POINTER TO THE TEXT BUILT BY      */ 01185000
*/*      GENTRANS IS PUT INTO THE DYNAMIC ALLOCATION REQUEST BLOCK.  */ 01186000
*/*                                                                  */ 01187000
*/* INPUT -                                                          */ 01188000
*/*      GENTRANS PARAMETER LIST                                     */ 01189000
*/*                                                                  */ 01190000
*/* OUTPUT -                                                         */ 01191000
*/*      RBOCDE12 = 0 - GENTRANS SUCCESSFUL                          */ 01192000
*/*                 1 - GENTRANS ERROR                               */ 01193000
*/*                                                                  */ 01194000
*/********************************************************************/ 01195000
*    TRANSRTN: PROC;                                               0416 01196000
TRANSRTN STM   @14,@03,@SA00009                                    0416 01197000
         STM   @05,@12,@SA00009+24                                 0416 01198000
*        ADLKEY = DALPERMA;            /* PERMANENT ALLOC KEY        */ 01199000
         L     @10,TXT(,AWAPTR)                                    0417 01200000
         MVC   ADLKEY(2,@10),@CH00776                              0417 01201000
*        ADLNBR = 0;                   /* NUMBER 0                   */ 01202000
         SLR   @09,@09                                             0418 01203000
         STH   @09,ADLNBR(,@10)                                    0418 01204000
*        ADDTEXT(INC) = TXT;           /* PTR TO TEXT UNIT           */ 01205000
         LR    @09,INC                                             0419 01206000
         SLA   @09,2                                               0419 01207000
         L     @05,GTPLPTR(,AWAPTR)                                0419 01208000
         L     @02,GTPLABLK(,@05)                                  0419 01209000
         ST    @10,@TF00001                                        0419 01210000
         ALR   @09,@02                                             0419 01211000
         MVC   ADDTEXT-4(4,@09),@TF00001                           0419 01212000
*        ADDNUM = ADDNUM + 1;          /* INCREMENT NUMBER OF ENTRIES * 01213000
         LA    @10,1                                               0420 01214000
         AH    @10,ADDNUM(,@02)                                    0420 01215000
         STH   @10,ADDNUM(,@02)                                    0420 01216000
*        R1 = GTPLPTR;                 /* PARM LIST IN REG 1         */ 01217000
         LR    R1,@05                                              0421 01218000
*        GEN (LINK EP=IKJCB831);       /* INVOKE GENTRANS            */ 01219000
         LINK EP=IKJCB831                                               01220000
*        RCODESV = R15;                /* SAVE RETURN CODE           */ 01221000
         ST    R15,RCODESV(,AWAPTR)                                0423 01222000
*        IF RCODESV > 0 THEN           /* IF GENTRANS FAILED,        */ 01223000
         L     @10,RCODESV(,AWAPTR)                                0424 01224000
         LTR   @10,@10                                             0424 01225000
         BNP   @RF00424                                            0424 01226000
*          DO;                         /* THEN                       */ 01227000
*            ENTRYCD = 3;              /* SET ENTRY CODE             */ 01228000
         MVC   ENTRYCD(2,AWAPTR),@CH00320                          0426 01229000
*            R1 = AWAPTR;                                          0427 01230000
         LR    R1,AWAPTR                                           0427 01231000
*            CALL IKJEFD35;                                        0428 01232000
         L     @15,@CV00340                                        0428 01233000
         BALR  @14,@15                                             0428 01234000
*          END;                                                    0429 01235000
*        ELSE                          /* OTHERWISE,                 */ 01236000
*          DO;                                                     0430 01237000
         B     @RC00424                                            0430 01238000
@RF00424 DS    0H                                                  0431 01239000
*            S99TXTPP = GTPLOUTA + 8;  /* TEXT PTR IN REQUEST BLOCK  */ 01240000
         L     @10,PTRS99RB(,AWAPTR)                               0431 01241000
         L     @05,GTPLPTR(,AWAPTR)                                0431 01242000
         L     @05,GTPLOUTA(,@05)                                  0431 01243000
         LA    @02,8                                               0431 01244000
         ALR   @02,@05                                             0431 01245000
         ST    @02,S99TXTPP(,@10)                                  0431 01246000
*            GTPLOUT1 = GTPLOUTA;      /* SAVE TEXT PTR              */ 01247000
         LR    GTPLOUT1,@05                                        0432 01248000
*          END;                                                    0433 01249000
*                                                                  0433 01250000
*    END TRANSRTN;                                                 0434 01251000
@EL00009 DS    0H                                                  0434 01252000
@EF00009 DS    0H                                                  0434 01253000
@ER00009 LM    @14,@03,@SA00009                                    0434 01254000
         LM    @05,@12,@SA00009+24                                 0434 01255000
         BR    @14                                                 0434 01256000
*/********************************************************************/ 01257000
*/*                                                                  */ 01258000
*/* SEGMENT NAME -                                                   */ 01259000
*/*      DYNSVC                                                      */ 01260000
*/*                                                                  */ 01261000
*/* FUNCTION -                                                       */ 01262000
*/*      THIS ROUTINE INVOKES DYNAMIC ALLOCATION.                    */ 01263000
*/*                                                                  */ 01264000
*/* OPERATION -                                                      */ 01265000
*/*      THE PARAMETER LIST IS COMPLETED. SVC 99 IS ISSUED. THE      */ 01266000
*/*      RETURN CODE IN REGISTER 15 IS SAVED.                        */ 01267000
*/*                                                                  */ 01268000
*/* INPUT -                                                          */ 01269000
*/*      SVC 99 REQUEST BLOCK                                        */ 01270000
*/*                                                                  */ 01271000
*/* OUTPUT -                                                         */ 01272000
*/*      RETURN CODE                                                 */ 01273000
*/*                                                                  */ 01274000
*/********************************************************************/ 01275000
*    DYNSVC: PROC;                                                 0435 01276000
*                                                                  0435 01277000
DYNSVC   STM   @14,@12,12(@13)                                     0435 01278000
*        R1 = ADDR(S99RBPTR);                                      0436 01279000
         LA    R1,S99RBPTR                                         0436 01280000
*        S99RBPTR = PTRS99RB;                                      0437 01281000
         L     @10,PTRS99RB(,AWAPTR)                               0437 01282000
         ST    @10,S99RBPTR                                        0437 01283000
*        S99RBPND = '1'B;              /* HIGH ORDER BIT ON          */ 01284000
*                                                                  0438 01285000
*                                                                  0438 01286000
         OI    S99RBPND,B'10000000'                                0438 01287000
*         /*MACDATE Y-2 73082*/                                    0439 01288000
*         SVC (99);                    /* ISSUE SVC 99               */ 01289000
*                                                                  0439 01290000
         SVC   99                                                  0439 01291000
*        RCODESV = R15;                /* SAVE RETURN CODE           */ 01292000
*                                                                  0440 01293000
         ST    R15,RCODESV(,AWAPTR)                                0440 01294000
*    END DYNSVC;                                                   0441 01295000
@EL00010 DS    0H                                                  0441 01296000
@EF00010 DS    0H                                                  0441 01297000
@ER00010 LM    @14,@12,12(@13)                                     0441 01298000
         BR    @14                                                 0441 01299000
*    END IKJEFD34                                                  0442 01300000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01301000
*/*%INCLUDE SYSLIB  (IKJZT430)                                        * 01302000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        * 01303000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        * 01304000
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                        * 01305000
*/*%INCLUDE SYSLIB  (IKJZB831)                                        * 01306000
*/*%INCLUDE SYSLIB  (IEFZB4D0)                                        * 01307000
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        * 01308000
*;                                                                 0442 01309000
@DATA    DS    0H                                                       01310000
@CH00320 DC    H'3'                                                     01311000
@CH00318 DC    H'4'                                                     01312000
@CH00047 DC    H'5'                                                     01313000
@CH00096 DC    H'8'                                                     01314000
@CH00839 DC    H'10'                                                    01315000
@CH00614 DC    XL2'0001'                                                01316000
@CH00618 DC    XL2'0003'                                                01317000
@CH00620 DC    XL2'0004'                                                01318000
@CH00626 DC    XL2'0007'                                                01319000
@CH00772 DC    XL2'0050'                                                01320000
@CH00776 DC    XL2'0052'                                                01321000
@CH00782 DC    XL2'0055'                                                01322000
@CH00786 DC    XL2'0057'                                                01323000
@SM00888 MVC   DAPARM(0,@01),DATAVAL(DPTR2)                             01324000
@SM00890 MVC   MBPARM(0,@15),MBRVAL(MPTR2)                              01325000
@SM00892 MVC   PWPARM(0,@15),PSWVAL(PPTR2)                              01326000
@SM00896 MVC   DDFVAL(0),DDNMPARM(DDLST)                                01327000
@SM00900 MVC   DDNMPARM(0,DDLST),RTDDNAME(@10)                          01328000
@SM00903 MVC   NDDNBUF1(0),DDNBUF1(@10)                                 01329000
@DATD    DSECT                                                          01330000
         DS    0F                                                       01331000
@SA00001 DS    18F                                                      01332000
@PC00001 DS    1F                                                       01333000
@SAV001  EQU   @SA00001                                                 01334000
@SA00007 DS    15F                                                      01335000
@SA00008 DS    15F                                                      01336000
@SA00009 DS    14F                                                      01337000
@SA00003 DS    14F                                                      01338000
@SA00004 DS    14F                                                      01339000
@SA00005 DS    14F                                                      01340000
@SA00006 DS    14F                                                      01341000
@TF00001 DS    F                                                        01342000
@ZTEMPS  DS    C                                                        01343000
@ZTEMPND EQU   *                                                        01344000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01345000
@TEMPS   EQU   @ZTEMPS                                                  01346000
@L       EQU   @ZLEN                                                    01347000
IKJEFD34 CSECT                                                          01348000
         DS    0F                                                       01349000
@CF00033 DC    F'1'                                                     01350000
@CH00033 EQU   @CF00033+2                                               01351000
@CF00080 DC    F'2'                                                     01352000
@CH00080 EQU   @CF00080+2                                               01353000
@CF00845 DC    F'12'                                                    01354000
@CF00463 DC    F'14'                                                    01355000
@CF00613 DC    F'16'                                                    01356000
@DATD    DSECT                                                          01357000
         DS    0D                                                       01358000
S99RBPTR DS    AL4                                                      01359000
         ORG   S99RBPTR                                                 01360000
S99RBPND DS    BL1                                                      01361000
         ORG   S99RBPTR+4                                               01362000
S99TUFP  DS    A                                                        01363000
SAVPWLEN DS    H                                                        01364000
         DS    CL2                                                      01365000
CORE     DS    CL4                                                      01366000
         ORG   CORE                                                     01367000
SPNO     DS    CL1                                                      01368000
SIZE     DS    AL3                                                      01369000
         ORG   CORE+4                                                   01370000
DDFREEBF DS    CL14                                                     01371000
         ORG   DDFREEBF                                                 01372000
DDFKEY   DS    FL2                                                      01373000
DDFNUM   DS    FL2                                                      01374000
DDFLEN   DS    FL2                                                      01375000
DDFVAL   DS    CL8                                                      01376000
         ORG   DDFREEBF+14                                              01377000
CNCTFLAG DS    CL1                                                      01378000
         ORG   CNCTFLAG                                                 01379000
STATSERR DS    BL1                                                      01380000
ALLOCERR EQU   CNCTFLAG+0                                               01381000
MAXERR   EQU   CNCTFLAG+0                                               01382000
DSORGERR EQU   CNCTFLAG+0                                               01383000
INVORG   EQU   CNCTFLAG+0                                               01384000
@NM00011 EQU   CNCTFLAG+0                                               01385000
         ORG   CNCTFLAG+1                                               01386000
CNCTFLG1 DS    CL1                                                      01387000
         ORG   CNCTFLG1                                                 01388000
SEARCH   DS    BL1                                                      01389000
DSORGSQ  EQU   CNCTFLG1+0                                               01390000
DSORGPR  EQU   CNCTFLG1+0                                               01391000
DSORGVM  EQU   CNCTFLG1+0                                               01392000
FREEFL   EQU   CNCTFLG1+0                                               01393000
@NM00021 EQU   CNCTFLG1+0                                               01394000
         ORG   CNCTFLG1+1                                               01395000
NDDNBUF1 DS    CL8                                                      01396000
SAVEFLG  DS    CL1                                                      01397000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01398000
@ENDDATD EQU   *                                                        01399000
@DATEND  EQU   *                                                        01400000
IKJEFD34 CSECT                                                          01401000
         DS    0F                                                       01402000
@SIZDATD DC    AL1(1)                                                   01403000
         DC    AL3(@ENDDATD-@DATD)                                      01404000
@SIZ001  EQU   @SIZDATD                                                 01405000
@CV00340 DC    V(IKJEFD35)                                              01406000
@CV00341 DC    V(IKJEFD36)                                              01407000
@CV00342 DC    V(IKJEFD37)                                              01408000
         DS    0D                                                       01409000
@CC00867 DC    C'107A'                                                  01410000
@CC00868 DC    C'106A'                                                  01411000
@CC00869 DC    C'110A'                                                  01412000
@CC00870 DC    C'108A'                                                  01413000
@CC00872 DC    C'109A'                                                  01414000
@CB00860 DC    X'0410'                                                  01415000
MOD      DC    CL3'MOD'                                                 01416000
NEW      DC    CL3'NEW'                                                 01417000
SYSOUT   DC    CL6'SYSOUT'                                              01418000
         DS    CL2                                                      01419000
PATCH32  DC    25F'0'                                                   01420000
CONCTEXT DC    X'12'                                                    01421000
         DC    X'10'                                                    01422000
         DC    X'14'                                                    01423000
         DC    X'1E'                                                    01424000
         DC    X'2E'                                                    01425000
         DC    X'20'                                                    01426000
         DC    X'22'                                                    01427000
         DC    X'1A'                                                    01428000
         DC    X'1C'                                                    01429000
         DC    X'2A'                                                    01430000
         DC    X'2C'                                                    01431000
         DC    X'24'                                                    01432000
         DC    X'0E'                                                    01433000
         DC    X'26'                                                    01434000
         DC    X'28'                                                    01435000
         DC    X'18'                                                    01436000
         DC    X'16'                                                    01437000
         DC    X'00'                                                    01438000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01439000
@01      EQU   01                                                       01440000
@02      EQU   02                                                       01441000
@03      EQU   03                                                       01442000
@04      EQU   04                                                       01443000
@05      EQU   05                                                       01444000
@06      EQU   06                                                       01445000
@07      EQU   07                                                       01446000
@08      EQU   08                                                       01447000
@09      EQU   09                                                       01448000
@10      EQU   10                                                       01449000
@11      EQU   11                                                       01450000
@12      EQU   12                                                       01451000
@13      EQU   13                                                       01452000
@14      EQU   14                                                       01453000
@15      EQU   15                                                       01454000
@0       EQU   00                                                       01455000
@1       EQU   01                                                       01456000
@2       EQU   02                                                       01457000
@3       EQU   03                                                       01458000
@4       EQU   04                                                       01459000
@5       EQU   05                                                       01460000
@6       EQU   06                                                       01461000
@7       EQU   07                                                       01462000
@8       EQU   08                                                       01463000
@9       EQU   09                                                       01464000
@A       EQU   10                                                       01465000
@B       EQU   11                                                       01466000
@C       EQU   12                                                       01467000
@D       EQU   13                                                       01468000
@E       EQU   14                                                       01469000
@F       EQU   15                                                       01470000
GTPLOUT1 EQU   @04                                                      01471000
LISTNMBR EQU   @08                                                      01472000
DSFREED  EQU   @07                                                      01473000
DDLST    EQU   @05                                                      01474000
DDNAPTR  EQU   @06                                                      01475000
SAVMBLEN EQU   @10                                                      01476000
PPTR2    EQU   @09                                                      01477000
MPTR2    EQU   @07                                                      01478000
DPTR2    EQU   @02                                                      01479000
INC      EQU   @08                                                      01480000
EXTRAN   EQU   @05                                                      01481000
SAVERC   EQU   @07                                                      01482000
AWAPTR   EQU   @03                                                      01483000
I        EQU   @02                                                      01484000
R0       EQU   @00                                                      01485000
R1       EQU   @01                                                      01486000
R5       EQU   @05                                                      01487000
R13      EQU   @13                                                      01488000
R15      EQU   @15                                                      01489000
R14      EQU   @14                                                      01490000
REGSAVE  EQU   4                                                        01491000
RETCODE  EQU   16                                                       01492000
ALLOCWA  EQU   0                                                        01493000
CPPLPTR  EQU   ALLOCWA                                                  01494000
PTRPDL   EQU   ALLOCWA+4                                                01495000
GTPLPTR  EQU   ALLOCWA+8                                                01496000
SWITCH   EQU   ALLOCWA+12                                               01497000
RBCODE12 EQU   SWITCH                                                   01498000
CONT     EQU   SWITCH                                                   01499000
TERMOPT  EQU   SWITCH                                                   01500000
ENTRYCD  EQU   ALLOCWA+14                                               01501000
TXT      EQU   ALLOCWA+16                                               01502000
PTRS99RB EQU   ALLOCWA+20                                               01503000
RCODESV  EQU   ALLOCWA+24                                               01504000
DSNCTR   EQU   ALLOCWA+30                                               01505000
PTRMSGS  EQU   ALLOCWA+32                                               01506000
VCFLAGS  EQU   ALLOCWA+36                                               01507000
PMPTPDL  EQU   ALLOCWA+40                                               01508000
MSGPTR   EQU   ALLOCWA+48                                               01509000
CMDTWO   EQU   ALLOCWA+60                                               01510000
COMMECB  EQU   ALLOCWA+160                                              01511000
PPLPTR   EQU   ALLOCWA+172                                              01512000
ALLOCPDL EQU   0                                                        01513000
FILEPDE  EQU   ALLOCPDL+10                                              01514000
STATSPDE EQU   ALLOCPDL+12                                              01515000
DSNPDE   EQU   ALLOCPDL+48                                              01516000
DSNPTR   EQU   DSNPDE                                                   01517000
DSNFLAGS EQU   DSNPDE+6                                                 01518000
MBRPTR   EQU   DSNPDE+8                                                 01519000
MBRFLAGS EQU   DSNPDE+14                                                01520000
PASSPTR  EQU   DSNPDE+16                                                01521000
PASSFLAG EQU   DSNPDE+22                                                01522000
DDNMEPDE EQU   ALLOCPDL+76                                              01523000
DDNPTR   EQU   DDNMEPDE                                                 01524000
DDNLEN   EQU   DDNMEPDE+4                                               01525000
DDNFLAGS EQU   DDNMEPDE+6                                               01526000
CLASPDE  EQU   ALLOCPDL+84                                              01527000
CLASPTR  EQU   CLASPDE                                                  01528000
CLASFLG  EQU   CLASPDE+6                                                01529000
SERPDE   EQU   ALLOCPDL+92                                              01530000
SERPTR   EQU   SERPDE                                                   01531000
SERFLAGS EQU   SERPDE+6                                                 01532000
BLKPDE   EQU   ALLOCPDL+104                                             01533000
BLKPTR   EQU   BLKPDE                                                   01534000
BLKFLAGS EQU   BLKPDE+6                                                 01535000
ABLKPDE  EQU   ALLOCPDL+112                                             01536000
ABLKPTR  EQU   ABLKPDE                                                  01537000
ABLKFLG  EQU   ABLKPDE+6                                                01538000
SPACPDE  EQU   ALLOCPDL+120                                             01539000
SPACEPTR EQU   SPACPDE                                                  01540000
SPACEFLG EQU   SPACPDE+6                                                01541000
SPACPDE2 EQU   ALLOCPDL+128                                             01542000
SPACPTR2 EQU   SPACPDE2                                                 01543000
SPACFLG2 EQU   SPACPDE2+6                                               01544000
DIRECPDE EQU   ALLOCPDL+136                                             01545000
DIRPTR   EQU   DIRECPDE                                                 01546000
DIRFLAGS EQU   DIRECPDE+6                                               01547000
ATTRPDE  EQU   ALLOCPDL+144                                             01548000
ATTRPTR  EQU   ATTRPDE                                                  01549000
ATTRFLAG EQU   ATTRPDE+6                                                01550000
USIDPDE  EQU   ALLOCPDL+152                                             01551000
USIDPTR  EQU   USIDPDE                                                  01552000
USIDFLAG EQU   USIDPDE+6                                                01553000
UTYPPDE  EQU   ALLOCPDL+160                                             01554000
UTYPPTR  EQU   UTYPPDE                                                  01555000
UTYPFLAG EQU   UTYPPDE+6                                                01556000
UNCNTPDE EQU   ALLOCPDL+168                                             01557000
UCNTPTR  EQU   UNCNTPDE                                                 01558000
UCNTFLAG EQU   UNCNTPDE+6                                               01559000
POSTPDE  EQU   ALLOCPDL+180                                             01560000
POSPTR   EQU   POSTPDE                                                  01561000
POSFLAG  EQU   POSTPDE+6                                                01562000
MXVOLPDE EQU   ALLOCPDL+188                                             01563000
MXVOLPTR EQU   MXVOLPDE                                                 01564000
MXVOLFLG EQU   MXVOLPDE+6                                               01565000
VOLSQPDE EQU   ALLOCPDL+196                                             01566000
VOLSQPTR EQU   VOLSQPDE                                                 01567000
VOLSQFLG EQU   VOLSQPDE+6                                               01568000
MSVGPDE  EQU   ALLOCPDL+204                                             01569000
MSVGPTR  EQU   MSVGPDE                                                  01570000
MSVGFLG  EQU   MSVGPDE+6                                                01571000
DSNBUF   EQU   0                                                        01572000
CPPL     EQU   0                                                        01573000
PPL      EQU   0                                                        01574000
PDEEXT   EQU   0                                                        01575000
MSGTABLE EQU   0                                                        01576000
LISTPTR  EQU   MSGTABLE                                                 01577000
TMCTPTR  EQU   MSGTABLE+4                                               01578000
MTCPPL   EQU   TMCTPTR                                                  01579000
ECBPTR   EQU   MSGTABLE+8                                               01580000
@NM00005 EQU   MSGTABLE+12                                              01581000
MTHIGH   EQU   @NM00005                                                 01582000
MSGCSECT EQU   MSGTABLE+16                                              01583000
SW       EQU   MSGTABLE+20                                              01584000
MTPUTLSW EQU   SW                                                       01585000
RETMSG   EQU   MSGTABLE+21                                              01586000
SW2      EQU   MSGTABLE+24                                              01587000
MSGID    EQU   MSGTABLE+40                                              01588000
MTINSRTS EQU   MSGTABLE+44                                              01589000
L1       EQU   MTINSRTS                                                 01590000
VAR1     EQU   MTINSRTS+1                                               01591000
L2       EQU   MTINSRTS+4                                               01592000
L3       EQU   MTINSRTS+8                                               01593000
L4       EQU   MTINSRTS+12                                              01594000
RET      EQU   0                                                        01595000
TEXTCORE EQU   0                                                        01596000
ADDNUM   EQU   TEXTCORE                                                 01597000
ADDTEXT  EQU   TEXTCORE+4                                               01598000
ADLTEXT  EQU   0                                                        01599000
ADLKEY   EQU   ADLTEXT                                                  01600000
ADLNBR   EQU   ADLTEXT+2                                                01601000
ADLLEN   EQU   ADLTEXT+4                                                01602000
FILETXT  EQU   0                                                        01603000
FILEKY   EQU   FILETXT                                                  01604000
FILENUM  EQU   FILETXT+2                                                01605000
DSNTUNIT EQU   0                                                        01606000
DANUM    EQU   DSNTUNIT+2                                               01607000
DALEN    EQU   DSNTUNIT+4                                               01608000
DAPARM   EQU   DSNTUNIT+6                                               01609000
DSUNIT   EQU   0                                                        01610000
DATALEN  EQU   DSUNIT                                                   01611000
DATAVAL  EQU   DSUNIT+2                                                 01612000
MBRTUNIT EQU   0                                                        01613000
MBKEY    EQU   MBRTUNIT                                                 01614000
MBNUM    EQU   MBRTUNIT+2                                               01615000
MBLEN    EQU   MBRTUNIT+4                                               01616000
MBPARM   EQU   MBRTUNIT+6                                               01617000
MBUNIT   EQU   0                                                        01618000
MEMLEN   EQU   MBUNIT                                                   01619000
MBRVAL   EQU   MBUNIT+2                                                 01620000
PSWTUNIT EQU   0                                                        01621000
PWKEY    EQU   PSWTUNIT                                                 01622000
PWNUM    EQU   PSWTUNIT+2                                               01623000
PWLEN    EQU   PSWTUNIT+4                                               01624000
PWPARM   EQU   PSWTUNIT+6                                               01625000
PWUNIT   EQU   0                                                        01626000
PSWLEN   EQU   PWUNIT                                                   01627000
PSWVAL   EQU   PWUNIT+2                                                 01628000
DDNCAREA EQU   0                                                        01629000
PERMCTPT EQU   DDNCAREA                                                 01630000
DDNMPTR  EQU   DDNCAREA+4                                               01631000
DDNMEND  EQU   DDNMPTR                                                  01632000
PERMCTXT EQU   DDNCAREA+8                                               01633000
PERMCTKY EQU   PERMCTXT                                                 01634000
PERMCTNM EQU   PERMCTXT+2                                               01635000
DDNMTXT  EQU   DDNCAREA+12                                              01636000
DDNMKEY  EQU   DDNMTXT                                                  01637000
DDNMNBR  EQU   DDNMTXT+2                                                01638000
DDNMLEN  EQU   DDNMTXT+4                                                01639000
DDNMLIST EQU   0                                                        01640000
DDNMLNGH EQU   DDNMLIST                                                 01641000
DDNMPARM EQU   DDNMLIST+2                                               01642000
DADSORG  EQU   0                                                        01643000
RTDSORG  EQU   DADSORG+6                                                01644000
SEQUEN   EQU   RTDSORG                                                  01645000
PARTND   EQU   RTDSORG                                                  01646000
VSAM     EQU   RTDSORG+1                                                01647000
DADDNAME EQU   0                                                        01648000
RTDDNLEN EQU   DADDNAME+4                                               01649000
RTDDNAME EQU   DADDNAME+6                                               01650000
DDPDE2   EQU   0                                                        01651000
DDPTR2   EQU   DDPDE2+8                                                 01652000
DDLNGH2  EQU   DDPDE2+12                                                01653000
DDFLAG2  EQU   DDPDE2+14                                                01654000
DDNBUF1  EQU   0                                                        01655000
GTPL     EQU   0                                                        01656000
GTPLABLK EQU   GTPL+16                                                  01657000
GTPLOUTA EQU   GTPL+20                                                  01658000
TEXTRET  EQU   0                                                        01659000
TUDSN    EQU   TEXTRET+8                                                01660000
TUMBR    EQU   TEXTRET+12                                               01661000
TUPSWD   EQU   TEXTRET+16                                               01662000
TUFILE   EQU   TEXTRET+20                                               01663000
TURTDDN  EQU   TEXTRET+96                                               01664000
TURTDSO  EQU   TEXTRET+100                                              01665000
S99RB    EQU   0                                                        01666000
S99VERB  EQU   S99RB+1                                                  01667000
S99FLAG1 EQU   S99RB+2                                                  01668000
S99FLG11 EQU   S99FLAG1                                                 01669000
S99NOCNV EQU   S99FLG11                                                 01670000
S99RSC   EQU   S99RB+4                                                  01671000
S99ERROR EQU   S99RSC                                                   01672000
S99TXTPP EQU   S99RB+8                                                  01673000
S99FLAG2 EQU   S99RB+16                                                 01674000
S99FLG21 EQU   S99FLAG2                                                 01675000
S99FLG22 EQU   S99FLAG2+1                                               01676000
S99TUPL  EQU   0                                                        01677000
S99TUPTR EQU   S99TUPL                                                  01678000
S99TUP   EQU   0                                                        01679000
S99TUNIT EQU   0                                                        01680000
S99TUENT EQU   S99TUNIT+4                                               01681000
S99TUFLD EQU   0                                                        01682000
ABLKBUF  EQU   0                                                        01683000
ATTRBUF  EQU   0                                                        01684000
BLKBUF   EQU   0                                                        01685000
CLASSBUF EQU   0                                                        01686000
DDNBUF   EQU   0                                                        01687000
DIRBUF   EQU   0                                                        01688000
MBRBUF   EQU   0                                                        01689000
MSGECB   EQU   0                                                        01690000
MSGTMCT  EQU   0                                                        01691000
MSVGBUF  EQU   0                                                        01692000
MXVOLBUF EQU   0                                                        01693000
PASSBUF  EQU   0                                                        01694000
POSTBUF  EQU   0                                                        01695000
SERBUF   EQU   0                                                        01696000
SPACBUF2 EQU   0                                                        01697000
SPACEBUF EQU   0                                                        01698000
UCNTBUF  EQU   0                                                        01699000
USIDBUF  EQU   0                                                        01700000
UTYPBUF  EQU   0                                                        01701000
VSEQBUF  EQU   0                                                        01702000
INPARMS  EQU   0                                                        01703000
*                                      START UNREFERENCED COMPONENTS    01704000
S99TUPRM EQU   S99TUFLD+2                                               01705000
S99TULEN EQU   S99TUFLD                                                 01706000
S99TUPAR EQU   S99TUENT+2                                               01707000
S99TULNG EQU   S99TUENT                                                 01708000
S99TUNUM EQU   S99TUNIT+2                                               01709000
S99TUKEY EQU   S99TUNIT                                                 01710000
S99TUPND EQU   S99TUP                                                   01711000
S99TUPLN EQU   S99TUPTR                                                 01712000
S99FLG24 EQU   S99FLAG2+3                                               01713000
S99FLG23 EQU   S99FLAG2+2                                               01714000
S99PCINT EQU   S99FLG22                                                 01715000
S99UDEVT EQU   S99FLG22                                                 01716000
S99MOUNT EQU   S99FLG21                                                 01717000
S99CATLG EQU   S99FLG21                                                 01718000
S99TIONQ EQU   S99FLG21                                                 01719000
S99OFFLN EQU   S99FLG21                                                 01720000
S99WTUNT EQU   S99FLG21                                                 01721000
S99NORES EQU   S99FLG21                                                 01722000
S99WTDSN EQU   S99FLG21                                                 01723000
S99WTVOL EQU   S99FLG21                                                 01724000
S99RSV01 EQU   S99RB+12                                                 01725000
S99INFO  EQU   S99RSC+2                                                 01726000
S99FLG12 EQU   S99FLAG1+1                                               01727000
S99JBSYS EQU   S99FLG11                                                 01728000
S99NOMNT EQU   S99FLG11                                                 01729000
S99ONCNV EQU   S99FLG11                                                 01730000
S99RBLN  EQU   S99RB                                                    01731000
TUDISP   EQU   TEXTRET+92                                               01732000
TURND    EQU   TEXTRET+88                                               01733000
TURLSE   EQU   TEXTRET+84                                               01734000
TUVSEQ   EQU   TEXTRET+80                                               01735000
TUPRIV   EQU   TEXTRET+76                                               01736000
TUMAXV   EQU   TEXTRET+72                                               01737000
TUPOS    EQU   TEXTRET+68                                               01738000
TULABEL  EQU   TEXTRET+64                                               01739000
TUUCNT   EQU   TEXTRET+60                                               01740000
TUUNIT   EQU   TEXTRET+56                                               01741000
TUHOLD   EQU   TEXTRET+52                                               01742000
TUDEST   EQU   TEXTRET+48                                               01743000
TUUSING  EQU   TEXTRET+44                                               01744000
TUDIR    EQU   TEXTRET+40                                               01745000
TUSPACE  EQU   TEXTRET+36                                               01746000
TUBLOK   EQU   TEXTRET+32                                               01747000
TUVOL    EQU   TEXTRET+28                                               01748000
TUSTATS  EQU   TEXTRET+24                                               01749000
TUPSWDND EQU   TUPSWD                                                   01750000
ENTRYNBR EQU   TEXTRET+4                                                01751000
SBPLSIZE EQU   TEXTRET                                                  01752000
GTPLTBLE EQU   GTPL+12                                                  01753000
GTPLKLST EQU   GTPL+8                                                   01754000
GTPLPCL  EQU   GTPL+4                                                   01755000
GTPLPDL  EQU   GTPL                                                     01756000
@NM00024 EQU   DDPDE2+15                                                01757000
@NM00023 EQU   DDPDE2+4                                                 01758000
@NM00022 EQU   DDPDE2                                                   01759000
@NM00020 EQU   DADDNAME+2                                               01760000
@NM00019 EQU   DADDNAME                                                 01761000
@NM00018 EQU   RTDSORG+1                                                01762000
@NM00017 EQU   RTDSORG                                                  01763000
@NM00016 EQU   RTDSORG                                                  01764000
@NM00015 EQU   RTDSORG                                                  01765000
@NM00014 EQU   DADSORG+4                                                01766000
@NM00013 EQU   DADSORG+2                                                01767000
@NM00012 EQU   DADSORG                                                  01768000
DDNMVAL  EQU   DDNMTXT+6                                                01769000
DAKEY    EQU   DSNTUNIT                                                 01770000
ADLPARM  EQU   ADLTEXT+6                                                01771000
ADDUNIT  EQU   TEXTCORE+36                                              01772000
@NM00010 EQU   TEXTCORE+2                                               01773000
RETCHAR  EQU   RET+2                                                    01774000
RETSIZE  EQU   RET                                                      01775000
MSGRTN   EQU   MSGTABLE+60                                              01776000
VAR4     EQU   MTINSRTS+13                                              01777000
HIGHL4   EQU   L4                                                       01778000
VAR3     EQU   MTINSRTS+9                                               01779000
HIGHL3   EQU   L3                                                       01780000
VAR2     EQU   MTINSRTS+5                                               01781000
HIGHL2   EQU   L2                                                       01782000
HIGHL1   EQU   L1                                                       01783000
@NM00009 EQU   MSGTABLE+36                                              01784000
@NM00008 EQU   MSGTABLE+32                                              01785000
MTOLDPTR EQU   MSGTABLE+28                                              01786000
@NM00007 EQU   MSGTABLE+25                                              01787000
@NM00006 EQU   SW2                                                      01788000
MTPGMSW  EQU   SW2                                                      01789000
MTNPLMSW EQU   SW2                                                      01790000
MTNOXQSW EQU   SW2                                                      01791000
MTDOMSW  EQU   SW2                                                      01792000
MT2OLDSW EQU   SW2                                                      01793000
MTNHEXSW EQU   SW                                                       01794000
MTWTPSW  EQU   SW                                                       01795000
MTJOBISW EQU   SW                                                       01796000
MTKEY1SW EQU   SW                                                       01797000
MTHEXSW  EQU   SW                                                       01798000
MTWTOSW  EQU   SW                                                       01799000
MTNOIDSW EQU   SW                                                       01800000
PPLUWA   EQU   PPL+24                                                   01801000
PPLCBUF  EQU   PPL+20                                                   01802000
PPLANS   EQU   PPL+16                                                   01803000
PPLPCL   EQU   PPL+12                                                   01804000
PPLECB   EQU   PPL+8                                                    01805000
PPLECT   EQU   PPL+4                                                    01806000
PPLUPT   EQU   PPL                                                      01807000
CPPLECT  EQU   CPPL+12                                                  01808000
CPPLPSCB EQU   CPPL+8                                                   01809000
CPPLUPT  EQU   CPPL+4                                                   01810000
CPPLCBUF EQU   CPPL                                                     01811000
DSNTERM  EQU   DSNBUF                                                   01812000
MSVGRSV2 EQU   MSVGPDE+7                                                01813000
MSVGRSV1 EQU   MSVGFLG                                                  01814000
MSVGPRES EQU   MSVGFLG                                                  01815000
MSVGLEN  EQU   MSVGPDE+4                                                01816000
VOLRSV2  EQU   VOLSQPDE+7                                               01817000
VOLRSV1  EQU   VOLSQFLG                                                 01818000
VOLPRES  EQU   VOLSQFLG                                                 01819000
VOLSQLEN EQU   VOLSQPDE+4                                               01820000
MXVRSV2  EQU   MXVOLPDE+7                                               01821000
MXVRSV1  EQU   MXVOLFLG                                                 01822000
MXVPRES  EQU   MXVOLFLG                                                 01823000
MXVOLLEN EQU   MXVOLPDE+4                                               01824000
POSRSV2  EQU   POSTPDE+7                                                01825000
POSRSV1  EQU   POSFLAG                                                  01826000
POSPRES  EQU   POSFLAG                                                  01827000
POSLEN   EQU   POSTPDE+4                                                01828000
LABLRSV1 EQU   ALLOCPDL+178                                             01829000
LABELPDE EQU   ALLOCPDL+176                                             01830000
UCNTRSV2 EQU   UNCNTPDE+7                                               01831000
UCNTRSV1 EQU   UCNTFLAG                                                 01832000
UCNTPRES EQU   UCNTFLAG                                                 01833000
UCNTLEN  EQU   UNCNTPDE+4                                               01834000
UTYPRSV2 EQU   UTYPPDE+7                                                01835000
UTYPRSV1 EQU   UTYPFLAG                                                 01836000
UTYPPRES EQU   UTYPFLAG                                                 01837000
UTYPLEN  EQU   UTYPPDE+4                                                01838000
USIDRSV2 EQU   USIDPDE+7                                                01839000
USIDRSV1 EQU   USIDFLAG                                                 01840000
USIDPRES EQU   USIDFLAG                                                 01841000
USIDLEN  EQU   USIDPDE+4                                                01842000
ATTRRSV2 EQU   ATTRPDE+7                                                01843000
ATTRRSV1 EQU   ATTRFLAG                                                 01844000
ATTRPRES EQU   ATTRFLAG                                                 01845000
ATTRLEN  EQU   ATTRPDE+4                                                01846000
DIRRSV2  EQU   DIRECPDE+7                                               01847000
DIRRSV1  EQU   DIRFLAGS                                                 01848000
DIRPRES  EQU   DIRFLAGS                                                 01849000
DIRLEN   EQU   DIRECPDE+4                                               01850000
SPCRSV22 EQU   SPACPDE2+7                                               01851000
SPCRSV12 EQU   SPACFLG2                                                 01852000
SPCPRES2 EQU   SPACFLG2                                                 01853000
SPACLEN2 EQU   SPACPDE2+4                                               01854000
SPACRSV2 EQU   SPACPDE+7                                                01855000
SPACRSV1 EQU   SPACEFLG                                                 01856000
SPACPRES EQU   SPACEFLG                                                 01857000
SPACELEN EQU   SPACPDE+4                                                01858000
ABLKRSV2 EQU   ABLKPDE+7                                                01859000
ABLKRSV1 EQU   ABLKFLG                                                  01860000
ABLKPRES EQU   ABLKFLG                                                  01861000
ABLKLEN  EQU   ABLKPDE+4                                                01862000
BLKRSV2  EQU   BLKPDE+7                                                 01863000
BLKRSV1  EQU   BLKFLAGS                                                 01864000
BLKPRES  EQU   BLKFLAGS                                                 01865000
BLKLEN   EQU   BLKPDE+4                                                 01866000
SERNEXT  EQU   SERPDE+8                                                 01867000
SERRSV2  EQU   SERPDE+7                                                 01868000
SERRSV1  EQU   SERFLAGS                                                 01869000
SERPRES  EQU   SERFLAGS                                                 01870000
SERLEN   EQU   SERPDE+4                                                 01871000
CLASRSV2 EQU   CLASPDE+7                                                01872000
CLASRSV1 EQU   CLASFLG                                                  01873000
CLASPRES EQU   CLASFLG                                                  01874000
CLASLEN  EQU   CLASPDE+4                                                01875000
DDNRSV2  EQU   DDNMEPDE+7                                               01876000
DDNRSV1  EQU   DDNFLAGS                                                 01877000
DDNPRES  EQU   DDNFLAGS                                                 01878000
DSNNEXT  EQU   DSNPDE+24                                                01879000
PASSRSV2 EQU   DSNPDE+23                                                01880000
PASSRSV1 EQU   PASSFLAG                                                 01881000
PASSPRES EQU   PASSFLAG                                                 01882000
PASSLEN  EQU   DSNPDE+20                                                01883000
MBRRSV2  EQU   DSNPDE+15                                                01884000
MBRRSV1  EQU   MBRFLAGS                                                 01885000
MBRPRES  EQU   MBRFLAGS                                                 01886000
MBRLEN   EQU   DSNPDE+12                                                01887000
DSNRSV2  EQU   DSNPDE+7                                                 01888000
DSNRSV1  EQU   DSNFLAGS                                                 01889000
DSNQUOT  EQU   DSNFLAGS                                                 01890000
DSNPRES  EQU   DSNFLAGS                                                 01891000
DSNLENGH EQU   DSNPDE+4                                                 01892000
DISPPDE  EQU   ALLOCPDL+46                                              01893000
RNDPDE   EQU   ALLOCPDL+44                                              01894000
RLSEPDE  EQU   ALLOCPDL+42                                              01895000
VSEQPDE  EQU   ALLOCPDL+40                                              01896000
PRIVPDE  EQU   ALLOCPDL+38                                              01897000
MAXVPDE  EQU   ALLOCPDL+36                                              01898000
POSPDE   EQU   ALLOCPDL+34                                              01899000
LABLPDE  EQU   ALLOCPDL+32                                              01900000
UCNTPDE  EQU   ALLOCPDL+30                                              01901000
UNITPDE  EQU   ALLOCPDL+28                                              01902000
HOLDPDE  EQU   ALLOCPDL+26                                              01903000
DESTPDE  EQU   ALLOCPDL+24                                              01904000
USINGPDE EQU   ALLOCPDL+22                                              01905000
DIRPDE   EQU   ALLOCPDL+20                                              01906000
SPACEPDE EQU   ALLOCPDL+18                                              01907000
BLOKPDE  EQU   ALLOCPDL+16                                              01908000
VOLPDE   EQU   ALLOCPDL+14                                              01909000
DSPDE    EQU   ALLOCPDL+8                                               01910000
@NM00004 EQU   ALLOCPDL+4                                               01911000
@NM00003 EQU   ALLOCPDL                                                 01912000
FIRSTPTR EQU   ALLOCWA+176                                              01913000
NBLKBUF1 EQU   ALLOCWA+164                                              01914000
PDLADDR3 EQU   ALLOCWA+156                                              01915000
PPLTWO   EQU   ALLOCWA+128                                              01916000
CMDTWOBF EQU   CMDTWO+4                                                 01917000
CMDTWOOF EQU   CMDTWO+2                                                 01918000
CMDTWOLN EQU   CMDTWO                                                   01919000
Q        EQU   ALLOCWA+56                                               01920000
P        EQU   ALLOCWA+52                                               01921000
PRCODE   EQU   ALLOCWA+44                                               01922000
@NM00002 EQU   ALLOCWA+38                                               01923000
NCLASBUF EQU   ALLOCWA+37                                               01924000
@NM00001 EQU   VCFLAGS                                                  01925000
SPACE2   EQU   VCFLAGS                                                  01926000
SPACE1   EQU   VCFLAGS                                                  01927000
AVBLK    EQU   VCFLAGS                                                  01928000
VLISTCTR EQU   ALLOCWA+28                                               01929000
AWARSV2  EQU   ALLOCWA+13                                               01930000
FIRSTPDE EQU   SWITCH                                                   01931000
AWARSV1  EQU   SWITCH                                                   01932000
ASTRSK   EQU   SWITCH                                                   01933000
PROMPT   EQU   SWITCH                                                   01934000
DSOVRLAY EQU   SWITCH                                                   01935000
*                                      END UNREFERENCED COMPONENTS      01936000
@RC00142 EQU   @EL00001                                                 01937000
@RC00198 EQU   @RC00195                                                 01938000
@RF00220 EQU   @RC00195                                                 01939000
@RC00224 EQU   @RC00195                                                 01940000
@RC00285 EQU   @RC00279                                                 01941000
@RF00301 EQU   @EL00005                                                 01942000
@RC00309 EQU   @EL00005                                                 01943000
@RC00321 EQU   @EL00005                                                 01944000
@RC00317 EQU   @EL00005                                                 01945000
@RC00315 EQU   @EL00005                                                 01946000
@RC00331 EQU   @EL00006                                                 01947000
@RF00343 EQU   @EL00006                                                 01948000
@RC00398 EQU   @EL00008                                                 01949000
@RC00424 EQU   @EL00009                                                 01950000
@RC00318 EQU   @RC00317                                                 01951000
@EL01    EQU   @EL00001                                                 01952000
@ENDDATA EQU   *                                                        01953000
         END   IKJEFD34,(C'PLS1704',0701,75248)                         01954000
