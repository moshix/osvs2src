         TITLE ' IKJEFE02 - EXEC PARSE INTERFACE  MODULE'               00010000
* GEN(TITLE  'IKJEFE02 - EXEC PARSE INTERFACE MODULE');                 00020000
         TITLE  'IKJEFE02 - EXEC PARSE INTERFACE MODULE'                00030000
* IKJEFE02: PROC (DUMPARM) OPTIONS (DONTSAVE(1,15),REENTRANT);          00040000
         LCLA  &T,&SPN                                            0002  00050000
.@001    ANOP                                                     0002  00060000
IKJEFE02 CSECT ,                                                  0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         ST    @0,20(0,@D)                                        0002  00090000
         STM   @2,@C,28(@D)                                       0002  00100000
         BALR  @B,0                                               0002  00110000
@PSTART  DS    0H                                                 0002  00120000
         USING @PSTART+00000,@B                                   0002  00130000
         LR    @C,@1                                              0002  00140000
         L     @0,@SIZ001                                         0002  00150000
         GETMAIN  R,LV=(0)                                        0002  00160000
         XR    @C,@1                                              0002  00170000
         XR    @1,@C                                              0002  00180000
         XR    @C,@1                                              0002  00190000
         USING @DATD+00000,@C                                     0002  00200000
         L     @0,20(0,@D)                                        0002  00210000
         XC    @TEMPS(@L),@TEMPS                                  0002  00220000
         ST    @D,@SAV001+4                                       0002  00230000
         LA    @F,@SAV001                                         0002  00240000
         ST    @F,8(0,@D)                                         0002  00250000
         LR    @D,@F                                              0002  00260000
* /******************************************************************** 00270000
* /*                                                                  * 00280000
* /* STATUS:                                                          * 00290000
* /*    CHANGE LEVEL 000                                              * 00300000
* /*    C020000,020500,103500,104000,133000                     Y01676* 00310000
* /*    C187000-188000,243500,244000,244500,286500              Y01676* 00320000
* /*    C338000,340500,355500,356000,360000,395000              Y01676* 00330000
* /*    C396000,470000,483500,670500,671000                     Y01676* 00340000
* /*    C191500-192500,512000,512500,524000-525000              Y01676* 00350000
* /*                                                                  * 00360000
* /*    D356500-359500,538000,538500-634500,671000              Y01676* 00370000
* /*                                                                  * 00380000
* /*    A020100,133100,133200,182100-182300                     Y01676* 00390000
* /*    A183600-183800,192600,244100                            Y01676* 00400000
* /*    A286600,286700,340100,343100-343420,355600              Y01676* 00410000
* /*    A360020,365600-366333,395200,396100                     Y01676* 00420000
* /*    A471100-471488,482600-482900,483100-483420              Y01676* 00430000
* /*    A483700,525100,525300,537600,538100                     Y01676* 00440000
* /*    A670100,670488,671020-671100,691100                     Y01676* 00450000
* /*    A691200-691874,364600-364900                            Y01676* 00460000
* /*    A743600-743800,524600,525020-525040,525420              Y01676* 00470000
* /*    A525440-525480                                          Y01676* 00480000
* /*                                                            20035 * 00490000
* /*                                                                  * 00500000
* /* FUNCTION:                                                        * 00510000
* /*   MODULE IKJEFE02 FIRST CHECKS TO DETERMINE IF THE COMMAND       * 00520000
* /*   PROCEDURE WAS INVOKED IMPLICITLY AND THAT NO SYMBOLIC          * 00530000
* /*   PARAMETERS WERE DEFINED FOR IT. IF THIS IS THE CASE, A CHECK   * 00540000
* /*   IS MADE TO DETERMINE IF THERE WERE ANY SYMBOLIC PARAMETERS     * 00550000
* /*   ENTERED ON THE CALLING STATEMENT. IF THERE WERE ENTRIES,       * 00560000
* /*   A MESSAGE IS SENT TO THE TERMINAL INDICATING THE ERROR         * 00570000
* /*   AND RETURN IS MADE TO E01 TO TERMINATE.                        * 00580000
* /*                                                                  * 00590000
* /*   IF IT IS AN IMPLICIT EXEC AND SYMBOLIC PARAMETERS WERE         * 00600000
* /*   NEITHER DEFINED NOR ENTERED, A RETURN IS MADE TO E01 TO        * 00610000
* /*   CONTINUE PROCESSING.                                           * 00620000
* /*                                                                  * 00630000
* /*   OTHERWISE, THE SIZE OF THE PARSE CONTROL LIST IS CALCULATED,   * 00640000
* /*   AND MODULE E03 IS CALLED TO ISSUE A GETMAIN FOR THAT AMOUNT.   * 00650000
* /*   A PCL IS THEN BUILT FROM THE ENTRIES IN ATAB (SEE 'TABLES/WORK * 00660000
* /*   AREAS'  FOR A DEFINITION OF ATAB). THEN PARSE IS LINKED TO TO  * 00670000
* /*   OBTAIN SYMBOLIC PARAMETER VALUES WHICH THE USER MAY HAVE       * 00680000
* /*   ENTERED.                                                       * 00690000
* /*                                                                  * 00700000
* /*   IF THIS IS AN EXPLICIT INVOCATION, PARSE IS LINKED TO          * 00710000
* /*   IN ORDER TO OBTAIN THE QUOTE STRING WHICH THE USER ENTERED     * 00720000
* /*   AND WHICH CONTAINS THE VALUES FOR THE SYMBOLIC PARAMETERS.     * 00730000
* /*   IF PARSE WAS NOT ABLE TO OBTAIN A SYNTACTICALLY CORRECT        * 00740000
* /*   Q-STRING, WE GO TO PUT AN ERROR MESSAGE TO THE TERMINAL,       * 00750000
* /*   AND RETURN TO E01 TO TERMINATE. IF A QUOTE STRING WAS FOUND,   * 00760000
* /*   AND NO SYMBOLIC PARAMETERS WERE DEFINED ON THE PROC STATEMENT, * 00770000
* /*   AN ERROR MESSAGE IS PUT TO THE TERMINAL, AND RETURN IS MADE TO * 00780000
* /*   E01 TO TERMINATE. IF THERE WAS NO ERROR, THE PDL IS EXAMINED   * 00790000
* /*   TO DETERMINE IF THE 'LIST' OR THE 'PROMPT' OPTION WAS EN-Y01676* 00800000
* /*   TERED ON THE INVOCATION STATEMENT -IF SO THE LIST OR THE Y01676* 00810000
* /*   PROMPT SW IS SET, RESPECTIVELY. NEXT, THE COMMAND BUFFER Y01676* 00820000
* /*   OFFSET AND LENGTH FIELDS ARE ALTERED SO THAT THE NEXT TIME     * 00830000
* /*   WE LINK TO PARSE IT WILL NOT FIND THE QUOTES. THEN THE PDL IS  * 00840000
* /*   FREED.                                                         * 00850000
* /*                                                                  * 00860000
* /*   IF NO SYMBOLIC PARAMETERS WERE DEFINED IN THE PROC, WE         * 00870000
* /*   RETURN TO E01 TO CONTINUE PROCESSING. IF PARMS WERE DEFINED,   * 00880000
* /*   PARSE IS LINKED TO AGAIN TO PARSE FOR THE VALUES FOR THE       * 00890000
* /*   SYMBOLIC PARAMETERS DEFINED IN THE PROC. IF CORRECT VALUES     * 00900000
* /*   COULD NOT BE OBTAINED, AN ERROR MESSAGE IS PUT TO THE          * 00910000
* /*   TERMINAL, AND E01 IS RETURNED TO IN ORDER TO TERMINATE.        * 00920000
* /*                                                                  * 00930000
* /*   NEXT THE FTAB (SEE 'TABLES/WORK AREAS' FOR DESCRIPTION) IS     * 00940000
* /*   UPDATED TO REFLECT THE VALUES WHICH THE USER ENTERED.          * 00950000
* /*                                                                  * 00960000
* /*   THE PDL IS THEN FREED AND WE RETURN TO E01.                    * 00970000
* /*                                                                  * 00980000
* /* ENTRY POINTS:                                                    * 00990000
* /*    IKJEFE02 - ONLY ENTRY POINT.                                  * 01000000
* /*                                                                  * 01010000
* /* INPUT:                                                           * 01020000
* /*    REGISTER 1 - POINTER TO E01DATDF. E01DATDF IS A               * 01030000
* /*    STRUCTURE IN IKJEFE01 WHICH CONTAINS VARIABLES                * 01040000
* /*    USED BY ALL MODULES OF EXEC. REFER TO ITS DEFINITION          * 01050000
* /*    IN 'TABLES/WORK AREAS' FOR DETAILS.                           * 01060000
* /*                                                                  * 01070000
* /* OUTPUT:                                                          * 01080000
* /*    UPDATED ATAB/FTAB.                                            * 01090000
* /*    E01SW9 IS SET TO ONE IF AN ERROR OCCURS.                      * 01100000
* /*                                                                  * 01110000
* /* EXITS,NORMAL:                                                    * 01120000
* /*    ALWAYS A RETURN TO IKJEFE01. E01SW9 IS 0.                     * 01130000
* /*                                                                  * 01140000
* /* EXITS,ERROR:                                                     * 01150000
* /*    ALWAYS A RETURN TO IKJEFE01. E01SW9 IS SET TO 1.              * 01160000
* /*                                                                  * 01170000
* /* TABLES/WORK AREAS:                                               * 01180000
* /*    ATAB   (DOUBLE WORD BOUNDARY)                                 * 01190000
* /*      |---------------------------------------------------------| * 01200000
* /*   +0 |ADDRESS OF PREVIOUS BLOCK OF ATAB                        | * 01210000
* /*      |---------------------------------------------------------| * 01220000
* /*   +4 |ADDRESS OF NEXT BLOCK OF ATAB                            | * 01230000
* /*      |---------------------------------------------------------| * 01240000
* /*   +8 |LENGTH OF THIS BLOCK (IN BYTES)                          | * 01250000
* /*      |---------------------------------------------------------| * 01260000
* /*   +12|     E                                                   | * 01270000
* /*      |            L                                            | * 01280000
* /*      |                   E                                     | * 01290000
* /*      |                          M                              | * 01300000
* /*      |                                 E                       | * 01310000
* /*      |                                        N                | * 01320000
* /*      |                                               T         | * 01330000
* /*      |                                                      S  | * 01340000
* /*      |---------------------------------------------------------| * 01350000
* /*                                                                  * 01360000
* /*    ATAB ELEMENT (BYTE BOUNDARY)                                  * 01370000
* /*      |---------------------------------------------------------| * 01380000
* /*      |FOR KEYWORD WITH VALUE AND POSITIONAL PARAMETERS THIS    | * 01390000
* /*      |IS A PTR TO THE CORRESPONDING FTAB ELEMENT               | * 01400000
* /*      |FOR KEYWORD W/O VALUE PARAMETERS A ZERO INDICATES THE    | * 01410000
* /*      |KEYWORD WAS NOT PRESENT ON THE INVOCATION STATEMENT, AND | * 01420000
* /*   +0 |A ONE INDICATES THAT IT WAS PRESENT.                     | * 01430000
* /*      |---------------------------------------------------------| * 01440000
* /*   +4 |FLAG BYTE       |LENGTH                        |SYMBOLIC | * 01450000
* /*      |---------------------------------------------------------| * 01460000
* /*      |PARAMETER NAME                                           | * 01470000
* /*      |---------------------------------------------------------| * 01480000
* /*         WHERE: FLAG BYTE IS-                                     * 01490000
* /*                    BIT 0=1 IF THIS IS A KEYWORD WITH VALUE       * 01500000
* /*                    BIT 1=1 IF THIS IS A KEYWORD W/O VALUE        * 01510000
* /*                    BIT 2=1 IF THIS IS THE LAST ELMT IN THIS      * 01520000
* /*                            BLOCK OF ATAB                         * 01530000
* /*                LENGTH BYTE IS-                                   * 01540000
* /*                    LENGTH IN BYTES OF THE SYMBOLIC PARAMETER     * 01550000
* /*                    NAME WHICH FOLLOWS                            * 01560000
* /*                                                                  * 01570000
* /*    FTAB   (WORD BOUNDARY)                                        * 01580000
* /*      |---------------------------------------------------------| * 01590000
* /*   +0 |ADDRESS OF PREVIOUS BLOCK OF FTAB                        | * 01600000
* /*      |---------------------------------------------------------| * 01610000
* /*   +4 |ADDRESS OF NEXT BLOCK OF FTAB                            | * 01620000
* /*      |---------------------------------------------------------| * 01630000
* /*   +8 |TOTAL LENGTH OF THIS BLOCK  |NUMBER OF BYTES IN USE      | * 01640000
* /*      |---------------------------------------------------------| * 01650000
* /*   +12|     E                                                   | * 01660000
* /*      |            L                                            | * 01670000
* /*      |                   E                                     | * 01680000
* /*      |                          M                              | * 01690000
* /*      |                                   E                     | * 01700000
* /*      |                                            N            | * 01710000
* /*      |                                                  T      | * 01720000
* /*      |                                                        S| * 01730000
* /*      |---------------------------------------------------------| * 01740000
* /*                                                                  * 01750000
* /*    FTAB ELEMENT (BYTE BOUNDARY)                                  * 01760000
* /*      |---------------------------------------------------------| * 01770000
* /*   +0 |LENGTH OF THE SYMBOLIC PARAMETER VALUE WHICH FOLLOWS     | * 01780000
* /*      |---------------------------------------------------------| * 01790000
* /*      |VALUE ASSOCIATED WITH A SYMBOLIC PARAMETER NAME IN ATAB  | * 01800000
* /*      |---------------------------------------------------------| * 01810000
* /*                                                                  * 01820000
* /*    E01DATDF (DOUBLE WORD BOUNDARY)                               * 01830000
* /*      |---------------------------------------------------------| * 01840000
* /*   +0 |DCB FOR DATA SET CONTAINING COMMAND PROCEDURE            | * 01850000
* /*      |---------------------------------------------------------| * 01860000
* /*   +88|POINTER USED FOR INDIRECT ADDRESSING                     | * 01870000
* /*      |---------------------------------------------------------| * 01880000
* /*   +92|POINTER USED FOR INDIRECT ADDRESSING                     | * 01890000
* /*      |---------------------------------------------------------| * 01900000
* /*   +96|NAME OF PDS MEMBER WHICH CONTAINS THE PROC               | * 01910000
* /*      |---------------------------------------------------------| * 01920000
* /*  +104|DECB FOR THE READ MACRO                                  | * 01930000
* /*      |---------------------------------------------------------| * 01940000
* /*  +124|POINTER TO INPUT RECORD FROM PROC                        | * 01950000
* /*      |---------------------------------------------------------| * 01960000
* /*  +128|NO. OF BYTES ON INPUT RCD WHICH HAVE NOT BEEN PROCESSED  | * 01970000
* /*      |---------------------------------------------------------| * 01980000
* /*  +132|NO. OF POSITIONAL PARAMETERS FOUND ON THE PROC STATEMENT | * 01990000
* /*      |---------------------------------------------------------| * 02000000
* /*  +136|WORK AREA - ALSO USED TO PASS ADDRESS OF CORE TO BE FREED| * 02010000
* /*      |  BY MODULE E03                                          | * 02020000
* /*      |---------------------------------------------------------| * 02030000
* /*  +140|MINIMUM AMOUNT OF CORE NEEDED FROM A GETMAIN             | * 02040000
* /*      |---------------------------------------------------------| * 02050000
* /*  +144|MAXIMUM AMOUNT OF CORE NEEDED FROM A GETMAIN             | * 02060000
* /*      |---------------------------------------------------------| * 02070000
* /*  +148|ADDRESS OF CORE OBTAINED VIA GETMAIN                     | * 02080000
* /*      |---------------------------------------------------------| * 02090000
* /*  +152|AMOUNT OF CORE OBTAINED VIA GETMAIN                      | * 02100000
* /*      |---------------------------------------------------------| * 02110000
* /*  +156|ADDRESS OF SUBPOOL 78 CORE WHICH BELONGS TO US           | * 02120000
* /*      |---------------------------------------------------------| * 02130000
* /*  +160|LENGTH OF SUBPOOL 78 CORE WHICH BELONGS TO US            | * 02140000
* /*      |---------------------------------------------------------| * 02150000
* /*  +164|WORK AREA                                                | * 02160000
* /*      |---------------------------------------------------------| * 02170000
* /*  +168|NO. OF POSITIONAL PARMS SPECIFIED ON THE PROC STMT       | * 02180000
* /*      |---------------------------------------------------------| * 02190000
* /*  +172|POINTER TO CURRENT BLOCK OF ATAB                         | * 02200000
* /*      |---------------------------------------------------------| * 02210000
* /*  +176|POINTER TO CURRENT ELEMENT OF ATAB                       | * 02220000
* /*      |---------------------------------------------------------| * 02230000
* /*  +180|POINTER TO CURRENT BLOCK OF FTAB                         | * 02240000
* /*      |---------------------------------------------------------| * 02250000
* /*  +184|POINTER TO CURRENT ELEMENT OF FTAB                       | * 02260000
* /*      |---------------------------------------------------------| * 02270000
* /*  +188|NO. OF BYTES IN VALUE PART OF KEYWORD WITH VALUE         | * 02280000
* /*      |---------------------------------------------------------| * 02290000
* /*  +192|NO. OF KEYWORD W/O VALUE PARMS DEFINED IN PROC STMT      | * 02300000
* /*      |---------------------------------------------------------| * 02310000
* /*  +194|NO. OF KEYWORD WITH VALUE PARMS DEFINED IN PROC STMT     | * 02320000
* /*      |---------------------------------------------------------| * 02330000
* /*  +196|TOTAL BYTES IN ALL KEYWORD W/O VALUE PARMS               | * 02340000
* /*      |---------------------------------------------------------| * 02350000
* /*  +198|TOTAL BYTES IN ALL KEYWORD WITH VALUE PARMS              | * 02360000
* /*      |---------------------------------------------------------| * 02370000
* /*  +200|WORK AREA                                                | * 02380000
* /*      |---------------------------------------------------------| * 02390000
* /*  +202|SWITCHES                                                 | * 02400000
* /*      | BIT 0  - SET TO ONE WHEN PROCEESING IMPLICIT EXEC       | * 02410000
* /*      | BIT 1  - SET TO ONE WHEN E03 IS CALLED TO READ FIRST    | * 02420000
* /*      |          LINE OF PROC                                   | * 02430000
* /*      | BIT 2  - SET TO ONE IF PROCEDURE HAS NO PROC STATEMENT  | * 02440000
* /*      | BIT 3  - SET TO ONE IF NO PROC STMT AND FIRST LINE OF   | * 02450000
* /*      |          PROC IS NOT EMPTY                              | * 02460000
* /*      | BIT 4  - SET TO ONE WHEN AN ABEND HAS OCCURRED          | * 02470000
* /*      | BIT 5  - SET TO ONE WHEN THE PROMPT OPTION WAS    Y01676| * 02480000
* /*      |          SPECIFIED ON THE INVOCATION STATEMENT    Y01676| * 02490000
* /*      | BIT 6  - SET TO ONE WHEN E03 IS CALLED TO READ A RCD    | * 02500000
* /*      |          OTHER THAN THE FIRST                           | * 02510000
* /*      | BIT 7  - SET TO ONE IF RECORD FORMAT IS VARIABLE        | * 02520000
* /*      | BIT 8  - TERMINATION SWITCH (SET TO ONE IF PROC IS      | * 02530000
* /*      |          NON-EXECUTABLE)                                | * 02540000
* /*      | BIT 9  - SET TO ONE IF E03 HAS BEEN CALLED FOR A GETMAIN| * 02550000
* /*      | BIT 10 - SET TO ONE WHEN DATA SET IS NULL               | * 02560000
* /*      | BIT 11 - SET TO ONE WHEN CORE HAS BEEN OBTAINED FROM    | * 02570000
* /*      |          SUBPOOL 78                                     | * 02580000
* /*      | BIT 12 - SET TO ONE WHEN E03 HAS BEEN CALLED TO DO A    | * 02590000
* /*      |          FREEMAIN                                       | * 02600000
* /*      | BIT 13 - UNUSED                                         | * 02610000
* /*      | BIT 14 - SET TO ONE WHEN THE MINIMUM AMOUNT OF CORE     | * 02620000
* /*      |          NEEDED COULD NOT BE OBTAINED                   | * 02630000
* /*      | BIT 15 - SET TO ONE WHEN THE LIST OPTION WAS SPECIFIED  | * 02640000
* /*      |          ON THE INVOCATION STATEMENT                    | * 02650000
* /*      |---------------------------------------------------------| * 02660000
* /*  +204|WORK AREA                                                | * 02670000
* /*      |---------------------------------------------------------| * 02680000
* /*  +216|POINTER TO CURRENT ATAB ELEMENT - 1                      | * 02690000
* /*      |---------------------------------------------------------| * 02700000
* /*  +220|POINTER TO FTAB ELEMENT - 1                              | * 02710000
* /*      |---------------------------------------------------------| * 02720000
* /*  +224|POINTER TO FIRST INPUT BUFFER                            | * 02730000
* /*      |---------------------------------------------------------| * 02740000
* /*  +228|POINTER TO SECOND INPUT BUFFER                           | * 02750000
* /*      |---------------------------------------------------------| * 02760000
* /*  +232|POINTER TO CMD PROCESSOR PARAMETER LIST                  | * 02770000
* /*      |---------------------------------------------------------| * 02780000
* /*  +236|PARAMETERS TO BE PASSED TO STAE EXIT ROUTINE             | * 02790000
* /*      |---------------------------------------------------------| * 02800000
* /*  +248|POINTER TO PARSE CONTROL LIST                            | * 02810000
* /*      |---------------------------------------------------------| * 02820000
* /*  +252|STORAGE FOR SERVICE ROUTINE CONTROL BLOCK                | * 02830000
* /*      |---------------------------------------------------------| * 02840000
* /*  +276|ECB FOR SERVICE ROUTINES                                 | * 02850000
* /*      |---------------------------------------------------------| * 02860000
* /*  +280|AREA FOR HOLDING RETURN CODES INTERNAL TO EXEC           | * 02870000
* /*      |---------------------------------------------------------| * 02880000
* /*  +284|POINTER TO FIRST BLOCK OF ATAB                           | * 02890000
* /*      |---------------------------------------------------------| * 02900000
* /*  +288|END OF CURRENT INPUT BLOCK + 1                           | * 02910000
* /*      |---------------------------------------------------------| * 02920000
* /*  +292|POINTER TO START OF RECORD CURRENTLY BEING PROCESSED     | * 02930000
* /*      |---------------------------------------------------------| * 02940000
* /*  +296|LENGTH OF DYNAMIC PORTION OF MSG TO BE PUT TO TERMINAL   | * 02950000
* /*      |---------------------------------------------------------| * 02960000
* /*  +297|ADDRESS OF DYNAMIC PORTION OF MSG TO BE PUT TO TERMINAL  | * 02970000
* /*      |---------------------------------------------------------| * 02980000
* /*  +300|ID NUMBER OF FIRST LEVEL MSG TO BE PUT TO TERMINAL       | * 02990000
* /*      |---------------------------------------------------------| * 03000000
* /*  +302|ID NUMBER OF SECOND LEVEL MSG TO BE PUT TO TERMINAL      | * 03010000
* /*      |---------------------------------------------------------| * 03020000
* /*  +304|POINTER TO THE PARSE DESCRIPTOR LIST                     | * 03030000
* /*      |---------------------------------------------------------| * 03040000
* /*  +308|AREA FOR SAVING THE ORIGINAL LENGTH OF THE COMMAND BUFFER| * 03050000
* /*      |---------------------------------------------------------| * 03060000
* /*  +310|TOTAL BYTES IN ALL POSITIONAL PARAMETERS           Y01676| * 03070000
* /*      |---------------------------------------------------Y01676| * 03080000
* /*  +312||                                                    Y01676* 03090000
* /*                                                                  * 03100000
* /*                                                                  * 03110000
* /*                                                                  * 03120000
* /* ATTRIBUTES:                                                      * 03130000
* /*    REENTRANT                                                     * 03140000
* /*                                                                  * 03150000
* /*                                                                  * 03160000
* /* NOTES:                                                           * 03170000
* /*    CONSTANTS BEGIN WITH THE LETTERS 'KON' FOLLOWED BY            * 03180000
* /*    THE VALUE OF THE CONSTANT IF IT IS EITHER A DECIMAL           * 03190000
* /*    OR EBCDIC CONSTANT. IF IT IS A HEX CONSTANT, THE 'KON'        * 03200000
* /*    IS FOLLOWED BY 'X' AND THE VALUE OF THE                       * 03210000
* /*    CONSTANT.                                                     * 03220000
* /*    CHARACTER CODE DEPENDENCIES - NONE                           */ 03230000
* /******************************************************************** 03240000
*         GEN;                                                          03250000
&SPN     SETA  1                                                        03260000
         DS    0H                                                       03270000
*         DCL   DUMPARM        FIXED(31);     /* DUMMY PARAMETER USED   03280000
*                                                  SO THAT BSL WILL     03290000
*                                                  NOT USE REG 1      * 03300000
*         DCL   R1   REG(1)    PTR(31);       /* REGISTER 1           * 03310000
* /******************************************************************** 03320000
* /*       CONTAINS THE ADDR OF E01DATDF ON ENTRY. USED               * 03330000
* /*       IN THE MODULE TO PASS THE ADDR OF PARMS TO                 * 03340000
* /*       PARSE AND IKJEFE03. ALSO TO HOLD THE ADDR OF               * 03350000
* /*       THE CURRENT BLOCK OF FTAB.                                 * 03360000
* /******************************************************************** 03370000
*                                                                       03380000
*         DCL   R2   REG(2)    PTR(31);       /* REGISTER 2           * 03390000
* /******************************************************************** 03400000
* /*       USED AS A GENERAL WORK REG AND TO HOLD THE                 * 03410000
* /*       THE ADDRESS OF THE CURRENT ELEMENT OF FTAB.                * 03420000
* /******************************************************************** 03430000
*                                                                       03440000
*         DCL   R3   REG(3)    PTR(31);       /* REGISTER 3           * 03450000
* /******************************************************************** 03460000
* /*       USED TO COMMUNICATE WITH IKJEFE03 ON FREEMAINS             * 03470000
* /******************************************************************** 03480000
*                                                                       03490000
*         DCL   R4   REG(4)    PTR(31);                                 03500000
* /******************************************************************** 03510000
* /*       USED FOR COMMUNICATION WITH IKJEFE03 ON GETMAINS.          * 03520000
* /*       AND FOR HOLDING THE ADDRESS OF THE CURRENT                 * 03530000
* /*       BLOCK OF ATAB.                                             * 03540000
* /******************************************************************** 03550000
*                                                                       03560000
*         DCL   R5   REG(5)    PTR(31);       /* REGISTER 5           * 03570000
* /******************************************************************** 03580000
* /*       USED TO HOLD THE ADDRESS OF THE CURRENT ELEMENT            * 03590000
* /*       OF ATAB.                                                   * 03600000
* /******************************************************************** 03610000
*                                                                       03620000
*         DCL   R6   REG(6)    PTR(31);                                 03630000
* /******************************************************************** 03640000
* /*       USED AS THE BASE REGISTER FOR E01DATDF DURING              * 03650000
* /*       EXECUTION OF IKJEFE02.                                     * 03660000
* /******************************************************************** 03670000
*                                                                       03680000
*         DCL   R15  REG(15)   PTR(31);       /* REGISTER 15          * 03690000
* /******************************************************************** 03700000
* /*       USED TO CHECK RETURN CODES FROM PARSE.                     * 03710000
* /******************************************************************** 03720000
*                                                                       03730000
*         DCL   KON0      FIXED(15) STATIC INIT(0);/* CONSTANT        * 03740000
*                                                  /* DECIMAL 0       * 03750000
*         DCL   KON1      FIXED(15) STATIC INIT(1);/* CONSTANT        * 03760000
*                                                  /* DECIMAL 1       * 03770000
*         DCL   KON2      FIXED(15) STATIC INIT(2);/* CONSTANT        * 03780000
*                                                  /* DECIMAL 2       * 03790000
*         DCL   KON3      FIXED(15) STATIC INIT(3);/* CONSTANT        * 03800000
*                                                  /* DECIMAL 3       * 03810000
*         DCL   KON4      FIXED(15) STATIC INIT(4);/* CONSTANT        * 03820000
*                                                  /* DECIMAL 4       * 03830000
*         DCL   KON6      FIXED(15) STATIC INIT(6);/* CONSTANT        * 03840000
*                                                  /* DECIMAL 6       * 03850000
*         DCL   KON7      FIXED(15) STATIC INIT(7);/* CONSTANT        * 03860000
*                                                  /* DECIMAL 7         03870000
*         DCL   KON8      FIXED(15) STATIC INIT(8);/* CONSTANT        * 03880000
*                                                  /* DECIMAL 8         03890000
*         DCL   KON10      FIXED(15) STATIC INIT(10);                   03900000
*                                                  /* CONSTANT        * 03910000
*                                                  /* DECIMAL 10        03920000
*         DCL   KON11      FIXED(15) STATIC INIT(11);                   03930000
*                                                  /* CONSTANT        * 03940000
*                                                  /* DECIMAL 11        03950000
*         DCL   KON12      FIXED(15) STATIC INIT(12);                   03960000
*                                                  /* CONSTANT        * 03970000
*                                                  /* DECIMAL 12        03980000
*         DCL   KON13      FIXED(15) STATIC INIT(13);                   03990000
*                                                  /* CONSTANT        * 04000000
*                                                  /* DECIMAL 13        04010000
*         DCL   KON16      FIXED(15) STATIC INIT(16);                   04020000
*                                                  /* CONSTANT        * 04030000
*                                                  /* DECIMAL 16      * 04040000
*         DCL   KON20      FIXED(15) STATIC INIT(20);                   04050000
*                                                  /* CONSTANT        * 04060000
*                                                  /* DECIMAL 20      * 04070000
*         DCL   KON21      FIXED(15) STATIC INIT(21);                   04080000
*                                                  /* CONSTANT  DECIMAL 04090000
*                                                     21        Y01676* 04100000
*         DCL   KON24      FIXED(15) STATIC INIT(24);                   04110000
*                                                  /* CONSTANT        * 04120000
*                                                  /* DECIMAL 24      * 04130000
*         DCL   KON26      FIXED(15) STATIC INIT(26);/* CONSTANT        04140000
*                                                     DECIMAL   Y01676* 04150000
*                                                  /* 26        Y01676* 04160000
*         DCL   KON34      FIXED(15) STATIC INIT(34);                   04170000
*                                                  /* CONSTANT        * 04180000
*                                                  /* DECIMAL 34        04190000
*         DCL   KON35      FIXED(15) STATIC INIT(35);                   04200000
*                                                  /* CONSTANT        * 04210000
*                                                  /* DECIMAL 35        04220000
*         DCL   KON58      FIXED(15) STATIC INIT(58);                   04230000
*                                                  /* CONSTANT DECIMAL  04240000
*                                                     58        Y01676* 04250000
*         DCL   KON54      FIXED(15) STATIC INIT(54);                   04260000
*                                                  /* CONSTANT        * 04270000
*                                                  /* DECIMAL 54      * 04280000
*         DCL   KON57      FIXED(15) STATIC INIT(57);                   04290000
*                                                   /* CONSTANT       * 04300000
*                                                  /* DECIMAL 57      * 04310000
*         DCL   KON224      FIXED(15) STATIC INIT(224); /* CONSTANT     04320000
*                                                     DECIMAL           04330000
*                                                        224    Y01676* 04340000
*         DCL   KQUOTE  CHAR(1) INIT('7D'X);  /* QUOTE CONSTANT Y01676* 04350000
*         DCL 1 KONSTRUC  STATIC,             /* HEXADECIMAL CONSTANTS* 04360000
*               2 KONX00  CHAR(1)  INIT('00'X),    /* CONSTANT        * 04370000
*                                                  /* HEX '00'        * 04380000
*               2 KONX20  CHAR(1)  INIT('20'X),    /* CONSTANT        * 04390000
*                                                  /* HEX '20'        * 04400000
*               2 KONX23  CHAR(1)  INIT('23'X),    /* CONSTANT        * 04410000
*                                                  /* HEX '23'        * 04420000
*               2 KONX40  CHAR(1)  INIT('40'X),    /* CONSTANT        * 04430000
*                                                  /* HEX '40'        * 04440000
*               2 KONX80  CHAR(1)  INIT('80'X),    /* CONSTANT        * 04450000
*                                                  /* HEX '80'        * 04460000
*               2 KONXC0  CHAR(1)  INIT('C0'X),    /* CONSTANT        * 04470000
*                                                  /* HEX 'C0'        * 04480000
*               2 KONXFF  CHAR(1)  INIT('FF'X);    /* CONSTANT        * 04490000
*                                                  /* HEX 'FF'        * 04500000
*         DCL 1  E01DATDF  BDY(DWORD)         /* MAJOR STRUCTURE OF   * 04510000
*                            BASED(R6),       /*   USED BY ALL FOUR   * 04520000
*                                             /*   MODULES            * 04530000
*                2 DCBAR     CHAR(88)  BDY(DWORD),                      04540000
*                                                  /* LIVE DCB AREA   * 04550000
*                                                                       04560000
*                2 ADPTR1    PTR(31),              /* PTR USED FOR      04570000
*                                                      INDIRECT ADDRS * 04580000
*                2 ADPTR2    PTR(31),               /* FOR INDIRECT     04590000
*                                                         ADDRESSING  * 04600000
*                2 MMNAMAR   BDY(WORD) CHAR(8),                         04610000
*                                                  /* MEMBER NAME     * 04620000
*                2  RDECB   BDY(WORD) CHAR(20),                         04630000
*                                                  /* STORAGE FOR DECB* 04640000
*                   3 *        CHAR(6),        /* FILLER              * 04650000
*                   3 DECLNGTH FIXED(15),      /* LENGTH OF BLOCK READ* 04660000
*                   3 *        CHAR(8),        /* FILLER              * 04670000
*                   3 DECIOBPT PTR(31),        /* POINTER TO THE IOB  * 04680000
*                2 LINPTR1   PTR(31),              /* ADDR OF INPUT   * 04690000
*                2 EOLCNT    FIXED(31),            /* BYTES REMAINING   04700000
*                                                       IN   LINE     * 04710000
*                2 POSCNT    FIXED(31),      /* NUMBER OF POSITIONAL    04720000
*                                                PARAMETERS FOUND     * 04730000
*                2 TSTLNG    FIXED(31),      /* WORK AREA - USED FOR */ 04740000
*                  3 TSTLNGC   CHAR(4),       /*  ALIGNING TABLE ENTRY* 04750000
*                2 GMNMIN    FIXED(31),      /* MINIMUM AMOUNT OF CORE  04760000
*                                                 TO BE GOTTEN        * 04770000
*                2 GMNMAX    FIXED(31),      /* MAXIMUM AMOUNT OF CORE  04780000
*                                                 TO BE GOTTEN        * 04790000
*                2 ADDGMN    PTR(31),        /* ADDRESS OF GOTTEN CORE* 04800000
*                2 AMTGMN    FIXED(31),      /*  AMOUNT OF CORE GOTTEN* 04810000
*                2 SP78ADDR  PTR(31),        /* PTR TO SUBPOOL78 CORE*/ 04820000
*                2 SP78LNGT  PTR(31),        /* LENGTH OF SUBPOOL78  */ 04830000
*                                            /*   CORE               */ 04840000
*                2 RDXCNV  FIXED(31),        /* WORK AREA FOR        */ 04850000
*                  3  *              CHAR(3),      /*  CONVERTING BASE* 04860000
*                  3  DDIG           CHAR(1),      /* OF NO. PARMS    * 04870000
*                2 POSSPC    FIXED(31),      /* NUMBER OF POSITIONAL    04880000
*                                                  PARAMERS SPECIFIED * 04890000
*                2 ATABIND   PTR(31),        /*  PTR TO START OF        04900000
*                                                      CURRENT BLOCK OF 04910000
*                                                      ATAB           * 04920000
*                2 ATABCUR   PTR(31),        /*  PTR TO CURRENT         04930000
*                                                      ELEMENT OF ATAB* 04940000
*                2 FTABIND   PTR(31),        /*  PTR TO START OF        04950000
*                                                     CURRENT BLOCK OF  04960000
*                                                     FTAB            * 04970000
*                2 FTABCUR   PTR(31),        /*  PTR TO CURRENT         04980000
*                                                     ELEMENT OF ATAB * 04990000
*                2 VALCNT    FIXED(31),      /*     NUMBER OF BYTES IN  05000000
*                                                     VALUE OF KEYWORD  05010000
*                                                     WITH VALUE      * 05020000
*                2 KWOCNT    FIXED(15),       /* NUMBER OF KWRD W/O   * 05030000
*                                             /*   VALUE PARMS        * 05040000
*                2 KWWCNT    FIXED(15),       /* NUMBER OF KWRD WITH  * 05050000
*                                             /*   VALUE PARMS        * 05060000
*                2 KWOBYT    FIXED(15),       /*   SIZE OF KWRD W/O   * 05070000
*                                             /*   VALUE PARMS        * 05080000
*                2 KWWBYT    FIXED(15),       /*   SIZE OF KWRD W/O   * 05090000
*                                             /*   VALUE PARMS        * 05100000
*                2 CNVA   FIXED(15),          /*WORKAREA FOR UNALIGNED* 05110000
*                  3 CNVC   CHAR(2),          /*  ARITHMETIC ITEMS    * 05120000
*                2 E01BINSW BDY(HWORD),       /*  BINARY SWITCHES     * 05130000
*                  3 E01SW1 BIT(1),           /* SWITCH 1             * 05140000
*                                             /* SET TO ONE WHEN        05150000
*                                                      PROCESSING       05160000
*                                                       IMPLICIT EXEC * 05170000
*                  3 E01SW2 BIT(1),            /* SWITCH 2            * 05180000
*                                              /* SET TO ONE WHEN       05190000
*                                                      IKJEFE03 IS CALL 05200000
*                                                       ED TO READ 1ST  05210000
*                                                        LINE         * 05220000
*                  3 E01SW3 BIT(1),             /* SWITCH 3           * 05230000
*                                               /*SET TO ONE IF THE     05240000
*                                                     PROCEDURE DOES    05250000
*                                                      NOT HAVE A PROC  05260000
*                                                       STATEMENT     * 05270000
*                  3 E01SW4 BIT(1),              /* SWITCH 4          * 05280000
*                                                /*SET TO ONE IF 1ST    05290000
*                                                     LINE IS NOT EMPTY 05300000
*                                                                     * 05310000
*                  3 E01SW5 BIT(1),              /* SWITCH 5          * 05320000
*                                                /*SET TO ONE ON AN     05330000
*                                                     ABEND           * 05340000
*                  3 E01SW6 BIT(1),              /* SWITCH 6          * 05350000
*                                                /*SET TO ONE WHEN      05360000
*                                                     THE PROMPT OPTION 05370000
*                                                      WAS SPECIFIED ON 05380000
*                                                      THE INVOCATION   05390000
*                                                     STATEMENT Y01676* 05400000
*                  3 E01SW7 BIT(1),              /* SWITCH 7          * 05410000
*                                                /*SET TO ONE WHEN      05420000
*                                                   IKJEFE03 IS CALL-   05430000
*                                                      ED TO READ LINE  05440000
*                                                       OTHER THAN 1ST* 05450000
*                  3 E01SW8 BIT(1),              /* SWITCH 8          * 05460000
*                                                /*SET TO ONE IF RCD    05470000
*                                                     FMT IS VARIABLE * 05480000
*                  3 E01SW9 BIT(1),              /* SWITCH 9          * 05490000
*                                                /*SET TO ONE IF PROC   05500000
*                                                     CANNOT BE EXECUT- 05510000
*                                                      ED             * 05520000
*                  3 E01SW10 BIT(1),             /* SWITCH 10         * 05530000
*                                                /* SET TO ONE WHEN     05540000
*                                                     IKFEFE03 HAS BEEN 05550000
*                                                     CALLED TO DO A    05560000
*                                                     GETMAIN         * 05570000
*                  3 E01SW11 BIT(1),             /* SWITCH 11         * 05580000
*                                                /*SET TO ONE WHEN      05590000
*                                                     DATA SET HAS BEEN 05600000
*                                                        CLOSED       * 05610000
*                  3 E01SW12 BIT(1),             /* SWITCH 12         * 05620000
*                                                /*SET TO ONE WHEN      05630000
*                                                     CORE HAS BEEN     05640000
*                                                      OBTAINED FROM SP 05650000
*                                                       78            * 05660000
*                  3 E01SW13 BIT(1),             /* SWITCH 13         * 05670000
*                                                /* SET TO ONE WHEN     05680000
*                                                     IKFEFE03 HAS BEEN 05690000
*                                                     CALLED TO DO A    05700000
*                                                     FREEMAIN        * 05710000
*                  3 E01SW14 BIT(1),             /* SWITCH 14         * 05720000
*                                                /*SET TO ONE WHEN      05730000
*                                                     SP78 OVFLOW HAS   05740000
*                                                      CAUSED SP0 TO BE 05750000
*                                                        OBTAINED     * 05760000
*                  3 E01SW15 BIT(1),          /* SET TO ONE WHEN THE  * 05770000
*                                             /* MINIMUM AMT OF CORE  * 05780000
*                                             /*   COULD NOT BE GOTTEN* 05790000
*                  3 E01SW16 BIT(1),             /* SWITCH 16         * 05800000
*                2 REGSAV(3) FIXED(31),          /* SAVE AREA         * 05810000
*                2 LATAB   PTR(31),              /* PTR TO PREVIOUS ATA 05820000
*                                                ELEMENT              * 05830000
*                2 LFTAB   PTR(31),           /* PTR TO PREVIOUS FTAB   05840000
*                                                ELEMENT              * 05850000
*                2 BFAPTR  FIXED(31),         /* POINTER TO INPUT BFR * 05860000
*                2 BFBPTR  PTR(31),           /* POINTER TO INPUT BFR * 05870000
*                2 CPPLPTR   PTR(31),         /*  ADDRESS OF CPPL     * 05880000
*                2 STPRM(3)  FIXED(31),                                 05890000
*                2 PPLPTR PTR(31),            /* POINTER TO CONTROL   * 05900000
*                2 CBCOR CHAR(24),            /* STORAGE FOR SERVICE  * 05910000
*                                             /*  ROUTINE CONTROL BLCK* 05920000
*                                             /*   BLOCK FOR SERVICE  * 05930000
*                                             /*   ROUTINES           * 05940000
*                                             /*     TOR LIST         * 05950000
*                2 SRECB  FIXED(31),          /*   SERV ROUT ECB      * 05960000
*                2 RETCDAR   FIXED(31),       /*    AREA FOR RETURN   * 05970000
*                                             /*      CODE            * 05980000
*               2 ABLK1     PTR(31),         /* PTR TO FIRST BLOCK    * 05990000
*                                            /*   OF ATAB            */ 06000000
*                2 EOB       PTR(31),         /* END OF CURRENT INPUT * 06010000
*                                             /*   BLOCK + 1          * 06020000
*                2 RCDST     PTR(31),         /* PTR TO START OF CUR- * 06030000
*                                             /*   RENT RECORD        * 06040000
*                2 VARSGLNG  CHAR(1),         /* LENGTH OF VARIABLE   * 06050000
*                2 VARSGADR  PTR(24),         /* ADDRESS OF VARIABLE  * 06060000
*                2 VARSGLN2  CHAR(1),         /*  LENGTH OF VARIABLE  * 06070000
*                                             /*    PART OF MSG TO BE * 06080000
*                                             /*    PUT OUT           * 06090000
*                2 VARSGAD2  PTR(24),         /*  ADDRESS OF VARIABLE * 06100000
*                                             /*    PART OF MSG TO BE * 06110000
*                                             /*    PUT OUT           * 06120000
*                2 LVL1NO    FIXED(15),       /* NUMBER OF FIRST LEVEL* 06130000
*                                             /*   MESSAGE            * 06140000
*                2 LVL2NO    FIXED(15),       /*NUMBER OF SECOND LEVEL* 06150000
*                                             /*    MESSAGE           * 06160000
*                2 PDLPTR    PTR(31),         /* POINTER TO THE PARSE * 06170000
*                                             /*   DESCRIPTOR LIST    * 06180000
*               2 DRDNPTR BDY(WORD),          /* AREA FOR DSNAME      * 06190000
*                 3 DSNARLNG FIXED(15),       /* LENGTH OF DSNAME     * 06200000
*                   4 DSNARLCH CHAR(2),       /*                      * 06210000
*                 3 DSNAMAR  CHAR(44),        /* DSNAME               * 06220000
*                2 CBUFLSAV  FIXED(15),       /* SAVE AREA FOR CMD BFR* 06230000
*                 3 CBUFLSAC CHAR(2),         /*    LENGTH      Y01676* 06240000
*                2 POSBYT FIXED(15);          /* SIZE OF POSITIONAL     06250000
*                                                PARAMETERS     Y01676* 06260000
** /* *************************************************************** * 06270000
** /* THE COMMAND PROCESSOR PARAMETER LIST (CPPL) IS A LIST OF        * 06280000
** /* ADDRESSES PASSED FROM THE TMP TO THE CP VIA REGISTER 1          * 06290000
** /* *************************************************************** * 06300000
** DECLARE                                                              06310000
**   1 CPPL BASED(CPPLPTR),                                             06320000
**    2 CPPLCBUF PTR(31),             /* PTR TO COMMAND BUFFER        * 06330000
**    2 CPPLUPT  PTR(31),             /* PTR TO UPT                   * 06340000
**    2 CPPLPSCB PTR(31),             /* PTR TO PSCB                  * 06350000
**    2 CPPLECT  PTR(31);             /* PTR TO ECT                   * 06360000
**                                                                      06370000
*         DCL   ECTPTR   PTR(31)  BASED(ADDR(CPPLECT));                 06380000
*                                             /* POINTER TO THE ECT   * 06390000
** DECLARE                                                              06400000
**   1 ECT      BASED(ECTPTR),                                          06410000
** /* *************************************************************** * 06420000
** /* THE ENVIRONMENT CONTROL TABLE (ECT) IS BUILT BY THE TMP AND     * 06430000
** /* STORED IN A NON-SHARED SUBPOOL. ITS FIELDS CAN BE MODIFIED      * 06440000
** /* BY A CP OR SERVICE RTN BUT NOT FREED.                           * 06450000
** /* *************************************************************** * 06460000
**                                                                      06470000
**    2 ECTRCDF  CHAR(1),             /* HIGH ORDER BIT INDICATES CP    06480000
**                                       ABENDED                      * 06490000
**    2 ECTRTCD PTR(24),              /* RETURN CODE FROM LAST CP OR    06500000
**                                       ABEND CODE IF ECTRCDF IS SET * 06510000
**    2 ECTIOWA  PTR(31),             /* ADDR I/O SRV RTNS WORK AREA  * 06520000
**    2 ECTMSGF  CHAR(1),             /* HIGH ORDER BIT SET MEANS       06530000
**                                       DELETE SECOND LEVEL MSG      * 06540000
**    2 ECTSMSG  PTR(24)  BDY(BYTE),                                    06550000
**                                    /* ADDR OF SECOND LEVEL MSG       06560000
**                                       CHAIN                        * 06570000
**    2 ECTPCMD  CHAR(8),             /* PRIMARY COMMAND NAME         * 06580000
**    2 ECTSCMD  CHAR(8),             /* SUBCOMMAND NAME              * 06590000
**    2 ECTSWS   CHAR(1),             /* 4 BYTES OF SWITCHES          * 06600000
**     3 ECTNOPD  BIT(1),             /* 0 BIT ON= NO OPERANDS EXIST    06610000
**                                       IN CMD BUFFER                * 06620000
**     3 *        BIT(1),             /* RESERVED                     * 06630000
**     3 ECTATRM  BIT(1),             /* CP TERMINATED BY TMP DETACH    06640000
**                                       W/ STAE EQU                  * 06650000
**     3 ECTLOGF  BIT(1),             /* LOGON/OFF REQUESTED TMP TO     06660000
**                                       LOGOFF USER BITS             * 06670000
**     3 ECTNMAL BIT(1),              /* NO USER MSGS TO BE RECVED AT   06680000
**                                       LOGON                        * 06690000
**     3 ECTNNOT BIT(1),              /* NO BRDCST NOTICES TO BE RECVED 06700000
**                                       LOGON                        * 06710000
**     3 ECTBKGRD BIT(1),             /* BACKGROUND MODE              * 06720000
**     3 *        BIT(1),             /* RESERVED                     * 06730000
**    2 ECTDDNUM PTR(24),             /*COUNTER FOR TEMPORARY DDNAMES * 06740000
**    2 ECTUSER  PTR(31),             /*RESERVED FOR INSTALLATION USE * 06750000
**    2 ECTBKPB  PTR(31);             /*ADDR OF BACKGROUND PARM BLOCK * 06760000
**                                                                      06770000
*         DCL   CBUFPTR        PTR(31) BASED(ADDR(CPPLCBUF));           06780000
*                                             /* POINTER TO CMD BUFFER* 06790000
*         DCL 1 CBUF BASED(CBUFPTR),          /* NAME OF TABLE        * 06800000
*               2 CBUFLNG PTR(16),            /* TOTAL LENGTH OF CBUF * 06810000
*               2 CBUFOFF PTR(16),            /* CURRENT DATA FIELD   * 06820000
*                                             /*   OFFSET             * 06830000
*               2 CBUFDATA CHAR(1);           /* VAR LENGTH DATA FIELD* 06840000
** DECLARE                                                              06850000
**   1 PPL      BASED(PPLPTR),                                          06860000
** /* *************************************************************** * 06870000
** /* THE PARSE PARAMETER LIST (PPL) IS A LIST OF ADDRESSES PASSED    * 06880000
** /* FROM THE INVOKER TO PARSE VIA REGISTER 1                        * 06890000
** /* *************************************************************** * 06900000
**                                                                      06910000
**                                                                      06920000
**                                                                      06930000
**                                                                      06940000
**                                                                      06950000
**                                                                      06960000
**                                                                      06970000
**                                                                      06980000
**                                                                      06990000
**                                                                      07000000
**    2 PPLUPT   PTR(31),             /* PTR TO UPT                   * 07010000
**    2 PPLECT   PTR(31),             /* PTR TO ECT                   * 07020000
**    2 PPLECB   PTR(31),             /* PTR TO CP'S ECB              * 07030000
**    2 PPLPCL   PTR(31),             /* PTR TO PCL                   * 07040000
**    2 PPLANS   PTR(31),             /* PTR TO ANS PLACE             * 07050000
**    2 PPLCBUF  PTR(31),             /* PTR TO CMD BUFFER            * 07060000
**    2 PPLUWA   PTR(31);             /* PTR TO USER WORK AREA (FOR     07070000
**                                       VALIDITY CK RTNS)            * 07080000
**                                                                      07090000
*         DCL   TEM01          FIXED(31);     /* WORK AREA            * 07100000
*         DCL   1 ATAB    BDY(WORD) BASED(ATABIND),                     07110000
*                                             /*   ARGUMENT TABLE     * 07120000
*                 2 ATABLST    PTR(31),       /*PTR TO PREV ATAB BLOCK* 07130000
*                                             /* - ZERO IF THIS IS THE* 07140000
*                                             /*     FIRST BLOCK      * 07150000
*                 2 ATABNXT    PTR(31),       /*PTR TO NEXT ATAB BLOCK* 07160000
*                                             /*- ZERO IF THIS IS LAST* 07170000
*                 2 ATABLNG    FIXED(31);     /* LENGTH OF THIS BLOCK * 07180000
*                                             /*  OF ATAB             * 07190000
*         DCL   1 ATABELMT  BDY(WORD)  BASED(ATABCUR),  /* ELEMENTS   * 07200000
*                    3 FTABPTR CHAR(4),       /* PTR TO CORRESPONDING * 07210000
*                                             /*  FTAB ELEMENT        * 07220000
*                    3 ATABFLGS   CHAR(1),    /* FLAGS FOR ATAB       * 07230000
*                                             /*BIT 0 = KWORD W. VALUE* 07240000
*                                             /*BIT 1 = KWORD WO VALUE* 07250000
*                                             /*  BIT 2 = LAST ENTRY  * 07260000
*                    3 ATABELNC CHAR(2),                                07270000
*                                             /* LENGTH OF SYMBOLIC   * 07280000
*                                             /*  PARAMETER           * 07290000
*                    3 ATABDAT    CHAR(256);                            07300000
*                                             /* SYMBOLIC PARAMETER   * 07310000
*         DCL   1 FTAB    BDY(WORD) BASED(FTABIND),                     07320000
*                                             /* FUNCTION TABLE       * 07330000
*                 2 FTABLST    PTR(31),       /* PTR TO PREVIOUS FTAB * 07340000
*                                            /*BLOCK - ZERO IF THIS IS* 07350000
*                                             /*  FIRST               * 07360000
*                 2 FTABNXT    PTR(31),       /*PTR TO NEXT FTAB BLOCK* 07370000
*                                             /* - ZERO IF THIS IS THE* 07380000
*                                             /*     LAST             * 07390000
*                 2 FTABLNG    FIXED(15),     /* LENGTH OF THIS BLOCK * 07400000
*                                             /*  OF FTAB             * 07410000
*                2 FTABDLNG   FIXED(15);           /* NUMBER OF BYTES * 07420000
*                                                  /* IN THIS BLOCK   * 07430000
*                                                  /* WHICH ARE IN USE* 07440000
*         DCL   1 FTABELMT  BDY(WORD) BASED(FTABCUR),   /* ELEMENTS   * 07450000
*                    3 FTABELNG     CHAR(4),  /* LENGTH OF THIS VALUE * 07460000
*                    3 FTABDAT    CHAR(256);  /* VALUE FOR CORRESPONDIN 07470000
*                                                 SYMBOLIC PARAMETER  * 07480000
*         DCL   POSAR     FIXED(31);          /* AMT OF STORAGE NEEDED* 07490000
*                                             /*  FOR PCE'S FOR POSIT-* 07500000
*                                             /*   IONAL PARAMETERS   * 07510000
*         DCL   KWOAR     FIXED(31);          /* AMT OF STORAGE NEEDED* 07520000
*                                             /*  FOR PCE'S FOR KEYWRD* 07530000
*                                             /*   PARMS WITHOUT VALUE* 07540000
*         DCL   KWWAR     FIXED(31);          /* AMT OF STORAGE NEEDED* 07550000
*                                             /*  FOR PCE'S FOR KEYWRD* 07560000
*                                             /*   PARMS WITH VALUE   * 07570000
*         DCL   PCLIND    PTR(31);            /* PTR TO START OF PCL  * 07580000
*         DCL   PCLCUR    PTR(31);            /* PTR TO CURRENT ELEMNT* 07590000
*                                             /*  OF THE PCL          * 07600000
*         DCL   PDLIND    PTR(31);            /* PTR TO START OF PDL  * 07610000
*         DCL 1 PDLCUR    PTR(31),            /* CURRENT OFFSET FOR   * 07620000
*               2 *       CHAR(2),            /*  NEXT PDL ELEMENT    * 07630000
*               2 PDLCURC CHAR(2);            /*  OR ADDRESS OF THIS  * 07640000
*                                             /*  PDL ELEMENT         * 07650000
*         DCL   SBFCUR    PTR(24);            /* PTR TO CURRENT SUB-  * 07660000
*                                             /*  FIELD ELEMENT       * 07670000
*         DCL   PCELMT    CHAR(57)  BASED(PCLCUR); /* DUMMY FOR MOVES * 07680000
*                                             /*      INTO PCES       * 07690000
*         DCL   1  PARMMOD  BDY(WORD)  BASED(PCLIND),                   07700000
*                                             /*  DUMMY OF FIRST  PCE * 07710000
*                  2 LOPCL  FIXED(15),        /* LENGTH OF PCL        * 07720000
*                  2 LOPDL  FIXED(15),        /* LENGTH OF PDL        * 07730000
*                  2 OTKW   FIXED(15);        /* OFFSET TO KEYWORD PCE* 07740000
*         DCL   1  IDMOD  CHAR(57)  STATIC  BDY(WORD),                  07750000
*                                             /* MODEL OF IDENT PCE   * 07760000
*                  2 *  CHAR(2)  INIT('9000'X), /* TYPE INDICATOR AND * 07770000
*                                             /*   PROMPT BIT         * 07780000
*                  2 *  FIXED(15) INIT(57),   /* PCE LENGTH           * 07790000
*                  2 *  FIXED(31) INIT(000),  /* ANY CHAR ACCEPTED    * 07800000
*                  2 *  CHAR(1)  INIT('00'X), /* ANY CHAR ACCEPTED    * 07810000
*                  2 *  CHAR(2)  INIT('001A'X),/* LENGTH OF PARM TYPE * 07820000
*                                             /*   IS 22              * 07830000
*                  2 *  CHAR(2)  INIT('0012'X),                         07840000
*                  2 *  CHAR(22) INIT('POSITIONAL PARAMETER  '),        07850000
*                                             /* PARM TYPE -POSITIONAL* 07860000
*                  2 *  CHAR(1)  INIT('14'X), /* LENGTH OF PROMPT INFO* 07870000
*                                             /*   IS 21              * 07880000
*                  2 *  CHAR(21) INIT('POSITIONAL PARAMETER ');         07890000
*                                             /* PRMPT INFO -         * 07900000
*                                             /*  POSITIONAL          * 07910000
*         DCL   1  KWMOD  CHAR(11)  STATIC  BDY(WORD),                  07920000
*                                             /* MODEL OF KEYWORD PCE * 07930000
*                  2 *  CHAR(2)  INIT('4000'X), /* TYPE INDICATOR     * 07940000
*                  2 *  FIXED(15) INIT(6),    /* LENGTH OF KWRD PCE   * 07950000
*                  2 *  FIXED(15),            /* FILL                 * 07960000
*                  2 *  CHAR(2)  INIT('6000'X), /* TYPE INDICATOR FOR * 07970000
*                                             /*   NAME PCE           * 07980000
*                  2 * CHAR(3);               /* FILL                 * 07990000
*         DCL   1  DUMIDENT    CHAR(313)  BASED(PCLCUR),      /*Y01676* 08000000
*                                             /* DUMMY OF IDENT PCE   * 08010000
*                  2 *  BIT(3),               /* FILL                 * 08020000
*                  2 IDMODPMB  BIT(1),        /* PROMPT BIT           * 08030000
*                  2 *  BIT(12),              /* FILL                 * 08040000
*                  2 IDMODLEN FIXED(15),      /* LEN OF THE PCE Y01676* 08050000
*                    3 IDMODLNG  CHAR(2),     /* REDEF OF LEN   Y01676* 08060000
*                  2 IDMODPDL  CHAR(2),       /* OFFSET IN PDL FOR    * 08070000
*                                             /*   THIS ELEMENT       * 08080000
*                  2 *  CHAR(7),              /* FILL                 * 08090000
*                  2 IDMODTYP  CHAR(22),      /* PORTION OF TYPE FIELD* 08100000
*                                             /* WHICH CAN BE REPLACED* 08110000
*                  2 IDPRLEN CHAR(1),         /* PROMPT LENGTH  Y01676* 08120000
*                  2 IDPOSPMT CHAR(277),      /* PROMPT INFORMATION     08130000
*                                                AREA           Y01676* 08140000
*                    3 * CHAR(21),            /* CONSTANT INFO  Y01676* 08150000
*                    3 POSNAME CHAR(256);     /* VARIABLE NAME  Y01676* 08160000
*         DCL   1  DUMKWORD              BASED(PCLCUR),                 08170000
*                                             /* DUMMY OF KEYWORD AND * 08180000
*                                             /*   NAME  PCES         * 08190000
*                  2 *  CHAR(4),              /* FILL                 * 08200000
*                  2 KWPDL     CHAR(2),       /* OFFSET IN PDL FOR    * 08210000
*                                             /*   THIS ELEMENT       * 08220000
*                  2 *  BIT(5),               /* FILL                 * 08230000
*                  2 KWSFB  BIT(1),           /* SUBFIELD BIT         * 08240000
*                  2 *  BIT(10),              /* FILL                 * 08250000
*                  2 KWELNG    CHAR(2),       /* NAME ELEMENT LENGTH  * 08260000
*                  2 KWNAMLNG  CHAR(1),       /* LENGTH OF THE NAME   * 08270000
*                  2 KWDAT     CHAR(256);     /* ACTUAL KWRD          * 08280000
*         DCL   TYPKW  CHAR(22)  INIT(' VALUE FOR KEYWORD    ');        08290000
*                                             /* SUBSTITUTED IN PARM  * 08300000
*                                             /*  TYPE OF IDENT FOR   * 08310000
*                                             /*   KWORD WITH VALUE   * 08320000
*         DCL   KWSBO  CHAR(2)  BASED(PCLCUR - 2);                      08330000
*                                             /* OFFSET TO SUBFIELD   * 08340000
*                                             /* ELEMENT FOR KWORD    * 08350000
*                                             /* WITH VALUE  PARMS    * 08360000
*         DCL   SBFMOD  CHAR(3) INIT('000000'X); /*MOD OF SUBFIELD PCE* 08370000
*         DCL   1 DUMSBF  BASED(SBFCUR),      /* DUMMY OF SUBFIELD PCE* 08380000
*                 2  *  CHAR(1),              /* FILL                 * 08390000
*                 2  NSBFOF  CHAR(2);         /* OFFSET TO NEXT SUBFLD* 08400000
*         DCL  1 NLOC   PTR(31)   AUTO,       /* USED FOR INDIRECT      08410000
*                                                ADDRESSING     Y01676* 08420000
*                2   NLOCC   CHAR(4);         /* CHAR REDEFINE  Y01676* 08430000
*         DCL   FREP   CHAR(32766)  BASED(NLOC); /* USED AS THE OBJECT  08440000
*                                               INDIRECT ADDR   Y01676* 08450000
*         DCL   1 DUMIPDE  BDY(WORD)  BASED(PDLCUR),                    08460000
*                                             /* DUMMY OF IDENT PDE   * 08470000
*                  2 IPDEPTRC  CHAR(4),       /* PTR TO CHAR STRING   * 08480000
*                  2 IPDELNG   FIXED(15),     /* LENGTH OF CHAR STRING* 08490000
*                    3 IPDELNGC  CHAR(2),     /* BYTE REDEFINITION    * 08500000
*                  2 IPDEFLGS  CHAR(1);       /* FLAGS                * 08510000
*         DCL   1 DUMKPDE  BDY(WORD)  BASED(PDLCUR),                    08520000
*                                             /* DUMMY OF KWRD PDE    * 08530000
*                  2 KPDENUM   FIXED(15);     /* NUMBER OF FOUND NAME * 08540000
*         DCL   1 EKPDE  BDY(WORD)  BASED(PDLIND),            /*Y01676* 08550000
*                                             /* DUMMY OF KWRD  Y01676* 08560000
*                  2 ELISTPDE FIXED(15),      /* PDES FOR       Y01676* 08570000
*                  2 EPRMTPDE FIXED(15);      /* EXP SYNTAX     Y01676* 08580000
*         DCL   QALIST   LABEL  EXTERNAL  NONLOCAL;                     08590000
*                                             /* PTR TO PCL           * 08600000
*         DCL                                                           08610000
*              1 QPOSMOD  CHAR(7) STATIC BDY(WORD), /* MODEL QS Y01676* 08620000
*                2 *  CHAR(2)  INIT('2000'X), /* PCE-TYPE FLAGS Y01676* 08630000
*                2 *  FIXED(15)  INIT(7),     /* LENGTH OF PCL  Y01676* 08640000
*                2 *  FIXED(15)  INIT(0),     /* OFFSET IN PDL FOR      08650000
*                                                THIS ELEMENT   Y01676* 08660000
*                2 *  CHAR(1)  INIT('09'X);   /* IKJPOSIT TYPE  Y01676* 08670000
*                                                             /*Y01676* 08680000
*         DCL                                                 /*Y01676* 08690000
*              1  DUMQPOS  CHAR(7) BASED(PCLCUR), /* MAP OF     Y01676* 08700000
*                2  QMODOPT  CHAR(2),         /* QSTRING PCE    Y01676* 08710000
*                2  QMODLGN  FIXED(15),       /* LENGTH FLD     Y01676* 08720000
*                2  QMODOFF  CHAR(2),         /* PDL OFFSET     Y01676* 08730000
*                2  QMODTYP  CHAR(1);         /* PCE TYPE       Y01676* 08740000
*                                                             /*Y01676* 08750000
*        DCL                                                  /*Y01676* 08760000
*             1  DUMQPDE  BDY(WORD) BASED(PDLCUR), /* MAP OF QSTRING    08770000
*                                                PDE            Y01676* 08780000
*               2  QSPDEPTR  PTR(31),        /* POINTER TO QS   Y01676* 08790000
*               2  QSPDELEN  FIXED(15),      /* Q-STRING LENGTH Y01676* 08800000
*               2  QSPDEFLG  BIT(8),         /* FLAGS           Y01676* 08810000
*                 3  QSPRES  BIT(1),         /* Q-STRING WAS    Y01676* 08820000
*                 3  *  BIT(7),              /* SPECIFIED       Y01676* 08830000
*               2  *  CHAR(1);                                /*Y01676* 08840000
*  /*                                                                 * 08850000
*  /*                          RUNNING CODE                           * 08860000
*  /*                                                                 * 08870000
* /******************************************************************** 08880000
**/*IKJEFE02: CHART (AMODE) */                                          08890000
**/*HEADER                                                              08900000
**/*EXEC     D82    IKJEFE02                                            08910000
**/*                                                                  * 08920000
**/*START: E START */                                                   08930000
* /******************************************************************** 08940000
*          RESTRICT (R2,R4,R5,R6);            /* RESERVE REGISTERS      08950000
*                                                1, 2, 4, AND 5       * 08960000
*         R6 = R1;                            /* SET POINTER TO         08970000
*                                                IKJEFE01 VALUES      * 08980000
         LR    @6,@1                                              0077  08990000
*                                                                       09000000
* /******************************************************************** 09010000
**/*E02PED03:      D (NO,,YES,%D1) WERE SYMBOLIC PARMS DEFINED IN PROC  09020000
**/* */                                                                 09030000
**/*      D (NO,,YES,E02MML05) IS IT IMP EXEC WITH PARMS ON INVO STMT * 09040000
**/*      D (YES,E02EXT15,NO,%D35) IS IT IMPLICIT EXEC? */              09050000
* /******************************************************************** 09060000
*         /***********************************************************/ 09070000
*         /*       FOLLOWING CODE CHECKS WHETHER THERE COULD LEGALLY  * 09080000
*         /*       BE PARMS ON THE INVOCATION STATEMENT. IF NOT AND   * 09090000
*         /*       IT IS AN IMPLICIT EXEC WE CAN CHECK WHETHER        * 09100000
*         /*       THERE ARE ANY FROM THE ECT. IF IT IS EXPLICIT      * 09110000
*         /*       HOWEVER WE MUST GO TO PARSE TO FIND IF THERE       * 09120000
*         /*       ARE ANY ON THE CALLING STATEMENT.                  * 09130000
*         /***********************************************************/ 09140000
* E02PED03: R4  = ATABIND;                    /* SET POINTER TO ATAB  * 09150000
E02PED03 L     @4,172(0,@6)                                       0078  09160000
*         IF  R4 = KON0                       /* IF NO SYMBOLIC PARMS * 09170000
*           THEN                              /*   WERE FOUND         * 09180000
         CH    @4,KON0                                            0079  09190000
         BC    07,@9FF                                            0079  09200000
*             DO;                             /*   THEN               * 09210000
*               IF ECTNOPD = '0'B & E01SW1 = '1'B                       09220000
*                 THEN                        /* IF IT WAS AN IMPLICIT* 09230000
         L     @3,232(0,@6)                                       0081  09240000
         L     @3,12(0,@3)         ECTPTR                         0081  09250000
         TM    28(@3),B'10000000'                                 0081  09260000
         BC    05,@9FE                                            0081  09270000
         TM    202(@6),B'10000000'                                0081  09280000
         BC    12,@9FD                                            0081  09290000
*                   DO;                       /*  EXEC AND PARMS WERE * 09300000
*                     LVL1NO = KON10;         /* ON CALLING STMT - IT * 09310000
         MVC   304(2,@6),KON10                                    0083  09320000
*                     LVL2NO = KON1;          /*  IS AN ERROR SO      * 09330000
         MVC   306(2,@6),KON1                                     0084  09340000
*                     VARSGLN2 = KONX00;      /* SET LNGTH OF 2ND VAR * 09350000
         MVC   300(1,@6),KONSTRUC                                 0085  09360000
*                     GOTO E02MML05;          /*  PUT MSG AND RETURN  * 09370000
         BC    15,E02MML05                                        0086  09380000
*                   END;                                                09390000
*               IF E01SW1 = '1'B              /* IF IMPLICIT AND PARMS* 09400000
*                 THEN                        /*  NOT ON CALLING STMT * 09410000
@9FD     EQU   *                                                  0088  09420000
@9FE     TM    202(@6),B'10000000'                                0088  09430000
*                   GOTO E02EXT15;            /*  RETURN W/O MESSAGE  * 09440000
         BC    01,E02EXT15                                        0089  09450000
*               GOTO E02PIC05;                /* IF EXPLICIT GO TO      09460000
*                                                PARSE THE BUFFER     * 09470000
         BC    15,E02PIC05                                        0090  09480000
*             END;                            /* STEP  BACKWARDS      * 09490000
*                                                                       09500000
* /******************************************************************** 09510000
**/*%D1:      P CALCULATE AMOUNT OF CORE NEEDED FOR PCL */              09520000
**/*      S IKJEFE03: PERFORM GETMAIN */                                09530000
**/*      D (YES,,NO,E02EXT15) WAS GETMAIN SUCCESSFUL? */               09540000
* /******************************************************************** 09550000
*         /************************************************************ 09560000
*         /*                      THE FOLLOWING CODE DETERMINES       * 09570000
*         /*                      AND OBTAINS THE CORRECT AMOUNT      * 09580000
*         /*                      OF STORAGE NEEDED FOR THE PCL       * 09590000
*         /************************************************************ 09600000
*         POSAR = POSCNT * KON57 + POSBYT;   /* AMT FOR POSITIONALS     09610000
*                                                PLUS SIZE      Y01676* 09620000
@9FF     LH    @F,KON57                                           0092  09630000
         M     @E,132(0,@6)                                       0092  09640000
         AH    @F,360(0,@6)                                       0092  09650000
         ST    @F,POSAR                                           0092  09660000
*         KWOAR = KWOCNT * KON11 + KWOBYT;   /* AMT FOR KWRD W/O VALUE* 09670000
         LH    @E,KON11                                           0093  09680000
         MH    @E,192(0,@6)                                       0093  09690000
         AH    @E,196(0,@6)                                       0093  09700000
         ST    @E,KWOAR                                           0093  09710000
*         KWWAR = KWWCNT * KON58 + KWWBYT;   /* AMT FOR KWRD WITH       09720000
*                                               VALUE           Y01676* 09730000
         LH    @E,KON58                                           0094  09740000
         MH    @E,194(0,@6)                                       0094  09750000
         AH    @E,198(0,@6)                                       0094  09760000
         ST    @E,KWWAR                                           0094  09770000
*         R2 = POSAR + KWOAR + KWWAR + KON7;  /* TOTAL AMT FOR PCL    * 09780000
         LH    @2,KON7                                            0095  09790000
         A     @2,KWWAR                                           0095  09800000
         A     @2,KWOAR                                           0095  09810000
         A     @2,POSAR                                           0095  09820000
*         R2  = R2 + KON7;                    /* SET HIGHER THAN NEXT * 09830000
         AH    @2,KON7                                            0096  09840000
*         GEN;                                /*     HIGHER MULT OF 8 * 09850000
         SRL   R2,3                REDUCE TO NEXT LOWER                 09860000
         SLL   R2,3                MULTIPLE OF 8                        09870000
         DS    0H                                                       09880000
*         R4  = KON1;                         /* SET SUBPOOL INDICATOR* 09890000
         LH    @4,KON1                                            0098  09900000
*         GMNMIN  = R2;                       /* SET MINIMUM TO BE OB-  09910000
*                                                TAINED               * 09920000
         ST    @2,140(0,@6)                                       0099  09930000
*         GMNMAX  = GMNMIN;                   /* SET MAX TO BE OBTAIN-  09940000
*                                                ED                   * 09950000
         MVC   144(4,@6),140(@6)                                  0100  09960000
*         R1  = R6;                           /* SET PARM POINTER     * 09970000
         LR    @1,@6                                              0101  09980000
*         E01SW10  = '1'B;                    /* SET GETMAIN SWITCH   * 09990000
         OI    203(@6),B'01000000'                                0102  10000000
*         CALL  IKJEFE03;                     /* PERFORM GETMAIN      * 10010000
         L     @F,@V1              ADDRESS OF IKJEFE03            0103  10020000
         BALR  @E,@F                                              0103  10030000
*         E01SW10  = '0'B;                    /* RESET GETMAIN SWITCH * 10040000
         NI    203(@6),B'10111111'                                0104  10050000
*         IF  E01SW15 = '1'B                  /* IF WE COULD NOT GET  * 10060000
*           THEN                              /*  MINIMUM - CORE      * 10070000
         TM    203(@6),B'00000010'                                0105  10080000
         BC    12,@9FC                                            0105  10090000
*             DO;                             /* WE MUST TERMINATE SO * 10100000
*               E01SW9 = '1'B;                /* SET TERM. SWITCH AND * 10110000
         OI    203(@6),B'10000000'                                0107  10120000
*               GOTO E02EXT15;                /*  RETURN TO CALLER    * 10130000
         BC    15,E02EXT15                                        0108  10140000
*             END;                                                      10150000
*                                                                       10160000
* /******************************************************************** 10170000
**/*      P INITIALIZE PTRS AND PCL CONTROL VALUES  */                  10180000
* /******************************************************************** 10190000
*         /************************************************************ 10200000
*         /*              THE FOLLOWING CODE INITIALIZES              * 10210000
*         /*              POINTERS SETS VALUES IN THE                 * 10220000
*         /*              FIRST PCE AND POINTS TO FIRST               * 10230000
*         /*              ATAB BLOCK                                  * 10240000
*         /************************************************************ 10250000
*         PCLIND = ADDGMN;                    /* POINT TO PCL AREA    * 10260000
@9FC     MVC   PCLIND(4),148(@6)                                  0110  10270000
*         LOPCL  = POSAR + KWWAR + KWOAR + KON7;                        10280000
         LH    @F,KON7                                            0111  10290000
         A     @F,KWOAR                                           0111  10300000
         A     @F,KWWAR                                           0111  10310000
         A     @F,POSAR                                           0111  10320000
         L     @3,PCLIND                                          0111  10330000
         STH   @F,0(0,@3)                                         0111  10340000
*                                             /* SET PCL LENGTH         10350000
*         PCLCUR  = PCLIND + KON6;            /* SET PCLCUR VALUE     * 10360000
         LH    @F,KON6                                            0112  10370000
         A     @F,PCLIND                                          0112  10380000
         ST    @F,PCLCUR                                          0112  10390000
*         PDLCUR  = KON8;                     /*INITIALIZE PDL OFFSET * 10400000
         LH    @F,KON8                                            0113  10410000
         ST    @F,PDLCUR                                          0113  10420000
*         OTKW   = POSAR + KON6;              /* SET OFFSET TO FIRST    10430000
*                                                KEYWORD  PCE         * 10440000
         LH    @F,KON6                                            0114  10450000
         A     @F,POSAR                                           0114  10460000
         STH   @F,4(0,@3)                                         0114  10470000
*         SBFCUR =  PCLIND + OTKW + KWOAR + KWWCNT * KON13 + KWWBYT;    10480000
         LH    @E,KON13                                           0115  10490000
         MH    @E,194(0,@6)                                       0115  10500000
         A     @E,KWOAR                                           0115  10510000
         AH    @E,4(0,@3)                                         0115  10520000
         A     @E,PCLIND                                          0115  10530000
         AH    @E,198(0,@6)                                       0115  10540000
         ST    @E,@TEMP4                                          0115  10550000
         MVC   SBFCUR(3),@TEMP4+1                                 0115  10560000
*                                             /*POINT TO START OF SUB-  10570000
*                                               FIELD PCES            * 10580000
*         R1  = FTABIND;                      /* REG 1 POINTS TO FTAB * 10590000
         L     @1,180(0,@6)                                       0116  10600000
*         R2  = FTABCUR;                      /* REG 2 POINTS TO ELMT * 10610000
         L     @2,184(0,@6)                                       0117  10620000
*         R4  = ATABIND;                      /* REG 4 POINTS TO ATAB * 10630000
         L     @4,172(0,@6)                                       0118  10640000
*         R5  = ATABCUR;                      /* REG 5 POINTS TO ELMT * 10650000
         L     @5,176(0,@6)                                       0119  10660000
* /******************************************************************** 10670000
**/*E02PED05: P (,E02PED15:RL) SET ELEMENT PTR TO FIRST ELEMENT IN FIRS 10680000
**/*BLOCK OF ATAB */                                                    10690000
**/*COMMENT (13,1,) ATAB - A TABLE CONTAINING */                        10700000
**/*COMMENT (14,1,) THE NAMES OF SYMBOLIC */                            10710000
**/*COMMENT (15,1,) PARAMETERS DEFINED IN */                            10720000
**/*COMMENT (16,1,) THE PROC STATEMENT. */                              10730000
**/*COMMENT (18,1,) FTAB - A TABLE CONTAINING */                        10740000
**/*COMMENT (19,1,) VALUES TO BE SUBSTITUTED */                         10750000
**/*COMMENT (20,1,) FOR SYMBOLIC PARAMETERS IN */                       10760000
**/*COMMENT (21,1,) THE COMMAND PROCEDURE. */                           10770000
* /******************************************************************** 10780000
* E02PED05: IF R4 -> ATABLST ^= KON0          /* STEP THROUGH ATAB    * 10790000
*             THEN                                                      10800000
E02PED05 LH    @F,KON0                                            0120  10810000
         C     @F,0(0,@4)                                         0120  10820000
         BC    08,@9FB                                            0120  10830000
*               DO;                           /*   BLOCKS  UNTIL      * 10840000
*                 R4 = R4 -> ATABLST;         /*    THE FIRST         * 10850000
         L     @4,0(0,@4)                                         0122  10860000
*                 GOTO E02PED05;              /*     IS               * 10870000
         BC    15,E02PED05                                        0123  10880000
*               END;                          /*      REACHED         * 10890000
*         R5  = R4 + KON12;                   /* SET POINTER TO ELMT. * 10900000
@9FB     LH    @5,KON12                                           0125  10910000
         AR    @5,@4                                              0125  10920000
*         GOTO  E02PED15;                     /* BYPASS ELEMENT PTR     10930000
*                                                UPDATE ON FIRST PASS * 10940000
         BC    15,E02PED15                                        0126  10950000
*                                                                       10960000
* /******************************************************************** 10970000
**/*E02PED10:  D (NO,%D2:RL,YES,%D15:LT) WAS LAST BLOCK ELEMENT         10980000
**/*PROCESSED */                                                        10990000
**/*%D15: D (YES,E02PIC05:RL,NO,) IS THIS LAST ATAB IN BLOCK? */        11000000
**/*      P (,E02PED15:BL) UPDATE PTR TO NEXT BLOCK OF ATAB*/           11010000
**/*%D2:      P (,E02PED15:BL) UPDATE ELEMENT PTR */                    11020000
**/*E02PED15:      D (NO,,YES,E02PED20:RT) IS THIS A POSITIONAL PARM? * 11030000
* /******************************************************************** 11040000
*         /***********************************************************/ 11050000
*         /*              THE FOLLOWING CODE DETERMINES               * 11060000
*         /*              WHEN THE LAST ELEMENT HAS BEEN              * 11070000
*         /*              PROCESSED. IT UPDATES THE                   * 11080000
*         /*              POINTER TO THE CURRENT ELEMENT              * 11090000
*         /*              (AND THE UPDATES THE BLOCK IF               * 11100000
*         /*               NECESSARY) AND GOES TO THE                 * 11110000
*         /*              CORRECT PCE CREATION ROUTINE                * 11120000
*         /*              FOR THE CURRENT ELEMENT.                    * 11130000
*         /***********************************************************/ 11140000
* E02PED10: IF (R5 -> ATABFLGS & KONX20) = KONX20                       11150000
*             THEN                            /* IF LAST ELEMENT      * 11160000
E02PED10 MVC   @CTEMP2(1),KONSTRUC+1                              0127  11170000
         NC    @CTEMP2(1),4(@5)                                   0127  11180000
         CLC   @CTEMP2(1),KONSTRUC+1                              0127  11190000
         BC    07,@9FA                                            0127  11200000
*               DO;                           /* WAS PROCESSED THEN   * 11210000
*                 IF R4 -> ATABNXT = KON0     /*  IF THIS IS LAST ATAB* 11220000
*                   THEN                      /*  BLOCK INSERT THE    * 11230000
         LH    @F,KON0                                            0129  11240000
         C     @F,4(0,@4)                                         0129  11250000
         BC    07,@9F9                                            0129  11260000
*                     DO;                     /*   END OF LIST PCE AND* 11270000
*                       SBFCUR  -> PCELMT(1) = SBFMOD(1);/*   GO TO   * 11280000
         MVC   @TEMP3+1(3),SBFCUR                                 0131  11290000
         L     @3,@TEMP3           SBFCUR                         0131  11300000
         MVC   0(1,@3),SBFMOD                                     0131  11310000
*                       GOTO E02PIC05;        /*  CALL PARSE          * 11320000
         BC    15,E02PIC05                                        0132  11330000
*                     END;                    /* OTHERWISE            * 11340000
*                 R4 = R4 -> ATABNXT;         /*   UPDATE POINTER     * 11350000
@9F9     L     @4,4(0,@4)                                         0134  11360000
*                 R5 = R4 + KON12;            /*    TO FIRST ELEMENT  * 11370000
         LH    @5,KON12                                           0135  11380000
         AR    @5,@4                                              0135  11390000
*                 GOTO E02PED15;              /*     OF NEXT BLOCK    * 11400000
         BC    15,E02PED15                                        0136  11410000
*               END;                                                    11420000
*         CNVC  = R5 -> ATABELNC;              /*ALIGN ELEMENTS LENGTH  11430000
@9FA     MVC   200(2,@6),5(@5)                                    0138  11440000
*         R5  = R5 + CNVA + KON7;             /* UPDATE ELEMENT PTR   * 11450000
         LH    @F,KON7                                            0139  11460000
         AH    @F,200(0,@6)                                       0139  11470000
         AR    @5,@F                                              0139  11480000
*  E02PED15: IF POSCNT ^= 0                   /* IF THIS IS A           11490000
*              THEN                                                     11500000
E02PED15 SR    @F,@F                                              0140  11510000
         C     @F,132(0,@6)                                       0140  11520000
         BC    08,@9F8                                            0140  11530000
*                DO;                          /*  POSITIONAL PARM       11540000
*                  POSCNT = POSCNT - KON1;    /* DECREMENT COUNT AND    11550000
         LH    @F,KON1                                            0142  11560000
         LCR   @F,@F                                              0142  11570000
         A     @F,132(0,@6)                                       0142  11580000
         ST    @F,132(0,@6)                                       0142  11590000
*                  GOTO E02PED20;             /*  GO TO ROUTINE WHICH   11600000
         BC    15,E02PED20                                        0143  11610000
*                END;                         /*   CREATES IDENT PCE    11620000
*                                                                       11630000
*         /************************************************************ 11640000
*         /*              THE FOLLOWING CODE CREATES THE              * 11650000
*         /*              NECESSARY PCES FOR KEYWORD                  * 11660000
*         /*              PARAMETERS BOTH WITH AND W/O                * 11670000
*         /*              VALUE                                       * 11680000
*         /************************************************************ 11690000
*         PCELMT(1:11)  = KWMOD;              /* MOVE KWRD PCE TO PCL * 11700000
@9F8     L     @3,PCLCUR                                          0145  11710000
         MVC   0(11,@3),KWMOD                                     0145  11720000
*         KWPDL = PDLCURC;                    /* OFFSET TO PDL ELEMENT* 11730000
         MVC   4(2,@3),PDLCUR+2                                   0146  11740000
*         CNVC  = R5 -> ATABELNC;             /* ALIGN LENGTH OF PARM * 11750000
         MVC   200(2,@6),5(@5)                                    0147  11760000
*         KWDAT(1:CNVA)  = R5 -> ATABDAT(1:CNVA);/*MOVE KWRD TO PCE   * 11770000
         LA    @E,7(0,@5)                                         0148  11780000
         LH    @7,200(0,@6)                                       0148  11790000
         BCTR  @7,0                                               0148  11800000
         LA    @A,11(0,@3)                                        0148  11810000
         EX    @7,@MVC                                            0148  11820000
*         CNVA  = CNVA - KON1;                /* PCE REQUIRES LENGTH    11830000
*                                                MINUS ONE            * 11840000
         LH    @F,KON1                                            0149  11850000
         LCR   @F,@F                                              0149  11860000
         AH    @F,200(0,@6)                                       0149  11870000
         STH   @F,200(0,@6)                                       0149  11880000
*         KWNAMLNG  = CNVC(2);                /* SET LENGTH OF NAME & * 11890000
         MVC   10(1,@3),201(@6)                                   0150  11900000
*         CNVA  = CNVA + KON6;                /* INCREASE CNVA TO SIZE* 11910000
         LH    @F,KON6                                            0151  11920000
         AH    @F,200(0,@6)                                       0151  11930000
         STH   @F,200(0,@6)                                       0151  11940000
*                                             /* OF NAME PCE FOR KWRD   11950000
*                                                W/O VALUE            * 11960000
* /******************************************************************** 11970000
**/*      D (YES,,NO,E02PED10) IS THIS A KEYWORD WITH VALUE? */         11980000
**/*      P SET SUBFIELD BIT AND INCREMENT PCE SIZE */                  11990000
**/*      P (,E02PED10) INIT SUBFIELD AREA AND INCREMENT SUBFLD PTR*/   12000000
* /******************************************************************** 12010000
*         IF (R5 -> ATABFLGS & KONX80) = KONX80 /*IF THIS ENTRY IS KWRD 12020000
*           THEN                              /*  WITH VALUE SET        12030000
         MVC   @CTEMP2(1),KONSTRUC+4                              0152  12040000
         NC    @CTEMP2(1),4(@5)                                   0152  12050000
         CLC   @CTEMP2(1),KONSTRUC+4                              0152  12060000
         BC    07,@9F7                                            0152  12070000
*             DO;                             /*  SUBFIELD BIT AND ADD  12080000
*               KWSFB = '1'B;               /*  TO PCE SIZE FOR SUB- */ 12090000
         OI    6(@3),B'00000100'                                  0154  12100000
*               CNVA = CNVA + KON2;         /*  FIELD OFFSET         */ 12110000
         LH    @F,KON2                                            0155  12120000
         AH    @F,200(0,@6)                                       0155  12130000
         STH   @F,200(0,@6)                                       0155  12140000
*             END;                                                      12150000
*         KWELNG  = CNVC;                     /* SET LENGTH OF NAME PCE 12160000
@9F7     L     @3,PCLCUR                                          0157  12170000
         MVC   8(2,@3),200(@6)                                    0157  12180000
*         PDLCUR  = PDLCUR + KON2;            /* UPDATE PDL OFFSET      12190000
         LH    @F,KON2                                            0158  12200000
         A     @F,PDLCUR                                          0158  12210000
         ST    @F,PDLCUR                                          0158  12220000
*         PCLCUR  = PCLCUR + KON6 + CNVA;     /* UPDATE PCL POINTER     12230000
         LH    @F,200(0,@6)                                       0159  12240000
         AH    @F,KON6                                            0159  12250000
         A     @F,PCLCUR                                          0159  12260000
         ST    @F,PCLCUR                                          0159  12270000
*         IF (R5 -> ATABFLGS & KONX40) = KONX40 /* IF IT'S KWRD W/O     12280000
*           THEN                              /*  VALUE GO PROCESS NEXT 12290000
         MVC   @CTEMP2(1),KONSTRUC+3                              0160  12300000
         NC    @CTEMP2(1),4(@5)                                   0160  12310000
         CLC   @CTEMP2(1),KONSTRUC+3                              0160  12320000
*             GOTO E02PED10;                  /*   ELEMENT              12330000
         BC    08,E02PED10                                        0161  12340000
*         CNVA  = SBFCUR - PCLIND + KON1;     /* OBTAIN OFFSET TO SUB-  12350000
*                                                FIELD ELEMENT AND      12360000
         LH    @F,KON1                                            0162  12370000
         S     @F,PCLIND                                          0162  12380000
         MVC   @TEMP3+1(3),SBFCUR                                 0162  12390000
         A     @F,@TEMP3                                          0162  12400000
         STH   @F,200(0,@6)                                       0162  12410000
*         KWSBO  = CNVC;                      /* PUT IT IN NAME PCE     12420000
         L     @3,PCLCUR                                          0163  12430000
         LR    @A,@3                                              0163  12440000
         SH    @A,@D1                                             0163  12450000
         MVC   0(2,@A),200(@6)                                    0163  12460000
*         SBFCUR  -> PCELMT(1:3) = SBFMOD;    /* MOVE SUBFIELD INDICAT- 12470000
*                                                OR PCE TO PCL        * 12480000
         MVC   @TEMP3+1(3),SBFCUR                                 0164  12490000
         L     @7,@TEMP3           SBFCUR                         0164  12500000
         MVC   0(3,@7),SBFMOD                                     0164  12510000
*         CNVA = KON7 + KON35 + KON2 + CNVA;  /* OBTAIN OFFSET TO NEXT  12520000
*                                                SUBFLD PCE AND Y01676* 12530000
         LH    @F,200(0,@6)                                       0165  12540000
         AH    @F,KON2                                            0165  12550000
         AH    @F,KON35                                           0165  12560000
         AH    @F,KON7                                            0165  12570000
         STH   @F,200(0,@6)                                       0165  12580000
*         NSBFOF  = CNVC;                     /* PLACE IN THIS SUBFLD * 12590000
         MVC   1(2,@7),200(@6)                                    0166  12600000
*         SBFCUR  = SBFCUR + KON3;            /* UPDATE POINTER       * 12610000
         LH    @F,KON3                                            0167  12620000
         MVC   @TEMP3+1(3),SBFCUR                                 0167  12630000
         A     @F,@TEMP3                                          0167  12640000
         ST    @F,@TEMP4                                          0167  12650000
         MVC   SBFCUR(3),@TEMP4+1                                 0167  12660000
*         SBFCUR -> PCELMT(1:7) = QPOSMOD;    /* MOVE QSTRING MODEL TO  12670000
*                                                SUBFLD AREA- THIS WILL 12680000
*                                                ALLOW A QUOTED STRING  12690000
*                                                TO BE ENTERED  Y01676* 12700000
         MVC   @TEMP3+1(3),SBFCUR                                 0168  12710000
         L     @7,@TEMP3           SBFCUR                         0168  12720000
         MVC   0(7,@7),QPOSMOD                                    0168  12730000
*         SBFCUR -> QMODOFF = PDLCURC;        /* SET OFFSET TO THE PDL  12740000
*                                                ELEMENT        Y01676* 12750000
         MVC   4(2,@7),PDLCUR+2                                   0169  12760000
*         PDLCUR = KON8 + PDLCUR;             /* UPDATE PDL OFFSET FOR  12770000
*                                                NEXT ENTRY     Y01676* 12780000
         L     @F,PDLCUR                                          0170  12790000
         AH    @F,KON8                                            0170  12800000
         ST    @F,PDLCUR                                          0170  12810000
*         SBFCUR = KON7 + SBFCUR;             /* UPDATE SUBFIELD        12820000
*                                                POINTER        Y01676* 12830000
         MVC   @TEMP3+1(3),SBFCUR                                 0171  12840000
         L     @F,@TEMP3                                          0171  12850000
         AH    @F,KON7                                            0171  12860000
         ST    @F,@TEMP4                                          0171  12870000
         MVC   SBFCUR(3),@TEMP4+1                                 0171  12880000
*         SBFCUR  -> PCELMT(1:35) = IDMOD;    /* MOVE IDENT MODEL TO    12890000
*                                                SUBFIELD AREA        * 12900000
         MVC   @TEMP3+1(3),SBFCUR                                 0172  12910000
         L     @7,@TEMP3           SBFCUR                         0172  12920000
         MVC   0(35,@7),IDMOD                                     0172  12930000
*         SBFCUR  -> IDMODPMB = '0'B;         /* TURN OFF PROMPT BIT  * 12940000
         NI    0(@7),B'11101111'                                  0173  12950000
*         SBFCUR  -> IDMODLNG(1) = KONX00;    /*SET LENGTH OF IDENT PCE 12960000
         MVC   2(1,@7),KONSTRUC                                   0174  12970000
*         SBFCUR  -> IDMODLNG(2) = KONX23;    /*SET LENGTH OF IDENT PCE 12980000
         MVC   3(1,@7),KONSTRUC+2                                 0175  12990000
*         SBFCUR  -> IDMODPDL = PDLCURC;      /* SET OFFSET FOR ITS PDL 13000000
*                                                ELEMENT                13010000
         MVC   4(2,@7),PDLCUR+2                                   0176  13020000
*         SBFCUR  -> IDMODTYP = TYPKW;        /* ALTER PARAMETER TYPE   13030000
*                                                TO KEYWORD VALUE       13040000
         MVC   13(22,@7),TYPKW                                    0177  13050000
*         PDLCUR = PDLCUR + KON8;             /* UPDATE PDL OFFSET      13060000
         LH    @F,KON8                                            0178  13070000
         A     @F,PDLCUR                                          0178  13080000
         ST    @F,PDLCUR                                          0178  13090000
*         SBFCUR  = SBFCUR + KON35;           /* UPDATE SUBFIELD PTR    13100000
         LH    @F,KON35                                           0179  13110000
         MVC   @TEMP3+1(3),SBFCUR                                 0179  13120000
         A     @F,@TEMP3                                          0179  13130000
         ST    @F,@TEMP4                                          0179  13140000
         MVC   SBFCUR(3),@TEMP4+1                                 0179  13150000
*         GOTO  E02PED10;                     /* GO PROCESS NEXT ATAB   13160000
*                                                ELEMENT                13170000
         BC    15,E02PED10                                        0180  13180000
* /******************************************************************** 13190000
**/*E02PED20:      P (,E02PED10:BT) CREATE PCES FOR POSITIONAL PARMS */ 13200000
* /******************************************************************** 13210000
*         /************************************************************ 13220000
*         /*              THE FOLLOWING CODE CREATES THE              * 13230000
*         /*              NECESSARY PCES FOR POSITIONAL               * 13240000
*         /*              PARAMETERS                                  * 13250000
*         /************************************************************ 13260000
*  E02PED20: PCELMT  = IDMOD;                 /* MOVE IDENT PCE TO PCL* 13270000
E02PED20 L     @3,PCLCUR                                          0181  13280000
         MVC   0(57,@3),IDMOD                                     0181  13290000
*          IDMODPDL  = PDLCURC;               /* OFFSET TO ITS PDL    * 13300000
         MVC   4(2,@3),PDLCUR+2                                   0182  13310000
*          CNVC = R5 -> ATABELNC;             /* GET LEN OF POSITIONAL  13320000
*                                                PARAMETER      Y01676* 13330000
         MVC   200(2,@6),5(@5)                                    0183  13340000
*          POSNAME(1:CNVA) = R5 -> ATABDAT(1:CNVA); /* MOVE NAME OF PAR 13350000
*                                                TO PROMPT AREA Y01676* 13360000
         LA    @E,7(0,@5)                                         0184  13370000
         LH    @7,200(0,@6)                                       0184  13380000
         BCTR  @7,0                                               0184  13390000
         LA    @A,57(0,@3)                                        0184  13400000
         EX    @7,@MVC                                            0184  13410000
*          PDLCUR  = PDLCUR + KON8;           /* UPDATE PDL OFFSET    * 13420000
         LH    @F,KON8                                            0185  13430000
         A     @F,PDLCUR                                          0185  13440000
         ST    @F,PDLCUR                                          0185  13450000
*          IDMODLEN = KON57 + CNVA;           /* STORE TOTAL LENGTH     13460000
*                                                OF THE PCE     Y01676* 13470000
         LH    @F,200(0,@6)                                       0186  13480000
         AH    @F,KON57                                           0186  13490000
         ST    @F,@TEMP4                                          0186  13500000
         MVC   2(2,@3),@TEMP4+2                                   0186  13510000
*          CNVA = KON21 - KON1 + CNVA;        /* GET THE LENGTH OF THE  13520000
*                                                PROMPT INFO    Y01676* 13530000
         LH    @F,200(0,@6)                                       0187  13540000
         SH    @F,KON1                                            0187  13550000
         AH    @F,KON21                                           0187  13560000
         STH   @F,200(0,@6)                                       0187  13570000
*          IF CNVA ^< KON224                  /* WHEN GREATER   Y01676* 13580000
*            THEN                             /* THAN 224 WE    Y01676* 13590000
         LH    @F,KON224                                          0188  13600000
         CH    @F,200(0,@6)                                       0188  13610000
         BC    02,@9F6                                            0188  13620000
*              CNVA = KON224 - KON1;          /* MUST TRUNCATE PROMPT   13630000
*                                                LENGTH ONLY    Y01676* 13640000
         SH    @F,KON1                                            0189  13650000
         STH   @F,200(0,@6)                                       0189  13660000
*          IDPRLEN = CNVC(2);                 /* PUT IN PCE     Y01676* 13670000
@9F6     MVC   35(1,@3),201(@6)                                   0190  13680000
*          PCLCUR  = IDMODLEN + PCLCUR;       /* UPDATE PCL POINTER     13690000
*                                                THEN           Y01676* 13700000
         L     @F,PCLCUR                                          0191  13710000
         MVC   @TEMP2+2(2),2(@3)                                  0191  13720000
         LH    @0,@TEMP2+2                                        0191  13730000
         AR    @F,@0                                              0191  13740000
         ST    @F,PCLCUR                                          0191  13750000
*          GOTO  E02PED10;                    /* GO PROCESS NEXT ATAB   13760000
*                                                  ELEMENT            * 13770000
         BC    15,E02PED10                                        0192  13780000
*                                                                       13790000
*         /************************************************************ 13800000
*         /*              THE FOLLOWING CODE SETS UP THE                13810000
*         /*              INTERFACE, INVOKES PARSE AND                  13820000
*         /*              CHECKS FOR ERROR RETURN CODES                 13830000
*         /************************************************************ 13840000
* /******************************************************************** 13850000
**/*E02PIC05: D (NO,%D35:RL,YES,E02PIC09) IS THIS AN IMPLICIT EXEC? */  13860000
**/*%D35: S IKJPARS: INVOKE PARSE TO FIND QUOTE STRING*/                13870000
**/*      D (NO,,YES,E02MML05) TO FIND SYNTACTICALLY */                 13880000
**/*COMMENT (6,6,) WAS PARSE UNABLE */                                  13890000
**/*COMMENT (9,7,) CORRECT PARMS ? */                                   13900000
**/*      D (YES,,NO,E02PIC08) WERE THERE PARMS ON INVO STMT ? */       13910000
**/*      D (NO,,YES,%D4) WERE THERE PARMS ON PROC STMT ?*/             13920000
**/*      P (,E02MML05) ERROR COND SO CLEAN UP AND TERMINATE */         13930000
**/*%D4:      P SAVE ADDR OF QUOTE STRIND ON INVO STMT */               13940000
**/* P CHG LENGTH & OFFSET OF CMD BUFFER TO SKIP QUOTES DURING NEXT     13950000
**/*PARSE*/                                                             13960000
**/*E02PIC08:      P IF LIST OR PROMPT SPECIFIED, SET PROPER SWITCH */  13970000
**/*E02PIC09:      D (YES,,NO,%D5) IS THIS AN EXPLICIT EXEC? */         13980000
**/*      P FREE PDL OBTAINED FOR PARSE OF QUOTE STRING */              13990000
**/*%D5:      D (YES,,NO,E02EXT15) WERE THERE ANY PARMS IN PROC */      14000000
**/*      S IKJPARS: INVOKE PARSE FOR SYMBOLIC PARM VALUES*/            14010000
**/*      D (YES,,NO,E02MML05) DID PARSE FIND VALID PARMS? */           14020000
* /******************************************************************** 14030000
* E02PIC05: IF E01SW1 = '1'B                  /* IF THIS IS AN        * 14040000
*             THEN                            /*   IMPLICIT EXEC      * 14050000
E02PIC05 TM    202(@6),B'10000000'                                0193  14060000
*               GOTO E02PIC09;                /*   BYPASS QUOTE PARSE * 14070000
         BC    01,E02PIC09                                        0194  14080000
*         CNVC  = CPPLCBUF -> FREP(1:2);      /* SAVE CMD BFR LENGTH  * 14090000
         L     @3,232(0,@6)                                       0195  14100000
         L     @3,0(0,@3)          CPPL                           0195  14110000
         MVC   200(2,@6),0(@3)                                    0195  14120000
*         PPLCBUF  = CPPLCBUF;                /* SET PTR TO CMD BUFFER* 14130000
         L     @3,232(0,@6)                                       0196  14140000
         L     @7,248(0,@6)                                       0196  14150000
         MVC   20(4,@7),0(@3)                                     0196  14160000
*         PPLANS  = ADDR(PDLIND);             /* SET PTR TO ANS PLACE * 14170000
         LA    @F,PDLIND                                          0197  14180000
         ST    @F,16(0,@7)                                        0197  14190000
*         SRECB  = KON0;                      /* ZERO ECB             * 14200000
         LH    @F,KON0                                            0198  14210000
         ST    @F,276(0,@6)                                       0198  14220000
*         PPLPCL  = ADDR(QALIST);             /* SET PTR TO PCL       * 14230000
         L     @3,@V2              ADDRESS OF QALIST              0199  14240000
         L     @7,248(0,@6)                                       0199  14250000
         ST    @3,12(0,@7)                                        0199  14260000
*         R1  = PPLPTR;                       /* REG 1 POINTS TO PARMS* 14270000
         L     @1,248(0,@6)                                       0200  14280000
*         GEN(LINK  EP=IKJPARS);                                        14290000
         LINK  EP=IKJPARS                                               14300000
         DS    0H                                                       14310000
* E02PIC06:  ;                                                          14320000
*         CNVA = R15;                         /* SAVE RETURN CODE     * 14330000
E02PIC06 STH   @F,200(0,@6)                                       0203  14340000
* E02PIC07:                                                             14350000
*         IF CNVA ^= KON0                   /* IF PARSE WAS NOT     */  14360000
*           THEN                              /* SUCCESSFUL CHECK IF  * 14370000
E02PIC07 LH    @F,KON0                                            0204  14380000
         CH    @F,200(0,@6)                                       0204  14390000
         BC    08,@9F5                                            0204  14400000
*             IF CNVA = KON4                  /* WE ARE IN NO PROMPT  * 14410000
*               THEN                          /* MODE - IF SO DO NOT  * 14420000
         LH    @F,KON4                                            0205  14430000
         CH    @F,200(0,@6)                                       0205  14440000
         BC    07,@9F4                                            0205  14450000
*                 DO;                                                   14460000
*                   E01SW9 = '1'B;            /* PUT A MESSAGE BUT GO * 14470000
         OI    203(@6),B'10000000'                                0207  14480000
*                   GOTO E02EXT10;            /* TO EXIT              * 14490000
         BC    15,E02EXT10                                        0208  14500000
*                 END;                                                  14510000
*           ELSE                              /* OTHERWISE            * 14520000
*             DO;                             /* INDICATE THAT THE    * 14530000
*               LVL1NO = KON24;               /* SYSTEM ERROR MESSAGE * 14540000
@9F4     MVC   304(2,@6),KON24                                    0211  14550000
*               LVL2NO = KON2;                /* AND PARSE 2ND LVL MSG* 14560000
         MVC   306(2,@6),KON2                                     0212  14570000
*               GOTO E02MML05;                /* GO TO PUT MESSAGE    * 14580000
         BC    15,E02MML05                                        0213  14590000
*             END;                                                      14600000
*         PDLIND  = PDLIND + KON8;            /* SET PTR PAST CHAIN     14610000
*                                                  WORDS              * 14620000
@9F3     EQU   *                                                  0215  14630000
@9F5     LH    @F,KON8                                            0215  14640000
         A     @F,PDLIND                                          0215  14650000
         ST    @F,PDLIND                                          0215  14660000
*         IF (PDLIND -> IPDEFLGS & KONX80) = KONX00 |         /*Y01676* 14670000
*            PDLIND -> IPDELNG = KON0         /* IF THERE WERE  Y01676* 14680000
*           THEN                              /* NO   PARAMETERS      * 14690000
         MVC   @CTEMP2(1),KONSTRUC+4                              0216  14700000
         L     @3,PDLIND                                          0216  14710000
         NC    @CTEMP2(1),6(@3)                                   0216  14720000
         CLC   @CTEMP2(1),KONSTRUC                                0216  14730000
         BC    08,@9F2                                            0216  14740000
         LH    @F,KON0                                            0216  14750000
         CH    @F,4(0,@3)                                         0216  14760000
         BC    07,@9F1                                            0216  14770000
*             GOTO E02PIC08;                  /* BYPASS CHECK FOR       14780000
*                                                UNWANTED PARMS       * 14790000
         BC    08,E02PIC08                                        0217  14800000
*         IF ATABIND = KON0                   /*IF THERE WERE NO PARMS* 14810000
*           THEN                              /* DEFINED FOR THE PROC * 14820000
@9F1     LH    @F,KON0                                            0218  14830000
         C     @F,172(0,@6)                                       0218  14840000
         BC    07,@9F0                                            0218  14850000
*             DO;                             /* THEN INVOCATION STMT * 14860000
*               PDLIND = PDLIND - KON8;       /*IS IN ERROR SO RELEASE* 14870000
         L     @F,PDLIND                                          0220  14880000
         SH    @F,KON8                                            0220  14890000
         ST    @F,PDLIND                                          0220  14900000
*               R2 = ADDR(PDLIND);            /* CORE PARSE GOT AND   * 14910000
         LA    @2,PDLIND                                          0221  14920000
*               GEN(IKJRLSA (2));             /*  GO TO PUT           * 14930000
         IKJRLSA (2)                                                    14940000
         DS    0H                                                       14950000
*               LVL1NO = KON10;               /*  AND RETURN TO CALLER* 14960000
         MVC   304(2,@6),KON10                                    0223  14970000
*               LVL2NO = KON1;                /*  FOR                 * 14980000
         MVC   306(2,@6),KON1                                     0224  14990000
*               VARSGLN2 = KONX00;                                      15000000
         MVC   300(1,@6),KONSTRUC                                 0225  15010000
*               GOTO E02MML05;                /*  TERMINATION         * 15020000
         BC    15,E02MML05                                        0226  15030000
*             END;                            /*  OTHERWISE           * 15040000
*         TSTLNGC = PDLIND -> IPDEPTRC;       /* SAVE ADDRESS OF      * 15050000
@9F0     L     @3,PDLIND                                          0228  15060000
         MVC   136(4,@6),0(@3)                                    0228  15070000
*         CNVA = TSTLNG - KON4 - CPPLCBUF;    /*  QUOTED LIST         * 15080000
         L     @7,232(0,@6)                                       0229  15090000
         L     @F,0(0,@7)                                         0229  15100000
         LCR   @F,@F                                              0229  15110000
         SH    @F,KON4                                            0229  15120000
         A     @F,136(0,@6)                                       0229  15130000
         STH   @F,200(0,@6)                                       0229  15140000
*         CPPLCBUF -> FREP(3:4) = CNVC;       /* SET OFFSET PAST QUOTE* 15150000
         L     @7,232(0,@6)                                       0230  15160000
         L     @7,0(0,@7)          CPPL                           0230  15170000
         MVC   2(2,@7),200(@6)                                    0230  15180000
*         CNVA = CNVA + KON4 + PDLIND -> IPDELNG;  /* GET ADDR OF END * 15190000
         LH    @F,4(0,@3)                                         0231  15200000
         AH    @F,KON4                                            0231  15210000
         AH    @F,200(0,@6)                                       0231  15220000
         STH   @F,200(0,@6)                                       0231  15230000
*         CPPLCBUF -> FREP(1:2) = CNVC;       /* QUOTE AND SET LENGTH   15240000
*                                                SO BUFFER ENDS BEFORE  15250000
*                                                IT                   * 15260000
         L     @7,232(0,@6)                                       0232  15270000
         L     @7,0(0,@7)          CPPL                           0232  15280000
         MVC   0(2,@7),200(@6)                                    0232  15290000
* E02PIC08: PDLIND  = PDLIND + KON8;          /* UPDATE POINTER TO    * 15300000
E02PIC08 LH    @F,KON8                                            0233  15310000
         A     @F,PDLIND                                          0233  15320000
         ST    @F,PDLIND                                          0233  15330000
*         IF  EPRMTPDE  = KON1                /* KEYWORD DESC   Y01676* 15340000
*           THEN                              /* IF 'PROMPT'    Y01676* 15350000
         LH    @F,KON1                                            0234  15360000
         L     @3,PDLIND                                          0234  15370000
         CH    @F,2(0,@3)                                         0234  15380000
         BC    07,@9EF                                            0234  15390000
*             DO;                             /* WAS SPECIFIED  Y01676* 15400000
*               E01SW16 = '1'B;               /* SET LIST AND   Y01676* 15410000
         OI    203(@6),B'00000001'                                0236  15420000
*               E01SW6 = '1'B;                /* PROMPT         Y01676* 15430000
         OI    202(@6),B'00000100'                                0237  15440000
*             END;                            /* SWITCHES       Y01676* 15450000
*         IF  ELISTPDE  = KON1                /* IF 'LIST'      Y01676* 15460000
*           THEN                              /* WAS PRESENT    Y01676* 15470000
@9EF     LH    @F,KON1                                            0239  15480000
         L     @3,PDLIND                                          0239  15490000
         CH    @F,0(0,@3)                                         0239  15500000
         BC    07,@9EE                                            0239  15510000
*             E01SW16 = '1'B;                 /* SET LIST SW    Y01676* 15520000
         OI    203(@6),B'00000001'                                0240  15530000
         BC    15,@9ED                                            0241  15540000
*           ELSE                              /* IF 'NOLIST'    Y01676* 15550000
*             IF ELISTPDE = KON2              /* WAS SPECIFIED  Y01676* 15560000
*               THEN                          /* RESET THE IN   Y01676* 15570000
@9EE     LH    @F,KON2                                            0241  15580000
         L     @3,PDLIND                                          0241  15590000
         CH    @F,0(0,@3)                                         0241  15600000
         BC    07,@9EC                                            0241  15610000
*                 E01SW16 = '0'B;             /* CASE IT WAS SET        15620000
*                                                PREVIOUSLY     Y01676* 15630000
         NI    203(@6),B'11111110'                                0242  15640000
* E02PIC09: PPLCBUF  = CPPLCBUF;              /* SET PTR TO CMD BUFFER* 15650000
@9EC     EQU   *                                                  0243  15660000
@9ED     EQU   *                                                  0243  15670000
E02PIC09 L     @3,232(0,@6)                                       0243  15680000
         L     @7,248(0,@6)                                       0243  15690000
         MVC   20(4,@7),0(@3)                                     0243  15700000
*         IF E01SW1 = '0'B                    /* IF THIS IS AN EXPLICIT 15710000
*           THEN                              /*  EXEC WE MUST        * 15720000
         TM    202(@6),B'10000000'                                0244  15730000
         BC    05,@9EB                                            0244  15740000
*             DO;                             /*  FREE THE PDL OBTAINED 15750000
*               PDLIND  = PDLIND - KON16;     /*  FOR THE PARSE OF THE* 15760000
         L     @F,PDLIND                                          0246  15770000
         SH    @F,KON16                                           0246  15780000
         ST    @F,PDLIND                                          0246  15790000
*               R2 = ADDR(PDLIND);            /*  QUOTE STRING        * 15800000
         LA    @2,PDLIND                                          0247  15810000
*               GEN(IKJRLSA  (2));            /* RELEASE              * 15820000
         IKJRLSA  (2)                                                   15830000
         DS    0H                                                       15840000
*             END;                                                      15850000
*         IF ATABIND = KON0                   /* IF THERE WERE NO PARMS 15860000
*           THEN                              /* SPECIFIED IN THE     * 15870000
@9EB     LH    @F,KON0                                            0250  15880000
         C     @F,172(0,@6)                                       0250  15890000
*             GOTO E02EXT15;                  /* PROC RETURN TO CALLER* 15900000
         BC    08,E02EXT15                                        0251  15910000
*          PPLANS  = ADDR(PDLIND);            /* SET ANS PLACE PTR    * 15920000
         LA    @F,PDLIND                                          0252  15930000
         L     @3,248(0,@6)                                       0252  15940000
         ST    @F,16(0,@3)                                        0252  15950000
*          LOPDL  = PDLCUR;                   /* SET PDL LENGTH       * 15960000
         L     @7,PCLIND                                          0253  15970000
         MVC   2(2,@7),PDLCUR+2                                   0253  15980000
*          PPLPCL  = PCLIND;                  /* SET PTR TO PCL       * 15990000
         MVC   12(4,@3),PCLIND                                    0254  16000000
*          SRECB  = KON0;                     /* ZERO OUT ECB         * 16010000
         LH    @F,KON0                                            0255  16020000
         ST    @F,276(0,@6)                                       0255  16030000
*         R1  = PPLPTR;                       /* SET PTR TO PARM LIST * 16040000
         L     @1,248(0,@6)                                       0256  16050000
*         GEN;                                /* INVOKE PARSE         * 16060000
         LINK   EP=IKJPARS                                              16070000
         DS    0H                                                       16080000
*         /* IF CORRECT PARMS WERE NOT OBTAINED GO TO EXIT            * 16090000
*         CNVA = R15;                         /* SAVE RETURN CODE     * 16100000
         STH   @F,200(0,@6)                                       0258  16110000
*         IF CNVA ^= KON0                     /* IF IT IS AN ERROR    * 16120000
*           THEN                              /* GO BACK TO E02PIC06  * 16130000
         LH    @F,KON0                                            0259  16140000
         CH    @F,200(0,@6)                                       0259  16150000
*             GOTO E02PIC07;                  /* TO PROCESS IT        * 16160000
         BC    07,E02PIC07                                        0260  16170000
*         R1  = FTABIND;                      /* RESET REG1  TO FTAB  * 16180000
         L     @1,180(0,@6)                                       0261  16190000
*         R4  = ATABIND;                      /* SET REG4 POINTING TO   16200000
*                                               THE ATAB        Y01676* 16210000
         L     @4,172(0,@6)                                       0262  16220000
* /******************************************************************** 16230000
**/*E02TEC05:      P CALCULATE PTR TO CURRENT SUBFIELD ELEMENT */       16240000
**/*E02TEC10:      P SET ATAB PTR TO FIRST ELEMENT OF FIRST ATAB BLOCK  16250000
**/**/                                                                  16260000
**/*E02TEC15:    P SET FTAB PTR TO FIRST ELEMENT OF FIRST FTAB BLOCK */ 16270000
**/*      P (,E02TEC30) POINT TO FIRST PCE AND FIRST PDE */             16280000
**/*E02TEC20:      D (NO,,YES,E02TEC50) IS THIS LAST ELEMENT OF ATAB? * 16290000
**/*E02TEC25:      P UPDATE POINTERS FOR ATAB, PCL, PDL*/               16300000
**/*E02TEC30:      D (NO,,YES,E02TEC35) IS THIS A POSITIONAL PARM? */   16310000
**/*      D (NO,,YES,E02TEC40) IS THIS A KEYWORD WITH VALUE? */         16320000
**/*   P (,E02TEC20:RL) STORE KWRD IN ATAB & UPDATE PCL PTR & INDICATE  16330000
**/*IF KWRD PRESENT IN ATABFLGS*/                                       16340000
**/*E02TEC35:      D (YES,,NO,E02TEC45:RL) WILL VALUE FIT IN FTAB? */   16350000
**/*   P (,E02TEC20:BT) MOVE VALUE TO FTAB AND STORE ADDRESS IN ATAB */ 16360000
* /******************************************************************** 16370000
* E02TEC05: SBFCUR  = PCLIND + OTKW + KWOAR + KWWCNT * KON13 + KWWBYT;  16380000
E02TEC05 LH    @E,KON13                                           0263  16390000
         MH    @E,194(0,@6)                                       0263  16400000
         A     @E,KWOAR                                           0263  16410000
         L     @3,PCLIND                                          0263  16420000
         AH    @E,4(0,@3)                                         0263  16430000
         A     @E,PCLIND                                          0263  16440000
         AH    @E,198(0,@6)                                       0263  16450000
         ST    @E,@TEMP4                                          0263  16460000
         MVC   SBFCUR(3),@TEMP4+1                                 0263  16470000
* E02TEC10: IF R4 -> ATABLST ^= KON0          /* IF WE ARE NOT AT     * 16480000
*             THEN                                                      16490000
E02TEC10 LH    @F,KON0                                            0264  16500000
         C     @F,0(0,@4)                                         0264  16510000
         BC    08,@9EA                                            0264  16520000
*               DO;                           /*  FIRST ATAB BLOCK    * 16530000
*                 R4 = R4 -> ATABLST;         /*   BACSTEP UNTIL FIRST* 16540000
         L     @4,0(0,@4)                                         0266  16550000
*                 GOTO E02TEC10;              /*    BLOCK IS          * 16560000
         BC    15,E02TEC10                                        0267  16570000
*               END;                          /*     REACHED          * 16580000
*         R5  = R4 + KON12;                   /* SET CUR ELMT PTR     * 16590000
@9EA     LH    @5,KON12                                           0269  16600000
         AR    @5,@4                                              0269  16610000
* E02TEC15: IF R1 -> FTABLST ^= KON0          /* IF WE ARE NOT AT     * 16620000
*             THEN                                                      16630000
E02TEC15 LH    @F,KON0                                            0270  16640000
         C     @F,0(0,@1)                                         0270  16650000
         BC    08,@9E9                                            0270  16660000
*               DO;                           /*  FIRST ATAB BLOCK    * 16670000
*                 R1 = R1 -> FTABLST;         /*  BACSTEP UNTIL FIRST * 16680000
         L     @1,0(0,@1)                                         0272  16690000
*                 GOTO E02TEC15;              /*    BLOCK IS          * 16700000
         BC    15,E02TEC15                                        0273  16710000
*               END;                          /*     REACHED          * 16720000
*         R2  = R1 + KON12;                   /* SET CUR ELMT POINTER * 16730000
@9E9     LH    @2,KON12                                           0275  16740000
         AR    @2,@1                                              0275  16750000
*         PCLCUR  = PCLIND + KON6;            /* POINT TO 1ST PCE     * 16760000
         LH    @F,KON6                                            0276  16770000
         A     @F,PCLIND                                          0276  16780000
         ST    @F,PCLCUR                                          0276  16790000
*         PDLCUR  = PDLIND + KON8;            /* INIT PTR TO FIRST PDE* 16800000
         LH    @F,KON8                                            0277  16810000
         A     @F,PDLIND                                          0277  16820000
         ST    @F,PDLCUR                                          0277  16830000
*         GOTO  E02TEC30;                     /* BYPASS PTR UPDATE    * 16840000
         BC    15,E02TEC30                                        0278  16850000
* E02TEC20: IF (R5 -> ATABFLGS & KONX20) = KONX20                       16860000
*             THEN                            /*IF THAT WAS LAST ELEM-* 16870000
E02TEC20 MVC   @CTEMP2(1),KONSTRUC+1                              0279  16880000
         NC    @CTEMP2(1),4(@5)                                   0279  16890000
         CLC   @CTEMP2(1),KONSTRUC+1                              0279  16900000
*               GOTO E02TEC50;                /* ENT   GO TO UPDATE TO  16910000
*                                                NEXT BLOCK           * 16920000
         BC    08,E02TEC50                                        0280  16930000
*         CNVC  = R5 -> ATABELNC;             /* ALIGN LENGTH OF ELMT * 16940000
         MVC   200(2,@6),5(@5)                                    0281  16950000
*         R5  = R5 + CNVA + KON7;             /* UPDATE PTR TO SUR ELM* 16960000
         LH    @F,KON7                                            0282  16970000
         AH    @F,200(0,@6)                                       0282  16980000
         AR    @5,@F                                              0282  16990000
* E02TEC25: CNVC = IDMODLNG;                  /* ALIGN LENGTH OF PCE  * 17000000
E02TEC25 L     @3,PCLCUR                                          0283  17010000
         MVC   200(2,@6),2(@3)                                    0283  17020000
*          PCLCUR  = PCLCUR + CNVA;           /* UPDATE PCL POINTER   * 17030000
         LH    @F,200(0,@6)                                       0284  17040000
         A     @F,PCLCUR                                          0284  17050000
         ST    @F,PCLCUR                                          0284  17060000
*          CNVC  = IDMODPDL;                  /* ALIGN PDE OFFSET     * 17070000
         LR    @3,@F                                              0285  17080000
         MVC   200(2,@6),4(@3)                                    0285  17090000
*          PDLCUR  = PDLIND + CNVA;           /* UPDATE POINTER TO PDE* 17100000
         LH    @F,200(0,@6)                                       0286  17110000
         A     @F,PDLIND                                          0286  17120000
         ST    @F,PDLCUR                                          0286  17130000
* E02TEC30: IF (R5 -> ATABFLGS & KONXC0) = KONX00                       17140000
*                                             /* IF THIS IS A POSITION* 17150000
*             THEN                            /*  AL GO TO PERFORM    * 17160000
E02TEC30 MVC   @CTEMP2(1),KONSTRUC+5                              0287  17170000
         NC    @CTEMP2(1),4(@5)                                   0287  17180000
         CLC   @CTEMP2(1),KONSTRUC                                0287  17190000
*               GOTO E02TEC35;                /*   MOVE TO FTAB       * 17200000
         BC    08,E02TEC35                                        0288  17210000
*         IF (R5 -> ATABFLGS & KONX80) = KONX80                         17220000
*           THEN                              /* IF THIS IS KWRD WITH * 17230000
         MVC   @CTEMP2(1),KONSTRUC+4                              0289  17240000
         NC    @CTEMP2(1),4(@5)                                   0289  17250000
         CLC   @CTEMP2(1),KONSTRUC+4                              0289  17260000
*             GOTO E02TEC40;                  /* VALUE GO TO PROPER     17270000
*                                                ROUTINE              * 17280000
         BC    08,E02TEC40                                        0290  17290000
*         TSTLNG  = KPDENUM;                  /* ALIGN VALUE FOR THIS * 17300000
         L     @3,PDLCUR                                          0291  17310000
         LH    @F,0(0,@3)                                         0291  17320000
         ST    @F,136(0,@6)                                       0291  17330000
*         R5  -> FTABPTR = TSTLNGC;           /* KWRD - 1 IF PRESENT    17340000
*                                                0 IF ABSENT - AND      17350000
*                                                STORE IN ATAB        * 17360000
         MVC   0(4,@5),136(@6)                                    0292  17370000
*         PCLCUR  = PCLCUR + KON6;            /* UPDATE PCL POINTER   * 17380000
         LH    @F,KON6                                            0293  17390000
         A     @F,PCLCUR                                          0293  17400000
         ST    @F,PCLCUR                                          0293  17410000
*         GOTO  E02TEC20;                     /* AND DO NEXT ENTRY    * 17420000
         BC    15,E02TEC20                                        0294  17430000
* E02TEC35: IF R1 -> FTABLNG - R1 -> FTABDLNG - KON4 < IPDELNG          17440000
*             THEN                            /* IF THE VALUE WILL    * 17450000
E02TEC35 LH    @F,KON4                                            0295  17460000
         LCR   @F,@F                                              0295  17470000
         SH    @F,10(0,@1)                                        0295  17480000
         AH    @F,8(0,@1)                                         0295  17490000
         L     @3,PDLCUR                                          0295  17500000
         CH    @F,4(0,@3)                                         0295  17510000
         BC    10,@9E8                                            0295  17520000
*               DO;                           /* NOT FIT CHECK IF     * 17530000
*                 IF R1 -> FTABNXT = KON0     /*THIS IS LAST FTAB     * 17540000
*                   THEN                      /* BLOCK - IF SO GO     * 17550000
         LH    @F,KON0                                            0297  17560000
         C     @F,4(0,@1)                                         0297  17570000
*                      GOTO E02TEC45;          /* GET CORE            * 17580000
         BC    08,E02TEC45                                        0298  17590000
*                 R1 = R1 -> FTABNXT;         /* ELSE UPDATE TO       * 17600000
         L     @1,4(0,@1)                                         0299  17610000
*                 R2 = R1 + KON12;            /* NEXT BLOCK AND       * 17620000
         LH    @2,KON12                                           0300  17630000
         AR    @2,@1                                              0300  17640000
*                 GOTO E02TEC35;              /* TRY AGAIN            * 17650000
         BC    15,E02TEC35                                        0301  17660000
*               END;                                                    17670000
*         R2  = R1 + R1 -> FTABDLNG;          /* SET PTR BEYOND       * 17680000
@9E8     LH    @F,10(0,@1)                                        0303  17690000
         AR    @F,@1                                              0303  17700000
         LR    @2,@F                                              0303  17710000
*         NLOCC  = IPDEPTRC;                  /* ALIGN POINTER        * 17720000
         L     @3,PDLCUR                                          0304  17730000
         MVC   NLOC(4),0(@3)                                      0304  17740000
*         IF  IPDELNG ^= KON0                 /* LAST ELEMENT         * 17750000
*           THEN                                                        17760000
         LH    @F,KON0                                            0305  17770000
         CH    @F,4(0,@3)                                         0305  17780000
         BC    08,@9E7                                            0305  17790000
*             R2 -> FTABDAT(1:IPDELNG) = FREP; /* MOVE TO FTAB  Y01676* 17800000
         L     @7,NLOC                                            0306  17810000
         LR    @E,@7                                              0306  17820000
         LH    @8,4(0,@3)                                         0306  17830000
         BCTR  @8,0                                               0306  17840000
         LA    @A,4(0,@2)                                         0306  17850000
         EX    @8,@MVC                                            0306  17860000
*         R2  -> FTABELNG(1) = KONX00;        /* INITIALIZE HI PART OF* 17870000
@9E7     MVC   0(1,@2),KONSTRUC                                   0307  17880000
*         R2  -> FTABELNG(2) = KONX00;        /*  LENGTH FIELD        * 17890000
         MVC   1(1,@2),KONSTRUC                                   0308  17900000
*         R2  -> FTABELNG(3:4) = IPDELNGC;    /* SET ELMT LENGTH      * 17910000
         L     @3,PDLCUR                                          0309  17920000
         MVC   2(2,@2),4(@3)                                      0309  17930000
*         R1  -> FTABDLNG = R1 -> FTABDLNG + IPDELNG + KON4;            17940000
         LH    @F,KON4                                            0310  17950000
         AH    @F,4(0,@3)                                         0310  17960000
         AH    @F,10(0,@1)                                        0310  17970000
         STH   @F,10(0,@1)                                        0310  17980000
*                                                  /* UPDATE NUMBER OF  17990000
*                                                     BYTES IN USE    * 18000000
*         TSTLNG  = R2;                            /*SAVE ADDR OF ELMT* 18010000
         ST    @2,136(0,@6)                                       0311  18020000
*         R5  -> FTABPTR = TSTLNGC;                /*AND STORE IN ATAB* 18030000
         MVC   0(4,@5),136(@6)                                    0312  18040000
*         GOTO  E02TEC20;                                               18050000
         BC    15,E02TEC20                                        0313  18060000
*         /************************************************************ 18070000
*         /*              THE FOLLOWING CODE HANDLES A                * 18080000
*         /*              KWORD WITH VALUE ELEMENT - IF               * 18090000
*         /*              IT WAS PRESENT THE VALUE IS                 * 18100000
*         /*              OBTAINED AND EXIT IS MADE TO                * 18110000
*         /*              THE POSITIONAL ROUTINE TO                   * 18120000
*         /*              STORE IT IN FTAB - IF NOT THE               * 18130000
*         /*              THE POINTER IN TATB - IS SET TO 0 AND       * 18140000
*         /*              THE NEXT ELEMENT IS OBTAINED                * 18150000
*         /************************************************************ 18160000
* /******************************************************************** 18170000
**/*E02TEC40:      D (NO,,YES,%D11) WAS PARM IN THE INVOCATION STMT? */ 18180000
**/*      P (,E02TEC20:BT) UPDATE PTR TO PCL ELEMENT AND GO LOOK AT NEX 18190000
**/*ENTRY */                                                            18200000
**/*%D11:      P (,E02TEC35) SET PDE PTR & ELE PTR FOR VALUE IN FTAB */ 18210000
* /******************************************************************** 18220000
* E02TEC40: CNVC =  NSBFOF;                   /* ALIGN OFFSET TO SUBFLD 18230000
E02TEC40 MVC   @TEMP3+1(3),SBFCUR                                 0314  18240000
         L     @3,@TEMP3           SBFCUR                         0314  18250000
         MVC   200(2,@6),1(@3)                                    0314  18260000
*         IF  KPDENUM = KON0                  /* IF PARM WAS NOT IN     18270000
*           THEN                                                        18280000
         LH    @F,KON0                                            0315  18290000
         L     @7,PDLCUR                                          0315  18300000
         CH    @F,0(0,@7)                                         0315  18310000
         BC    07,@9E6                                            0315  18320000
*             DO;                             /* INVOCATION STMT  UP-   18330000
*               SBFCUR  = PCLIND + CNVA;      /* DATE SUBFIELD POINTER  18340000
         LH    @F,200(0,@6)                                       0317  18350000
         A     @F,PCLIND                                          0317  18360000
         ST    @F,@TEMP4                                          0317  18370000
         MVC   SBFCUR(3),@TEMP4+1                                 0317  18380000
*               CNVC = IDMODLNG;              /* ALIGN LENGTH OF KWRD * 18390000
         L     @3,PCLCUR                                          0318  18400000
         MVC   200(2,@6),2(@3)                                    0318  18410000
*               PCLCUR  = PCLCUR + CNVA;      /* PCE - UPDATE POINTER * 18420000
         LH    @F,200(0,@6)                                       0319  18430000
         A     @F,PCLCUR                                          0319  18440000
         ST    @F,PCLCUR                                          0319  18450000
*               GOTO E02TEC20;                /* AND LOOK AT NEXT     * 18460000
         BC    15,E02TEC20                                        0320  18470000
*             END;                            /* ENTRY  - OTHERWISE   * 18480000
*         PDLCUR  = SBFCUR + KON3;            /* SET THE PDE          * 18490000
@9E6     LH    @F,KON3                                            0322  18500000
         MVC   @TEMP3+1(3),SBFCUR                                 0322  18510000
         A     @F,@TEMP3                                          0322  18520000
         ST    @F,PDLCUR                                          0322  18530000
*         SBFCUR  = PCLIND + CNVA;            /*  POINTER TO THE      * 18540000
         LH    @F,200(0,@6)                                       0323  18550000
         A     @F,PCLIND                                          0323  18560000
         ST    @F,@TEMP4                                          0323  18570000
         MVC   SBFCUR(3),@TEMP4+1                                 0323  18580000
*         CNVC  = PDLCUR -> IDMODPDL;         /*   CORRECT ENTRY      * 18590000
         L     @3,PDLCUR                                          0324  18600000
         MVC   200(2,@6),4(@3)                                    0324  18610000
*         PDLCUR  = PDLIND + CNVA;            /*    AND GO TO INSERT  * 18620000
         LH    @F,200(0,@6)                                       0325  18630000
         A     @F,PDLIND                                          0325  18640000
         ST    @F,PDLCUR                                          0325  18650000
*         CNVC  = IDMODLNG;                   /*  ALIGN ELMT LENGTH   * 18660000
         L     @3,PCLCUR                                          0326  18670000
         MVC   200(2,@6),2(@3)                                    0326  18680000
*         PCLCUR  = PCLCUR + CNVA;            /* UPDATE ELMT POINTER  * 18690000
         LH    @F,200(0,@6)                                       0327  18700000
         A     @F,PCLCUR                                          0327  18710000
         ST    @F,PCLCUR                                          0327  18720000
*         IF QSPRES = '1'B                    /* IF QUOTED STR  Y01676* 18730000
*           THEN                              /* PRESENT UPDATE Y01676* 18740000
         L     @3,PDLCUR                                          0328  18750000
         TM    6(@3),B'10000000'                                  0328  18760000
         BC    12,@9E5                                            0328  18770000
*             DO;                             /* PDE FIELDS     Y01676* 18780000
*               NLOC = PDLCUR + 8;            /* CHECK FOR CHAR Y01676* 18790000
         LA    @F,8                                               0330  18800000
         A     @F,PDLCUR                                          0330  18810000
         ST    @F,NLOC                                            0330  18820000
*               IF NLOC -> QSPRES = '1'B      /* STRING SPECI-  Y01676* 18830000
*                 THEN                        /* FIED ALSO      Y01676* 18840000
         LR    @7,@F                                              0331  18850000
         TM    6(@7),B'10000000'                                  0331  18860000
         BC    12,@9E4                                            0331  18870000
*                   DO;                       /* YES- TELL USER Y01676* 18880000
*                     LVL1NO = KON26;         /* IT IS IGNORED  Y01676* 18890000
         MVC   304(2,@6),KON26                                    0333  18900000
*                     LVL2NO = KON0;          /* VIA  A         Y01676* 18910000
         MVC   306(2,@6),KON0                                     0334  18920000
*                     VARSGADR = NLOC->QSPDEPTR; /* MESSAGE     Y01676* 18930000
         MVC   297(3,@6),1(@7)                                    0335  18940000
*                     CNVA = NLOC->IPDELNG + KON4; /* ADJUST LENGTH FOR 18950000
*                                                MESSAGE        Y01676* 18960000
         LH    @F,KON4                                            0336  18970000
         AH    @F,4(0,@7)                                         0336  18980000
         STH   @F,200(0,@6)                                       0336  18990000
*                     VARSGLNG = CNVC(2);     /* SAVE LENGTH    Y01676* 19000000
         MVC   296(1,@6),201(@6)                                  0337  19010000
*                     REGSAV(1) = R1;         /* SAVE FTAB PTR  Y01676* 19020000
         ST    @1,204(0,@6)                                       0338  19030000
*                     R1 = ADDR(E01DATDF);    /* GO  TO         Y01676* 19040000
         LR    @1,@6                                              0339  19050000
*                     GEN(LINK EP=IKJEFE04);  /* IKJEFE04       Y01676* 19060000
         LINK EP=IKJEFE04                                               19070000
         DS    0H                                                       19080000
*                     R1 = REGSAV(1);         /* RESTORE THE FTAB       19090000
*                                                POINTER        Y01676* 19100000
         L     @1,204(0,@6)                                       0341  19110000
*                   END;                      /* AND USE QUOTED Y01676* 19120000
*             END;                            /* STRING VALUE   Y01676* 19130000
         BC    15,@9E3                                            0344  19140000
*           ELSE                              /* OTHERWISE UP-  Y01676* 19150000
*             PDLCUR = 8 + PDLCUR;            /* DATE TO CHARACTER      19160000
*                                                STRING AND GO  Y01676* 19170000
@9E5     L     @F,PDLCUR                                          0344  19180000
         AH    @F,@D2                                             0344  19190000
         ST    @F,PDLCUR                                          0344  19200000
*         GOTO  E02TEC35;                     /* PLACE VALUE IN FTAB  * 19210000
         BC    15,E02TEC35                                        0345  19220000
*         /************************************************************ 19230000
*         /*              THE FOLLOWING OBTAINS MORE                  * 19240000
*         /*              STORAGE FOR FTAB WHEN THE                   * 19250000
*         /*              EXISTING BLOCKS HAVE BEEN                   * 19260000
*         /*              EXHAUSTED                                   * 19270000
*         /************************************************************ 19280000
* /******************************************************************** 19290000
**/*E02TEC45:      P CALCULATE MINIMUM AMT NEEDED IN FTAB BLOCK */      19300000
**/*      S IKJEFE03: PERFORM GETMAIN */                                19310000
**/*      D (YES,,NO,E02EXT10) WAS GETMAIN SUCCESSFUL? */               19320000
**/*   P (,E02TEC35:BT) INITIALIZE PTR AND CONTROL FIELD OF NEW BLOCK * 19330000
* /******************************************************************** 19340000
* E02TEC45: GMNMIN = IPDELNG + KON16;         /* SET MINIMUM AMOUNT   * 19350000
E02TEC45 LH    @F,KON16                                           0346  19360000
         L     @3,PDLCUR                                          0346  19370000
         AH    @F,4(0,@3)                                         0346  19380000
         ST    @F,140(0,@6)                                       0346  19390000
*         GMNMIN  = ((GMNMIN + KON7) / KON8) * KON8;                    19400000
         LH    @E,KON7                                            0347  19410000
         A     @E,140(0,@6)                                       0347  19420000
         SRDA  @E,32                                              0347  19430000
         LH    @0,KON8                                            0347  19440000
         DR    @E,@0                                              0347  19450000
         MH    @F,KON8                                            0347  19460000
         ST    @F,140(0,@6)                                       0347  19470000
*                                             /*IF NOT A MULTIPLE OF 8* 19480000
*                                             /* ROUND UPWARDS        * 19490000
*         E01SW10  = '1'B;                    /* SET GETMAIN SWITCH   * 19500000
         OI    203(@6),B'01000000'                                0348  19510000
*         REGSAV(1) = R4;                                               19520000
         ST    @4,204(0,@6)                                       0349  19530000
*         R4  = KON1;                         /* SET SUBPOOL INDICATOR* 19540000
         LH    @4,KON1                                            0350  19550000
*         TSTLNG = R1;                                                  19560000
         ST    @1,136(0,@6)                                       0351  19570000
*         R1  = R6;                           /*SET REG1 POINTING TO    19580000
*                                               DATA IN E01           * 19590000
         LR    @1,@6                                              0352  19600000
*         CALL IKJEFE03;                      /* PERFORM GETMAIN      * 19610000
         L     @F,@V1              ADDRESS OF IKJEFE03            0353  19620000
         BALR  @E,@F                                              0353  19630000
*         E01SW10  = '0'B;                    /* RESET SWITCH         * 19640000
         NI    203(@6),B'10111111'                                0354  19650000
*         IF  E01SW15 = '1'B                  /* IF WE COULD NOT GET  * 19660000
*           THEN                              /*  MINIMUM - CORE      * 19670000
         TM    203(@6),B'00000010'                                0355  19680000
*             GOTO E02EXT10;                  /*  RETURN TO CALLER    * 19690000
         BC    01,E02EXT10                                        0356  19700000
*         R1  = TSTLNG;                       /* RESTORE REG1         * 19710000
         L     @1,136(0,@6)                                       0357  19720000
*         R1  -> FTABNXT = ADDGMN;            /* SET OLD FORWARD PTR  * 19730000
         MVC   4(4,@1),148(@6)                                    0358  19740000
*         R1  -> FTABNXT -> FTABLST = R1;     /* SET NEW BACK PTR     * 19750000
         L     @3,4(0,@1)                                         0359  19760000
         ST    @1,0(0,@3)                                         0359  19770000
*         R1  = R1 -> FTABNXT;                /* SET CURRENT BLOCK PTR* 19780000
         L     @1,4(0,@1)                                         0360  19790000
*         R1  -> FTABNXT = KON0;              /* SET NEW FORWARD PTR  * 19800000
         LH    @F,KON0                                            0361  19810000
         ST    @F,4(0,@1)                                         0361  19820000
*         R1  -> FTABLNG = AMTGMN;            /* SET BLOCK LENGTH     * 19830000
         MVC   8(2,@1),154(@6)                                    0362  19840000
*         R2  = R1 + KON12;                   /* SET ELEMENT PTR      * 19850000
         LH    @2,KON12                                           0363  19860000
         AR    @2,@1                                              0363  19870000
*         R1  -> FTABDLNG = KON12;            /* SET NUMBER BYTES USED* 19880000
         MVC   10(2,@1),KON12                                     0364  19890000
*         R4 = REGSAV(1);                                               19900000
         L     @4,204(0,@6)                                       0365  19910000
*         GOTO E02TEC35;                      /* RETURN TO CALLER     * 19920000
         BC    15,E02TEC35                                        0366  19930000
*         /************************************************************ 19940000
*         /*              THE FOLLOWING CODE PROVIDES                 * 19950000
*         /*              CONTINUITY BETWEEN BLOCKS OF                * 19960000
*         /*              ATAB                                        * 19970000
*         /************************************************************ 19980000
* /******************************************************************** 19990000
**/*E02TEC50:      D (NO,,YES,E02EXT10) IS THIS THE LAST ATAB BLOCK? */ 20000000
**/*      P (,E02TEC25) UPDATE TO NEXT BLOCK */                         20010000
**/*E02MML05:      P SET TERMINATION SWITCH */                          20020000
**/*      S IKJEFE04: LINK TO MESSAGE MODULE */                         20030000
**/*      D (YES,,NO,E02EXT15) IS THERE AN ATAB? */                     20040000
**/*E02EXT10:      P SET PTR TO FIRST BLOCK OF FTAB */                  20050000
**/*      S IKJEFE03: PERFORM FREEMAIN OF PCL */                        20060000
**/*      P RELEASE THE PDL */                                          20070000
**/*E02EXT15:      R RETURN */                                          20080000
* /******************************************************************** 20090000
* E02TEC50: IF R4 -> ATABNXT = KON0                                     20100000
*             THEN                                                      20110000
E02TEC50 LH    @F,KON0                                            0367  20120000
         C     @F,4(0,@4)                                         0367  20130000
*               GOTO E02EXT10;                /*IF THIS LAST BLOCK IT * 20140000
         BC    08,E02EXT10                                        0368  20150000
*         R4  = R4 -> ATABNXT;                /* IS FINISHED - IF NOT * 20160000
         L     @4,4(0,@4)                                         0369  20170000
*         R5  = R4 + KON12;                   /* UPDATE TO NEXT BLOCK * 20180000
         LH    @5,KON12                                           0370  20190000
         AR    @5,@4                                              0370  20200000
*         GOTO  E02TEC25;                     /* AND CONTINUE         * 20210000
         BC    15,E02TEC25                                        0371  20220000
* E02MML05: E01SW9 = '1'B;                    /* SET TERMINATION SWITCH 20230000
E02MML05 OI    203(@6),B'10000000'                                0372  20240000
*         R1 = ADDR(E01DATDF);                /* SET REG1 POINTING TO   20250000
*                                                PARMS                * 20260000
         LR    @1,@6                                              0373  20270000
*         VARSGLNG = KONX00;                  /*SET CODE INDICATING NO  20280000
*                                               VARIABLE PART IN 2ND    20290000
*                                               LEVEL MESSAGE         * 20300000
         MVC   296(1,@6),KONSTRUC                                 0374  20310000
*         VARSGLN2 = KONX00;                  /*SET CODE INDICATING NO  20320000
*                                               VARIABLE PART IN 2ND    20330000
*                                               LEVEL MESSAGE         * 20340000
         MVC   300(1,@6),KONSTRUC                                 0375  20350000
*         GEN(LINK  EP=IKJEFE04);                                       20360000
         LINK  EP=IKJEFE04                                              20370000
         DS    0H                                                       20380000
*         IF ATABIND = KON0                   /* IF THERE IS NO ATAB  * 20390000
*           THEN                              /*  OR FTAB BYPASS UPDATE 20400000
         LH    @F,KON0                                            0377  20410000
         C     @F,172(0,@6)                                       0377  20420000
*             GOTO E02EXT15;                  /*  OF FTAB PTR         * 20430000
         BC    08,E02EXT15                                        0378  20440000
* E02EXT10: IF FTABIND ^= KON0                /* BACKSTEP UNTIL       * 20450000
*             THEN                            /*  FIRST FTAB BLOCK    * 20460000
E02EXT10 LH    @F,KON0                                            0379  20470000
         C     @F,180(0,@6)                                       0379  20480000
         BC    08,@9E2                                            0379  20490000
*               IF FTABLST ^= KON0            /*  IS REACHED          * 20500000
*                 THEN                        /*  AND SET FTABIND     * 20510000
         L     @3,180(0,@6)                                       0380  20520000
         C     @F,0(0,@3)                                         0380  20530000
         BC    08,@9E1                                            0380  20540000
*                   DO;                       /*  POINTING            * 20550000
*                     FTABIND = FTABLST;      /*  TO THAT BLOCK       * 20560000
         MVC   180(4,@6),0(@3)                                    0382  20570000
*                     GOTO E02EXT10;                                    20580000
         BC    15,E02EXT10                                        0383  20590000
*                   END;                                                20600000
*         IF ATABIND ^= KON0                   /* IF PCL CORE WAS     * 20610000
*           THEN                               /* OBTAINED THEN IT    * 20620000
@9E1     EQU   *                                                  0385  20630000
@9E2     LH    @F,KON0                                            0385  20640000
         C     @F,172(0,@6)                                       0385  20650000
         BC    08,@9E0                                            0385  20660000
*             DO;                              /* MUST BE FREED       * 20670000
*               RESTRICT (R3);                                          20680000
*               R3 = LOPCL;                   /* SET REG3 TO AMT TO BE* 20690000
         L     @7,PCLIND                                          0388  20700000
         LH    @3,0(0,@7)                                         0388  20710000
*               R4  = KON1;                   /*  FREED AND REG4 TO   * 20720000
         LH    @4,KON1                                            0389  20730000
*               TSTLNG  = PCLIND;             /*  SUBPOOL NUMBER        20740000
*                                                 TSTLNG POINTS TO ADDR 20750000
*                                                 OF CORE TO BE FREED * 20760000
         MVC   136(4,@6),PCLIND                                   0390  20770000
*               R1  = R6;                     /* REG1 POINTS TO PARMS * 20780000
         LR    @1,@6                                              0391  20790000
*               E01SW13  = '1'B;              /* SET FREEMAIN SWITCH  * 20800000
         OI    203(@6),B'00001000'                                0392  20810000
*               CALL  IKJEFE03;               /*  PERFORM FREEMAIN    * 20820000
         L     @F,@V1              ADDRESS OF IKJEFE03            0393  20830000
         BALR  @E,@F                                              0393  20840000
*               E01SW13  = '0'B;              /* RESET SWITCH         * 20850000
         NI    203(@6),B'11110111'                                0394  20860000
*               RELEASE (R3);                                           20870000
*             END;                                                      20880000
*         R2  = ADDR(PDLIND);                 /* RELEASE CORE OBTAINED* 20890000
@9E0     LA    @2,PDLIND                                          0397  20900000
*         GEN( IKJRLSA (R2));                                           20910000
          IKJRLSA (R2)                                                  20920000
         DS    0H                                                       20930000
* E02EXT15: RETURN;                                                     20940000
         BC    15,@EL01                                           0399  20950000
*         GEN;                                                          20960000
QALIST   IKJPARM DSECT=QCONT                                            20970000
QPRM1    IKJPOSIT QSTRING                                               20980000
QPRM2    IKJKEYWD                                                       20990000
         IKJNAME  'LIST'                                                21000000
         IKJNAME  'NOLIST'                                              21010000
QPRM3    IKJKEYWD                                                       21020000
         IKJNAME  'PROMPT'                                       Y01676 21030000
         IKJNAME  'NOPROMPT'                                     Y01676 21040000
         IKJENDP                                                        21050000
         DS    0H                                                       21060000
**/*IKJEFE02: END  */                                                   21070000
*          END                                                          21080000
* /* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.       21090000
* /*%INCLUDE SYSLIB  (IKJCPPL )                                         21100000
* /*%INCLUDE SYSLIB  (IKJECT  )                                         21110000
* /*%INCLUDE SYSLIB  (IKJPPL  )                                         21120000
* ;                                                                     21130000
@EL01    L     @D,4(0,@D)                                         0401  21140000
         LR    @1,@C                                              0401  21150000
         L     @0,@SIZ001                                         0401  21160000
         FREEMAIN R,LV=(0),A=(1)                                  0401  21170000
         L     @E,12(0,@D)                                        0401  21180000
         L     @0,20(0,@D)                                        0401  21190000
         LM    @2,@C,28(@D)                                       0401  21200000
         BCR   15,@E                                              0401  21210000
@DATA1   EQU   *                                                        21220000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           21230000
@1       EQU   01                                                       21240000
@2       EQU   02                                                       21250000
@3       EQU   03                                                       21260000
@4       EQU   04                                                       21270000
@5       EQU   05                                                       21280000
@6       EQU   06                                                       21290000
@7       EQU   07                                                       21300000
@8       EQU   08                                                       21310000
@9       EQU   09                                                       21320000
@A       EQU   10                                                       21330000
@B       EQU   11                                                       21340000
@C       EQU   12                                                       21350000
@D       EQU   13                                                       21360000
@E       EQU   14                                                       21370000
@F       EQU   15                                                       21380000
@D1      DC    H'2'                                                     21390000
@D2      DC    H'8'                                                     21400000
@MVC     MVC   0(1,@A),0(@E)                                            21410000
@V1      DC    V(IKJEFE03)                                              21420000
@V2      DC    V(QALIST)                                                21430000
         DS    0F                                                       21440000
@SIZ001  DC    AL1(&SPN)                                                21450000
         DC    AL3(@DATEND-@DATD)                                       21460000
         DS    0F                                                       21470000
         DS    0D                                                       21480000
@DATA    EQU   *                                                        21490000
DUMPARM  EQU   00000000            FULLWORD INTEGER                     21500000
R1       EQU   00000001            FULLWORD POINTER REGISTER            21510000
R2       EQU   00000002            FULLWORD POINTER REGISTER            21520000
R3       EQU   00000003            FULLWORD POINTER REGISTER            21530000
R4       EQU   00000004            FULLWORD POINTER REGISTER            21540000
R5       EQU   00000005            FULLWORD POINTER REGISTER            21550000
R6       EQU   00000006            FULLWORD POINTER REGISTER            21560000
R15      EQU   00000015            FULLWORD POINTER REGISTER            21570000
KON0     EQU   *                   HALFWORD INTEGER                     21580000
         DC    FL2'0'                                                   21590000
KON1     EQU   *                   HALFWORD INTEGER                     21600000
         DC    FL2'1'                                                   21610000
KON2     EQU   *                   HALFWORD INTEGER                     21620000
         DC    FL2'2'                                                   21630000
KON3     EQU   *                   HALFWORD INTEGER                     21640000
         DC    FL2'3'                                                   21650000
KON4     EQU   *                   HALFWORD INTEGER                     21660000
         DC    FL2'4'                                                   21670000
KON6     EQU   *                   HALFWORD INTEGER                     21680000
         DC    FL2'6'                                                   21690000
KON7     EQU   *                   HALFWORD INTEGER                     21700000
         DC    FL2'7'                                                   21710000
KON8     EQU   *                   HALFWORD INTEGER                     21720000
         DC    FL2'8'                                                   21730000
KON10    EQU   *                   HALFWORD INTEGER                     21740000
         DC    FL2'10'                                                  21750000
KON11    EQU   *                   HALFWORD INTEGER                     21760000
         DC    FL2'11'                                                  21770000
KON12    EQU   *                   HALFWORD INTEGER                     21780000
         DC    FL2'12'                                                  21790000
KON13    EQU   *                   HALFWORD INTEGER                     21800000
         DC    FL2'13'                                                  21810000
KON16    EQU   *                   HALFWORD INTEGER                     21820000
         DC    FL2'16'                                                  21830000
KON20    EQU   *                   HALFWORD INTEGER                     21840000
         DC    FL2'20'                                                  21850000
KON21    EQU   *                   HALFWORD INTEGER                     21860000
         DC    FL2'21'                                                  21870000
KON24    EQU   *                   HALFWORD INTEGER                     21880000
         DC    FL2'24'                                                  21890000
KON26    EQU   *                   HALFWORD INTEGER                     21900000
         DC    FL2'26'                                                  21910000
KON34    EQU   *                   HALFWORD INTEGER                     21920000
         DC    FL2'34'                                                  21930000
KON35    EQU   *                   HALFWORD INTEGER                     21940000
         DC    FL2'35'                                                  21950000
KON58    EQU   *                   HALFWORD INTEGER                     21960000
         DC    FL2'58'                                                  21970000
KON54    EQU   *                   HALFWORD INTEGER                     21980000
         DC    FL2'54'                                                  21990000
KON57    EQU   *                   HALFWORD INTEGER                     22000000
         DC    FL2'57'                                                  22010000
KON224   EQU   *                   HALFWORD INTEGER                     22020000
         DC    FL2'224'                                                 22030000
KQUOTE   EQU   *                   1 BYTE(S)                            22040000
         DC    X'7D'                                                    22050000
KONSTRUC EQU   @DATA+00000048      7 BYTE(S) ON WORD                    22060000
         ORG   KONSTRUC+00000000                                        22070000
KONX00   EQU   *                   1 BYTE(S)                            22080000
         DC    X'00'                                                    22090000
KONX20   EQU   *                   1 BYTE(S)                            22100000
         DC    X'20'                                                    22110000
KONX23   EQU   *                   1 BYTE(S)                            22120000
         DC    X'23'                                                    22130000
KONX40   EQU   *                   1 BYTE(S)                            22140000
         DC    X'40'                                                    22150000
KONX80   EQU   *                   1 BYTE(S)                            22160000
         DC    X'80'                                                    22170000
KONXC0   EQU   *                   1 BYTE(S)                            22180000
         DC    X'C0'                                                    22190000
KONXFF   EQU   *                   1 BYTE(S)                            22200000
         DC    X'FF'                                                    22210000
E01DATDF EQU   00000000            362 BYTE(S) ON DWORD                 22220000
DCBAR    EQU   E01DATDF+00000000   88 BYTE(S) ON DWORD                  22230000
ADPTR1   EQU   E01DATDF+00000088   FULLWORD POINTER                     22240000
ADPTR2   EQU   E01DATDF+00000092   FULLWORD POINTER                     22250000
MMNAMAR  EQU   E01DATDF+00000096   8 BYTE(S) ON WORD                    22260000
RDECB    EQU   E01DATDF+00000104   20 BYTE(S) ON WORD                   22270000
A00000   EQU   E01DATDF+00000104   6 BYTE(S)                            22280000
DECLNGTH EQU   E01DATDF+00000110   HALFWORD INTEGER                     22290000
A00001   EQU   E01DATDF+00000112   8 BYTE(S)                            22300000
DECIOBPT EQU   E01DATDF+00000120   FULLWORD POINTER                     22310000
LINPTR1  EQU   E01DATDF+00000124   FULLWORD POINTER                     22320000
EOLCNT   EQU   E01DATDF+00000128   FULLWORD INTEGER                     22330000
POSCNT   EQU   E01DATDF+00000132   FULLWORD INTEGER                     22340000
TSTLNG   EQU   E01DATDF+00000136   FULLWORD INTEGER                     22350000
TSTLNGC  EQU   E01DATDF+00000136   4 BYTE(S)                            22360000
GMNMIN   EQU   E01DATDF+00000140   FULLWORD INTEGER                     22370000
GMNMAX   EQU   E01DATDF+00000144   FULLWORD INTEGER                     22380000
ADDGMN   EQU   E01DATDF+00000148   FULLWORD POINTER                     22390000
AMTGMN   EQU   E01DATDF+00000152   FULLWORD INTEGER                     22400000
SP78ADDR EQU   E01DATDF+00000156   FULLWORD POINTER                     22410000
SP78LNGT EQU   E01DATDF+00000160   FULLWORD POINTER                     22420000
RDXCNV   EQU   E01DATDF+00000164   FULLWORD INTEGER                     22430000
A00002   EQU   E01DATDF+00000164   3 BYTE(S)                            22440000
DDIG     EQU   E01DATDF+00000167   1 BYTE(S)                            22450000
POSSPC   EQU   E01DATDF+00000168   FULLWORD INTEGER                     22460000
ATABIND  EQU   E01DATDF+00000172   FULLWORD POINTER                     22470000
ATABCUR  EQU   E01DATDF+00000176   FULLWORD POINTER                     22480000
FTABIND  EQU   E01DATDF+00000180   FULLWORD POINTER                     22490000
FTABCUR  EQU   E01DATDF+00000184   FULLWORD POINTER                     22500000
VALCNT   EQU   E01DATDF+00000188   FULLWORD INTEGER                     22510000
KWOCNT   EQU   E01DATDF+00000192   HALFWORD INTEGER                     22520000
KWWCNT   EQU   E01DATDF+00000194   HALFWORD INTEGER                     22530000
KWOBYT   EQU   E01DATDF+00000196   HALFWORD INTEGER                     22540000
KWWBYT   EQU   E01DATDF+00000198   HALFWORD INTEGER                     22550000
CNVA     EQU   E01DATDF+00000200   HALFWORD INTEGER                     22560000
CNVC     EQU   E01DATDF+00000200   2 BYTE(S)                            22570000
E01BINSW EQU   E01DATDF+00000202   2 BYTE(S) ON HWORD                   22580000
E01SW1   EQU   E01DATDF+00000202   1 BIT(S)                             22590000
E01SW2   EQU   E01DATDF+00000202   1 BIT(S)                             22600000
E01SW3   EQU   E01DATDF+00000202   1 BIT(S)                             22610000
E01SW4   EQU   E01DATDF+00000202   1 BIT(S)                             22620000
E01SW5   EQU   E01DATDF+00000202   1 BIT(S)                             22630000
E01SW6   EQU   E01DATDF+00000202   1 BIT(S)                             22640000
E01SW7   EQU   E01DATDF+00000202   1 BIT(S)                             22650000
E01SW8   EQU   E01DATDF+00000202   1 BIT(S)                             22660000
E01SW9   EQU   E01DATDF+00000203   1 BIT(S)                             22670000
E01SW10  EQU   E01DATDF+00000203   1 BIT(S)                             22680000
E01SW11  EQU   E01DATDF+00000203   1 BIT(S)                             22690000
E01SW12  EQU   E01DATDF+00000203   1 BIT(S)                             22700000
E01SW13  EQU   E01DATDF+00000203   1 BIT(S)                             22710000
E01SW14  EQU   E01DATDF+00000203   1 BIT(S)                             22720000
E01SW15  EQU   E01DATDF+00000203   1 BIT(S)                             22730000
E01SW16  EQU   E01DATDF+00000203   1 BIT(S)                             22740000
REGSAV   EQU   E01DATDF+00000204   3*FULLWORD INTEGER                   22750000
LATAB    EQU   E01DATDF+00000216   FULLWORD POINTER                     22760000
LFTAB    EQU   E01DATDF+00000220   FULLWORD POINTER                     22770000
BFAPTR   EQU   E01DATDF+00000224   FULLWORD INTEGER                     22780000
BFBPTR   EQU   E01DATDF+00000228   FULLWORD POINTER                     22790000
CPPLPTR  EQU   E01DATDF+00000232   FULLWORD POINTER                     22800000
STPRM    EQU   E01DATDF+00000236   3*FULLWORD INTEGER                   22810000
PPLPTR   EQU   E01DATDF+00000248   FULLWORD POINTER                     22820000
CBCOR    EQU   E01DATDF+00000252   24 BYTE(S)                           22830000
SRECB    EQU   E01DATDF+00000276   FULLWORD INTEGER                     22840000
RETCDAR  EQU   E01DATDF+00000280   FULLWORD INTEGER                     22850000
ABLK1    EQU   E01DATDF+00000284   FULLWORD POINTER                     22860000
EOB      EQU   E01DATDF+00000288   FULLWORD POINTER                     22870000
RCDST    EQU   E01DATDF+00000292   FULLWORD POINTER                     22880000
VARSGLNG EQU   E01DATDF+00000296   1 BYTE(S)                            22890000
VARSGADR EQU   E01DATDF+00000297   3  BYTE  POINTER ON WORD+1           22900000
VARSGLN2 EQU   E01DATDF+00000300   1 BYTE(S)                            22910000
VARSGAD2 EQU   E01DATDF+00000301   3  BYTE  POINTER ON WORD+1           22920000
LVL1NO   EQU   E01DATDF+00000304   HALFWORD INTEGER                     22930000
LVL2NO   EQU   E01DATDF+00000306   HALFWORD INTEGER                     22940000
PDLPTR   EQU   E01DATDF+00000308   FULLWORD POINTER                     22950000
DRDNPTR  EQU   E01DATDF+00000312   46 BYTE(S) ON WORD                   22960000
DSNARLNG EQU   E01DATDF+00000312   HALFWORD INTEGER                     22970000
DSNARLCH EQU   E01DATDF+00000312   2 BYTE(S)                            22980000
DSNAMAR  EQU   E01DATDF+00000314   44 BYTE(S)                           22990000
CBUFLSAV EQU   E01DATDF+00000358   HALFWORD INTEGER                     23000000
CBUFLSAC EQU   E01DATDF+00000358   2 BYTE(S)                            23010000
POSBYT   EQU   E01DATDF+00000360   HALFWORD INTEGER                     23020000
CPPL     EQU   00000000            16 BYTE(S) ON WORD                   23030000
CPPLCBUF EQU   CPPL+00000000       FULLWORD POINTER                     23040000
CPPLUPT  EQU   CPPL+00000004       FULLWORD POINTER                     23050000
CPPLPSCB EQU   CPPL+00000008       FULLWORD POINTER                     23060000
CPPLECT  EQU   CPPL+00000012       FULLWORD POINTER                     23070000
ECTPTR   EQU   00000012            FULLWORD POINTER                     23080000
ECT      EQU   00000000            40 BYTE(S) ON WORD                   23090000
ECTRCDF  EQU   ECT+00000000        1 BYTE(S)                            23100000
ECTRTCD  EQU   ECT+00000001        3  BYTE  POINTER ON WORD+1           23110000
ECTIOWA  EQU   ECT+00000004        FULLWORD POINTER                     23120000
ECTMSGF  EQU   ECT+00000008        1 BYTE(S)                            23130000
ECTSMSG  EQU   ECT+00000009        3  BYTE  POINTER                     23140000
ECTPCMD  EQU   ECT+00000012        8 BYTE(S)                            23150000
ECTSCMD  EQU   ECT+00000020        8 BYTE(S)                            23160000
ECTSWS   EQU   ECT+00000028        1 BYTE(S)                            23170000
ECTNOPD  EQU   ECT+00000028        1 BIT(S)                             23180000
A00003   EQU   ECT+00000028        1 BIT(S)                             23190000
ECTATRM  EQU   ECT+00000028        1 BIT(S)                             23200000
ECTLOGF  EQU   ECT+00000028        1 BIT(S)                             23210000
ECTNMAL  EQU   ECT+00000028        1 BIT(S)                             23220000
ECTNNOT  EQU   ECT+00000028        1 BIT(S)                             23230000
ECTBKGRD EQU   ECT+00000028        1 BIT(S)                             23240000
A00004   EQU   ECT+00000028        1 BIT(S)                             23250000
ECTDDNUM EQU   ECT+00000029        3  BYTE  POINTER ON WORD+1           23260000
ECTUSER  EQU   ECT+00000032        FULLWORD POINTER                     23270000
ECTBKPB  EQU   ECT+00000036        FULLWORD POINTER                     23280000
CBUFPTR  EQU   00000000            FULLWORD POINTER                     23290000
CBUF     EQU   00000000            5 BYTE(S) ON WORD                    23300000
CBUFLNG  EQU   CBUF+00000000       HALFWORD POINTER                     23310000
CBUFOFF  EQU   CBUF+00000002       HALFWORD POINTER                     23320000
CBUFDATA EQU   CBUF+00000004       1 BYTE(S)                            23330000
PPL      EQU   00000000            28 BYTE(S) ON WORD                   23340000
PPLUPT   EQU   PPL+00000000        FULLWORD POINTER                     23350000
PPLECT   EQU   PPL+00000004        FULLWORD POINTER                     23360000
PPLECB   EQU   PPL+00000008        FULLWORD POINTER                     23370000
PPLPCL   EQU   PPL+00000012        FULLWORD POINTER                     23380000
PPLANS   EQU   PPL+00000016        FULLWORD POINTER                     23390000
PPLCBUF  EQU   PPL+00000020        FULLWORD POINTER                     23400000
PPLUWA   EQU   PPL+00000024        FULLWORD POINTER                     23410000
ATAB     EQU   00000000            12 BYTE(S) ON WORD                   23420000
ATABLST  EQU   ATAB+00000000       FULLWORD POINTER                     23430000
ATABNXT  EQU   ATAB+00000004       FULLWORD POINTER                     23440000
ATABLNG  EQU   ATAB+00000008       FULLWORD INTEGER                     23450000
ATABELMT EQU   00000000            263 BYTE(S) ON WORD                  23460000
FTABPTR  EQU   ATABELMT+00000000   4 BYTE(S)                            23470000
ATABFLGS EQU   ATABELMT+00000004   1 BYTE(S)                            23480000
ATABELNC EQU   ATABELMT+00000005   2 BYTE(S)                            23490000
ATABDAT  EQU   ATABELMT+00000007   256 BYTE(S)                          23500000
FTAB     EQU   00000000            12 BYTE(S) ON WORD                   23510000
FTABLST  EQU   FTAB+00000000       FULLWORD POINTER                     23520000
FTABNXT  EQU   FTAB+00000004       FULLWORD POINTER                     23530000
FTABLNG  EQU   FTAB+00000008       HALFWORD INTEGER                     23540000
FTABDLNG EQU   FTAB+00000010       HALFWORD INTEGER                     23550000
FTABELMT EQU   00000000            260 BYTE(S) ON WORD                  23560000
FTABELNG EQU   FTABELMT+00000000   4 BYTE(S)                            23570000
FTABDAT  EQU   FTABELMT+00000004   256 BYTE(S)                          23580000
PCELMT   EQU   00000000            57 BYTE(S)                           23590000
PARMMOD  EQU   00000000            6 BYTE(S) ON WORD                    23600000
LOPCL    EQU   PARMMOD+00000000    HALFWORD INTEGER                     23610000
LOPDL    EQU   PARMMOD+00000002    HALFWORD INTEGER                     23620000
OTKW     EQU   PARMMOD+00000004    HALFWORD INTEGER                     23630000
IDMOD    EQU   @DATA+00000056      57 BYTE(S) ON WORD                   23640000
         ORG   IDMOD+00000000                                           23650000
A00006   EQU   *                   2 BYTE(S)                            23660000
         DC    X'9000'                                                  23670000
A00007   EQU   *                   HALFWORD INTEGER                     23680000
         DC    FL2'57'                                                  23690000
A00008   EQU   *                   FULLWORD INTEGER                     23700000
         DC    FL4'000'                                                 23710000
A00009   EQU   *                   1 BYTE(S)                            23720000
         DC    X'00'                                                    23730000
A00010   EQU   *                   2 BYTE(S)                            23740000
         DC    X'001A'                                                  23750000
A00011   EQU   *                   2 BYTE(S)                            23760000
         DC    X'0012'                                                  23770000
A00012   EQU   *                   22 BYTE(S)                           23780000
         DC    C'POSITIONAL PARAMETER  '                                23790000
A00013   EQU   *                   1 BYTE(S)                            23800000
         DC    X'14'                                                    23810000
A00014   EQU   *                   21 BYTE(S)                           23820000
         DC    C'POSITIONAL PARAMETER '                                 23830000
KWMOD    EQU   @DATA+00000116      11 BYTE(S) ON WORD                   23840000
         ORG   KWMOD+00000000                                           23850000
A00015   EQU   *                   2 BYTE(S)                            23860000
         DC    X'4000'                                                  23870000
A00016   EQU   *                   HALFWORD INTEGER                     23880000
         DC    FL2'6'                                                   23890000
A00017   EQU   KWMOD+00000004      HALFWORD INTEGER                     23900000
         ORG   KWMOD+00000006                                           23910000
A00018   EQU   *                   2 BYTE(S)                            23920000
         DC    X'6000'                                                  23930000
A00019   EQU   KWMOD+00000008      3 BYTE(S)                            23940000
DUMIDENT EQU   00000000            313 BYTE(S)                          23950000
A00020   EQU   DUMIDENT+00000000   3 BIT(S)                             23960000
IDMODPMB EQU   DUMIDENT+00000000   1 BIT(S)                             23970000
A00021   EQU   DUMIDENT+00000000   12 BIT(S)                            23980000
IDMODLEN EQU   DUMIDENT+00000002   2  BYTE  INTEGER                     23990000
IDMODLNG EQU   DUMIDENT+00000002   2 BYTE(S)                            24000000
IDMODPDL EQU   DUMIDENT+00000004   2 BYTE(S)                            24010000
A00022   EQU   DUMIDENT+00000006   7 BYTE(S)                            24020000
IDMODTYP EQU   DUMIDENT+00000013   22 BYTE(S)                           24030000
IDPRLEN  EQU   DUMIDENT+00000035   1 BYTE(S)                            24040000
IDPOSPMT EQU   DUMIDENT+00000036   277 BYTE(S)                          24050000
A00023   EQU   DUMIDENT+00000036   21 BYTE(S)                           24060000
POSNAME  EQU   DUMIDENT+00000057   256 BYTE(S)                          24070000
DUMKWORD EQU   00000000            267 BYTE(S) ON WORD                  24080000
A00024   EQU   DUMKWORD+00000000   4 BYTE(S)                            24090000
KWPDL    EQU   DUMKWORD+00000004   2 BYTE(S)                            24100000
A00025   EQU   DUMKWORD+00000006   5 BIT(S)                             24110000
KWSFB    EQU   DUMKWORD+00000006   1 BIT(S)                             24120000
A00026   EQU   DUMKWORD+00000006   10 BIT(S)                            24130000
KWELNG   EQU   DUMKWORD+00000008   2 BYTE(S)                            24140000
KWNAMLNG EQU   DUMKWORD+00000010   1 BYTE(S)                            24150000
KWDAT    EQU   DUMKWORD+00000011   256 BYTE(S)                          24160000
         ORG   @DATA+00000127                                           24170000
TYPKW    EQU   *                   22 BYTE(S)                           24180000
         DC    C' VALUE FOR KEYWORD    '                                24190000
KWSBO    EQU   00000002            2 BYTE(S)                            24200000
SBFMOD   EQU   *                   3 BYTE(S)                            24210000
         DC    X'000000'                                                24220000
DUMSBF   EQU   00000000            3 BYTE(S) ON WORD                    24230000
A00027   EQU   DUMSBF+00000000     1 BYTE(S)                            24240000
NSBFOF   EQU   DUMSBF+00000001     2 BYTE(S)                            24250000
FREP     EQU   00000000            32766 BYTE(S)                        24260000
DUMIPDE  EQU   00000000            7 BYTE(S) ON WORD                    24270000
IPDEPTRC EQU   DUMIPDE+00000000    4 BYTE(S)                            24280000
IPDELNG  EQU   DUMIPDE+00000004    HALFWORD INTEGER                     24290000
IPDELNGC EQU   DUMIPDE+00000004    2 BYTE(S)                            24300000
IPDEFLGS EQU   DUMIPDE+00000006    1 BYTE(S)                            24310000
DUMKPDE  EQU   00000000            2 BYTE(S) ON WORD                    24320000
KPDENUM  EQU   DUMKPDE+00000000    HALFWORD INTEGER                     24330000
EKPDE    EQU   00000000            4 BYTE(S) ON WORD                    24340000
ELISTPDE EQU   EKPDE+00000000      HALFWORD INTEGER                     24350000
EPRMTPDE EQU   EKPDE+00000002      HALFWORD INTEGER                     24360000
QPOSMOD  EQU   @DATA+00000152      7 BYTE(S) ON WORD                    24370000
A00028   EQU   *                   2 BYTE(S)                            24380000
         DC    X'2000'                                                  24390000
A00029   EQU   *                   HALFWORD INTEGER                     24400000
         DC    FL2'7'                                                   24410000
A00030   EQU   *                   HALFWORD INTEGER                     24420000
         DC    FL2'0'                                                   24430000
A00031   EQU   *                   1 BYTE(S)                            24440000
         DC    X'09'                                                    24450000
DUMQPOS  EQU   00000000            7 BYTE(S)                            24460000
QMODOPT  EQU   DUMQPOS+00000000    2 BYTE(S)                            24470000
QMODLGN  EQU   DUMQPOS+00000002    2  BYTE  INTEGER                     24480000
QMODOFF  EQU   DUMQPOS+00000004    2 BYTE(S)                            24490000
QMODTYP  EQU   DUMQPOS+00000006    1 BYTE(S)                            24500000
DUMQPDE  EQU   00000000            8 BYTE(S) ON WORD                    24510000
QSPDEPTR EQU   DUMQPDE+00000000    FULLWORD POINTER                     24520000
QSPDELEN EQU   DUMQPDE+00000004    HALFWORD INTEGER                     24530000
QSPDEFLG EQU   DUMQPDE+00000006    8 BIT(S)                             24540000
QSPRES   EQU   DUMQPDE+00000006    1 BIT(S)                             24550000
A00032   EQU   DUMQPDE+00000006    7 BIT(S)                             24560000
A00033   EQU   DUMQPDE+00000007    1 BYTE(S)                            24570000
         ORG   @DATA                                                    24580000
         DS    00000159C                                                24590000
@L       EQU   6                                                        24600000
@DATD    DSECT                                                          24610000
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD                   24620000
TEM01    EQU   @DATD+00000072      FULLWORD INTEGER                     24630000
POSAR    EQU   @DATD+00000076      FULLWORD INTEGER                     24640000
KWOAR    EQU   @DATD+00000080      FULLWORD INTEGER                     24650000
KWWAR    EQU   @DATD+00000084      FULLWORD INTEGER                     24660000
PCLIND   EQU   @DATD+00000088      FULLWORD POINTER                     24670000
PCLCUR   EQU   @DATD+00000092      FULLWORD POINTER                     24680000
PDLIND   EQU   @DATD+00000096      FULLWORD POINTER                     24690000
PDLCUR   EQU   @DATD+00000100      FULLWORD POINTER                     24700000
A00005   EQU   PDLCUR+00000000     2 BYTE(S)                            24710000
PDLCURC  EQU   PDLCUR+00000002     2 BYTE(S)                            24720000
SBFCUR   EQU   @DATD+00000105      3  BYTE  POINTER ON WORD+1           24730000
NLOC     EQU   @DATD+00000108      FULLWORD POINTER                     24740000
NLOCC    EQU   NLOC+00000000       4 BYTE(S)                            24750000
         DS    00000112C                                                24760000
@TEMPS   DS    0F                                                       24770000
@TEMP2   DC    F'0'                                                     24780000
@TEMP3   DC    F'0'                                                     24790000
@TEMP4   DC    F'0'                                                     24800000
@CTEMP2  DS    CL001                                                    24810000
@DATEND  EQU   *                                                        24820000
IKJEFE02 CSECT ,                                                        24830000
@9F2     EQU   E02PIC08                                                 24840000
@9E3     EQU   E02TEC35                                                 24850000
E02EXT15 EQU   @EL01                                                    24860000
@9E4     EQU   @9E3                                                     24870000
         END                                                            24880000
