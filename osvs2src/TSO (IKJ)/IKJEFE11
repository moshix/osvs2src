         TITLE 'IKJEFE11 - WHEN/END COMMAND PROCESSOR                  *00001000
                        '                                               00002000
IKJEFE11 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFE11  73.333'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @12,@01                                             0001 00016000
         USING @DATD,@12                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @12,8(,@13)                                         0001 00020000
         LR    @13,@12                                             0001 00021000
         MVC   @PC00001(4),0(@01)                                  0001 00022000
*   CPPLPTR=R1;                     /* SAVE ADDRESS TO CPPL          */ 00023000
         LR    CPPLPTR,R1                                          0051 00024000
*   RFY                                                            0052 00025000
*     R1 UNRSTD;                                                   0052 00026000
*   IKJWHEN=IKJWHEN&&IKJWHEN;       /* CLEAR WORK AREA               */ 00027000
         XC    IKJWHEN(88),IKJWHEN                                 0053 00028000
*   PPLPTR=ADDR(WHPL);              /* ADDRESS TO COMMON PARM LIST   */ 00029000
         LA    @10,WHPL                                            0054 00030000
         ST    @10,PPLPTR                                          0054 00031000
*   STPBPTR=ADDR(WHPBLOCK);         /* ADDR TO STACK CONTROL BLK     */ 00032000
         LA    STPBPTR,WHPBLOCK                                    0055 00033000
*   PPLUPT=CPPLUPT;                 /* UPT POINTER                   */ 00034000
         L     @06,CPPLUPT(,CPPLPTR)                               0056 00035000
         ST    @06,PPLUPT(,@10)                                    0056 00036000
*   PPLECT=CPPLECT;                 /* ECT POINTER                   */ 00037000
         L     @06,CPPLECT(,CPPLPTR)                               0057 00038000
         ST    @06,PPLECT(,@10)                                    0057 00039000
*   PPLECB=ADDR(WHATTECB);          /* ATTN ECB FOR SERV RTN         */ 00040000
         LA    @06,WHATTECB                                        0058 00041000
         ST    @06,PPLECB(,@10)                                    0058 00042000
*   PPLPCL=ADDR(IKJPARSE);          /* PARSE PARM LIST PTR           */ 00043000
         L     @06,@CV00059                                        0059 00044000
         ST    @06,PPLPCL(,@10)                                    0059 00045000
*   PPLANS=ADDR(WHPARANS);          /* PARSE ANSWER POINTER          */ 00046000
         LA    @06,WHPARANS                                        0060 00047000
         ST    @06,PPLANS(,@10)                                    0060 00048000
*   PPLCBUF=CPPLCBUF;               /* COMMAND BUFFER PTR            */ 00049000
         L     @06,CPPLCBUF(,CPPLPTR)                              0061 00050000
         ST    @06,PPLCBUF(,@10)                                   0061 00051000
*   WHCMD=COMMAND;                  /* SAVE COMMAND NAME             */ 00052000
*                                                                  0062 00053000
         MVC   WHCMD(8),@CC00174                                   0062 00054000
*   /*****************************************************************/ 00055000
*   /*                                                               */ 00056000
*   /* DETERMINE IF COMMAND IS WHEN OR END - IF COMMAND IS END THEN  */ 00057000
*   /* DELETE THE TOP COMMAND PROCEDURE AND RETURN TO CALLER         */ 00058000
*   /*                                                               */ 00059000
*   /*****************************************************************/ 00060000
*                                                                  0063 00061000
*   IF ECTPCMD(1:CON4)=ENDCHK       /* CHECK FOR END COMMAND         */ 00062000
*     THEN                                                         0063 00063000
         L     @10,ECTPTR(,CPPLPTR)                                0063 00064000
         CLC   ECTPCMD(4,@10),@CC00172                             0063 00065000
         BNE   @RF00063                                            0063 00066000
*     DO;                                                          0064 00067000
*       WHEND=YES;                  /* SET END INDICATOR GO          */ 00068000
         OI    WHEND,B'10000000'                                   0065 00069000
*       CALL DELETE;                /* DELETE CURRENT STCK           */ 00070000
         BAL   @14,DELETE                                          0066 00071000
*     END;                          /* ELEM                          */ 00072000
*   ELSE                                                           0068 00073000
*     DO;                                                          0068 00074000
*                                                                  0068 00075000
         B     @RC00063                                            0068 00076000
@RF00063 DS    0H                                                  0069 00077000
*       /*************************************************************/ 00078000
*       /*                                                           */ 00079000
*       /* WHEN COMMAND PROCESSING                                   */ 00080000
*       /*                                                           */ 00081000
*       /*************************************************************/ 00082000
*                                                                  0069 00083000
*       IF ECTRCDF=ABCHECK          /* CHECK ECT RETURN CODE TO      */ 00084000
*         THEN                      /* SEE IF PREVIOUS CP HAS        */ 00085000
         L     @10,ECTPTR(,CPPLPTR)                                0069 00086000
         CLI   ECTRCDF(@10),X'80'                                  0069 00087000
         BNE   @RF00069                                            0069 00088000
*         DO;                       /* ABENDED--IF SO, SEND MSG      */ 00089000
*           IF ECTRTCD//CON4096=CON0/* IS THERE A USER ABEND         */ 00090000
*             THEN                  /* IF NOT--                      */ 00091000
         SLR   @06,@06                                             0071 00092000
         ICM   @06,7,ECTRTCD(@10)                                  0071 00093000
         LR    @00,@06                                             0071 00094000
         SRDA  @00,32                                              0071 00095000
         D     @00,@CF00096                                        0071 00096000
         LTR   @00,@00                                             0071 00097000
         BNZ   @RF00071                                            0071 00098000
*             DO;                   /* CALCULATE SYSTEM ABEND IN     */ 00099000
*               WHRCODE2=ECTRTCD/CON4096;                          0073 00100000
         SRL   @06,12                                              0073 00101000
         LR    WHRCODE2,@06                                        0073 00102000
*               WHMSG2=CON24;       /* HIGH ORDER 12 BITS OF         */ 00103000
         MVI   WHMSG2,X'18'                                        0074 00104000
*             END;                  /* ECTRTCD AND PUT IN 2ND MSG    */ 00105000
*           ELSE                                                   0076 00106000
*             DO;                   /* CALCULATE USER ABEND IN       */ 00107000
         B     @RC00071                                            0076 00108000
@RF00071 DS    0H                                                  0077 00109000
*               WHRCODE2=ECTRTCD//CON4096;                         0077 00110000
         L     @10,ECTPTR(,CPPLPTR)                                0077 00111000
         SLR   @00,@00                                             0077 00112000
         ICM   @00,7,ECTRTCD(@10)                                  0077 00113000
         SRDA  @00,32                                              0077 00114000
         D     @00,@CF00096                                        0077 00115000
         LR    WHRCODE2,@00                                        0077 00116000
*               WHMSG2=CON20;       /* LOW ORDER 12 BITS OF          */ 00117000
         MVI   WHMSG2,X'14'                                        0078 00118000
*             END;                  /* ECTRTCD AND PUT IN 2ND MSG    */ 00119000
*           WHMSG1=CON16;           /* SET FIRST LEVEL MSG AND       */ 00120000
@RC00071 MVI   WHMSG1,X'10'                                        0080 00121000
*           WHCMD=ECTPCMD;          /* COMMAND ENTERED IS VAR PART   */ 00122000
         L     @10,ECTPTR(,CPPLPTR)                                0081 00123000
         MVC   WHCMD(8),ECTPCMD(@10)                               0081 00124000
*         END;                                                     0082 00125000
*       ELSE                                                       0083 00126000
*         DO;                                                      0083 00127000
*                                                                  0083 00128000
         B     @RC00069                                            0083 00129000
@RF00069 DS    0H                                                  0084 00130000
*           /*********************************************************/ 00131000
*           /*                                                       */ 00132000
*           /* SAVE THE FIRST CHARACTER OF THE NEXT COMMAND IF IT    */ 00133000
*           /* WOULD BE OVERLAID BY INSERTING THE PARSE DELIMETER.   */ 00134000
*           /*                                                       */ 00135000
*           /*********************************************************/ 00136000
*                                                                  0084 00137000
*           CODEBASE=R11;           /* SAVE CODE REG FOR VALID EXIT  */ 00138000
         ST    R11,CODEBASE                                        0084 00139000
*           DATABASE=R12;           /* SAVE DATA REG FOR VALID EXIT  */ 00140000
         ST    R12,DATABASE                                        0085 00141000
*           DO I=1 TO CPLEN-CON4 WHILE CPCOMM(I)^=LFPAREN;/* SEARCH     00142000
*                                      FOR                           */ 00143000
         LA    I,1                                                 0086 00144000
         B     @DE00086                                            0086 00145000
@DL00086 L     @10,CPPLCBUF(,CPPLPTR)                              0086 00146000
         ALR   @10,I                                               0086 00147000
         CLI   CPCOMM-1(@10),C'('                                  0086 00148000
         BE    @DC00086                                            0086 00149000
*           END;                    /* A LEFT PAREN                  */ 00150000
         AH    I,@CH00033                                          0087 00151000
@DE00086 L     @10,CPPLCBUF(,CPPLPTR)                              0087 00152000
         LH    @10,CPLEN(,@10)                                     0087 00153000
         SH    @10,@CH00068                                        0087 00154000
         CR    I,@10                                               0087 00155000
         BNH   @DL00086                                            0087 00156000
@DC00086 DS    0H                                                  0088 00157000
*           IF I<CPLEN-CON4 THEN    /* IF NOT AT END OF BUFFER THEN  */ 00158000
         L     @10,CPPLCBUF(,CPPLPTR)                              0088 00159000
         LH    @10,CPLEN(,@10)                                     0088 00160000
         SH    @10,@CH00068                                        0088 00161000
         CR    I,@10                                               0088 00162000
         BNL   @RF00088                                            0088 00163000
*             DO;                   /* FIND RIGHT PAREN              */ 00164000
*               DO I=I TO CPLEN-CON4 WHILE CPCOMM(I)^=RTPAREN;     0090 00165000
         B     @DE00090                                            0090 00166000
@DL00090 L     @10,CPPLCBUF(,CPPLPTR)                              0090 00167000
         ALR   @10,I                                               0090 00168000
         CLI   CPCOMM-1(@10),C')'                                  0090 00169000
         BE    @DC00090                                            0090 00170000
*               END;                                               0091 00171000
         AH    I,@CH00033                                          0091 00172000
@DE00090 L     @10,CPPLCBUF(,CPPLPTR)                              0091 00173000
         LH    @10,CPLEN(,@10)                                     0091 00174000
         SH    @10,@CH00068                                        0091 00175000
         CR    I,@10                                               0091 00176000
         BNH   @DL00090                                            0091 00177000
@DC00090 DS    0H                                                  0092 00178000
*               IF I<CPLEN-CON4 THEN/* IF NOT AT END OF BUFFER THEN  */ 00179000
         L     @10,CPPLCBUF(,CPPLPTR)                              0092 00180000
         LH    @06,CPLEN(,@10)                                     0092 00181000
         LR    @04,@06                                             0092 00182000
         SH    @04,@CH00068                                        0092 00183000
         CR    I,@04                                               0092 00184000
         BNL   @RF00092                                            0092 00185000
*                 DO;               /* SAVE NEXT CHARACTER IN BUF    */ 00186000
*                   I=CON1+I;       /* AND INSERT A SEMI-COLON TO    */ 00187000
         AH    I,@CH00033                                          0094 00188000
*                   WHCHAR=CPCOMM(I);/* TERMINATE THE PARSE SCAN     */ 00189000
         LR    @04,@10                                             0095 00190000
         ALR   @04,I                                               0095 00191000
         MVC   WHCHAR(1),CPCOMM-1(@04)                             0095 00192000
*                   CPCOMM(I)=SEMI;                                0096 00193000
         LR    @04,@10                                             0096 00194000
         ALR   @04,I                                               0096 00195000
         MVI   CPCOMM-1(@04),C';'                                  0096 00196000
*                   WHLEN=CPLEN-(I+CON3);/* COMMAND LENGTH - THREE IS   00197000
*                                      ADDED TO I CTR TO TAKE INTO 0097 00198000
*                                      ACCOUNT THE LENGTH OFFSET   0097 00199000
*                                      FIELDS MINUS ONE FOR THE FIRST   00200000
*                                      POSITION                      */ 00201000
         LA    @04,3                                               0097 00202000
         ALR   @04,I                                               0097 00203000
         SLR   @06,@04                                             0097 00204000
         STH   @06,WHLEN                                           0097 00205000
*                   WHCOMM=ADDR(CPCOMM(I));/* START OF COMMAND       */ 00206000
         LA    @10,CPCOMM-1(I,@10)                                 0098 00207000
         ST    @10,WHCOMM                                          0098 00208000
*                 END;                                             0099 00209000
*             END;                                                 0100 00210000
@RF00092 DS    0H                                                  0101 00211000
*           PPLUWA=ADDR(VCPARMS);   /* VALID EXIT PARMS              */ 00212000
@RF00088 L     @10,PPLPTR                                          0101 00213000
         LA    @06,VCPARMS                                         0101 00214000
         ST    @06,PPLUWA(,@10)                                    0101 00215000
*           RFY                                                    0102 00216000
*             R1 RSTD;                                             0102 00217000
*           R1=PPLPTR;              /* PARSE PARM LIST               */ 00218000
         LR    R1,@10                                              0103 00219000
*           DO;                     /* LINK EP(IKJPARS)              */ 00220000
*             I00601='00'X;         /* EP/DE FLAG                    */ 00221000
         MVI   I00601,X'00'                                        0105 00222000
*             I00602=ADDR(IKJPARS); /* ADDR OF EP/DE                 */ 00223000
         LA    @10,@CC00108                                        0106 00224000
         STCM  @10,7,I00602                                        0106 00225000
*             I00604=0;             /* DCB PTR                       */ 00226000
         SLR   @10,@10                                             0107 00227000
         STCM  @10,7,I00604                                        0107 00228000
*             I00603='00'X;         /* ERRET FLAG                    */ 00229000
         MVI   I00603,X'00'                                        0108 00230000
*             RESPECIFY                                            0109 00231000
*              (GPR15P) RESTRICTED;                                0109 00232000
*             GPR15P=ADDR(I006);    /* ADDR OF LINK LIST             */ 00233000
         LA    GPR15P,I006                                         0110 00234000
*             SVC(6);               /* ISSUE LINK SVC                */ 00235000
         SVC   6                                                   0111 00236000
*             RESPECIFY                                            0112 00237000
*              (GPR15P) UNRESTRICTED;                              0112 00238000
*           END;                    /* LINK EP(IKJPARS)              */ 00239000
*           RFY                                                    0114 00240000
*             R1 UNRSTD;                                           0114 00241000
*           RFY                                                    0115 00242000
*             R15 RSTD;                                            0115 00243000
*           WHRCODE2=R15;           /* SAVE RETURN CODE              */ 00244000
         LR    WHRCODE2,R15                                        0116 00245000
*           RFY                                                    0117 00246000
*             R15 UNRSTD;                                          0117 00247000
*           IF WHRCODE2^=CON0       /* IF EQUAL TO ZERO DETERMINE    */ 00248000
*             THEN                  /* CONDITION CODE OF RELATION    */ 00249000
         LTR   WHRCODE2,WHRCODE2                                   0118 00250000
         BZ    @RF00118                                            0118 00251000
*             DO;                                                  0119 00252000
*                                                                  0119 00253000
*               /*****************************************************/ 00254000
*               /*                                                   */ 00255000
*               /* DIAGNOSE RETURN CODE FROM PARSE. CLEAN UP AND     */ 00256000
*               /* RETURN TO TMP. RETURN CODE 4 YEILDS NO MSG.       */ 00257000
*               /* OTHERWISE PUT OUT COMMAND SYSTEM ERROR MSG.       */ 00258000
*               /*                                                   */ 00259000
*               /*****************************************************/ 00260000
*                                                                  0120 00261000
*               WHRET=YES;          /* USED FOR STACK FLUSH          */ 00262000
         OI    WHRET,B'01000000'                                   0120 00263000
*               IF WHRCODE2=CON4    /* USER IN NO PROMPT MODE?       */ 00264000
*                 THEN              /* YES                           */ 00265000
         CH    WHRCODE2,@CH00068                                   0121 00266000
         BNE   @RF00121                                            0121 00267000
*                 WHBYPASS=YES;     /* INDICATE NO MSG NEEDED        */ 00268000
         OI    WHBYPASS,B'00100000'                                0122 00269000
*               WHMSG2=CON4;        /* SECOND LEVEL MSG-PARSE ERR    */ 00270000
@RF00121 MVI   WHMSG2,X'04'                                        0123 00271000
*             END;                                                 0124 00272000
*           ELSE                                                   0125 00273000
*             DO;                                                  0125 00274000
*                                                                  0125 00275000
         B     @RC00118                                            0125 00276000
@RF00118 DS    0H                                                  0126 00277000
*               /*****************************************************/ 00278000
*               /*                                                   */ 00279000
*               /* GETCCODE - COMPARE THE ECT RETURN CODE TO THE CODE*/ 00280000
*               /* THAT WAS SPECIFIED BY THE USER . A COMPARE EQUAL  */ 00281000
*               /* SETS A CONDITION CODE ZERO, A COMPARE WHERE THE   */ 00282000
*               /* ECT RETURN CODE IS LOW SETS A CONDITION CODE ONE  */ 00283000
*               /* AND A COMPARE WHERE THE ECT RETURN CODE IS HIGH   */ 00284000
*               /* SETS A CONDITION CODE OF THREE. THE CCODES TABLE  */ 00285000
*               /* HAS THE VALID CONDITION CODES FOR EACH OF THE     */ 00286000
*               /* COMPARISON OPERATOR.                              */ 00287000
*               /*                                                   */ 00288000
*               /*****************************************************/ 00289000
*                                                                  0126 00290000
*               T4=WHWORK1;         /* INIT T4 FOR COND CODE OFFSET  */ 00291000
         L     T4,WHWORK1                                          0126 00292000
*               T4=T4+CON1;         /* IN CCODES TABLE--INDEX WAS SET   00293000
*                                      IN PARSE VALIDITY CHECK     0127 00294000
*                                      ROUTINE                       */ 00295000
         LA    @10,1                                               0127 00296000
         ALR   T4,@10                                              0127 00297000
*               T3=CCODES(T4);      /* SAVE COND CODE INDICATOR      */ 00298000
         SLR   T3,T3                                               0128 00299000
         IC    T3,CCODES-1(T4)                                     0128 00300000
*               T4=T4+CON1;         /* SET INDEX FOR NEXT CODE       */ 00301000
         ALR   T4,@10                                              0129 00302000
*               T4=CCODES(T4);      /* GET SECOND COND CODE INDIC    */ 00303000
*                                                                  0130 00304000
         SLR   @09,@09                                             0130 00305000
         IC    @09,CCODES-1(T4)                                    0130 00306000
         LR    T4,@09                                              0130 00307000
*               /*****************************************************/ 00308000
*               /*                                                   */ 00309000
*               /* FIND THE CONDITION CODE THAT RESULTS WHEN THE     */ 00310000
*               /* PREVIOUS COMMAND PROCESSOR'S RETURN CODE IS       */ 00311000
*               /* COMPARED TO THE USER SUPPLIED VALUE AND DETERMINE */ 00312000
*               /* IF THE RELATIONAL OPERATOR IS SATISFIED           */ 00313000
*               /*                                                   */ 00314000
*               /*****************************************************/ 00315000
*                                                                  0131 00316000
*               WORK1=WORK1&&WORK1; /* CLEAR SCRATCH PAD AREA        */ 00317000
         XC    WORK1(8),WORK1                                      0131 00318000
*               I=CON5-PDENUML;     /* OFFSET IN WORK AREA           */ 00319000
         L     @09,WHPARANS                                        0132 00320000
         LA    I,5                                                 0132 00321000
         SLR   @06,@06                                             0132 00322000
         ICM   @06,3,PDENUML(@09)                                  0132 00323000
         SLR   I,@06                                               0132 00324000
*               WHWORK2(I:CON4)=PDENUM->NUMBER;/* GET VALUE TO PACK  */ 00325000
         LA    @06,WHWORK2-1(I)                                    0133 00326000
         LA    @15,4                                               0133 00327000
         SLR   @15,I                                               0133 00328000
         L     @09,PDENUM(,@09)                                    0133 00329000
         EX    @15,@SM00322                                        0133 00330000
*               PACK(WHWORK2,WHWORK2);                             0134 00331000
         PACK  WHWORK2(4),WHWORK2(4)                               0134 00332000
*               CVB(I,WHWORK2);     /* PUT IN SAME FORMAT AS ECT     */ 00333000
         XC    @TS00001(8),@TS00001                                0135 00334000
         MVC   @TS00001+4(4),WHWORK2                               0135 00335000
         CVB   I,@TS00001                                          0135 00336000
*               WHWORK2F=I;         /* SAVE THE NUMBER FOR COMPARE   */ 00337000
         ST    I,WHWORK2F                                          0136 00338000
*               WHWORK1=ECTRTCD;    /* LAST CP'S RETURN CODE         */ 00339000
         L     @09,ECTPTR(,CPPLPTR)                                0137 00340000
         SLR   @06,@06                                             0137 00341000
         ICM   @06,7,ECTRTCD(@09)                                  0137 00342000
         ST    @06,WHWORK1                                         0137 00343000
*               IF WHWORK1C(2:CON4)=WHWORK2(2:CON4) THEN           0138 00344000
         CLC   WHWORK1C+1(3),WHWORK2+1                             0138 00345000
         BNE   @RF00138                                            0138 00346000
*                 I=CON1;                                          0139 00347000
         LR    I,@10                                               0139 00348000
*               ELSE                                               0140 00349000
*                 IF WHWORK1C(2:4)<WHWORK2(2:CON4) THEN            0140 00350000
         B     @RC00138                                            0140 00351000
@RF00138 CLC   WHWORK1C+1(3),WHWORK2+1                             0140 00352000
         BNL   @RF00140                                            0140 00353000
*                   I=CON2;                                        0141 00354000
         LA    I,2                                                 0141 00355000
*                 ELSE                                             0142 00356000
*                   I=CON3;                                        0142 00357000
         B     @RC00140                                            0142 00358000
@RF00140 LA    I,3                                                 0142 00359000
*               IF T4=I|T3=I        /* IF COND. OPER. IS SATISFIED 0143 00360000
*                                      TAKE CURR ELEMENT FROM INPUT     00361000
*                                      STACK                         */ 00362000
*                 THEN                                             0143 00363000
@RC00140 DS    0H                                                  0143 00364000
@RC00138 CR    T4,I                                                0143 00365000
         BE    @RT00143                                            0143 00366000
         CR    T3,I                                                0143 00367000
         BNE   @RF00143                                            0143 00368000
@RT00143 DS    0H                                                  0144 00369000
*                 DO;                                              0144 00370000
*                   CALL DELETE;    /* DELETE THE CURRENT PROCEDURE  */ 00371000
         BAL   @14,DELETE                                          0145 00372000
*                   IF WHRCODE2=CON0 THEN                          0146 00373000
         SLR   @10,@10                                             0146 00374000
         CR    WHRCODE2,@10                                        0146 00375000
         BNE   @RF00146                                            0146 00376000
*                     DO;                                          0147 00377000
*                                                                  0147 00378000
*                       /*********************************************/ 00379000
*                       /*                                           */ 00380000
*                       /* ADDELEM - IF THE DELETE OF THE TOP ELEMENT*/ 00381000
*                       /* WAS SUCCESSFUL THEN PLACE THE ACTION      */ 00382000
*                       /* COMMAND ON THE TOP OF THE INPUT STACK AS A*/ 00383000
*                       /* PROCEDURE ELEMENT WITH THE NOLIST AND     */ 00384000
*                       /* PROMPT OPTIONS                            */ 00385000
*                       /*                                           */ 00386000
*                       /*********************************************/ 00387000
*                                                                  0148 00388000
*                       IF WHCOMM^=CON0 THEN                       0148 00389000
         C     @10,WHCOMM                                          0148 00390000
         BE    @RF00148                                            0148 00391000
*                         DO;       /* FREE PDL BUILT BY PARSE       */ 00392000
*                           WHLEN=LSDLEN+WHLEN+CON4;/* SP 78 CORE FOR   00393000
*                                      LSD AND COMM                  */ 00394000
         LA    @10,20                                              0150 00395000
         AH    @10,WHLEN                                           0150 00396000
         STH   @10,WHLEN                                           0150 00397000
*                           WHSUBP=CON78;/* INSERT SUBPOOL NUMBER    */ 00398000
         MVI   WHSUBP,X'4E'                                        0151 00399000
*                           RFY                                    0152 00400000
*                             R0 RSTD;                             0152 00401000
*                           R0=WHGETM;/* SUBPOOL AND COMMD LENGTH    */ 00402000
         L     R0,WHGETM                                           0153 00403000
*                           GENERATE(GETMAIN R,LV=(0));            0154 00404000
         GETMAIN R,LV=(0)                                               00405000
*                           RFY                                    0155 00406000
*                             R0 UNRSTD;                           0155 00407000
*                           RFY                                    0156 00408000
*                             R1 RSTD;                             0156 00409000
*                           LSDPTR=R1;/* SAVE PTR TO LSD             */ 00410000
         LR    LSDPTR,R1                                           0157 00411000
*                           RFY                                    0158 00412000
*                             R1 UNRSTD;                           0158 00413000
*                           LSDCLEAR=LSDCLEAR&&LSDCLEAR;/* CLEAR   0159 00414000
*                                      GOTTEN CORE                   */ 00415000
         XC    LSDCLEAR(20,LSDPTR),LSDCLEAR(LSDPTR)                0159 00416000
*                           WHWORK1=LSDPTR+LSDLEN;/* BEGINNING OF  0160 00417000
*                                      COMMAND BUFF                  */ 00418000
         LA    @10,16                                              0160 00419000
         LR    @09,LSDPTR                                          0160 00420000
         ALR   @09,@10                                             0160 00421000
         ST    @09,WHWORK1                                         0160 00422000
*                           WHLEN=WHLEN-LSDLEN;/* LENGTH OF COMMAND     00423000
*                                      BUFFER                        */ 00424000
         LCR   @10,@10                                             0161 00425000
         AH    @10,WHLEN                                           0161 00426000
         STH   @10,WHLEN                                           0161 00427000
*                           CBUF2LEN=WHLEN;/* COMMAND LENGTH         */ 00428000
         STH   @10,CBUF2LEN(,@09)                                  0162 00429000
*                           LSDTOTLN=WHLEN;/* SAVE INDICATOR FOR   0163 00430000
*                                      FREEMAIN                      */ 00431000
         STH   @10,LSDTOTLN(,LSDPTR)                               0163 00432000
*                           LSDADATA=WHWORK1;/* FILL IN LSD WITH BUFF   00433000
*                                      PTR                           */ 00434000
         ST    @09,LSDADATA(,LSDPTR)                               0164 00435000
*                           LSDANEXT=LSDADATA;/* PTR TO NEXT IS SAME    00436000
*                                      AS FIRST--ONLY ONE ELEMENT    */ 00437000
         ST    @09,LSDANEXT(,LSDPTR)                               0165 00438000
*                           WHWORK1=WHWORK1+CON4;/* INDEX PAST HEADER*/ 00439000
*                                                                  0166 00440000
         AH    @09,@CH00068                                        0166 00441000
         ST    @09,WHWORK1                                         0166 00442000
*                           /*****************************************/ 00443000
*                           /*                                       */ 00444000
*                           /* MOVE NEXT COMMAND TO SUBPOOL 78       */ 00445000
*                           /*                                       */ 00446000
*                           /*****************************************/ 00447000
*                                                                  0167 00448000
*                           COMMBUF1(1)=WHCHAR;/* RESTORE CHARACTER     00449000
*                                      OVERLAID BY THE SEMI COLON    */ 00450000
         L     @06,WHCOMM                                          0167 00451000
         MVC   COMMBUF1(1,@06),WHCHAR                              0167 00452000
*                           COMMBUF2(1:WHLEN-CON4)=WHCOMM->COMMBUF1(1:  00453000
*                               WHLEN-CON4);                       0168 00454000
*                                                                  0168 00455000
         SH    @10,@CH00083                                        0168 00456000
         EX    @10,@SM00324                                        0168 00457000
*                           /*****************************************/ 00458000
*                           /*                                       */ 00459000
*                           /* ADD COMMAND TO INPUT STACK            */ 00460000
*                           /*                                       */ 00461000
*                           /*****************************************/ 00462000
*                                                                  0169 00463000
*                           WHWORK1=ADDR(COMMBUF2);/* ADDR OF COMMD     00464000
*                                      TO BE ADDED                   */ 00465000
         ST    @09,WHWORK1                                         0169 00466000
*                           STPB=STPB&&STPB;/* CLEAR PARM BLOCK      */ 00467000
         XC    STPB(16,STPBPTR),STPB(STPBPTR)                      0170 00468000
*                           RFY                                    0171 00469000
*                            (R1,                                  0171 00470000
*                             R6) RSTD;                            0171 00471000
*                           R1=STPLPTR;/* PARM PTR FOR STACK         */ 00472000
         L     R1,STPLPTR                                          0172 00473000
*                           R6=LSDPTR;/* SET UP REG 2 FOR STACK      */ 00474000
         LR    R6,LSDPTR                                           0173 00475000
*                           GEN                                    0174 00476000
*(STACK STORAGE=((6),PROCN,PROMPT),MF=(E,(1)));                    0174 00477000
         STACK STORAGE=((6),PROCN,PROMPT),MF=(E,(1))                    00478000
*                           RFY                                    0175 00479000
*                            (R1,                                  0175 00480000
*                             R6) UNRSTD;                          0175 00481000
*                           RFY                                    0176 00482000
*                             R15 RSTD;                            0176 00483000
*                           WHRCODE2=R15;/* PROC SUCCESSFULLY ADDED? */ 00484000
         LR    WHRCODE2,R15                                        0177 00485000
*                           RFY                                    0178 00486000
*                             R15 UNRSTD;                          0178 00487000
*                           IF WHRCODE2^=CON0 THEN                 0179 00488000
         LTR   WHRCODE2,WHRCODE2                                   0179 00489000
         BZ    @RF00179                                            0179 00490000
*                             DO;   /* FREE PDL SET UP BY PARSE      */ 00491000
*                               WHRET=YES;/* USED FOR STACK FLUSH    */ 00492000
         OI    WHRET,B'01000000'                                   0181 00493000
*                               WHMSG2=CON8;/* I/O ERROR WHEN ADDING    00494000
*                                      NEW COMMAND PROC TO STACK     */ 00495000
         MVI   WHMSG2,X'08'                                        0182 00496000
*                               WHLEN=WHLEN+LSDLEN;/* GET TOTAL    0183 00497000
*                                      LENGTH OF CORE                */ 00498000
         LA    @10,16                                              0183 00499000
         AH    @10,WHLEN                                           0183 00500000
         STH   @10,WHLEN                                           0183 00501000
*                               RFY                                0184 00502000
*                                (R0,                              0184 00503000
*                                 R1) RSTD;                        0184 00504000
*                               R0=WHGETM;/* AND SUBPOOL FOR ERROR   */ 00505000
         L     R0,WHGETM                                           0185 00506000
*                               R1=LSDPTR;/* IN STACK ROUTINE        */ 00507000
         LR    R1,LSDPTR                                           0186 00508000
*                               GENERATE(FREEMAIN R,LV=(0),A=(1)); 0187 00509000
         FREEMAIN R,LV=(0),A=(1)                                        00510000
*                               RFY                                0188 00511000
*                                (R0,                              0188 00512000
*                                 R1) UNRSTD;                      0188 00513000
*                             END;  /* ISSUE MESSAGE TO USER         */ 00514000
*                         END;                                     0190 00515000
@RF00179 DS    0H                                                  0191 00516000
*                     END;                                         0191 00517000
@RF00148 DS    0H                                                  0192 00518000
*                 END;                                             0192 00519000
@RF00146 DS    0H                                                  0193 00520000
*             END;                                                 0193 00521000
*                                                                  0193 00522000
@RF00143 DS    0H                                                  0194 00523000
*           /*********************************************************/ 00524000
*           /*                                                       */ 00525000
*           /* FREEPDL                                               */ 00526000
*           /*                                                       */ 00527000
*           /*********************************************************/ 00528000
*                                                                  0194 00529000
*           GEN(IKJRLSA WHPARANS);  /* FREE PARSE PARM LIST          */ 00530000
@RC00118 DS    0H                                                  0194 00531000
         IKJRLSA WHPARANS                                               00532000
*         END;                                                     0195 00533000
*     END;                                                         0196 00534000
*                                                                  0196 00535000
@RC00069 DS    0H                                                  0197 00536000
*   /*****************************************************************/ 00537000
*   /*                                                               */ 00538000
*   /* EXIT CODE                                                     */ 00539000
*   /*                                                               */ 00540000
*   /*****************************************************************/ 00541000
*                                                                  0197 00542000
*   IF WHMSG^=CON0&WHBYPASS=NO      /* IF NO MESSAGE THEN            */ 00543000
*     THEN                                                         0197 00544000
@RC00063 SLR   @10,@10                                             0197 00545000
         ICM   @10,3,WHMSG                                         0197 00546000
         LTR   @10,@10                                             0197 00547000
         BZ    @RF00197                                            0197 00548000
         TM    WHBYPASS,B'00100000'                                0197 00549000
         BNZ   @RF00197                                            0197 00550000
*     DO;                           /* SET RC AND FREE WORK AREA   0198 00551000
*                                      RETURN TO TMP                 */ 00552000
*       WHRCODE=WHRCODE2;           /* PASS RETURN CODE FOR POSSIBLE    00553000
*                                      USE IN MESSAGE                */ 00554000
         ST    WHRCODE2,WHRCODE                                    0199 00555000
*       RFY                                                        0200 00556000
*         R1 RSTD;                                                 0200 00557000
*       R1=ADDR(IKJWHEN);           /* SAVE WORK AREA POINTER        */ 00558000
         LA    R1,IKJWHEN                                          0201 00559000
*       RFY                                                        0202 00560000
*         R1 UNRSTD;                                               0202 00561000
*       CALL IKJEFE15;                                             0203 00562000
         L     @15,@CV00060                                        0203 00563000
         BALR  @14,@15                                             0203 00564000
*     END;                                                         0204 00565000
*   IF WHRET=YES THEN               /* WHEN ERROR                    */ 00566000
@RF00197 TM    WHRET,B'01000000'                                   0205 00567000
         BNO   @RF00205                                            0205 00568000
*     DO;                                                          0206 00569000
*       STPLSTPB=STPBPTR;           /* PTR TO STACK PARM BLOCK       */ 00570000
         L     @10,STPLPTR                                         0207 00571000
         ST    STPBPTR,STPLSTPB(,@10)                              0207 00572000
*       STPB=STPB&&STPB;            /* CLEAR STACK PARAMETER BLOCK   */ 00573000
         XC    STPB(16,STPBPTR),STPB(STPBPTR)                      0208 00574000
*       R1=STPLPTR;                 /* SET UP FOR STACK MACRO        */ 00575000
         LR    R1,@10                                              0209 00576000
*       GENERATE;                                                  0210 00577000
         STACK DELETE=ALL,MF=(E,(1))                                    00578000
         TCLEARQ INPUT                                                  00579000
*     END;                                                         0211 00580000
*   RETURN CODE(ECTRTCD);                                          0212 00581000
*                                                                  0212 00582000
@RF00205 L     @10,ECTPTR(,CPPLPTR)                                0212 00583000
         SLR   @04,@04                                             0212 00584000
         ICM   @04,7,ECTRTCD(@10)                                  0212 00585000
         L     @13,4(,@13)                                         0212 00586000
         L     @00,@SIZDATD                                        0212 00587000
         LR    @01,@12                                             0212 00588000
         FREEMAIN R,LV=(0),A=(1)                                        00589000
         LR    @15,@04                                             0212 00590000
         L     @14,12(,@13)                                        0212 00591000
         LM    @00,@12,20(@13)                                     0212 00592000
         BR    @14                                                 0212 00593000
*   /*****************************************************************/ 00594000
*   /*                                                               */ 00595000
*   /* THE FOLLOWING IS THE PARSE CONTROL LIST FOR THE WHEN COMMAND  */ 00596000
*   /*                                                               */ 00597000
*   /*****************************************************************/ 00598000
*                                                                  0213 00599000
*   GEN DATA DEFS(PARS);                                           0213 00600000
*                                                                  0213 00601000
*   /*****************************************************************/ 00602000
*   /*                                                               */ 00603000
*   /* DELETE                                                        */ 00604000
*   /*                                                               */ 00605000
*   /*****************************************************************/ 00606000
*                                                                  0214 00607000
*DELETE:                                                           0214 00608000
*   PROC;                                                          0214 00609000
@EL00001 L     @13,4(,@13)                                         0214 00610000
@EF00001 L     @00,@SIZDATD                                        0214 00611000
         LR    @01,@12                                             0214 00612000
         FREEMAIN R,LV=(0),A=(1)                                        00613000
@ER00001 LM    @14,@12,12(@13)                                     0214 00614000
         BR    @14                                                 0214 00615000
@PB00001 DS    0H                                                  0214 00616000
DELETE   STM   @14,@07,@SA00002                                    0214 00617000
         STM   @09,@12,@SA00002+40                                 0214 00618000
*   STPLSTPB=STPBPTR;               /* PTR TO STACK PARM BLOCK       */ 00619000
         L     @10,STPLPTR                                         0215 00620000
         ST    STPBPTR,STPLSTPB(,@10)                              0215 00621000
*   STPB=STPB&&STPB;                /* CLEAR STACK PARAMETER BLOCK   */ 00622000
         XC    STPB(16,STPBPTR),STPB(STPBPTR)                      0216 00623000
*   RFY                                                            0217 00624000
*     R1 RSTD;                                                     0217 00625000
*   R1=STPLPTR;                     /* SET UP FOR STACK MACRO        */ 00626000
         LR    R1,@10                                              0218 00627000
*   RFY                                                            0219 00628000
*     R1 UNRSTD;                                                   0219 00629000
*   GENERATE;                                                      0220 00630000
*                                  /*DELETE ELEMENT FROM INPUT STACK */ 00631000
         STACK DELETE=PROC,MF=(E,(1))                                   00632000
*   RFY                                                            0221 00633000
*     R15 RSTD;                                                    0221 00634000
*   WHRCODE2=R15;                   /* SAVE RETURN CODE              */ 00635000
         LR    WHRCODE2,R15                                        0222 00636000
*   RFY                                                            0223 00637000
*     R15 UNRSTD;                                                  0223 00638000
*   IF WHRCODE2^=CON0               /* IF ERROR ENCOUNTERED WHILE    */ 00639000
*     THEN                          /* DELETING ELEMENT FROM         */ 00640000
         LTR   WHRCODE2,WHRCODE2                                   0224 00641000
         BZ    @RF00224                                            0224 00642000
*     DO;                           /* INPUT STACK ISSUE DIAGNOSTIC     00643000
*                                      ELSE PROCESS OPERANDS         */ 00644000
*       WHRET=YES;                  /* USED FOR STACK FLUSH          */ 00645000
         OI    WHRET,B'01000000'                                   0226 00646000
*       WHMSG2=CON8;                /* 2ND LEV--STACK DELET ERR      */ 00647000
         MVI   WHMSG2,X'08'                                        0227 00648000
*     END;                          /* ISSUE MESSAGE TO USER         */ 00649000
*   END DELETE;                                                    0229 00650000
*                                                                  0229 00651000
@EL00002 DS    0H                                                  0229 00652000
@EF00002 DS    0H                                                  0229 00653000
@ER00002 LM    @14,@07,@SA00002                                    0229 00654000
         LM    @09,@12,@SA00002+40                                 0229 00655000
         BR    @14                                                 0229 00656000
*   /*****************************************************************/ 00657000
*   /*                                                               */ 00658000
*   /* COMPARE - PARSE VALIDITY CHECK EXIT USED TO SYNTAX CHECK THE  */ 00659000
*   /* RELATIONAL OPERATOR                                           */ 00660000
*   /*                                                               */ 00661000
*   /*****************************************************************/ 00662000
*                                                                  0230 00663000
*COMPARE:                                                          0230 00664000
*   PROC OPTIONS(NOSAVEAREA);                                      0230 00665000
COMPARE  STM   @14,@12,12(@13)                                     0230 00666000
*   DCL                                                            0231 00667000
*     1 SAVEVAL BASED(VALWORK),     /* DUMMY TO ACCESS REGS OF OF  0231 00668000
*                                      IKJEFE11 BEFORE GOING TO PARSE*/ 00669000
*      2 CDEBASE PTR(31),           /* REGISTER 11                   */ 00670000
*      2 DATBASE PTR(31);           /* REGISTER 12                   */ 00671000
*   R11=CDEBASE;                    /* RESTORE BASE REG              */ 00672000
         L     @15,VALWORK(,R1)                                    0232 00673000
         L     R11,CDEBASE(,@15)                                   0232 00674000
*   R12=DATBASE;                    /* RESTORE ADDR TO WORK AREA     */ 00675000
*                                                                  0233 00676000
         L     R12,DATBASE(,@15)                                   0233 00677000
*   /*****************************************************************/ 00678000
*   /*                                                               */ 00679000
*   /* INITIALIZE COUNTERS AND RETURN CODE FOR SCAN THROUGH          */ 00680000
*   /* CONDITIONAL OPERATOR TABLE FOR MATCH ON COMMAND AND AND TABLE */ 00681000
*   /*                                                               */ 00682000
*   /*****************************************************************/ 00683000
*                                                                  0234 00684000
*   SAVRCPAR=CON0;                  /* INIT TO VALID RELAT. OPER     */ 00685000
         SLR   @10,@10                                             0234 00686000
         ST    @10,SAVRCPAR(,R13)                                  0234 00687000
*   T4=CON0;                        /* INITIALIZE INDEX TO ZERO      */ 00688000
         LR    T4,@10                                              0235 00689000
*   I=CON1;                                                        0236 00690000
         LA    I,1                                                 0236 00691000
*   DO J=CON7 TO 0 BY-1;            /* SEARCH FOR OPERATION          */ 00692000
         LA    J,7                                                 0237 00693000
@DL00237 DS    0H                                                  0238 00694000
*     DO K=CON1 TO 0 BY-1;          /* SEARCH 2 LIKE ENTRIES         */ 00695000
*                                                                  0238 00696000
         LA    K,1                                                 0238 00697000
@DL00238 DS    0H                                                  0239 00698000
*       /*************************************************************/ 00699000
*       /*                                                           */ 00700000
*       /* VERIFY THAT THE CONDITIONAL OPERATOR SPECIFIED ON THE     */ 00701000
*       /* COMMAND IS ONE OF THOSE INDICATED IN THE CONDITIONAL      */ 00702000
*       /* OPERATOR TABLE                                            */ 00703000
*       /*                                                           */ 00704000
*       /*************************************************************/ 00705000
*                                                                  0239 00706000
*       WHWORK2H=PDEOP(1:PDEOPERL); /* PUT OPERATOR IN 2 BYTE AREA 0239 00707000
*                                      FOR COMPARE (SOME OPERATORS 0239 00708000
*                                      ARE ONLY 1 BYTE)              */ 00709000
         MVI   WHWORK2H+1,C' '                                     0239 00710000
         L     @10,VALPDE(,R1)                                     0239 00711000
         SLR   @07,@07                                             0239 00712000
         ICM   @07,3,PDEOPERL(@10)                                 0239 00713000
         BCTR  @07,0                                               0239 00714000
         L     @10,PDEOPER(,@10)                                   0239 00715000
         EX    @07,@SM00326                                        0239 00716000
*       IF OPERTAB(I:I+1)=WHWORK2H THEN                            0240 00717000
         LA    @10,OPERTAB-1(I)                                    0240 00718000
         CLC   0(2,@10),WHWORK2H                                   0240 00719000
         BE    @RT00240                                            0240 00720000
*         GOTO GOODOPER;            /* RETURN TO PARSE FOR SCAN OF 0241 00721000
*                                      REST OF COMMAND               */ 00722000
*       ELSE                                                       0242 00723000
*         I=I+CON2;                 /* SCAN ENTIRE TABLE UNTIL A   0242 00724000
*                                      MATCH IS FOUND -- IF NON IS 0242 00725000
*                                      FOUND ISSUE DIAGNOSTIC        */ 00726000
         AH    I,@CH00072                                          0242 00727000
*     END;                                                         0243 00728000
         BCTR  K,0                                                 0243 00729000
         LTR   K,K                                                 0243 00730000
         BNM   @DL00238                                            0243 00731000
*     T4=T4+CON2;                   /* UPDATE INDEX VALUE            */ 00732000
         AH    T4,@CH00072                                         0244 00733000
*   END;                                                           0245 00734000
*                                                                  0245 00735000
         BCTR  J,0                                                 0245 00736000
         LTR   J,J                                                 0245 00737000
         BNM   @DL00237                                            0245 00738000
*   /*****************************************************************/ 00739000
*   /*                                                               */ 00740000
*   /* SET THE RETURN CODE TO REFLECT WHETHER OR NOT THE CONDIT      */ 00741000
*   /* OPERATOR IS VALID--0=VALID 4=INVALID                          */ 00742000
*   /*                                                               */ 00743000
*   /*****************************************************************/ 00744000
*                                                                  0246 00745000
*   SAVRCPAR=CON4;                  /* INDICATE INVAL REL OPER       */ 00746000
         MVC   SAVRCPAR(4,R13),@CF00068                            0246 00747000
*GOODOPER:                                                         0247 00748000
*   ;                                                              0247 00749000
GOODOPER DS    0H                                                  0248 00750000
*   WHWORK1=T4;                     /* SAVE OFFSET IN CCODES TABLE   */ 00751000
         ST    T4,WHWORK1                                          0248 00752000
*   RETURN;                         /* RETURN TO PARSE               */ 00753000
@EL00003 DS    0H                                                  0249 00754000
@EF00003 DS    0H                                                  0249 00755000
@ER00003 LM    @14,@12,12(@13)                                     0249 00756000
         BR    @14                                                 0249 00757000
*   END COMPARE;                                                   0250 00758000
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */ 00759000
*     GPR01P PTR(31) REG(1),                                       0251 00760000
*     GPR15P PTR(31) REG(15);                                      0251 00761000
*   DCL                                                            0252 00762000
*     1 I006 DEF(ILIST),            /* DEFINE LIST                   */ 00763000
*      2 I00601 CHAR(1),            /* EP/DE FLAG                    */ 00764000
*      2 I00602 PTR(24),            /* EP/DE PTR                     */ 00765000
*      2 I00603 CHAR(1),            /* ERRET FLAG                    */ 00766000
*      2 I00604 PTR(24),            /* DCB PTR                       */ 00767000
*      2 I00605 PTR(31);            /* ERRET PTR                     */ 00768000
*   DECLARE                                                        0253 00769000
*     ILIST CHAR(12) BDY(DWORD);    /* STANDARD LIST                 */ 00770000
*   DECLARE                         /* COMMON VARIABLES              */ 00771000
*     I256C CHAR(256) BASED,                                       0254 00772000
*     I031F FIXED(31) BASED,                                       0254 00773000
*     I031P PTR(31) BASED,                                         0254 00774000
*     I015F FIXED(15) BASED,                                       0254 00775000
*     I015P PTR(15) BASED,                                         0254 00776000
*     I008P PTR(8) BASED,                                          0254 00777000
*     I001C CHAR(1) BASED;                                         0254 00778000
*   END IKJEFE11                                                   0255 00779000
*                                                                  0255 00780000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00781000
*/*%INCLUDE SYSLIB  (IKJWHEN )                                       */ 00782000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */ 00783000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                       */ 00784000
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */ 00785000
*/*%INCLUDE SYSLIB  (IKJSTPL )                                       */ 00786000
*/*%INCLUDE SYSLIB  (IKJSTPB )                                       */ 00787000
*/*%INCLUDE SYSLIB  (IKJLSD  )                                       */ 00788000
*                                                                  0255 00789000
*       ;                                                          0255 00790000
@DATA    DS    0H                                                       00791000
@CH00033 DC    H'1'                                                     00792000
@CH00072 DC    H'2'                                                     00793000
@CH00083 DC    H'5'                                                     00794000
@SM00322 MVC   0(0,@06),NUMBER(@09)                                     00795000
@SM00324 MVC   COMMBUF2(0,@09),COMMBUF1(@06)                            00796000
@SM00326 MVC   WHWORK2H(0),PDEOP(@10)                                   00797000
@DATD    DSECT                                                          00798000
         DS    0F                                                       00799000
@SA00001 DS    18F                                                      00800000
@PC00001 DS    1F                                                       00801000
@SA00002 DS    14F                                                      00802000
IKJEFE11 CSECT                                                          00803000
         DS    0F                                                       00804000
@CF00068 DC    F'4'                                                     00805000
@CH00068 EQU   @CF00068+2                                               00806000
@CF00096 DC    F'4096'                                                  00807000
@DATD    DSECT                                                          00808000
         DS    0D                                                       00809000
PPLPTR   DS    A                                                        00810000
OPERPTR  DS    A                                                        00811000
WHENRET  DS    F                                                        00812000
         DS    0D                                                       00813000
@TS00001 DS    CL8                                                      00814000
WORK1    DS    CL8                                                      00815000
         ORG   WORK1                                                    00816000
WHWORK1  DS    AL4                                                      00817000
         ORG   WHWORK1                                                  00818000
WHWORK1C DS    CL4                                                      00819000
         ORG   WORK1+4                                                  00820000
WHWORK2F DS    FL4                                                      00821000
         ORG   WHWORK2F                                                 00822000
WHWORK2  DS    CL4                                                      00823000
         ORG   WHWORK2                                                  00824000
WHWORK2H DS    CL2                                                      00825000
         ORG   WORK1+8                                                  00826000
VCPARMS  DS    CL8                                                      00827000
         ORG   VCPARMS                                                  00828000
CODEBASE DS    AL4                                                      00829000
DATABASE DS    AL4                                                      00830000
         ORG   VCPARMS+8                                                00831000
IKJWHEN  DS    CL88                                                     00832000
         ORG   IKJWHEN                                                  00833000
WHPL     DS    CL28                                                     00834000
WHPBLOCK DS    CL20                                                     00835000
WHPARANS DS    AL4                                                      00836000
WHATTECB DS    CL4                                                      00837000
WHMSG    DS    AL2                                                      00838000
         ORG   WHMSG                                                    00839000
WHMSG1   DS    AL1                                                      00840000
WHMSG2   DS    AL1                                                      00841000
         ORG   IKJWHEN+58                                               00842000
WHSWI    DS    BL1                                                      00843000
         ORG   WHSWI                                                    00844000
WHEND    DS    BL1                                                      00845000
WHRET    EQU   WHSWI+0                                                  00846000
WHBYPASS EQU   WHSWI+0                                                  00847000
         ORG   IKJWHEN+59                                               00848000
WHCHAR   DS    CL1                                                      00849000
WHENWAS  DS    AL4                                                      00850000
WHRCODE  DS    AL4                                                      00851000
WHCOMM   DS    AL4                                                      00852000
WHCMD    DS    CL8                                                      00853000
WHGETM   DS    AL4                                                      00854000
         ORG   WHGETM                                                   00855000
WHSUBP   DS    AL1                                                      00856000
WHFILL   DS    AL1                                                      00857000
WHLEN    DS    AL2                                                      00858000
         ORG   IKJWHEN+84                                               00859000
WHWASIZ  DS    AL4                                                      00860000
         ORG   IKJWHEN+88                                               00861000
ILIST    DS    CL12                                                     00862000
IKJEFE11 CSECT                                                          00863000
         DS    0F                                                       00864000
@SIZDATD DC    AL1(1)                                                   00865000
         DC    AL3(@ENDDATD-@DATD)                                      00866000
@CV00059 DC    V(IKJPARSE)                                              00867000
@CV00060 DC    V(IKJEFE15)                                              00868000
         DS    0D                                                       00869000
@CC00172 DC    C'END '                                                  00870000
@CC00108 DC    C'IKJPARS '                                              00871000
@CC00174 DC    C'COMMAND '                                              00872000
OPERTAB  DS    CL48                                                     00873000
         ORG   OPERTAB                                                  00874000
@NM00001 DC    CL2'EQ'                                                  00875000
@NM00002 DC    CL2'= '                                                  00876000
@NM00003 DC    CL2'LT'                                                  00877000
@NM00004 DC    CL2'< '                                                  00878000
@NM00005 DC    CL2'GT'                                                  00879000
@NM00006 DC    CL2'> '                                                  00880000
@NM00007 DC    CL2'NE'                                                  00881000
@NM00008 DC    CL2'^='                                                  00882000
@NM00009 DC    CL2'LE'                                                  00883000
@NM00010 DC    CL2'<='                                                  00884000
@NM00011 DC    CL2'GE'                                                  00885000
@NM00012 DC    CL2'>='                                                  00886000
@NM00013 DC    CL2'NG'                                                  00887000
@NM00014 DC    CL2'^>'                                                  00888000
@NM00015 DC    CL2'NL'                                                  00889000
@NM00016 DC    CL2'^<'                                                  00890000
CCODES   DS    CL16                                                     00891000
         ORG   CCODES                                                   00892000
@NM00017 DC    X'01'                                                    00893000
@NM00018 DC    X'01'                                                    00894000
@NM00019 DC    X'02'                                                    00895000
@NM00020 DC    X'02'                                                    00896000
@NM00021 DC    X'03'                                                    00897000
@NM00022 DC    X'03'                                                    00898000
@NM00023 DC    X'02'                                                    00899000
@NM00024 DC    X'03'                                                    00900000
@NM00025 DC    X'01'                                                    00901000
@NM00026 DC    X'02'                                                    00902000
@NM00027 DC    X'01'                                                    00903000
@NM00028 DC    X'03'                                                    00904000
@NM00029 DC    X'01'                                                    00905000
@NM00030 DC    X'02'                                                    00906000
@NM00031 DC    X'01'                                                    00907000
@NM00032 DC    X'03'                                                    00908000
         ORG   OPERTAB+48                                               00909000
IKJEFE11 CSECT                                                          00910000
PARS     EQU *                                                          00911000
IKJPARSE IKJPARM                                                        00912000
IKJRC    IKJKEYWD  DEFAULT='SYSRC'                                      00913000
         IKJNAME  'SYSRC',SUBFLD=IKJCOMP                                00914000
IKJCOMP  IKJSUBF                                                        00915000
IKJOPER  IKJIDENT ' OPERATOR',FIRST=ANY,OTHER=ANY,                     *00916000
               MAXLNTH=2,VALIDCK=COMPARE,                              *00917000
               PROMPT='1 OR 2 CHARACTER OPERATOR',                     *00918000
               HELP='VALID OPERATOR: EQ  NE  LT  GT  NL  NG  LE  GE'    00919000
IKJNUM   IKJIDENT 'NUMERIC',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=4,     *00920000
               PROMPT=' 1 TO 4 DIGIT INTEGER',                         *00921000
               HELP=' 1 TO 4 CHARACTER NUMERIC VALUE TO WHICH PREVIOUS *00922000
               COMMAND RETURN CODE WILL BE COMPARED'                    00923000
         IKJENDP                                                        00924000
@DATD    DSECT                                                          00925000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00926000
@ENDDATD EQU   *                                                        00927000
IKJEFE11 CSECT                                                          00928000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00929000
@01      EQU   01                                                       00930000
@02      EQU   02                                                       00931000
@03      EQU   03                                                       00932000
@04      EQU   04                                                       00933000
@05      EQU   05                                                       00934000
@06      EQU   06                                                       00935000
@07      EQU   07                                                       00936000
@08      EQU   08                                                       00937000
@09      EQU   09                                                       00938000
@10      EQU   10                                                       00939000
@11      EQU   11                                                       00940000
@12      EQU   12                                                       00941000
@13      EQU   13                                                       00942000
@14      EQU   14                                                       00943000
@15      EQU   15                                                       00944000
LSDPTR   EQU   @03                                                      00945000
STPBPTR  EQU   @07                                                      00946000
WHRCODE2 EQU   @08                                                      00947000
K        EQU   @06                                                      00948000
J        EQU   @05                                                      00949000
I        EQU   @02                                                      00950000
T4       EQU   @03                                                      00951000
T3       EQU   @04                                                      00952000
CPPLPTR  EQU   @05                                                      00953000
R11      EQU   @11                                                      00954000
R12      EQU   @12                                                      00955000
R0       EQU   @00                                                      00956000
R1       EQU   @01                                                      00957000
R6       EQU   @06                                                      00958000
R13      EQU   @13                                                      00959000
R15      EQU   @15                                                      00960000
GPR15P   EQU   @15                                                      00961000
GPR01P   EQU   @01                                                      00962000
R14      EQU   @14                                                      00963000
R2       EQU   @02                                                      00964000
R3       EQU   @03                                                      00965000
R4       EQU   @04                                                      00966000
R5       EQU   @05                                                      00967000
CPPL     EQU   0                                                        00968000
CPPLCBUF EQU   CPPL                                                     00969000
CPPLUPT  EQU   CPPL+4                                                   00970000
CPPLECT  EQU   CPPL+12                                                  00971000
PPL      EQU   0                                                        00972000
PPLUPT   EQU   PPL                                                      00973000
PPLECT   EQU   PPL+4                                                    00974000
PPLECB   EQU   PPL+8                                                    00975000
PPLPCL   EQU   PPL+12                                                   00976000
PPLANS   EQU   PPL+16                                                   00977000
PPLCBUF  EQU   PPL+20                                                   00978000
PPLUWA   EQU   PPL+24                                                   00979000
ECT      EQU   0                                                        00980000
ECTRCDF  EQU   ECT                                                      00981000
ECTRTCD  EQU   ECT+1                                                    00982000
ECTPCMD  EQU   ECT+12                                                   00983000
ECTSWS   EQU   ECT+28                                                   00984000
STPL     EQU   0                                                        00985000
STPLSTPB EQU   STPL+12                                                  00986000
STPB     EQU   0                                                        00987000
LSD      EQU   0                                                        00988000
LSDADATA EQU   LSD                                                      00989000
LSDTOTLN EQU   LSD+6                                                    00990000
LSDANEXT EQU   LSD+8                                                    00991000
LSDCLEAR EQU   0                                                        00992000
SAVECURR EQU   0                                                        00993000
SAVRCPAR EQU   SAVECURR+16                                              00994000
PARSPDL  EQU   0                                                        00995000
PDENUM   EQU   PARSPDL+20                                               00996000
PDENUML  EQU   PARSPDL+24                                               00997000
NUMBER   EQU   0                                                        00998000
VALIDPAR EQU   0                                                        00999000
VALPDE   EQU   VALIDPAR                                                 01000000
VALWORK  EQU   VALIDPAR+4                                               01001000
VALIDPDL EQU   0                                                        01002000
PDEOPER  EQU   VALIDPDL                                                 01003000
PDEOPERL EQU   VALIDPDL+4                                               01004000
PDEOP    EQU   0                                                        01005000
COMMBUF1 EQU   0                                                        01006000
COMMBUF2 EQU   0                                                        01007000
CPPARM1  EQU   0                                                        01008000
CPLEN    EQU   CPPARM1                                                  01009000
CPCOMM   EQU   CPPARM1+4                                                01010000
SAVEVAL  EQU   0                                                        01011000
CDEBASE  EQU   SAVEVAL                                                  01012000
DATBASE  EQU   SAVEVAL+4                                                01013000
I001C    EQU   0                                                        01014000
I008P    EQU   0                                                        01015000
I015F    EQU   0                                                        01016000
I015P    EQU   0                                                        01017000
I031F    EQU   0                                                        01018000
I031P    EQU   0                                                        01019000
I256C    EQU   0                                                        01020000
CPPARM   EQU   0                                                        01021000
STPLPTR  EQU   PPLPTR                                                   01022000
ECTPTR   EQU   CPPLECT                                                  01023000
CBUF2LEN EQU   COMMBUF2                                                 01024000
I006     EQU   ILIST                                                    01025000
I00601   EQU   I006                                                     01026000
I00602   EQU   I006+1                                                   01027000
I00603   EQU   I006+4                                                   01028000
I00604   EQU   I006+5                                                   01029000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01030000
I00605   EQU   I006+8                                                   01031000
CPOFFSET EQU   CPPARM1+2                                                01032000
@NM00043 EQU   PDEOP                                                    01033000
PDEOPERF EQU   VALIDPDL+6                                               01034000
PDENUMF  EQU   PARSPDL+26                                               01035000
@NM00042 EQU   PARSPDL+18                                               01036000
@NM00041 EQU   PARSPDL+16                                               01037000
@NM00040 EQU   PARSPDL+12                                               01038000
@NM00039 EQU   PARSPDL+10                                               01039000
PDERC    EQU   PARSPDL+8                                                01040000
@NM00038 EQU   PARSPDL+4                                                01041000
PDECHAIN EQU   PARSPDL                                                  01042000
@NM00037 EQU   SAVECURR+8                                               01043000
LASTSAV  EQU   SAVECURR+4                                               01044000
@NM00036 EQU   SAVECURR                                                 01045000
LSDRSVRD EQU   LSD+12                                                   01046000
LSDRCLEN EQU   LSD+4                                                    01047000
STPBOTDD EQU   STPB+12                                                  01048000
STPBINDD EQU   STPB+8                                                   01049000
STPBALSD EQU   STPB+4                                                   01050000
@NM00035 EQU   STPB                                                     01051000
STPLECB  EQU   STPL+8                                                   01052000
STPLECT  EQU   STPL+4                                                   01053000
STPLUPT  EQU   STPL                                                     01054000
ECTBKPB  EQU   ECT+36                                                   01055000
ECTUSER  EQU   ECT+32                                                   01056000
ECTDDNUM EQU   ECT+29                                                   01057000
@NM00034 EQU   ECTSWS                                                   01058000
ECTBKGRD EQU   ECTSWS                                                   01059000
ECTNNOT  EQU   ECTSWS                                                   01060000
ECTNMAL  EQU   ECTSWS                                                   01061000
ECTLOGF  EQU   ECTSWS                                                   01062000
ECTATRM  EQU   ECTSWS                                                   01063000
@NM00033 EQU   ECTSWS                                                   01064000
ECTNOPD  EQU   ECTSWS                                                   01065000
ECTSCMD  EQU   ECT+20                                                   01066000
ECTSMSG  EQU   ECT+9                                                    01067000
ECTMSGF  EQU   ECT+8                                                    01068000
ECTIOWA  EQU   ECT+4                                                    01069000
CPPLPSCB EQU   CPPL+8                                                   01070000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01071000
@RF00224 EQU   @EL00002                                                 01072000
@RT00240 EQU   GOODOPER                                                 01073000
@PB00003 EQU   @EL00001                                                 01074000
@PB00002 EQU   @PB00003                                                 01075000
@ENDDATA EQU   *                                                        01076000
         END   IKJEFE11                                                 01077000
