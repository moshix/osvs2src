         TITLE 'IKJEFF05 - SUBMIT I/O AND CONTROL ROUTINE              *00001000
                        '                                               00002000
IKJEFF05 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                          01S0001 00008000
         DC    C'IKJEFF05  78.174'                              01S0001 00009000
IKJEFF06 DS    0H                                               01S0001 00010000
         USING *,@15                                            01S0001 00011000
         B     @PROLOG                                          01S0001 00012000
         DC    AL2(@EP00294-IKJEFF06)                                   00013000
         ENTRY IKJEFF06                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00016000
         BALR  @12,0                                            01S0001 00017000
@PSTART  DS    0H                                               01S0001 00018000
         USING @PSTART,@12                                      01S0001 00019000
         L     @00,@SIZDATD                                     01S0001 00020000
         GETMAIN  R,LV=(0)                                              00021000
         LR    @11,@01                                          01S0001 00022000
         USING @DATD,@11                                        01S0001 00023000
         ST    @13,@SA00001+4                                   01S0001 00024000
         LM    @15,@01,16(@13)                                  01S0001 00025000
         ST    @11,8(,@13)                                      01S0001 00026000
         LR    @13,@11                                          01S0001 00027000
         AH    @15,4(,@15)                                      01S0001 00028000
         BR    @15                                              01S0001 00029000
@EP00001 MVC   @PC00001(4),0(@01)                               01S0001 00030000
*/********************************************************************/ 00031000
*/*  END OF IKJEFFMT MAPPING MACRO                                   */ 00032000
*/********************************************************************/ 00033000
*                                                               01S0117 00034000
*                                                               01S0117 00035000
*   /*****************************************************************/ 00036000
*   /*                                                               */ 00037000
*   /* INITIALIZATION OF LOCAL BITS AND POINTERS                     */ 00038000
*   /*                                                               */ 00039000
*   /*****************************************************************/ 00040000
*                                                               01S0117 00041000
*   CONLIST=ADDR(SUBCTAB);          /* LOCAL POINTER TO CONTROL TABLE*/ 00042000
         L     CONLIST,@PC00001                                 01S0117 00043000
*   HTPTR=HISTPT;                   /* LOCAL POINTER TO HISTORY TABLE*/ 00044000
         L     HTPTR,HISTPT(,CONLIST)                           01S0118 00045000
*   MSGPTR=MSGLISPT;                /* LOCAL POINTER TO MESSAGE TABLE*/ 00046000
         L     MSGPTR,MSGLISPT(,CONLIST)                        01S0119 00047000
*   INREAD='1'B;                    /* INDICATE EXECUTION IN IKJEFF05   00048000
*                                      MAIN (READ) PROCEDURE         */ 00049000
         OI    INREAD(HTPTR),B'10000000'                        01S0120 00050000
*   R2=ADDR(WORKAREA);              /* INITIALIZE WORK POINTER TO DCB   00051000
*                                      AND INTERNAL SWITCHES         */ 00052000
         LA    R2,WORKAREA                                      01S0121 00053000
*   FAILCODE='00'X;                 /* INIT FAILURE CODE             */ 00054000
         MVI   FAILCODE(R2),X'00'                               01S0122 00055000
*   FINDCODE=0;                     /* INIT FIND RETURN CODE         */ 00056000
         SLR   @03,@03                                          01S0123 00057000
         ST    @03,FINDCODE                                     01S0123 00058000
*   BUFCORLN=0;                     /* INIT LENGTH OF CORE OBTAINED  */ 00059000
         ST    @03,BUFCORLN                                     01S0124 00060000
*   CURRDD=DDPTR;                   /* POINT TO DD FOR FIRST D.S.    */ 00061000
*                                                               01S0125 00062000
         L     CURRDD,DDPTR(,CONLIST)                           01S0125 00063000
*   /*****************************************************************/ 00064000
*   /*                                                               */ 00065000
*   /* READ (AND PROCESS) EACH INPUT DATA SET IN THIS LOOP           */ 00066000
*   /*                                                               */ 00067000
*   /*****************************************************************/ 00068000
*                                                               01S0126 00069000
*   DO WHILE(CURRDD^=0&QUIT=OFF);   /* ALLDS DO/END GROUP - LOOP        00070000
*                                      UNTIL PROCESS ALL INPUT DATA     00071000
*                                      SETS OR FIND ERROR            */ 00072000
         B     @DE00126                                         01S0126 00073000
@DL00126 DS    0H                                               01S0127 00074000
*     READSW='00'X;                 /* INIT READ SWITCHES            */ 00075000
         MVI   READSW(R2),X'00'                                 01S0127 00076000
*     DCB=READDCB;                  /* COPY DCB TO DYNAMIC CORE      */ 00077000
         MVC   DCB(96,R2),READDCB                               01S0128 00078000
*     DCBDSORG(1)=DA08DSO;          /* SET PROPER ORGANIZATION       */ 00079000
*                                                               01S0129 00080000
         L     @03,DAPB0PTR(,CURRDD)                            01S0129 00081000
         MVC   DCBDSORG(1,R2),DA08DSO(@03)                      01S0129 00082000
*     /***************************************************************/ 00083000
*     /*                                                             */ 00084000
*     /* INPUT D.S. DSORG MUST BE SEQ. OR PDS (PARTITIONED)          */ 00085000
*     /*                                                             */ 00086000
*     /***************************************************************/ 00087000
*                                                               01S0130 00088000
*     IF DCBDSORG='40'X|DCBDSORG='02'X THEN                     01S0130 00089000
         CLI   DCBDSORG(R2),X'40'                               01S0130 00090000
         BE    @RT00130                                         01S0130 00091000
         CLI   DCBDSORG(R2),X'02'                               01S0130 00092000
         BNE   @RF00130                                         01S0130 00093000
@RT00130 DS    0H                                               01S0131 00094000
*       DO;                                                     01S0131 00095000
*         IF DCBDSORG='02'X THEN    /* IF IT IS A PDS THEN WE MUST      00096000
*                                      ALTER THE MACRO FORMAT TO SHOW   00097000
*                                      BPAM READ (WITH POINT)        */ 00098000
         CLI   DCBDSORG(R2),X'02'                               01S0132 00099000
         BNE   @RF00132                                         01S0132 00100000
*           DCBIMACR=KONX24;                                    01S0133 00101000
         MVI   DCBIMACR(R2),B'00100100'                         01S0133 00102000
*         ELSE                      /* DATA SET IS SEQUENTIAL        */ 00103000
*                                                               01S0134 00104000
*           /*********************************************************/ 00105000
*           /*                                                       */ 00106000
*           /* ERROR IF MEMBER NAME FOR SEQ. D.S.                    */ 00107000
*           /*                                                       */ 00108000
*           /*********************************************************/ 00109000
*                                                               01S0134 00110000
*           IF DA08MNM^=ALLBLANK THEN                           01S0134 00111000
         B     @RC00132                                         01S0134 00112000
@RF00132 L     @03,DAPB0PTR(,CURRDD)                            01S0134 00113000
         CLC   DA08MNM(8,@03),@CC00058                          01S0134 00114000
         BE    @RF00134                                         01S0134 00115000
*             FAILCODE='04'X;                                   01S0135 00116000
         MVI   FAILCODE(R2),X'04'                               01S0135 00117000
*                                                               01S0136 00118000
*         /***********************************************************/ 00119000
*         /*                                                         */ 00120000
*         /* INITIALIZE DCB FOR DATA SET                             */ 00121000
*         /*                                                         */ 00122000
*         /***********************************************************/ 00123000
*                                                               01S0136 00124000
*         RDECB=MDECB;              /* COPY DECB INTO DYNAMIC CORE   */ 00125000
@RF00134 DS    0H                                               01S0136 00126000
@RC00132 MVC   RDECB(20),MDECB                                  01S0136 00127000
*         FIRSTRD='1'B;             /* INDICATE THIS IS FIRST READ   */ 00128000
         OI    FIRSTRD(R2),B'10000000'                          01S0137 00129000
*         DDNAME=DA08DDN;           /* COPY THE DDNAME FROM THE 01S0138 00130000
*                                      DAIR08 BLOCK FOR THIS DATA SET   00131000
*                                      INTO THE DCB                  */ 00132000
*                                                               01S0138 00133000
         L     @03,DAPB0PTR(,CURRDD)                            01S0138 00134000
         MVC   DDNAME(8,R2),DA08DDN(@03)                        01S0138 00135000
*         /***********************************************************/ 00136000
*         /*                                                         */ 00137000
*         /* OPEN THE INPUT DATA SET                                 */ 00138000
*         /*                                                         */ 00139000
*         /***********************************************************/ 00140000
*                                                               01S0139 00141000
*         ROPE=OPEL;                /* MOVE LIST FORM OF OPEN TO        00142000
*                                      DYNAMIC CORE                  */ 00143000
         MVC   ROPE(4),OPEL                                     01S0139 00144000
*         GEN(OPEN ((R2)),MF=(E,ROPE))                          01S0140 00145000
*         REFS(R2,ROPE);            /* GENERATED OPEN MACRO          */ 00146000
         OPEN ((R2)),MF=(E,ROPE)                                        00147000
*       END;                                                    01S0141 00148000
*                                                               01S0141 00149000
*     /***************************************************************/ 00150000
*     /*                                                             */ 00151000
*     /* ERROR IF DSORG NOT SEQUENTIAL OR PDS                        */ 00152000
*     /*                                                             */ 00153000
*     /***************************************************************/ 00154000
*                                                               01S0142 00155000
*     ELSE                          /* IF THE ORGANIZATION IS NOT       00156000
*                                      SEQUENTIAL OR PARTITIONED IT     00157000
*                                      IS AN ERROR                   */ 00158000
*       FAILCODE='01'X;                                         01S0142 00159000
         B     @RC00130                                         01S0142 00160000
@RF00130 MVI   FAILCODE(R2),X'01'                               01S0142 00161000
*                                                               01S0143 00162000
*     /***************************************************************/ 00163000
*     /*                                                             */ 00164000
*     /* IF OPEN SUCCESSFUL AND PDS, ISSUE FIND FOR MEMBER           */ 00165000
*     /*                                                             */ 00166000
*     /***************************************************************/ 00167000
*                                                               01S0143 00168000
*     IF OPENBIT='1'B&DA08DSO='02'X THEN/* IF THE OPEN WAS SUCCESSFUL   00169000
*                                      AND                           */ 00170000
@RC00130 TM    OPENBIT(R2),B'00010000'                          01S0143 00171000
         BNO   @RF00143                                         01S0143 00172000
         L     @03,DAPB0PTR(,CURRDD)                            01S0143 00173000
         CLI   DA08DSO(@03),X'02'                               01S0143 00174000
         BNE   @RF00143                                         01S0143 00175000
*       DO;                         /* THE DATA SET IS A PDS THEN    */ 00176000
*         IF DA08MNM=ALLBLANK       /* IF NO MEMBERNAME WAS SPECIFIED*/ 00177000
*           THEN                    /* USE TEMPNAME FOR DEFAULT NAME */ 00178000
         CLC   DA08MNM(8,@03),@CC00058                          01S0145 00179000
         BNE   @RF00145                                         01S0145 00180000
*           DA08MNM=KTEMPNAM;                                   01S0146 00181000
         MVC   DA08MNM(8,@03),KTEMPNAM                          01S0146 00182000
*         FINDNAME=DA08MNM;         /* MOVE MEMBER NAME TO FIND AREA */ 00183000
@RF00145 L     @03,DAPB0PTR(,CURRDD)                            01S0147 00184000
         MVC   FINDNAME(8),DA08MNM(@03)                         01S0147 00185000
*         RFY                                                   01S0148 00186000
*           R15 RSTD;                                           01S0148 00187000
*         GEN(FIND  (R2),FINDNAME,D)                            01S0149 00188000
*         REFS(R2,FINDNAME);        /* GENERATED FIND MACRO          */ 00189000
         FIND  (R2),FINDNAME,D                                          00190000
*         FINDCODE=R15;             /* SAVE FIND RETURN CODE         */ 00191000
         ST    R15,FINDCODE                                     01S0150 00192000
*       END;                                                    01S0151 00193000
*     RFY                                                       01S0152 00194000
*       R15 UNRSTD;                                             01S0152 00195000
*                                                               01S0152 00196000
@RF00143 DS    0H                                               01S0153 00197000
*     /***************************************************************/ 00198000
*     /*                                                             */ 00199000
*     /* INITIALIZE FOR FIRST READ                                   */ 00200000
*     /*                                                             */ 00201000
*     /***************************************************************/ 00202000
*                                                               01S0153 00203000
*     IF OPENBIT='1'B&LRECL=80&RECFMF='1'B&RECFMV='0'B&FINDCODE=0&      00204000
*         FAILCODE='00'X THEN       /* IF OPEN WAS SUCCESSFUL AND RCD   00205000
*                                      LENGTH AND FORMAT ARE OK      */ 00206000
         TM    OPENBIT(R2),B'00010000'                          01S0153 00207000
         BNO   @RF00153                                         01S0153 00208000
         CLC   LRECL(2,R2),@CH00060                             01S0153 00209000
         BNE   @RF00153                                         01S0153 00210000
         TM    RECFMF(R2),B'10000000'                           01S0153 00211000
         BNO   @RF00153                                         01S0153 00212000
         TM    RECFMV(R2),B'01000000'                           01S0153 00213000
         BNZ   @RF00153                                         01S0153 00214000
         SLR   @03,@03                                          01S0153 00215000
         C     @03,FINDCODE                                     01S0153 00216000
         BNE   @RF00153                                         01S0153 00217000
         CLI   FAILCODE(R2),X'00'                               01S0153 00218000
         BNE   @RF00153                                         01S0153 00219000
*       DO;                         /* READCODE DO/END GROUP         */ 00220000
*         IF FIRSTRD='1'B           /* THEN IF READ HAS NOT BEEN     */ 00221000
*           THEN                    /* INITIALIZED THEN              */ 00222000
         TM    FIRSTRD(R2),B'10000000'                          01S0155 00223000
         BNO   @RF00155                                         01S0155 00224000
*           DO;                     /* READINIT DO/END GROUP         */ 00225000
*             RESCNT=0;             /* INITIALIZE COUNT OF BYTES THAT   00226000
*                                      THE LAST BLOCK READ IS LESS      00227000
*                                      THAN THE BLOCKSIZE BY         */ 00228000
*                                                               01S0157 00229000
         STH   @03,RESCNT                                       01S0157 00230000
*             /*******************************************************/ 00231000
*             /*                                                     */ 00232000
*             /* GET LARGER INPUT BUFFER IF NECESSARY                */ 00233000
*             /*                                                     */ 00234000
*             /*******************************************************/ 00235000
*                                                               01S0158 00236000
*             IF BUFCORLN^=0&BUFCORLN<BLKSIZE THEN/* IF CORE HAS BEEN   00237000
*                                      OBTAINED BUT                  */ 00238000
         L     @15,BUFCORLN                                     01S0158 00239000
         CR    @15,@03                                          01S0158 00240000
         BE    @RF00158                                         01S0158 00241000
         CH    @15,BLKSIZE(,R2)                                 01S0158 00242000
         BNL   @RF00158                                         01S0158 00243000
*               DO;                 /* IT IS NOT ENOUGH              */ 00244000
*                 GEN(MVC   AAFREM,DDFREM)                      01S0160 00245000
*                 SETS(AAFREM) REFS(DDFREM);/* GENERATED MVC         */ 00246000
         MVC   AAFREM,DDFREM                                            00247000
*                 R8=BUFCORLN;      /* FREE THE OLD CORE             */ 00248000
         L     R8,BUFCORLN                                      01S0161 00249000
*                 GEN(FREEMAIN E,LV=(R8),A=BUFCORAD,SP=1,MF=(E,AAFREM)) 00250000
*                 REFS(R8,BUFCORAD,AAFREM);/* GENERATED FREEMAIN        00251000
*                                      MACRO                         */ 00252000
         FREEMAIN E,LV=(R8),A=BUFCORAD,SP=1,MF=(E,AAFREM)               00253000
*                 BUFCORLN=0;       /* INDICATE HAVE NO CORE         */ 00254000
         SLR   @03,@03                                          01S0163 00255000
         ST    @03,BUFCORLN                                     01S0163 00256000
*               END;                                            01S0164 00257000
*                                                               01S0164 00258000
*             /*******************************************************/ 00259000
*             /*                                                     */ 00260000
*             /* GET CORE FOR READ BUFFER (MINIMUM = BLOCKSIZE,      */ 00261000
*             /* MAXIMUM = 2 X BLOCKSIZE)                            */ 00262000
*             /*                                                     */ 00263000
*             /*******************************************************/ 00264000
*                                                               01S0165 00265000
*             IF BUFCORLN=0 THEN    /* IF HAVE NO CORE               */ 00266000
@RF00158 L     @03,BUFCORLN                                     01S0165 00267000
         LTR   @03,@03                                          01S0165 00268000
         BNZ   @RF00165                                         01S0165 00269000
*               DO;                                             01S0166 00270000
*                 GEN(MVC   AAGETM,DDGETM)                      01S0167 00271000
*                 SETS(AAGETM) REFS(DDGETM);/* GENERATED MVC         */ 00272000
         MVC   AAGETM,DDGETM                                            00273000
*                 GMNMIN=BLKSIZE;   /* THEN PERFORM A GETMAIN FOR ONE   00274000
*                                      OR TWO BLOCK SIZES            */ 00275000
         LH    @03,BLKSIZE(,R2)                                 01S0168 00276000
         ST    @03,GMNMIN                                       01S0168 00277000
*                 GMNMAX=2*GMNMIN;                              01S0169 00278000
         ALR   @03,@03                                          01S0169 00279000
         ST    @03,GMNMAX                                       01S0169 00280000
*                 RFY                                           01S0170 00281000
*                   R15 RSTD;                                   01S0170 00282000
*                 GEN                                           01S0171 00283000
*(GETMAIN VC,LA=GMNMIN,A=BUFFIND,SP=1,MF=(E,AAGETM))            01S0171 00284000
*                 SETS(BUFFIND) REFS(GMNMIN,AAGETM);/* GENERATED        00285000
*                                      GETMAIN MACRO                 */ 00286000
*                                                               01S0171 00287000
         GETMAIN VC,LA=GMNMIN,A=BUFFIND,SP=1,MF=(E,AAGETM)              00288000
*                 /***************************************************/ 00289000
*                 /*                                                 */ 00290000
*                 /* IF THE GETMAIN FAILED, ISSUE 'INSUFFICIENT      */ 00291000
*                 /* STORAGE AVAILABLE' MESSAGE                      */ 00292000
*                 /*                                                 */ 00293000
*                 /***************************************************/ 00294000
*                                                               01S0172 00295000
*                 IF R15^=0 THEN                                01S0172 00296000
         LTR   R15,R15                                          01S0172 00297000
         BZ    @RF00172                                         01S0172 00298000
*                   DO;                                         01S0173 00299000
*                     MSGID='05I';                              01S0174 00300000
         MVI   MSGID+3(MSGPTR),C' '                             01S0174 00301000
         MVC   MSGID(3,MSGPTR),@CC00651                         01S0174 00302000
*                     L1=LENGTH(CTCMDNM);/* INSERT COMMAND NAME -       00303000
*                                                              Y02993*/ 00304000
         MVI   L1(MSGPTR),X'08'                                 01S0175 00305000
*                     VAR1=ADDR(CTCMDNM);/*                    Y02993*/ 00306000
         LA    @14,CTCMDNM(,CONLIST)                            01S0176 00307000
         STCM  @14,7,VAR1(MSGPTR)                               01S0176 00308000
*                     GO TO MSG;    /* PUT MESSAGE                   */ 00309000
         B     MSG                                              01S0177 00310000
*                   END;                                        01S0178 00311000
*                 RFY                                           01S0179 00312000
*                   R15 UNRSTD;                                 01S0179 00313000
@RF00172 DS    0H                                               01S0180 00314000
*               END;                                            01S0180 00315000
*                                                               01S0181 00316000
*             /*******************************************************/ 00317000
*             /*                                                     */ 00318000
*             /* USE SINGLE BUFFER IF COULD ONLY GET CORE FOR SINGLE */ 00319000
*             /* INSTEAD OF DOUBLE BUFFER                            */ 00320000
*             /*                                                     */ 00321000
*             /*******************************************************/ 00322000
*                                                               01S0181 00323000
*             IF BUFCORLN<(2*BLKSIZE) THEN/* IF CORE IS INSUFFICIENT    00324000
*                                      FOR                           */ 00325000
@RF00165 LH    @09,BLKSIZE(,R2)                                 01S0181 00326000
         ALR   @09,@09                                          01S0181 00327000
         C     @09,BUFCORLN                                     01S0181 00328000
         BNH   @RF00181                                         01S0181 00329000
*               DO;                 /* DOUBLE BUFFERS THEN           */ 00330000
*                 DBLBUFSW=0;       /* INDICATE SINGLE BUFFS         */ 00331000
         MVI   DBLBUFSW,X'00'                                   01S0183 00332000
*                 BUFFA=BUFCORAD;   /* SET BUFFER ADDRESS            */ 00333000
         L     BUFFA,BUFCORAD                                   01S0184 00334000
*                 BUFFB=BUFFA;      /* FIRST AND SECOND BUFFS        */ 00335000
         STCM  BUFFA,7,BUFFB                                    01S0185 00336000
*               END;                /* ARE THE SAME                  */ 00337000
*                                                               01S0186 00338000
*             /*******************************************************/ 00339000
*             /*                                                     */ 00340000
*             /* FIRST READ - IF DOUBLE INPUT BUFFER                 */ 00341000
*             /*                                                     */ 00342000
*             /*******************************************************/ 00343000
*                                                               01S0187 00344000
*             ELSE                  /* OTHERWISE                     */ 00345000
*               DO;                 /* THERE ARE DOUBLE BUFFERS      */ 00346000
         B     @RC00181                                         01S0187 00347000
@RF00181 DS    0H                                               01S0188 00348000
*                 DBLBUFSW=1;       /* SO INDICATE THIS              */ 00349000
         MVI   DBLBUFSW,X'01'                                   01S0188 00350000
*                 BUFFA=BUFCORAD;   /* SET ADDRESS OF FIRST          */ 00351000
         L     @03,BUFCORAD                                     01S0189 00352000
         LR    BUFFA,@03                                        01S0189 00353000
*                 BUFFB=BUFCORAD+(BUFCORLN/2);/* SET ADDRESS OF 01S0190 00354000
*                                      SECOND                        */ 00355000
         L     @15,BUFCORLN                                     01S0190 00356000
         SRL   @15,1                                            01S0190 00357000
         ALR   @03,@15                                          01S0190 00358000
         STCM  @03,7,BUFFB                                      01S0190 00359000
*                 R8=BUFFB;                                     01S0191 00360000
         LR    R8,@03                                           01S0191 00361000
*                 GEN(READ  RDECB,SF,(R2),(R8),MF=E)            01S0192 00362000
*                 FLOWS(INPUTEOF,SYNADRTN) REFS(RDECB,R2,R8) SETS(IOB,  00363000
*                     BUFFB);       /* GENERATED READ MACRO          */ 00364000
         READ  RDECB,SF,(R2),(R8),MF=E                                  00365000
*               END;                                            01S0193 00366000
*             FIRSTRD='0'B;         /* INDICATE READ INITIALIZED     */ 00367000
@RC00181 NI    FIRSTRD(R2),B'01111111'                          01S0194 00368000
*             CURREC=BUFFA+BUFCORLN;/* INIT CURRENT RECORD ADDRESS   */ 00369000
         LR    CURREC,BUFFA                                     01S0195 00370000
         AL    CURREC,BUFCORLN                                  01S0195 00371000
*           END;                    /* READINIT DO/END GROUP         */ 00372000
*                                                               01S0197 00373000
*         /***********************************************************/ 00374000
*         /*                                                         */ 00375000
*         /* LOOP OF READING/PROCESSING INPUT RECORDS                */ 00376000
*         /*                                                         */ 00377000
*         /***********************************************************/ 00378000
*                                                               01S0197 00379000
*         DO WHILE(QUIT=OFF);       /* NEXTRCD DO/END GROUP -   01S0197 00380000
*                                      CONTINUE READ LOOP UNTIL EOF     00381000
*                                      (INPUTEOF LABEL GIVEN CONTROL)   00382000
*                                      OR ERROR FOUND (QUIT = ON)    */ 00383000
*                                                               01S0197 00384000
@RF00155 B     @DE00197                                         01S0197 00385000
@DL00197 DS    0H                                               01S0198 00386000
*           /*********************************************************/ 00387000
*           /*                                                       */ 00388000
*           /* POINT TO NEXT RECORD IN BUFFER (WILL DO READ(S) TO    */ 00389000
*           /* FILL BUFFER(S) IF THIS ADDRESS NOT WITHIN AREA OF LAST*/ 00390000
*           /* READ)                                                 */ 00391000
*           /*                                                       */ 00392000
*           /*********************************************************/ 00393000
*                                                               01S0198 00394000
*           CURREC=CURREC+LRECL;    /* SET POINTER TO NEXT RECORD IN    00395000
*                                      BUFFER(S)                     */ 00396000
*                                                               01S0198 00397000
         AH    CURREC,LRECL(,R2)                                01S0198 00398000
*           /*********************************************************/ 00399000
*           /*                                                       */ 00400000
*           /* READ INTO BUFFER(S) IF NECESSARY                      */ 00401000
*           /*                                                       */ 00402000
*           /*********************************************************/ 00403000
*                                                               01S0199 00404000
*           IF CURREC^<BUFFA+BLKSIZE-RESCNT THEN/* IF PROCESSED LAST    00405000
*                                      RECORD IN BUFFER(S)           */ 00406000
         LR    @03,BUFFA                                        01S0199 00407000
         AH    @03,BLKSIZE(,R2)                                 01S0199 00408000
         SH    @03,RESCNT                                       01S0199 00409000
         CR    CURREC,@03                                       01S0199 00410000
         BL    @RF00199                                         01S0199 00411000
*             DO K=0 TO DBLBUFSW;   /* FILLBUFF DO/END GROUP -  01S0200 00412000
*                                      EXECUTE FOLLOWING CODE TWICE     00413000
*                                      IF THERE ARE DOUBLE BUFFERS      00414000
*                                      AND ONCE IF SINGLE BUFFERED   */ 00415000
         SLR   K,K                                              01S0200 00416000
         B     @DE00200                                         01S0200 00417000
@DL00200 DS    0H                                               01S0201 00418000
*               IF DBLBUFSW=K THEN  /* WAIT TILL SECOND LOOP TO DO      00419000
*                                      READ FOR DOUBLE BUFFER        */ 00420000
         SLR   @15,@15                                          01S0201 00421000
         IC    @15,DBLBUFSW                                     01S0201 00422000
         CR    K,@15                                            01S0201 00423000
         BNE   @RF00201                                         01S0201 00424000
*                 DO;                                           01S0202 00425000
*                   R8=BUFFB;                                   01S0203 00426000
         L     R8,BUFFB-1                                       01S0203 00427000
         LA    R8,0(,R8)                                        01S0203 00428000
*                   GEN(READ  RDECB,SF,(R2),(R8),MF=E)          01S0204 00429000
*                   FLOWS(INPUTEOF,SYNADRTN) REFS(RDECB,R2,R8) SETS(IOB 00430000
*                       ,BUFFB);    /* GENERATED READ MACRO          */ 00431000
         READ  RDECB,SF,(R2),(R8),MF=E                                  00432000
*                 END;                                          01S0205 00433000
*                                                               01S0205 00434000
*               /*****************************************************/ 00435000
*               /*                                                   */ 00436000
*               /* IF SINGLE BUFFERED OR THIS IS FIRST TIME THROUGH  */ 00437000
*               /* ISSUE A CHECK ON THE PREVIOUS READ, INITIALIZE THE*/ 00438000
*               /* POINTER TO THE CURRENT RECORD AND SWITCH BUFFER   */ 00439000
*               /* POINTERS IN CASE DOUBLE BUFFERED                  */ 00440000
*               /*                                                   */ 00441000
*               /*****************************************************/ 00442000
*                                                               01S0206 00443000
*               IF K=0 THEN                                     01S0206 00444000
@RF00201 LTR   K,K                                              01S0206 00445000
         BNZ   @RF00206                                         01S0206 00446000
*                 DO;                                           01S0207 00447000
*                   R8=ADDR(RDECB);                             01S0208 00448000
         LA    R8,RDECB                                         01S0208 00449000
*                   GEN(CHECK ((R8)))                           01S0209 00450000
*                   REFS(R8);       /* GENERATED CHECK MACRO         */ 00451000
         CHECK ((R8))                                                   00452000
*                   CURREC=BUFFB;                               01S0210 00453000
         L     CURREC,BUFFB-1                                   01S0210 00454000
         LA    CURREC,0(,CURREC)                                01S0210 00455000
*                   BUFFB=BUFFA;                                01S0211 00456000
         STCM  BUFFA,7,BUFFB                                    01S0211 00457000
*                   BUFFA=CURREC;                               01S0212 00458000
         LR    BUFFA,CURREC                                     01S0212 00459000
*                   RESCNT=CSWCNT;  /* SET DIFFERENCE BETWEEN BLOCK     00460000
*                                      SIZE AND NUMBER OF BYTES READ */ 00461000
         L     @01,DECIOBPT                                     01S0213 00462000
         LH    @15,CSWCNT(,@01)                                 01S0213 00463000
         STH   @15,RESCNT                                       01S0213 00464000
*                 END;                                          01S0214 00465000
*             END;                  /* FILLBUFF DO/END GROUP         */ 00466000
*                                                               01S0215 00467000
@RF00206 AL    K,@CF00048                                       01S0215 00468000
@DE00200 SLR   @15,@15                                          01S0215 00469000
         IC    @15,DBLBUFSW                                     01S0215 00470000
         CR    K,@15                                            01S0215 00471000
         BNH   @DL00200                                         01S0215 00472000
*           /*********************************************************/ 00473000
*           /*                                                       */ 00474000
*           /* GO TO CONTROL ROUTINE TO PROCESS THIS CARD            */ 00475000
*           /*                                                       */ 00476000
*           /*********************************************************/ 00477000
*                                                               01S0216 00478000
*           STMTPT=ADDR(NCARD);     /* POINT TO INPUT RECORD IN 01S0216 00479000
*                                      BUFFER - NOTE THAT BOTH NCARD    00480000
*                                      AND STMTPT ARE CHANGED BY        00481000
*                                      LATER SUBMIT PROCESSING       */ 00482000
@RF00199 ST    CURREC,STMTPT(,CONLIST)                          01S0216 00483000
*           CALL FF05I06;           /* CALL INTERNAL ROUTINE TO 01S0217 00484000
*                                      PROCESS THE RECORD (EXTERNAL     00485000
*                                      ROUTINES CALLING THE CONTROL     00486000
*                                      ROUTINE MUST USE IKJEFF06        00487000
*                                      ENTRY POINT AND PASS A POINTER   00488000
*                                      TO SUBMIT CONTROL TABLE)      */ 00489000
         BAL   @14,FF05I06                                      01S0217 00490000
*         END;                      /* NEXTRCD DO/END GROUP -   01S0218 00491000
*                                      CONTINUE READ LOOP UNTIL EOF     00492000
*                                      (INPUTEOF LABEL GIVEN CONTROL)   00493000
*                                      OR ERROR FOUND (IF QUIT SWITCH   00494000
*                                      ON FALL THRU HERE)            */ 00495000
@DE00197 TM    QUIT(HTPTR),B'10000000'                          01S0218 00496000
         BZ    @DL00197                                         01S0218 00497000
*       END;                        /* READCODE DO/END GROUP         */ 00498000
*                                                               01S0220 00499000
*     /***************************************************************/ 00500000
*     /*                                                             */ 00501000
*     /* ERROR MESSAGE - INSERT DATA SET <AND MEMBER> NAME           */ 00502000
*     /*                                                             */ 00503000
*     /***************************************************************/ 00504000
*                                                               01S0220 00505000
*     ELSE                          /* IF THE OPEN WAS UNSUCCESSFUL     00506000
*                                      OR THE DATA SET IS NOT   01S0220 00507000
*                                      ACCEPTABLE                    */ 00508000
*       DO;                         /* PUTMSG DO/END GROUP           */ 00509000
         B     @RC00153                                         01S0220 00510000
@RF00153 DS    0H                                               01S0221 00511000
*         VAR1=ADDR(DSNAME)+D8ADJUST;/* SET MESSAGE VARIABLE POINTER    00512000
*                                      TO INCLUDE THE NAME OF THE       00513000
*                                      DATA SET IN THE MESSAGE       */ 00514000
         L     @03,DAPB0PTR(,CURRDD)                            01S0221 00515000
         LA    @15,84                                           01S0221 00516000
         ALR   @15,@03                                          01S0221 00517000
         LA    @14,DSNAME(,@15)                                 01S0221 00518000
         SLR   @01,@01                                          01S0221 00519000
         IC    @01,D8ADJUST(,@15)                               01S0221 00520000
         ALR   @14,@01                                          01S0221 00521000
         STCM  @14,7,VAR1(MSGPTR)                               01S0221 00522000
*         L1=NAMELEN-D8ADJUST;                                  01S0222 00523000
         LCR   @01,@01                                          01S0222 00524000
         AH    @01,NAMELEN(,@15)                                01S0222 00525000
         STC   @01,L1(,MSGPTR)                                  01S0222 00526000
*         VAR2=ADDR(DA08MNM);       /* SET MESSAGE VARIABLE POINTER 2   00527000
*                                      TO INCLUDE THE NAME OF THE       00528000
*                                      MEMBER NAME IN THE MESSAGE    */ 00529000
         LA    @15,DA08MNM(,@03)                                01S0223 00530000
         STCM  @15,7,VAR2(MSGPTR)                               01S0223 00531000
*         L2=LENGTH(DA08MNM);                                   01S0224 00532000
*                                                               01S0224 00533000
         MVI   L2(MSGPTR),X'08'                                 01S0224 00534000
*         /***********************************************************/ 00535000
*         /*                                                         */ 00536000
*         /* IF THERE IS NO MEMBER NAME INDICATE SO                  */ 00537000
*         /*                                                         */ 00538000
*         /***********************************************************/ 00539000
*                                                               01S0225 00540000
*         IF DA08MNM(1)=' ' THEN                                01S0225 00541000
         CLI   DA08MNM(@03),C' '                                01S0225 00542000
         BNE   @RF00225                                         01S0225 00543000
*           L2=0;                                               01S0226 00544000
*                                                               01S0226 00545000
         MVI   L2(MSGPTR),X'00'                                 01S0226 00546000
*         /***********************************************************/ 00547000
*         /*                                                         */ 00548000
*         /* GET ID FOR ERROR MESSAGE                                */ 00549000
*         /*                                                         */ 00550000
*         /***********************************************************/ 00551000
*                                                               01S0227 00552000
*PUTMSG2:                                                       01S0227 00553000
*         IF FAILCODE^='03'X THEN   /* IF IT WAS NOT AN I/O ERROR       00554000
*                                      LINKAGE FOR MSG MUST BE SET UP*/ 00555000
@RF00225 DS    0H                                               01S0227 00556000
PUTMSG2  CLI   FAILCODE(R2),X'03'                               01S0227 00557000
         BE    @RF00227                                         01S0227 00558000
*           DO;                     /* NOIOERR DO/END GROUP          */ 00559000
*                                                               01S0228 00560000
*             /*******************************************************/ 00561000
*             /*                                                     */ 00562000
*             /* ID FOR INCORRECT DSORG                              */ 00563000
*             /*                                                     */ 00564000
*             /*******************************************************/ 00565000
*                                                               01S0229 00566000
*             IF FAILCODE='01'X THEN                            01S0229 00567000
         CLI   FAILCODE(R2),X'01'                               01S0229 00568000
         BNE   @RF00229                                         01S0229 00569000
*               MSGID='05K ';                                   01S0230 00570000
         MVC   MSGID(4,MSGPTR),@CC00658                         01S0230 00571000
*             ELSE                                              01S0231 00572000
*                                                               01S0231 00573000
*               /*****************************************************/ 00574000
*               /*                                                   */ 00575000
*               /* IF OPEN WAS UNSUCCESSFUL, SET THE FAILURE CODE TO */ 00576000
*               /* 02 AND SET PROPER MESSAGE ID                      */ 00577000
*               /*                                                   */ 00578000
*               /*****************************************************/ 00579000
*                                                               01S0231 00580000
*               IF OPENBIT='0'B THEN                            01S0231 00581000
         B     @RC00229                                         01S0231 00582000
@RF00229 TM    OPENBIT(R2),B'00010000'                          01S0231 00583000
         BNZ   @RF00231                                         01S0231 00584000
*                 DO;                                           01S0232 00585000
*                   FAILCODE='02'X;                             01S0233 00586000
         MVI   FAILCODE(R2),X'02'                               01S0233 00587000
*                   MSGID='05E ';                               01S0234 00588000
         MVC   MSGID(4,MSGPTR),@CC00659                         01S0234 00589000
*                 END;                                          01S0235 00590000
*                                                               01S0235 00591000
*             /*******************************************************/ 00592000
*             /*                                                     */ 00593000
*             /* OTHERWISE IF THE RECORD LENGTH WAS INVALID (NOT 80) */ 00594000
*             /* OR IF THE RECORD FORMAT WAS INVALID (NOT FIXED) SET */ 00595000
*             /* THE PROPER MESSAGE ID                               */ 00596000
*             /*                                                     */ 00597000
*             /*******************************************************/ 00598000
*                                                               01S0236 00599000
*               ELSE                                            01S0236 00600000
*                 IF LRECL^=80 THEN /* INVALID RECORD LENGTH         */ 00601000
         B     @RC00231                                         01S0236 00602000
@RF00231 CLC   LRECL(2,R2),@CH00060                             01S0236 00603000
         BE    @RF00236                                         01S0236 00604000
*                   MSGID='05F ';                               01S0237 00605000
         MVC   MSGID(4,MSGPTR),@CC00660                         01S0237 00606000
*                 ELSE              /* HAVEN'T IDENTIFIED ERROR YET  */ 00607000
*                   IF RECFMF^='1'B|RECFMV='1'B THEN/* INVALID RECFM */ 00608000
         B     @RC00236                                         01S0238 00609000
@RF00236 TM    RECFMV(R2),B'01000000'                           01S0238 00610000
         BNZ   @RT00238                                         01S0238 00611000
         TM    RECFMF(R2),B'10000000'                           01S0238 00612000
         BO    @RF00238                                         01S0238 00613000
@RT00238 DS    0H                                               01S0239 00614000
*                     MSGID='05G ';                             01S0239 00615000
*                                                               01S0239 00616000
         MVC   MSGID(4,MSGPTR),@CC00661                         01S0239 00617000
*             /*******************************************************/ 00618000
*             /*                                                     */ 00619000
*             /* OTHERWISE IT WAS A FIND ERROR                       */ 00620000
*             /*                                                     */ 00621000
*             /*******************************************************/ 00622000
*                                                               01S0240 00623000
*                   ELSE                                        01S0240 00624000
*                                                               01S0240 00625000
*                     /***********************************************/ 00626000
*                     /*                                             */ 00627000
*                     /* IF THE ERROR IS THAT THE MEMBER NAME WAS NOT*/ 00628000
*                     /* FOUND THEN THE VARIABLES MUST BE REVERSED   */ 00629000
*                     /* FOR THE MESSAGE                             */ 00630000
*                     /*                                             */ 00631000
*                     /***********************************************/ 00632000
*                                                               01S0240 00633000
*                     IF FINDCODE=4 THEN                        01S0240 00634000
         B     @RC00238                                         01S0240 00635000
@RF00238 CLC   FINDCODE(4),@CF00125                             01S0240 00636000
         BNE   @RF00240                                         01S0240 00637000
*                       DO;                                     01S0241 00638000
*                         MSGID='05H ';                         01S0242 00639000
         MVC   MSGID(4,MSGPTR),@CC00662                         01S0242 00640000
*                         GOTO REVVAR;/* NOW REVERSE INSERTS FOR        00641000
*                                      MESSAGE                       */ 00642000
         B     REVVAR                                           01S0243 00643000
*                       END;                                    01S0244 00644000
*                                                               01S0245 00645000
*             /*******************************************************/ 00646000
*             /*                                                     */ 00647000
*             /* OTHERWISE IF IT WAS A FIND I/O ERROR, SET UP PROPER */ 00648000
*             /* MSGID                                               */ 00649000
*             /*                                                     */ 00650000
*             /*******************************************************/ 00651000
*                                                               01S0245 00652000
*                     ELSE                                      01S0245 00653000
*                       IF FINDCODE='08'X THEN/* R.C. WAS FOR I/O       00654000
*                                      ERROR                         */ 00655000
@RF00240 CLC   FINDCODE(4),@CF00664                             01S0245 00656000
         BNE   @RF00245                                         01S0245 00657000
*                         MSGID='05J ';                         01S0246 00658000
*                                                               01S0246 00659000
         MVC   MSGID(4,MSGPTR),@CC00665                         01S0246 00660000
*             /*******************************************************/ 00661000
*             /*                                                     */ 00662000
*             /* OTHERWISE IT WAS A MEMBER NAME ON A SEQUENTIAL DATA */ 00663000
*             /* SET                                                 */ 00664000
*             /*                                                     */ 00665000
*             /*******************************************************/ 00666000
*                                                               01S0247 00667000
*                       ELSE                                    01S0247 00668000
*                         DO;                                   01S0247 00669000
         B     @RC00245                                         01S0247 00670000
@RF00245 DS    0H                                               01S0248 00671000
*                           MSGID='05L ';                       01S0248 00672000
         MVC   MSGID(4,MSGPTR),@CC00666                         01S0248 00673000
*REVVAR:                            /* CODE TO REVERSE INSERTS FOR      00674000
*                                      MESSAGE - ALSO USED FOR  01S0249 00675000
*                                      FINDCODE = 4                  */ 00676000
*                           VAR3=VAR1;                          01S0249 00677000
REVVAR   MVC   VAR3(3,MSGPTR),VAR1(MSGPTR)                      01S0249 00678000
*                           L3=L1;                              01S0250 00679000
         IC    @03,L1(,MSGPTR)                                  01S0250 00680000
         STC   @03,L3(,MSGPTR)                                  01S0250 00681000
*                           VAR1=VAR2;                          01S0251 00682000
         MVC   VAR1(3,MSGPTR),VAR2(MSGPTR)                      01S0251 00683000
*                           L1=L2;                              01S0252 00684000
         IC    @03,L2(,MSGPTR)                                  01S0252 00685000
         STC   @03,L1(,MSGPTR)                                  01S0252 00686000
*                           VAR2=VAR3;                          01S0253 00687000
         MVC   VAR2(3,MSGPTR),VAR3(MSGPTR)                      01S0253 00688000
*                           L2=L3;                              01S0254 00689000
         IC    @03,L3(,MSGPTR)                                  01S0254 00690000
         STC   @03,L2(,MSGPTR)                                  01S0254 00691000
*                           L3=0;                               01S0255 00692000
         MVI   L3(MSGPTR),X'00'                                 01S0255 00693000
*                         END;                                  01S0256 00694000
*           END;                    /* NOIOERR DO/END GROUP          */ 00695000
*                                                               01S0257 00696000
@RC00245 DS    0H                                               01S0257 00697000
@RC00238 DS    0H                                               01S0257 00698000
@RC00236 DS    0H                                               01S0257 00699000
@RC00231 DS    0H                                               01S0257 00700000
@RC00229 DS    0H                                               01S0258 00701000
*         /***********************************************************/ 00702000
*         /*                                                         */ 00703000
*         /* ISSUE ERROR MESSAGE AND QUIT                            */ 00704000
*         /*                                                         */ 00705000
*         /***********************************************************/ 00706000
*                                                               01S0258 00707000
*MSG:                                                           01S0258 00708000
*         HTDLMSW='0'B;             /* ENSURE BIT FOR DLM= KEYWORD ON   00709000
*                                      DD CARD IS OFF        @ZA16858*/ 00710000
@RF00227 DS    0H                                               01S0258 00711000
MSG      NI    HTDLMSW(HTPTR),B'01111111'                       01S0258 00712000
*         CARD='/*DEL';             /* FLUSH INTERNAL READER @ZA16858*/ 00713000
         MVI   CARD+5,C' '                                      01S0259 00714000
         MVC   CARD+6(74),CARD+5                                01S0259 00715000
         MVC   CARD(5),@CC00669                                 01S0259 00716000
*         PT=ADDR(ENDOF);           /* RETURN TO ISSUE EOF   @ZA16858*/ 00717000
         LA    @03,ENDOF                                        01S0260 00718000
         ST    @03,PT                                           01S0260 00719000
*         GOTO PUTCRD;              /* GO TO PUT CARD TO JES @ZA16858*/ 00720000
         B     PUTCRD                                           01S0261 00721000
*ENDOF:                                                         01S0262 00722000
*         CARD='/*EOF';             /* CLOSE INTERNAL READER @ZA16858*/ 00723000
ENDOF    MVI   CARD+5,C' '                                      01S0262 00724000
         MVC   CARD+6(74),CARD+5                                01S0262 00725000
         MVC   CARD(5),@CC00671                                 01S0262 00726000
*         PT=ADDR(MSG1);            /* RETURN TO ISSUE ERROR MESSAGE    00727000
*                                                            @ZA16858*/ 00728000
         LA    @03,MSG1                                         01S0263 00729000
         ST    @03,PT                                           01S0263 00730000
*PUTCRD:                                                        01S0264 00731000
*         STMTPT=ADDR(CARD);        /* POINT TO INPUT CARD@ZA16858   */ 00732000
PUTCRD   LA    @03,CARD                                         01S0264 00733000
         ST    @03,STMTPT(,CONLIST)                             01S0264 00734000
*         HTCODE=PUTCODE;           /* SET FOR PUT           @ZA16858*/ 00735000
         MVI   HTCODE(HTPTR),X'02'                              01S0265 00736000
*         CALL CALLWRMG;            /* PUT DEL CARD TO INTERNAL 01S0266 00737000
*                                      READER                @ZA16858*/ 00738000
         BAL   @14,CALLWRMG                                     01S0266 00739000
*MSG1:                                                          01S0267 00740000
*         QUIT='1'B;                /* INDICATE PROCESSING MUST TAKE    00741000
*                                      ERROR TERMINATION@ZA16858     */ 00742000
MSG1     OI    QUIT(HTPTR),B'10000000'                          01S0267 00743000
*         RFY                                                   01S0268 00744000
*           R1 RSTD;                                            01S0268 00745000
*         R1=MSGPTR;                                            01S0269 00746000
         LR    R1,MSGPTR                                        01S0269 00747000
*         CALL IKJEFF02;            /* CALL THE MESSAGE PROCESSING      00748000
*                                      ROUTINE                       */ 00749000
         L     @15,MSGRTN(,MSGPTR)                              01S0270 00750000
         BALR  @14,@15                                          01S0270 00751000
*         RFY                                                   01S0271 00752000
*           R1 UNRSTD;                                          01S0271 00753000
*       END;                        /* PUTMSG DO/END GROUP           */ 00754000
*                                                               01S0273 00755000
*     /***************************************************************/ 00756000
*     /*                                                             */ 00757000
*     /* CLOSE THIS INPUT DATA SET (IF END-OF-FILE OR ERROR) AND     */ 00758000
*     /* UPDATE TO NEXT DATA SET                                     */ 00759000
*     /*                                                             */ 00760000
*     /***************************************************************/ 00761000
*                                                               01S0273 00762000
*     IF FAILCODE^='02'X&FAILCODE^='01'X THEN/* IF THIS IS NOT AN       00763000
*                                      OPEN OR DATA SET ORGANIZATION    00764000
*                                      FAILURE                       */ 00765000
@RC00153 CLI   FAILCODE(R2),X'02'                               01S0273 00766000
         BE    @RF00273                                         01S0273 00767000
         CLI   FAILCODE(R2),X'01'                               01S0273 00768000
         BE    @RF00273                                         01S0273 00769000
*INPUTEOF:                          /* THIS LABEL IS IN DCB FOR EOF     00770000
*                                      (EODAD=) ON READ OF INPUT D.S.*/ 00771000
*       DO;                         /* CLOSE THE DATA SET            */ 00772000
INPUTEOF DS    0H                                               01S0275 00773000
*         GEN(CLOSE ((R2)),MF=(E,ROPE))                         01S0275 00774000
*         REFS(R2,ROPE);            /* GENERATED CLOSE MACRO         */ 00775000
         CLOSE ((R2)),MF=(E,ROPE)                                       00776000
*         CURRDD=NEXTDDEL;          /* POINT TO NEXT DD ELEMENT      */ 00777000
         L     CURRDD,NEXTDDEL(,CURRDD)                         01S0276 00778000
*       END;                                                    01S0277 00779000
*   END;                            /* ALLDS DO/END GROUP    @ZA16858*/ 00780000
*                                                               01S0278 00781000
@RF00273 DS    0H                                               01S0278 00782000
@DE00126 LTR   CURRDD,CURRDD                                    01S0278 00783000
         BZ    @DC00126                                         01S0278 00784000
         TM    QUIT(HTPTR),B'10000000'                          01S0278 00785000
         BZ    @DL00126                                         01S0278 00786000
@DC00126 DS    0H                                               01S0279 00787000
*   /*****************************************************************/ 00788000
*   /*                                                               */ 00789000
*   /* EOF ON DATA SET - GENERATE TWO NULL CARDS FOR EOJ TO SUBMIT   */ 00790000
*   /* JOB AND ISSUE SUBMIT MESSAGE.                         @ZA13899*/ 00791000
*   /*                                                               */ 00792000
*   /*****************************************************************/ 00793000
*                                                               01S0279 00794000
*   IF QUIT='0'B&FAILCODE='00'X THEN/* IF THERE WERE NO              */ 00795000
         TM    QUIT(HTPTR),B'10000000'                          01S0279 00796000
         BNZ   @RF00279                                         01S0279 00797000
         CLI   FAILCODE(R2),X'00'                               01S0279 00798000
         BNE   @RF00279                                         01S0279 00799000
*     DO;                           /* ERRORS                @ZA16858*/ 00800000
*       HTDLMSW='0'B;               /* ENSURE BIT FOR DLM= KEYWORD ON   00801000
*                                      DD CARD IS OFF,SINCE EOF IS      00802000
*                                      REACHED FOR ALL D.S.  @ZA16858*/ 00803000
         NI    HTDLMSW(HTPTR),B'01111111'                       01S0281 00804000
*       DO J=1 TO 2;                /* LOOP TO CREATE TWO    @ZA09100*/ 00805000
         LA    J,1                                              01S0282 00806000
@DL00282 DS    0H                                               01S0283 00807000
*         CARD='//';                /* NULL CARDS            @ZA09100*/ 00808000
         MVI   CARD+2,C' '                                      01S0283 00809000
         MVC   CARD+3(77),CARD+2                                01S0283 00810000
         MVC   CARD(2),@CC00677                                 01S0283 00811000
*         IF J=2 THEN               /* IF THIS IS THE LAST   @ZA09100   00812000
*                                      NULL DO NOT TAKE USER EXITS   */ 00813000
         C     J,@CF00283                                       01S0284 00814000
         BNE   @RF00284                                         01S0284 00815000
*           TAKEXITS='00'X;         /* (NEED A NULL CARD SO LAST JOB    00816000
*                                      GETS SUBMITTED, BUT NULL WON'T   00817000
*                                      BE PUT IN JOB STREAM)  @Y02993*/ 00818000
         MVI   TAKEXITS(HTPTR),X'00'                            01S0285 00819000
*         STMTPT=ADDR(CARD);        /* POINT TO INPUT CARD           */ 00820000
@RF00284 LA    @15,CARD                                         01S0286 00821000
         ST    @15,STMTPT(,CONLIST)                             01S0286 00822000
*         CALL FF05I06;             /* AND HAVE IT PROCESSED         */ 00823000
         BAL   @14,FF05I06                                      01S0287 00824000
*         IF QUIT='1'B|FAILCODE^='00'X THEN/* STOP LOOPING IF FOUND A   00825000
*                                      TERMINATING ERROR             */ 00826000
         TM    QUIT(HTPTR),B'10000000'                          01S0288 00827000
         BO    @RT00288                                         01S0288 00828000
         CLI   FAILCODE(R2),X'00'                               01S0288 00829000
         BE    @RF00288                                         01S0288 00830000
@RT00288 DS    0H                                               01S0289 00831000
*           J=2;                    /*                       @ZA09100*/ 00832000
         LA    J,2                                              01S0289 00833000
*       END;                                                    01S0290 00834000
@RF00288 AL    J,@CF00048                                       01S0290 00835000
         C     J,@CF00283                                       01S0290 00836000
         BNH   @DL00282                                         01S0290 00837000
*     END;                                                      01S0291 00838000
*                                                               01S0292 00839000
*   /*****************************************************************/ 00840000
*   /*                                                               */ 00841000
*   /* RETURN TO CALLER                                              */ 00842000
*   /*                                                               */ 00843000
*   /*****************************************************************/ 00844000
*                                                               01S0292 00845000
*   INREAD=OFF;                     /* EXIT FROM IKJEFF05            */ 00846000
@RF00279 NI    INREAD(HTPTR),B'01111111'                        01S0292 00847000
*END0506:                           /* USE THIS LABEL TO RETURN FROM    00848000
*                                      IKJEFF06 ALTERNATE ENTRY      */ 00849000
*   RETURN;                         /* QUIT SWITCH IS ON IF ERROR       00850000
*                                      FOUND                         */ 00851000
*                                                               01S0293 00852000
@EL00001 L     @13,4(,@13)                                      01S0293 00853000
@EF00001 L     @00,@SIZDATD                                     01S0293 00854000
         LR    @01,@11                                          01S0293 00855000
         FREEMAIN R,LV=(0),A=(1)                                        00856000
@ER00001 LM    @14,@12,12(@13)                                  01S0293 00857000
         BR    @14                                              01S0293 00858000
*   /*****************************************************************/ 00859000
*   /*                                                               */ 00860000
*   /* IKJEFF06 ALTERNATE ENTRY POINT = SUBMIT CONTROL ROUTINE       */ 00861000
*   /*                                                               */ 00862000
*   /*****************************************************************/ 00863000
*                                                               01S0294 00864000
*IKJEFF06:                                                      01S0294 00865000
*   ENTRY(PCONTAB);                 /* PARAMETER IS POINTER TO  01S0294 00866000
*                                      CONTROL TABLE                 */ 00867000
@EP00294 MVC   @PC00001+4(4),0(@01)                             01S0294 00868000
*   CONLIST=PCONTAB;                /* USE LOCAL POINTER TO SUBMIT      00869000
*                                      CONTROL TABLE FOR EFFICIENCY  */ 00870000
         L     @03,@PC00001+4                                   01S0295 00871000
         L     CONLIST,PCONTAB(,@03)                            01S0295 00872000
*   HTPTR=HISTPT;                   /* LOCAL POINTER TO HISTORY TABLE*/ 00873000
         L     HTPTR,HISTPT(,CONLIST)                           01S0296 00874000
*   CALL FF05I06;                   /* LOGIC IS IN AN INTERNAL PROC  */ 00875000
         BAL   @14,FF05I06                                      01S0297 00876000
*   GO TO END0506;                  /* USE IKJEFF05'S CODE TO RETURN */ 00877000
*                                                               01S0298 00878000
         B     END0506                                          01S0298 00879000
*   /*****************************************************************/ 00880000
*   /*                                                               */ 00881000
*   /* SYNAD ROUTINE - ISSUES SYNADAF MACRO AND ERROR MESSAGE        */ 00882000
*   /*                                                               */ 00883000
*   /*****************************************************************/ 00884000
*                                                               01S0299 00885000
*SYNADRTN:                          /* THIS LABEL IS IN DCB FOR SYNAD   00886000
*                                      EXIT ON READ OF INPUT D.S.    */ 00887000
*   RFY                                                         01S0299 00888000
*     R1 RSTD;                                                  01S0299 00889000
SYNADRTN DS    0H                                               01S0300 00890000
*   GEN(SYNADAF ACSMETH=BSAM)                                   01S0300 00891000
*   SETS(R1,SYNADMSG);              /* GENERATED SYNADAF MACRO       */ 00892000
         SYNADAF ACSMETH=BSAM                                           00893000
*   BADTXT=SYNADTXT;                /* MAKE COPY OF SYNADTXT         */ 00894000
         MVC   BADTXT(52),SYNADTXT(R1)                          01S0301 00895000
*   GEN(SYNADRLS)                                               01S0302 00896000
*   REFS(R1,SYNADMSG);              /* FREE SYNADMSG AREA (SYNADRLS) */ 00897000
         SYNADRLS                                                       00898000
*   RFY                                                         01S0303 00899000
*     R1 UNRSTD;                                                01S0303 00900000
*   FAILCODE='03'X;                                             01S0304 00901000
         MVI   FAILCODE(R2),X'03'                               01S0304 00902000
*   VAR1=ADDR(BADTXT);                                          01S0305 00903000
         LA    @03,BADTXT                                       01S0305 00904000
         STCM  @03,7,VAR1(MSGPTR)                               01S0305 00905000
*   L1=LENGTH(SYNADTXT);            /* GET LENGTH OF 'BADTXT'        */ 00906000
         MVI   L1(MSGPTR),X'34'                                 01S0306 00907000
*   VAR2=ADDR(DSNAME)+D8ADJUST;     /* SET MESSAGE VARIABLE POINTER 2   00908000
*                                      TO INCLUDE THE NAME OF THE       00909000
*                                      DATA SET IN THE MESSAGE       */ 00910000
         LA    @03,84                                           01S0307 00911000
         AL    @03,DAPB0PTR(,CURRDD)                            01S0307 00912000
         LA    @15,DSNAME(,@03)                                 01S0307 00913000
         SLR   @14,@14                                          01S0307 00914000
         IC    @14,D8ADJUST(,@03)                               01S0307 00915000
         ALR   @15,@14                                          01S0307 00916000
         STCM  @15,7,VAR2(MSGPTR)                               01S0307 00917000
*   L2=NAMELEN-D8ADJUST;                                        01S0308 00918000
         LCR   @14,@14                                          01S0308 00919000
         AH    @14,NAMELEN(,@03)                                01S0308 00920000
         STC   @14,L2(,MSGPTR)                                  01S0308 00921000
*   MSGID='05D ';                                               01S0309 00922000
         MVC   MSGID(4,MSGPTR),@CC00686                         01S0309 00923000
*   GO TO PUTMSG2;                  /* ISSUE THE ERROR MESSAGE       */ 00924000
         B     PUTMSG2                                          01S0310 00925000
*                                                               01S0311 00926000
*/********************************************************************/ 00927000
*/*                                                                  */ 00928000
*/*      MODULE NAME = FF05I06 (USED FOR IKJEFF06 ENTRY POINT)       */ 00929000
*/*                                                                  */ 00930000
*/*      DESCRIPTIVE NAME = INPUT CARD CONTROL ROUTINE               */ 00931000
*/*                                                                  */ 00932000
*/********************************************************************/ 00933000
*/*                                                                  */ 00934000
*/*      COPYRIGHT = NONE                                            */ 00935000
*/*                                                                  */ 00936000
*/*      STATUS      OS/VS2 RELEASE 02.0                             */ 00937000
*/*                  SUPPORT CODE=Y02064 TSO REDIRECTED SYSOUT       */ 00938000
*/*                                      (INTRDR)                    */ 00939000
*/*                                                                  */ 00940000
*/*      FUNCTION                                                    */ 00941000
*/*                . THE PROCESSING LOGIC IS DRIVEN BY  THE          */ 00942000
*/*                  CONTROL  ROUTINE.   THIS  IS USED AS A          */ 00943000
*/*                  SUBROUTINE BY THE READING  ROUTINE  TO          */ 00944000
*/*                  EXAMINE  THE  INPUT  AND  PREPARE  THE          */ 00945000
*/*                  OUTPUT, THAT IS,  TO  COPY  THE  INPUT          */ 00946000
*/*                  DATA  SET(S)  TO  A SINGLE OUTPUT DATA          */ 00947000
*/*                  SET AND TO ENQUEUE A DSB/JFCB  POINTER          */ 00948000
*/*                  TO IT.                                          */ 00949000
*/*                                                                  */ 00950000
*/*                . THE CONTROL ROUTINE CALLS A NUMBER  OF          */ 00951000
*/*                  SUBROUTINES    TO   PERFORM   SPECIFIC          */ 00952000
*/*                  FUNCTIONS.  SOME OF THESE MAY  REQUIRE          */ 00953000
*/*                  THAT  THE  JCL BE CHANGED AND POSSIBLY          */ 00954000
*/*                  EXPANDED.  FOR EXAMPLE, IF THE JOBNAME          */ 00955000
*/*                  EXACTLY MATCHES THE USERID,  THEN  THE          */ 00956000
*/*                  JOB CARD MUST BE CHANGED.  IF THERE IS          */ 00957000
*/*                  NO  JOB  CARD, THEN A DEFAULT ONE MUST          */ 00958000
*/*                  BE GENERATED AND INSERTED AHEAD OF THE          */ 00959000
*/*                  ORIGINAL FIRST CARD.   IN  THAT  CASE,          */ 00960000
*/*                  SEVERAL   CONTINUATION  CARDS  MAY  BE          */ 00961000
*/*                  REQUIRED  FOR  ALL  OF   THE   DEFAULT          */ 00962000
*/*                  PARAMETERS.     FOLLOWING   THAT,   OF          */ 00963000
*/*                  COURSE, THE  ORIGINAL  (NON-JOB)  CARD          */ 00964000
*/*                  MUST BE PROCESSED.                              */ 00965000
*/*                                                                  */ 00966000
*/*                . A 'PUSH  DOWN  STACK'  WITH  INSERTION          */ 00967000
*/*                  CAPABILITY  IS  NEEDED.   THIS TYPE OF          */ 00968000
*/*                  FACILITY  IS  ACHIEVED  BY  USING  THE          */ 00969000
*/*                  CONTROL   ROUTINE   IN   A   RECURSIVE          */ 00970000
*/*                  MANNER.  IF  A  SUBROUTINE  CHANGES  A          */ 00971000
*/*                  CARD  AND  NEEDS TO HAVE IT PROCESSED,          */ 00972000
*/*                  IT CALLS THE CONTROL  ROUTINE  IN  THE          */ 00973000
*/*                  SAME  WAY  THAT  THE  READING  ROUTINE          */ 00974000
*/*                  CALLS CONTROL.   THE  CONTROL  ROUTINE          */ 00975000
*/*                  ITSELF IS INDEPENDENT OF THE NUMBER OF          */ 00976000
*/*                  CONTINUATIONS  OR INSERTIONS WHICH MAY          */ 00977000
*/*                  BE MADE, AND  ANY  ONE  SUBROUTINE  IS          */ 00978000
*/*                  SIMILARLY  INDEPENDENT OF CHANGES MADE          */ 00979000
*/*                  BY ANY OTHER SUBROUTINE.                        */ 00980000
*/*                                                                  */ 00981000
*/*      ENTRY POINT                                                 */ 00982000
*/*               IKJEFF06 (ALTERNATE ENTRY IN IKJEFF05)             */ 00983000
*/*                                                                  */ 00984000
*/*      INPUT                                                       */ 00985000
*/*                . REGISTER 1 POINTS TO A POINTER TO THE SUBMIT    */ 00986000
*/*                              CONTROL TABLE POINTER               */ 00987000
*/*                                                                  */ 00988000
*/*      OUTPUT                                                      */ 00989000
*/*                 N/A                                              */ 00990000
*/*                                                                  */ 00991000
*/*      EXTERNAL REFERENCES                                         */ 00992000
*/*               IKJEFF07 SUBMIT IDENTIFY JCL ROUTINE               */ 00993000
*/*               IKJEFF08 SUBMIT GENERATE JOB CARD ROUTINE          */ 00994000
*/*               IKJEFF09 SUBMIT EXIT INTERFACE ROUTINE             */ 00995000
*/*               IKJEFF12 SUBMIT WRITER MANAGER ROUTINE             */ 00996000
*/*               IKJEFF13 SUBMIT PROMPT JOB CARD ROUTINE            */ 00997000
*/*                                                                  */ 00998000
*/*      EXITS, NORMAL                                               */ 00999000
*/*               RETURN TO CALLER (IKJEFF05,08,09,13)               */ 01000000
*/*                                                                  */ 01001000
*/*      EXITS,ERROR                                                 */ 01002000
*/*               RETURN TO CALLER (QUIT SWITCH ON)                  */ 01003000
*/*                                                                  */ 01004000
*/*      TABLE/WORK AREAS                                            */ 01005000
*/*               CONTROL TABLE = IKJEFFCT                    REF    */ 01006000
*/*               HISTORY TABLE = IKJEFFHT                    UPDATE */ 01007000
*/*                                                                  */ 01008000
*/*      MACROS                                                      */ 01009000
*/*               NONE                                               */ 01010000
*/*                                                                  */ 01011000
*/*      ATTRIBUTES                                                  */ 01012000
*/*               REENTRANT, REFRESHABLE, KEY 1(SCHEDULER),          */ 01013000
*/*               SUPERVISOR STATE                                   */ 01014000
*/*                                                                  */ 01015000
*/*      NOTES                                                       */ 01016000
*/*                CHARACTER CODE DEPENDENCY - EBCDIC CHARACTER SET  */ 01017000
*/*                USED IN ASSEMBLING, MODULE MUST BE REASSEMBLED IF */ 01018000
*/*                A DIFFERENT CHARACTER SET IS TO BE USED DURING    */ 01019000
*/*                EXECUTION.                                        */ 01020000
*/*         MESSAGES                                                 */ 01021000
*/*               NONE                                               */ 01022000
*/*                                                                  */ 01023000
*/*         PACKAGING AND SIZE INFORMATION ARE IN IKJEFF01'S         */ 01024000
*/*         PROLOGUE                                                 */ 01025000
*/*                                                                  */ 01026000
*/*         PATCH = PATCH06                                          */ 01027000
*/*                                                                  */ 01028000
*/*      CHANGE ACTIVITY = Y02064 (NO APARS)                         */ 01029000
*/*         PTM YM3630 IS FOR PERFORMANCE                            */ 01030000
*/*                                                                  */ 01031000
*/********************************************************************/ 01032000
*                                                               01S0311 01033000
*FF05I06:                                                       01S0311 01034000
*   PROC;                           /* SUBMIT CONTROL ROUTINE - 01S0311 01035000
*                                      ENTERED FROM IKJEFF06 ENTRY      01036000
*                                      POINT CODE, OR DIRECTLY FROM     01037000
*                                      IKJEFF05 MAIN PROCEDURE       */ 01038000
         B     @EL00001                                         01S0311 01039000
FF05I06  STM   @14,@04,@SA00002                                 01S0311 01040000
         STM   @06,@12,@SA00002+28                              01S0311 01041000
*/*A-000000-999999                                            @Y02064*/ 01042000
*                                                               01S0312 01043000
*DUMYLBL:                           /* SEPARATES TWO COMMENTS        */ 01044000
*/********************************************************************/ 01045000
*/*                                                                  */ 01046000
*/*  FF05I06 INTERNAL PROCEDURE = LOGIC TO PROCESS AN INPUT CARD     */ 01047000
*/*                                                                  */ 01048000
*/*  - ORIGINAL ENTRY IS FROM IKJEFF05 (AFTER IT READS A NEW CARD)   */ 01049000
*/*  - REENTERED FROM IKJEFF08 (TO PROCESS A GENERATED JOB CARD)     */ 01050000
*/*  - REENTERED FROM IKJEFF09 (IF INSTALLATION EXIT CHANGED OR      */ 01051000
*/*                             GENERATED A CARD)                    */ 01052000
*/*  - REENTERED FROM IKJEFF13 (IF CHANGES THE JOB CARD BECAUSE      */ 01053000
*/*                             THE JOBNAME WAS THE TSO USERID)      */ 01054000
*/*                                                                  */ 01055000
*/********************************************************************/ 01056000
*                                                               01S0312 01057000
*   INCONTRL=INCONTRL+1;            /* INDICATE IN IKJEFF06 ROUTINE  */ 01058000
DUMYLBL  LA    @03,1                                            01S0312 01059000
         SLR   @15,@15                                          01S0312 01060000
         IC    @15,INCONTRL(,HTPTR)                             01S0312 01061000
         ALR   @03,@15                                          01S0312 01062000
         STC   @03,INCONTRL(,HTPTR)                             01S0312 01063000
*   CALL CODECHK;                   /* CHECK FOR ZERO STATEMENT 01S0313 01064000
*                                      POINTER OR QUIT SWITCH ON        01065000
*                                      RIGHT AWAY                    */ 01066000
*                                                               01S0313 01067000
         BAL   @14,CODECHK                                      01S0313 01068000
*   /*****************************************************************/ 01069000
*   /*                                                               */ 01070000
*   /* CHECK FOR TYPE OF CARD (JCL OR DATA). THIS LOGIC IS COPIED    */ 01071000
*   /* FROM MODULE IKJEFF07 FOR EFFICIENCY IN PROCESSING DATA CARDS. */ 01072000
*   /*                                                               */ 01073000
*   /*****************************************************************/ 01074000
*                                                               01S0314 01075000
*   JCLSW=OFF;                      /* SWITCH USED DURING CHECKING   */ 01076000
         NI    JCLSW,B'01111111'                                01S0314 01077000
*   IF HTDLMSW=OFF|CCONEX=ON THEN   /* CHECK FOR DLM= NOT FOUND ON A    01078000
*                                      PRIOR DD * OR DD DATA CARD OR    01079000
*                                      CONTINUATION OF A // CARD     */ 01080000
         TM    HTDLMSW(HTPTR),B'10000000'                       01S0315 01081000
         BZ    @RT00315                                         01S0315 01082000
         TM    CCONEX(HTPTR),B'10000000'                        01S0315 01083000
         BNO   @RF00315                                         01S0315 01084000
@RT00315 DS    0H                                               01S0316 01085000
*     DO;                           /* NODLM DO/END GROUP            */ 01086000
*       IF CURRCARD(1:2)='//'|CURRCARD(1:2)='/*' THEN/* MAKE BASIC      01087000
*                                      TESTS TO DISTINGUISH BETWEEN     01088000
*                                      JCL AND NON-JCL STMTS (ALSO      01089000
*                                      TREAT SLASH-ASTERISK-NON BLANK   01090000
*                                      JOB ENTRY SUBSYSTEM CONTROL      01091000
*                                      CARDS AS JCL CARDS)           */ 01092000
         L     @03,STMTPT(,CONLIST)                             01S0317 01093000
         CLC   CURRCARD(2,@03),@CC00677                         01S0317 01094000
         BE    @RT00317                                         01S0317 01095000
         CLC   CURRCARD(2,@03),@CC00693                         01S0317 01096000
         BNE   @RF00317                                         01S0317 01097000
@RT00317 DS    0H                                               01S0318 01098000
*         JCLSW=ON;                 /* MUST PASS CARD TO IKJEFF07    */ 01099000
         OI    JCLSW,B'10000000'                                01S0318 01100000
*       ELSE                        /* ONE MORE CASE TO CHECK        */ 01101000
*         IF CCONEX=ON THEN         /* IF POSSIBLE ERROR CASE        */ 01102000
         B     @RC00317                                         01S0319 01103000
@RF00317 TM    CCONEX(HTPTR),B'10000000'                        01S0319 01104000
         BNO   @RF00319                                         01S0319 01105000
*           JCLSW=ON;               /* MUST PASS CARD TO IKJEFF07    */ 01106000
         OI    JCLSW,B'10000000'                                01S0320 01107000
*     END;                          /* NODLM DO/END GROUP            */ 01108000
*                                                               01S0322 01109000
*   /*****************************************************************/ 01110000
*   /*                                                               */ 01111000
*   /* DLM= DATA CARD (COULD BE //)                                  */ 01112000
*   /*                                                               */ 01113000
*   /*****************************************************************/ 01114000
*                                                               01S0322 01115000
*   ELSE                            /* KNOW HTDLMSW IS ON            */ 01116000
*     IF CURRCARD(1:2)=HTDLM|(CDDAST=ON&CURRCARD(1:2)='//') THEN/*      01117000
*                                      CHECK FOR DELIMITER CARD --      01118000
*                                      NOTE THAT // CAN ALSO BE DELIM   01119000
*                                      FOR // DD * DATA STREAM       */ 01120000
         B     @RC00315                                         01S0322 01121000
@RF00315 L     @03,STMTPT(,CONLIST)                             01S0322 01122000
         CLC   CURRCARD(2,@03),HTDLM(HTPTR)                     01S0322 01123000
         BE    @RT00322                                         01S0322 01124000
         TM    CDDAST(HTPTR),B'10000000'                        01S0322 01125000
         BNO   @RF00322                                         01S0322 01126000
         CLC   CURRCARD(2,@03),@CC00677                         01S0322 01127000
         BNE   @RF00322                                         01S0322 01128000
@RT00322 DS    0H                                               01S0323 01129000
*       JCLSW=ON;                                               01S0323 01130000
*                                                               01S0323 01131000
         OI    JCLSW,B'10000000'                                01S0323 01132000
*   /*****************************************************************/ 01133000
*   /*                                                               */ 01134000
*   /* PASS ANY NON-DATA CARD TO IKJEFF07 FOR SCANNING               */ 01135000
*   /*                                                               */ 01136000
*   /*****************************************************************/ 01137000
*                                                               01S0324 01138000
*   IF JCLSW=ON THEN                                            01S0324 01139000
@RF00322 DS    0H                                               01S0324 01140000
@RC00315 TM    JCLSW,B'10000000'                                01S0324 01141000
         BNO   @RF00324                                         01S0324 01142000
*     CALL IKJEFF07(HISTFLD,STMTPT,NEXTNAME);/* IKJEFF07 WILL UPDATE    01143000
*                                      HISTORY TABLE WITH INFO FOR      01144000
*                                      CURRENT CARD                  */ 01145000
*                                                               01S0325 01146000
         ST    HTPTR,@AL00001                                   01S0325 01147000
         LA    @03,STMTPT(,CONLIST)                             01S0325 01148000
         ST    @03,@AL00001+4                                   01S0325 01149000
         L     @03,JOBNAMPT(,CONLIST)                           01S0325 01150000
         LA    @03,NEXTNAME(,@03)                               01S0325 01151000
         ST    @03,@AL00001+8                                   01S0325 01152000
         L     @15,@CV00175                                     01S0325 01153000
         LA    @01,@AL00001                                     01S0325 01154000
         BALR  @14,@15                                          01S0325 01155000
*   /*****************************************************************/ 01156000
*   /*                                                               */ 01157000
*   /* UPDATE HISTORY TABLE IF DATA CARD                             */ 01158000
*   /*                                                               */ 01159000
*   /*****************************************************************/ 01160000
*                                                               01S0326 01161000
*   ELSE                                                        01S0326 01162000
*     DO;                                                       01S0326 01163000
         B     @RC00324                                         01S0326 01164000
@RF00324 DS    0H                                               01S0327 01165000
*       PRIORJCL=CURRJCL;           /* UPDATE CARD HISTORY TABLE     */ 01166000
         MVC   PRIORJCL(4,HTPTR),CURRJCL(HTPTR)                 01S0327 01167000
*       CURRJCL=CURRJCL&&CURRJCL;   /* ZERO OUT CURRENT CARD DATA IN    01168000
*                                      HISTORY TABLE                 */ 01169000
         XC    CURRJCL(4,HTPTR),CURRJCL(HTPTR)                  01S0328 01170000
*       CDATA=ON;                   /* INDICATE CURRENT CARD IS DATA */ 01171000
         OI    CDATA(HTPTR),B'01000000'                         01S0329 01172000
*       CDTYPE=PDTYPE;              /* PICK UP // DD * AND // DD DATA   01173000
*                                      SWITCHES FROM PRIOR CARD      */ 01174000
         MVC   CDTYPE(1,HTPTR),PDTYPE(HTPTR)                    01S0330 01175000
*       IF CDDAST=OFF&CDDDATA=OFF THEN/* THE SYSTEM WILL GENERATE A     01176000
*                                      // DD * CARD WHEN A DATA CARD    01177000
*                                      IS NOT PRECEDED BY A // DD *     01178000
*                                      OR // DD DATA CARD            */ 01179000
         TM    CDDAST(HTPTR),B'11000000'                        01S0331 01180000
         BNZ   @RF00331                                         01S0331 01181000
*         CDDAST=ON;                                            01S0332 01182000
         OI    CDDAST(HTPTR),B'10000000'                        01S0332 01183000
*     END;                                                      01S0333 01184000
@RF00331 DS    0H                                               01S0334 01185000
*                                                               01S0334 01186000
*   /*****************************************************************/ 01187000
*   /*                                                               */ 01188000
*   /* FLUSH THIS CARD IF LAST CARD WAS A NULL AND THIS ISN'T A JOB  */ 01189000
*   /* CARD                                                          */ 01190000
*   /*                                                               */ 01191000
*   /*****************************************************************/ 01192000
*                                                               01S0334 01193000
*   IF FLUSH='1'B&CJOB='0'B THEN    /* FORGET EVERYTHING EXCEPT JOBS    01194000
*                                      IF FLUSH IS ON (MEANS PRIOR      01195000
*                                      CARD WAS A NULL)              */ 01196000
@RC00324 TM    FLUSH(HTPTR),B'01000000'                         01S0334 01197000
         BNO   @RF00334                                         01S0334 01198000
         TM    CJOB(HTPTR),B'00010000'                          01S0334 01199000
         BZ    @RT00334                                         01S0334 01200000
*     GO TO FINISH;                 /* PREPARE TO GET NEXT CARD      */ 01201000
*                                                               01S0335 01202000
*   /*****************************************************************/ 01203000
*   /*                                                               */ 01204000
*   /* DATA CARD (PUT IT)                                            */ 01205000
*   /*                                                               */ 01206000
*   /*****************************************************************/ 01207000
*                                                               01S0336 01208000
*   IF FIRST='0'B&CDATA='1'B THEN                               01S0336 01209000
@RF00334 TM    FIRST(HTPTR),B'00100000'                         01S0336 01210000
         BNZ   @RF00336                                         01S0336 01211000
         TM    CDATA(HTPTR),B'01000000'                         01S0336 01212000
         BO    @RT00336                                         01S0336 01213000
*     GO TO PUTCARD;                /* IF THIS IS DATA, SUBMIT THE      01214000
*                                      CARD (UNLESS NO JOB CARD YET) */ 01215000
*                                                               01S0337 01216000
*   /*****************************************************************/ 01217000
*   /*                                                               */ 01218000
*   /* JOB CARD (CALL PROMPTJOB)                                     */ 01219000
*   /*                                                               */ 01220000
*   /*****************************************************************/ 01221000
*                                                               01S0338 01222000
*   IF CJOB='1'B&CVERBCOP='0'B THEN                             01S0338 01223000
@RF00336 TM    CJOB(HTPTR),B'00010000'                          01S0338 01224000
         BNO   @RF00338                                         01S0338 01225000
         TM    CVERBCOP(HTPTR),B'00001000'                      01S0338 01226000
         BNZ   @RF00338                                         01S0338 01227000
*     DO;                           /* CALL PROMPTJOB FOR ORIGINAL      01228000
*                                      (NOT CONTINUATIONS OF) JOB       01229000
*                                      CARDS                         */ 01230000
*       CALL IKJEFF13(MSGLISPT,STMTPT,USERID,CONTABPT,NEXTNAME,HISTFLD) 01231000
*           ;                       /* CHECKS FOR JOBNAME=USERID     */ 01232000
         LA    @03,MSGLISPT(,CONLIST)                           01S0340 01233000
         ST    @03,@AL00001                                     01S0340 01234000
         LA    @03,STMTPT(,CONLIST)                             01S0340 01235000
         ST    @03,@AL00001+4                                   01S0340 01236000
         L     @03,USERIDPT(,CONLIST)                           01S0340 01237000
         ST    @03,@AL00001+8                                   01S0340 01238000
         LA    @03,CONTABPT(,CONLIST)                           01S0340 01239000
         ST    @03,@AL00001+12                                  01S0340 01240000
         L     @03,JOBNAMPT(,CONLIST)                           01S0340 01241000
         LA    @03,NEXTNAME(,@03)                               01S0340 01242000
         ST    @03,@AL00001+16                                  01S0340 01243000
         ST    HTPTR,@AL00001+20                                01S0340 01244000
         L     @15,@CV00178                                     01S0340 01245000
         LA    @01,@AL00001                                     01S0340 01246000
         BALR  @14,@15                                          01S0340 01247000
*       CALL CODECHK;               /* EXIT AND CHECK FOR ERROR 01S0341 01248000
*                                      RETURN                        */ 01249000
         BAL   @14,CODECHK                                      01S0341 01250000
*     END;                                                      01S0342 01251000
*                                                               01S0343 01252000
*   /*****************************************************************/ 01253000
*   /*                                                               */ 01254000
*   /* NON-DATA CARD (CALL EXIT)                                     */ 01255000
*   /*                                                               */ 01256000
*   /*****************************************************************/ 01257000
*                                                               01S0343 01258000
*   IF INEXIT='0'B THEN                                         01S0343 01259000
@RF00338 TM    INEXIT(HTPTR),B'00100000'                        01S0343 01260000
         BNZ   @RF00343                                         01S0343 01261000
*     DO;                           /* CALL EXIT IF NOT ALREADY IN      01262000
*                                      EXIT -NOTE THE VERY FIRST TIME   01263000
*                                      06 IS ENTERED ONLY JOBX IS ON */ 01264000
*       IF CJOB='1'B&JOBX='1'B THEN /* IF HAVE JOB CARD AND EXIT        01265000
*                                      WANTS TO SEE IT               */ 01266000
         TM    CJOB(HTPTR),B'00010000'                          01S0345 01267000
         BNO   @RF00345                                         01S0345 01268000
         TM    JOBX(HTPTR),B'10000000'                          01S0345 01269000
         BO    @RT00345                                         01S0345 01270000
*         GO TO CALLEX;             /* CALL EXIT FOR JOB             */ 01271000
*       ELSE                        /* DIDN'T MATCH CARD TYPE YET    */ 01272000
*         IF CEXEC='1'B&EXECX='1'B THEN/* IF HAVE EXEC AND EXIT WANTS*/ 01273000
@RF00345 TM    CEXEC(HTPTR),B'00001000'                         01S0347 01274000
         BNO   @RF00347                                         01S0347 01275000
         TM    EXECX(HTPTR),B'01000000'                         01S0347 01276000
         BO    @RT00347                                         01S0347 01277000
*           GO TO CALLEX;           /* CALL EXIT FOR EXEC            */ 01278000
*         ELSE                      /* DIDN'T MATCH CARD TYPE YET    */ 01279000
*           IF CDD='1'B&DDX='1'B THEN/* IF HAVE DD AND EXIT WANTS    */ 01280000
@RF00347 TM    CDD(HTPTR),B'00000100'                           01S0349 01281000
         BNO   @RF00349                                         01S0349 01282000
         TM    DDX(HTPTR),B'00100000'                           01S0349 01283000
         BO    @RT00349                                         01S0349 01284000
*             GO TO CALLEX;         /* CALL EXIT FOR DD              */ 01285000
*           ELSE                    /* DIDN'T MATCH CARD TYPE YET    */ 01286000
*             IF CCOMMAND='1'B&CMDX='1'B THEN/* IF HAVE COMMAND CARD    01287000
*                                      ...                           */ 01288000
@RF00349 TM    CCOMMAND(HTPTR),B'00000010'                      01S0351 01289000
         BNO   @RF00351                                         01S0351 01290000
         TM    CMDX(HTPTR),B'00010000'                          01S0351 01291000
         BO    @RT00351                                         01S0351 01292000
*               GO TO CALLEX;       /* CALL EXIT FOR CMD             */ 01293000
*             ELSE                  /* DIDN'T MATCH CARD TYPE YET    */ 01294000
*               IF CNULL='1'B&NULLX='1'B THEN/* IF HAVE NULL CARD ...*/ 01295000
@RF00351 TM    CNULL(HTPTR),B'00100000'                         01S0353 01296000
         BNO   @RF00353                                         01S0353 01297000
         TM    NULLX(HTPTR),B'00001000'                         01S0353 01298000
         BO    @RT00353                                         01S0353 01299000
*                 GO TO CALLEX;     /* CALL EXIT FOR NULL            */ 01300000
*               ELSE                /* DIDN'T MATCH CARD TYPE YET    */ 01301000
*                 IF CJES='1'B&     /* IF SLASH-ASTERISK NONBLANK    */ 01302000
*                     JESX='1'B THEN/* AND EXIT WANTS TO SEE IT      */ 01303000
@RF00353 TM    CJES(HTPTR),B'10000000'                          01S0355 01304000
         BNO   @RF00355                                         01S0355 01305000
         TM    JESX(HTPTR),B'00000100'                          01S0355 01306000
         BO    @RT00355                                         01S0355 01307000
*                   GO TO CALLEX;   /* CALL EXIT FOR SUBSYS CTL CARD */ 01308000
*                 ELSE              /* DIDN'T MATCH CARD TYPE YET    */ 01309000
*                   IF CCOMMENT='1'B&/* IF COMMENT CARD (COULD BE       01310000
*                                      JES3                          */ 01311000
*                       COMNTX='1'B THEN/* CONTROL CARD) AND EXIT       01312000
*                                      WANTS                         */ 01313000
@RF00355 TM    CCOMMENT(HTPTR),B'00000001'                      01S0357 01314000
         BNO   @RF00357                                         01S0357 01315000
         TM    COMNTX(HTPTR),B'00000010'                        01S0357 01316000
         BO    @RT00357                                         01S0357 01317000
*                     GO TO CALLEX; /* CALL EXIT FOR COMMENT CARD    */ 01318000
*     END;                                                      01S0359 01319000
@RF00357 DS    0H                                               01S0360 01320000
*                                                               01S0360 01321000
*   /*****************************************************************/ 01322000
*   /*                                                               */ 01323000
*   /* SUBMIT LAST JOB                                               */ 01324000
*   /*                                                               */ 01325000
*   /*****************************************************************/ 01326000
*                                                               01S0360 01327000
*AFTEX:                                                         01S0360 01328000
*   IF FIRST='0'B THEN                                          01S0360 01329000
@RF00343 DS    0H                                               01S0360 01330000
AFTEX    TM    FIRST(HTPTR),B'00100000'                         01S0360 01331000
         BNZ   @RF00360                                         01S0360 01332000
*     DO;                           /* IF NOT FIRST, MAY NEED TO        01333000
*                                      SUBMIT LAST JOB IF THIS IS A     01334000
*                                      NULL OR A JOB CARD (WHICH IS     01335000
*                                      NOT PRECEDED BY A NULL)       */ 01336000
*       IF CNULL='1'B|(CJOB='1'B&CVERBCOP='0'B&FLUSH='0'B) THEN/* IF    01337000
*                                      AT END OF A JOB               */ 01338000
         TM    CNULL(HTPTR),B'00100000'                         01S0362 01339000
         BO    @RT00362                                         01S0362 01340000
         TM    CJOB(HTPTR),B'00010000'                          01S0362 01341000
         BNO   @RF00362                                         01S0362 01342000
         TM    CVERBCOP(HTPTR),B'00001000'                      01S0362 01343000
         BNZ   @RF00362                                         01S0362 01344000
         TM    FLUSH(HTPTR),B'01000000'                         01S0362 01345000
         BNZ   @RF00362                                         01S0362 01346000
@RT00362 DS    0H                                               01S0363 01347000
*         DO;                       /* DOSUBMIT DO/END GROUP         */ 01348000
*           HTCODE=EREQCODE;        /* IKJEFF12 WILL GET JOBID FROM     01349000
*                                      JOB ENTRY SUBSYSTEM, THEN        01350000
*                                      PRINT 'JOB SUBMITTED' MSG     */ 01351000
         MVI   HTCODE(HTPTR),X'03'                              01S0364 01352000
*           PT=ADDR(AFTSUBMT);                                  01S0365 01353000
         LA    @03,AFTSUBMT                                     01S0365 01354000
         ST    @03,PT                                           01S0365 01355000
*           GO TO CALLWRMG;         /* CALL WRITER-MANAGER (IKJEFF12)*/ 01356000
         B     CALLWRMG                                         01S0366 01357000
*         END;                      /* DOSUBMIT DO/END GROUP         */ 01358000
*     END;                                                      01S0368 01359000
@RF00362 DS    0H                                               01S0369 01360000
*AFTSUBMT:                          /* CAN BRANCH HERE INDIRECTLY    */ 01361000
*   IF CJOB='1'B&CVERBCOP='0'B THEN /* LOOK FOR LAST CONTINUATION OF    01362000
*                                      NEW JOB CARD                  */ 01363000
@RF00360 DS    0H                                               01S0369 01364000
AFTSUBMT TM    CJOB(HTPTR),B'00010000'                          01S0369 01365000
         BNO   @RF00369                                         01S0369 01366000
         TM    CVERBCOP(HTPTR),B'00001000'                      01S0369 01367000
         BNZ   @RF00369                                         01S0369 01368000
*     DO;                                                       01S0370 01369000
*       CURRNAME=NEXTNAME;          /* NOW NEW JOB HAS BEEN ACCEPTED    01370000
*                                      SO COPY THE JOB NAME JUST        01371000
*                                      IDENTIFIED TO THE JOBNAME        01372000
*                                      FIELD                         */ 01373000
         L     @03,JOBNAMPT(,CONLIST)                           01S0371 01374000
         MVC   CURRNAME(8,@03),NEXTNAME(@03)                    01S0371 01375000
*       FLUSH='0'B;                 /* SET FLUSH OFF                 */ 01376000
*       FIRST='0'B;                 /* SET FIRST SW OFF-HAVE FOUND      01377000
*                                      THE FIRST JOB CARD            */ 01378000
         NI    FLUSH(HTPTR),B'10011111'                         01S0373 01379000
*     END;                                                      01S0374 01380000
*                                                               01S0374 01381000
*   /*****************************************************************/ 01382000
*   /*                                                               */ 01383000
*   /* NULL CARD (FLUSH TO NEXT JOB)                                 */ 01384000
*   /*                                                               */ 01385000
*   /*****************************************************************/ 01386000
*                                                               01S0375 01387000
*   IF CNULL='1'B THEN                                          01S0375 01388000
@RF00369 TM    CNULL(HTPTR),B'00100000'                         01S0375 01389000
         BNO   @RF00375                                         01S0375 01390000
*     DO;                                                       01S0376 01391000
*       FLUSH='1'B;                 /* IF THIS IS A NULL, SET THE       01392000
*                                      FLUSH SW ON AND RETURN --        01393000
*                                      NOTICE THAT THE NULL CARD        01394000
*                                      ITSELF DOES NOT ACTUALLY 01S0377 01395000
*                                      APPEAR IN THE OUTPUT DATA SET */ 01396000
         OI    FLUSH(HTPTR),B'01000000'                         01S0377 01397000
*       GO TO FINISH;               /* PREPARE TO GET NEXT CARD      */ 01398000
         B     FINISH                                           01S0378 01399000
*     END;                                                      01S0379 01400000
*                                                               01S0380 01401000
*   /*****************************************************************/ 01402000
*   /*                                                               */ 01403000
*   /* GENERATE A JOB CARD IF NECESSARY                              */ 01404000
*   /*                                                               */ 01405000
*   /*****************************************************************/ 01406000
*                                                               01S0380 01407000
*   IF FIRST='1'B THEN                                          01S0380 01408000
@RF00375 TM    FIRST(HTPTR),B'00100000'                         01S0380 01409000
         BNO   @RF00380                                         01S0380 01410000
*     DO;                           /* IF FIRST IS STILL ON (AFTER      01411000
*                                      CHECKING FOR JOB) THEN THIS IS   01412000
*                                      NOT A JOB CARD SO WILL NEED TO   01413000
*                                      CALL THE GENJOB ROUTINE       */ 01414000
*       IF INGEN^=0&INEXIT='0'B THEN/* IF ALREADY IN GENJOB EXIT MUST   01415000
*                                      BE MODIFYING JOB CARDS -- IF     01416000
*                                      DELETING THEM, EXIT IS NO        01417000
*                                      LONGER ACTIVE AND SO WE BETTER   01418000
*                                      QUIT -- IF CHANGING THEM, EXIT   01419000
*                                      IS STILL ACTIVE AND WILL BE      01420000
*                                      BY-PASSED NEXT TIME AROUND,      01421000
*                                      LETTING THE GENERATED JOB CARD   01422000
*                                      GO THROUGH                    */ 01423000
         CLI   INGEN(HTPTR),0                                   01S0382 01424000
         BE    @RF00382                                         01S0382 01425000
         TM    INEXIT(HTPTR),B'00100000'                        01S0382 01426000
         BNZ   @RF00382                                         01S0382 01427000
*         DO;                                                   01S0383 01428000
*           QUIT='1'B;                                          01S0384 01429000
         OI    QUIT(HTPTR),B'10000000'                          01S0384 01430000
*           GO TO FINISH;           /* TAKE ERROR EXIT               */ 01431000
         B     FINISH                                           01S0385 01432000
*         END;                      /* IF THE FIRST CARD IS A NULL,     01433000
*                                      SKIP GENERATING A JOB CARD --    01434000
*                                      IT WOULD ONLY GET CUT OFF BY     01435000
*                                      THE NULL                      */ 01436000
*       CALL IKJEFF08(HISTFLD,STMTPT,USERID,CONTABPT,MSGLISPT);/*       01437000
*                                      CALL GENJOB AND RETURN - NO      01438000
*                                      NEED TO PROCESS FURTHER  01S0387 01439000
*                                      BECAUSE GENJOB HAS       01S0387 01440000
*                                      RE-PROCESSED THE ORIGINAL        01441000
*                                      NON-JOB CARD                  */ 01442000
@RF00382 ST    HTPTR,@AL00001                                   01S0387 01443000
         LA    @10,STMTPT(,CONLIST)                             01S0387 01444000
         ST    @10,@AL00001+4                                   01S0387 01445000
         L     @10,USERIDPT(,CONLIST)                           01S0387 01446000
         ST    @10,@AL00001+8                                   01S0387 01447000
         LA    @10,CONTABPT(,CONLIST)                           01S0387 01448000
         ST    @10,@AL00001+12                                  01S0387 01449000
         LA    @10,MSGLISPT(,CONLIST)                           01S0387 01450000
         ST    @10,@AL00001+16                                  01S0387 01451000
         L     @15,@CV00176                                     01S0387 01452000
         LA    @01,@AL00001                                     01S0387 01453000
         BALR  @14,@15                                          01S0387 01454000
*       GO TO FINISH;               /* DONE(CARD INDIRECTLY     01S0388 01455000
*                                      PROCESSED)                    */ 01456000
         B     FINISH                                           01S0388 01457000
*     END;                          /* OTHERWISE FALL THRU TO PUTCARD*/ 01458000
*                                                               01S0390 01459000
*   /*****************************************************************/ 01460000
*   /*                                                               */ 01461000
*   /* PUTCARD SUBROUTINE (PUTS CARD INTO INTERNAL READER)           */ 01462000
*   /*                                                               */ 01463000
*   /*****************************************************************/ 01464000
*                                                               01S0390 01465000
*PUTCARD:                                                       01S0390 01466000
*   HTCODE=PUTCODE;                 /* TELL WRMGR TO PASS THIS CARD     01467000
*                                      TO THE JOB ENTRY SUBSYSTEM    */ 01468000
@RF00380 DS    0H                                               01S0390 01469000
PUTCARD  MVI   HTCODE(HTPTR),X'02'                              01S0390 01470000
*   PT=ADDR(FINISH);                /* THEN 06 WILL BE DONE WITH CARD*/ 01471000
*                                                               01S0391 01472000
         LA    @03,FINISH                                       01S0391 01473000
         ST    @03,PT                                           01S0391 01474000
*   /*****************************************************************/ 01475000
*   /*                                                               */ 01476000
*   /* CALLWRMG SUBROUTINE (INTERFACE TO JOB ENTRY SUBSYSTEM)        */ 01477000
*   /*                                                               */ 01478000
*   /*****************************************************************/ 01479000
*                                                               01S0392 01480000
*CALLWRMG:                          /* PARAMETER TO IKJEFF12 SEGMENT    01481000
*                                      IS THE SUBMIT CONTROL TABLE -    01482000
*                                      SEE IKJEFF12 FOR ALL FIELDS      01483000
*                                      USED - 06 SETS UP HTCODE      */ 01484000
*                                                               02S0392 01485000
*/********************************************************************* 01486000
*                                                                     * 01487000
*   MODULE NAME = IKJEFF12                                            * 01488000
*                                                                     * 01489000
*   DESCRIPTIVE NAME = SUBMIT WRITER MANAGER ROUTINE                  * 01490000
*                                                                     * 01491000
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 01492000
*                                                               02S0392 01493000
*   COPYRIGHT = NONE                                            02S0392 01494000
*                                                               02S0392 01495000
*   STATUS                                                      02S0392 01496000
*      OS/VS2 RELEASE 02.0      (REWRITTEN FOR RELEASE 2)       02S0392 01497000
*                                                               02S0392 01498000
*       ***SUPPORT CODES***                                     02S0392 01499000
*       ***   Y02064  TSO REDIRECTED SYSOUT (INTRDR)            02S0392 01500000
*                                                               02S0392 01501000
*   FUNCTION = SUBMIT JCL RECORDS INTO THE SYSTEM DATA SET (INTRDR)     01502000
*              USED TO SPOOL SUBMITTED JCL                      02S0392 01503000
*                                                               02S0392 01504000
*   OPERATION =                                                 02S0392 01505000
*         IF INPUT CODE FOR PUT                                 02S0392 01506000
*            1)  ISSUE A VSAM PUT TO PASS THE INPUT JCL         02S0392 01507000
*                RECORD TO THE INTRDR DATA SET.                 02S0392 01508000
*                  (SEE NOTES ON SUBSYSTEM DATA INTERFACE.)     02S0392 01509000
*            2)  IF ERROR RETURN CODE FROM PUT,                 02S0392 01510000
*                CALL VSAMFAIL (IKJEFF19) TO ISSUE              02S0392 01511000
*                MESSAGE, THEN TURN QUIT SWITCH ON (INDICATES   02S0392 01512000
*                ERROR END TO SUBMIT PROCESSING).               02S0392 01513000
*                                                               02S0392 01514000
*         IF INPUT CODE FOR ENDREQ                              02S0392 01515000
*            1)  ISSUE A VSAM ENDREQ TO TELL THE JOB ENTRY      02S0392 01516000
*                SUBSYSTEM THAT ALL JCL RECORDS FOR THIS JOB    02S0392 01517000
*                HAVE BEEN 'PUT' INTO THE INTRDR.               02S0392 01518000
*                THE SUBSYSTEM WILL THEN ENTER THE JOB INTO     02S0392 01519000
*                BACKGROUND PROCESSING.                         02S0392 01520000
*            2)  IF ERROR RETURN CODE FROM ENDREQ, CALL         02S0392 01521000
*                VSAMFAIL (IKJEFF19), THEN TURN QUIT SWITCH ON. 02S0392 01522000
*            3)  IF NO ERROR, ISSUE 'JOB JOBNAME(JOBID) SUBMITTED'      01523000
*                MESSAGE.                                       02S0392 01524000
*                                                               02S0392 01525000
*         IF OTHER INPUT CODE ISSUE ERROR MESSAGE AND TURN      02S0392 01526000
*         QUIT SWITCH ON.                                       02S0392 01527000
*                                                               02S0392 01528000
*   NOTES                                                       02S0392 01529000
*      DEPENDENCIES=                                            02S0392 01530000
*         CHARACTER CODE DEPENDENCY = EBCDIC. REASSEMBLE IF     02S0392 01531000
*         ANOTHER CHARACTER SET IS NEEDED.                      02S0392 01532000
*                                                               02S0392 01533000
*      RESTRICTIONS = NA                                        02S0392 01534000
*                                                               02S0392 01535000
*      REGISTER CONVENTIONS = STANDARD PLS2                     02S0392 01536000
*                                                               02S0392 01537000
*      PACKAGING INFORMATION = IN LOAD MODULE IKJEFF04 IN SYS1.LINKLIB. 01538000
*          SEE COMMENTS AT END OF IKJEFF01 FOR MORE DETAILS.    02S0392 01539000
*                                                               02S0392 01540000
*      OTHER NOTES =                                            02S0392 01541000
*          THE SDI (SUBSYSTEM DATA INTERFACE) HANDLES OUTPUT TO THE     01542000
*          INTRDR DATA SET. DURING ALLOCATION AND OPEN THE NAME 02S0392 01543000
*          'INTRDR' IS RECOGNIZED TO BE A SUBSYSTEM SPOOLING DATA SET,  01544000
*          AND SPECIAL PROCESSING IS DONE.  DURING OPEN A POINTER       01545000
*          TO A SDI ROUTINE, RATHER THAN A VSAM I/O ROUTINE, IS 02S0392 01546000
*          PLACED IN THE INTRDR'S ACB.  SUBMITTED JCL WILL BE 'PUT'     01547000
*          INTO THE INTRDR (INTERNAL READER) THRU THE SDI INTERFACE.    01548000
*                                                               02S0392 01549000
*          THE INTRDR IS ALLOCATED AS A SYSOUT WRITER PROGRAM, SINCE    01550000
*          DYNAMIC ALLOCATION AUTOMATICALLY PASSES THE SUBSYSTEM ANY    01551000
*          SYSOUT DATA SETS TO ALLOCATE.  THE JOB ENTRY SUBSYSTEM       01552000
*          ASSIGNED TO THE TSO USER AT LOGON WILL GET CONTROL FOR       01553000
*          SUBMIT'S INTRDR REQUESTS.                            02S0392 01554000
*                                                               02S0392 01555000
*          THE SDI MUST HANDLE ALL ABENDS (213 OR B37 TYPE) DURING      01556000
*          EXECUTION OF THE OPEN, PUTS, ENDREQS, AND CLOSE OF THE       01557000
*          INTRDR D.S.  SUBMIT WILL PUT OUT MESSAGES FOR ERROR  02S0392 01558000
*          RETURN CODES.                                        02S0392 01559000
*                                                               02S0392 01560000
*          IKJEFF15 CREATES AND OPENS THE VSAM ACB FOR THE INTRDR       01561000
*          AND ALSO CREATES THE VSAM RPL USED IN THIS MODULE.   02S0392 01562000
*                                                               02S0392 01563000
*IRDRRPL  RPL   OPTCD=(ADR,SEQ,SYN,NUP),RECLEN=80               02S0392 01564000
*              ****************************************************     01565000
*              **   RPL IS USED FOR PUTS AND ENDREQS TO INTRDR   **     01566000
*              ****************************************************     01567000
*              - ADR = ADDRESSED DATA ACCESSING, NO INDEX REFERENCES    01568000
*              - SEQ = SEQUENTIAL PROCESSING (IMPLIES USE OF POINT      01569000
*                      FOR VSAM, BUT NOT THE VSAM-SDI INTERFACE)        01570000
*              - SYN = SYNCHRONOUS REQUEST.  RETURN CONTROL AFTER       01571000
*                      COMPLETION OF THIS REQUEST.              02S0392 01572000
*              - NUP = NONUPDATE MODE.  PUT RECORDS AT END OF D.S.      01573000
*              - RECLEN = 80.  LENGTH OF SUBMITTED JCL RECORD.  02S0392 01574000
*              - DYNAMICALLY SPECIFY THE ACB ADDRESS (IN IKJEFF15)      01575000
*                      AND ADDRESS OF JCL RECORD (IN IKJEFF12)  02S0392 01576000
*                                                               02S0392 01577000
*   PATCH LABEL = PATCH12. (INITIALIZED WITH 'ZAP''S)           02S0392 01578000
*                                                               02S0392 01579000
*   MODULE TYPE =                                               02S0392 01580000
*      PROCESSOR = PLS2                                         02S0392 01581000
*      MODULE SIZE = SEE IKJEFF01'S PROLOGUE                    02S0392 01582000
*      ATTRIBUTES = REFRESHABLE                                 02S0392 01583000
*                   KEY 1 (SCHEDULER)                           02S0392 01584000
*                   SUPERVISOR STATE                            02S0392 01585000
*                                                               02S0392 01586000
*                                                               02S0392 01587000
*   ENTRY POINT = IKJEFF12 - INTERNAL PROCEDURE IN IKJEFF05     02S0392 01588000
*      CALLERS = IKJEFF06 (SUBMIT CONTROL ROUTINE)              02S0392 01589000
*                         ENTRY CODE = PUTCODE OR               02S0392 01590000
*                         ENTRY CODE = EREQCODE                 02S0392 01591000
*      PURPOSE = SEE OPERATION                                  02S0392 01592000
*      LINKAGE = REGISTER 1 POINTS TO POINTER TO SUBMIT'S       02S0392 01593000
*                CONTROL TABLE                                  02S0392 01594000
*                  (WHICH INDIRECTLY POINTS TO THE ENTRY CODE)  02S0392 01595000
*                ***FIELDS USED****                             02S0392 01596000
*                   STMTPT                                      02S0392 01597000
*                   HISTPT    (HISTORY TABLE HAS PTR TO ENTRY CODE)     01598000
*                   JOBNAMPT                                    02S0392 01599000
*                   MSGLISPT                                    02S0392 01600000
*                   CTRPLPT                                     02S0392 01601000
*                                                               02S0392 01602000
*      INPUT = NO INPUT DATA OR BUFFERS                         02S0392 01603000
*      OUTPUT = JCL RECORD (OR END-JOB INDICATOR) PASSED TO     02S0392 01604000
*               SUBSYSTEM TO SPOOL TO INTRDR DATA SET           02S0392 01605000
*                                                               02S0392 01606000
*                                                               02S0392 01607000
*   EXIT-NORMAL = RETURN TO CALLER   (WITH QUIT SWITCH OFF)     02S0392 01608000
*                                                               02S0392 01609000
*   EXIT-ERROR = RETURN TO CALLER    (WITH QUIT SWITCH ON)      02S0392 01610000
*      CONDITIONS = BAD PUT OR ENDREQ MACRO, OR BAD ENTRY CODE  02S0392 01611000
*      RETURN CODES = NA                                        02S0392 01612000
*                                                               02S0392 01613000
*   EXTERNAL REFERENCES =                                       02S0392 01614000
*      ROUTINES =                                               02S0392 01615000
*         IKJEFF02 - MESSAGE ISSUER RTN                         02S0392 01616000
*         IKJEFF19 - VSAMFAIL MESSAGE ROUTINE                   02S0392 01617000
*      DATA AREAS = INTRDR 'DATA SET' USED FOR PUT'S AND ENDREQ'S       01618000
*      CONTROL BLOCKS =                                         02S0392 01619000
*         NAME         MAPPING MACRO      CREA/UPDATE/REFERENCE/DELETE  01620000
*         ****         *************      ****************************  01621000
*         RPL          IFGRPL             U                     02S0392 01622000
*         CONTAB       IKJEFFCT           R                     02S0392 01623000
*         GFPARMS      IKJEFFGF           C/D                   02S0392 01624000
*         HISTORY      IKJEFFHT           U                     02S0392 01625000
*         MSGTABLE     IKJEFFMT           U                     02S0392 01626000
*                                                               02S0392 01627000
*   TABLES = (NO TABLES, WORK AREA IS SUBPOOL 0)                02S0392 01628000
*                                                               02S0392 01629000
*   MACROS =                                                    02S0392 01630000
*      ENDREQ                                                   02S0392 01631000
*      LOAD                                                     02S0392 01632000
*      PUT                                                      02S0392 01633000
*                                                               02S0392 01634000
*      ENQUEUE RESOURCES = NA                                   02S0392 01635000
*                                                               02S0392 01636000
*   CHANGE ACTIVITY = Y02064 (NO APARS)                         02S0392 01637000
*      PTM YM3630 IS FOR PERFORMANCE.                           02S0392 01638000
*                                                               02S0392 01639000
*   MESSAGES =                                                  02S0392 01640000
*                                                               02S0392 01641000
*      (VSAMFAIL MESSAGES ISSUED BY IKJEFF19 FOR IKJEFF12)      02S0392 01642000
*                                                               02S0392 01643000
*      12B     JOB <JOBNAME(JOBID)> SUBMITTED                   02S0392 01644000
*                                                               02S0392 01645000
*      12C     JOB <JOBNAME> NOT SUBMITTED - INVALID ENTRY CODE 02S0392 01646000
*              FOR <IKJEFF12>                                   02S0392 01647000
*                                                               02S0392 01648000
*      12D     <COMMANDNAME> TERMINATED ON JOB <JOBNAME>        02S0392 01649000
*                                                               02S0392 01650000
*      ------------------------------------------               02S0392 01651000
*      SEE MESSAGE CSECT IKJEFF03 FOR MESSAGE IDS               02S0392 01652000
*      AND DESCRIPTIONS                                         02S0392 01653000
*                                                               02S0392 01654000
*      (VSAMFAIL MESSAGES ARE ISSUED BY IKJEFF19)               02S0392 01655000
*                                                               02S0392 01656000
*   ABEND CODES = NA                                            02S0392 01657000
*                                                               02S0392 01658000
**********************************************************************/ 01659000
*                                                               02S0392 01660000
*DUMMYLBL:                          /* SEPARATE FOLLOWING FROM  02S0392 01661000
*                                      PRECEDING COMMENT             */ 01662000
*/*A-000000-999999                                            @Y02064*/ 01663000
*                                                               02S0392 01664000
*DUMMYLB2:                          /* SEPARATE FOLLOWING FROM  02S0392 01665000
*                                      PRECEDING COMMENT             */ 01666000
*                                                               02S0392 01667000
*   /*****************************************************************/ 01668000
*   /*                                                               */ 01669000
*   /* INITIALIZATION FOR IKJEFF12 (INPUT FROM IKJEFF06 IS SUBMIT    */ 01670000
*   /* CONTROL TABLE, WHICH POINTS TO HISTORY TABLE WITH HTCODE ENTRY*/ 01671000
*   /* - DON'T USE PARMLIST PTR BECAUSE 12 IS A SEGMENT)             */ 01672000
*   /*                                                               */ 01673000
*   /*****************************************************************/ 01674000
*                                                               02S0392 01675000
*   INWRMGR=ON;                     /* SET BIT IN HISTORY TABLE 02S0392 01676000
*                                      SAYING IN IKJEFF12            */ 01677000
CALLWRMG DS    0H                                               02S0392 01678000
DUMMYLBL DS    0H                                               02S0392 01679000
DUMMYLB2 OI    INWRMGR(HTPTR),B'00010000'                       02S0392 01680000
*   RFY                                                         02S0393 01681000
*     R2 RSTD;                                                  02S0393 01682000
*   R2=CTRPLPT;                     /* GET RPL ADDR FOR PUT OR ENDREQ*/ 01683000
         L     R2,CTRPLPT(,CONLIST)                             02S0394 01684000
*   RFY                                                         02S0395 01685000
*     IFGRPL BASED(R2);             /* USE MAPPING MACRO FOR    02S0395 01686000
*                                      REENTRANT RPL                 */ 01687000
*                                                               02S0395 01688000
*   /*****************************************************************/ 01689000
*   /*                                                               */ 01690000
*   /* CHECK FOR PUT ENTRY CODE                                      */ 01691000
*   /*                                                               */ 01692000
*   /*****************************************************************/ 01693000
*                                                               02S0396 01694000
*   IF HTCODE=PUTCODE THEN          /* NEED TO PUT JCL/DATA STATEMENT   01695000
*                                      INTO INTRDR DATA SET (PASS IT    01696000
*                                      TO THE JOB ENTRY SUBSYSTEM -     01697000
*                                      SEE NOTES IN PROLOGUE)        */ 01698000
         CLI   HTCODE(HTPTR),2                                  02S0396 01699000
         BNE   @RF00396                                         02S0396 01700000
*     DO;                           /* DOPUT DO/END GROUP            */ 01701000
*       RPLAREA=STMTPT;             /* PUT THE JCL STATEMENT'S  02S0398 01702000
*                                      ADDRESS IN THE RPL            */ 01703000
         L     @03,STMTPT(,CONLIST)                             02S0398 01704000
         ST    @03,RPLAREA(,R2)                                 02S0398 01705000
*       GEN(PUT  RPL=(R2))                                      02S0399 01706000
*       REFS(R2);                   /* PUT JCL RECORD INTO INTRDR    */ 01707000
         PUT  RPL=(R2)                                                  01708000
*       RFY                                                     02S0400 01709000
*         R15 RSTD;                                             02S0400 01710000
*                                                               02S0400 01711000
*       /*************************************************************/ 01712000
*       /*                                                           */ 01713000
*       /* ERROR IF PUT FAILED                                       */ 01714000
*       /*                                                           */ 01715000
*       /*************************************************************/ 01716000
*                                                               02S0401 01717000
*       IF R15^=PUTRCOK THEN                                    02S0401 01718000
         LTR   R15,R15                                          02S0401 01719000
         BZ    @RF00401                                         02S0401 01720000
*         DO;                       /* ISSUE PUT ERROR MESSAGE       */ 01721000
*           MSGPTR=MSGLISPT;        /* PTR TO SUBMIT'S MESSAGE TABLE    01722000
*                                      (USE LOCAL PTR FOR EFFICIENCY)*/ 01723000
         L     MSGPTR,MSGLISPT(,CONLIST)                        02S0403 01724000
*           GFPARMS=GFPARMS&&GFPARMS;/* ZERO OUT VSAMFAIL PARAMETER     01725000
*                                      LIST (GENERAL FAIL LIST)      */ 01726000
         XC    GFPARMS(44),GFPARMS                              02S0404 01727000
*           GFCALLID=GFPUT;         /* INDICATE A PUT MACRO FAILED   */ 01728000
         MVC   GFCALLID(2),@CH00055                             02S0405 01729000
*           CALL RPLERMSG;          /* ISSUE THE ERROR MESSAGE       */ 01730000
         BAL   @14,RPLERMSG                                     02S0406 01731000
*           RFY                                                 02S0407 01732000
*             R15 UNRSTD;                                       02S0407 01733000
*         END;                                                  02S0408 01734000
*     END;                          /* DOPUT DO/END GROUP            */ 01735000
*   ELSE                            /* HAVE EITHER ENDREQ OR INVALID    01736000
*                                      CODE                          */ 01737000
*     DO;                           /* DONOTPUT DO/END GROUP         */ 01738000
         B     @RC00396                                         02S0410 01739000
@RF00396 DS    0H                                               02S0411 01740000
*       MSGPTR=MSGLISPT;            /* PTR TO SUBMIT'S MESSAGE TABLE    01741000
*                                      (USE LOCAL PTR FOR EFFICIENCY)*/ 01742000
*                                                               02S0411 01743000
         L     MSGPTR,MSGLISPT(,CONLIST)                        02S0411 01744000
*       /*************************************************************/ 01745000
*       /*                                                           */ 01746000
*       /* ENDREQ REQUEST                                            */ 01747000
*       /*                                                           */ 01748000
*       /*************************************************************/ 01749000
*                                                               02S0412 01750000
*       IF HTCODE=EREQCODE THEN                                 02S0412 01751000
         CLI   HTCODE(HTPTR),3                                  02S0412 01752000
         BNE   @RF00412                                         02S0412 01753000
*         DO;                       /* DOENDREQ DO/END GROUP         */ 01754000
*           GEN(ENDREQ RPL=(R2))                                02S0414 01755000
*           REFS(R2);               /* END OF SUBMITTED JOB          */ 01756000
         ENDREQ RPL=(R2)                                                01757000
*           RFY                                                 02S0415 01758000
*             R15 RSTD;                                         02S0415 01759000
*                                                               02S0415 01760000
*           /*********************************************************/ 01761000
*           /*                                                       */ 01762000
*           /* ERROR IF ENDREQ FAILED                                */ 01763000
*           /*                                                       */ 01764000
*           /*********************************************************/ 01765000
*                                                               02S0416 01766000
*           IF R15^=EREQRCOK THEN                               02S0416 01767000
         LTR   R15,R15                                          02S0416 01768000
         BZ    @RF00416                                         02S0416 01769000
*             DO;                                               02S0417 01770000
*               GFPARMS=GFPARMS&&GFPARMS;/* ZERO OUT VSAMFAIL   02S0418 01771000
*                                      PARAMETER LIST (GENERAL FAIL     01772000
*                                      LIST)                         */ 01773000
         XC    GFPARMS(44),GFPARMS                              02S0418 01774000
*               GFCALLID=GFENDREQ;  /* INDICATE ENDREQ MACRO FAILED  */ 01775000
         MVC   GFCALLID(2),@CH00160                             02S0419 01776000
*               CALL RPLERMSG;      /* ISSUE THE ERROR MESSAGE       */ 01777000
         BAL   @14,RPLERMSG                                     02S0420 01778000
*               RFY                                             02S0421 01779000
*                 R15 UNRSTD;                                   02S0421 01780000
*             END;                                              02S0422 01781000
*                                                               02S0422 01782000
*           /*********************************************************/ 01783000
*           /*                                                       */ 01784000
*           /* ISSUE 'JOB JOBNAME(JOBID) SUBMITTED' MESSAGE          */ 01785000
*           /*                                                       */ 01786000
*           /*********************************************************/ 01787000
*                                                               02S0423 01788000
*           ELSE                                                02S0423 01789000
*             DO;                                               02S0423 01790000
         B     @RC00416                                         02S0423 01791000
@RF00416 DS    0H                                               02S0424 01792000
*               JOBNAREA=JOBNAME;   /* JOBNAME IS INPUT PARAMETER    */ 01793000
         L     @03,JOBNAMPT(,CONLIST)                           02S0424 01794000
         MVC   JOBNAREA(8),JOBNAME(@03)                         02S0424 01795000
*               JOBLPREN='(';                                   02S0425 01796000
         MVI   JOBLPREN,C'('                                    02S0425 01797000
*               JOBIAREA=RPLRBAR;   /* JOBID IS RETURNED FROM ENDREQ    01798000
*                                      (JOBID IS SUBSYSTEM'S JOB        01799000
*                                      IDENTIFIER)                   */ 01800000
         MVC   JOBIAREA(8),RPLRBAR(R2)                          02S0426 01801000
*               JOBRPREN=')';                                   02S0427 01802000
         MVI   JOBRPREN,C')'                                    02S0427 01803000
*               L1=LENGTH(JOBINSRT);/* MESSAGE INSERT IS JOBNAME        01804000
*                                      (JOBID )                      */ 01805000
         MVI   L1(MSGPTR),X'12'                                 02S0428 01806000
*               VAR1=ADDR(JOBINSRT);                            02S0429 01807000
         LA    @03,JOBINSRT                                     02S0429 01808000
         STCM  @03,7,VAR1(MSGPTR)                               02S0429 01809000
*               MTJOBISW=ON;        /* TELL IKJEFF02 TO COMPRESS        01810000
*                                      BLANKS OUT OF JOBNAME(JOBID) -   01811000
*                                      NEEDN'T TURN SWITCH OFF       */ 01812000
         OI    MTJOBISW(MSGPTR),B'00000100'                     02S0430 01813000
*               MSGID='12B';        /* ID FOR JOB SUBMITTED MESSAGE  */ 01814000
         MVI   MSGID+3(MSGPTR),C' '                             02S0431 01815000
         MVC   MSGID(3,MSGPTR),@CC00709                         02S0431 01816000
*               RFY                                             02S0432 01817000
*                 R1 RSTD;                                      02S0432 01818000
*               R1=ADDR(MSGTABLE);  /* POINTER TO IKJEFF02'S PARMLIST*/ 01819000
         LR    R1,MSGPTR                                        02S0433 01820000
*               CALL IKJEFF02;      /* ISSUE THE JOB SUBMITTED MSG   */ 01821000
         L     @15,MSGRTN(,MSGPTR)                              02S0434 01822000
         BALR  @14,@15                                          02S0434 01823000
*               RFY                                             02S0435 01824000
*                 R1 UNRSTD;                                    02S0435 01825000
*               RFY                                             02S0436 01826000
*                 R15 RSTD;                                     02S0436 01827000
*               IF R15^=MSGRCOK THEN/* END SUBMIT IF COULDN'T ISSUE     01828000
*                                      PUTLINE TO USER               */ 01829000
         LTR   R15,R15                                          02S0437 01830000
         BZ    @RF00437                                         02S0437 01831000
*                 QUIT=ON;                                      02S0438 01832000
         OI    QUIT(HTPTR),B'10000000'                          02S0438 01833000
*               RFY                                             02S0439 01834000
*                 R15 UNRSTD;                                   02S0439 01835000
@RF00437 DS    0H                                               02S0440 01836000
*             END;                                              02S0440 01837000
*         END;                      /* DOENDREQ DO/END GROUP         */ 01838000
*                                                               02S0441 01839000
*       /*************************************************************/ 01840000
*       /*                                                           */ 01841000
*       /* ERROR IF HTCODE ^= PUTCODE OR EREQCODE                    */ 01842000
*       /*                                                           */ 01843000
*       /*************************************************************/ 01844000
*                                                               02S0442 01845000
*       ELSE                                                    02S0442 01846000
*         DO;                                                   02S0442 01847000
         B     @RC00412                                         02S0442 01848000
@RF00412 DS    0H                                               02S0443 01849000
*           MSGID='12C';            /* MSG FOR INVALID ENTRY CODE    */ 01850000
         MVI   MSGID+3(MSGPTR),C' '                             02S0443 01851000
         MVC   MSGID(3,MSGPTR),@CC00710                         02S0443 01852000
*           L1=LENGTH(JOBNAME);     /* INSERT THE CURRENT JOBNAME    */ 01853000
         MVI   L1(MSGPTR),X'08'                                 02S0444 01854000
*           VAR1=ADDR(JOBNAME);                                 02S0445 01855000
         MVC   VAR1(3,MSGPTR),JOBNAMPT+1(CONLIST)               02S0445 01856000
*           L2=LENGTH(INSRTMOD);    /* INSERT MODULE NAME = IKJEFF12 */ 01857000
         MVI   L2(MSGPTR),X'08'                                 02S0446 01858000
*           VAR2=ADDR(INSRTMOD);                                02S0447 01859000
         LA    @03,INSRTMOD                                     02S0447 01860000
         STCM  @03,7,VAR2(MSGPTR)                               02S0447 01861000
*           RFY                                                 02S0448 01862000
*             R1 RSTD;                                          02S0448 01863000
*           R1=ADDR(MSGTABLE);      /* PTR TO IKJEFF02'S PARAM LIST  */ 01864000
         LR    R1,MSGPTR                                        02S0449 01865000
*           CALL IKJEFF02;          /* ISSUE THE ERROR MESSAGE       */ 01866000
         L     @15,MSGRTN(,MSGPTR)                              02S0450 01867000
         BALR  @14,@15                                          02S0450 01868000
*           RFY                                                 02S0451 01869000
*             R1 UNRSTD;                                        02S0451 01870000
*           QUIT=ON;                /* INDICATE SUBMIT FAILED        */ 01871000
         OI    QUIT(HTPTR),B'10000000'                          02S0452 01872000
*         END;                                                  02S0453 01873000
*     END;                          /* DONOTPUT DO/END GROUP         */ 01874000
@RC00412 DS    0H                                               02S0455 01875000
*   INWRMGR=OFF;                    /* INDICATE NOT IN IKJEFF12      */ 01876000
@RC00396 NI    INWRMGR(HTPTR),B'11101111'                       02S0455 01877000
*   RFY                                                         02S0456 01878000
*     R2 UNRSTD;                                                02S0456 01879000
*   CALL CODECHK;                   /* CHECK FOR ERROR RETURN        */ 01880000
         BAL   @14,CODECHK                                      01S0457 01881000
*   GO TO INDIRECT;                 /* RETURN TO CALLER OF THIS 01S0458 01882000
*                                                             SEGMENT*/ 01883000
*                                                               01S0458 01884000
         L     @01,PT                                           01S0458 01885000
         BR    @01                                              01S0458 01886000
*   /*****************************************************************/ 01887000
*   /*                                                               */ 01888000
*   /* CALLEX SUBROUTINE (CALLS INSTALLATION EXIT INTERFACE)         */ 01889000
*   /*                                                               */ 01890000
*   /*****************************************************************/ 01891000
*                                                               01S0459 01892000
*CALLEX:                            /* CALL EXIT INTERFACE           */ 01893000
*   CALL IKJEFF09(STMTPT,USERID,HISTFLD,MSGLISPT,CONTABPT,EXWORD,EXITAD 01894000
*       ,CTCMDNM);                  /* AFTER EXIT DO CODE CHECK      */ 01895000
CALLEX   LA    @15,STMTPT(,CONLIST)                             01S0459 01896000
         ST    @15,@AL00001                                     01S0459 01897000
         L     @01,USERIDPT(,CONLIST)                           01S0459 01898000
         ST    @01,@AL00001+4                                   01S0459 01899000
         ST    HTPTR,@AL00001+8                                 01S0459 01900000
         LA    @15,MSGLISPT(,CONLIST)                           01S0459 01901000
         ST    @15,@AL00001+12                                  01S0459 01902000
         LA    @15,CONTABPT(,CONLIST)                           01S0459 01903000
         ST    @15,@AL00001+16                                  01S0459 01904000
         LA    @15,EXWORD(,CONLIST)                             01S0459 01905000
         ST    @15,@AL00001+20                                  01S0459 01906000
         LA    @15,EXITAD(,CONLIST)                             01S0459 01907000
         ST    @15,@AL00001+24                                  01S0459 01908000
         LA    @15,CTCMDNM(,CONLIST)                            01S0459 01909000
         ST    @15,@AL00001+28                                  01S0459 01910000
         L     @15,@CV00177                                     01S0459 01911000
         LA    @01,@AL00001                                     01S0459 01912000
         BALR  @14,@15                                          01S0459 01913000
*   CALL CODECHK;                   /* CHECK FOR ERROR RETURN        */ 01914000
         BAL   @14,CODECHK                                      01S0460 01915000
*   GO TO AFTEX;                    /* BRANCH BACK TO MAIN LOGIC     */ 01916000
*                                                               01S0461 01917000
         B     AFTEX                                            01S0461 01918000
*   /*****************************************************************/ 01919000
*   /*                                                               */ 01920000
*   /* FINISH SUBROUTINE (CLEANS UP AND RETURNS TO CALLER)           */ 01921000
*   /*                                                               */ 01922000
*   /*****************************************************************/ 01923000
*                                                               01S0462 01924000
*FINISH:                                                        01S0462 01925000
*   STMTPT=0;                       /* ZERO THE STATEMENT POINTER       01926000
*                                      WHEN DONE PROCESSING THE CARD */ 01927000
FINISH   SLR   @10,@10                                          01S0462 01928000
         ST    @10,STMTPT(,CONLIST)                             01S0462 01929000
*   INCONTRL=INCONTRL-1;            /* DECREMENT CONTROL COUNTER AND    01930000
*                                      RETURN TO CALLER              */ 01931000
         SLR   @10,@10                                          01S0463 01932000
         IC    @10,INCONTRL(,HTPTR)                             01S0463 01933000
         BCTR  @10,0                                            01S0463 01934000
         STC   @10,INCONTRL(,HTPTR)                             01S0463 01935000
*                                                               01S0464 01936000
*   /*****************************************************************/ 01937000
*   /*                                                               */ 01938000
*   /* CODECHK INTERNAL PROCEDURE - CHECKS WHETHER DONE WITH         */ 01939000
*   /* IKJEFF06'S PROCESSING (WOULD NEED TO CHECK FOR POSTBIT ON IN  */ 01940000
*   /* COMMECB IF HAD A STAX ROUTINE - AND IF ON, TURN ON QUIT SWITCH*/ 01941000
*   /* AND RETURN TO FINISH)                                         */ 01942000
*   /*                                                               */ 01943000
*   /*****************************************************************/ 01944000
*                                                               01S0464 01945000
*CODECHK:                                                       01S0464 01946000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                          01S0464 01947000
         B     @PB00003                                         01S0464 01948000
CODECHK  DS    0H                                               01S0465 01949000
*   IF QUIT='1'B THEN               /* CHECK FOR ERROR TERMINATION   */ 01950000
         TM    QUIT(HTPTR),B'10000000'                          01S0465 01951000
         BNO   @RF00465                                         01S0465 01952000
*     RETURN TO FINISH;             /* COMPLETELY DONE - ERROR       */ 01953000
         LA    @14,FINISH                                       01S0466 01954000
@EL00003 DS    0H                                               01S0466 01955000
@EF00003 DS    0H                                               01S0466 01956000
@ER00003 BR    @14                                              01S0466 01957000
*   IF STMTPT=0 THEN                /* CHECK CARD PROCESSED          */ 01958000
@RF00465 L     @15,STMTPT(,CONLIST)                             01S0467 01959000
         LTR   @15,@15                                          01S0467 01960000
         BNZ   @RF00467                                         01S0467 01961000
*     RETURN TO FINISH;             /* DONE W/ THIS JCL OR DATA CARD */ 01962000
         LA    @14,FINISH                                       01S0468 01963000
         BR    @14                                              01S0468 01964000
*   END CODECHK;                                                01S0469 01965000
         B     @EL00003                                         01S0469 01966000
*   END FF05I06;                                                01S0470 01967000
@EL00002 DS    0H                                               01S0470 01968000
@EF00002 DS    0H                                               01S0470 01969000
@ER00002 LM    @14,@04,@SA00002                                 01S0470 01970000
         LM    @06,@12,@SA00002+28                              01S0470 01971000
         BR    @14                                              01S0470 01972000
*                                                               01S0471 01973000
*/********************************************************************/ 01974000
*/*                                                                  */ 01975000
*/* RPLERMSG INTERNAL PROCEDURE                                      */ 01976000
*/*                                                                  */ 01977000
*/*  - CALLS IKJEFF19 TO ISSUE VSAMFAIL MESSAGE FOR PUT OR ENDREQ    */ 01978000
*/*        MACRO                                                     */ 01979000
*/*       (CODE CALLING RPLERMSG MUST ZERO GFPARMS AND SET GFCALLID) */ 01980000
*/*                                                                  */ 01981000
*/*  - THEN ISSUES 'SUBMIT TERMINATED' ERROR MESSAGE                 */ 01982000
*/*                                                                  */ 01983000
*/********************************************************************/ 01984000
*                                                               01S0471 01985000
*RPLERMSG:                                                      01S0471 01986000
*   PROC;                                                       01S0471 01987000
RPLERMSG STM   @14,@12,@SA00004                                 01S0471 01988000
*   RFY                                                         01S0472 01989000
*    (R2,                                                       01S0472 01990000
*     R15) RSTD;                                                01S0472 01991000
*   GFRCODE=R15;                    /* SAVE MACRO RETURN CODE        */ 01992000
         ST    R15,GFRCODE                                      01S0473 01993000
*   RFY                                                         01S0474 01994000
*     R15 UNRSTD;                                               01S0474 01995000
*   GFCBPTR=ADDR(IFGRPL);           /* RPL IS FAILING VSAM C.B.      */ 01996000
         ST    R2,GFCBPTR                                       01S0475 01997000
*   GFKEYN08=ON;                    /* TELL IKJEFF19 TO DO MODESET   */ 01998000
         OI    GFKEYN08,B'10000000'                             01S0476 01999000
*   GF02PTR=ADDR(IKJEFF02);         /* HAVE ADDRESS OF MSG ISSUER    */ 02000000
         L     @10,MSGRTN(,MSGPTR)                              01S0477 02001000
         ST    @10,GF02PTR                                      01S0477 02002000
*   GFSUBSYS=ON;                    /* USING VSAM SUBSYSTEM INTERFACE*/ 02003000
         OI    GFSUBSYS,B'01000000'                             01S0478 02004000
*   GFCPPLP=MTCPPL;                 /* PASS PTR TO TMP'S CPPL C.B.      02005000
*                                      (NEED FOR PUTLINE)            */ 02006000
         L     @10,MTCPPL(,MSGPTR)                              01S0479 02007000
         ST    @10,GFCPPLP                                      01S0479 02008000
*   GFECBP=ECBPTR;                  /* USE SUBMIT-SUPPLIED ECB FOR      02009000
*                                      PUTLINE                       */ 02010000
         L     @10,ECBPTR(,MSGPTR)                              01S0480 02011000
         ST    @10,GFECBP                                       01S0480 02012000
*   GFDSNLEN=LENGTH(INTRDRDS);      /* PASS 'INTRDR' NAME TO IKJEFF19   02013000
*                                      FOR DATA SET NAME MSG INSERT  */ 02014000
         MVC   GFDSNLEN(2),@CH00112                             01S0481 02015000
*   GFDSNP=ADDR(INTRDRDS);                                      01S0482 02016000
         LA    @10,INTRDRDS                                     01S0482 02017000
         ST    @10,GFDSNP                                       01S0482 02018000
*   GFPGMNL=LENGTH(CTCMDNM);        /* INSERT COMMAND NAME, AS  01S0483 02019000
*                                      ENTERED BY USER               */ 02020000
         MVC   GFPGMNL(2),@CH00055                              01S0483 02021000
*   GFPGMNP=ADDR(CTCMDNM);                                      01S0484 02022000
         LA    @10,CTCMDNM(,CONLIST)                            01S0484 02023000
         ST    @10,GFPGMNP                                      01S0484 02024000
*                                                               01S0485 02025000
*   /*****************************************************************/ 02026000
*   /*                                                               */ 02027000
*   /* CALL VSAMFAIL                                                 */ 02028000
*   /*                                                               */ 02029000
*   /*****************************************************************/ 02030000
*                                                               01S0485 02031000
*   RFY                                                         01S0485 02032000
*     R0 RSTD;                                                  01S0485 02033000
*   GEN(LOAD  EP=IKJEFF19)                                      01S0486 02034000
*   SETS(R0);                       /* LOAD THE VSAMFAIL ROUTINE     */ 02035000
         LOAD  EP=IKJEFF19                                              02036000
*   CALL IKJEFF19(GFPARMS);         /* ISSUE THE ERROR MESSAGE       */ 02037000
         LA    @10,GFPARMS                                      01S0487 02038000
         ST    @10,@AL00001                                     01S0487 02039000
         LR    @15,R0                                           01S0487 02040000
         LA    @01,@AL00001                                     01S0487 02041000
         BALR  @14,@15                                          01S0487 02042000
*   GEN(DELETE EP=IKJEFF19)                                     01S0488 02043000
*   REFS(R0);                       /* DELETE THE VSAMFAIL MODULE    */ 02044000
         DELETE EP=IKJEFF19                                             02045000
*   RFY                                                         01S0489 02046000
*     R0 UNRSTD;                                                01S0489 02047000
*                                                               01S0489 02048000
*   /*****************************************************************/ 02049000
*   /*                                                               */ 02050000
*   /* ISSUE 'SUBMIT TERMINATED ON JOB <JOBNAME>' MESSAGE            */ 02051000
*   /*                                                               */ 02052000
*   /*****************************************************************/ 02053000
*                                                               01S0490 02054000
*   MSGID='12D';                    /* MSG FOR SUBMIT TERMINATED     */ 02055000
         MVI   MSGID+3(MSGPTR),C' '                             01S0490 02056000
         MVC   MSGID(3,MSGPTR),@CC00719                         01S0490 02057000
*   L1=LENGTH(CTCMDNM);             /* INSERT COMMAND NAME           */ 02058000
         MVI   L1(MSGPTR),X'08'                                 01S0491 02059000
*   VAR1=ADDR(CTCMDNM);                                         01S0492 02060000
         LA    @10,CTCMDNM(,CONLIST)                            01S0492 02061000
         STCM  @10,7,VAR1(MSGPTR)                               01S0492 02062000
*   L2=LENGTH(JOBNAME);             /* INSERT THE CURRENT JOBNAME    */ 02063000
         MVI   L2(MSGPTR),X'08'                                 01S0493 02064000
*   VAR2=ADDR(JOBNAME);                                         01S0494 02065000
         MVC   VAR2(3,MSGPTR),JOBNAMPT+1(CONLIST)               01S0494 02066000
*   RFY                                                         01S0495 02067000
*     R1 RSTD;                                                  01S0495 02068000
*   R1=ADDR(MSGTABLE);              /* PTR TO IKJEFF02'S PARAM LIST  */ 02069000
         LR    R1,MSGPTR                                        01S0496 02070000
*   CALL IKJEFF02;                  /* ISSUE THE ERROR MESSAGE       */ 02071000
         L     @15,MSGRTN(,MSGPTR)                              01S0497 02072000
         BALR  @14,@15                                          01S0497 02073000
*   RFY                                                         01S0498 02074000
*     R1 UNRSTD;                                                01S0498 02075000
*   QUIT=ON;                        /* INDICATE SUBMIT FAILED        */ 02076000
         OI    QUIT(HTPTR),B'10000000'                          01S0499 02077000
*   RFY                                                         01S0500 02078000
*     R2 UNRSTD;                                                01S0500 02079000
*   END RPLERMSG;                                               01S0501 02080000
@EL00004 DS    0H                                               01S0501 02081000
@EF00004 DS    0H                                               01S0501 02082000
@ER00004 LM    @14,@12,@SA00004                                 01S0501 02083000
         BR    @14                                              01S0501 02084000
*   END IKJEFF05                                                01S0502 02085000
*                                                               01S0502 02086000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02087000
*/*%INCLUDE SYSUT5  (FF05PRLG)                                       */ 02088000
*/*%INCLUDE SYSUT5  (FF05DCLS)                                       */ 02089000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02090000
*/*%INCLUDE SYSLIB  (IKJDAP08)                                       */ 02091000
*/*%INCLUDE SYSLIB  (IKJEFFCT)                                       */ 02092000
*/*%INCLUDE SYSLIB  (IKJEFFD8)                                       */ 02093000
*/*%INCLUDE SYSLIB  (IKJEFFGF)                                       */ 02094000
*/*%INCLUDE SYSLIB  (IKJEFFHT)                                       */ 02095000
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */ 02096000
*/*%INCLUDE SYSUT5  (IKJEFF12)                                       */ 02097000
*                                                               01S0502 02098000
*       ;                                                       01S0502 02099000
@DATA    DS    0H                                                       02100000
@CH00160 DC    H'3'                                                     02101000
@CH00112 DC    H'6'                                                     02102000
@CH00055 DC    H'8'                                                     02103000
@CH00060 DC    H'80'                                                    02104000
@DATD    DSECT                                                          02105000
         DS    0F                                                       02106000
@SA00001 DS    18F                                                      02107000
@PC00001 DS    2F                                                       02108000
@SA00002 DS    14F                                                      02109000
@SA00004 DS    15F                                                      02110000
@AL00001 DS    8A                                                       02111000
IKJEFF05 CSECT                                                          02112000
         DS    0F                                                       02113000
@CF00048 DC    F'1'                                                     02114000
@CF00283 DC    F'2'                                                     02115000
@CF00125 DC    F'4'                                                     02116000
@CF00664 DC    XL4'08'                                                  02117000
@DATD    DSECT                                                          02118000
         DS    0D                                                       02119000
FINDCODE DS    F                                                        02120000
PT       DS    A                                                        02121000
RETCODE  DS    F                                                        02122000
RESCNT   DS    H                                                        02123000
DBLBUFSW DS    AL1                                                      02124000
         DS    CL2                                                      02125000
BUFFB    DS    AL3                                                      02126000
CARD     DS    CL80                                                     02127000
BADTXT   DS    CL52                                                     02128000
WORKAREA DS    CL108                                                    02129000
RDECB    DS    CL20                                                     02130000
         ORG   RDECB                                                    02131000
@NM00012 DS    CL6                                                      02132000
DECLNGTH DS    FL2                                                      02133000
@NM00013 DS    CL8                                                      02134000
DECIOBPT DS    AL4                                                      02135000
         ORG   RDECB+20                                                 02136000
FINDNAME DS    CL8                                                      02137000
BUFFIND  DS    CL8                                                      02138000
         ORG   BUFFIND                                                  02139000
BUFCORAD DS    AL4                                                      02140000
BUFCORLN DS    AL4                                                      02141000
         ORG   BUFFIND+8                                                02142000
GTMNPARM DS    CL8                                                      02143000
         ORG   GTMNPARM                                                 02144000
GMNMIN   DS    FL4                                                      02145000
GMNMAX   DS    FL4                                                      02146000
         ORG   GTMNPARM+8                                               02147000
JCLSW    DS    BL1                                                      02148000
JOBINSRT DS    CL18                                                     02149000
         ORG   JOBINSRT                                                 02150000
JOBNAREA DS    CL8                                                      02151000
JOBLPREN DS    CL1                                                      02152000
JOBIAREA DS    CL8                                                      02153000
JOBRPREN DS    CL1                                                      02154000
         ORG   JOBINSRT+18                                              02155000
         DS    CL1                                                      02156000
GFPARMS  DS    CL44                                                     02157000
         ORG   GFPARMS                                                  02158000
GFCBPTR  DS    AL4                                                      02159000
GFRCODE  DS    FL4                                                      02160000
GF02PTR  DS    AL4                                                      02161000
GFCALLID DS    FL2                                                      02162000
GFBITS   DS    BL1                                                      02163000
         ORG   GFBITS                                                   02164000
GFKEYN08 DS    BL1                                                      02165000
GFSUBSYS EQU   GFBITS+0                                                 02166000
GFWTPSW  EQU   GFBITS+0                                                 02167000
@NM00041 EQU   GFBITS+0                                                 02168000
         ORG   GFPARMS+15                                               02169000
@NM00042 DS    AL1                                                      02170000
GFCPPLP  DS    AL4                                                      02171000
GFECBP   DS    AL4                                                      02172000
GFDSNLEN DS    FL2                                                      02173000
GFPGMNL  DS    FL2                                                      02174000
GFDSNP   DS    AL4                                                      02175000
GFPGMNP  DS    AL4                                                      02176000
@NM00043 DS    AL4                                                      02177000
@NM00044 DS    AL4                                                      02178000
         ORG   GFPARMS+44                                               02179000
IKJEFF05 CSECT                                                          02180000
         DS    0F                                                       02181000
@SIZDATD DC    AL1(0)                                                   02182000
         DC    AL3(@ENDDATD-@DATD)                                      02183000
@CV00175 DC    V(IKJEFF07)                                              02184000
@CV00176 DC    V(IKJEFF08)                                              02185000
@CV00177 DC    V(IKJEFF09)                                              02186000
@CV00178 DC    V(IKJEFF13)                                              02187000
         DS    0D                                                       02188000
@CC00058 DC    C'        '                                              02189000
@CC00669 DC    C'/*DEL'                                                 02190000
@CC00671 DC    C'/*EOF'                                                 02191000
@CC00658 DC    C'05K '                                                  02192000
@CC00659 DC    C'05E '                                                  02193000
@CC00660 DC    C'05F '                                                  02194000
@CC00661 DC    C'05G '                                                  02195000
@CC00662 DC    C'05H '                                                  02196000
@CC00665 DC    C'05J '                                                  02197000
@CC00666 DC    C'05L '                                                  02198000
@CC00686 DC    C'05D '                                                  02199000
@CC00651 DC    C'05I'                                                   02200000
@CC00709 DC    C'12B'                                                   02201000
@CC00710 DC    C'12C'                                                   02202000
@CC00719 DC    C'12D'                                                   02203000
@CC00677 DC    C'//'                                                    02204000
@CC00693 EQU   @CC00669                                                 02205000
KTEMPNAM DC    CL8'TEMPNAME'                                            02206000
ZAPAREA  DS    CL51                                                     02207000
         ORG   ZAPAREA                                                  02208000
ZAPINIT  DC    17CL3'ZAP'                                               02209000
         ORG   ZAPAREA+51                                               02210000
PATCH06  DS    CL51                                                     02211000
         ORG   PATCH06                                                  02212000
PTCHINIT DC    17CL3'ZAP'                                               02213000
         ORG   PATCH06+51                                               02214000
INSRTMOD DC    CL8'IKJEFF12'                                            02215000
PATCH12  DS    CL51                                                     02216000
         ORG   PATCH12                                                  02217000
PT12INIT DC    17CL3'ZAP'                                               02218000
         ORG   PATCH12+51                                               02219000
INTRDRDS DC    CL6'INTRDR'                                              02220000
IKJEFF05 CSECT                                                          02221000
READDCB  DCB   DSORG=PS,                                               X02222000
               MACRF=R,                                                X02223000
               KEYLEN=0,                                               X02224000
               SYNAD=SYNADRTN,                                         X02225000
               EODAD=INPUTEOF,                                         X02226000
               DDNAME=INPUT                                             02227000
          CNOP  0,4                                                     02228000
SGET      EQU   *                                                       02229000
DDGETM    GETMAIN  VC,MF=L                                              02230000
EGET      EQU   *                                                       02231000
          CNOP  0,4                                                     02232000
SFRE      EQU   *                                                       02233000
DDFREM    FREEMAIN E,MF=L                                               02234000
EFRE      EQU   *                                                       02235000
          READ  MDECB,SF,MF=L                                           02236000
          CNOP  0,4                                                     02237000
SOPE      EQU   *                                                       02238000
OPEL      OPEN  (MDECB),MF=L                                            02239000
EOPE      EQU   *                                                       02240000
@DATD    DSECT                                                          02241000
*                                            /* REENTRANT CORE       */ 02242000
          CNOP  0,4                                                     02243000
AAGETM    DS    CL(EGET-SGET)     *CORE FOR GETMAIN (LIST FORM) MACRO   02244000
          CNOP  0,4                                                     02245000
AAFREM    DS    CL(EFRE-SFRE)     *CORE FOR FREEMAIN (LIST FORM) MACRO  02246000
          CNOP  0,4                                                     02247000
ROPE      DS    CL(EOPE-SOPE)     *CORE FOR OPEN/CLOSE LIST             02248000
@DATD    DSECT                                                          02249000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02250000
@ENDDATD EQU   *                                                        02251000
IKJEFF05 CSECT                                                          02252000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02253000
@01      EQU   01                                                       02254000
@02      EQU   02                                                       02255000
@03      EQU   03                                                       02256000
@04      EQU   04                                                       02257000
@05      EQU   05                                                       02258000
@06      EQU   06                                                       02259000
@07      EQU   07                                                       02260000
@08      EQU   08                                                       02261000
@09      EQU   09                                                       02262000
@10      EQU   10                                                       02263000
@11      EQU   11                                                       02264000
@12      EQU   12                                                       02265000
@13      EQU   13                                                       02266000
@14      EQU   14                                                       02267000
@15      EQU   15                                                       02268000
CURREC   EQU   @10                                                      02269000
BUFFA    EQU   @09                                                      02270000
K        EQU   @03                                                      02271000
J        EQU   @03                                                      02272000
CURRDD   EQU   @07                                                      02273000
MSGPTR   EQU   @05                                                      02274000
HTPTR    EQU   @04                                                      02275000
CONLIST  EQU   @06                                                      02276000
R15      EQU   @15                                                      02277000
R1       EQU   @01                                                      02278000
R2       EQU   @02                                                      02279000
R8       EQU   @08                                                      02280000
R0       EQU   @00                                                      02281000
IKJEFF02 EQU   0                                                        02282000
SYNADMSG EQU   0                                                        02283000
SYNADTXT EQU   SYNADMSG+68                                              02284000
READWORK EQU   0                                                        02285000
DCB      EQU   READWORK                                                 02286000
DCBDSORG EQU   DCB+26                                                   02287000
RECFM    EQU   DCB+36                                                   02288000
RECFMF   EQU   RECFM                                                    02289000
RECFMV   EQU   RECFM                                                    02290000
DDNAME   EQU   DCB+40                                                   02291000
OFLAGS   EQU   DCB+48                                                   02292000
OPENBIT  EQU   OFLAGS                                                   02293000
DCBIMACR EQU   DCB+50                                                   02294000
BLKSIZE  EQU   DCB+62                                                   02295000
LRECL    EQU   DCB+82                                                   02296000
READSW   EQU   READWORK+96                                              02297000
FIRSTRD  EQU   READSW                                                   02298000
FAILCODE EQU   READWORK+97                                              02299000
DDELEM   EQU   0                                                        02300000
DAPB0PTR EQU   DDELEM                                                   02301000
NEXTDDEL EQU   DDELEM+4                                                 02302000
IOB      EQU   0                                                        02303000
CSWCNT   EQU   IOB+14                                                   02304000
NCARD    EQU   0                                                        02305000
CURRCARD EQU   0                                                        02306000
JOBNMS   EQU   0                                                        02307000
CURRNAME EQU   JOBNMS                                                   02308000
NEXTNAME EQU   JOBNMS+8                                                 02309000
HISTFLD  EQU   0                                                        02310000
USERID   EQU   0                                                        02311000
COMMECB  EQU   0                                                        02312000
INDIRECT EQU   0                                                        02313000
JOBNAME  EQU   0                                                        02314000
IKJEFF19 EQU   0                                                        02315000
IFGRPL   EQU   0                                                        02316000
RPLCOMN  EQU   IFGRPL                                                   02317000
RPLIDWD  EQU   RPLCOMN                                                  02318000
RPLLEN   EQU   RPLIDWD+3                                                02319000
RPLECB   EQU   RPLCOMN+8                                                02320000
RPLFDBWD EQU   RPLCOMN+12                                               02321000
RPLFDBK  EQU   RPLFDBWD+1                                               02322000
RPLRTNCD EQU   RPLFDBK                                                  02323000
RPLCNDCD EQU   RPLFDBK+1                                                02324000
RPLCMPON EQU   RPLCNDCD                                                 02325000
RPLFDB2  EQU   RPLCMPON                                                 02326000
RPLERRCD EQU   RPLCNDCD+1                                               02327000
RPLFDB3  EQU   RPLERRCD                                                 02328000
RPLKEYLE EQU   RPLCOMN+16                                               02329000
RPLAREA  EQU   RPLCOMN+32                                               02330000
RPLARG   EQU   RPLCOMN+36                                               02331000
RPLOPTCD EQU   RPLCOMN+40                                               02332000
RPLOPT1  EQU   RPLOPTCD                                                 02333000
RPLECBSW EQU   RPLOPT1                                                  02334000
RPLOPT2  EQU   RPLOPTCD+1                                               02335000
RPLADR   EQU   RPLOPT2                                                  02336000
RPLOPT3  EQU   RPLOPTCD+2                                               02337000
RPLNXTRP EQU   RPLCOMN+44                                               02338000
RPLOPTC2 EQU   RPLCOMN+56                                               02339000
RPLOPT5  EQU   RPLOPTC2                                                 02340000
RPLWRTYP EQU   RPLOPT5                                                  02341000
RPLOPT6  EQU   RPLOPTC2+1                                               02342000
RPLUNTYP EQU   RPLOPT6                                                  02343000
RPLOPT7  EQU   RPLOPTC2+2                                               02344000
RPLCNOPT EQU   RPLOPT7                                                  02345000
RPLOPT8  EQU   RPLOPTC2+3                                               02346000
RPLRBAR  EQU   RPLCOMN+60                                               02347000
RPLAIXID EQU   RPLRBAR+2                                                02348000
RPLEXTDS EQU   RPLCOMN+68                                               02349000
RPLEXTD1 EQU   RPLEXTDS                                                 02350000
DAPB08   EQU   0                                                        02351000
DA08FLG  EQU   DAPB08+2                                                 02352000
DA08DDN  EQU   DAPB08+12                                                02353000
DA08MNM  EQU   DAPB08+52                                                02354000
DA08DSP1 EQU   DAPB08+68                                                02355000
DA08DPS2 EQU   DAPB08+69                                                02356000
DA08DPS3 EQU   DAPB08+70                                                02357000
DA08CTL  EQU   DAPB08+71                                                02358000
DA08DSO  EQU   DAPB08+75                                                02359000
CONTAB   EQU   0                                                        02360000
CONTABPT EQU   CONTAB+12                                                02361000
STMTPT   EQU   CONTAB+16                                                02362000
HISTPT   EQU   CONTAB+24                                                02363000
JOBNAMPT EQU   CONTAB+32                                                02364000
MSGLISPT EQU   CONTAB+36                                                02365000
USERIDPT EQU   CONTAB+40                                                02366000
EXWORD   EQU   CONTAB+48                                                02367000
EXITAD   EQU   CONTAB+52                                                02368000
DDPTR    EQU   CONTAB+56                                                02369000
COMECBPT EQU   CONTAB+60                                                02370000
CTRPLPT  EQU   CONTAB+68                                                02371000
CTCMDNM  EQU   CONTAB+76                                                02372000
D08ADDED EQU   0                                                        02373000
D08EXTRA EQU   D08ADDED                                                 02374000
D8SWITS  EQU   D08EXTRA+4                                               02375000
D8ADJUST EQU   D8SWITS                                                  02376000
ORIGNAME EQU   D08EXTRA+6                                               02377000
NAMELEN  EQU   ORIGNAME                                                 02378000
DSNAME   EQU   ORIGNAME+2                                               02379000
HISTORY  EQU   0                                                        02380000
WHATMOD  EQU   HISTORY+12                                               02381000
INCONTRL EQU   WHATMOD                                                  02382000
INGEN    EQU   WHATMOD+2                                                02383000
INREAD   EQU   WHATMOD+3                                                02384000
INEXIT   EQU   WHATMOD+3                                                02385000
INWRMGR  EQU   WHATMOD+3                                                02386000
JCLSWITS EQU   HISTORY+16                                               02387000
PRIORJCL EQU   JCLSWITS                                                 02388000
PVERB    EQU   PRIORJCL                                                 02389000
PDTYPE   EQU   PRIORJCL+2                                               02390000
PMISC    EQU   PRIORJCL+3                                               02391000
CURRJCL  EQU   JCLSWITS+4                                               02392000
CVERB    EQU   CURRJCL                                                  02393000
CDATA    EQU   CVERB                                                    02394000
CNULL    EQU   CVERB                                                    02395000
CJOB     EQU   CVERB                                                    02396000
CEXEC    EQU   CVERB                                                    02397000
CDD      EQU   CVERB                                                    02398000
CCOMMAND EQU   CVERB                                                    02399000
CCOMMENT EQU   CVERB                                                    02400000
CJES     EQU   CVERB+1                                                  02401000
CDTYPE   EQU   CURRJCL+2                                                02402000
CDDAST   EQU   CDTYPE                                                   02403000
CDDDATA  EQU   CDTYPE                                                   02404000
CMISC    EQU   CURRJCL+3                                                02405000
CCONEX   EQU   CMISC                                                    02406000
CVERBCOP EQU   CMISC                                                    02407000
STATICSW EQU   HISTORY+24                                               02408000
GENL     EQU   STATICSW                                                 02409000
QUIT     EQU   GENL                                                     02410000
FLUSH    EQU   GENL                                                     02411000
FIRST    EQU   GENL                                                     02412000
TAKEXITS EQU   STATICSW+1                                               02413000
JOBX     EQU   TAKEXITS                                                 02414000
EXECX    EQU   TAKEXITS                                                 02415000
DDX      EQU   TAKEXITS                                                 02416000
CMDX     EQU   TAKEXITS                                                 02417000
NULLX    EQU   TAKEXITS                                                 02418000
JESX     EQU   TAKEXITS                                                 02419000
COMNTX   EQU   TAKEXITS                                                 02420000
CODEFLD  EQU   STATICSW+3                                               02421000
HTCODE   EQU   CODEFLD                                                  02422000
DLMONJCL EQU   HISTORY+32                                               02423000
HTDLM    EQU   DLMONJCL                                                 02424000
HTSWITCH EQU   HISTORY+34                                               02425000
HTDLMSW  EQU   HTSWITCH                                                 02426000
HTACCNTP EQU   HISTORY+40                                               02427000
MSGTABLE EQU   0                                                        02428000
TMCTPTR  EQU   MSGTABLE+4                                               02429000
MTCPPL   EQU   TMCTPTR                                                  02430000
ECBPTR   EQU   MSGTABLE+8                                               02431000
@NM00055 EQU   MSGTABLE+12                                              02432000
SW       EQU   MSGTABLE+20                                              02433000
MTJOBISW EQU   SW                                                       02434000
RETMSG   EQU   MSGTABLE+21                                              02435000
SW2      EQU   MSGTABLE+24                                              02436000
MSGID    EQU   MSGTABLE+40                                              02437000
MTINSRTS EQU   MSGTABLE+44                                              02438000
L1       EQU   MTINSRTS                                                 02439000
VAR1     EQU   MTINSRTS+1                                               02440000
L2       EQU   MTINSRTS+4                                               02441000
VAR2     EQU   MTINSRTS+5                                               02442000
L3       EQU   MTINSRTS+8                                               02443000
VAR3     EQU   MTINSRTS+9                                               02444000
L4       EQU   MTINSRTS+12                                              02445000
MSGRTN   EQU   MSGTABLE+60                                              02446000
RET      EQU   0                                                        02447000
HTACCNTI EQU   0                                                        02448000
MSGECB   EQU   0                                                        02449000
MSGTMCT  EQU   0                                                        02450000
SUBCTAB  EQU   0                                                        02451000
PCONTAB  EQU   0                                                        02452000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02453000
RETCHAR  EQU   RET+2                                                    02454000
RETSIZE  EQU   RET                                                      02455000
VAR4     EQU   MTINSRTS+13                                              02456000
HIGHL4   EQU   L4                                                       02457000
HIGHL3   EQU   L3                                                       02458000
HIGHL2   EQU   L2                                                       02459000
HIGHL1   EQU   L1                                                       02460000
@NM00059 EQU   MSGTABLE+36                                              02461000
@NM00058 EQU   MSGTABLE+32                                              02462000
MTOLDPTR EQU   MSGTABLE+28                                              02463000
@NM00057 EQU   MSGTABLE+25                                              02464000
@NM00056 EQU   SW2                                                      02465000
MTPGMSW  EQU   SW2                                                      02466000
MTNPLMSW EQU   SW2                                                      02467000
MTNOXQSW EQU   SW2                                                      02468000
MTDOMSW  EQU   SW2                                                      02469000
MT2OLDSW EQU   SW2                                                      02470000
MTNHEXSW EQU   SW                                                       02471000
MTWTPSW  EQU   SW                                                       02472000
MTKEY1SW EQU   SW                                                       02473000
MTHEXSW  EQU   SW                                                       02474000
MTWTOSW  EQU   SW                                                       02475000
MTPUTLSW EQU   SW                                                       02476000
MTNOIDSW EQU   SW                                                       02477000
MSGCSECT EQU   MSGTABLE+16                                              02478000
MTHIGH   EQU   @NM00055                                                 02479000
LISTPTR  EQU   MSGTABLE                                                 02480000
@NM00054 EQU   HISTORY+50                                               02481000
HTACNTC2 EQU   HISTORY+48                                               02482000
HTACNTC1 EQU   HISTORY+46                                               02483000
HTACCNTL EQU   HISTORY+44                                               02484000
@NM00053 EQU   HISTORY+36                                               02485000
@NM00052 EQU   HISTORY+35                                               02486000
@NM00051 EQU   HTSWITCH                                                 02487000
@NM00050 EQU   HISTORY+28                                               02488000
OPOFF    EQU   STATICSW+2                                               02489000
@NM00049 EQU   TAKEXITS                                                 02490000
NONOTIFY EQU   GENL                                                     02491000
CDLMFND  EQU   CMISC                                                    02492000
CNOTHING EQU   CMISC                                                    02493000
CCOMCON  EQU   CMISC                                                    02494000
CNAME    EQU   CMISC                                                    02495000
CCONERR  EQU   CMISC                                                    02496000
COPCONEX EQU   CMISC                                                    02497000
@NM00048 EQU   CVERB+1                                                  02498000
@NM00047 EQU   CVERB+1                                                  02499000
CDELIM   EQU   CVERB                                                    02500000
PDLMFND  EQU   PMISC                                                    02501000
PNOTHING EQU   PMISC                                                    02502000
PCOMCON  EQU   PMISC                                                    02503000
PVERBCOP EQU   PMISC                                                    02504000
PNAME    EQU   PMISC                                                    02505000
PCONERR  EQU   PMISC                                                    02506000
POPCONEX EQU   PMISC                                                    02507000
PCONEX   EQU   PMISC                                                    02508000
PDDDATA  EQU   PDTYPE                                                   02509000
PDDAST   EQU   PDTYPE                                                   02510000
@NM00046 EQU   PVERB+1                                                  02511000
@NM00045 EQU   PVERB+1                                                  02512000
PJES     EQU   PVERB+1                                                  02513000
PCOMMENT EQU   PVERB                                                    02514000
PCOMMAND EQU   PVERB                                                    02515000
PDD      EQU   PVERB                                                    02516000
PEXEC    EQU   PVERB                                                    02517000
PJOB     EQU   PVERB                                                    02518000
PNULL    EQU   PVERB                                                    02519000
PDATA    EQU   PVERB                                                    02520000
PDELIM   EQU   PVERB                                                    02521000
INOINIT  EQU   WHATMOD+3                                                02522000
INCOMPIN EQU   WHATMOD+3                                                02523000
INMSG    EQU   WHATMOD+3                                                02524000
INDAIRIN EQU   WHATMOD+3                                                02525000
INIDENT  EQU   WHATMOD+3                                                02526000
INPROMPT EQU   WHATMOD+1                                                02527000
SUBTAB   EQU   HISTORY                                                  02528000
ENDEXTRA EQU   D08ADDED+52                                              02529000
D8SPARE  EQU   D8SWITS+1                                                02530000
NEXT08   EQU   D08EXTRA                                                 02531000
CTIDLN   EQU   CONTAB+84                                                02532000
CTACBPT  EQU   CONTAB+72                                                02533000
INITSAVE EQU   CONTAB+64                                                02534000
TMCTPT   EQU   CONTAB+44                                                02535000
CTNDSNPT EQU   CONTAB+28                                                02536000
CLOSERPT EQU   CONTAB+20                                                02537000
TABID    EQU   CONTAB                                                   02538000
DA08ALN  EQU   DAPB08+76                                                02539000
@NM00040 EQU   DAPB08+72                                                02540000
@NM00039 EQU   DA08CTL                                                  02541000
DA08ATRL EQU   DA08CTL                                                  02542000
DA08DMMY EQU   DA08CTL                                                  02543000
DA08PERM EQU   DA08CTL                                                  02544000
DA08RLSE EQU   DA08CTL                                                  02545000
DA08UID  EQU   DA08CTL                                                  02546000
DA08ABKL EQU   DA08CTL                                                  02547000
DA08TRKS EQU   DA08CTL                                                  02548000
DA08UNCT EQU   DA08DPS3                                                 02549000
DA08CATL EQU   DA08DPS3                                                 02550000
DA08DELE EQU   DA08DPS3                                                 02551000
DA08KEP  EQU   DA08DPS3                                                 02552000
@NM00038 EQU   DA08DPS3                                                 02553000
@NM00037 EQU   DA08DPS3                                                 02554000
@NM00036 EQU   DA08DPS3                                                 02555000
@NM00035 EQU   DA08DPS3                                                 02556000
DA08UCAT EQU   DA08DPS2                                                 02557000
DA08CAT  EQU   DA08DPS2                                                 02558000
DA08DEL  EQU   DA08DPS2                                                 02559000
DA08KEEP EQU   DA08DPS2                                                 02560000
@NM00034 EQU   DA08DPS2                                                 02561000
@NM00033 EQU   DA08DPS2                                                 02562000
@NM00032 EQU   DA08DPS2                                                 02563000
@NM00031 EQU   DA08DPS2                                                 02564000
DA08OLD  EQU   DA08DSP1                                                 02565000
DA08MOD  EQU   DA08DSP1                                                 02566000
DA08NEW  EQU   DA08DSP1                                                 02567000
DA08SHR  EQU   DA08DSP1                                                 02568000
@NM00030 EQU   DA08DSP1                                                 02569000
@NM00029 EQU   DA08DSP1                                                 02570000
@NM00028 EQU   DA08DSP1                                                 02571000
@NM00027 EQU   DA08DSP1                                                 02572000
DA08PSWD EQU   DAPB08+60                                                02573000
DA08DQTY EQU   DAPB08+48                                                02574000
DA08SQTY EQU   DAPB08+44                                                02575000
DA08PQTY EQU   DAPB08+40                                                02576000
DA08BLK  EQU   DAPB08+36                                                02577000
DA08SER  EQU   DAPB08+28                                                02578000
DA08UNIT EQU   DAPB08+20                                                02579000
DA08PDSN EQU   DAPB08+8                                                 02580000
DA08CTRC EQU   DAPB08+6                                                 02581000
DA08DARC EQU   DAPB08+4                                                 02582000
@NM00026 EQU   DA08FLG                                                  02583000
@NM00025 EQU   DA08FLG                                                  02584000
@NM00024 EQU   DA08FLG                                                  02585000
@NM00023 EQU   DA08FLG                                                  02586000
@NM00022 EQU   DA08FLG                                                  02587000
@NM00021 EQU   DA08FLG                                                  02588000
@NM00020 EQU   DA08FLG                                                  02589000
DA08FPE  EQU   DA08FLG                                                  02590000
DA08CD   EQU   DAPB08                                                   02591000
RPLERMSA EQU   RPLCOMN+72                                               02592000
RPLEMLEN EQU   RPLCOMN+70                                               02593000
RPLACTIV EQU   RPLCOMN+69                                               02594000
RPLBRANC EQU   RPLEXTD1                                                 02595000
RPLNIB   EQU   RPLEXTD1                                                 02596000
@NM00019 EQU   RPLEXTD1                                                 02597000
RPLEXIT  EQU   RPLEXTD1                                                 02598000
RPLNEXIT EQU   RPLEXTD1                                                 02599000
RPLEXSCH EQU   RPLEXTD1                                                 02600000
RPLDDDD  EQU   RPLRBAR+4                                                02601000
@NM00018 EQU   RPLRBAR+3                                                02602000
@NM00017 EQU   RPLAIXID                                                 02603000
RPLAXPKP EQU   RPLAIXID                                                 02604000
RPLAIXPC EQU   RPLRBAR                                                  02605000
RPLRSV88 EQU   RPLOPT8                                                  02606000
RPLUNCON EQU   RPLOPT8                                                  02607000
RPLACTV  EQU   RPLOPT8                                                  02608000
RPLSESS  EQU   RPLOPT8                                                  02609000
RPLPEND  EQU   RPLOPT8                                                  02610000
RPLODPRM EQU   RPLOPT8                                                  02611000
RPLODACP EQU   RPLOPT8                                                  02612000
RPLODACQ EQU   RPLOPT8                                                  02613000
RPLRSV78 EQU   RPLOPT7                                                  02614000
RPLRSV77 EQU   RPLOPT7                                                  02615000
RPLRLSOP EQU   RPLOPT7                                                  02616000
RPLTPOST EQU   RPLOPT7                                                  02617000
RPLQOPT  EQU   RPLOPT7                                                  02618000
RPLCNIMM EQU   RPLCNOPT                                                 02619000
RPLCNANY EQU   RPLCNOPT                                                 02620000
RPLCNALL EQU   RPLCNOPT                                                 02621000
RPLRSV68 EQU   RPLOPT6                                                  02622000
RPLRSV67 EQU   RPLOPT6                                                  02623000
RPLLOCK  EQU   RPLOPT6                                                  02624000
RPLNCOND EQU   RPLOPT6                                                  02625000
RPLCOND  EQU   RPLOPT6                                                  02626000
RPLEOT   EQU   RPLUNTYP                                                 02627000
RPLEOM   EQU   RPLUNTYP                                                 02628000
RPLEOB   EQU   RPLUNTYP                                                 02629000
RPLWROPT EQU   RPLOPT5                                                  02630000
RPLNODE  EQU   RPLOPT5                                                  02631000
RPLERACE EQU   RPLWRTYP                                                 02632000
RPLEAU   EQU   RPLWRTYP                                                 02633000
RPLNERAS EQU   RPLWRTYP                                                 02634000
RPLPSOPT EQU   RPLOPT5                                                  02635000
RPLSSNIN EQU   RPLOPT5                                                  02636000
RPLDLGIN EQU   RPLOPT5                                                  02637000
RPLBUFL  EQU   RPLCOMN+52                                               02638000
RPLRLEN  EQU   RPLCOMN+48                                               02639000
RPLCHAIN EQU   RPLNXTRP                                                 02640000
RPLOPT4  EQU   RPLOPTCD+3                                               02641000
RPLALIGN EQU   RPLOPT3                                                  02642000
RPLFMT   EQU   RPLOPT3                                                  02643000
RPLFLD   EQU   RPLOPT3                                                  02644000
RPLVFY   EQU   RPLOPT3                                                  02645000
RPLBLK   EQU   RPLOPT3                                                  02646000
RPLSFORM EQU   RPLOPT3                                                  02647000
RPLEODS  EQU   RPLOPT3                                                  02648000
RPLNSP   EQU   RPLOPT2                                                  02649000
RPLUPD   EQU   RPLOPT2                                                  02650000
@NM00016 EQU   RPLOPT2                                                  02651000
RPLLRD   EQU   RPLOPT2                                                  02652000
RPLBWD   EQU   RPLOPT2                                                  02653000
RPLCNV   EQU   RPLOPT2                                                  02654000
RPLADD   EQU   RPLADR                                                   02655000
RPLKEY   EQU   RPLOPT2                                                  02656000
RPLECBIN EQU   RPLECBSW                                                 02657000
RPLGEN   EQU   RPLOPT1                                                  02658000
RPLKGE   EQU   RPLOPT1                                                  02659000
RPLASY   EQU   RPLOPT1                                                  02660000
RPLSKP   EQU   RPLOPT1                                                  02661000
RPLSEQ   EQU   RPLOPT1                                                  02662000
RPLDIR   EQU   RPLOPT1                                                  02663000
RPLLOC   EQU   RPLOPT1                                                  02664000
RPLDAF   EQU   RPLARG+2                                                 02665000
RPLSAF   EQU   RPLARG                                                   02666000
RPLTCBPT EQU   RPLCOMN+28                                               02667000
RPLDACB  EQU   RPLCOMN+24                                               02668000
RPLCCHAR EQU   RPLCOMN+20                                               02669000
RPLSTRID EQU   RPLCOMN+18                                               02670000
RPLKEYL  EQU   RPLKEYLE                                                 02671000
RPLRDSOH EQU   RPLFDB3                                                  02672000
RPLRLG   EQU   RPLFDB3                                                  02673000
RPLLGFRC EQU   RPLFDB3                                                  02674000
RPLREOT  EQU   RPLFDB3                                                  02675000
RPLREOM  EQU   RPLFDB3                                                  02676000
RPLREOB  EQU   RPLFDB3                                                  02677000
RPLSV32  EQU   RPLFDB3                                                  02678000
RPLUINPT EQU   RPLFDB3                                                  02679000
RPLSTSAV EQU   RPLFDB2                                                  02680000
RPLCUERR EQU   RPLFDB2                                                  02681000
RPLDLGFL EQU   RPLFDB2                                                  02682000
RPLIOERR EQU   RPLFDB2                                                  02683000
RPLDVUNS EQU   RPLFDB2                                                  02684000
RPLATND  EQU   RPLFDB2                                                  02685000
RPLRVID  EQU   RPLFDB2                                                  02686000
RPLERLK  EQU   RPLFDB2                                                  02687000
RPLERREG EQU   RPLRTNCD                                                 02688000
RPLSTAT  EQU   RPLFDBWD                                                 02689000
RPLPOST  EQU   RPLECB                                                   02690000
RPLWAIT  EQU   RPLECB                                                   02691000
RPLPLHPT EQU   RPLCOMN+4                                                02692000
RPLLEN2  EQU   RPLLEN                                                   02693000
RPLREQ   EQU   RPLIDWD+2                                                02694000
RPLSTYP  EQU   RPLIDWD+1                                                02695000
RPLID    EQU   RPLIDWD                                                  02696000
POSTBIT  EQU   COMMECB                                                  02697000
@NM00015 EQU   COMMECB                                                  02698000
@NM00014 EQU   IOB                                                      02699000
WORKEND  EQU   READWORK+98                                              02700000
@NM00011 EQU   DCB+64                                                   02701000
@NM00010 EQU   DCB+51                                                   02702000
@NM00009 EQU   DCB+49                                                   02703000
@NM00008 EQU   OFLAGS                                                   02704000
@NM00007 EQU   OFLAGS                                                   02705000
@NM00006 EQU   OFLAGS                                                   02706000
@NM00005 EQU   OFLAGS                                                   02707000
@NM00004 EQU   DCB+37                                                   02708000
@NM00003 EQU   DCB+27                                                   02709000
@NM00002 EQU   DCB                                                      02710000
@NM00001 EQU   SYNADMSG+42                                              02711000
MSGBLANK EQU   SYNADMSG                                                 02712000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02713000
END0506  EQU   @EL00001                                                 02714000
@RF00319 EQU   @RC00315                                                 02715000
@RC00317 EQU   @RC00315                                                 02716000
@RT00334 EQU   FINISH                                                   02717000
@RT00336 EQU   PUTCARD                                                  02718000
@RT00345 EQU   CALLEX                                                   02719000
@RT00347 EQU   CALLEX                                                   02720000
@RT00349 EQU   CALLEX                                                   02721000
@RT00351 EQU   CALLEX                                                   02722000
@RT00353 EQU   CALLEX                                                   02723000
@RT00355 EQU   CALLEX                                                   02724000
@RT00357 EQU   CALLEX                                                   02725000
@RF00401 EQU   @RC00396                                                 02726000
@RC00416 EQU   @RC00412                                                 02727000
@RF00467 EQU   @EL00003                                                 02728000
@PB00003 EQU   @EL00002                                                 02729000
@ENDDATA EQU   *                                                        02730000
         END   IKJEFF05,(C'PLS1045',0701,78174)                         02731000
