P00 TITLE 'I K J E F P 0 0  --  PARSE MAINLINE ROUTINE    DATE 9/7/73'  00060403
*                                                                     * 00062402
*                                                                     * 00070002
*********************************************************************** 00076002
*                                                                     * 00076402
*            P R O L O G U E   FOR   I K J E F P 0 0                  * 00076502
*                                                                     * 00081802
*                   PARSE MAINLINE ROUTINE                            * 00090702
*                                                                     * 00096002
*MODULE NAME= IKJEFP00 - (IKJPARS - LOAD MODULE NAME)                 * 00101302
*                                                                     * 00106602
*DESCRIPTIVE NAME= PARSE                                              * 00111902
*                                                                     * 00117202
*COPYRIGHT= N/A                                                       * 00122502
*                                                                     * 00127802
*STATUS= REL. 04.0                                                    * 00129800
*                                                                     * 00133100
*        RELEASE 037 CHANGES                                          * 00134100
*A232550-232554                                              @ZA27204 * 00135100
*                                                                     * 00138402
*FUNCTION=                                                            * 00143702
*     -- PARSE IS A TSO SERVICE ROUTINE WHICH PROVIDES A CENTRALIZED, * 00149002
*        AND THEREFORE A GENERALIZED, PROGRAM TO SYNTAX CHECK TSO     * 00154302
*        COMMAND PARAMETERS.                                          * 00159602
*  OPERATION=                                                         * 00164902
*       PARSE USERS SPECIFY THE ACCEPTABLE COMMAND PARAMETERS'        * 00170202
*       SYNTAX BY THE USE OF PARSE MACROS WHICH PRODUCE A PARAMETER   * 00175502
*       CONTROL LIST (PCL).  PARSE USES THIS LIST TO BUILD THE        * 00180802
*       PARAMETER DESCRIPTOR LIST (PDL) WHICH DESCRIBES THE ACTUAL    * 00186102
*       USER ENTERED DATA.                                            * 00191402
*                                                                     * 00196702
*NOTES                                                                * 00202002
*  DEPENDENCIES=                                                      * 00207302
*    CHARACTER-CODE DEPENDENCIES=                                     * 00212602
*       -- CLASS C. THE OPERATION OF THIS PROGRAM                     * 00217902
*       IS DEPENDENT UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL  * 00223202
*       CHARACTER SET WHICH IS EQUIVALENT TO THE ONE USED AT ASSEMBLY * 00228502
*       TIME. THE CODING HAS BEEN ARRANGED SO THAT REDEFINITION OF    * 00233802
*       'CHARACTER' CONSTANTS, BY REASSSEMBLY, WILL RESULT IN A       * 00239102
*       CORRECT PROGRAM FOR THE NEW DEFINITION.                       * 00244402
*  RESTRICTIONS=  NONE.                                               * 00249702
*  REGISTER-CONVENTIONS= IKJPARS                                      * 00255002
*  PATCH-LABEL= N/A                                                   * 00260302
*                                                                     * 00265602
*MODULE TYPE= MODULE.                                                 * 00270902
*  PROCESSOR= ASSEM                                                   * 00276202
*  MODULE SIZE= N/A                                                   * 00281502
*  ATTRIBUTES= REENTRANT, REFRESHABLE AND REUSABLE                    * 00286802
*                                                                     * 00292102
*ENTRY POINT=IKJPARS                                                  * 00297402
*  PURPOSE= MAIN ENTRY -- COMMAND PROCESSOR'S PARAMETERS PROCESSOR.   * 00302702
*  LINKAGE= STANDARD                                                  * 00308002
*  INPUT=                                                             * 00313302
*       --- REGISTER ONE POINTS TO THE PARSE PARAMETER LIST (IKJPPL)  * 00318602
*       WHICH CONTAINS THE FOLLOWING -                                * 00323902
*                                                                     * 00329202
*            ***************************************                  * 00334502
*            / PPLUPT - POINTER TO UPT             /                  * 00339802
*            / PPLECT - POINTER TO ECT             /                  * 00345102
*            / PPLECB - POINTER TO ECB             /                  * 00350402
*            / PPLPCL - POINTER TO PCL             /                  * 00355702
*            / PPLANS - POINTER TO ANSWER PLACE    /                  * 00361002
*            / PPLCBUF - POINTER TO COMMAND BUFFER /                  * 00366302
*            / PPLUWA - USER WORD                  /                  * 00371602
*            ***************************************                  * 00376902
*                                                                     * 00382202
*       THE ECB IS NOT USED BY PARSE, BUT IS PASSED ASIS IN THE       * 00387502
*        PARAMETER LIST TO THE I/O SERVICE ROUTINES.                  * 00392502
*                                                                     * 00398102
*       -- THE PARAMETER CONTROL LIST (PCL) IS CREATED BY THE CP      * 00403402
*       USING THE PARSE MACROS IKJPARMD, IKJPOSIT, IKJIDENT, IKJKEYWD,* 00408702
*       IKJNAME, IKJSUBF AND IKJENDP MACROS. EACH MACRO GENERATES ONE * 00414002
*       ENTRY IN THE PCL CALLED AN PARAMETER CONTROL ENTRY (PCE).     * 00419302
*       THE ANSWER PLACE IS A FOUR BYTE AREA PROVIDED BY THE CALLING  * 00424602
*       CP AS A LOCATION WHERE THE PARAMETER DESCRIPTION LIST (PDL)   * 00429902
*       ADDRESS IS PLACED.                                            * 00435202
*                                                                     * 00440502
*       THE COMMAND BUFFER IS OF THE FORM -                           * 00445802
*                                                                     * 00451102
*                   *******************************************       * 00456402
*       BUFFER:    /  LENGTH    /  OFFSET      /  TEXT       /        * 00461702
*                   *******************************************       * 00467002
*       OFFSET:     0            2              4                     * 00472302
*                                                                     * 00477602
*       THE LENGTH INCLUDES THE LENGTH OF THE LENGTH AND OFFSET FIELDS* 00482902
*       WITH THE BUFFER OFFSET POINTING TO THE LOCATION IN THE BUFFER * 00488202
*       WHERE PARSE IS TO BEGIN SCANNING. THE COMMAND SCAN SERVICE    * 00493502
*       ROUTINE PREVIOUSLY UPDATED THE OFFSET PAST THE COMMAND NAME.  * 00498802
*       THE USER WORD IS PASSED TO THE VALIDITY CHECK ROUTINE AND     * 00504102
*       WOULD NORMALLY CONTAIN THE ADDRESS OF A WORK AREA.            * 00509402
*                                                                     * 00514702
*  REGISTERS SAVED= ALL.                                              * 00520002
*  REGISTER USAGE=                                                    * 00525302
*  REGISTERS RESTORED= ALL.                                           * 00530602
*                                                                     * 00535902
*EXIT - NORMAL=  TO COMMAND PROCESSOR                                 * 00541202
*  CONDITIONS= WHEN ALL PARAMATERS HAVE BEEN SUCCESSFULLY PROCESSED.  * 00546502
*  OUTPUT=                                                            * 00551802
*       -- PARAMETER DESCRIPTION LIST (PDL) POINTED TO BY THE         * 00557102
*       ANSWER PLACE. THE PDL BEGINS WITH TWO WORDS OF STORAGE CHAINS * 00562402
*       WITH THE REMAINING FIELDS VARIABLE LENGTH DEPENDENT UPON THE  * 00567702
*       TYPE OF MACROS SELECTED FOR THE PCL.ONLY THE IKJPOSIT,IKJIDENT* 00573002
*       AND IKJKEYWD MACROS RESERVE SPACE IN THE PDL. EACH ENTRY IN   * 00578302
*       THE PDL IS CALLED A PARAMETER DESCRIPTION ENTRY (PDE).        * 00583602
*  RETURN CODES= REGISTER 15 CONTAINS ZERO (0).                       * 00588902
*                                                                     * 00594202
*EXIT - ERROR=                                                        * 00599502
*       -- REGISTER 15 CONTAINS A NON-ZERO RETURN CODE.               * 00604802
*  CONDITIONS= WHENEVER AN ERROR OR A REQUEST FOR INTERRUPTION OCCURS.* 00610102
*  OUTPUT=                                                            * 00615402
*       IN ADDITION TO THE ERROR RETURN CODES, THE PDL ADDRESS IN THE * 00620702
*       ANSWER PLACE IS SET TO X'FF000000'.                           * 00626002
*  RETURN CODES=                                                      * 00631302
*       -- REGISTER 15 CONTAINS A -                                   * 00636602
*                            04 RETURN CODE, UNABLE TO PROMPT         * 00641902
*                            08 RETURN CODE, PROCESSING INTERRUPTED BY* 00647202
*                               ATTENTION                             * 00652502
*                            12 RETURN CODE, INVALID PARAMETERS PASSED* 00657802
*                               TO PARSE FROM CP                      * 00663102
*                            16 RETURN CODE, NO SPACE AVAILABLE       * 00668402
*                            20 RETURN CODE, VALIDITY CHECK ROUTINE   * 00673702
*                               REQUESTED TERMINATION                 * 00679002
*                            24 - AN ERROR IN INPUT PARAMETERS        * 00684302
*                                 WAS DETECTED IN THE IKJPARS2        * 00689602
*                                 LOAD MODULE.                        * 00694902
*                            28 - A LINE DROP CONDITION WAS DETECTED  * 00700202
*                                 BY TPUT OR TGET WHICH CAUSED PUTLINE* 00705502
*                                 OR PUTGET TO SET RETURN CODES OF 24 * 00710802
*                                 AND 32, RESPECTIVELY.         Y02666* 00716102
*                                                                     * 00721402
*EXTERNAL REFERENCES=                                                 * 00726702
*  ROUTINES=                                                          * 00732002
*                     --  IKJEFP10 (PARSE MESSAGE MODULE)             * 00737302
*                         IKJEFP20 (PARSE GENERAL SCAN MODULE)        * 00742602
*                         IKJPUTL  (PUTLINE I/O SERVICE ROUTINE)      * 00747902
*                         IKJPTGT  (PUTGET I/O SERVICE ROUTINE)       * 00753202
*                         IKJPARS2 - SEPARATE LOAD MODULE TO          * 00758502
*                         COBOL SYMBOLIC DEBUG SCAN AND PROMPT.       * 00763802
*                         PCE TYPES HANDLED BY THE NEW LOAD           * 00769102
*                         MODULE ARE:                                 * 00774402
*                                      1) IKJOPER                     * 00779702
*                                      2) IKJTERM                     * 00785002
*                                      3) IKJRSVWD                    * 00790302
*  DATA AREAS=                                                        * 00795602
*       -- MACRO IKJEFPWA IS USED TO DEFINE THE WORK AREA             * 00800902
*       OBTAINED DURING INITIALIZATION BY IKJEFP00. IKJEFP20 ALSO     * 00806202
*       REFERENCES THIS AREA THROUGH THE USE OF THE IKJEFPWA MACRO.   * 00811502
*  CONTROL BLOCKS=                                                    * 00816802
*       ECT - U                                                       * 00822102
*       UPT - U                                                       * 00827402
*                                                                     * 00832702
*TABLES= IKJEFPWA - PARSE ROUTINE'S WORKAREA.                         * 00838002
*       USER PCE - U                                                  * 00843302
*       USER PDE - C, U, D                                            * 00848602
*                                                                     * 00853902
*MACROS=                                                              * 00859202
*       IKJEFPWA, FREEMAIN, GETMAIN, RETURN, SAVE, MODID, LOAD, DELETE* 00864502
*  SERIALIZATION= N/A                                                 * 00869802
*                                                                     * 00875102
*CHANGE ACTIVITY=                                                     * 00877100
*       APAR 16362 - DELETE LINE THAT UPDATED ENDINPUT POINTR @ZA16362* 00880400
*                                                                     * 00885702
*MESSAGES=                                                            * 00891002
*       IKJ56700A ENTER XXX                                           * 00896302
*       IKJ56701  MISSING XXX (+)                                     * 00901602
*       IKJ56702I INVALID, XXX, YYY                                   * 00906902
*       IKJ56703A REENTER(+)                                          * 00912202
*       IKJ56704I XXX AMBIGUOUS                                       * 00917502
*       IKJ56705  MISSING PASSWORD FOR XXX                            * 00922802
*       IKJ56706I ENDING QUOTE ASSUMED, XXX                           * 00928102
*       IKJ56707I RIGHT PARENTHESIS ASSUMED, XXX                      * 00933402
*       IKJ56708I INVALID CURRENT PASSWORD                    @Z40RPKQ* 00935400
*       IKJ56709I INVALID DATA SET NAME, YYY                          * 00944002
*       IKJ56710I INVALID USERID, YYY                                 * 00949302
*       IKJ56711I INVALID ADDRESS, YYY                                * 00954602
*       IKJ56712I INVALID KEYWORD, YYY                                * 00959902
*       IKJ56713I INVALID VALUE, YYY                                  * 00965202
*       IKJ56714A ENTER CURRENT PASSWORD                      @Z40RPKQ* 00967200
*       IKJ56715I INVALID STRING, YYY                                 * 00975802
*       IKJ56716I EXTRANEOUS INFORMATION - IGNORED, XXX               * 00981102
*       IKJ56717I INVALID XXX                                         * 00986402
*       IKJ56718A REENTER+                                            * 00987402
*       IKJ56719I INVALID JOBNAME, YYY                                * 00988402
*       IKJ56720I INVALID DDNAME, YYY                                 * 00989402
*       IKJ56721I INVALID NEW PASSWORD                        @Z40RPKQ* 00989900
*                                                                     * 00990400
*       IKJ56722I ENTER NEW PASSWORD                          @Z40RPKQ* 00990900
*                                                                     * 00991702
*ABEND CODES= N/A                                                     * 00997002
*                                                                     * 01002302
*********************************************************************** 01007602
*                                                                     * 01012902
* RELEASE 20 SUPPORT CODE -- 20035                                    * 01018202
* RELEASE 1.6 SUPPORT CODE -- Y01156   (OCIP ITEMS)                   * 01023502
* RELEASE 2.0 SUPPORT CODE -- Y02666                                  * 01028802
* RELEASE 3.0 SUPPORT CODE -- Y30NQJN                                 * 01034103
* RELEASE 4.0 SUPPORT CODE -- Z40PQRD                                   01034500
* RELEASE 4.0 SUPPORT CODE TO FIX REL 3.0 APAR OZ04540--M4540           01034900
* RELEASE 4.0 SUPPORT CODE FOR SU11 AND SU13, ALSO TO FIX     @Z40RPKQ* 01035300
*             PTM VS43136                                     @Z40RPKQ* 01035700
*                                                                     * 01036103
*********************************************************************** 01039402
*                                                                       01044702
IKJEFP00 CSECT                                                          01050001
*                                                                       01060001
         EXTRN TRTAB,UPPERTAB,IKJEFP10,IKJEFP03 EXTERNAL REFERENCES     01066003
         ENTRY POSITX1,STALOC,GETCORE,QSTR01,POSITX,ILLADDR             01066403
         ENTRY RANGE,SKIPB,PROMPTQ,TYPETEST,LISTT                       01067703
*                                                               Y30NQJN 01067803
         ENTRY IKJPARS                 ESTABLISH ENTRY POINT            01068001
IKJPARS  DS    0H                      FOR PARSE                        01068401
*                                                                       01068501
R0       EQU   0                       SCRATCH/PARAMETER REGISTER --    01068601
*                                         MUST BE 0                     01070020
R1       EQU   1                       SCRATCH/PARAMETER REGISTER --    01080020
*                                         MUST BE 1                     01090020
R2       EQU   2                       GENERAL SCRATCH REGISTER         01100020
R3       EQU   3                       GENERAL SCRATCH REGISTER         01110020
XINPUT   EQU   4                       NEXT CHARACTER TO SCAN           01120020
XINPUTB  EQU   5                       LAST CHARACTER SCANNED USED TO   01130020
*                                         COMPUTE LENGTH OF SCANNED     01140020
*                                         DATA                          01150020
R5       EQU   5                       USED AS REG. 5            Y02666 01152002
XPCE     EQU   6                       ALWAYS POINTS TO THE CURRENT PCE 01160020
BASE3    EQU   7                       ADDITIONAL BASE REGISTER FOR     01170020
*                                         FIRST CSECT                   01180020
LINK2    EQU   8                       SECOND LEVEL LINKAGE REGISTER    01190020
*                                         FOR LINKAGE BETWEEN           01200020
*                                         SUBROUTINES                   01210020
LINK1    EQU   9                       FIRST LEVEL LINKAGE REGISTER FOR 01220020
*                                         LINKAGE BETWEEN MAINLINE AND  01230020
*                                         SUBROUTINES                   01240020
R9       EQU   9                       TEMPORARY WORK REGISTER   Y02666 01242002
BASE2    EQU   10                      BASE REGISTER FOR SECOND CSECT   01250020
BASE1    EQU   11                      MAINLINE BASE REGISTER           01260020
RBASE    EQU   12                      BASE REGISTER FOR CURRENT        01270020
*                                         RECURSIVE WORKSPACE           01280020
PBASE    EQU   13                      BASE REGISTER FOR PERMANENT      01290020
*                                         WORKSPACE -- MUST BE 13       01300020
R14      EQU   14                      SCRATCH/RETURN REGISTER -- MUST  01310020
*                                         BE 14                         01320020
R15      EQU   15                      SCRATCH/CALL REGISTER -- MUST BE 01330020
*                                         15                            01340020
         EJECT                                                          01350020
*                                                                       01360020
* BIT PATTERNS USED TO TEST THE OPTIONS SELECTED BY THE USER AND        01370020
* REFLECTED IN VARIOUS BYTES IN THE PCE.                                01380020
*                                                                       01390020
PCEFIDNT EQU   B'10000000'             BITS 0-2 - IKJIDENT PCE          01400020
PCEFPOST EQU   B'00100000'             BITS 0-2 - IKJPOSIT PCE          01410020
PCEFKYWD EQU   B'01000000'             BITS 0-2 - IKJKEYWD PCE          01420020
PCEFNAME EQU   B'01100000'             BITS 0-2 - IKJNAME PCE           01430020
PCEFSUEN EQU   B'00000000'             BITS 0-2 - IKJSUBF OR IKJENDP    01440020
*                                         PCE                           01450020
PCEFPRPT EQU   B'00010000'             BIT 3  - PROMPT IS SPECIFIED     01460020
PCEFDFLT EQU   B'00001000'             BIT 4  - DEFAULT IS SPECIFIED    01470020
PCEFSUBF EQU   B'00000100'             BIT 5  - SUBFIELD IS SPECIFIED   01480020
PCEFHELP EQU   B'00000010'             BIT 6  - HELP IS SPECIFIED       01490020
PCEFVCHK EQU   B'00000001'             BIT 7  - VALIDITY CHECK EXIT IS  01500020
*                                         SPECIFIED                     01510020
PCEFLIST EQU   B'10000000'             BIT 8  - LIST IS SPECIFIED       01520020
PCEFASIS EQU   B'01000000'             BIT 9  - NO TRANSLATION REQUIRED 01530020
PCEFRNGE EQU   B'00100000'             BIT 10 - RANGE IS SPECIFIED      01540020
PCEFINST EQU   B'00010000'             BIT 11 - INSERT IS SPECIFIED     01550020
PCEFQSTR EQU   B'00001000'             BIT 12 - SPECIAL STRING HANDLING 01552020
PCEFUID  EQU   B'00000100'             BIT 13 - PREFIX USERID TO        01558002
*                                      UNQUOTED DATA SET NAME    Y02666 01558402
PCEFVSER EQU   B'00000010'             BIT 14 - PROCESS VOLUME SERIAL   01558502
*                                          NAME (IKJPOSIT MACRO) Y02666 01558602
PCEFDDN  EQU   B'00000001'             BIT 15 - ISSUE DDNAME MESSAGE    01558702
*                                               (IKJPOSIT MACRO) Y02666 01560902
PCEFALS  EQU   B'00000010'             BIT 14 - ALIAS SPECIFIED  Y02666 01563402
*                                            (IKJIDENT MACRO)    Y02666 01565602
* IKJIDENT OPTIONS.                                                     01567802
PCEFASTK EQU   B'10000000'             BIT 0  - ASTERISK IS ALLOWED     01570020
PCEFMAXL EQU   B'01000000'             BIT 1  - MAXLNTH IS SPECIFIED    01580020
PCEFPTBY EQU   B'00100000'             BIT 2  - USE PRINT INHIBIT MODE  01590020
*                                         WHEN PROMPTING                01600020
         SPACE                                                          01610020
*                                                                       01620020
* RECURSIVE WORKSPACE FLAGS.                                            01630020
*                                                                       01640020
RFKYPRSE EQU   X'80'                   KEYWORDS HAVE BEEN PARSED ONCE   01650020
RFQDSNM  EQU   X'40'                   A QUOTED DSNAME IS BEING         01660020
*                                         PROCESSED                     01670020
RFERASE  EQU   X'20'                   AN ERASE IS BEING PERFORMED      01680020
RFPRES   EQU   X'10'                   USED TO INDICATE A KEYWORD PCE   01690020
*                                         WAS ENCOUNTERED IN THE PCL,   01700020
*                                         IF OFF, AN EXTRANEOUS         01710020
*                                         INFORMATION MESSAGE IS        01720020
*                                         PRINTED INSTEAD OF AN         01730020
*                                         INVALID KEYWORD MESSAGE       01740020
RFKEYWDS EQU   X'08'                   THE NEXT RECURSION LEVEL IS FOR  01750020
*                                         A KEYWORD PARAMETER           01760020
RFMEMB   EQU   X'04'                   INDICATES A MEMBER NAME IS BEING 01770020
*                                         PROCESSED                     01780020
RFNOTQ1  EQU   X'02'                   INDICATES THE FIRST QUALIFIER IS 01790020
*                                         NOT BEING PROCESSED           01800020
RFNOSKIP EQU   X'01'                   INDICATES BLANKS SHOULD NOT BE   01810020
*                                         SKIPPED AFTER A PROMPT        01820020
         EJECT                                                          01830020
*                                                                       01840020
* PERMANENT WORKSPACE FLAGS.                                            01850020
*                                                                       01860020
* P F L A G S                                                           01870020
PFLIST   EQU   X'80'                   CURRENTLY PROCESSING A LIST      01880020
PFDEFLT  EQU   X'40'                   INDICATES A DEFAULT TAKEN        01890020
PFENDF   EQU   X'20'                   END OF INPUT AREA HAS BEEN       01900020
*                                         REACHED                       01910020
ADREXP   EQU   X'10'                   INDICATE ADDR EXPRESSION   M4789 01920020
HEXBIT   EQU   X'08'                   ADDRESS EXPRESSION CONTAINS      01930020
*                                         A HEX CHARACTER               01940020
PFBYPAS  EQU   X'04'                   BYPASS MODE IS TO BE ESTABLISHED 01950020
PFNEW    EQU   X'02'                   USED BY ADDRESS ROUTINE TO       01960020
*                                         DENOTE A NEW VALID ADDRESS    01970020
*                                         ENTRYNAME (WITH OR WITHOUT    01980020
*                                         LOADNAME QUALIFICATION)       01990020
DECBIT   EQU   X'01'                   ADDRESS EXPRESSION IS DECIMAL    02000020
* P F L A G S 2                                                         02010020
PFSKPINV EQU   X'80'                   VALIDITY CHECK ROUTINE REQUESTED 02020020
*                                         A REENTER MESSAGE ONLY        02030020
RNGEVAL1 EQU   X'40'                   ADDRESS ROUTINE PROCESSED FIRST  02040020
*                                         VALUE OF RANGE PARAMETER      02050020
ONERBIT  EQU   X'20'                   CONTROL BIT USED DURING SCAN     02060020
*                                         BY ADDRESS ROUTINE            02070020
TWORBIT  EQU   X'10'                   CONTROL BIT USED DURING SCAN     02080020
*                                         BY ADDRESS ROUTINE            02090020
RNGEVAL2 EQU   X'08'                   ADDRESS ROUTINE PROCESSED        02100020
*                                         SECOND VALUE OF RANGE         02110020
*                                         PARAMETER                     02120020
REGBIT   EQU   X'04'                   CONTROL BIT USED DURING SCAN     02130020
*                                         BY ADDRESS ROUTINE            02140020
FLTERBIT EQU   X'02'                   CONTROL BIT USED DURING SCAN     02150020
*                                         BY ADDRESS ROUTINE            02160020
BREAKBIT EQU   X'01'                   USED BY ADDRESS ROUTINE TO       02170020
*                                         DENOTE A BREAK CHARACTER IN   02180020
*                                         PARAMETER                     02190020
* P F L A G S 3                                                         02200020
PFSTPRMT EQU   X'80'                   PROMPT FOR STRING                02210020
PFONE    EQU   X'40'                   INDICATES AT LEAST ONE PDE       02220020
*                                         PDE HAS BEEN BUILT            02230020
LOADBIT  EQU   X'20'                   CONTROL BIT USED BY ADDRESS RTN  02240020
*                                         DENOTING LOADNAME DATA        02250020
ENTRYBIT EQU   X'10'                   CONTROL BIT USED BY ADDRESS RTN  02260020
*                                      DENOTING ENTRYNAME DATA          02270020
PFNULL   EQU   X'08'                   INDICATES A NULL LINE WAS        02280002
*                                        ENTERED AFTER A PROMPT         02290020
LPRNFND  EQU   X'04'                   USED TO INDICATE A LEFT PAREN    02300020
*                                         WAS FOUND BY THE ERROR RTN.   02310020
PFSPACE  EQU   X'02'                   USED TO INDICATE A POSITIONAL    02320020
*                                         SPACE PARAMETER WAS           02330020
*                                         ENCOUNTERED SO THAT THE       02340020
*                                         POSITIONAL STRING ROUTINE     02350020
*                                         KNOWS WHEN TO END THE STRING  02360020
PFMORE   EQU   X'01'                   USED TO INDICATE IF THE LEFT     02370020
*                                         PAREN OF A SUBFIELD WAS       02380020
*                                         ALSO USED AS THE LEFT PAREN   02390020
*                                         OF THE LIST WITHIN THE        02400020
*                                         SUBFIELD                      02410020
* P F L A G S 4                                                         02420020
PFENDLIM EQU   X'80'                   INDICATES END DELIMITER          02430020
*                                         FOR A SELF-DELIMITING STRING  02440020
*                                         HAS BEEN FOUND                02450020
PFLSTEND EQU   X'40'                   INDICATES LIST END DELIMITER     02460020
*                                         HAS BEEN FOUND                02470020
PFVCMSG  EQU   X'20'                   INDICATES A VALIDITY CHECK       02480020
*                                         ROUTINE HAS SUPPLIED A SECOND 02490020
*                                       LEVEL MESSAGE                   02500020
PFPDDATA EQU   X'10'                   INDICATE PROCESSING PROMPT OR    02510020
*                                         DEFAULT DATA                  02520020
PFSLASH  EQU   X'08'                   INDICATE DSNAME/USERID ROUTINE   02530020
*                                         IS SCANNING FOR PASSWORD      02540020
PFENDSET EQU   X'04'                   INDICATES BACKUP POINTER FOR     02550020
*                                         ENDINPUT HAS BEEN SET         02560020
PFNOPOP  EQU   X'02'                   INDICATES STACK IS NOT TO  M0911 02562020
*                                         BE POPPED IF ALL SEPARATORS   02564020
*                                         IN PROMPT BUFFER              02566020
CKRANGE  EQU   X'01'                   ADDR ROUTINE SHOULD CHECK  M4789 02568020
*                                         FOR RANGE                     02568420
* P F L A G S 5                                                         02568801
PFSQSTR  EQU   X'80'                   SPECIAL QSTRING HANDLING         02569201
*                                         DONE AT LEAST ONCE            02569601
INVPRMPT EQU   X'40'                   CHECK FOR INVALID MESSAGE PROMPT 02569701
*                                      THIS FLAG IS ALSO USED TO TEST   02571701
*                                      THE PROMPT FLAG IN THE UPT       02572101
*                                      TO INDICATE IF THE USER IS       02572501
*                                      IN NOPROMPT MODE OR NOT   Y05020 02572601
SUBFLG   EQU   X'20'                   INDICATE SUBFIELD IS BEING       02573201
*                                      PROCESSED                 Y01156 02575201
INVFLG   EQU   X'10'                   INVALID INPUT WAS FOUND FOR USER 02575601
*                                      IN NOPROMPT MODE          Y01156 02576001
BYPASFLG EQU   X'08'                   INDICATE BYPASS MODE FOR INVALID 02576401
*                                      BUFFER                    Y01156 02576501
RPRNFND  EQU   X'04'                   RIGHT PAREN FOUND FLAG    Y01156 02576601
         EJECT                                                          02576701
PSWDFLG  EQU   X'02'                   INDICATE PASSWORD IS BEING       02579902
*                                      PROCESSED                 Y02666 02582302
DSNFLG   EQU   X'01'                   INDICATE DSNAME IS BEING         02582702
*                                      PROCESSED                 Y02666 02583102
* P F L A G S 6                                                  Y02666 02583302
ALIASFLG EQU   X'80'                   INDICATE AN ALIAS WAS FOUND      02583402
*                                                                Y02666 02586602
PSWDQFLG EQU   X'40'                   INDICATE QUOTED PASSWORD  Y02666 02588602
HEXFLG   EQU   X'20'                   HEXADECIMAL TYPE IN PROCESS      02589002
*                                                                Y02666 02589802
DECFLG   EQU   X'10'                   DECIMAL VALUE IN PROCESS  Y02666 02589902
BINFLG   EQU   X'08'                   BINARY INTEGER PROCESS    Y02666 02590002
CHARFLG  EQU   X'04'                   CHARACTER VALUE PROCESS   Y02666 02590102
NUMFLG   EQU   X'02'                   NUMERIC VALUE PROCESS     Y02666 02593302
PDEHEX   EQU   X'01'                   CONVERTED HEXADECIMAL VALUE      02595302
*                                                                Y02666 02595402
* P F L A G S 7                                                  Y02666 02599802
VOLSERF  EQU   X'80'                  INDICATE VOLUME SERIAL IN PROCESS 02599902
*                                                                Y02666 02602702
VALENDF  EQU   X'40'                   INDICATE END OF BUFFER NOT       02604702
*                                      REACHED,CHECK DELIMITR    Y02666 02605102
DSNAMEF  EQU   X'08'                   INDICATE TO DSNAME IN PROCESS    02609002
*                                      DURING VALIDITY CHECKING  Y02666 02610002
RPAREND  EQU   X'04'                   INDICATE END OF SUBFIELD FOR     02610503
*                                       ENDFIELD ROUTINE        Y30NQJN 02611003
         EJECT                                                          02611602
PSW2SET  EQU   X'02'                   SET 4R TO NEW PASSWORD           02612500
*                                                              @ZR0RPKQ 02613400
*                                                                       02614402
* MESSAGE EQUATES.                                                      02617202
*                                                                       02620002
MSG1     EQU   0                       ENTER 'PROMPT DATA'              02623002
MSG2     EQU   4                       MISSING 'PROMPT DATA'            02626002
MSG3     EQU   8                       REENTER                          02630020
MSG4     EQU   12                      AMBIGUOUS                        02640020
MSG5     EQU   16                      MISSING PASSWORD                 02650020
MSG6     EQU   20                      INVALID 'PARAMETER TYPE'         02660020
MSG7     EQU   24                      END QUOTE ASSUMED                02670020
MSG8     EQU   28                      RIGHT PAREN ASSUMED              02680020
MSG9     EQU   32                      INVALID CURRENT PASSWORD         02683000
*                                                              @Z40RPKQ 02686000
MSG10    EQU   36                      INVALID DATA SET NAME            02700020
MSG11    EQU   40                      INVALID USERID                   02710020
MSG12    EQU   44                      INVALID ADDRESS                  02720020
MSG13    EQU   48                      INVALID KEYWORD                  02730020
MSG14    EQU   52                      INVALID VALUE                    02740020
MSG15    EQU   56                      ENTER CURRENT PASSWORD  @Z40RPKQ 02745000
MSG16    EQU   60                      INVALID STRING                   02760020
MSG17    EQU   64                      EXTRANEOUS INFORMATION           02770020
MSG18    EQU   68                      INVALID                          02772020
MSG3A    EQU   72                      REENTER+                  Y01156 02774001
MSG19    EQU   76                      INVALID JOBNAME           Y02666 02776002
MSG20    EQU   80                      INVALID DDNAME            Y02666 02778002
MSG21    EQU   84                      INVALID NEW PASSWORD    @Z40RPKQ 02778600
MSG22    EQU   88                      ENTER NEW PASSWORD      @Z40RPKQ 02779200
         SPACE                                                          02780020
*                                                                       02790020
* MISCELLANEOUS EQUATES.                                                02800020
*                                                                       02810020
ZERO     EQU   0                       USED AS A ZERO                   02820020
ONE      EQU   1                       USED AS A ONE                    02830020
TWO      EQU   2                       USED AS A TWO                    02840020
THREE    EQU   3                       USED AS A THREE                  02850020
FOUR     EQU   4                       USED AS A FOUR                   02860020
FIVE     EQU   5                       USED AS A FIVE                   02870020
SIX      EQU   6                       USED AS A SIX                    02880020
SEVEN    EQU   7                       USED AS A SEVEN                  02890020
EIGHT    EQU   8                       USED AS A EIGHT                  02900020
TWELVE   EQU   12                      USED AS A TWELVE                 02910020
FIFTEEN  EQU   15                      USED AS A FIFTEEN                02920020
SIXTEEN  EQU   16                      USED AS A SIXTEEN                02930020
TWENTY   EQU   20                      USED AS A TWENTY                 02940020
TWENTY3  EQU   23                      USED AS A TWENTY-THREE           02950020
TWENTY4  EQU   24                      USED AS A TWENTY-FOUR            02960020
TWENTY8  EQU   28                      USED AS A TWENTY-EIGHT           02970020
THIRTY2  EQU   32                      USED AS A THIRTY-TWO             02980020
THIRTY5  EQU   35                      USED AS A THIRTY-FIVE            02990020
THIRTY6  EQU   36                      USED AS A THRITY-SIX             03000020
NINETY2  EQU   92                      USED AS 92                F41448 03002001
WRKLEN   EQU   X'9C'                   LENGTH OF COBOL           F41448 03004001
*                                      PORTION OF WORKSPACE      F41448 03006001
H00      EQU   X'00'                   USED TO MAINPULATE FLAG BITS     03010020
HFF      EQU   X'FF'                   USED TO MAINPULATE FLAG BITS     03020020
HA0      EQU   X'A0'                   USED IN PCE CHECKING FOR  F41448 03022001
*                                      COBOL                     F41448 03024001
H80      EQU   X'80'                   USED BY ADDRESS RTN TO           03030020
*                                         MANIPULATE BITS               03040020
HE0      EQU   X'E0'                   USED TO OBTAIN TYPE INDICATOR    03050020
*                                         FROM PCE FLAG BYTE            03060020
H01      EQU   X'01'                   USED TO TEST FOR VALID VALIDITY  03070020
*                                         CHECK ROUTINE ADDRESS         03080020
H18      EQU   X'18'                   TEST FOR RSVD OR SUBSCRPT F41448 03082001
PRESENT  EQU   X'80'                   USED TO SET FLAGS                03090020
BKGRND   EQU   X'02'                   TEST BACKGROUND MODE      Y02666 03092001
QUOTED   EQU   X'40'                   USED TO SET FLAGS                03100020
LENMLLST EQU   20                      LENGTH OF MULTI-LEVEL ELEMENT    03110001
*                                         FOR HELP MESSAGES             03120020
SEMICOLN EQU   C';'                    SEMICOLON                        03130020
COLON    EQU   C':'                    COLON                            03140020
EQUALSN  EQU   C'='                    EQUAL SIGN                Y02666 03142002
INSPROC  EQU   X'02'                   PROCEDURE FLAG            Y02666 03144002
INSPROM  EQU   X'04'                   PROC PROMPT FLAG          Y02666 03147002
INSEXEC  EQU   X'08'                   EXEC COMMAND STACK ENTRY Z40PQRD 03148000
BKCHAR   EQU   C'_'                    BREAK CHARACTER                  03150020
RIGHTPRN EQU   C')'                    RIGHT PARENTHESIS                03160020
LEFTPRN  EQU   C'('                    LEFT PARENTHESIS                 03170020
BLNK     EQU   C' '                    BLANK                            03180020
COMMA    EQU   C','                    COMMA                            03190020
TABCHAR  EQU   X'05'                   HORIZONTAL TAB CHARACTER         03200020
NLCHAR   EQU   X'15'                   NEW LINE CHARACTER               03210020
QUOTE    EQU   C''''                   QUOTATION MARK                   03220020
PERIOD   EQU   C'.'                    PERIOD                           03230020
SLASH    EQU   C'/'                    SLASH                            03240020
ASTERISK EQU   C'*'                    ASTERISK                         03250020
PLUS     EQU   C'+'                    PLUS SIGN                        03260020
EBCDIC0  EQU   C'0'                    CHARACTER 0                      03270020
EBCDIC1  EQU   C'1'                    CHARACTER 1                      03280020
EBCDIC2  EQU   C'2'                    CHARACTER 2                      03290020
EBCDIC3  EQU   C'3'                    CHARACAER 3                      03300020
EBCDIC4  EQU   C'4'                    CHARACTER 4                      03310020
EBCDIC5  EQU   C'5'                    CHARACTER 5                      03320020
EBCDIC6  EQU   C'6'                    CHARACTER 6                      03330020
CC1      EQU   1                       CONDITION CODE ONE (BO)          03340020
CC4      EQU   4                       MIXED CONDITION CODE      F41448 03342001
CC9      EQU   9                       BRANCH ON NOT MIXED       F41448 03344001
CC5      EQU   5                       CONDITION CODE FIVE              03350020
CC7      EQU   7                       CONDITION CODE SEVEN (NZ OR NE)  03360020
CC8      EQU   8                       CONDITION CODE EIGHT (0 OR EQ)   03370020
CC10     EQU   10                      CONDITION CODE 10          M4540 03375000
IPDLMAXE EQU   10                      MAXIMUM INPUT STACKING DEPTH FOR 03380020
*                                         A INPUT PUSHDOWN STACK        03390020
DSNMAXLN EQU   44                      MAXIMUM LENGTH OF A DSNAME       03400020
DATAPRES EQU   X'80'                   PDE FLAG TO INDICATE DATA THERE  03410020
         SPACE                                                          03420020
*                                                                       03430020
* EQUATES FOR POSITIONAL ADDRESS ROUTINE.                               03440020
*                                                                       03450020
COUNTER  EQU   2                       USED TO CONTROL MAXIMUM SIZE     03460020
LEVELS   EQU   3                       USED TO CONTROL MAXIMUM SIZE     03470020
RELATIVE EQU   C'+'                    DENOTES AN ADDRESS EXPRESSION    03480020
MORE     EQU   RELATIVE                                                 03490020
CHECK    EQU   1                       TO INTERFACE WITH TYPETEST RTN   03500020
PERCENT  EQU   C'%'                    DENOTES LEVELS OF INDIRECT       03510020
*                                         ADDRESSES                     03520020
LESS     EQU   C'-'                    DENOTES AN ADDRESS EXPRESSION    03530020
PL1BIT   EQU   X'80'                   PL1 REQUIREMENT                  03540020
LOCATPDE EQU   8                       USED TO LOCATE LAST EXPRESSION   03550020
*                                         VALUE ON CHAIN                03560020
D        EQU   C'D'                    USED TO TEST FOR DOUBLE          03570020
*                                         PRECISION                     03580020
LOWD     EQU   X'84'                   LOWER CASE IS VALID              03590020
E        EQU   C'E'                    USED BY ADDRESS RTN TO CHECK     03600020
*                                         FOR SINGLE PRECISION          03610020
LOWE     EQU   X'85'                   LOWER CASE IS VALID              03620020
R        EQU   C'R'                    USED BY ADDRESS RTN TO CHECK     03630020
*                                         FOR GENERAL REGISTER          03640020
LOWR     EQU   X'99'                   LOWER CASE IS VALID              03650020
NNN      EQU   C'N'                    DENOTES DECIMAL AS OPPOSED TO    03660020
*                                         HEXIDECIMAL EXPRESSION VALUE  03670020
LOWNNN   EQU   X'95'                   LOWER CASE IS VALID              03680020
*                                         THE FOLLOWING SYMBOLIC LABELS 03690020
*                                         ARE USED WHEN REFERENCING AN  03700020
*                                         ADDRESS EXPRESSION PDE        03710020
ADDRDATA EQU   0                       POINTER TO ADDRESS STRING        03720020
ADDRLNTH EQU   4                       POINTER TO ADDRESS LENGTH        03730020
ADDRFLGS EQU   8                       INDICATES TYPE OF EXPRESSION     03740020
*                                         VALUE                         03750020
ADDRSIGN EQU   9                       ARITHMETIC SIGN CHARACTER USED   03760020
*                                         BEFORE NEXT EXPRESSION VALUE  03770020
*                                         ZERO IF LAST VALUE TO CHAIN   03780020
ADDRCNT  EQU   10                      NUMBER OF LEVELS OF INDIRECT     03790020
*                                         ADDRESSING                    03800020
ADDRPTR  EQU   12                      POINTER TO NEXT EXPRESSION       03810020
*                                         VALUE                         03820020
TINYPDE  EQU   1                       R1(TINYPDE)USED AS POINTER TO    03830020
*                                         CORE GOTTEN FOR ADDRESS       03840020
*                                         EXPRESSION                    03850020
HEXVALUE EQU   X'02'                   USED BY ADDRESS SUBROUTINE TO    03860020
*                                         DENOTE A HEXADECIMAL          03870020
*                                         EXPRESSION VALUE              03880020
DECVALUE EQU   X'04'                   USED BY ADDRESS SUBROUTINE TO    03890020
*                                         DENOTE A DECIMAL EXPRESSION   03900020
*                                         VALUE                         03910020
SYMADR   EQU   X'80'                   SYMBOLIC ADDRESS FLAG            03920020
RELADR   EQU   X'40'                   RELATIVE ADDRESS FLAG            03930020
ABSADR   EQU   X'00'                   ABSOLUTE ADDRESS FLAG      M5957 03940001
REG      EQU   X'20'                   REGISTER NOTATION FLAG           03950020
DPFPR    EQU   X'10'                   USED TO DENOTE DOUBLE PRECISION  03960020
*                                         FLOATING POINT REGISTER       03970020
SPFPR    EQU   X'08'                   USED TO DENOTE SINGLE PRECISION  03980020
*                                         FLOATING POINT REGISTER       03990020
ENTRYNAM EQU   X'04'                   USED BY ADDRESS RTN TO DENOTE    04000020
*                                         A NON-QUALIFYING ENTRYNAME    04010020
*                                         (PRECEDED BY AN OPTIONAL      04020020
*                                         LOADNAME)                     04030020
EMPTYFLG EQU   X'02'                   INITIAL SETTING OF DATAFLG -     04032020
*                                       NO ADDR TYPE YET IDENTIFIED     04034020
         SPACE                                                          04040020
*                                                                       04050020
* OFFSETS FOR REQUIRED FIELDS IN MACROS.                                04060020
*                                                                       04070020
PCEPCLLN EQU   0                       PCL LENGTH FIELD IN IKJPARM      04080020
PCEPDLLN EQU   2                       PDL LENGTH FIELD IN IKJPARM      04090020
PCEKYEND EQU   4                       IKJKEYWD OR END-OF-FIELD OFFSET  04100020
*                                         IN IKJPARM                    04110020
PCEFLGB1 EQU   0                       FLAG BYTE 1                      04120020
PCEFLGB2 EQU   1                       FLAG BYTE 2                      04130020
PCELEN   EQU   2 - 3                   PCE LENGTH                       04140020
PCEPDEO  EQU   4 - 5                   PDE OFFSET INTO PDL              04150020
PCEPOST  EQU   6                       TYPE OF POSITIONAL PARAMETER     04160020
PCENAML  EQU   4                       LENGTH OF NAME FOR IKJNAME       04170020
PCENAMN  EQU   5 - N                   NAME SPECIFIED                   04180020
PCEOPT   EQU   6                       IKJIDENT OPTION BYTE             04190020
PCEFIRST EQU   7                       IKJIDENT FIRST CHARACTER FLAGS   04200020
PCEOTHER EQU   8                       IKJIDENT OTHER CHARACTER FLAGS   04210020
PCEPARMT EQU   9                       IKJIDENT PARAMETER TYPE SEGMENT  04220020
         SPACE                                                          04230020
*                                                                       04240020
* MESSAGE OFFSETS TO BE INSERTED INTO CONSTRUCTED MESSAGE SEGMENTS.     04250020
*                                                                       04260020
OFFSET1  EQU   16                      OFFSET FOR ENTER                 04270020
OFFSET2  EQU   37                      OFFSET FOR ENTER CURRENT         04273000
*                                     PASSWORD               @Z40RPKQ   04276000
OFFSET3  EQU   44                      OFFSET FOR EXTRANEOUS INFOR.     04290020
OFFSET4  EQU   37                      OFFSET FOR RIGHT PAREN ASSUMED   04300020
OFFSET5  EQU   32                      OFFSET FOR END QUOTE ASSUMED     04310020
OFFSET6  EQU   10                      OFFSET FOR AMBIGUOUS KEYWORD     04320020
OFFSET21 EQU   22                      OFFSET FOR REENTER-KEYWD Y01156  04321000
OFFSET22 EQU   33                      OFFSET FOR ENTER NEW PASSWORD    04322000
*                                                              @Z40RPKQ 04324000
         SPACE                                                          04330020
*                                                                       04340020
* BIT SETTINGS USED BY TYPETEST FOR SYNTAX CHECKING CHARACTERS.         04350020
*                                                                       04360020
HEX      EQU   X'80'                   HEX CHARACTER                    04370020
OLETTER  EQU   X'40'                   LETTER NOT A HEX LETTER          04380020
NATL     EQU   X'20'                   NATIONAL CHARACTER               04390020
NUMBER   EQU   X'10'                   NUMBER                           04400020
SEPAR    EQU   X'08'                   SEPARATOR                        04410020
NSEPDLIM EQU   X'04'                   DELIMITER, NOT A SEPARATOR       04420020
NDLIMSPC EQU   X'02'                   SPECIAL CHAR NOT A DELIM OR SEP  04430020
CMDDLIM  EQU   X'01'                   COMMAND NAME DELIMITER           04440020
INVALID  EQU   X'00'                   INVALID CHAR                     04450020
ALPHA    EQU   HEX+OLETTER+NATL        ALPHABETIC CHARS                 04460020
DLIMREQD EQU   SEPAR+NSEPDLIM          A END OF PARAMETER DELIMITER IS  04470020
*                                         REQUIRED                      04480020
         SPACE                                                          04490020
*                                                                       04500020
* PARSE RETURN CODES                                                    04510020
*                                                                       04520020
RCSUCSFL EQU   0                       SUCCESSFUL COMPLETION            04530020
RCNOPRMT EQU   4                       COMMAND INCOMPLETE - UNABLE TO   04540020
*                                         PROMPT                        04550020
RCATTN   EQU   8                       PROCESSING INTERRUPTED BY ATTN   04560020
RCERROR  EQU   12                      INVALID PARAMETERS               04570020
RCNOCORE EQU   16                      NO SPACE AVAILABLE               04580020
RCVCERR  EQU   20                      VALIDITY CHECK ROUTINE INDICATED 04590020
*                                         IT COULD NOT CONTINUE (E.G.,  04600020
*                                         GETMAIN FAILURE) AND WANTS    04610020
*                                         PARSE TO TERMINATE            04620020
*  RETURN CODE OF 24 IS USED BY IKJPARS2 LOAD MODULE                  * 04620402
RCLNDROP EQU   28                      LINE DROP RETURN CODE     Y02666 04622002
         EJECT                                                          04630020
*********************************************************************** 04640020
*                                                                     * 04650020
*                        MAIN CONTROL ROUTINE                         * 04660020
*                                                                     * 04670020
*   STORAGE IS OBTAINED FOR THE PERMANENT WORKSPACE, THE PDL AND THE  * 04680020
* RECURSIVE WORKSPACE. AFTER INITIALIZING THE WORKSPACE AREAS AND THE * 04690020
* NECESSARY REGISTERS, THE NEXT PCE TYPE IS ANALYZED AND A BRANCH IS  * 04700020
* TAKEN TO THE APPROPRIATE PROCESSOR.                                 * 04710020
*                                                                     * 04720020
*********************************************************************** 04730020
*/*IKJEFP00: CHART */                                                   04730401
*/* E START */                                                          04732001
         SPACE                                                          04740020
         SAVE  (14,12)                 SAVE CALLERS REGISTERS           04750001
         SPACE                                                          04760020
         BALR  BASE1,ZERO              ESTABLISH ADDRESSABILITY         04770020
*/* P ESTABLISH ADDRESSABILITY FOR THREE CSECTS */                      04772001
         USING *,BASE1                 TO FIRST CSECT                   04780001
         MODID BRANCH=YES              FLAG                      Y01886 04782001
         SPACE                                                          04790020
         L     BASE2,ADRCST1           ESTABLISH ADDRESSABILITY         04800020
         USING IKJEFP01,BASE2              TO SECOND CSECT              04810020
         SPACE  2                                                       04820020
         L     BASE3,ADRCST2           ESTABLISH ADDRESSABILITY         04830020
         USING IKJEFP02,BASE3              TO THIRD CSECT               04840020
         SPACE                                                          04850020
         LR    R3,R1                   SAVE INPUT PARAMETER LIST ADR.   04860020
         SPACE                                                          04870020
*                                                                       04880020
* OBTAIN AND INITIALIZE PERMANENT AND FIRST RECURSIVE WORKSPACES.       04890020
*                                                                       04900020
*/* L ISSUE GETMAIN FOR PWORK AND RWORK */                              04902001
         GETMAIN R,LV=WORKSZ+RWORKSZ  OBTAIN WORKSPACES                 04910020
         SPACE                                                          04920020
         LR    R2,PBASE                SAVE CALLER SAVERAREA ADDRESS    04930020
         LR    PBASE,R1                ESTABLISH PARSES SAVEAREA AND    04940020
*                                         INITIALIZE PERMANENT          04950020
*                                         WORKSPACE BASE REGISTER       04960020
         ST    R2,FOUR(PBASE)          BACK CHAIN TO CALLERS SAVEAREA   04970020
         ST    PBASE,EIGHT(R2)         FORWARD CHAIN TO PARSES SAVEAREA 04980020
         USING PWORK,PBASE             ESTABLISH ADDRESSABILTIY TO      04990020
*                                         PERMANENT WORKSPACE           05000020
         SPACE                                                          05010020
*                                                                       05020020
* INITIALIZE THE FIRST MESSAGE SEGMENT OF THE HELP MESSAGES IN CASE THE 05030020
* FIRST MESSAGE ISSUED IS AN 'ENTER' MESSAGE BYPASSING THIS FUNCTION    05040020
* IN THE INFORMATIONAL MESSAGE SUBROUTINE (WRITER1). NO HELP MESSAGES   05050020
* ARE USED WITH THE 'ENTER PASSWORD FOR' MESSAGE.                       05060020
*                                                                       05070020
*/* P INITIALIZE FIRST MESSAGE SEGMENT FOR 'ENTER' */                   05072001
         L     R15,ADRMSGC             LOAD ADDRESS OF MESSAGE CSECT    05080020
         L     R15,MSG1(R15)           LOAD ADDRESS OF MESSAGE          05090020
         MVC   PRIMSGID(TWENTY),ZERO(R15) INITIALIZE THE FIRST          05100020
         MVI   PRIMSGID+ONE,TWENTY        SEGMENT OF HELP MESSAGES      05110020
         SPACE                                                          05120020
*                                                                       05130020
* OBTAIN INPUT PARAMETERS.                                              05140020
*                                                                       05150020
*/* P SAVE INPUT PARAMETERS */                                          05152001
         L     XPCE,TWELVE(R3)         LOAD ADR OF PCL                  05160020
         LA    XPCE,ZERO(XPCE)         CLEAR HIGH ORDER BYTE OF PCL     05170020
*                                         ADDRESS                       05180020
         ST    XPCE,PTABLEAD           SAVE PCL ADDRESS                 05190020
         L     XINPUT,TWENTY(R3)       LOAD ADR OF INPUT BUFFER TO SCAN 05200020
         LA    XINPUT,ZERO(XINPUT)     CLEAR HIGH ORDR BYTE OF INPUT    05210020
*                                         BUFFER ADDRESS                05220020
         MVC   USERWORD(L'USERWORD),TWENTY4(R3) MOVE USER WORD TO       05230020
*                                         VALIDITY CHECK EXIT           05240020
*                                         PARAMETER LIST                05250020
         MVC   SRPARAMS(TWELVE),ZERO(R3) MOVE UPT, ECT, ECB ADDRESSES   05260020
*                                         TO SERVICE ROUTINE PARM. LIST 05270020
         L     R3,SIXTEEN(R3)          LOAD ADR OF ANSWER PLACE         05280020
         LA    R3,ZERO(R3)             CLEAR HIGH ORDER BYTE OF ANSWER  05290020
*                                         PLACE ADDRESS                 05300020
         SPACE                                                          05310020
*                                                                       05320020
* INITIALIZE WORK AREAS AND SWITCHES.                                   05330020
*                                                                       05340020
*/* P INITIALIZE WORK AREAS AND SWITCHES */                             05342001
         MVC   PUTLINE(LPLEND-LPUTLINE),LPUTLINE INITIALIZE PUTLINE AND 05350020
         MVC   PUTGET(LPGEND-LPUTGET),LPUTGET    PUTGET PARAMETERS      05360020
         MVI   PFLAGS,ZERO             CLEAR FLAG BYTE AREA             05370020
         MVC   PFLAGS+ONE(SEVEN),PFLAGS  CLEAR FLAG BYTES AREA   Y02666 05380002
         LA    R2,OPEREND              GET ADDR OF START OF      F41448 05404001
*                                      COBOL PERMANENT WORKSPACE F41448 05406001
         XC    ZERO(WRKLEN,R2),ZERO(R2) CLEAR COBOL WORK AREA    F41448 05408001
         XC    TEMPPDE(CBLTPDE),TEMPPDE CLEAR THE COBOL TEMPRARY F41448 05408401
*                                      PDE                       F41448 05408801
         MVI   RETCODE,RCSUCSFL        SET USERS RETURN CODE TO ZERO    05410020
         XC    PANCHOR(L'PANCHOR+L'PANCHORT),PANCHOR ZERO INTERNAL      05420020
*                                         STORAGE CHAINS                05430020
         XC    PIPDLCHN,PIPDLCHN       ZERO INPUT PUSHDOWN STACK        05440020
*                                         STORAGE CHAIN                 05450020
         MVI   PIPDLX,ZERO             ZERO PUSHDOWN STACK INDEX        05460020
         LA    R0,PIPDLCHN             INITIALIZE CURRENT INPUT         05470020
         ST    R0,PIPDLCUR                PUSHDOWN STACK PTR            05480020
         LR    R2,XINPUT               COPY INPUT BUFFER ADDRESS        05490020
         MVC   PDWORD(TWO),ZERO(R2)    ALIGN LENGTH ON PROPER BOUNDARY  05500020
         AH    R2,PDWORD               ADD TOTAL BUFFER LENGTH TO START 05510020
*                                         ADDRESS TO GET END OF BUFFER  05520020
*                                         ADDRESS FOR FUTURE COMPARES   05530020
*/* P SAVE END OF BUFFER ADDRESS */                                     05532001
         ST    R2,ENDINPUT             SAVED TO FIND END OF BUFFER      05540020
         MVC   PDWORD(TWO),TWO(XINPUT) ALIGN OFFSET ON PROPER BOUNDARY  05550020
         LH    R1,PDWORD               SAVE FOR LATER CALCULATION       05560020
         LA    XINPUT,THREE(R1,XINPUT) POSITION SCAN POINTER JUST       05570020
*                                         BEFORE FIRST INPUT CHARACTER  05580020
         MVC   PDWORD(TWO),PCEPCLLN(XPCE) ALIGN PCL LENGTH ON PROPER    05590020
*                                         BOUNDARY                      05600020
         LH    R2,PDWORD               LOAD THE PCL LENGTH              05610020
         AR    R2,XPCE                 ADD THE PCL START ADDRESS        05620020
         ST    R2,PTABLEND             SAVE POINTER TO BYTE PAST END OF 05630020
*                                         PCL                           05640020
         MVC   PDWORD(TWO),PCEPDLLN(XPCE) ALIGN PDL LENGTH ON PROPER    05650020
*                                         BOUNDARY                      05660020
         LH    R1,PDWORD               LOAD PDL LENGTH                  05670020
*/* P POSITION SCAN POINTER TO BEFORE FIRST CHARACTER */                05672001
         LA    R2,PCEKYEND(XPCE)       SET UP A POINTER TO THE FIRST    05680020
*                                         KEYWORD PCE OFFSET OR THE     05690020
*                                         END-OF-FIELD PCE OFFSET TO BE 05700020
*                                         USED IN THE RECURSE ROUTINE   05710020
         SPACE                                                          05720020
*                                                                       05730020
* OBTAIN STORAGE FOR PDL.                                               05740020
*                                                                       05750020
*/* S STALOC: GET STORAGE FOR PDL */                                    05752001
         XC    ZERO(FOUR,R3),ZERO(R3)  ZERO ANSWER PLACE IN CASE        05760020
*                                         GETMAIN FAILS --- CLEANUP     05770020
*                                         ROUTINE NEEDS TO KNOW IF PDL  05780020
*                                         OBTAINED FOR FREEMAIN         05790020
         SR    RBASE,RBASE             ZERO RBASE IN CASE GETMAIN FAILS 05792002
*                                      THE CLEANUP ROUTINE WONT TRY TO  05794002
*                                      FREE UP AN INVALID AREA   Y02666 05796002
         BAL   LINK2,STALOC            BRANCH TO STORAGE ALLOCATE RTN.  05800020
         SPACE                                                          05810020
*                                      CORE ADDRESS RETURNED IN R1      05820020
         SH    R1,H8                   BACK UP OVER STORAGE CHAINS      05830020
         ST    R1,ZERO(R3)             STORE ADDRESS OF PDL IN ANSWER   05840020
*                                         PLACE                         05850020
         ST    R1,XPDL                 SAVE ADDRESS OF PDL              05860020
         SPACE                                                          05870020
*                                                                       05880020
         LA    R1,WORKSZ(PBASE)        INITIALIZE BASE REGISTER FOR     05980020
*                                         RECURSIVE WORKSPACE AS        05990020
*                                         THROUGH FOLLOWING GETMAIN WAS 06000020
*                                         ISSUED                        06010020
         XR    RBASE,RBASE             SET CONDITION CODE TO ZERO       06020020
         B     RECURSEA                BRANCH TO INITIALIZE RECURSIVE   06030020
*                                         WORKSPACE - EVERTHING IS      06040020
*                                         SETUP AS RECURSIVE WORKSPACE  06050020
*                                         GETMAIN WAS ISSUED - PURPOSE  06060020
*                                         IS TO ELIMINATE ADDITIONAL    06070020
*                                         SVC                           06080020
         SPACE                                                          06090020
*                                                                       06100020
* BEGINNING NEW SUBFIELD, ALLOCATE AND INITIALIZE NEW RECURSIVE         06110020
* WORKSPACE.                                                            06120020
*                                                                       06130020
*/* D (YES,,NO,RECURSEA) BEGINNING NEW SUBFIELD */                      06132001
*/*RECURSE: P NEW RWORK SPACE ALLOCATION */                             06134001
RECURSE  DS    0H                      NEW SUBFIELD WORKSPACE           06140020
*                                         ALLOCATION                    06150020
         USING RWORK,RBASE             ESTABLISH BASE FOR WORKSPACE     06160020
         SPACE                                                          06170020
         LA    R1,RWORKSZ              SET SIZE OF WORKAREA NEEDED AND  06180020
*                                         SET SUBPOOL TO 0              06190020
         LR    R3,LINK1                SAVE LINKAGE REGISTER            06200020
*/* S GETCORE: GET CORE FOR WORKSPACE */                                06202001
         BAL   LINK1,GETCORE           LINK TO GETCORE TO DO            06210020
*                                         CONDITIONAL GETMAIN FOR SPACE 06220020
         SPACE                                                          06230020
*                                      CORE ADDRESS RETURNED IN R1      06240020
         LR    LINK1,R3                RESTORE LINKAGE REGISTER         06250020
         TM    RFLAGS,RFERASE          SET CONDITION CODE FOR FLAG      06260020
*                                         SETTING THAT FOLLOWS          06270020
         SPACE                                                          06280020
*                                                                       06290020
********                                                                06300020
******** N O T E  - NO CONDITION CODE SETTING HERE UNTIL AFTER RFLAGS   06310020
********            HAS BEEN SET UP.                                    06320020
********                                                                06330020
*                                                                       06340020
         SPACE                                                          06350020
         DROP  RBASE                   PREPARE TO USE GETMAIN RETURNED  06360020
*                                         ADDRESS                       06370020
         SPACE                                                          06380020
RECURSEA DS    0H                      * * * *                          06390020
*/*RECURSEA: D (YES,,NO,RECURSEB) IN ERASE MODE */                      06392001
         USING RWORK,R1                USE GETMAIN AREA                 06400020
         SPACE                                                          06410020
         MVI   RFLAGS,ZERO             CLEAR FLAG BYTE TO ZERO          06420020
         BZ    *+EIGHT                 TEST ABOVE CONDITION CODE ---    06430020
*                                         SKIP FLAG SETTING IF ZERO     06440020
*/* P SET INDICATOR FOR ERASE MODE */                                   06442001
         SPACE                                                          06450020
         OI    RFLAGS,RFERASE          CONTINUE IN ERASE MODE           06460020
*/*RECURSEB: P SET UP RETURN LINKAGE */                                 06462001
         ST    RBASE,RBASESV           SAVE LAST RWORK AREA ADDRESS     06470020
         ST    XPCE,RXPCESV            SAVE ADDRESS OF PCE TO RESUME AT 06480020
         ST    R2,RPCEAD               FOR USE IN FINDING KEYWORD       06490020
*                                         OFFSET                        06500020
         ST    LINK1,RLINKSV           SAVE RETURN LINKAGE REGISTER     06510020
         DROP  R1                      DROP TEMPORARY BASE REGISTER     06520020
         SPACE                                                          06530020
         LR    RBASE,R1                UPDATE RWORK BASE REGISTER       06540020
         USING RWORK,RBASE             SWITCH ASSEMBLER BACK TO RBASE   06550020
*/* P POINT TO FIRST PCE OR FIRST PCE IN SUBFIELD */                    06552001
         SPACE                                                          06560020
         LA    XPCE,TWO(R2)            BUMP PCE ADDRESS TO FIRST PCE OR 06570020
*                                         FIRST PCE IN SUBFIELD         06580020
         SPACE                                                          06590020
*                                                                       06600020
* SELECT THE APPROPRIATE PCE PROCESSOR ROUTINE.                         06610020
*                                                                       06620020
*/*NEXTPCE: D (YES,ENDFIELD,NO,) END-OF-FIELD PROCESSOR */              06622001
*/* D (YES,POSIT,NO,) POSITIONAL PROCESSOR */                           06624001
*/* D (YES,KEYWD,NO,) KEYWD PROCESSOR */                                06626001
*/* D (YES,NAMESKP,NO,) SKIP NAME PCE PROCESSOR */                      06628001
*/* D (YES,PARS2CHK,NO,IDENT) IS THIS A DOBOL PCE? */                   06628401
NEXTPCE  DS    0H                      SELECT MAIN PROCESSING ROUTINE   06630020
         NI    PFLAGS,HFF-PFDEFLT      CLEAR POSSIBLE DEFAULT TAKEN     06640020
*                                         FLAG                          06650020
         TM    PFLAGS4,PFLSTEND        IS END OF SUBFIELD FOUND Y30NQJN 06652003
         BZ    NEXTOFF                 NO, CONTINUE             Y30NQJN 06654003
         OI    PFLAGS7,RPAREND         INDICATE END OF SUBFIELD Y30NQJN 06656003
NEXTOFF  DS    0H                                               Y30NQJN 06658003
         NI    PFLAGS4,HFF-PFSLASH-PFLSTEND-PFPDDATA-PFENDSET TURN OFF  06660020
*                                         POSSIBLE LIST END FLAG, SLASH 06670020
*                                         SCAN FLAG,PROMPT/DEFAULT FLAG 06680020
*                                         AND ENDBAKUP SET FLAG         06690020
         NI    PFLAGS5,HFF-INVPRMPT    RESET INVALID PROMPT FLAG A45352 06692001
         NI    PFLAGS7,HFF-DSNAMEF     END DSNAME VCE PROCESS    Y02666 06696002
         XR    R2,R2                   CLEAR WORK REGISTER TO ZERO      06700020
         IC    R2,PCEFLGB1(XPCE)       PICK UP TYPE INDICATOR FROM PCE  06710020
         N     R2,TYPEMASK             ISOLATE TYPE INDICATOR BITS      06720020
         SRL   R2,THREE                POSITION BITS FOR INDEXED BRANCH 06730020
         B     *+FOUR(R2)              BRANCH TO PCE PROCESSOR          06740020
*                                                                       06750020
MAINB    DS    0H                      USED FOR FUTURE COMPARANDS       06760020
*                                                                       06770020
ENDB     B     ENDFIELD                BRANCH TO END-OF-FIELD PROCESSOR 06780020
*                                                                       06790020
POSITBB  B     POSIT                   BRANCH TO POSITIONAL PROCESSOR   06800020
*                                                                       06810020
KEYWDB   B     KEYWDP                  BRANCH TO KEYWORD PROCESSOR      06820020
*                                                                       06830020
NAMEB    B     NAMESKP                 BRANCH TO SKIP NAME PCE PROCESS. 06840020
*                                                                       06850020
IDENTB   B     IDENT                   BRANCH TO IDENT PROCESSOR        06860020
RESERV   B     PARS2CHK                RESERVED WORD PCE         F41448 06862001
TERMB    B     PARS2CHK                TERM PCE                  F41448 06864001
OPRTR    EQU   *                       OPER PCE                  F41448 06866001
*/*PARS2CHK: D (YES,GOTOPRS2,NO,) HAS IKJPARS2 BEEN LOADED? */          06866401
PARS2CHK TM    CBFLAGS2,PARS2IN        HAS IKJPARS2 BEEN LOADED  F41448 06868001
         BO    GOTOPRS2                IF YES GO TO BRANCH TO    F41448 06868401
*                                      MACRO PROCESSOR           F41448 06868801
         LA    R2,QSTRINGA             IF FIRST TIME THROUGH,    F41448 06869201
*                                      INITIALIZE FOR IKJPARS2   F41448 06869601
         ST    R2,VCONAD               STORE VCON TABLE ADDRESS  F41448 06869701
*                                      IN WORK AREA              F41448 06869801
*/* P LOAD IKJPARS2 */                                                  06869901
         LOAD  EP=IKJPARS2             LOAD IKJPARSW             F41448 06870001
         ST    R0,PARS2ADR             STORE ENTRY ADDRESS IN    F41448 06873201
*                                      WORK AREA                 F41448 06875201
         OI    CBFLAGS2,PARS2IN        INDICATE IKJPARS2 HAS     F41448 06875601
*                                      BEEN LOADED               F41448 06876001
*/* P SAVE IKJPARS BASE REGISTERS */                                    06876101
         ST    BASE3,BASE3SV           SAVE IKJPARS BASE         F41448 06876401
         STM   BASE2,RBASE,BASE2SV     REGISTERS                 F41448 06876501
*/*GOTOPRS2: P LOAD ENTRY POINT OF IKJPARS2 */                          06877301
GOTOPRS2 L     R2,PARS2ADR             LOAD ENTRY POINT OF       F41448 06879201
*                                      IKJPARS2                  F41448 06880001
         LR    BASE1,PBASE             SET UP REGISTER 11 FOR    F41448 06881901
*                                      USE BY IKJPARS2 IN        F41448 06882301
*                                      ADDRESSING WORK AREA      F41448 06882701
*/* S () IKJPARS2: BRANCH TO COBOL PCE PROCESSOR */                     06882801
         BR    R2                      BRANCH TO IKJPARS2        F41448 06883101
*****************************************************************F41448 06883201
*  THE FOLLOWING ROUTINE IS THE INTERFACR ROUTINE BETWEEN IKJPARS2    * 06886001
* AND IKJPARS.  ALL IKJPARS ROUTINES ARE ENTERED THGOUGH THIS    F41448 06888701
* CONTROLLER ROUTINE.                                            F41448 06889101
*****************************************************************F41448 06890001
         SPACE                                                          06890401
*/*PARS2ENT: E ENTRY INTO PARSE FROM IKJPARS2 */                        06890501
*/* P PREPARE TO TRANSFER CONTROL TO SUBROUTINE */                      06890601
PARS2ENT LA    LINK1,RTRNAD            LOAD RETURN ADDRESS INTO  F41448 06890801
*                                      LINK1                     F41448 06891201
         LA    LINK2,RTRNAD            AND LINK2 AND STORE INTO  F41448 06891301
         ST    LINK2,CBLNKSV2          CBLNKSV2 SO THAT ANY      F41448 06891401
*                                      SUBROUTINE CALLED WILL    F41448 06891501
*                                      RETURN TO PROPER PLACE IF F41448 06894501
*                                      BEING CALLED BY THE COBOL F41448 06896501
*                                      MACRO SUPPORT             F41448 06896901
*/* R BRANCH TO APPROPRIATE SUBROUTINE */                               06897001
         BR    R15                     BRANCH TO SUBROUTINE.     F41448 06897301
*                                      ADDRESS PLACED IN R15 BY  F41448 06897701
*                                      THE COBOL MACRO PROCES-   F41448 06897801
*                                      SORS BEFORE COMING TO     F41448 06897901
*                                      IKJPARS                   F41448 06898601
*/*RTRNAD: E RETURN FROM SUBROUTINE */                                  06898701
*/* P PRESERVE RET CODE +0, +4, +8, +12 */                              06898801
RTRNAD   BAL   R15,RET1                RETURN ADDRESS FROM SUB-  F41448 06899001
*                                      ROUTINES IN ON +0, +4,    F41448 06899401
         BAL   R15,RET1                +8, OR +12.  THE SERIES   F41448 06899801
         BAL   R15,RET1                OF BAL'S AND THE SUBTRCT  F41448 06899901
         BAL   R15,RET1                PRESERVE THE RETURN       F41448 06902701
RET1     LA    R14,RTRNAD+4            GET ADDRESS IN R14 IN     F41448 06904701
*                                      ORDER TO PRESERVE RETURN  F41448 06905101
*                                      CODE                      F41448 06905501
         LA    R15,ZERO(R15)           ZERO HIGH ORDER BYTE FOR  F41448 06905901
*                                      SUBTRACT REGISTER         F41448 06906201
         SR    R15,R14                 PRESERVE RETURN CODE      F41448 06906601
*/* P RESTORE IKJPARS2 ENVIRONMENT */                                   06906901
         L     R14,CBLRET              LOAD ENTRY INTO IKJPARS2  F41448 06907901
*                                      FOR RETURN                F41448 06908201
         L     RBASE,AUTOBASE          RESTORE AUTOMATIC DATA    F41448 06908501
*                                      BASE REGISTER             F41448 06908801
         LM    R2,R3,TERMBASE          RESTORE IKJPARS2          F41448 06909101
*                                      ENVIRONMENT               F41448 06909401
         LR    BASE1,PBASE             WORK AREA BASE REG        F41448 06909701
*/* R () RETURN TO IKJPARS2 */                                          06909801
         BR    R14                     RETURN TO COBOL SUPPORT   F41448 06910001
*                                      MODULE                    F41448 06911801
         EJECT                                                          06914401
*********************************************************************** 06917001
*                                                                     * 06919601
*                    END-OF-FIELD ROUTINE                             * 06922201
*                                                                     * 06924801
*   THIS ROUTINE IS ENTERED FROM THE MAIN CONTROL ROUTINE WHEN AN     * 06927401
* IKJENDP OR AN IKJSUBF PCE IS ENCOUNTERED. IF A SUBFIELD IS BEING    * 06930020
* PROCESSED THE END OF THE SUBFIELD, A RIGHT PARENTHESIS, IS SEARCHED * 06940020
* FOR. IF NOT FOUND THE REMAINING PARAMETERS ARE CONSIDERED EXTRANEOUS* 06950020
* IF AN IKJKEYWD PCE WAS NEVER FOUND IN THE PCL OR INVALID KEYWORDS   * 06960020
* IF ONE WAS. IF THE END OF THE SUBFIELD WAS FOUND THE RECURSIVE      * 06970020
* WORKSPACE IS FREED.                                                 * 06980020
*   CONTROL IS THEN GIVEN TO THE EXIT ROUTINE IF NO MORE RECURSIVE    * 06990020
* WORKSPACES REMAIN OR TO THE KEYWD ROUTINE IF MORE REMAIN.           * 07000020
*                                                                     * 07010020
*********************************************************************** 07020020
*/*ENDFIELD: D (YES,ENDFINDL,NO,) IN ERASE MODE */                      07022001
         SPACE                                                          07030020
ENDFIELD DS    0H                      END-OF-FIELD PROCESSOR           07040020
         TM    RFLAGS,RFERASE          ARE WE IN ERASE MODE             07050020
         BO    ENDFINDL                IF BIT ON YES --- SKIP SCANNING  07060020
*/*ENDFISCN: S SCANF: POP THE STACK IF POSSIBLE */                      07062001
         SPACE                                                          07070020
ENDFISCN DS    0H                      * * * *                          07080020
         BAL   LINK1,SCANF             IF POSSIBLE, POP THE STACK       07090020
*                                                                       07100020
         NOP   ZERO                    +0 RETURN -NO MORE DATA - OK     07110020
*                                                                       07120020
*                                      +4 RETURN - MORE DATA            07130020
*/* S SKIPB: SKIP SEPARATORS */                                         07132001
         BAL   LINK2,SKIPB             BRANCH TO SKIP BLANKS SUBROUTINE 07140020
*                                                                       07150020
*/* D (YES,ENDFINDL,NO,) REACHED END OF INPUT */                        07152001
         B     ENDFINDL                +0 RETURN - RIGHT PAREN          07160020
*                                                                       07170020
*                                      +4 RETURN - PPOINTR SET          07180020
*/* P INCREMENT SCAN POINTER */                                         07182001
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN REGISTER          07190020
*/* D (YES,ENDFISMI,NO,) LAST LEVEL COMPLETE OR NO SUBFIELD */          07192001
         NC    RBASESV,RBASESV         WAS LAST LEVEL COMPLETE OR NO    07200020
*                                         SUBFIELD                      07210020
         BZ    ENDFISMI                IF ZERO YES --- BRANCH           07220020
*/* D (YES,ENDFINDL,NO,ENDEXTRA) REACHED END OF INPUT */                07222001
         SPACE                                                          07230020
         CLI   ZERO(XINPUT),RIGHTPRN   WAS A CLOSE PAREN FOUND          07240020
         BE    ENDFINDL                YES --- ALLOW IT TO BE SKIPPED   07250020
         SPACE                                                          07260020
         CLI   ZERO(XINPUT),SEMICOLN   WAS END OF DATA SPECIFIED?Y02666 07262002
         BE    ENDFINDL                YES -- SKIP THE SEMICOLON Y02666 07264002
         TM    PFLAGS7,RPAREND         END OF SUBFIELD FOUND?   Y30NQJN 07266003
         BO    ENDFINDL                YES, CONTINUE END PROCESSY30NQJN 07268003
         B     ENDEXTRA                NO -- ERROR CONDITION -- BRANCH  07270020
*/*ENDFISMI: D (YES,,NO,ENDEXTRA) FIRST STACK IN CHAIN */               07272001
         SPACE                                                          07280020
ENDFISMI DS    0H                      * * * *                          07290020
         TM    PFLAGS5,RPRNFND         WAS RIGHT PAREN FOUND     Y01156 07292001
         BO    ENDFINDL                CONTINUE PROCESSING       Y01156 07294001
         L     R1,PIPDLCUR             LOAD PTR TO CURRENT STACK        07300020
         NC    ONE(THREE,R1),ONE(R1)   IS THIS FIRST STACK IN CHAIN     07310020
         BNZ   ENDEXTRA                IF NO BRANCH                     07320020
*/* D (YES,,NO,ENDEXTRA) AT LAST LEVEL */                               07322001
         SPACE                                                          07330020
         CLI   PIPDLX,ZERO             DON'T ALLOW SEMICOLON EXCEPT AT  07340020
*                                         LAST LEVEL                    07350020
         BNZ   ENDEXTRA                IF NOT --- BRANCH                07360020
*/* D (YES,,NO,ENDEXTRA) ENDING SEMICOLON */                            07362001
         SPACE                                                          07370020
         CLI   ZERO(XINPUT),SEMICOLN   IS IT THE ENDING SEMICOLON       07380020
         BNE   ENDEXTRA                NO -- ERROR CONDITION -- BRANCH  07390020
         SPACE                                                          07400020
*                                                                       07410020
* FREE RECURSIVE WORKSPACE.                                             07420020
*                                                                       07430020
*/*ENDFINDL: L FREE RWORK AREA */                                       07432001
ENDFINDL DS    0H                      * * * *                          07440020
         NI    PFLAGS5,HFF-RPRNFND     TURN OFF R. PAREN  FLAG   Y01156 07442001
         NI    PFLAGS7,HFF-RPAREND     TURN OFF SUBFIELD END FLGY30NQJN 07446003
         LR    R1,RBASE                INITIALIZE TEMPORARY BASE REG.   07450020
         SPACE                                                          07460020
         DROP  RBASE                   DROP NORMAL BASE                 07470020
         USING RWORK,R1                CREATE TEMPORARY BASE REGISTER   07480020
         SPACE                                                          07490020
         L     XPCE,RXPCESV            RESTORE LAST PCE ADDRESS         07500020
         L     RBASE,RBASESV           RESTORE PREVIOUS RWORK BASE REG. 07510020
         L     LINK1,RLINKSV           RESTORE PREVIOUS LINKAGE REG.    07520020
         SPACE                                                          07530020
         DROP  R1                      DROP TEMPORARY BASE REGISTER     07540020
         USING RWORK,RBASE             RE-ESTABLISH NORMAL BASE REG.    07550020
         SPACE                                                          07560020
         FREEMAIN R,LV=RWORKSZ,A=(1)   RELEASE RWORK AREA               07570020
*/* D (YES,EXIT,NO,) LAST RECURSIVE WORKSPACE */                        07572001
         SPACE                                                          07580020
         LTR   RBASE,RBASE             WAS THAT THE LAST RECURSIVE      07590020
*                                         WORKSPACE                     07600020
         BZ    EXIT                    YES IF ZERO --- BRANCH           07610020
         SPACE                                                          07620020
         NI    PFLAGS3,HFF-PFMORE      CLEAR POSSIBLE 'WHAT TO DO WITH  07630020
*                                         RIGHT PAREN' FLAG             07640020
         NI    RFLAGS,HFF-RFKEYWDS     CLEAR CAUSE OF ENTRY FLAG        07650020
*/* R RETURN TO CALLER */                                               07652001
         BR    LINK1                   RETURN TO CALLER                 07660020
         SPACE                                                          07670020
*                                                                       07680020
* SOME DATA WAS LEFT IN THE INPUT BUFFER OR INSIDE OF A SUBFIELD BUT    07690020
* THE PCL WAS EXHAUSTED. SINCE RFLAGS IS ASSOCIATED WITH A SUBFIELD     07700020
* LEVEL THE MESSAGE TO BE ISSUED IS RELEVANT TO SUBFIELDS RATHER THAN   07710020
* TO THE ENTIRE BUFFER. IF NO SUBFIELDS WERE SPECIFIED IT CAN BE        07720020
* CONSIDERED AS SUBFIELD LEVEL ZERO. THE FLAG NEED NOT BE TURNED OFF    07730020
* SINCE WHEN THE END OF THE SUBFIELD IS FOUND THE RWORK AREA IS FREED.  07740020
*                                                                       07750020
* CHECK TO SEE IF AN 'INVALID KEYWORD' OR AN 'EXTRANEOUS                07760020
* INFORMATION' MESSAGE IS TO BE PRINTED. THE 'INVALID KEYWORD' MESSAGE  07770020
* IS WRITTEN INSTEAD OF THE 'EXTRANEOUS INFORMATION' MESSAGE IF AN      07780020
* IKJKEYWD PCE WAS ENCOUNTERED.                                         07790020
*                                                                       07800020
*/*ENDEXTRA: D (YES,ILLKEYWD,NO,) IKJEYWD PCE FOUND */                  07802001
ENDEXTRA DS    0H                      * * * *                          07810020
         TM    RFLAGS,RFPRES           WAS A IKJKEYWD PCE FOUND         07820020
         BO    ILLKEYWD                IF YES PRINT INVALID MESSAGE     07830020
*/* P COMPLETE LENGTH OF EXTRANEOUS DATA */                             07832001
         SPACE                                                          07840020
         LR    XINPUTB,XINPUT          SAVE BEGINNING OF EXTRA DATA     07850020
*                                         ADDRESS                       07860020
         BCTR  XINPUT,ZERO             DECREMENT FOR NEXT INCREMENT     07870020
         SPACE                                                          07880020
ENDEX1   DS    0H                      * * * *                          07890020
         LA    XINPUT,ONE(XINPUT)      BUMP INPUT POINTER               07900020
         LR    R2,XINPUT               SAVE PTR FOR LATER SUBTRACTION   07910020
         C     XINPUT,ENDINPUT         END OF INPUT BUFFER              07920020
         BE    ENDEX2                  IF YES BRANCH                    07930020
         SPACE                                                          07940020
         NC    RBASESV,RBASESV         IS A SUBFIELD BEING PROCESSED    07950020
         BZ    ENDEX1                  IF NO REMAINDER OF BUFFER IS     07960020
*                                         EXTRANEOUS DATA               07970020
         SPACE                                                          07980020
         CLI   ZERO(XINPUT),RIGHTPRN   END OF SUBFIELD                  07990020
         BNE   ENDEX1                  IF NO BRANCH                     08000020
         SPACE                                                          08010020
ENDEX2   DS    0H                      * * * *                          08020020
         SR    R2,XINPUTB              COMPUTE LENGTH OF EXTRA DATA     08030020
*/* S GETCORE: GET CORE FOR MESSAGE SEGMENT */                          08032001
         LA    R1,FOUR(R2)             GET SIZE OF CORE FOR MESSAGE SEG 08040020
*                                         PLUS FOUR FOR HEADER          08050020
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     08060020
         SPACE                                                          08070020
*                                      CORE ADDRESS RETURNED IN R1      08080020
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 08090020
         LA    R0,FOUR(R2)             GET SEGMENT SIZE                 08100020
         STH   R0,ZERO(R1)             STORE SIZE IN SEGMENT            08110020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 08120020
         MVI   THREE(R1),OFFSET3       SET OFFSET TO LENGTH OF          08130020
*                                         'EXTRANEOUS INFORMATION' MSG  08140020
         LR    R15,XINPUTB             MOVE START OF DATA ADDRESS       08150020
         BCTR  R2,ZERO                 REDUCE LENGTH FOR 'EX'           08160020
         EX    R2,BUILDSEG             MOVE TEXT TO NEW SEGMENT         08170020
*/* P INDICATE 'EXTRANEOUS INFORMATION' MSG */                          08172001
         MVI   MSGCODE,MSG17           INDICATE MESSAGE TO WRITE        08180020
*/* S WRITER1: WRITE THE MESSAGE */                                     08182001
         BAL   LINK1,WRITER1           WRITE THE MESSAGE                08190020
*/* D (YES,ENDFISCN) POP THE STACK UNTIL NO MORE DATA */                08192001
         SPACE                                                          08200020
         BCT   XINPUT,ENDFISCN         POP STACK, IF POSSIBLE, UNTIL    08210020
*                                         ITS COMPLETELY FREE OF DATA   08220020
         EJECT                                                          08230020
*********************************************************************** 08240020
*                                                                     * 08250020
*                             EXIT ROUTINE                            * 08260020
*                                                                     * 08270020
*   THIS ROUTINE IS ENTERED FROM THE END-OF-FIELD ROUTINE WHEN THE    * 08280020
* ORIGINAL RECURSIVE WORKSPACE HAS BEEN FREED.                        * 08290001
*   IT IS ENTERED AT EXITNORM WHENEVER AN ABNORMAL TERMINATION OCCURS.* 08300001
*   IN THIS ROUTINE THE INPUT BUFFER OFFSET IS UPDATED, THE I/O       * 08310020
* ROUTINES ARE DELETED, THE PERMANENT WORKSPACE IS FREED AND CONTROL  * 08320020
* IS RETURNED TO PARSE'S CALLER WITH A RETURN CODE IN REGISTER 15.    * 08330020
*                                                                     * 08340020
*********************************************************************** 08350020
*/*EXIT: P COMPUTE CURRENT OFFSET */                                    08352001
         SPACE                                                          08360020
EXIT     DS    0H                      PARSE EXIT ROUTINE               08370020
         TM    PFLAGS5,INVFLG          IS AN INVALID BUFFER BEING       08372001
*                                      PROCESSED?                Y01156 08374001
         BO    CLEANUP                 YES, CLEANUP USER CORE    Y01156 08378001
         L     R2,FOUR(PBASE)          LOAD CALLERS SAVE AREA ADDRESS   08380020
         L     R2,TWENTY4(R2)          LOAD ORIGINAL INPUT PARAMETER    08390020
*                                         ADDRESS                       08400020
         L     R3,TWENTY(R2)           LOAD ORIGINAL INPUT BUFFER ADR.  08410020
         LA    R3,ZERO(R3)             CLEAR HIGH ORDER BYTE            08420020
         MVC   PDWORD(TWO),ZERO(R3)    ALIGN ORIGINAL BUFFER LENGTH ON  08430020
*                                         PROPER BOUNDARY               08440020
         SR    XINPUT,R3               COMPUTE CURRENT OFFSET           08450020
         SH    XINPUT,H4               COMPUTE OFFSET TO SEMICOLON      08460020
         BM    EXITRST                 DOES NOT LIE WITHIN INPUT, RESET 08470020
*                                         TO ALL                        08480020
         SPACE                                                          08490020
         TM    PFLAGS,PFENDF           HAD WE RUN OFF THE END           08500020
         BO    EXITRST                 YES USE THIS OFFSET              08510020
         SPACE                                                          08520020
         CH    XINPUT,PDWORD           SEE IF NEW OFFSET LIES WITHIN    08530020
*                                         INPUT BUFFER                  08540020
         BL    EXITANS                 YES USE THIS OFFSET              08550020
*/*EXITRST: P REDUCE ORIGINAL BUFFER LENGTH BY LENGTH,OFFSET FIELDS */  08552001
         SPACE                                                          08560020
EXITRST  DS    0H                      * * * *                          08570020
         LH    XINPUT,PDWORD           GET ORIGINAL BUFFER LENGTH       08580020
         SH    XINPUT,H5               REDUCE BY SIZE OF LENGTH AND     08590020
*                                         OFFSET FIELDS                 08600020
         SPACE                                                          08610020
*                                                                       08620020
* UPDATE THE INPUT BUFFER OFFSET FIELD.                                 08630020
*                                                                       08640020
*/*EXITANS: P UPDATE OFFSET IN INPUT BUFFER */                          08642001
EXITANS  DS    0H                      * * * *                          08650020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN REGISTER TO NEXT  08660020
*                                         CHARACTER                     08670020
         STH   XINPUT,PDWORD           STORE NEW OFFSET FOR MVC         08680020
         MVC   TWO(TWO,R3),PDWORD      UPDATE OFFSET IN INPUT BUFFER    08690020
         SPACE                                                          08700020
*                                                                       08710020
* DELETE PUTLINE/PUTGET SERVICE ROUTINES.                               08720020
*                                                                       08730020
*/*EXITNORM: L DELETE IKJPARS2 RTN. */                                  08732003
EXITNORM DS    0H                      ENTRY FROM CLEANUP               08740020
         SPACE                                                          08780020
         TM    CBFLAGS2,PARS2IN        WAS IKJPARS2 LOADED BY THIS      08780402
*                                      CALL OF PARSE             Y02666 08780802
         BZ    PARS2INT                NO,BYPASS DELETE          Y02666 08781202
         DELETE EP=IKJPARS2            DELETE PARS2 LOAD MODULE  F41448 08782001
         SPACE                                                          08784001
PARS2INT DS    0H                                                Y02666 08786002
         XR    LINK1,LINK1             ZERO WORK REGISTER               08790020
         TM    PFLAGS5,INVFLG          IS INVALID BUFFER BEING          08792001
*                                      PROCESSED?                Y01156 08792401
         BZ    EXITRC                  NO, CONTINUE PROCESSING   Y01156 08794001
         LA    LINK1,RCNOPRMT          YES,GET ERROR RETURN CODE Y01156 08796001
         B     EXITFREE                BYPASS SETTING OTHER RETURN CODE 08798001
*                                                                Y01156 08798501
EXITRC   DS    0H                                                Y01156 08798901
         IC    LINK1,RETCODE           LOAD THE RETURN CODE             08799501
EXITFREE DS    0H                                                Y01156 08800001
         LR    R1,PBASE                LOAD CORE ADDRESS FOR FREEMAIN   08810020
         L     PBASE,FOUR(PBASE)       RESTORE CALLERS SAVE AREA ADR.   08820020
         SPACE                                                          08830020
         FREEMAIN R,LV=WORKSZ,A=(1)    RELEASE PERMANENT WORK AREA      08840020
*/* P LOAD THE RETURN CODE */                                           08842001
         SPACE                                                          08850020
         LR    R15,LINK1               LOAD PROPER RETURN CODE REGISTER 08860020
*                                         FOR RETURN MACRO              08870020
*/* R EXIT FROM PARSE */                                                08872001
         SPACE                                                          08880020
         RETURN (14,12),RC=(15)        EXIT FROM PARSE                  08890020
         EJECT                                                          08900020
*********************************************************************** 08910020
*                                                                     * 08920020
*                         KEYWORD ROUTINE                             * 08930020
*                                                                     * 08940020
*   CONTROL IS OBTAINED FROM THE MAIN CONTROL ROUTINE. IF A KEYWORD   * 08950020
* PARAMETER IS CURRENTLY BEING PARSED CONTROL IS GIVEN TO THE KEYWORD * 08960020
* SCAN ROUTINE. OTHERWISE A DEFAULT IS PICKED UP, IF PROVIDED, AND    * 08970020
* SCANNED AS A NORMAL INPUT PARAMETER.                                * 08980020
*   CONTROL MAY BE PASSED TO THE MAIN CONTROL ROUTINE IF IN ERASE     * 08990020
* MODE OR A DEFAULT WAS NOT SUPPLIED.                                 * 09000020
*                                                                     * 09010020
*********************************************************************** 09020020
*/*KEYWDP: P SET INDICATOR FOR IKJKEYWD PCE FOUND */                    09022001
         SPACE                                                          09030020
KEYWDP   DS    0H                      KEYWORD ROUTINE                  09040020
         NI    PFLAGS5,HFF-SUBFLG      TURN OF SUBFIELD FLAG     Y01156 09042001
         OI    RFLAGS,RFPRES           INDICATE A IKJKEYWD PCE WAS      09050020
*                                         FOUND FOR A POSSIBLE MESSAGE  09060020
*                                         IN THE END-OF-FIELD ROUTINE   09070020
*/* D (YES,KEYWD,NO,) KEYWORD CURRENTLY BEING PARSED */                 09072001
         TM    RFLAGS,RFKYPRSE+RFERASE IS KEYWORD PARSE REQUIRED        09080020
         BZ    KEYWD                   NO, GO TO PARSE THEN             09090020
         SPACE                                                          09100020
         MVC   PDWORD(TWO),PCEPDEO(XPCE) ALIGN PDE OFFSET ON PROPER     09110020
*                                         BOUNDARY                      09120020
         LH    R2,PDWORD               LOAD THE PDE OFFSET              09130020
         A     R2,XPDL                 GET TRUE ADDRESS OF PDE          09140020
*/* D (YES,KEYWDER1,NO,) PDE ALREADY FILLED IN */                       09142001
         NC    ZERO(TWO,R2),ZERO(R2)   SEE IF PDE ALREADY FILLED        09150020
         BNZ   KEYWDER1                IF YES SEE IF ERASING            09160020
*/* D (YES,KEYWDPNX,NO,) IN ERASE MODE */                               09162001
         SPACE                                                          09170020
         TM    RFLAGS,RFERASE          NO DEFAULT IF ERASING            09180020
         BO    KEYWDPNX                GO TO FIRST NAME                 09190020
*/* S PROMPTQ: CHECK FOR PROMPT/DEFAULT */                              09192001
         SPACE                                                          09200020
         BAL   LINK1,PROMPTQ           BRANCH TO PROMPT/DEFAULT ROUTINE 09210020
*                                                                       09220020
*/* D (YES,KEYWDPRC,NO,KEYWDPNX) NEW DATA RETURNED */                   09222001
         B     KEYWDPRC                +0 RETURN - PROCESS NEW LINE     09230020
*                                                                       09240020
*                                      +4 RETURN - NO PROMPT OR DEFAULT 09250020
         B     KEYWDPNX                GET NEXT PCE                     09260020
         SPACE                                                          09270020
*                                                                       09280020
* SET UP TO SCAN NEW DATA.                                              09290020
*                                                                       09300020
*/*KEYWDPRC: P POINT TO NEW PCE FOR NEW INPUT BUFFER */                 09302001
KEYWDPRC DS    0H                      * * * *                          09310020
         L     XPCE,RPCEAD             REFETCH START OF SUBFIELD ADDR.  09320020
         MVC   PDWORD(TWO),ZERO(XPCE)  ALIGN OFFSET TO IKJKEYWD PCE --- 09330020
*                                         RTABLEAD POINTS TO THE        09340020
*                                         IKJSUBF PCE+1 --- ON PROPER   09350020
*                                         BOUNDARY                      09360020
         L     XPCE,PTABLEAD           LOAD START OF PCL ADDRESS        09370020
         AH    XPCE,PDWORD             POINT TO NEW PCE FOR NEW INPUT   09380020
*                                         BUFFER                        09390020
*/* D (,KEYWD) PARSE NEW KEYWORD */                                     09392001
         B     KEYWD                   BRANCH TO PARSE THE KEYWORD      09400020
*/*KEYWDER1: D (YES,,NO,KEYWDPNX) IN ERASE MODE */                      09402001
         SPACE                                                          09410020
KEYWDER1 DS    0H                      * * * *                          09420020
         LA    R0,KEYWDER3             SET RETURN LINKAGE TO CONTINUE   09430020
         ST    R0,RLINKSV1             STORE IN CASE RECURSE            09440020
         SPACE                                                          09450020
         TM    RFLAGS,RFERASE          IN ERASE MODE                    09460020
         BZ    KEYWDPNX                NO --- BRANCH - PROCESS NORMALLY 09470020
         SPACE                                                          09480020
*                                                                       09490020
* ENTRY POINT FROM THE KEYWORD SCAN SUBROUTINE WHEN A KEYWORD PDE       09500020
* WAS ALREADY FILLED IN AND MUST BE ERASED.                             09510020
*                                                                       09520020
*/*KEYWDER4: P CLEAR KEYWORD NUMBER TO ZERO */                          09522001
KEYWDER4 DS    0H                      * * * *                          09530020
         LH    R3,ZERO(R2)             PICK UP KEYWORD NUMBER TO ERASE  09540020
*                                         R3 USED TO FIND CORRECT       09550020
*                                         IKJNAME PCE --- NAMESKP RTN   09560020
*                                         GETS CONTROL NEXT             09570020
         XC    ZERO(TWO,R2),ZERO(R2)   CLEAR OLD KEYWORD NUMBER TO ZERO 09580020
*/*KEYWDPNX: D (,NEXTPCE) GET NEXT PCE */                               09582001
         SPACE                                                          09590020
KEYWDPNX DS    0H                      * * * *                          09600020
         BAL   LINK1,KEYWDX1           COMPUTE NEXT PCE ADDRESS         09610020
         SPACE                                                          09620020
         B     NEXTPCE                 GET NEXT PCE                     09630020
         EJECT                                                          09640020
*********************************************************************** 09650020
*                                                                     * 09660020
*                       SKIP KEYWORD PCE SUBROUTINE                   * 09670020
*                                                                     * 09680020
*   THE FUNCTION OF THIS ROUTINE IS TO SKIP OVER A KEYWORD PCE.       * 09690020
*        RETURN - LINK1                                               * 09700020
*                                                                     * 09710020
*********************************************************************** 09720020
*/*KEYWDX1: E SKIP KEYWORD PCE ROUTINE */                               09722001
*/*KEYWDX2: P ADD PCE ADDRESS TO LENGTH OF PDE */                       09724001
         SPACE                                                          09730020
KEYWDX1  DS    0H                      SKIP IKJKEYWD PCE SUBROUTINE     09740020
         ST    XPCE,PKEYWDPC           SAVE THE CURRENT PCE ADDRESS     09750020
         MVC   PDWORD(TWO),PCEPDEO(XPCE) ALIGN PDE OFFSET FIELD ON      09760020
*                                         PROPER BOUNDARY               09770020
         LH    R1,PDWORD               LOAD THE PDE LENGTH              09780020
         A     R1,XPDL                 GET TRUE ADDRESS OF PDE          09790020
         ST    R1,PKEYWDPS             SAVE ADDRESS FOR FUTURE USE IN   09800020
*                                         CASE OF A MATCH               09810020
         MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH FIELD ON       09820020
*                                         PROPER BOUNDARY               09830020
         AH    XPCE,PDWORD             BUMP PTR TO NEXT PCE             09840020
*/* R RETURN TO CALLER */                                               09842001
         BR    LINK1                   RETURN TO CALLER                 09850020
         EJECT                                                          09860020
*********************************************************************** 09870020
*                                                                     * 09880020
*                        SKIP IKJNAME PCE ROUTINE                     * 09890020
*                                                                     * 09900020
*   THIS ROUTINE IS ENTERED FROM THE MAIN CONTROL ROUTINE WHEN AN     * 09910020
* IKJNAME PCE IS ENCOUNTERED IN THE PCL. IF NOT IN KEYWORD ERASE MODE * 09920020
* THE NEXT PCE ADDRESS IS OBTAINED AND THE MAIN CONTROL ROUTINE GETS  * 09930020
* CONTROL. IF IN ERASE MODE, THE PCE OF THE CORRESPONDING IKJNAME     * 09940020
* SUBFIELD IS OBTAINED, IF ONE WAS SPECIFIED, AND ANOTHER RECURSIVE   * 09950020
* WORK AREA IS OBTAINED. SINCE A KEYWORD MAY HAVE A SUBFIELD WITH     * 09960020
* POSITIONAL PARAMETERS OR KEYWORDS IN IT THE SUBFIELD PDE MUST       * 09970020
* ALSO BE ERASED.                                                     * 09980020
*        ENTRY - IF ERASE MODE R3 CONTAINS NUMBER OF IKJNAME PCE      * 09990020
*                LOOKING FOR                                          * 10000020
*                                                                     * 10010020
*********************************************************************** 10020020
*/*NAMESKP: D (YES,,NO,NAMESKP3) IN ERASE MODE */                       10022001
         SPACE                                                          10030020
NAMESKP  DS    0H                      SKIP IKJNAME PCE ROUTINE         10040020
         TM    RFLAGS,RFERASE          IN ERASE MODE                    10050020
         BZ    NAMESKP3                NO --- NORMAL OPERATION - BRANCH 10060020
*/* D (YES,,NO,NAMESKP3) THIS THE IKJNAME PCE LOOKING FOR */            10062001
         SPACE                                                          10070020
         BCT   R3,NAMESKP3             IF IN ERASE MODE - IS THIS THE   10080020
*                                         IKJNAME PCE LOOKING FOR       10090020
         SPACE                                                          10100020
*                                      WHEN FALL THROUGH ANSWER YES     10110020
         SPACE                                                          10120020
*                                                                       10130020
* SET UP TO ERASE ANY SUBFIELD INFORMATION THAT MAY BE IN THE PDL.      10140020
*                                                                       10150020
*/* D (YES,,NO,KEYWDER2) SUBFIELD SPECIFIED */                          10152001
         TM    PCEFLGB1(XPCE),PCEFSUBF IS A SUBFIELD SPECIFIED          10160020
         BZ    KEYWDER2                NO LEAVE ERASE FOR THIS ONE      10170020
*/* P GET TRUE ADDRESS OF SUBFIELD PCE */                               10172001
         SPACE                                                          10180020
         XR    R2,R2                   CLEAR WORK REG TO ZERO           10190020
         IC    R2,PCENAML(XPCE)        PICK UP LENGTH - 1 OF NAME       10200020
         AR    R2,XPCE                 ADD PCE ADDRESS TO POINT PAST    10210020
*                                         NAME FIELD                    10220020
         MVC   PDWORD(TWO),PCENAMN+ONE(R2) ALIGN SUBFIELD OFFSET ON     10230020
*                                         PROPER BOUNDARY               10240020
         LH    R2,PDWORD               LOAD SUBFIELD OFFSET             10250020
         A     R2,PTABLEAD             GET TRUE ADDRESS OF SUBFIELD PCE 10260020
*/* L GO TO RECURSE TO OBTAIN NEW RECURSIVE WORKSPACE */                10262001
         BAL   LINK1,RECURSE           OBTAIN NEW RECURSIVE WORKSPACE   10270020
*/*KEYWDER2: D (YES,,NO,KEYWDFNO) SUBFIELD HAS KEYWDS IN IT */          10272001
         SPACE                                                          10280020
KEYWDER2 DS    0H                      * * * *                          10290020
         L     R15,RLINKSV1            ON RETURN FROM RECURSE LEAVE     10300020
         BR    R15                        ERASE MODE FOR THIS KEYWORD   10310020
*/*KEYWDER3: P SET INFINITE COUNT IF STILL HIGH */                      10312001
         SPACE                                                          10320020
KEYWDER3 DS    0H                      * * * *                          10330020
         SR    R3,R3                   SET INFINITE COUNT IF STILL HIGH 10340020
*/*NAMESKP3: D (,NEXTPCE) GET NEXT PCE */                               10342001
         SPACE                                                          10350020
NAMESKP3 DS    0H                      * * * *                          10360020
         MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH ON PROPER      10370020
*                                         BOUNDARY                      10380020
         AH    XPCE,PDWORD             POINT TO NEXT PCE IN LIST        10390020
         B     NEXTPCE                 OBTAIN NEXT PCE                  10400020
         EJECT                                                          10410020
*********************************************************************** 10420020
*                                                                     * 10430020
*                 SELECT POSITIONAL PARAMETER ROUTINE                 * 10440020
*                                                                     * 10450020
*   THE FOLLOWING ROUTINES PROCESS THE VARIOUS PARAMETERS DESCRIBED   * 10460020
* BY AN IKJPOSIT PCE. THE POSITIONAL PARAMETER TYPE IS USED IN THE    * 10470020
* SELECTION OF THE APPROPRIATE ROUTINE.                               * 10480020
*                                                                     * 10490020
*********************************************************************** 10500020
*/*POSIT: D (YES,,NO,POSIT1) IN ERASE MODE */                           10502001
         SPACE                                                          10510020
POSIT    DS    0H                      SELECT POSITIONAL ROUTINE        10520020
         TM    RFLAGS,RFERASE          SHOULD SCANNING BE DONE          10530020
         BO    POSIT1                  NO IF IN ERASE MODE --- BRANCH   10540020
*/* S SCANF: POP THE STACK IF POSSIBLE */                               10542001
         SPACE                                                          10550020
         BAL   LINK1,SCANF             DROP LEVEL IN PUSH DOWN LIST IF  10560020
*                                         POSSIBLE                      10570020
*                                                                       10580020
         NOP   ZERO                    +0 RETURN - NO INPUT DATA LEFT   10590020
*                                                                       10600020
*                                      +4 RETURN - DATA REMAINS IN      10610020
*                                         CURRENT BUFFER OR POP OCCURED 10620020
         SPACE                                                          10630020
*                                                                       10640020
* SELECT THE POSITIONAL ROUTINE TO GET CONTROL. IF IN ERASE MODE R2     10650020
* SHOULD CONTAIN THE MASSAGED POSITIONAL TYPE BEFORE BRANCHING TO THE   10660020
* ERASE ROUTINE.                                                        10670020
*                                                                       10680020
*/*POSIT1: P GET POSITIONAL TYPE BYTE */                                10682001
POSIT1   DS    0H                      * * * *                          10690020
         XR    R2,R2                   CLEAR WORK REG TO ZERO           10700020
         IC    R2,PCEPOST(XPCE)        PICK UP THE POSITIONAL TYPE BYTE 10710020
         SLL   R2,TWO                  MULTIPLY TYPE FLAG BY FOUR       10720020
*/* D (YES,POSITERS,NO,) IN ERASE MODE */                               10722001
         TM    RFLAGS,RFERASE          ARE WE IN ERASE MODE             10730020
         BO    POSITERS                BRANCH TO POSITIONAL ERASE RTN.  10740020
         SPACE                                                          10750020
         XC    TEMPPDE(LTPDE),TEMPPDE  ZERO TEMPORARY STORAGE AREA      10760020
*                                         FOR PDE                       10770020
         B     *+FOUR(R2)              BRANCH INTO BRANCH TABLE         10780020
*                                                                       10790020
POSITB   DS    0H                      LABEL USED TO DETERMINE AT A     10800020
*                                         LATER TIME WHICH BRANCH       10810020
*                                         WAS TAKEN                     10820020
*                                                                       10830020
*/* D (YES,INVPARMS,NO,) INVALID POSITIONAL TYPE */                     10832001
*/* D (YES,DELIMITR,NO,) DELIMITER */                                   10834001
*/* D (YES,STRING,NO,) SELF-DELIMITING STRING */                        10836001
*/* D (YES,VALUE,NO,) VALUE TYPE */                                     10838001
*/* D (YES,ADDRESS,NO,) ADDRESS */                                      10838401
*/* D (YES,PSTRING,NO,) PARENTHESIZED STRING */                         10838801
*/* D (YES,USERID,NO,) USERID */                                        10839201
*/* D (YES,DSNAME,NO,) DSNAME */                                        10839601
*/* D (YES,DSNAME,NO,) ASTERISK FOR DSNAME */                           10839701
*/* D (YES,QSTRING,NO,SPACE) QUOTED STRING - IF NOT, MUST BE SPACE */   10839801
         B     INVPARMS                TYPE 0  - NONEXISTENT TYPE       10840020
*                                                                       10850020
DELIMB   B     DELIMITR                TYPE 1  - DELIMITER              10860020
*                                                                       10870020
STRINB   B     STRING                  TYPE 2  - SELF-DELIMITING STRING 10880020
*                                                                       10890020
VALUEB   B     VALUE                   TYPE 3  - VALUE                  10900020
*                                                                       10910020
ADDRB    B     ADDRESS                 TYPE 4  - ADDRESS                10920020
*                                                                       10930020
PSTRIB   B     PSTRING                 TYPE 5  - PARENTHESIZED STRING   10940020
*                                                                       10950020
USIDB    B     USERID                  TYPE 6  - USERID                 10960020
*                                                                       10970020
DSNAMB   B     DSNAME                  TYPE 7  - DSNAME                 10980020
*                                                                       10990020
DSTHIB   B     DSNAME                  TYPE 8  - * FOR DSNAME           11000020
*                                                                       11010020
QSTRIB   B     QSTRING                 TYPE 9  - QUOTED STRING          11020020
*                                                                       11030020
SPACEB   B     SPACE                   TYPE 10 - SPACE                  11040020
*                                                                Y02666 11040402
JOBNAMB  B     JOBNAME                 TYPE 11 -  JOBNAME        Y02666 11042002
*                                                              @Z40RPKQ 11044000
UID2PSW  B     UID2PSWD                TYPE 12 - USERID WITH TWO        11046000
*                                      PASSWORDS               @Z40RPKQ 11048000
         EJECT                                                          11050020
*********************************************************************** 11060020
*                                                                     * 11070020
*               POSITIONAL DELIMITER ROUTINE                          * 11080020
*                                                                     * 11090020
*    THIS ROUTINE PROCESSES THE DELIMITER OF A SELF-DEFINED STRING.   * 11100020
* THE FOLLOWING ARE THE CHARACTERS WHICH MAY DELIMIT A SELF-DEFINED   * 11110020
* STRING - ANY ENTERABLE CHARACTER EXCEPT A DIGIT, LEFT PAREN,        * 11120020
* RIGHT PAREN, SEMICOLON, BLANK, COMMA, TAB, ASTERISK, OR NEW LINE    * 11130020
* CHARACTER.  IF THE FIRST NON-BLANK CHARACTER IS NOT A SUITABLE      * 11140020
* DELIMITER, THE STRING IS CONSIDERED MISSING.  A NEW LINE CHARACTER  * 11150020
* IS SAVED FOR POSSIBLE COMPARES FOR THE END OF THE STRING AND A      * 11160020
* FLAG IS SET TO INDICATE THE STRING SHOULD BE PROMPTED FOR WHEN A    * 11170020
* STRING PCE IS PROCESSED.  IF THE FIRST NON-BLANK CHARACTER IS A     * 11180020
* SUITABLE DELIMITER, IT IS SAVED FOR FUTURE COMPARES FOR THE END     * 11190020
* OF THE STRING.                                                      * 11200020
*                                                                     * 11210020
*********************************************************************** 11220020
*/*DELIMITR: S SKIPB: SKIP SEPARATORS */                                11222001
         SPACE                                                          11230020
DELIMITR DS    0H                      DELIMITER ROUTINE                11240020
         BAL   LINK2,SKIPB             SKIP SEPARATORS TO DELIMITER     11250020
*                                                                       11260020
*/* D (YES,DELIMNL,NO,) REACHED END OF INPUT */                         11262001
         B     DELIMNL                 +0 RETURN, REACHED END OF INPUT, 11270020
*                                         STRING IS MISSING             11280020
*                                                                       11290020
*                                      +4 RETURN, FOUND NON-SEPARATOR   11300020
*                                                                       11310020
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               11320020
*/* S TYPETEST: CHECK FOR LETTER OR SPECIAL CHARACTER */                11322001
         LA    R1,ALPHA+NDLIMSPC       IS DELIM A LETTER OR SPECIAL     11330020
         BAL   LINK1,TYPETEST             CHARACTER                     11340020
*                                                                       11350020
*/* D (YES,,NO,DELIMNL1) DELIMITER IS LETTER OR SPECIAL CHARACTER */    11352001
         B     DELIMNL1                +0 RETURN - NO, INVALID DELIM,   11360020
*                                         THEN STRING IS MISSING        11370020
*                                                                       11380020
*                                      +4 RETURN - YES, BUT CHECK FOR   11390020
*                                         ASTERISK AND LEFT PAREN       11400020
*                                                                       11410020
*/* D (YES,DELIMNL1,NO,) DELIMITER IS AN ASTERISK */                    11412001
         CLI   ZERO(XINPUT),ASTERISK   IS DELIM AN ASTERISK             11420020
         BE    DELIMNL1                YES, THEN DELIM IS INVALID AND   11430020
*                                         STRING IS MISSING             11440020
*/* D (YES,DELIMNL1,NO,) DELIMITER IS LEFT PAREN */                     11442001
         SPACE                                                          11450020
         CLI   ZERO(XINPUT),LEFTPRN    IS DELIM A LEFT PAREN            11460020
         BE    DELIMNL1                YES, THEN DELIM IS INVALID AND   11470020
*                                         STRING IS MISSING             11480020
*/* P SAVE DELIMITER FOR FINDING END OF STRING */                       11482001
         SPACE                                                          11490020
         MVC   PDELIM,ZERO(XINPUT)     SAVE THE DELIMITER FOR FUTURE    11500020
*                                         COMPARES FOR END OF STRING    11510020
         NI    PFLAGS3,HFF-PFSTPRMT    CLEAR POSSIBLE PROMPT-FOR-STRING 11520020
*                                         INDICATOR                     11530020
         NI    PFLAGS4,HFF-PFENDLIM    CLEAR POSSIBLE END-DELIMITER     11540020
*                                       FOUND INDICATOR                 11550020
*/* D (,POSITX3) EXIT */                                                11552001
         B     POSITX3                 EXIT                             11560020
*/*DELIMNL1: P BACK UP SCAN POINTER */                                  11562001
         SPACE                                                          11570020
DELIMNL1 DS    0H                      * * * *                          11580020
         BCTR  XINPUT,ZERO             BACK UP INPUT POINTER            11590020
*/*DELIMNL: P SAVE NEW LINE CHARACTER */                                11592001
         SPACE                                                          11600020
DELIMNL  DS    0H                      * * * *                          11610020
         MVI   PDELIM,NLCHAR           STORE NEW LINE CHARACTER FOR     11620020
*                                         COMPARES FOR END OF STRING    11630020
*                                         AFTER PROMPT OR DEFAULT       11640020
*/* P SET INDICATOR FOR PROMPT */                                       11642001
         OI    PFLAGS3,PFSTPRMT        SET PROMPT-FOR-STRING INDICATOR  11650020
*/* D (,POSITX3) EXIT ROUTINE */                                        11652001
         B     POSITX3                 EXIT                             11660020
         EJECT                                                          11670020
*********************************************************************** 11680020
*                                                                     * 11690020
*            POSITIONAL SELF-DELIMITING STRING ROUTINE                * 11700020
*                                                                     * 11710020
*    THIS ROUTINE PROCESSES A STRING WHICH IS DELIMITED BY A SELF-    * 11720020
* DEFINED DELIMITER.  IT ASSUMES A DELIMITER PCE HAS ALREADY BEEN     * 11730020
* PROCESSED.  IF THE 'DELIMITER' WAS AN UNSUITABLE DELIMITER A FLAG   * 11740020
* WAS SET BY THE DELIMITER ROUTINE INDICATING THE STRING SHOULD BE    * 11750020
* PROMPTED FOR IF REQUIRED.  THE DATA RECEIVED FROM A PROMPT OR       * 11760020
* DEFAULT DOES NOT INCLUDE DELIMITERS.  THE END OF THE STRING IS      * 11770020
* FOUND WHEN THE SELF-DEFINED DELIMITER IS SCANNED OR THE END OF THE  * 11780020
* INPUT IS REACHED.  NULL STRINGS HAVE A POINTER SET AND A LENGTH     * 11790020
* OF ZERO.  IF THE STRING IS REQUIRED A NULL STRING MUST BE ENTERED   * 11800020
* AS TWO CONTIGUOUS SELF-DEFINED DELIMITERS.  IF A STRING IS NOT      * 11810020
* REQUIRED A NULL STRING MAY BE DELIMITED BY THE SELF-DEFINED         * 11820020
* DELIMITER OR BY THE END OF THE INPUT.                               * 11830020
*                                                                     * 11840020
*********************************************************************** 11850020
*/*STRING: P DO NOT SKIP BLANKS AFTER A PROMPT */                       11852001
*/* D (YES,,NO,STRINGN) DELIMITER IS A QUOTE */                         11852401
*/* D (YES,,NO,STRINGN) SPECIAL STRING HANDLING REQUESTED */            11854001
*/* D (YES,,NO,QSTRING) FIRST TIME THROUGH */                           11856001
*/* P BACK UP SCAN POINTER ONE PLACE */                                 11858001
*/* D (,QSTRING) TREAT AS QUOTED STRING */                              11858401
*/*STRINGN: P TURN OFF FIRST TIME SWITCH FOR QSTRING */                 11858801
         SPACE                                                          11860020
STRING   DS    0H                      SELF-DELIMITING STRING ROUTINE   11870020
         CLI   PDELIM,QUOTE            IS DELIMITER A QUOTE      S21105 11872001
         BNE   STRINGN                 NO, CONTINUE              S21105 11874001
         TM    PCEFLGB2(XPCE),PCEFQSTR IS SPECIAL STRING HANDLING       11876020
*                                         REQUESTED              S21105 11878001
         BZ    STRINGN                 NO, CONTINUE              S21105 11878401
         TM    PFLAGS5,PFSQSTR         IS THIS THE FIRST TIME THROUGH   11878501
*                                                                S21105 11878601
         BZ    STRINGT                 YES, SET FLAG             S21105 11878701
         B     QSTRING                 NO, BRANCH TO PROCESS AS QSTRING 11878801
*                                                                S21105 11879201
STRINGT  OI    PFLAGS5,PFSQSTR         INDICATE SPECIAL HANDLING DONE   11881501
*                                         ONCE                   S21105 11883501
         BCT   XINPUT,QSTRING          BRANCH TO PROCESS AS QSTRING     11884401
*                                                                S21105 11884801
STRINGN  NI    PFLAGS5,HFF-PFSQSTR     TURN OFF SPECIAL HANDLING FLAG   11886401
*                                                                S21105 11886801
         OI    RFLAGS,RFNOSKIP         INDICATE BLANKS SHOULD NOT BE    11887201
*/* D (YES,,NO,STRINGST) PROMPT IS REQUIRED */                          11892001
*/* S PROMPTQ: TEST FOR PROMPT/DEFAULT DATA */                          11912001
*/* D (YES,STRBUMP,NO,POSITX2) DATA RETURNED */                         11942001
*/*STRINGST: P INCREMENT SCAN POINTER */                                11982001
*/* D (YES,,NO,STRPSET) REACHED END OF INPUT */                         12012001
*/* S PROMPTQ: TEST FOR PROMPT/DEFAULT DATA */                          12032001
*                                         SKIPPED AFTER A PROMPT        12041301
         TM    PFLAGS3,PFSTPRMT        IS STRING MISSING                12042401
         BZ    STRINGST                NO - GO SET POINTER              12043501
         SPACE                                                          12044601
         BAL   LINK1,PROMPTQ           TEST FOR PROMPT OR DEFAULT       12045701
*                                                                       12046801
         B     STRBUMP                 +0 RETURN - RESCAN NEW DATA      12047901
*                                                                       12049001
         B     POSITX2                 +4 RETURN - NO DATA, TAKE NULL   12050101
*                                         PDE EXIT                      12051201
         SPACE                                                          12052301
STRINGST DS    0H                      * * * *                          12053401
         LA    R2,ONE(XINPUT)          BUMP POINTER TO NEXT CHARACTER   12054501
         C     R2,ENDINPUT             IS PTR AT END OF INPUT           12055601
         BL    STRPSET                 NO, GO SET PPOINTER              12056701
         SPACE                                                          12057801
         BAL   LINK1,PROMPTQ           YES, CHECK FOR PROMPT OR DEFAULT 12058901
*                                                                       12060020
*/* D (YES,STRBUMP,NO,) DATA RETURNED */                                12062001
         B     STRBUMP                 +0 RETURN - RESCAN NEW DATA      12070020
*                                                                       12080020
*                                      +4 RETURN - NO DATA RETURNED,    12090020
*                                         PROCESS NULL STRING           12100020
*/* D (YES,,NO,POSITX2) END DELIMITER FOUND FOR PREVIOUS STRING */      12102001
         TM    PFLAGS4,PFENDLIM        WAS AN END DELIMITER FOUND       12110020
*                                         FOR A PREVIOUS STRING         12120020
         BZ    POSITX2                 NO, TAKE NO PDE EXIT             12130020
*                                       YES, PROCESS NULL STRING        12140020
*/*STRBUMP: P POINT TO NEXT CHARACTER */                                12142001
         SPACE                                                          12150020
STRBUMP  DS    0H                      * * * *                          12160020
         LA    R2,ONE(XINPUT)          GET PTR TO NEXT CHARACTER        12170020
*/*STRPSET: P SET POINTER TO CHAR. AFTER SELF-DEFINED DELIMITER */      12172001
         SPACE                                                          12180020
STRPSET  DS    0H                      * * * *                          12190020
         ST    R2,PPOINTR              SET PPOINTR TO CHARACTER AFTER   12200020
*                                         SELF-DEFINED DELIMITER OR     12210020
*                                         FIRST CHARACTER OF DATA       12220020
*                                         RETURNED                      12230020
         SPACE                                                          12240020
*                                                                       12250020
* LOOP THROUGH STRING LOOKING FOR DELIMITER OR END OF INPUT.            12260020
*                                                                       12270020
*/*STRINRPT: P INCREMENT SCAN POINTER */                                12272001
STRINRPT DS    0H                      * * * *                          12280020
         LA    XINPUT,ONE(XINPUT)      BUMP SCAN PTR BY ONE             12290020
         LR    XINPUTB,XINPUT          SAVE PTR IN BACKUP REGISTER      12300020
*/* D (YES,STRINEND,NO,) REACHED END OF INPUT */                        12302001
         C     XINPUT,ENDINPUT         END OF INPUT DATA                12310020
         BNL   STRINEND                YES BRANCH                       12320020
*/* D (YES,STRINRPT,NO,) SPACE/STRING SEQUENCE */                       12322001
         SPACE                                                          12330020
         TM    PFLAGS3,PFSPACE         IS THIS A SPACE/STRING PARAMETER 12340020
*                                         SEQUENCE                      12350020
         BO    STRINRPT                IF YES CONTINUE TO END OF BUFFER 12360020
*/* D (YES,,NO,STRINRPT) END OF SELF-DELIMITING STRING */               12362001
         SPACE                                                          12370020
         CLC   PDELIM,ZERO(XINPUT)     END OF SELF-DELIMITING STRING    12380020
         BNE   STRINRPT                IF NO BRANCH                     12390020
         OI    PFLAGS4,PFENDLIM        IF YES, TURN ON DELIMITER FOUND  12400020
*/* P SET INDICATOR FOR DELIMITER FOUND */                              12402001
*                                         FLAG                          12410020
*/*STRINEND: P COMPUTE AND SAVE LENGTH OF STRING */                     12412001
         SPACE                                                          12420020
STRINEND DS    0H                      ENTERED WHEN END OF STRING       12430020
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF STRING         12440020
         STH   XINPUTB,PLENGTH         STORE LENGTH                     12450020
         NI    PFLAGS3,HFF-PFSPACE     TURN OFF POSSIBLE FLAG           12460020
*/* D (,POSITX1) EXIT */                                                12462001
         B     POSITX1                 EXIT - GET NEXT PCE              12470020
         EJECT                                                          12480020
*********************************************************************** 12490020
*                                                                     * 12500020
*                       POSITIONAL VALUE ROUTINE                      * 12510020
*                                                                     * 12520020
*    A VALUE CONSISTS OF A TYPE-CHARACTER FOLLOWED BY A STRING        * 12530020
* ENCLOSED IN QUOTES - X'STRING'.  THE TYPE-CHARACTER MUST BE AN      * 12540020
* ALPHABETIC OR NATIONAL CHARACTER.  THE STRING MAY CONSIST OF ANY    * 12550020
* COMBINATION OF CHARACTERS OF ANY LENGTH.  A LIST OF VALUES AND A    * 12560020
* RANGE OF VALUES ARE ALLOWED.  IF THE FIRST NON-BLANK CHARACTER IS   * 12570020
* NOT ALPHABETIC, THE VALUE IS CONSIDERED MISSING.  THE VALUE IS      * 12580020
* ALSO CONSIDERED MISSING IF THE CHARACTER AFTER THE TYPE-            * 12590020
* CHARACTER IS NOT A QUOTE.  THE TYPE-CHARACTER IS RAISED TO          * 12600020
* UPPER CASE.  THE STRING PORTION IS PROCESSED BY THE QSTRING         * 12610020
* ROUTINE.  IF THE ENDING QUOTE IS LEFT OFF, THE END OF THE           * 12620020
* BUFFER DELIMITS THE STRING.  A MESSAGE IS ISSUED TO INDICATE THIS   * 12630020
* SITUATION TO THE USER.                                              * 12640020
*                                                                     * 12650020
*********************************************************************** 12660020
*/*VALUE: P SAVE PDE SIZE */                                            12662001
         SPACE                                                          12670020
VALUE    DS    0H                      VALUE ROUTINE                    12680020
         LA    R1,SEVEN                GET PDE SIZE-1                   12690020
         STC   R1,PPCOUNT              SAVE                             12700020
*/* D (YES,ILLVALU,NO,) INPUT ENDED AFTER LEFT PAREN WAS FOUND */       12700401
*/* S SKIPB: SKIP SEPARATORS */                                         12702001
         BAL   LINK2,SKIPB             BRANCH TO SKIP SEPARATORS        12710020
*                                                                       12720020
*/* D (YES,VALUEPRQ,NO,) REACHED END OF INPUT */                        12722001
         B     VALUEPRQ                +0 RETURN - END OF INPUT DATA    12730020
*                                                                       12740020
*/* S LISTT: CHECK FOR A LIST */                                        12742001
         BAL   LINK1,LISTT             +4 RETURN - CHECK FOR A LIST     12750020
         SPACE                                                          12760020
         B     ILLVALU                 +0 RETURN, INPUT ENDED AFTER     12770020
*                                         LEFT PAREN WAS FOUND, INVALID 12780020
*                                         PARM                          12790020
         SPACE                                                          12800020
*                                      +4 RETURN, NO LIST OR SCAN       12810020
*                                         POINTER ADJUSTED TO FIRST     12820020
*                                        PARM IN LIST                   12830020
         SPACE                                                          12840020
*                                                                       12850020
* ENTRY POINT TO RESCAN A VALUE AFTER PROMPTING.                        12860020
*                                                                       12870020
*/*VALUERSC: P RESCAN VALUE AFTER PROMPTING */                          12872001
VALUERSC DS    0H                      * * * *                          12880020
         MVC   INVPSAVE,PPOINTR        SAVE PTR FOR INVALID MSG         12890020
*/*VAL2RSC: P SCAN POSSIBLE 2ND RANGE VALUE */                          12892001
VAL2RSC  DS    0H                      ENTRY TO SCAN 2ND RANGE VALUE    12900020
         LA    XINPUT,ONE(XINPUT)      POINT TO NEXT INPUT CHARACTER    12910020
*/* S TYPETEST: TEST FOR VALID ALPHABETIC CHARACTER */                  12912001
         LA    R1,ALPHA                TEST FOR ALPHABETIC              12920020
         BAL   LINK1,TYPETEST          CHARACTER                        12930020
*/* D (YES,VALUPRQX,NO,) INVALID CHARACTER FOUND */                     12932001
         SPACE                                                          12940020
         B     VALUPRQX                +0 RETURN - INVALID, VALUE IS    12950020
*                                         MISSING                       12960020
*                                                                       12970020
*                                      +4 RETURN - VALID CHARACTER      12980020
*/* P COPY TYPE FIELD TO TEMPORARY PDE */                               12982001
         MVC   DATAFLB1(ONE),ZERO(XINPUT) COPY TYPE FIELD TO TEMP. PDE  12990020
         L     R15,AUPTAB              GET ADDRESS OF TRANSLATE TABLE   13000020
         TR    DATAFLB1(ONE),ZERO(R15)  RAISE TO UPPERCASE              13010020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN REGISTER          13020020
         LR    XINPUTB,XINPUT          SET BACKUP REGISTER              13030020
*/* D (YES,,NO,VALENTRY) REACHED END OF INPUT AFTER FIRST CHARACTER */  13032001
         C     XINPUT,ENDINPUT         END OF INPUT DATA                13040020
         BL    VALENTRY                NO - CONTINUE PROCESSING USING   13050020
*                                         QSTRING CODE                  13060020
         BCTR  XINPUT,ZERO             YES - BACKUP AND TRY TO PROMPT   13070020
         SPACE                                                          13080020
*                                                                       13090020
* BRANCH TO PROMPT/DEFAULT ROUTINE.                                     13100020
*                                                                       13110020
*/* VALUPRQX: P PREPARE TO PROMPT */                                    13112001
VALUPRQX DS    0H                      * * * *                          13120020
         BCTR  XINPUT,ZERO             REDUCE SCAN PTR BY ONE           13130020
         SPACE                                                          13140020
VALUEPRQ DS    0H                      * * * *                          13150020
*/*VALUEPRQ: D (YES,ILLVALU,NO,) FIRST VALUE OF A RANGE WAS FOUND */    13152001
         TM    PFLAGS2,RNGEVAL1        WAS THE FIRST VALUE OF RANGE     13160020
*                                         FOUND                         13170020
         BO    ILLVALU                 YES - INVALID VALUE --- BRANCH   13180020
*/* S PROMPTQ: TEST FOR PROMPT/DEFAULT DATA */                          13182001
         SPACE                                                          13190020
         BAL   LINK1,PROMPTQ           TEST FOR PROMPT OR DEFAULT       13200020
*                                                                       13210020
*/* D (YES,,NO,VALUERSC) NO PROMPT OR DEFAULT */                        13212001
         B     VALUERSC                +0 RETURN - NEW DATA TO SCAN     13220020
*                                                                       13230020
*                                      +4 RETURN - NO PROMPT OR DEFAULT 13240020
*/* P CLEAR TYPE CODE FIELD */                                          13242001
         MVI   DATAFLB1,ZERO           CLEAR TYPE CODE FIELD            13250020
*/* D (,POSITX2) BRANCH TO NULL DATA EXIT */                            13252001
         B     POSITX2                 BRANCH TO NULL DATA EXIT         13260020
         EJECT                                                          13260101
*********************************************************************** 13260401
*                                                                     * 13260801
*                       STORAGE ALLOCATION SUBROUTINE                 * 13261201
*                                                                     * 13261601
*   REGISTER RESTRICTIONS -                                           * 13261701
*                         R2 OR R3 CANNOT BE USED BY THIS ROUTINE     * 13261801
*                                                                     * 13261901
*********************************************************************** 13262501
         SPACE                                                          13262901
*/*STALOC: E STORAGE ALLOCATION SUBROUTINE */                           13263301
STALOC   DS    0H                      STORAGE ALLOCATION SUBROUTINE    13263701
*/* P ROUND AMOUNT OF STORAGE REQUESTED TO 8 */                         13263801
         LA    R1,SEVEN(R1)            ROUND AMOUNT OF STORAGE          13263901
         N     R1,EIGHTMAK                REQUESTED TO EIGHT            13264401
         LR    R0,R1                   SET LENGTH REQUIRED              13264801
*/* D (YES,STALOALX,NO,) MORE STORAGE REQUESTED THAN NORMAL */          13265201
         C     R0,MAXBLKSZ             MORE STORAGE REQUESTED THAN      13265301
*                                         NORMAL ALLOCATION             13265401
         BNL   STALOALX                YES GET NEW CORE                 13265801
         SPACE                                                          13266101
*/*STALOFST: P LOAD ADDR OF INTERNAL MAIN STORAGE SPACE ANCHOR */       13266501
STALOFST DS    0H                      * * * *                          13266901
         LA    R15,PANCHORT            LOAD ADDRESS OF INTERNAL MAIN    13267301
*                                         STORAGE SPACE ANCHOR          13267401
         SPACE                                                          13267801
*/*STALONXT: P LOAD NEXT ELEMENT ADDRESS */                             13267901
STALONXT DS    0H                      * * * *                          13268001
         LR    R1,R15                  SAVE BACKUP                      13268101
         L     R15,ZERO(R15)           LOAD NEXT ELEMENT ADDRESS        13268201
*/* D (YES,,NO,STALOALO) ANY STORAGE LEFT */                            13268301
         LTR   R15,R15                 ANY STORAGE LEFT                 13268401
         BZ    STALOALO                IF NO ALLOCATE MORE              13268801
         SPACE                                                          13268901
*/* D (YES,,NO,STALONXT) IS IT ENOUGH */                                13269201
         C     R0,FOUR(R15)            IF YES IS IT ENOUGH              13271201
         BH    STALONXT                NO TRY NEXT ELEMENT              13271301
         SPACE                                                          13271401
*/* D (YES,STALOSPL,NO,) IS IT EQUAL */                                 13271501
         BE    STALOSPL                EQUAL --- SPECIAL CHAINING       13271701
         SPACE                                                          13272101
*/* P COMPUTE LEFTOVER AMOUNT SINCE THERE'S MORE THAN ENOUGH */         13272201
         LR    R14,R15                 MORE THAN ENOUGH --- COMPUTE     13272301
         AR    R14,R0                     LEFTOVER AMOUNT               13272401
         MVC   ZERO(FOUR,R14),ZERO(R15) RESET FORWARD CHAIN             13272501
         ST    R14,ZERO(R1)            SET NEW FORWARD CHAIN            13272601
         L     R1,FOUR(R15)            PICK UP LENGTH                   13272801
         SR    R1,R0                   GET REMAINDER                    13273201
         ST    R1,FOUR(R14)            STORE REMAINDER                  13273301
         SPACE                                                          13273401
*/*STALOXIT: P CLEAR OLD CHAINING INFO */                               13273501
STALOXIT DS    0H                      * * * *                          13273601
         LR    R1,R15                  GET RETURN ADDRESS               13273701
         XC    ZERO(EIGHT,R1),ZERO(R1) CLEAR OLD CHAINING INFO          13273801
*/* R RETURN TO CALLER */                                               13273901
         BR    LINK2                   RETURN TO CALLER                 13274001
         SPACE                                                          13274101
*/*STALOSPL: P COPY FORWARD CHAIN */                                    13274201
STALOSPL DS    0H                      * * * *                          13274601
         MVC   ZERO(FOUR,R1),ZERO(R15) COPY FORWARD CHAIN               13274701
*/* D (,STALOXIT) EXIT */                                               13274801
         B     STALOXIT                EXIT TO CALLER                   13274901
         SPACE                                                          13275101
*/*STALOALO: P INDICATE 248 BYTE CHUNK */                               13275501
STALOALO DS    0H                      * * * *                          13275901
         L     R1,MAXBLKSZ             INDICATE NEED 248 BYTE CHUNK     13276301
         SPACE                                                          13276401
*/*STALOALX: S GETCORE: GET CORE REQUESTED */                           13276501
STALOALX DS    0H                      * * * *                          13276601
         AL    R1,SPOVRHD              ADD SUBPOOL AND EIGHT BYTE       13277001
*                                         OVERHEAD FOR STORAGE CHAINS   13277401
         STM   R0,R1,PDWORD            SAVE REQUEST AND REQUIRED SIZES  13277801
         BAL   LINK1,GETCORE           LINK TO GETCORE TO DO            13277901
*                                         CONDITIONAL GETMAIN FOR SPACE 13278001
         SPACE                                                          13278101
*                                      STORAGE ADDRESS RETURNED IN R1   13279001
         L     R15,PANCHOR             LOAD ADDRESS OF LAST AREA GOTTEN 13279401
*/* D (YES,STALOFRT,NO,) FIRST TIME THROUGH */                          13279801
         LTR   R15,R15                 IS THIS THE FIRST TIME           13279901
         BZ    STALOFRT                IF YES BRANCH                    13280001
         SPACE                                                          13280101
*/* P FORWARD CHAIN GETMAIN AREAS */                                    13280601
         ST    R1,ZERO(R15)            FORWARD CHAIN GETMAIN AREAS      13281001
         SPACE                                                          13281401
*/*STALOFRT: P INDICATE NEW AREA IS END OF CHAIN */                     13281801
STALOFRT DS    0H                      * * * *                          13281901
         MVC   ZERO(FOUR,R1),ENDCHAIN  INDICATE NEW AREA IS END OF      13282301
*                                         CHAIN                         13282701
         MVC   FOUR(FOUR,R1),PDWORD+FOUR ADD SIZE TO STORAGE CHAINS     13283101
         NI    PDWORD+FOUR,ZERO        KILL SUBPOOL INDICATOR           13283501
         ST    R1,PANCHOR              STORE STORAGE ADDRESS            13283601
         LA    R1,EIGHT(R1)            BUMP PAST STORAGE CHAINS         13283701
         MVC   ZERO(FOUR,R1),PANCHORT  OTHER ANCHORS                    13283801
         ST    R1,PANCHORT                ON OTHER CHAINS               13284001
         L     R15,PDWORD+FOUR         GET SIZE OF STORAGE REQUESTED    13284401
         SH    R15,H8                  REDUCE BY SIZE OF STORAGE CHAINS 13284501
         ST    R15,FOUR(R1)            STORE LENGTH AVAILABLE           13284601
*/* P COMPUTE AMOUNT OF CORE TO CLEAR */                                13284701
         SH    R15,H8                  COMPUTE AMOUNT OF CORE TO CLEAR  13284801
         LA    R1,EIGHT(R1)            SET UP STARTING ADDRESS          13284901
         SPACE                                                          13285001
*/*STALOCLR: P CLEAR THE STORAGE */                                     13285101
STALOCLR DS    0H                      * * * *                          13285201
         BCTR  R15,ZERO                DECREMENT SIZE FOR EXECUTE       13285601
         EX    R15,CLEARXC             CLEAR THE STORAGE                13285701
         LR    R14,R15                 COPY LENGTH USED                 13285801
         N     R14,CLEARMK1            MASK OFF HIGH PART TO GET LENGTH 13286101
*                                         USED                          13286501
         LA    R1,ONE(R1,R14)          GET NEW START CLEAR ADDRESS      13286901
         N     R15,CLEARMK2            CLEAR LOWER PART FOR NEXT TRY    13287001
         BNZ   STALOCLR                CLEAR IT UNLESS DONE             13287101
         SPACE                                                          13287201
*/* P GET LENGTH REQUESTED FOR GETMAIN */                               13287301
         L     R0,PDWORD               GET LENGTH REQUESTED FOR GETMAIN 13287701
*/* D (,STALOFST) TRY AGAIN */                                          13287801
         B     STALOFST                TRY IT AGAIN                     13287901
         EJECT                                                          13288401
*********************************************************************** 13291701
*                                                                     * 13293701
*               POSITIONAL PARENTHESIZED STRING ROUTINE               * 13295701
*                                                                     * 13296101
*   THIS ROUTINE IS USED TO SCAN A STRING OF DATA ENCLOSED BY A SET   * 13296501
* OF PARENTHESIS - (STRING). THE STRING CAN CONSIST OF ANY            * 13296901
* COMBINATION OF CHARACTERS, HOWEVER, IF IT INCLUDES PARENTHESIS THEY * 13297001
* MUST BE BALANCED.                                                   * 13297101
*   A PSTRING CAN NEVER BE SYNTACTICALLY INVALID (VALIDITY CHECK EXIT * 13297201
* ROUTINE CAN REQUEST THAT IT BE CONSIDERED INVALID) BUT IF THE       * 13299301
* NEXT ITEM IN THE BUFFER DOES NOT BEGIN WITH A LEFT PARENTHESIS THE  * 13301301
* PSTRING IS CONSIDERED TO BE MISSING. A PROMPT OR A DEFAULT MAY BE   * 13301401
* SPECIFIED FOR A PSTRING.                                            * 13301501
*   IF THE USER LEAVES THE RIGHT PARENTHESIS OFF, THE END OF THE      * 13304101
* BUFFER DELIMITS THE STRING. A MESSAGE IS ISSUED TO INDICATE THIS    * 13306101
* SITUATION TO THE USER.                                              * 13306501
*                                                                     * 13306901
*********************************************************************** 13307201
*/*PSTRING: S SKIPB: SKIP SEPARATORS */                                 13307601
         SPACE                                                          13307701
PSTRING  DS    0H                      PSTRING ROUTINE                  13307801
         BAL   LINK2,SKIPB             SKIP SEPARATORS                  13308301
*                                                                       13308701
*/* D (YES,,NO,PSTRIPRQ) DATA IN BUFFER */                              13309101
         B     PSTRIPRQ                +0 RETURN - NO DATA - PROMPT     13309201
*                                                                       13309301
*                                      +4 RETURN - DATA TO SCAN -       13309401
*                                         XINPUT POINTS TO NONSEPARATOR 13309501
         TM    PFLAGS5,SUBFLG          PROCESSING SUBFIELD?      Y02666 13309602
         BZ    PSTRIRSC                DONOT ALLOW LIST          Y02666 13309702
*     PROCESS POSSIBLE LIST                                      Y02666 13309902
         BAL   LINK1,LISTT             PROCESS POSSIBLE LIST     Y02666 13311502
         B     ILLPSTR                 +0 RETURN-INVALID,PROCESS Y02666 13311902
*                                      +4 RETURN DETERMINE IF LIST IS   13312402
*                                      THE DUMMY ONE             Y02666 13312902
         LA    R0,LRPAREN+ONE          GET DUMMY LIST PTR        Y02666 13314002
         CR    R0,XINPUT               PROCESSING A DUMMY LIST   Y02666 13314502
         BE    PSTRIPRQ                YES, DATA MISSING-PROMPT  Y02666 13318902
         SPACE                                                          13320402
*                                                                       13321002
* ENTRY POINT TO RESCAN NEW DATA FROM PROMPT OR DEFAULT.                13321602
*                                                                       13322202
*/*PSTRIRSC: P RESCAN NEW DATA FROM PROMPT/DEFAULT */                   13322802
PSTRIRSC DS    0H                      * * * *                          13323402
         MVC   INVPSAVE,PPOINTR        SAVE PTR FOR INVALID MSG         13324002
         LA    XINPUT,ONE(XINPUT)      BUMP SCAN PTR BY ONE             13324602
*/* D (YES,,NO,PSTRPRQX) NEXT CHARACTER IS LEFT PAREN */                13325202
         CLI   ZERO(XINPUT),LEFTPRN    IS NEXT CHARACTER LEFT PAREN.    13325802
         BNE   PSTRPRQX                NO - ERROR - PROMPT              13326402
         SPACE                                                          13327002
         LA    R2,ONE(XINPUT)          YES - SET PPOINTR TO FIRST       13327602
         ST    R2,PPOINTR                 CHARACTER IN PSTRING          13328202
*/* P SET DEPTH METER FOR NUMBER OF PARENS FOUND */                     13328802
         LA    R2,ONE                  SET DEPTH METER TO ONE           13329402
*/*PSTRISCN: P LOOK FOR END OF STRING */                                13330002
         SPACE                                                          13330602
PSTRISCN DS    0H                      LOOP LOOKING FOR END OF STRING   13331202
         LA    XINPUT,ONE(XINPUT)      BUMP SCAN PTR BY ONE             13331802
         LR    XINPUTB,XINPUT          LOAD BACKUP REGISTER             13332402
*/* D (YES,PSTRIMSG,NO,) REACHED END OF INPUT */                        13333002
         C     XINPUT,ENDINPUT         IS THIS END OF INPUT DATA        13333602
         BNL   PSTRIMSG                IF YES BRANCH                    13334202
*/* D (YES,,NO,PSTRINLP) ANOTHER LEFT PAREN FOUND */                    13334802
         SPACE                                                          13335402
         CLI   ZERO(XINPUT),LEFTPRN    IS IT ANOTHER LEFT PAREN         13336002
*/*PSTRINLP: D (YES,,NO,PSTRISCN) RIGHT PAREN FOUND */                  13336602
         BNE   PSTRINLP                IF NO SKIP LEVEL INCREMENT       13337202
*/* P INCREMENT DEPTH METER */                                          13337802
         SPACE                                                          13338402
         LA    R2,ONE(R2)              BUMP DEPTH METER BY ONE          13339002
         SPACE                                                          13339602
PSTRINLP DS    0H                      * * * *                          13340202
         CLI   ZERO(XINPUT),RIGHTPRN   IS IT A RIGHT PAREN              13340802
         BNE   PSTRISCN                NO - BRANCH                      13341402
*/* P DECREMENT DEPTH METER */                                          13342002
*/* D (YES,,NO,PSTRISCN) DEPTH METER IS ZERO */                         13342602
         SPACE                                                          13343202
         BCT   R2,PSTRISCN             YES - DECREMENT LEVEL WHEN ZERO  13343802
*                                         FALL THROUGH                  13344402
         SPACE                                                          13345002
*                                                                       13345602
* END OF PSTRING FOUND.                                                 13346202
*                                                                       13346802
*/* P COMPUTE AND SAVE LENGTH OF PSTRING */                             13347402
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF PSTRING        13348002
         STH   XINPUTB,PLENGTH         STORE LENGTH                     13348602
*/* D (,POSITX1) EXIT */                                                13349202
         B     POSITX1                 BRANCH TO EXIT ROUTINE           13349802
         SPACE                                                          13350402
*                                                                       13351002
* SEE IF PSTRING REQUIRED OR DEFAULTED.                                 13351602
*                                                                       13352202
*/*PSTRPRQX: P PREPARE FOR PROMPT/DEFAULT */                            13352802
PSTRPRQX DS    0H                      * * * *                          13353402
         BCTR  XINPUT,ZERO             REDUCE SCAN POINTER BY ONE       13354002
*/*PSTRIPRQ: S PROMPTQ: TEST FOR PROMPT/DEFAULT DATA */                 13354602
         SPACE                                                          13355202
PSTRIPRQ DS    0H                      * * * *                          13355802
         BAL   LINK1,PROMPTQ           TEST FOR PROMPT OR DEFAULT       13356402
*                                                                       13357002
*/* D (YES,PSTRIRSC,NO,POSITX2) NEW DATA RETURNED */                    13357602
         B     PSTRIRSC                +0 RETURN - RESCAN NEW DATA      13358202
*                                                                       13358802
         B     POSITX2                 +4 RETURN - NOT REQUIRED AND NO  13359402
*                                         DEFAULT - EXIT                13360002
         SPACE                                                          13360602
*                                                                       13361202
* ISSUE 'RIGHT PAREN ASSUMED' MESSAGE AND TREAT AS IF RIGHT PAREN       13361802
* FOUND.                                                                13362402
*                                                                       13363002
*/*PSTRIMSG: P COMPUTE AND SAVE LENGTH OF PSTRING */                    13363602
PSTRIMSG DS    0H                      END OF BUFFER FOUND              13364202
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF PSTRING        13364802
         STH   XINPUTB,PLENGTH         SAVE LENGTH                      13365402
         LA    R1,FIVE(XINPUTB)        GET SIZE OF CORE FOR MESSAGE SEG 13366002
*                                         PLUS HEADER AND LEFT PAREN    13366602
*/* S GETCORE: GET CORE FOR MESSAGE SEGMENT */                          13367202
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     13367802
         SPACE                                                          13368402
*                                      CORE ADDRESS RETURNED IN R1      13369002
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 13369602
         LA    R0,FIVE(XINPUTB)        GET SIZE OF MESSAGE SEGMENT      13370202
         STH   R0,ZERO(R1)             STORE INTO SEGMENT               13370802
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 13371402
         MVI   THREE(R1),OFFSET4       SET OFFSET TO LENGTH OF 'RIGHT   13372002
*                                         PAREN ASSUMED' MESSAGE        13372602
         L     R15,PPOINTR             LOAD START OF DATA ADDRESS       13373202
         BCTR  R15,ZERO                INCLUDE LEFT PAREN IN MESSAGE    13373802
         EX    XINPUTB,BUILDSEG        MOVE TEXT TO NEW SEGMENT         13374402
*/* P INDICATE 'RIGHT PAREN ASSUMED' MESSAGE */                         13375002
         MVI   MSGCODE,MSG8            INDICATE MESSAGE TO WRITE        13375602
*/* S WRITE1: WRITE THE MESSAGE */                                      13376202
         BAL   LINK1,WRITER1           WRITE THE MESSAGE                13376802
*/* D (YES,,NO,PSTRET) PROCESSING COBOL PCE'S? */                       13377402
         TM    CBFLAGS1,COBOLMOD       DID WE WRITE THE MESSAGE  F41448 13378002
*                                      WHILE PROCESSING COBOL    F41448 13378602
*                                      PCE'S?                    F41448 13379202
         BZ    PSTRET                  IF NOT, CONTINUE NORMAL   F41448 13379802
*/* P LOAD IKJPARS2 RETURN ADDRESS */                                   13380402
*/* R () EXIT TO IKJPARS2 */                                            13381002
         L     LINK2,CBLNKSV2          PARSE. IF IN COBOL MODE   F41448 13381602
*                                      LOAD RETURN ADDRESS       F41448 13382202
         BR    LINK2                   FROM CBLNKSV2 + RETURN    F41448 13382802
*/*PSTRET: D (,POSITX1) EXIT AS NORMAL */                               13383402
         SPACE                                                          13384002
PSTRET   B     POSITX1                 EXIT AS NORMAL                   13384602
         EJECT                                                          13385202
*********************************************************************** 13485203
*                                                               Y30NQJN 13535203
***                                                                 *** 13585203
*              A    D    D    R    E    S    S                        * 13685203
*                                                                     * 13785203
*               THIS CODE SIMPLY GETS THE ADDRESS OF THE              * 13885203
*        ADDRESS PCE PROCESSOR, IKJEFP03, AND PASSES CONTROL TO IT.   * 13985203
***                                                                 *** 14085203
*                                                               Y30NQJN 14185203
ADDRESS  DS    0H                      LINK TO ADDRESS PCE PROCESSOR    14385203
         L     R15,ADDRP               GET PCE PROCESSOR POINTER        15385203
         BR    R15                     GO PROCESS THE ADDRESS           16385203
***                                                                 *** 16485203
*                                                                     * 16585203
*                                                                     * 16685203
***                                                                 *** 16785203
*********************************************************************** 16885203
         EJECT                                                          17385203
*********************************************************************** 20894502
*                                                                     * 20924902
*                                                                       20944902
*                       FORCE PUSHDOWN STACK POP SUBROUTINE           * 20974902
*                                                                     * 20982902
*    REGISTER RESTRICTIONS -                                          * 20990902
*                          R3 CANNOT BE USED BY THIS ROUTINE          * 20998902
*                                                                     * 21006902
*********************************************************************** 21014902
         SPACE                                                          21022902
*/*SCANF: E STACK POP ROUTINE */                                        21030902
SCANF    DS    0H                      * * * *                          21038902
*/*SCANF9: P POINT TO NEXT CHARACTER */                                 21046902
SCANFX   DS    0H                                                Y01156 21054902
         LA    R0,ONE(XINPUT)          POINT TO NEXT SCANX CHARACTER    21062902
         SPACE                                                          21070902
*/*SCANF1: D (YES,SCANDLSN,NO,) REACHED END */                          21078902
SCANF1   DS    0H                      * * * *                          21086902
         C     R0,ENDINPUT             SEE IF SCANX OFF THE END         21094902
*/* R RETURN */                                                         21102902
         BL    FOUR(LINK1)             NO, GOOD FOR USE - RETURN +4     21110902
         SPACE                                                          21118902
*/*SCANDLSN: D (YES,SCANDSY,NO,) STACK IS TO BE POPPED */               21126902
SCANDLSN DS    0H                      * * * *                          21134902
         TM    PFLAGS4,PFNOPOP         IS STACK TO BE POPPED      M0911 21142902
*/* R RETURN - DON'T POP */                                             21150902
         BNZ   ZERO(LINK1)             NO, DON'T POP              M0911 21158902
*/*SCANDSY: D (YES,SCANPOP,NO,) ANYTHING ON INPUT STACK */              21166902
         TM    DATAFLA3,PRESENT        TEST TO SEE IF NEW PASSWORD HAS  21167900
*                                      BEEN PROCESS            @Z40RPKQ 21168900
         BZ    CKSTACK                 NO - TEST TO SEE IF ANYTHING IS  21169900
*                                      ON INPUT STACK          @Z40RPKQ 21170900
         XC    PIPDLX,PIPDLX           INDICATE THAT NO PASSWORD IS ON  21171900
*                                      INPUT STACK             @Z40RPKQ 21172900
CKSTACK  DS    0H                      * * * *                 @Z40RPKQ 21173900
         CLI   PIPDLX,ZERO             ANYTHING ON INPUT STACK          21174902
         BNZ   SCANPOP                 YES - POP ONE LEVEL              21182902
         L     R1,PIPDLCUR             LOAD PTR TO CURRENT STACK        21190902
*/* D (YES,,NO,SCANPOP2) FIRST STACK IN CHAIN */                        21198902
         NC    ONE(THREE,R1),ONE(R1)   IS THIS FIRST STACK IN CHAIN     21206902
         BNZ   SCANPOP2                IF NO BRANCH                     21214902
         SPACE                                                          21222902
         OI    PFLAGS,PFENDF           SET END-OF-FILE INDICATOR        21230902
         NI    PFLAGS4,HFF-PFSLASH     INDICATE SLASH SCAN       M3098  21238902
*                                         COMPLETE AND NO DECREMENT     21246902
*/*  R RETURN - ERROR +0 */                                             21254902
         BR    LINK1                   ERROR RETURN +0                  21262902
         SPACE                                                          21270902
*/*SCANPOP: D (NO,SCANPOP3,YES,) PROCESSING COBOL PCE'S? */             21278902
*/* D (YES,SCANF2,NO,SCANPOP4) HAS STACK BEEN POPPED ONCE? */           21286902
*/*SCANPOP3: D (YES,,NO,SCANF2) END OF INPUT ON PROMPT/DEFAULT DATA */  21294902
*/* D (YES,,NO,SCANF2) SCAN FOR POSSIBLE PASSWORD */                    21302902
SCANPOP  DS    0H                      * * * *                          21310902
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 21318902
         BZ    SCANPOP3                NO-CONTINUE NORMAL PARSE  F41448 21326902
         TM    CBFLAGS2,BUFPOPED       HAS STACK BEEN POPPED     F41448 21334902
*                                      ONCE?                     F41448 21342902
         BZ    SCANPOP4                IF NOT, SET UP PFENDSET   F41448 21350902
         B     SCANF2                  IF YES, DON'T SET PFENDSETF41448 21358902
SCANPOP3 TM    PFLAGS4,PFPDDATA+PFSLASH  END OF INPUT ON PROMPT/DEFAULT 21366902
*                                         DATA OR IS SCAN FOR POSSIBLE  21374902
*                                         PASSWORD                      21382902
         BZ    SCANF2                  NO, CONTINUE                     21390902
         SPACE                                                          21398902
*/*SCANPOP4: P INDICATE ENDINPUT BAKUP IS SET (PFENDSET) */             21406902
SCANPOP4 OI    PFLAGS4,PFENDSET        INDICATE ENDINPUT BAKUP IS SET   21414902
*/* P SAVE END OF PROMPT/DEFAULT DATA */                                21422902
         MVC   ENDBAKUP,ENDINPUT       SAVE END OF PROMPT/DEFAULT DATA  21430902
*                                         FOR POSSIBLE INVALID MESSAGE  21438902
*/* P INDICATE SCAN COMPLETE FOR SLASH OR PROMPT/DEFAULT DATA */        21446902
         NI    PFLAGS4,HFF-PFPDDATA-PFSLASH INDICATE SCAN COMPLETE FOR  21454902
*                                         SLASH OR PROMPT/DEFAULT DATA  21462902
         SPACE                                                          21470902
*/*SCANF2: P GET INDEX TO NEXT EMPTY SLOT IN STACK */                   21478902
SCANF2   DS    0H                      * * * *                          21486902
         NI    PFLAGS,HFF-PFENDF       TURN OFF POSSIBLE END OF FIELD   21494902
*                                         FLAG                          21502902
         XR    R1,R1                   ZERO WORK REGISTER               21510902
         IC    R1,PIPDLX               GET INDEX TO NEXT EMPTY SLOT IN  21518902
*                                         PUSHDOWN STACK                21526902
         SH    R1,H8                   DECREMENT TO PREVIOUS LEVEL      21534902
         STC   R1,PIPDLX               REPLACE THE INDEX                21542902
         A     R1,PIPDLCUR             COMPUTE ADDRESS FOR RESTORE      21550902
         LA    R1,FOUR(R1)             ACCOUNT FOR CHAIN WORD           21558902
*/* P RESET POINTERS */                                                 21566902
*                                                                       21574902
         MVC   ENDINPUT,FOUR(R1)       RESET END POINTER                21582902
         L     XINPUT,ZERO(R1)         RESET SCAN POINTER               21590902
         LR    R0,XINPUT               COPY SCAN POINTER FOR TEST AT    21598902
*                                         SCANF1                        21606902
*/* D (NO,SCANF4,YES,) PROCESSING COBOL PCE'S? */                       21614902
*/* P (,SCANF9) TURN BUFFER POPPED ONCE INDICATOR ON - BUFPOPED */      21622902
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 21630902
         BZ    SCANF                   NO-CONTINUE NORMAL PARSE  F41448 21638902
         OI    CBFLAGS2,BUFPOPED       IF COBOL, TURN BUFFER     F41448 21646902
*                                      POPPED FLAG ON            F41448 21654902
*/*SCANF4: D (,SCANF9) REPEAT END OF DATA TEST */                       21662902
         B     SCANFX                  REPEAT END OF DATA TEST    M1647 21670902
         SPACE                                                          21678902
*                                                                       21686902
* DROP BACK TO PREVIOUS STACK IN CHAIN.                                 21694902
*                                                                       21702902
*/*SCANPOP2: P DROP BACK TO PREVIOUS STACK */                           21710902
SCANPOP2 DS    0H                      DROP BACK TO PREVIOUS STACK      21718902
         MVC   PIPDLCUR+ONE(L'PIPDLCUR-ONE),ONE(R1) RESET CURRENT STACK 21726902
*                                         PTR TO PREVIOUS STACK         21734902
         LA    R0,EIGHT*(IPDLMAXE)+FOUR LOAD STACK SIZE FOR FREEMAIN    21742902
         SPACE                                                          21750902
*/* P ISSUE FREEMAIN TO FREE LAST INPUT STACK */                        21758902
         FREEMAIN R,LV=(0),A=(1)       FREE LAST INPUT PUSHDOWN STACK   21766902
         SPACE                                                          21774902
*/* P RESET STACK INDEX */                                              21782902
         MVI   PIPDLX,EIGHT*(IPDLMAXE) RESET PUSHDOWN STACK INDEX TO    21790902
*                                         INDICATE A FULL STACK         21798902
*/* D (,SCANPOP) POP THE STACK */                                       21806902
         B     SCANPOP                                                  21814902
         EJECT                                                          21822902
         SPACE                                                          21910002
*********************************************************************** 21912002
*                                                                     * 21914002
*                    POSITIONAL USERID ROUTINE                        * 21916002
*                                                                     * 21920020
*********************************************************************** 21930020
*/*USERID: GET SIX FULLWORDS                                @Z40RPKQ */ 21931000
UID2PSWD DS    0H                      * * * *                 @Z40RPKQ 21932000
         LA    R1,TWENTY3              GET PDE SIZE-1          @Z40RPKQ 21933000
         B     USIDCOM                 BRANCH TO COMMENT USERID ROUTINE 21934000
*                                                              @Z40RPKQ 21935000
         SPACE                                                          21940020
*/*USERID: P GET PDE SIZE */                                            21942001
USERID   DS    0H                      USERID ROUTINE                   21950020
         LA    R1,FIFTEEN              GET PDE SIZE-1                   21960020
USIDCOM  DS    0H                      * * * *                 @Z40RPKQ 21965000
         STC   R1,PPCOUNT              SAVE                             21970020
*/* S SKIPB: SKIP SEPARATORS */                                         21972001
         BAL   LINK2,SKIPB             SKIP SEPARATORS                  21980020
*                                                                       21990020
*/* D (YES,,NO,USIDPRQ) DATA IN BUFFER TO SCAN */                       21992001
         B     USIDPRQ                 +0 RETURN - NO DATA, TRY TO      22000020
*                                         PROMPT OR DEFAULT             22010020
*                                                                       22020020
*                                      +4 RETURN - DATA TO SCAN, XINPUT 22030020
*                                         POINTS TO A SEPARATOR         22040020
*                                                                       22050020
*/* S LISTT: TEST AND SET UP FOR LIST */                                22052001
         BAL   LINK1,LISTT             TEST AND SET UP FOR LIST         22060020
*                                                                       22070020
*/* D (YES,ILLUSID,NO,) INPUT ENDED AFTER ( WAS FOUND */                22072001
         B     ILLUSID                 +0 RETURN - ERROR, INPUT ENDED   22080020
*                                         AFTER LEFT PAREN WAS FOUND    22090020
*                                                                       22100020
*                                      +4 RETURN - POSITIONED AT NEXT   22110020
*                                         ITEM IN LIST IF LIST PRESENT  22120020
         SPACE                                                          22130020
* ENTRY POINT TO RESCAN NEW DATA FROM PROMPT OR DEFAULT                 22140020
*                                                                       22150020
*/*USIDRSC: P SAVE PTR FOR INVALID MSG */                               22152001
USIDRSC  DS    0H                      * * * *                          22160020
         MVC   INVPSAVE,PPOINTR        SAVE PTR FOR INVALID MSG         22170020
         MVC   DATAPTR1,PPOINTR        SAVE ID POINTER                  22180020
*/* P INDICATE PARAMETER PRESENT */                                     22182001
         OI    DATAFLA1,PRESENT        SET PARM-IS-PRESENT FLAG         22190020
*                                         (CLEARED LATER IF MISSING)    22200020
         LA    R1,USIDCNTL             GET ADDR OF GENSCAN CONTROL INFO 22210020
*                                         FOR AN ID                     22220020
         ST    R1,PDWORD               SAVE FOR GENSCAN                 22230020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   22240020
*/* P USE GENSCAN FOR SYNTAX CHECKING */                                22242001
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  22250020
*                                                                       22260020
*/* D (YES,USIDPRQ,NO,) ID IS MISSING */                                22262001
         BCT   XINPUT,USIDPRQ          +0 RETURN - ID IS MISSING,       22270020
*                                         BACKUP AND TRY TO PROMPT OR   22280020
*                                         DEFAULT                       22290020
*                                                                       22300020
*/* D (YES,ILLUSID,NO,) ID TOO LONG */                                  22302001
         B     ILLUSID                 +4 RETURN - ILLEGAL ID, TOO LONG 22310020
*                                                                       22320020
*/* D (YES,USIDEND,NO,) ID ENDED AT END OF INPUT */                     22322001
         B     USIDEND                 +8 RETURN - ID ENDED AT END OF   22330020
*                                         CURRENT INPUT, SKIP DELIMITER 22340020
*                                         CHECK                         22350020
*                                                                       22360020
*                                      +12 RETURN - GOOD, CHECK DELIM   22370020
*                                                                       22380020
*/* P SAVE LENGTH OF ID */                                              22382001
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF ID             22390020
         STH   XINPUTB,DATALEN1        SAVE                             22400020
         STH   XINPUTB,PLENGTH         SET UP FOR TRANSQ                22410020
         L     R15,ATRANSQ             GET ADDRESS OF EXTERNAL          22420020
*                                         TRANSLATE ROUTINE             22430020
*/* P TRANSLATE USERID TO UPPERCASE */                                  22432001
         BALR  LINK1,R15               TRANSLATE USERID TO UPPERCASE    22440020
         SPACE                                                          22440900
PSW2PROC DS    0H                       * * * *                @Z40RPKQ 22441800
         LA    R15,ONE(XINPUT)         GET NEXT BYTE PTR         YM3610 22442700
         C     R15,ENDINPUT            IS AT THE END?            YM3610 22443600
         BC    CC10,UIDSEP             BYPASS COMMENT TEST        M4540 22444500
         CLC   ZERO(TWO,XINPUT),SLASHAST  A COMMENT DELIMITER?   Y02666 22445400
         BNE   UIDSEP                  NO CHECK FOR SLASH        Y02666 22446300
         BCT   XINPUT,USID02           YES, A VALID COMMENT      Y02666 22447200
*/* D (YES,USIDPSWD,NO,) DELIMITER IS A SLASH */                        22448100
UIDSEP   DS    0H                                                Y02666 22449000
         CLI   ZERO(XINPUT),SLASH      IS DELIMITER A SLASH             22460020
         BE    USIDPSWD                YES, SCAN FOR PASSWORD           22470020
*                                                                       22480020
         LA    R1,SEPAR                SET UP TO TEST IF DELIM          22490020
*                                         IS A SEPARATOR                22500020
*/* S TYPETEST: CHECK IF DELIMITER IS A SEPARATOR */                    22502001
         BAL   LINK1,TYPETEST          USE TYPETEST                     22510020
*                                                                       22520020
*/* D (YES,USID02,NO,USID01) DELIMITER IS A SEPARATOR */                22522001
         B     USID01                  + 0 RETURN - NON-SEPARATOR, GO   22530020
*                                         CHECK FOR VALID DELIMITER     22540020
*                                                                       22550020
         B     USID02                  +4 RETURN - SEPARATOR, GO CHECK  22560020
*                                         FOR POSSIBLE PASSWORD         22570020
*/*USID01: S TYPETEST: CHECK FOR VALID DELIMITER */                     22572001
USID01   DS    0H                                                       22580020
         LA    R1,NSEPDLIM             SET UP TO TEST FOR DELIM         22590020
         BAL   LINK1,TYPETEST          USE TYPETEST                     22600020
*/* D (YES,USIDXIT,NO,ILLUSID) VALID DELIMITER */                       22602001
         B     ILLUSID                 +0 RETURN - INVALID DELIMITER,   22610020
*                                         THEN INVALID ID               22620020
         B     USIDXIT                 +4 RETURN - VALID DELIMITER,EXIT 22630020
*/*USID02: S SKIPB: SKIP SEPARATORS TO SLASH */                         22632001
USID02   DS    0H                                                       22640020
*                                                                       22650020
         BAL   LINK2,SKIPB             SKIP SEPARATORS TO SLASH         22660020
*                                                                       22670020
*/* D (YES,USIDXIT,NO,) REACHED END OF INPUT */                         22672001
         B     USIDXIT                 +0 RETURN - END OF INPUT, EXIT   22680020
*                                                                       22690020
*                                      +4 RETURN - CONTINUE             22700020
*                                                                       22710020
*/* D (YES,,NO,USIDXIT) NEXT CHARACTER IS A SLASH */                    22712001
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               22720020
         CLI   ZERO(XINPUT),SLASH      IS IT A SLASH                    22730020
         BNE   USIDXIT                 NO, EXIT                         22740020
*                                                                       22750020
*/*USIDPSWD: S SKIPB: SKIP SEPARATORS TO PASSWORD */                    22752001
USIDPSWD DS    0H                                                       22760020
         NI    PFLAGS5,HFF-INVPRMPT    USERID PROMPT END         Y02666 22765002
         BAL   LINK2,SKIPB             SKIP SEPARATORS TO PASSWORD      22770020
*/* D (YES,,NO,PSWDPRQ) DATA TO SCAN */                                 22772001
         B     PSWDPRQ                 +0 RETURN - END OF INPUT DO      22780020
*                                         BYPASS PROMPT FOR PASSWORD    22790020
*                                                                       22800020
*                                      +4 RETURN - DATA TO SCAN         22810020
*                                                                       22820020
* ENTRY POINT TO RESCAN NEW DATA FROM PROMPT FOR PASSWORD               22830020
*                                                                       22840020
*/*UIDPSRSC: D (YES,,NO,UDPSRSC1) NULL LINE WAS ENTERED */              22842001
UIDPSRSC DS    0H                      * * * *                          22850020
         TM    PFLAGS3,PFNULL          WAS A NULL LINE ENTERED          22860020
         BZ    UDPSRSC1                NO, CONTINUE                     22870020
*                                                                       22880020
*/* P TURN OFF NULL LINE FLAG */                                        22882001
         NI    PFLAGS3,HFF-PFNULL      YES-TURN OFF NULL LINE FLAG      22890020
*/* P CLEAR PASSWORD DATA */                                            22892001
         TM    DATAFLA3,PRESENT        TEST TO SEE IF NEW PASSWORD HAS  22892800
*                                       BEEN SET OR NOT        @Z40RPKQ 22893600
         BZ    CLRPASSD                IF NO, BRANCH TO CLEAR CURRENT   22894400
*                                      PASSWORD                @Z40RPKQ 22895200
         XC    DATAPTR3(SEVEN),DATAPTR3 CLEAR NEW PASSWORD DATA         22896000
*                                                              @Z40RPKQ 22896800
         B     UIDEXIT1                BRANCH TO EXIT          @Z40RPKQ 22897600
CLRPASSD DS    0H                      * * * *                 @Z40RPKQ 22898400
         XC    DATAPTR2(SEVEN),DATAPTR2 CLEAR PASSWORD DATA             22900020
*/* D (,UIDEXIT1) EXIT */                                               22902001
         B     UIDEXIT1                EXIT                             22910020
*/*UDPSRSC1: P USE GENSCAN FOR SYNTAX CHECKING */                       22912001
UDPSRSC1 DS    0H                                                       22920020
         BAL   LINK2,SKIPB             GO TO SKIP BLANKS        1A45368 22922001
         B     PSWDPRQ                 +0 RETURN - PASSWORD IS MISSING  22924001
*                                      GO TO PROMPT FOR PASSWORD IN     22926001
*                                      - BYPASS MODE            1A45368 22928001
*                                      +4 RETURN OK             1A45368 22928401
         CLI   ONE(XINPUT),QUOTE       IS FIRST CHARACTER QUOTE? Y02666 22928802
         BE    UIDPWQTE                PROCESS AS QUOTED STRING  Y02666 22929202
         LA    R1,PWSYNTAX             GET ADDR OF GENSCAN CONTROL INFO 22930020
*                                         FOR A PASSWORD                22940020
         ST    R1,PDWORD               SAVE FOR GENSCAN                 22950020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   22960020
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  22970020
*                                                                       22980020
*/* D (YES,PSWDPRQ,NO,) PASSWORD IS MISSING */                          22982001
         BCT   XINPUT,PSWDPRQ          +0 RETURN - PASSWORD IS MISSING, 22990020
*                                         DO BYPASS PROMPT              23000020
*                                                                       23010020
*/* D (YES,ILLUIDPS,NO,) ILLEGAL PASSWORD */                            23012001
         B     ILLUIDPS                +4 RETURN - ILLEGAL PASSWORD     23020020
*                                                                       23030020
*/* D (YES,PSWDEND,NO,) END OF PARAMETER IS ALSO END OF INPUT */        23032001
         B     PSWDEND                 +8 RETURN - GOOD, END OF PARM IS 23040020
*                                         ALSO END OF INPUT             23050020
*                                                                       23060020
*                                      +12 RETURN - GOOD, CHECK DELIM   23070020
*                                                                       23072000
         LA    R15,ONE(XINPUT)         IS AT END OF ENDINPUT?    YM3610 23074000
         C     R15,ENDINPUT            CHECK FOR END             YM3610 23076000
         BC    CC10,CKSLASH            BYPASS COMMENT TEST     @Z40RPKQ 23078000
         CLC   ZERO(TWO,XINPUT),SLASHAST  A COMMENT DELIMITER?   Y02666 23080000
         BE    PSWDEND                 YES,  A VALID DELIMITER   Y02666 23080800
CKSLASH  DS    0H                      * * * *                 @Z40RPKQ 23081200
         CLI   ZERO(XINPUT),SLASH      TEST FOR A SLASH AS A            23082000
*                                      DELIMITER               @Z40RPKQ 23082600
         BE    PSWDEND                 BRANCH TO COMPUTE                23083200
*                                      LENGTH FOR NEW PASSWORD @Z40RPKQ 23083800
*/* S TYPETEST: CHECK FOR VALID DELIMITER */                            23084400
COMBYPS1 DS    0H                      CHECK FOR VALID DELIMITER YM3610 23086002
         LA    R1,DLIMREQD             CHECK FOR VALID DELIMITER        23090020
         BAL   LINK1,TYPETEST          * * * *                          23100020
*                                                                       23110020
*/* D (YES,,NO,ILLUIDPS) DELIMITER IS VALID */                          23112001
         B     ILLUIDPS                +0 RETURN - DELIMITER IS BAD     23120020
*                                                                       23130020
*                                      +4 RETURN - OK                   23140020
*                                                                       23150020
* CONSTRUCT TEMPORARY PDE FOR PASSWORD PORTION OF ID                    23160020
*                                                                       23170020
*/*PSWDEND: P COMPUTE LENGTH OF PASSWORD */                             23172001
PSWDEND  DS    0H                      * * * *                          23180020
         TM    DATAFLA2,PRESENT        TEST TO FIND OUT IF PASSWORD HAS 23183000
*                                                              @Z40RPKQ 23186000
         BO    PSW2END                 BEEN SET, IF TRUE COMPUTE LENGTH 23190000
*                                      OF SECOND PASSWORD      @Z40RPKQ 23190900
         MVC   DATAPTR2,PPOINTR        SAVE PASSWORD POINTER            23191800
         S     XINPUTB,PPOINTR         COMPUTE LENGTH                   23192700
         STH   XINPUTB,DATALEN2        SAVE                             23193600
         B     PSWEND                  GO TO TEST LENGTH OF PASSWORD    23194500
*                                                              @Z40RPKQ 23195400
*/* PSW2END: COMPUTE THE LENGTH OF SECOND PASSWORD */                   23196300
PSW2END  DS    0H                      * * * *                 @Z40RPKQ 23197200
         MVC   DATAPTR3,PPOINTR        SAVE SECOND PASSWORD POINTER     23198100
*                                                              @Z40RPKQ 23200000
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF SECOND PASS-   23201000
*                                      WORD                    @Z40RPKQ 23202000
         STH   XINPUTB,DATALEN3        SAVE SECOND PASSWORD LENGTH      23203000
*                                                              @Z40RPKQ 23204000
*/* PSWEND: TEST THE LENGTH OF PASSWORD TO FIND OUT IF LENGTH */        23205000
*/*         IS VALID OR NOT */                                          23206000
PSWEND   DS    0H                                              @Z40RPKQ 23207000
         STH   XINPUTB,PLENGTH         SET UP FOR TRANSLATE             23220020
         CH    XINPUTB,DEC9            IS IT TOO LONG?           Y02666 23224002
         BNL   ILLUIDPS                YES, INVALID              Y02666 23226002
         L     R15,ATRANSQ             GET ADDRESS OF EXTERNAL          23230020
*                                         TRANSLATE ROUTINE             23240020
*/* P TRANSLATE PASSWORD TO UPPERCASE */                                23242001
         BALR  LINK1,R15               TRANSLATE PASSWORD TO UPPERCASE  23242200
         SPACE                                                          23242400
*/* P SET INDICATOR THAT PARM IS PRESENT */                             23242600
*/* IF PASSWORD IS PRESENT GO TO SET THE SECOND PASSWORD */             23242800
         TM    DATAFLA2,PRESENT        TEST TO FIND OUT IF PASSWORD HAS 23243000
*                                                              @Z40RPKQ 23243200
         BO    PSW2PARM                BEEN SET OR NOT, IF SET GO TO    23243400
*                                      ROUTINE TO SET SECOND PASSWORD   23243600
*                                                              @Z40RPKQ 23243800
         OI    DATAFLA2,PRESENT        SET PARM-IS-PRESENT FLAG         23244000
         LA    R15,ONE(XINPUT)        MOVE THE POINTER TO THE NEX       23244200
*                                     CHARACTER                @Z40RPKQ 23244400
         C     R15,ENDINPUT           CKECK FOR END            @ZA27204 23244600
         BC    CC10,UIDEXIT1          THIS IS END OF PSWD      @ZA27204 23244800
         BAL   LINK2,SKIPB            SKIP TO SLASH OR OPERAND          23245000
*                                                              @Z40RPKQ 23245200
         B     ENDSLASH               +0, BRANCH TO TEST END OF PASS-   23245400
*                                         WORD PROCESSING      @Z40RPKQ 23245600
         B     CKPDESZ                +4, BRANCH TO FIND WHICH PDE-SZ   23245800
*                                         BEING USED           @Z40RPKQ 23246000
ENDSLASH DS    0H                     * * * *                  @Z40RPKQ 23246200
         CLI   ZERO(XINPUT),SLASH     IS A SLASH AT THE END OF PASS-    23246400
*                                     WORD                     @Z40RPKQ 23246600
         BE    CKPDESZ                YES, BRANCH TO CHECK PDE SIZE-1   23246800
*                                          BEING USED          @Z40RPKQ 23247000
         B     UIDEXIT1               IF THIS IS THE END OF PASSWORD    23247200
*                                     PROCESSING               @Z40RPKQ 23247400
CKPDESZ  DS    0H                     * * * *                  @Z40RPKQ 23247600
         TM    PPCOUNT,FIFTEEN        DETERMINE WHAT PDE SIZE-1 TO      23247800
*                                     BE USED                  @Z40RPKQ 23248000
         BO    USIDXIT                BRANCH TO BACK UP SCAN POINTER    23248200
*                                                              @Z40RPKQ 23248400
         B     PSW2PROC               BRANCH TO CHECK THE VALIDITY OF   23248600
*                                     THE SECOND PASSWORD      @Z40RPKQ 23248800
PSW2PARM DS    0H                                              @Z40RPKQ 23249000
         OI    DATAFLA3,PRESENT        SET SECOND PASSWORD TO           23249200
*                                      INDICATE IT IS PRESENT  @Z40RPKQ 23249400
*/*USIDXIT: P BACK UP SCAN POINTER */                                   23262001
USIDXIT  DS    0H                      * * * *                          23270020
         BCTR  XINPUT,ZERO             BACK UP SCAN POINTER FOR LATER   23280020
         SPACE                                                          23290020
*/* UIDEXIT1: P INDICATE TO MOVE FOUR WORDS OR SIX WORDS    @Z40RPKQ */ 23291000
UIDEXIT1 DS    0H                      $ $ $ $                          23292000
         TM    DATAFLA3,PRESENT        TEST TO SEE IF NEW PASSWORD HAS  23292800
*                                       BEEN SET OR NOT        @Z40RPKQ 23293600
         BZ    SET4WORD                IF NO, BRANCH TO SET PDE TO FOUR 23294400
*                                       FULLWORDS              @Z40RPKQ 23295200
         SPACE                                                          23296000
*                                                                       23296800
         LA    R1,TWENTY3              TELL EXIT ROUTINE TO MOVE SIX    23297600
*                                         WORDS                @Z40RPKQ 23298400
         B     POSITX                   BRANCH TO POSITIONAL EXIT       23300000
*                                                              @Z40RPKQ 23301000
SET4WORD DS    0H                      * * * *                 @Z40RPKQ 23302000
         LA    R1,FIFTEEN              TELL EXIT ROUTINE TO MOVE FOUR   23303000
*                                       WORDS                  @Z40RPKQ 23304000
*/* D (,POSITX) TAKE POSITIONAL EXIT */                                 23322001
         B     POSITX                  TAKE POSITIONAL EXIT             23330020
         SPACE                                                          23340020
*/*USIDEND: P SAVE LENGTH */                                            23342001
USIDEND  DS    0H                      * * * *                          23350020
         S     XINPUTB,PPOINTR         COMPUTE LENGTH                   23360020
         STH   XINPUTB,DATALEN1        SAVE                             23370020
         STH   XINPUTB,PLENGTH         STORE LENGTH FOR TRANSLATION     23380020
         L     R15,ATRANSQ             GET ADDR OF TRANSLATE ROUTINE    23390020
*/* P TRANSLATE TO UPPERCASE */                                         23392001
         BALR  LINK1,R15               LINK TO IT                       23400020
         SPACE                                                          23410020
*/* P INDICATE SCAN STARTED FOR SLASH */                                23412001
         OI    PFLAGS4,PFSLASH         INDICATE SCAN STARTED FOR SLASH  23420020
*/* S SCANF: TRY TO POP STACK */                                        23422001
         BAL   LINK1,SCANF             TRY TO POP STACK                 23430020
         SPACE                                                          23440020
*/* D (YES,,NO,USIDXIT) DATA RETURNED */                                23442001
         B     USIDXIT                 +0 RETURN - NO MORE DATA, EXIT   23450020
         SPACE                                                          23460020
*                                      +4 RETURN - MORE DATA OR BLANK   23470020
         SPACE                                                          23480020
*/* D (YES,USIDPSWD,NO,) NEXT CHARACTER IS A SLASH */                   23482001
         LA    XINPUT,ONE(XINPUT)      BUMP UP PTR                      23490020
         CLI   ZERO(XINPUT),SLASH      IS NEXT CHARACTER A SLASH        23500020
         BE    USIDPSWD                YES, PROCESS PASSWORD            23510020
*/*  S TYPETEST: CHECK IF NEXT CHARACTER IS A SEPARATOR */              23512001
         LA    R1,SEPAR                NO - IS THE NEXT CHARACTER       23520020
         BAL   LINK1,TYPETEST          A SEPARATOR - USE TYPETEST       23530020
         SPACE                                                          23540020
*/* D (YES,USID02,NO,USIDXIT) CHARACTER IS SEPARATOR */                 23542001
         B     USIDXIT                 +0 RETURN - NO, EXIT             23550020
*                                                                       23560020
         B     USID02                  +4 RETURN - YES, GO SKIP BLANKS  23570020
*                                         AND PROCESS POSSIBLE PASSWORD 23580020
         SPACE                                                          23590020
*/*PSWDPRQ: P LOAD POINTER TO AND LENGTH OF USERID */                   23592001
PSWDPRQ  DS    0H                      * * * *                          23600020
         TM    PFLAGS5,INVPRMPT        WAS PROMPTING DONE BEFORE A45352 23602001
*                                      FOR THIS PARAETER?        A45352 23602401
         BO    ILLUIDPS                YES,ISSUE INVALID MESSAGE A45352 23604001
         OI    PFLAGS5,INVPRMPT        NO, INDICATE FIRST PROMPT A45352 23606001
         L     R2,DATAPTR1             LOAD USERID POINTER              23610020
         LH    R1,DATALEN1             LOAD LENGTH OF USERID            23620020
         LR    R3,R1                   SAVE DATA LENGTH                 23630020
         LA    R1,FOUR(R3)             GET SIZE OF CORE FOR MESSAGE SEG 23640020
*                                         PLUS FOUR FOR HEADER          23650020
*/* S GETCORE: GET CORE FOR MESSAGE SEGMENT */                          23652001
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     23660020
         SPACE                                                          23670020
*                                      CORE ADDRESS RETURNED IN R1      23680020
*/* P MOVE MESSAGE TEXT */                                              23682001
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 23690020
         LA    R0,FOUR(R3)             GET SIZE OF MESSAGE SEGMENT      23700020
         STH   R0,ZERO(R1)             STORE INTO SEGMENT               23710020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 23720020
         TM    DATAFLA2,PRESENT        TEST TO SEE IF CURRENT PASSWORD  23723000
*                                      HAS BEEN PROCESSED      @Z40RPKQ 23726000
        BO    SETXTLN2                IF YES, BRANCH TO SET OFFSET      23730000
*                                      INTO NEW PASSWORD MSG   @Z40RPKQ 23731000
         MVI   THREE(R1),OFFSET2       SET OFFSET INTO 'ENTER CURRENT   23732000
*                                      PASSWORD FOR' MESSAGE   @Z40RPKQ 23733000
         B     REDUCLN                 BRANCH TO REDUCE LENGTH @Z40RPKQ 23734000
SETXTLN2 DS    0H                      * * * *                 @Z40RPKQ 23735000
         MVI   THREE(R1),OFFSET22      SET OFFSET INTO 'ENTER NEW       23736000
*                                      PASSWORD FOR' MESSAGE   @Z40RPKQ 23737000
REDUCLN  DS    0H                      * * * *                 @Z40RPKQ 23738000
         BCTR  R3,ZERO                 REDUCE LENGTH FOR 'EX'           23750020
         LR    R15,R2                  LOAD START OF DATA ADDRESS       23760020
         EX    R3,BUILDSEG             MOVE TEXT TO NEW SEGMENT         23770020
         OI    PFLAGS,PFBYPAS          INDICATE BYPASS MODE REQUIRED    23780020
*/* P INDICATE MESSAGE TO WRITE */                                      23782001
         TM    DATAFLA2,PRESENT        TEST TO SEE IF CURRENT PASSWORD  23784000
*                                      HAS BEEN PROCESSED      @Z40RPKQ 23786000
         BO    ENTERNEW                 IF YES, BRANCH TO SET INDICATOR 23790000
*                                      MESSAGE TO WRITE        @Z40RPKQ 23791000
         MVI   MSGCODE,MSG15           INDICATE MESSAGE TO WRITE        23792000
         B     SEGMSG                  BRANCH TO INDICATE SEGMENT       23793000
*                                       MESSAGE                @Z40RPKQ 23794000
ENTERNEW DS    0H                       * * * *                @Z40RPKQ 23795000
         MVI   MSGCODE,MSG22            INDICATE MESSAGE TO WRITE       23796000
*                                                              @Z40RPKQ 23797000
SEGMSG  DS    0H                       * * * *                 @Z40RPKQ 23798000
         LA    R0,TWO                  INDICATE 2 SEGMENT MSG           23800020
*/* S WRITER2: ISSUE PROMPT MESSAGE */                                  23802001
         BAL   LINK1,WRITER2G          PROMPT IN BYPASS MODE            23810020
         SPACE                                                          23820001
         B     UIDPSRSC                RESCAN NEW DATA                  23830020
UIDPWQTE DS    0H                                                Y02666 23832002
         LA    R1,ONE(XINPUT)          GET INPUTER + ONE         Y02666 23832402
         C     R1,ENDINPUT             IS QUOTE AT END OF BUFFER Y02666 23832802
         BNL   PSWDPRQ                 YES, MISSING - PROMPT     Y02666 23833202
         OI    PFLAGS5,PSWDFLG         INDICATE PASSWORD BEING PROCESED 23834002
*                                                                Y02666 23836002
         OI    PFLAGS6,PSWDQFLG        INDICATE QUOTED PASSWORD  Y02666 23836402
         BAL   LINK2,QSTRIRSC          PROCESS AS QUOTED STRING  Y02666 23838002
         NI    PFLAGS5,HFF-PSWDFLG     INDICATE END OF PROCESS   Y02666 23838402
         B     PSWDEND                 CONTINUE PROCESSING       Y02666 23838802
         SPACE                                                          23840020
*/*USIDPRQ: S PROMPTQ: PROMPT OR DEFAULT */                             23842001
USIDPRQ  DS    0H                      ID IS MISSING                    23850020
         NI    DATAFLA1,HFF-PRESENT    RESET USER ID PRESENT BIT A45368 23852001
*                                                                       23854001
         BAL   LINK1,PROMPTQ           PROMPT OR DEFAULT                23860020
*                                                                       23870020
*/* D (YES,USIDRSC,NO,UIDEXIT1) DATA RETURNED */                        23872001
         B     USIDRSC                 +0 RETURN - NEW DATA TO SCAN     23880020
*                                                                       23890020
*                                      +4 RETURN - NO DATA RETURNED     23900020
*                                                                       23910020
         B     UIDEXIT1                EXIT                             23920020
         EJECT                                                          23930020
*********************************************************************** 23932001
*                                                                     * 23934001
*                    POSITIONAL DSNAME ROUTINE                        * 23936001
*                    POSITIONAL JOBNAME ROUTINE                       * 23936402
*                                                                     * 23937201
*********************************************************************** 23940401
JOBNAME  DS    0H                                                Y02666 23945602
         LA    R1,FIFTEEN              GET PDE SIZE - 1          Y02666 23946002
         B     DSJOB                   CONTINUE PROCESSING       Y02666 23946102
*/*DSNAME: P GET PDE SIZE */                                            23946402
DSNAME   DS    0H                      DSNAME ROUTINE                   23946801
         LA    R1,TWENTY3              GET PDE SIZE-1                   23950020
         OI    PFLAGS5,DSNFLG          INDICATE DSNAME IN PROCES Y02666 23952002
DSJOB    DS    0H                                                Y02666 23954002
         STC   R1,PPCOUNT              SAVE                             23960020
*                                         (ALSO USED FOR DSTHING)       23970020
*/* S SKIPB: SKIP SEPARATORS */                                         23972001
         BAL   LINK2,SKIPB             SKIP BLANKS TO BEGINNING OF PARM 23980020
         SPACE                                                          23990020
*/* D (YES,DSNAMPRQ,NO,) END OF CURRENT INPUT */                        23992001
         B     DSNAMPRQ                +0 RETURN, END OF CURRENT INPUT, 24000020
*                                         TRY TO PROMPT OR DEFAULT FOR  24010020
*                                         PARAMETER                     24020020
         SPACE                                                          24030020
*                                      +4 RETURN, OK                    24040020
         SPACE                                                          24050020
*/* S LISTT: TEST AND SET UP FOR LIST */                                24052001
         BAL   LINK1,LISTT             TEST AND SET UP FOR LIST         24060020
         SPACE                                                          24070020
*/* D (YES,ILLDSN,NO,) INPUT ENDED AFTER LEFT PAREN WAS FOUND */        24072001
         B     ILLDSN                  +0 RETURN, INPUT ENDED AFTER     24080020
*                                         LEFT PAREN WAS FOUND, INVALID 24090020
*                                         PARM                          24100020
         SPACE                                                          24110020
*                                      +4 RETURN, OK                    24120020
         SPACE                                                          24130020
*                                                                       24140020
* ENTRY FOR RESCANNING NEW DATA AFTER PROMPT OR DEFAULT                 24150020
*                                                                       24160020
*/*DSNAMRSC: D (YES,DSTHING1,NO,) PROCESSING DSTHING */                 24162001
DSNAMRSC DS    0H                      * * * *                          24170020
         TM    PFLAGS7,DSNAMEF         IS ENTRY FROM VCE ROUTINE Y02666 24171002
         BZ    DSNAMX                  NO,CONTINUE DSNAME PROCESSY02666 24172002
         OI    PFLAGS5,DSNFLG          INDICATE DSNAME PROCESSINGY02666 24173002
         NI    PFLAGS7,HFF-DSNAMEF     INDICATE VCE PROCESS END  Y02666 24174002
DSNAMX   DS    0H                                                Y02666 24175002
         MVC   INVPSAVE,PPOINTR        SAVE START OF PARM IN CASE IT IS 24180020
*                                         INVALID                       24190020
         TM    PFLAGS5,DSNFLG          IS DSNAME BEING PROCESSED Y02666 24192002
         BZ    JOB01                   NO, PROCESS JOBNAME       Y02666 24194002
         CLI   PCEPOST(XPCE),(DSTHIB-POSITB)/FOUR PROCESSING DSTHING    24200020
         BE    DSTHING1                YES, SET UP FOR DSTHING          24210020
         SPACE                                                          24220020
*/* P GET ADDR OF GENSCAN CONTROL INFO FOR DSNAME */                    24238002
DSNCONTL DS    0H                                                Y02666 24241502
         LA    R1,DSNCNTL              GET ADDR OF GENSCAN CONTROL INFO 24245002
*                                         FOR DSNAME                    24248502
*/* D (,DSN01) BRANCH */                                                24252002
         B     DSN01                   CONTINUE                         24255502
JOB01    DS    0H                                                Y02666 24259002
         LA    R1,JOBNCNTL             GET JOBNAME CONTROL INFO  Y02666 24262502
         B     DSN01                   CONTINUE                  Y02666 24266002
         SPACE                                                          24269502
*/*DSTHING1: P GET ADDR OF GENSCAN CONTROL INFO FOR DSTHING */          24273002
DSTHING1 LA    R1,DSTCNTL              GET ADDR OF GENSCAN CONTROL INFO 24276502
*                                         FOR DSTHING                   24280020
         SPACE                                                          24290020
*/*DSN01: P CLEAR FLAGS FOR DSNAME PROCESSING */                        24292001
DSN01    DS    0H                      * * * *                          24300020
         ST    R1,PDWORD               PUT ADDR OF GENSCAN CONTROL INFO 24310020
*                                         IN PDWORD                     24320020
         NI    RFLAGS,HFF-RFQDSNM-RFMEMB-RFNOTQ1 CLEAR FLAGS FOR        24330020
*                                         DSNAME PROCESSING             24340020
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER (SKIPB HAS    24350020
*                                         ALREADY CHECKED FOR END)      24360020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       24370020
         TM    PFLAGS5,DSNFLG          PROCESSING DSNAME?        Y02666 24370402
         BZ    JOB02                   NO, PROCESSING JOBNAME    Y02666 24370802
*/* D (YES,DSNQUOTE,NO,) FIRST CHARACTER IS A QUOTE */                  24372001
         CLI   ZERO(XINPUT),QUOTE      IS FIRST CHARACTER A QUOTE?      24380020
         BE    DSNQUOTE                YES, SET UP FOR QUOTED DSNAME    24390020
         SPACE                                                          24400020
*/* D (YES,DSNMEMB,NO,) FIRST CHARACTER IS LEFT PAREN */                24402001
         CLI   ZERO(XINPUT),LEFTPRN    IS FIRST CHARACTER A LEFT PAREN  24410020
         BE    DSNMEMB                 YES, SET UP FOR MEMBER           24420020
         SPACE                                                          24430020
JOB02    DS    0H                                                Y02666 24432002
         ST    XINPUT,DATAPTR1         SAVE PTR TO DSNAME/JOBNAMEY02666 24440002
*/* P INDICATE DSNAME IS PRESENT */                                     24442001
         OI    DATAFLA1,PRESENT        INDICATE DSNAME/JOBNAME IS       24450002
*                                      PRESENT                   Y02666 24452002
         SPACE                                                          24460020
*/*DSNSCAN: P USE GENSCAN FOR SYNTAX CHECKING */                        24462001
DSNSCAN  DS    0H                      * * * *                          24470020
         TM    PCEFLGB2(XPCE),PCEFVSER IS VOLUME SERIAL POSSIBLE Y02666 24470402
         BZ    DSNSCN                  NO CONTINUE DSNAME        Y02666 24472002
         LA    R1,NUMBER               PREPARE TEST FOR NUMBER   Y02666 24476002
         BAL   LINK1,TYPETEST          TEST FIRST CHARACTER      Y02666 24478002
         B     DSNSCN                  FIRST CHAR. NOT NUMERIC   Y02666 24478402
         LA    R1,VOLSERC             +4 RETURN-GET VOL SER INFO Y02666 24478802
         ST    R1,PDWORD               RESET CONTROL INFO        Y02666 24478902
         OI    PFLAGS7,VOLSERF         INDICATE VOL. SER. IN PROCESS    24479202
*                                                                Y02666 24479602
DSNSCN   DS    0H                                                Y02666 24479902
         BCTR  XINPUT,ZERO             BACK UP INPUT FOR GENSCAN        24480020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   24490020
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  24500020
*                                                                       24510020
*                                      SCAN QUALIFIER/JOBNAME OR        24520002
*                                         MEMBER/JOBID ACCORDING TO     24522002
*                                         GENSCAN CONTROL INFO          24530002
*                                         PREVIOUSLY SET UP      Y02666 24540002
         SPACE                                                          24550020
*/* D (YES,DSNMSNG,NO,) QUALIFIER OR MEMBER IS MISSING */               24552001
         BCT   XINPUT,DSNMSNG          +0 RETURN, QUALIFIER OR MEMBER   24560020
*                                                 IS MISSING            24570020
         SPACE                                                          24580020
*/* D (YES,ILLDSN,NO,) QUALIFIER OR MEMBER IS ILLEGAL */                24582001
         B     ILLDSN                  +4 RETURN, QUALIFIER OR MEMBER   24590020
*                                                 IS ILLEGAL            24600020
         SPACE                                                          24610020
*/* D (YES,DSNEND,NO,) QUALIFIER OR MEMBER DELIMITED BY END OF INPUT */ 24612001
         B     DSNEND                  +8 RETURN, QUALIFIER OR MEMBER   24620020
*                                                 DELIMITED BY END OF   24630020
*                                                 CURRENT INPUT         24640020
         SPACE                                                          24650020
*                                      +12 RETURN, GOOD  CHECK DELIM    24660020
         SPACE                                                          24670020
*/* D (YES,DSNMEMDL,NO,) PROCESSING MEMBER */                           24672001
         TM    RFLAGS,RFMEMB           IS A MEMBER BEING PROCESSED      24680020
         BO    DSNMEMDL                YES, GO CHECK MEMBER DELIMITER   24690020
         TM    PFLAGS5,DSNFLG          DSNAME IN PROCESS?        Y02666 24692002
         BZ    DSNENDNM                NO CHECK LENTH & DELIMITR Y02666 24694002
         SPACE                                                          24700020
*/* D (YES,,NO,DSN02) FIRST QUALIFIER BEING PROCESSED */                24702001
         TM    RFLAGS,RFNOTQ1          IS THIS THE FIRST QUALIFIER      24710020
*                                         BEING PROCESSED               24720020
         BO    DSN02                   NO, CONTINUE                     24730020
         SPACE                                                          24740020
*/* P TURN ON NOT-FIRST-QUALIFIER INDICATOR */                          24742001
         OI    RFLAGS,RFNOTQ1          YES, TURN ON NOT-FIRST-QUALIFIER 24750020
*                                         INDICATOR                     24760020
         SPACE                                                          24770020
*/*DSN02: D (YES,,NO,DSNENDNM) DELIMITER IS A PERIOD */                 24772001
DSN02    DS    0H                      * * * *                          24780020
         CLI   ZERO(XINPUT),PERIOD     IS DELIM A PERIOD                24790020
         BNE   DSNENDNM                NO, GO PROCESS END OF DSNAME     24800020
         SPACE                                                          24810020
         TM    PFLAGS7,VOLSERF         IS VOL SER IN PROCESS?    Y02666 24812002
         BO    ILLDSN                  YES, QUALIFIER INVALID W/VOLSER  24814002
*                                                                Y02666 24816002
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               24820020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       24830020
*/* D (YES,ILLDSN,NO,DSNSCAN) END OF CURRENT INPUT */                   24832001
         C     XINPUT,ENDINPUT         AT END OF CURRENT INPUT          24840020
         BL    DSNSCAN                 NO, SCAN FOR NEXT QUALIFIER      24850020
         SPACE                                                          24860020
         B     ILLDSN                  YES, INVALID (PERIOD CANNOT END  24870020
*                                         A DSNAME)                     24880020
         SPACE                                                          24890020
*/*DSN025: D (YES,,NO,DSN03) QUOTED DSNAME BEING PROCESSED */           24892001
DSN025   DS    0H                      * * * *                          24900020
         TM    PFLAGS5,DSNFLG          DSNAME BEING PROCESSED?   Y02666 24902002
         BZ    DSN03                   NO, JOBNAME PROCESSING COMPLETE  24904002
*                                      CHECK DELIMITER           Y02666 24907002
         TM    RFLAGS,RFQDSNM          IS QUOTED DSNAME BEING PROCESSED 24910020
         BZ    DSN03                   NO, CONTINUE                     24920020
         SPACE                                                          24930020
*/* D (YES,,NO,ILLDSN) CHARACTER A QUOTE */                             24932001
         CLI   ZERO(XINPUT),QUOTE      YES, CHECK FOR QUOTE             24940020
         BNE   ILLDSN                  NOT A QUOTE, INVALID PARM        24950020
         SPACE                                                          24960020
         LA    XINPUT,ONE(XINPUT)      QUOTE FOUND, GET NEXT CHARACTER  24970020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       24980020
*/* D (YES,,NO,DSN03) END OF CURRENT INPUT */                           24982001
         C     XINPUT,ENDINPUT         AT END OF CURRENT INPUT          24990020
         BL    DSN03                   N0 - CONTINUE                    25000020
*/*DSN026: P INDICATE SCAN STARTED FOR SLASH */                         25002001
DSN026   DS    0H                      * * * *                          25010020
         TM    PFLAGS5,DSNFLG          DSNAME PROCESSING?        Y02666 25012002
         BZ    DSN026A                 NO, BYPASS TEST FOR SLASH Y02666 25014002
         OI    PFLAGS4,PFSLASH         INDICATE SCAN STARTED FOR SLASH  25020020
         NI    PFLAGS5,HFF-INVPRMPT    INDICATE END DSNAME PROMPTY02666 25025002
         SPACE                                                          25030020
*/* S SCANF: TRY TO POP STACK */                                        25032001
DSN026A  DS    0H                                                Y02666 25036002
         BAL   LINK1,SCANF             YES - TRY TO POP STACK           25040020
         SPACE                                                          25050020
*/* D (YES,DSNEXIT,NO,) NO NEW DATA */                                  25052001
         B     DSNEXIT                 +0 RETURN - NO NEW DATA, EXIT    25060020
*                                                                       25070020
*                                      +4 RETURN - MORE DATA, CONTINUE  25080020
*                                                                       25090020
         LA    XINPUT,ONE(XINPUT)      BUMP PTR                         25100020
*/* D (YES,DSNPS01,NO,) NEXT CHARACTER IS A SLASH */                    25102001
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 25102502
         C     R15,ENDINPUT            END OF INPUT?             YM3610 25103002
         BC    CC10,DSNSEP             BYPASS COMMENT CHECK       M4540 25103200
         CLC   ZERO(TWO,XINPUT),SLASHAST  A COMMENT DELIMITER?   Y02666 25104002
         BNE   DSNSEP                  NO, CHECK FOR SLASH       Y02666 25106002
         BCT   XINPUT,DSN04            YES, VALID DELIMITER      Y02666 25108002
DSNSEP   DS    0H                                                Y02666 25108402
         TM    PFLAGS5,DSNFLG          DSNAME PROCESSING?        Y02666 25108802
         BZ    DSNSEPA                 BYPASS SLASH RO PASSWORD TEST    25109202
*                                                                Y02666 25109602
         CLI   ZERO(XINPUT),SLASH      IS NEXT CHARACTER A SLASH        25110020
         BE    DSNPS01                 YES, PROCESS PASSWORD            25120020
DSNSEPA  DS    0H                                                Y02666 25125002
         LA    R1,SEPAR                NO - IS NEXT CHARACTER A         25130020
*/* S TYPETEST: CHECK IF CHARACTER IS SEPARATOR */                      25132001
         BAL   LINK1,TYPETEST          SEPARATOR - USE TYPETEST         25140020
         SPACE                                                          25150020
*/* D (YES,DSN04,NO,DSNEXIT) CHARACTER IS SEPARATOR */                  25152001
         B     DSNEXIT                 +0 RETURN - NO, EXIT             25160020
         SPACE                                                          25170020
         B     DSN04                   +4 RETURN - YES, GO SKIP BLANKS  25180020
*                                         AND PROCESS POSSIBLE PASSWORD 25190020
         SPACE                                                          25200020
*/*DSN03: D (YES,DSNPSRSC,NO,) NEXT CHARACTER IS SLASH */               25202001
DSN03    DS    0H                      * * * *                          25210020
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER        YM3610 25210502
         C     R15,ENDINPUT            AT END OF INPUT?          YM3610 25211002
         BC    CC10,DSN03A             YES,BYPASS COMMENT CHECK   M4540 25211200
         CLC   ZERO(TWO,XINPUT),SLASHAST  A COMMENT DELIMITER    Y02666 25212002
         BNE   DSN03A                  NO, CHECK FOR SLASH       Y02666 25216002
         BCT   XINPUT,DSN04            YES, A VALID DELIMITER    Y02666 25218002
DSN03A   DS    0H                                                Y02666 25218402
         TM    PFLAGS5,DSNFLG          IS DSNAME PROCESSING?     Y02666 25218902
         BZ    DSNSEPAR                CHECK JOB SEPARATOR       Y02666 25219402
         CLI   ZERO(XINPUT),SLASH      IS NEXT CHARACTER A SLASH        25220020
         BE    DSNPSRSC                YES, SCAN FOR PASSWORD           25230020
DSNSEPAR DS    0H                                                Y02666 25235002
         LA    R1,SEPAR                NO, SEE IF DELIMITER IS A        25240020
*                                         SEPARATOR                     25250020
*/* S TYPETEST: CHECK IF DELIMITER IS SEPARATOR */                      25252001
         BAL   LINK1,TYPETEST          USE TYPETEST                     25260020
*/* D (YES,DSN04,NO,DSN031) VALID SEPARATOR */                          25262001
         B     DSN031                  +0 RETURN_NON_SEPARATOR, CHECK   25270020
*                                        FOR VALID DELIMITER            25280020
         B     DSN04                   +4 RETURN- VALID SEPARATOR, SEE  25290020
*                                         IF SLASH IS PRESENT           25300020
*/*DSN031: S TYPETEST: CHECK FOR DELIMITER */                           25302001
DSN031   DS    0H                       * * * *                         25310020
         LA    R1,NSEPDLIM              SET UP TEST FOR DELIMITER       25320020
         BAL   LINK1,TYPETEST           USE TYPETEST                    25330020
*/* D (YES,DSNEXIT,NO,ILLDSN) VALID DELIMITER */                        25332001
         B     ILLDSN                   +0 RETURN INVALID DELIMITER,    25340020
*                                          DSNAME IS INVALID            25350020
         B     DSNEXIT                  +4 RETURN_ EXIT                 25360020
         SPACE                                                          25370020
*/*DSN04: S SKIPB: SKIP BLANKS TO SLASH */                              25372001
DSN04    DS    0H                      * * * *                          25380020
         TM    PFLAGS5,DSNFLG          DSNAME PROCESSING?               25383002
         BZ    DSNEXIT                 NO, PROCESS JOBNAME       Y02666 25386002
         BAL   LINK2,SKIPB             SKIP BLANKS TO SLASH             25390020
         SPACE                                                          25400020
*/* D (YES,DSNEXIT1,NO,) REACHED END OF INPUT,SLASH MISSING */          25402001
         B     DSNEXIT1                +0 RETURN, REACHED END OF INPUT  25410020
*                                         SLASH MISSING, EXIT           25420020
*                                                                       25430020
*                                      +4 RETURN, 0K                    25440020
         SPACE                                                          25450020
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTR (SKIPB HAS     25460020
*                                         ALREADY CHECKED FOR END)      25470020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       25480020
*/* D (YES,,NO,DSNEXIT) NEXT CHARACTER IS SLASH */                      25482001
         CLI   ZERO(XINPUT),SLASH      IS CURRENT CHARACTER A SLASH     25490020
         BNE   DSNEXIT                 NO, SLASH MISSING, EXIT          25500020
         SPACE                                                          25510020
         NI    PFLAGS5,HFF-INVPRMPT    END OF DSNAME PROMPT      Y02666 25515002
*                                                                       25520020
* ENTRY AFTER PROMPT FOR PASSWORD                                       25530020
*                                                                       25540020
*/*DSNPSRSC: D (YES,,NO,DSNPS01) NULL LINE WAS ENTERED */               25542001
DSNPSRSC DS    0H                      * * * *                          25550020
         TM    PFLAGS3,PFNULL          WAS A NULL LINE ENTERED          25560020
         BZ    DSNPS01                 NO, CONTINUE                     25570020
*/* P TURN OFF NULL LINE FLAG */                                        25572001
         NI     PFLAGS3,HFF-PFNULL     YES, TURN OFF NULL LINE FLAG     25580020
*/* P CLEAR PASSWORD DATA */                                            25582001
         XC    DATAPTR3(SEVEN),DATAPTR3 CLEAR PASSWORD DATA             25590020
*/* D (,DSNEXIT1) EXIT */                                               25592001
         B     DSNEXIT1                EXIT DSNAME PROCESSING           25600020
*/*DSNPS01: S SKIPB: SKIP BLANKS TO PASSWORD */                         25602001
DSNPS01  DS    0H                      * * * *                          25610020
         NI    PFLAGS5,HFF-DSNFLG      DSNAME PROCESS COMPLETE   Y02666 25612002
         OI    PFLAGS7,DSNAMEF         INDICATE DSNAME VCE PROCESS      25612602
*                                      BEGINS                    Y02666 25613202
         OI    PFLAGS5,PSWDFLG         INDICATE PASSWORD PROCESS Y02666 25614002
         BAL   LINK2,SKIPB             SKIP BLANKS TO PASSWD            25620020
         SPACE                                                          25630020
*/* D (YES,DSNAMPWQ,NO,) REACHED END OF INPUT,PASSWORD MISSING */       25632001
         B     DSNAMPWQ                +0 RETURN, REACHED END OF INPUT  25640020
         SPACE                                                          25650020
*                                         PASSWD MISSING, SET UP FOR    25660020
*                                         BYPASS PROMPT FOR PASSWORD    25670020
         SPACE                                                          25680020
*                                      +4 RETURN, OK                    25690020
         SPACE                                                          25700020
         CLI   ONE(XINPUT),QUOTE       FIRST CHARACTER A QUOTE?  Y02666 25702002
         BE    DSNPWQTE                GO PROCESS QUOTED PASSWORDY02666 25704002
         LA    R1,PWSYNTAX             GET ADDR OF CONTROL INFO FOR     25710020
         ST    R1,PDWORD                  GENSCAN, SAVE                 25720020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   25730020
*/* P USE GENSCAN FOR SYNTAX CHECKING */                                25732001
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  25740020
*                                                                       25750020
*                                      SCAN PASSW0RD                    25760020
         SPACE                                                          25770020
*/* D (YES,DSNAMPWQ,NO,) PASSWORD MISSING */                            25772001
         BCT   XINPUT,DSNAMPWQ         +0 RETURN,MISSING, BACK UP, SET  25780020
*                                         UP FOR BYPASS PROMPT          25790020
         SPACE                                                          25800020
*/* D (YES,ILLDSNPS,NO,) INVALID PASSWORD */                            25802001
         BCT   XINPUT,ILLDSNPS         +4 RETURN,TOO LONG, BACK UP      25810020
*                                         INPUT, PASSWORD IS INVALID    25820020
         SPACE                                                          25830020
*/* D (YES,DSNPWEND,NO,) DELIMITER IS END OF INPUT */                   25832001
         B     DSNPWEND                +8 RETURN, DELIMITER IS END,     25840020
*                                         SKIP DELIMITER TEST           25850020
         SPACE                                                          25860020
*                                      +12 RETURN, CHECK DELIMITER      25870020
         SPACE                                                          25880020
*/* S TYPETEST: TEST FOR VALID DELIMITER */                             25882001
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 25882502
         C     R15,ENDINPUT            END OF INPUT?             YM3610 25883002
         BC    CC10,COMBYPS2           BYPASS COMMENT CHECK       M4540 25883200
         CLC   ZERO(TWO,XINPUT),SLASHAST  A COMMENT DELIMITER?   Y02666 25884002
         BE    DSNPWEND                YES, A VALID DELIMITER    Y02666 25886002
COMBYPS2 DS    0H                      CHECK FOR DELIMITER       YM3610 25888002
         LA    R1,DLIMREQD             TEST FOR VALID DELIMITER         25890020
         BAL   LINK1,TYPETEST          USING TYPETEST                   25900020
         SPACE                                                          25910020
*/* D (YES,,NO,ILLDSNPS) VALID DELIMITER */                             25912001
         B     ILLDSNPS                +0 RETURN, INVALID, PASSWORD IS  25920020
*                                         INVALID                       25930020
         SPACE                                                          25940020
*                                      +4 RETURN, GOOD DELIM            25950020
         SPACE                                                          25960020
*/*DSNPWEND: P INDICATE PASSWORD IS PRESENT */                          25962001
DSNPWEND DS    0H                                                       25970020
         MVC   DATAPTR3(FOUR),PPOINTR  STORE PTR TO PASSWORD IN         25980020
*                                         DATA AREA                     25990020
         OI    DATAFLA3,PRESENT        INDICATE PASSWORD IS PRESENT     26000020
*/* P COMPUTE LENGTH OF PASSWORD */                                     26002001
         S     XINPUTB,PPOINTR         COMPUTE LENGTH OF PASSWORD       26010020
         STH   XINPUTB,DATALEN3        STORE LENGTH IN DATA AREA        26020020
         STH   XINPUTB,PLENGTH         SET UP FOR TRANSLATE             26030020
         CH    XINPUTB,DEC9            IS PASSWORD TOO LONG?     Y02666 26030402
         BNL   ILLDSNPS                YES, INVALID              Y02666 26030802
         L     R15,ATRANSQ             GET ADDRESS OF TRANSLATE         26040020
*                                         ROUTINE                       26050020
*/* P TRANSLATE TO UPPER CASE */                                        26052001
         BALR  LINK1,R15               TRANSLATE TO UPPER CASE          26060020
*/* D (,DSNEXIT) EXIT */                                                26062001
         B     DSNEXIT                 EXIT                             26070020
         SPACE                                                          26080020
*/*DSNMEMDL: D (YES,,NO,ILLDSN) DELIMITER IS RIGHT PAREN */             26082001
DSNMEMDL DS    0H                      CHECK MEMBER DELIMITER           26090020
         CLI   ZERO(XINPUT),RIGHTPRN   IS DELIM A RIGHT PAREN           26100020
         BNE   ILLDSN                  NO, INVALID PARM                 26110020
         SPACE                                                          26120020
*/* P COMPUTE LENGTH OF MEMBER */                                       26122001
         S     XINPUTB,DATAPTR2        COMPUTE LENGTH OF MEMBER         26130020
         STH   XINPUTB,DATALEN2        STORE IN DATA AREA               26140020
         MVC   PPOINTR(SIX),DATAPTR2   SET UP POINTERS FOR TRANSLATE    26150020
         L     R15,ATRANSQ             GET ADDRESS OF TRANSLATE         26160020
*                                         ROUTINE                       26170020
*/* P TRANSLATE TO UPPERCASE */                                         26172001
         BALR  LINK1,R15               TRANSLATE TO UPPER CASE          26180020
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               26190020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       26200020
*/* D (YES,,NO,DSN025) REACHED END OF INPUT */                          26202001
         C     XINPUT,ENDINPUT         AT END OF CURRENT INPUT          26210020
         BL    DSN025                  NO, CHECK FOR QUOTE AS IN        26220020
*                                         QUOTED DSNAME                 26230020
         SPACE                                                          26240020
*/* D (YES,ILLDSN,NO,DSN026) DSNAME IS QUOTED */                        26242001
         TM    RFLAGS,RFQDSNM          IS DSNAME QUOTED                 26250020
         BO    ILLDSN                  YES, INVALID PARM                26260020
         SPACE                                                          26270020
         B     DSN026                  NO - TRY TO POP STACK            26280020
         SPACE                                                          26290020
*/*DSNQUOTE: P INDICATE QUOTED DSNAME BEING PROCESSED */                26292001
DSNQUOTE DS    0H                      SET UP FOR QUOTED DSNAME         26300020
         OI    RFLAGS,RFQDSNM          INDICATE A QUOTED DSNAME IS      26310020
*                                         BEING PROCESSED               26320020
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               26330020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       26340020
*/* D (YES,ILLDSN,NO,) REACHED END OF INPUT */                          26342001
         C     XINPUT,ENDINPUT         AT END OF INPUT                  26350020
         BNL   ILLDSN                  YES, ILLEGAL DSNAME              26360020
         SPACE                                                          26370020
*/* P SET PTR TO DSNAME IN DATA AREA */                                 26372001
         ST    XINPUT,PPOINTR          SET PTR TO BEGINNING OF PARM     26380020
         ST    XINPUT,DATAPTR1         SET PTR TO DSNAME IN DATA AREA   26390020
*/* P INDICATE QUOTED DSNAME IS PRESENT */                              26392001
         OI    DATAFLA1,QUOTED+PRESENT INDICATE DSNAME IS PRESENT AND   26400020
*                                         QUOTED                        26410020
*/* D (,DSNSCAN) SCAN FOR DSNAME QUALIFIER */                           26412001
         B     DSNSCAN                 SCAN FOR DSNAME QUALIFIER        26420020
         SPACE                                                          26430020
*/*DSNMEMB: P INDICATE PROCESSING MEMBER */                             26432001
DSNMEMB  DS    0H                      SET UP FOR MEMBER/JOBID   Y02666 26440002
         TM    PFLAGS7,VOLSERF         IS A VOL SER IN PROCESS   Y02666 26442002
         BO    ILLDSN                  INVALID - MEMBER NOT ALLOWED     26444002
*                                         WITH A VOL SER         Y02666 26448002
         OI    RFLAGS,RFMEMB           INDICATE A MEMBER/JOBID IS BEING 26450002
*                                         PROCESSED              Y02666 26460002
         LA    XINPUT,ONE(XINPUT)      GET NEXT CHARACTER               26470020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       26480020
*/* D (YES,ILLDSN,NO,) REACHED END OF INPUT */                          26482001
         C     XINPUT,ENDINPUT         AT END OF INPUT                  26490020
         BNL   ILLDSN                  YES, ILLEGAL DSNAME              26500020
         SPACE                                                          26510020
*/* P SET PTR TO MEMBER NAME IN DATA AREA */                            26512001
         ST    XINPUT,DATAPTR2         SET PTR TO MEMBER/JOBID NAME     26520002
*                                         IN DATA AREA           Y02666 26530002
*/* P INDICATE MEMBER IS PRESENT */                                     26532002
         OI    DATAFLA2,PRESENT        INDICATE MEMBER/JOBID IS PRESENT 26540002
*                                                                Y02666 26540402
*/* P GET GENSCAN CONTROL INFO FOR MEMBER NAME */                       26542001
         LA    R1,MEMBCNTL             PUT ADDR OF GENSCAN CONTROL INFO 26550020
         ST    R1,PDWORD                  FOR MEMBER NAME IN PDWORD     26560020
*/* D (,DSNSCAN) SCAN FOR MEMBER NAME */                                26562001
         B     DSNSCAN                 SCAN FOR MEMBERNAME/JOBID Y02666 26570002
         SPACE                                                          26580020
*/*DSNMSNG: P ZERO TEMPORARY PDE */                                     26582001
DSNMSNG  DS    0H                      NEXT QUALIFIER OR MEMBER IS      26590020
*                                         MISSING                       26600020
         XC    TEMPPDE(LTPDE),TEMPPDE  ZERO TEMPORARY PDE         M2379 26602020
*/* D (YES,DSNAMPRQ,NO,ILLDSN) PARM IS MISSING */                       26604001
         TM    RFLAGS,RFMEMB+RFQDSNM+RFNOTQ1 THE PARM IS MISSING ONLY   26610020
*                                                                       26620020
* NOTE-  THE PARM IS MISSING ONLY IF THE FIRST QUALIFIER OF DSNAME      26630020
*        IS  BEING PROCESSED AND THE DSNAME IS NOT QUOTED.              26640020
*        OTHERWISE, THE PARM IS INVALID.                                26650020
*                                                                       26660020
         BZ    DSNAMPRQ                PARM IS MISSING, PROMPT OR       26670020
*                                         DEFAULT                       26680020
         SPACE                                                          26690020
         B     ILLDSN                  PARM IS INVALID                  26700020
DSNPWQTE DS    0H                                                Y02666 26702002
         LA    R1,ONE(XINPUT)          GET INPUT PTR +ONE        Y02666 26702102
         C     R1,ENDINPUT             IS QUOTE AT END OF BUFFER Y02666 26702202
         BNL   DSNAMPWQ                YES, MISSING - PROMPT     Y02666 26702302
         OI    PFLAGS6,PSWDQFLG        INDICATE QUOTED PASSWORD  Y02666 26702402
         BAL   LINK2,QSTRIRSC          PROCESS QUOTED STRING     Y02666 26704002
         B     DSNPWEND                CONTINUE                  Y02666 26708002
         SPACE                                                          26710020
*/*DSNEND: D (YES,ILLDSN,NO,) PROCESSING MEMBER OR QUOTED DSNAME */     26712001
DSNEND   DS    0H                      DELIMITER IS END OF INPUT        26720020
         TM    RFLAGS,RFMEMB+RFQDSNM   IF MEMBER OR QUOTED DSNAME IS    26730020
         BNZ   ILLDSN                     BEING PROCESSED, THE PARM     26740020
*                                         IS INVALID                    26750020
         SPACE                                                          26760020
*/*DSNENDNM: P COMPUTE LENGTH OF DSNAME */                              26762001
DSNENDNM DS    0H                      END OF DSNAME PROCESSING         26770020
         S     XINPUTB,DATAPTR1        COMPUTE LENGTH OF DSNAME         26780020
         TM    PFLAGS5,DSNFLG          DSNAME IN PROCESS?        Y02666 26782002
         BZ    DSJOBLEN                YES, CHECK FOR LENGTH     Y02666 26784002
         LA    R14,DSNMAXLN            GET MAX LENGTH OF DSNAME         26790020
*/* D (YES,ILLDSN,NO,) LENGTH GREATER THAN MAX */                       26792001
         CR    XINPUTB,R14             IS LENGTH GREATER THAN 44        26800020
         BH    ILLDSN                  YES, PARM IS INVALID             26810020
         SPACE                                                          26820020
         TM    DATAFLA1,QUOTED         IS DSNAME QUOTED?         Y02666 26820402
         BO    DSJOBLEN                OPTION NOT POSSIBLE       Y02666 26820802
         L     R1,DATAPTR1             GET DATA SET PTR          Y02666 26820902
         CLI   ZERO(R1),ASTERISK       IS IT ASTERISK?           Y02666 26821002
         BE    DSJOBLEN                YES, DO NOT PREFIX USERID Y02666 26821102
         TM    PCEFLGB2(XPCE),PCEFUID  IS OPTION SPECIFIED?      Y02666 26821202
         BZ    DSJOBLEN                NO,CONTINUE USUAL PROCESSING     26821602
*                                                                Y02666 26821802
         L     R15,UPTADDR             GET UPT PTR.              Y02666 26821902
         USING UPT,R15                 GET ADDRESSABILITY        Y02666 26822002
         SR    R1,R1                   CLEAR TEMPORARY WORK REG. Y02666 26826502
         IC    R1,UPTPREFL             GET USERID LENGTH         Y02666 26828502
         LTR   R1,R1                   IS LENGTH ZERO            Y02666 26830502
         BZ    DSJOBLEN                USERID NOT SPECIFIED      Y02666 26830902
         LA    R1,ONE(R1,XINPUTB)      GET TOTAL DSNAME LENGTH   Y02666 26831302
         CR    R1,R14                  IS LENGTH TOO GREAT       Y02666 26831402
         BH    ILLDSN                  YES, DSNAME IS INVALID    Y02666 26831502
         STH   R1,DATALEN1             SAVE LENGTH               Y02666 26831602
         O     R1,SUBPOOLN             INDICATE SUBPOOL 1        Y02666 26831702
         DROP  R15                                                      26831802
         BAL   LINK2,STALOC            GET CORE FOR DSNAME       Y02666 26831902
         L     R15,UPTADDR             GET ECT PTR               Y02666 26832002
         USING UPT,R15                                                  26833902
         IC    R2,UPTPREFL             GET USERID LENGTH         Y02666 26836602
         BCTR  R2,ZERO                 DECREMENT FOR EX. INSTR   Y02666 26837002
         LA    R3,UPTPREFX             SET USERID PTR            Y02666 26837102
         EX    R2,UIDMVC               MOVE USERID TO AREA       Y02666 26837402
         L     R3,DATAPTR1             GET DSNAME PTR            Y02666 26837802
         ST    R1,DATAPTR1             REPLACE WITH NEW ONE      Y02666 26837902
         LA    R1,ONE(R1,R2)           POINT TO BYTE PAST USERID Y02666 26841702
         MVI   ZERO(R1),PERIOD         MOVE IN PERIOD            Y02666 26845502
         LA    R1,ONE(R1)              UPDATE PAST PERIOD        Y02666 26845602
         LR    R2,XINPUTB              GET DSNAME LENGTH         Y02666 26845702
         BCTR  R2,ZERO                 DECREMENT FOR EX. INSTR.  Y02666 26846702
         EX    R2,UIDMVC               MOVE DSNAME IN BUFFER     Y02666 26848702
         DROP  R15                                                      26848902
         B     DSTRANS                 PREPARE TO TRANSLATE      Y02666 26849402
DSJOBLEN DS    0H                                                Y02666 26849602
         STH   XINPUTB,DATALEN1        NO, SAVE LENGTH IN DATA AREA     26850002
DSTRANS  DS    0H                                                Y02666 26853402
         MVC   PPOINTR(SIX),DATAPTR1   SET UP POINTERS FOR TRANSLATE    26857202
         L     R15,ATRANSQ             GET ADDRESS OF TRANSLATE ROUTINE 26861002
*/* P TRANSLATE TO UPPER CASE */                                        26864802
         BALR  LINK1,R15               TRANSLATE TO UPPER CASE          26868602
*/* D (YES,DSN026,NO,) REACHED END OF INPUT */                          26872402
         C     XINPUT,ENDINPUT         IS SCAN AT END OF INPUT          26876202
         BNL   DSN026                  YES - TRY TO POP STACK           26880020
*/* D (YES,DSNMEMB,NO,DSN025) CURRENT CHARACTER A LEFT PAREN */         26882001
         CLI   ZERO(XINPUT),LEFTPRN    IS CURRENT CHAR A LEFT PAREN     26890020
         BE    DSNMEMB                 YES, PROCESS MEMBER              26900020
         B     DSN025                  NO, CONTINUE DSNAME PROCESSING   26910020
         SPACE                                                          26920020
*/*DSNEXIT: P BACK UP SCAN PTR */                                       26922001
DSNEXIT  DS    0H                      DSNAME EXIT                      26930020
         BCTR  XINPUT,ZERO             BACK UP SCAN PTR FOR LATER       26940020
         SPACE                                                          26950020
*/*DSNEXIT1: P INDICATE TO MOVE SIX WORDS */                            26952001
DSNEXIT1 DS    0H                      EXIT WHEN BACK UP IS UNNECESSARY 26960020
         NI    PFLAGS7,HFF-VOLSERF     INDICATE END OF VOLSER PROCESS   26960102
*                                                                Y02666 26960202
         TM    PFLAGS5,DSNFLG          DSNAME PROCESSING?        Y02666 26960402
         BO    DSNEXIT3                JOBNAME EXIT              Y02666 26960802
         TM    PFLAGS5,PSWDFLG         PASSWORD PROCESSING?      Y02666 26961202
         BZ    JOBNEXIT                BYPASS DSNAME EXIT        Y02666 26961602
DSNEXIT3 DS    0H                                                Y02666 26961702
         NI    PFLAGS5,HFF-DSNFLG-PSWDFLG  DSNAME/PASSWORD PROCESSING   26962002
*                                                                Y02666 26963002
         OI    PFLAGS7,DSNAMEF         INDICATE DSNAME VCE PROCESS      26964002
*                                      BEGINS                    Y02666 26967002
         LA    R1,TWENTY3              TELL EXIT ROUTINE TO MOVE SIX    26970020
*                                         WORDS                         26980020
*/* D (,POSITX) TAKE POSITIONAL EXIT */                                 26982001
         B     POSITX                  TAKE POSITIONAL EXIT             26990020
         SPACE                                                          27000020
JOBNEXIT DS    0H                                                Y02666 27000402
         LA    R1,FIFTEEN              EXIT ROUTINE MOVE 4 WORDS Y02666 27000802
         B     POSITX                  TAKE POSITIONAL EXIT      Y02666 27001202
*/*DSNAMPRQ: S PROMPTQ: TYR TO PROMPT OR DEFAULT */                     27002001
DSNAMPRQ DS    0H                      PARM IS MISSING.                 27010020
         BAL   LINK1,PROMPTQ           TRY TO PROMPT OR DEFAULT         27020020
*                                         IF ANY                        27030020
*                                                                       27040020
*/* D (YES,DSNAMRSC,NO,) DATA RETURNED */                               27042001
         B     DSNAMRSC                +0 RETURN, NEW DATA, RESCAN IT   27050020
*                                                                       27060020
*                                      +4 RETURN, NO DATA RETURNED      27070020
*                                                                       27080020
*/* P CLEAR TEMPORARY PDE */                                            27082001
         XC    TEMPPDE(LTPDE),TEMPPDE  CLEAR TEMPORARY PDE              27090020
*/* D (,DSNEXIT1) EXIT */                                               27092001
         B     DSNEXIT1                EXIT                             27100020
         SPACE                                                          27110020
*/*DSNAMPWQ: P LOAD LENGTH OF DSNAME */                                 27112001
DSNAMPWQ DS    0H                      * * * *                          27120020
         TM    PFLAGS5,INVPRMPT        WAS PROMPTING DONE BEFORE A45352 27122001
*                                      FOR THIS PARAMETER?       A45352 27124001
         BO    ILLDSNPS                YES,ISSUE INVALID MESSAGE A45352 27126001
         OI    PFLAGS5,INVPRMPT        NO, INDICATE FIRST PROMPT A45352 27128001
         L     R2,DATAPTR1             GET DSNAME POINTER               27130020
         LH    R1,DATALEN1             LOAD LENGTH OF DSNAME            27140020
*/* D (YES,DSNAMPWR,NO,) SEE IF SPECIFIED */                            27142001
         LTR   R2,R2                   SEE IF SPECIFIED                 27150020
         BNZ   DSNAMPWR                YES, GOOD                        27160020
         SPACE                                                          27170020
*/* P LOAD MEMBER NAME PTR AND LENGTH */                                27172001
         L     R2,DATAPTR2             LOAD MEMBER NAME POINTER         27180020
         LH    R1,DATALEN2             LOAD LENGTH OF MEMBER NAME       27190020
         SPACE                                                          27200020
*/*DSNAMPWR: S GETCORE: GET CORE FOR MESSAGE */                         27202001
DSNAMPWR DS    0H                      * * * *                          27210020
         LR    R3,R1                   SAVE DATA LENGTH                 27220020
         LA    R1,FOUR(R3)             GET SIZE OF CORE FOR MESSAGE SEG 27230020
*                                         PLUS FOUR FOR HEADER          27240020
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     27250020
         SPACE                                                          27260020
*                                      CORE ADDRESS RETURNED IN R1      27270020
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 27280020
         LA    R0,FOUR(R3)             GET SIZE OF MESSAGE SEGMENT      27290020
         STH   R0,ZERO(R1)             STORE INTO SEGMENT               27300020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 27310020
         MVI   THREE(R1),OFFSET2       SET OFFSET INTO 'ENTER PASSWORD  27320020
*                                          FOR' MESSAGE                 27330020
         BCTR  R3,ZERO                 REDUCE LENGTH FOR 'EX'           27340020
         LR    R15,R2                  LOAD START OF DATA ADDRESS       27350020
*/* P MOVE MESSAGE TEXT TO SEGMENT */                                   27352001
         EX    R3,BUILDSEG             MOVE TEXT TO NEW SEGMENT         27360020
         OI    PFLAGS,PFBYPAS          INDICATE BYPASS MODE REQUIRED    27370020
*/* P INDICATE MESSAGE TO WRITE */                                      27372001
         MVI   MSGCODE,MSG15           INDICATE MESSAGE TO WRITE        27380020
         LA    R0,TWO                  INDICATE TWO SEGMENT MSG         27390020
*/* S WRITER2: PROMPT */                                                27392001
         BAL   LINK1,WRITER2G          PROMPT IN BYPASS MODE            27400020
         SPACE                                                          27410020
*/* D (,DSNPSRSC) PROCESS PROMPT DATA */                                27412001
         B     DSNPSRSC                PROCESS PROMPT DATA              27420020
         EJECT                                                          27430020
*********************************************************************** 27431003
*  ADDRESS OF NEXT CSECT                                                27432003
*                                                                       27433003
         SPACE                                                          27434003
ADRCST1  DC    V(IKJEFP01)             ADDRESS OF SECOND CSECT          27435003
IKJEFP01 CSECT                                                          27436003
*********************************************************************** 27437003
         SPACE                                                          27438003
*********************************************************************** 27440020
*                                                                     * 27450020
*              POSITIONAL QUOTED STRING ROUTINE                       * 27460020
*                                                                     * 27470020
*********************************************************************** 27480020
*/*QSTRING: S SKIPB: SKIP SEPARATORS */                                 27482001
         SPACE                                                          27490020
QSTRING  DS    0H                      QSTRING ROUTINE                  27500020
         BAL   LINK2,SKIPB             SKIP BLANKS TO BEGINNING OF PARM 27510020
*                                                                       27520020
*/* D (YES,QSTRPRQ1,NO,) REACHED END OF INPUT */                        27522001
         B     QSTRPRQ1                +0 RETURN - END OF INPUT REACHED 27530020
*                                         PARM IS MISSING               27540020
*                                                                       27550020
*                                      +4 RETURN - BEGINNING OF PARM    27560020
*                                         IS ESTABLISHED                27570020
*                                                                       27580020
* ENTRY TO RESCAN NEW DATA FROM PROMPT OR DEFAULT                       27590020
*                                                                       27600020
*/*QSTRIRSC: P SAVE PTR FOR INVALID MSG */                              27602001
QSTRIRSC DS    0H                      * * * *                          27610020
         MVC   INVPSAVE,PPOINTR        SAVE PTR FOR INVALID MSG         27620020
*/* P INCREMENT SCAN POINTER */                                         27622001
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN REGISTER (SKIPB   27630020
*                                         HAS ALREADY SET XINPUTB AND   27640020
*                                         CHECKED FOR END OF INPUT)     27650020
         SPACE                                                          27660020
*                                                                       27670020
* COMMON CODE FOR PARSING QSTRING AND VALUE STRING                      27680020
*                                                                       27690020
*/*VALENTRY: D (YES,QSTR01,NO,) FIRST CHARACTER IS A QUOTE */           27692001
VALENTRY DS    0H                      * * * *                          27700020
         CLI   ZERO(XINPUT),QUOTE      IS FIRST CHARACTER A QUOTE       27710020
         BE    QSTR01                  YES - CONTINUE                   27720020
*/* D (YES,VALUPRQX,NO,QSTRPRQ) A VALUE IS BEING PROCESSED */           27722001
         SPACE                                                          27730020
         CLI   PCEPOST(XPCE),(VALUEB-POSITB)/FOUR IS A VALUE BEING      27740020
*                                         PROCESSED                     27750020
         BNE   QSTRPRQ                 NO - PROMPT FOR A QSTRING        27760020
         SPACE                                                          27770020
         BCT   XINPUT,VALUPRQX         YES - BAKUP AND PROMPT FOR VALUE 27780020
         SPACE                                                          27790020
QSTR01   DS    0H                      * * * *                          27800020
*/*QSTR01: P STORE ADDRESS OF NEXT CHARACTER AS POINTER TO STRING */    27802001
         LA    R2,ONE(XINPUT)          STORE ADDRESS OF NEXT CHARACTER  27810020
         ST    R2,PPOINTR                 AS POINTER TO STRING          27820020
*/*QSTRLOOP: D (YES,QSMSGEND,NO,) AT END OF CURRENT LEVEL OF INPUT */   27822001
QSTRLOOP DS    0H                                                       27830020
         SPACE                                                          27840020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN TO NEXT CHARACTER 27850020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED REG   27860020
         C     XINPUT,ENDINPUT         IS SCAN AT END OF CURRENT LEVEL  27870020
*                                         OF INPUT                      27880020
         BNL   QSMSGEND                YES, BRANCH TO ISSUE MSG AND     27890020
*                                         PROCESS END                   27900020
*/* D (YES,,NO,QSTRLOOP) CURRENT CHARACTER IS A QUOTE */                27902001
         CLI   ZERO(XINPUT),QUOTE      IS CURRENT CHARACTER A QUOTE     27910020
         BNE   QSTRLOOP                NO, BRANCH TO SCAN NEXT CHAR     27920020
*                                                                       27930020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN TO NEXT CHARACTER 27940020
         LR    XINPUTB,XINPUT          SET LAST CHARACTER SCANNED       27950020
*/* D (YES,QSTREND,NO,) NEXT CHARACTER IS AT END OF INPUT */            27952001
         C     XINPUT,ENDINPUT         IS SCAN AT END OF CURRENT LEVEL  27960020
*                                         OF INPUT                      27970020
         BNL   QSTREND                 YES, BRANCH TO PROCESS END       27980020
*/* D (YES,,NO,QNORMEND) CURRENT CHARACTER IS A QUOTE */                27982001
         SPACE                                                          27990020
         CLI   ZERO(XINPUT),QUOTE      IS CURRENT CHARACTER A QUOTE     28000020
         BNE   QNORMEND                NO, BRANCH TO PROCESS END        28010020
*/* D (NO,POSITQS,YES,) PROCESSING COBOL PCE'S? */                      28010101
         TM    CBFLAGS1,COBOLMOD       ARE WE PROCESSING COBOL   F41448 28010401
*                                      PCE'S?                    F41448 28010801
         BZ    POSITQS                 IF NOT, CONTINUE NORMALLY F41448 28011201
*/* P LOAD RETURN ADDRESS IN IKJPARS2 */                                28011301
*/* E () EXIT TO IKJPARS2 */                                            28011401
         L     LINK2,CBLNKSV2          IF IN COBOL MODE, RETURN  F41448 28011601
         BR    LINK2                   COBOL PROCESSORS          F41448 28011701
*/*POSITQS: D (YES,QSTRLOOP,NO,) A VALUE IS BEING PROCESSED */          28012001
         SPACE                                                          28020020
POSITQS  CLI   PCEPOST(XPCE),(VALUEB-POSITB)/FOUR IS A VALUE BEING      28030001
*                                         PROCESSED                     28040020
         BE    QSTRLOOP                YES - DO NOT REMOVE SECOND QUOTE 28050020
         SPACE                                                          28060020
*                                                                       28070020
* REMOVE SECOND QUOTE FROM BUFFER                                       28080020
*                                                                       28090020
*/* P REMOVE SECOND QUOTE FROM BUFFER */                                28092001
         L     R2,ENDINPUT             COPY END OF INPUT ADDR           28100020
         SR    R2,XINPUT               COMPUTE LENGTH OF REMAINING      28110020
*                                         DATA IN CURRENT LEVEL OF      28120020
*                                         INPUT                         28130020
MOVIT    DS    0H                                                       28142001
         BCTR  R2,ZERO                 SUBTRACT ONE FOR EXECUTE INSTR.  28142401
         LA    R3,HFF                  SET WORK REGISTER TO 255  S21105 28144001
         NR    R3,R2                   GET TRUE LENGTH TO MOVE   S21105 28146001
         EX    R3,QSTRMVC              REMOVE SECOND QUOTE BY SHIFTING  28150001
*                                         REMAINDER OF BUFFER ONE TO    28160020
*                                         THE LEFT               S21105 28170001
         LA    XINPUT,ONE(R3,XINPUT)   INCREMENT SCAN POINTER    S21105 28172001
         XR    R2,R3                   MORE IN BUFFER TO MOVE    S21105 28174001
         BNZ   MOVIT                   YES, CALCULATE HOW MUCH   S21105 28176001
         BCTR  XINPUT,ZERO             COMPUTE ADDR OF LAST BYTE OF     28180001
*                                         BUFFER                 S21105 28190001
         MVI   ZERO(XINPUT),BLNK       REPLACE WITH A BLANK             28200001
         LR    XINPUT,XINPUTB          RESET XINPUT              S21105 28202001
         BCT   XINPUT,QSTRLOOP         BACK UP XINPUT TO                28210020
*                                         ACCOUNT FOR REMOVAL           28220020
*                                         OF THE QUOTE AND BRANCH       28230020
*                                         TO SCAN NEXT CHAR             28240020
*/* P ACCOUNT FOR REMOVAL OF QUOTE */                                   28242001
*/* D (,QSTRLOOP) SCAN NEXT CHARACTER */                                28244001
         SPACE                                                          28250020
*                                                                       28260020
* PROCESS END                                                           28270020
*                                                                       28280020
*/*QNORMEND: D (YES,QSTREND1,NO,) PROCESSING COBOL PCE'S? */            28280401
*/* D (YES,,NO,QSTREND1) A VALUE IS BEING PROCESSED */                  28282001
QNORMEND DS    0H                      * * * *                          28290020
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 28292001
         BO    QSTREND1                IF YES, BRANCH AROUND     F41448 28294001
*                                      CHECKS                    F41448 28296001
         CLI   PCEPOST(XPCE),(VALUEB-POSITB)/FOUR IS A VALUE BEING      28300020
*                                         PROCESSED                     28310020
         BNE   QSTREND1                NO - QSTRING, EXIT               28320020
*/* S RANGE: CHECK FOR POSSIBLE RANGE */                                28322001
         BAL   LINK1,RANGE             CHECK FOR RANGE                  28330020
*/* D (YES,QSTREND1,NO,) EITHER RANGE NOT ALLOWED,RANGE NOT PRESENT, OR 28332001
*/* 2ND VALUE OF RANGE */                                               28334001
         B     QSTREND1                +0 RETURN - RANGE NOT ALLOWED OR 28340020
*                                         RANGE NOT PRESENT OR          28350020
*                                         2ND VALUE OF RANGE            28360020
*/* P SET UP ADDRESS FOR SCAN OF 2ND VALUE */                           28362001
         LA    LINK2,VAL2RSC           SET UP ADDR FOR SCAN OF 2ND VALU 28370020
*/* D (YES,QSTREND1) PROCESS END */                                     28372001
         B     QSTREND1                PROCESS END                      28380020
*/*QSTREND: D (YES,,NO,QSTREND1) FIRST VALUE OF RANGE WAS ENTERED */    28382001
         SPACE                                                          28390020
         SPACE                                                          28400020
QSTREND  DS    0H                      * * * *                          28410020
*/* D (YES,QSTREND1,NO,) PROCESSING COBOL PCE'S? */                     28410101
*/* COMMENT (1,15) BYPASS RANGE CHECK */                                28410201
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 28410401
         BO    QSTREND1                YES - BYPASS RANGE CHECK  F41448 28410801
*/* P TURN OFF 1ST VALUE FLAG AND TURN ON 2ND VALUE FLAG */             28412001
         TM    PFLAGS2,RNGEVAL1        WAS 1ST VALUE OF RANGE ENTERED   28420020
         BZ    QSTREND1                NO, CONTINUE                     28430020
         NI    PFLAGS2,HFF-RNGEVAL1    YES, TURN OFF 1ST VALUE FLAG     28440020
         OI    PFLAGS2,RNGEVAL2        TURN ON 2ND VALUE FLAG           28450020
*/*QSTREND1: P COMPUTE AND SAVE LENGTH OF STRING EXCLUDING END QUOTE */ 28452001
QSTREND1 DS    0H                      * * * *                          28460020
         BCTR  XINPUTB,ZERO            BACKUP TO EXCLUDE END QUOTE FROM 28470020
*                                         LENGTH                        28480020
         TM    PFLAGS5,PSWDFLG         IS PASSWORD IN PROCESS?   Y02666 28482002
         BO    QSPWEND                 RETURN TO CALLER          Y02666 28484002
         TM    PFLAGS6,CHARFLG         IS CHARACTER VALUE TYPE IN       28486002
*                                      PROCESS?                  Y02666 28486402
         BO    QSPWEND                 YES, RETURN TO IKJEFP20   Y02666 28488402
         S     XINPUTB,PPOINTR         COMPUTE LENGTH                   28490020
         STH   XINPUTB,PLENGTH         SAVE                             28500020
*/* D (NO,QSTEXIT,YES,) PROCESSING COBOL PCE'S? */                      28500101
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 28500401
         BZ    QSTEXIT                 NO -CONTINUE NORMAL PARSE F41448 28500801
*/*CBLRETQS: P LOAD RETURN ADDRESS INTO IKJPARS2 */                     28500901
*/* R () RETURN TO IKJPARS2 ON +4 */                                    28501001
CBLRETQS L     LINK2,CBLNKSV2          LOAD RETURN REG FROM      F41448 28501201
*                                      COBOL SAVE AREA           F41448 28501601
         B     FOUR(LINK2)             RETURN +4                 F41448 28501701
*/*QSTEXIT: D (,POSITX1) EXIT */                                        28502001
QSTEXIT  BCT   XINPUT,POSITX1          EXIT                             28510001
         SPACE                                                          28520020
*                                                                       28530020
* TRY TO PROMPT OR DEFAULT FOR MISSING QSTRING                          28540020
*                                                                       28550020
*/*QSTRPRQ: P PREPARE FOR PROMPT/DEFAULT */                             28552001
QSTRPRQ  DS    0H                      NORMAL ENTRY                     28560020
         BCTR  XINPUT,ZERO             BACK UP SCAN POINTR              28570020
*                                                                       28580020
*/*QSTRPRQ1: S PROMPTQ: TEST FOR PROMPT/DEFAULT DATA */                 28582001
QSTRPRQ1 DS    0H                      ENTRY AFTER SKIPB                28590020
         BAL   LINK1,PROMPTQ           TEST FOR PROMPT OR DEFAULT       28600020
*                                                                       28610020
*/* D (YES,QSTRIRSC,NO,POSITX2) NEW DATA RETURN */                      28612001
         B     QSTRIRSC                +0 RETURN - RESCAN NEW DATA      28620020
*                                                                       28630020
         B     POSITX2                 +4 RETURN - NO DATA, TAKE NULL   28640020
*                                         PDE EXIT                      28650020
         SPACE                                                          28660020
*                                                                       28670020
* ISSUE 'ENDING QUOTE ASSUMED' MESSAGE AND TREAT AS IF ENTERED.         28680020
*                                                                       28690020
QSMSGEND DS    0H                      * * * *                          28700020
*/*QSMSGEND: P COMPUTE AND SAVE LENGTH OF STRING */                     28702001
         S     XINPUTB,PPOINTR         COMPUTE LENGTH                   28710020
         STH   XINPUTB,PLENGTH         SAVE LENGTH                      28720020
         TM    PFLAGS5,PSWDFLG         PASSWORD IN PROCESS?      Y02666 28722002
         BZ    QSMSGEN1                NO, CONTINUE              Y02666 28724002
         LA    R1,PSWDMSG              SET UP FOR PASSWORD MSG   Y02666 28726002
         ST    R1,SEGLIST+TWELVE       STORE MSG PTR             Y02666 28728002
         B     QSMSG07                 GO PROCESS END QUOTE ASSUMED MSG 28728402
*                                      FOR PASSWORD              Y02666 28728802
QSMSGEN1 DS    0H                                                Y02666 28729202
         LA    R1,SIX(XINPUTB)         GET SIZE OF CORE FOR MESSAGE SEG 28730020
*                                         PLUS HEADER, LEFT QUOTE AND   28740020
*                                         POSSIBLE TYPE-CHARACTER       28750020
*/* S GETCORE: GET CORE FOR MESSAGE SEGMENT */                          28752001
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     28760020
         SPACE                                                          28770020
*                                      CORE ADDRESS RETURNED IN R1      28780020
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 28790020
         LA    R0,SIX(XINPUTB)         GET SIZE OF MESSAGE SEGMENT      28800020
         STH   R0,ZERO(R1)             STORE INTO SEGMENT               28810020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 28820020
         MVI   THREE(R1),OFFSET5       SET OFFSET TO LENGTH OF 'END     28830020
*                                         QUOTE ASSUMED' MESSAGE        28840020
         L     R15,PPOINTR             LOAD START OF DATA ADDRESS       28850020
         BCTR  R15,ZERO                INCLUDE BEGINNING QUOTE IN       28860020
*                                         SECOND SEGMENT                28870020
*/* D (YES,QSMSG01,NO,) PROCESSING COBOL PCE'S? */                      28870101
*/* COMMENT (1,15) CONTINUE MESSGE */                                   28870201
*/* COMMENT (2,15) BUILD */                                             28870301
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 28870401
         BO    QSMSG01                 YES-CONTINUE MESSAGEBUILD F41448 28870801
*/* D (YES,,NO,QSMSG01) A VALUE IS BEING PROCESSED */                   28872001
         CLI   PCEPOST(XPCE),(VALUEB-POSITB)/FOUR IS A VALUE BEING      28880020
*                                         PROCESSED                     28890020
         BNE   QSMSG01                 IF NO CONTINUE                   28900020
*/* P ALLOW FOR TYPE CHARACTER IN MESSAGE */                            28902001
         SPACE                                                          28910020
         BCTR  R15,ZERO                IF YES INCLUDE TYPE-CHARACTER    28920020
*                                         IN MESSAGE                    28930020
         LA    XINPUTB,ONE(XINPUTB)    INCLUDE TYPE-CHARACTER IN LENGTH 28940020
*/*QSMSG01: P INDICATE 'ENDING QUOTE ASSUMED' MESSAGE */                28942001
         SPACE                                                          28950020
QSMSG01  DS    0H                      * * * *                          28960020
         LA    R14,FIVE(XINPUTB,R1)    GET ADDRESS OF POSSIBLE EXTRA    28970020
*                                         BUFFER CHARACTER              28980020
         MVI   ZERO(R14),BLNK          BLANK IT OUT                     28990020
         EX    XINPUTB,BUILDSEG        MOVE TEXT TO NEW SEGMENT         29000020
QSMSG07  DS    0H                                                Y02666 29002002
         MVI   MSGCODE,MSG7            INDICATE MESSAGE TO WRITE        29010020
*/* S WRITER1: WRITE THE MESSAGE */                                     29012001
         BAL   LINK1,WRITER1           WRITE THE MESSAGE                29020020
         TM    PFLAGS5,PSWDFLG         PASSWORD IN PROCESS?      Y02666 29022002
         BZ    QMSG08                  CONTINUE PROCESSING       Y02666 29022402
QSMSGVT  DS    0H                                                Y02666 29024102
         L     XINPUT,ENDINPUT         RESET SCAN PTR            Y02666 29026202
         LR    XINPUTB,XINPUT          RESTORE BACKUP SCAN PTR   Y02666 29027902
QSPWEND  DS    0H                                                Y02666 29029602
         BR    LINK2                   RETURN TO PASSWORD CALLER Y02666 29031302
*/* D (YES,CBLRETQS,NO,) PROCESSING COBOL PCE'S? */                     29033002
*/* COMMENT (1,15) RETURN TO */                                         29034702
*/* COMMENT (2,15) IKJPARS2 */                                          29036402
QMSG08   DS    0H                      Y02666                           29038102
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 29039802
         BO    CBLRETQS                YES - RETURN TO THE       F41448 29041502
*                                      COBOL MACRO PROCESSORS    F41448 29043202
*/* D (YES,,NO,POSITX1) FIRST VALUE OF RANGE WAS ENTERED */             29044902
         SPACE                                                          29046602
         TM    PFLAGS6,CHARFLG         IS CHARACTER VALUE TYPE IN       29047002
         BO    QSMSGVT                 YES, RETURN TO CALLER     Y02666 29047402
         TM    PFLAGS2,RNGEVAL1        WAS 1ST VALUE OF RANGE ENTERED   29048302
         BZ    POSITX1                 NO, CONTINUE                     29050020
*/* P TURN OFF FIRST VALUE FLAG AND TURN ON SECOND VALUE FLAG */        29052001
         SPACE                                                          29060020
         NI    PFLAGS2,HFF-RNGEVAL1    YES, TURN OFF VALUE 1 FLAG       29070020
         OI    PFLAGS2,RNGEVAL2        TURN ON VALUE 2 FLAG             29080020
*/* D (,POSITX1) BRANCH TO EXIT */                                      29082001
         B     POSITX1                 BRANCH TO POSITIONAL EXIT RTN.   29090020
         EJECT                                                          29100020
*********************************************************************** 29110020
*                                                                     * 29120020
*                    POSITIONAL SPACE ROUTINE                         * 29130020
*                                                                     * 29140020
*   THIS POSITIONAL PARAMETER IS INTENDED TO BE FOLLOWED BY A         * 29150020
* POSITIONAL SELF-DELIMITING STRING PARAMETER. THE TSO EDIT COMMAND   * 29160020
* PROCESSOR IS THE SOLE USER OF THIS FUNCTION. NO OPTIONS ARE         * 29170020
* AVAILABLE WITH THE SPACE PARAMETER. ALSO EDIT DOES NOT SUPPLY ANY   * 29180020
* OPTIONS WITH THE FOLLOWING STRING PARAMETER.                        * 29190020
*    SINCE THE COMMAND NAME HAS BEEN PREVIOUSLY DELIMITED BY A BLANK, * 29200020
* COMMA OR TAB CHARACTER THE SPACE PARAMETER DOES EXIST (NO ERROR     * 29210020
* CONDITION POSSIBLE). IF THE DELIMITER IS A TAB, THE TAB IS TO BE    * 29220020
* THE FIRST CHARACTER OF THE FOLLOWING STRING. THE END OF THE STRING  * 29230020
* IS DELIMITED BY THE END OF THE BUFFER.                              * 29240020
*                                                                     * 29250020
*********************************************************************** 29260020
*/*SPACE: P INDICATE SPACE/STRING SEQUENCE FOR STRING RTN */            29262001
         SPACE                                                          29270020
SPACE    DS    0H                      SPACE ROUTINE                    29280020
         OI    PFLAGS3,PFSPACE         INDICATE THIS IS A SPACE/STRING  29290020
*                                         SEQUENCE FOR STRING ROUTINE   29300020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN POINTER           29310020
*/* D (YES,,NO,POSITX3) NEXT CHARACTER IS A TAB */                      29312001
         CLI   ZERO(XINPUT),TABCHAR    IS NEXT CHARACTER A TAB          29320020
         BNE   POSITX3                 IF NO BRANCH                     29330020
*/* D (,POSITX3) USE TAB CHARACTER AS FIRST CHARACTER OF STRING AND     29332001
*/*EXIT */                                                              29334001
         SPACE                                                          29340020
         BCT   XINPUT,POSITX3          USE TAB CHARACTER AS FIRST       29350020
*                                         CHARACTER OF STRING           29360020
         EJECT                                                          29370020
*********************************************************************** 29380020
*                                                                     * 29390020
*                  POSITIONAL PDE ERASE ROUTINE                       * 29400020
*                                                                     * 29410020
*   THIS ROUTINE DETERMINES THE LENGTH OF THE PDE TO BE ERASED AND    * 29420020
* THEN PROCEEDS TO ZERO IT OUT (ERASE).                               * 29430020
*   ERASE MODE IS ENTERED BY SETTING THE RFERASE FLAG IN THE RECURSIVE* 29440020
* WORKSPACE AREA (RFLAGS). ITS SET TO INDICATE THAT A DUPLICATE       * 29450020
* KEYWORD PARAMETER HAS BEEN FOUND IN THE INPUT BUFFER AND THE        * 29460020
* PREVIOUS KEYWORD AND ASSOCIATED SUBFIELD, IF ANY, MUST BE ERASED    * 29470020
* AND REPLACED WITH NEW DATA.                                         * 29480020
*   THE ROUTINE IS ENTERED FROM THE POSIT AND IDENT ROUTINES.         * 29490020
*        ENTRY - R2 POSITIONAL TYPE CODE                              * 29500020
*                                                                     * 29510020
*********************************************************************** 29520020
*/*POSITERS: P STORE TYPE CODE */                                       29522001
         SPACE                                                          29530020
POSITERS DS    0H                      POSITIONAL PDE ERASE ROUTINE     29540020
         STC   R2,PDWORD               STORE MASSAGED TYPE CODE         29550020
         LA    R2,TWENTY3              LOAD LENGTH-1 OF DSNAME AND      29560020
*                                         DSTHING PDE                   29570020
*/* D (YES,POSITER1,NO,) PDE IS 6 WORDS LONG(DSNAME) */                 29572001
*/* D (YES,POSITER1,NO,) PDE IS 6 WORDS LONG(DSTHING) */                29574001
         CLI   PDWORD,(DSNAMB-POSITB)  IS PDE 6 WORDS LONG - DSNAME     29580020
         BE    POSITER1                YES --- BRANCH                   29590020
         SPACE                                                          29600020
         CLI   PDWORD,(DSTHIB-POSITB)  IS PDE 6 WORDS LONG - DSTHING    29610020
         BE    POSITER1                YES --- BRANCH                   29620020
         SPACE                                                          29630020
         LA    R2,THIRTY5              LOAD LENGTH-1 OF ADDRESS PDE     29640020
         CLI   PDWORD,(ADDRB-POSITB)   IS PDE 9 WORDS LONG - ADDRESS    29650020
         BE    POSITER1                YES --- BRANCH                   29660020
         SPACE                                                          29670020
         LA    R2,FIFTEEN              LOAD LENGTH-1 OF USERID PDE      29680020
         CLI   PDWORD,(USIDB-POSITB)   IS PDE 4 WORDS LONG              29690020
         BE    POSITER1                YES --- BRANCH                   29700020
         SPACE                                                          29710020
         CLI   PDWORD,(JOBNAMB-POSITB) IS PDE 4 WORDS LONG              29712003
         BE    POSITER1                YES --- BRANCH                   29714003
         SPACE                                                          29716003
*                                                                       29720020
* IT MUST BE A TWO WORD PDE BEING ERASED.                               29730020
*                                                                       29740020
*/*IDENTERS: P ERASE 2 WORD PDE(IDENT) */                               29742001
IDENTERS DS    0H                      ENTRY FOR ERASING AN IDENT PDE   29750020
         LA    R2,SEVEN                LOAD LENGTH OF REMAINING PDES OR 29760020
*                                         LENGTH OF IDENT PDE           29770020
*/*POSITER1: D (YES,,NO,POSITER2) RANGE IS ALLOWED */                   29772001
         SPACE                                                          29780020
POSITER1 DS    0H                      * * * *                          29790020
         TM    PCEFLGB2(XPCE),PCEFRNGE IS A RANGE ALLOWED               29800020
         BZ    POSITER2                IF NO BRANCH                     29810020
*/* P DOUBLE SIZE OF PDE TO ERASE */                                    29812001
         SPACE                                                          29820020
         LA    R2,ONE(R2,R2)           IF YES DOUBLE THE SIZE OF PDE    29830020
*                                         TO ERASE                      29840020
*/*POSITER2: P GET TRUE ADDRESS OF PDE */                               29842001
         SPACE                                                          29850020
POSITER2 DS    0H                      * * * *                          29860020
         MVC   PDWORD(TWO),PCEPDEO(XPCE) ALIGN THE PDE OFFSET ON PROPER 29870020
*                                         BOUNDARY                      29880020
         LH    R3,PDWORD               LOAD THE PDE OFFSET              29890020
         A     R3,XPDL                 GET TRUE ADDRESS OF PDE          29900020
*/* P EXECUTE INSTRUCTION TO ERASE OLD INFORMATION FROM PDE */          29902001
         EX    R2,ERASEXC              ERASE OLD INFORMATION FROM PDE   29910020
*/* D (YES,,NO,POSITX3) LIST IS ALLOWED */                              29912001
         TM    PCEFLGB2(XPCE),PCEFLIST IS A LIST ALLOWED                29920020
         BZ    POSITX3                 NO ERASE COMPLETE --- BRANCH     29930020
         SPACE                                                          29940020
         AR    R2,R3                   GET PTR TO LIST CHAIN -1         29950020
*/* P INDICATE NO LIST PRESENT */                                       29952001
         MVC   ONE(L'ENDCHAIN,R2),ENDCHAIN INDICATE NO LIST PRESENT     29960020
*/* D (,POSITX3) EXIT */                                                29962001
         B     POSITX3                 ERASE COMPLETE --- BRANCH        29970020
         EJECT                                                          29980020
*********************************************************************** 29990020
*                                                                     * 30000020
*                       POSITIONAL EXIT ROUTINE                       * 30010020
*                                                                     * 30020020
*   THIS ROUTINE IS ENTERED BY THE IKJPOSIT AND IKJIDENT PARAMETER    * 30030020
* ROUTINES AT THE CONCLUSION OF THEIR PROCESSING. THE PDE IS FILLED   * 30040020
* IN, A VALIDITY CHECK EXIT IS TAKEN AND THE NEXT PCE ADDRESS IS      * 30050020
* CALCULATED.                                                         * 30060020
*                                                                     * 30070020
*********************************************************************** 30080020
         SPACE                                                          30090020
*/*POSITX2: P INDICATE NULL DATA WAS ACCEPTED */                        30092001
POSITX2  DS    0H                      INDICATE NULL DATA WAS ACCEPTED  30100020
         XC    PPOINTR(L'PPOINTR+L'PLENGTH),PPOINTR ZERO PTR AND        30110020
*                                         LENGTH FIELDS                 30120020
         SPACE                                                          30130020
*                                                                       30140020
* ENTRY POINT FOR STRING, PSTRING, QSTRING AND VALUE ROUTINES. THE PDE  30150020
* LENGTH FOR THESE POSITIONAL TYPES IS TWO WORDS. ALSO THE DATA MAY     30160020
* HAVE TO BE TRANSLATED TO UPPERCASE.                                   30170020
*                                                                       30180020
*                                                                       30180402
*/*POSITX1: P TRANSLATE TO UPPERCASE */                                 30182001
POSITX1  DS    0H                      * * * *                          30190020
         TM    PFLAGS6,PDEHEX+NUMFLG   WAS HEXADEXIMAL TYPE PROCESSED?  30192002
*                                                                Y02666 30194002
         BM    POSITHEX                YES, BYPASS TRANSLATE     Y02666 30196002
*                                                                       30198002
         L     R15,ATRANSQ             GET ADDRESS OF TRANSLATE         30200020
*                                         ROUTINE                       30210020
         BALR  LINK1,R15               TRANSLATE TO UPPER CASE          30220020
         SPACE                                                          30230020
*/* P MOVE PTR TO AND LENGTH OF DATA TO TEMP PDE */                     30232001
*                                                                       30232402
POSITHEX DS    0H                                                Y02666 30234002
         MVC   DATAPTR1+ONE(L'DATAPTR1-ONE+L'DATALEN1),PPOINTR+ONE      30240020
*              MOVE PTR TO DATA AND LENGTH OF DATA TO TEMPORARY PDE     30250020
         SPACE                                                          30260020
*                                                                       30270020
********                                                                30280020
******** N O T E  - THE ABOVE INSTRUCTION ASSUMES PPOINTR AND PLENGTH   30290020
********            ARE CONTIGUOUS AND DATAPTR1 AND DATALEN1 ARE        30300020
********            CONTIGUOUS.                                         30310020
********                                                                30320020
*                                                                       30330020
         SPACE                                                          30340020
*/* D (YES,,NO,POSITX0) DATA IS PRESENT */                              30342001
         NC    PPOINTR,PPOINTR         IS DATA PRESENT                  30350020
         BZ    POSITX0                 IF NO BRANCH                     30360020
         SPACE                                                          30370020
*/* P INDICATE IN PDE DATA PRESENT */                                   30372001
         OI    DATAFLA1,DATAPRES       YES - INDICATE SO IN PDE         30380020
         TM    PFLAGS6,PDEHEX          IS DATA HEXADECIMAL?      Y02666 30382002
         BZ    POSITX0                 NO, CONTINUE PROCESSING   Y02666 30384002
         OI    DATAFLA1,PDEHEX         YES, INDICATE IN PDE      Y02666 30386002
         SPACE                                                          30390020
*/*POSITX0: P INDICATE PDE TWO WORDS LONG */                            30392001
POSITX0  DS    0H                      * * * *                          30400020
         NI    PFLAGS6,HFF-PDEHEX-NUMFLG  RESET FLAGS            Y02666 30402002
         LA    R1,SEVEN                INDICATE PDE IS TWO WORDS LONG   30410020
         SPACE                                                          30420020
*                                                                       30430020
* ENTRY POINT FOR ADDRESS, DSNAME AND USERID ROUTINES. THE PDE LENGTH   30440020
* IS IN R1. TRANSLATION TO UPPERCASE HAS ALREADY TAKEN PLACE.           30450020
*                                                                       30460020
*/*POSITX: P SAVE LENGTH OF DATA */                                     30462001
POSITXCB EQU   *                       ENTRY FROM COBOL SUPPORT  F41448 30464001
*                                      MODULE                    F41448 30466001
POSITX   DS    0H                      * * * *                          30470020
         ST    LINK2,PLINKSV1          SAVE RETURN ADDR FOR             30480020
*                                         POSSIBLE 2ND RANGE VALUE      30490020
*/* D (NO,POSITXC,YES,) PROCESSING COBOL PCE'S? */                      30490401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 30492001
         BZ    POSITXC                 NO-CONTINUE NORMAL PARSE  F41448 30494001
*/* P STORE RETURN ADDRESS INTO IKJPARS2 */                             30494401
         L     LINK2,CBLNKSV2          STORE CORRECT RETURN      F41448 30496001
         ST    LINK2,PLINKSV1          ADDRESS INTO PLINKSV1     F41448 30498001
*                                      FOR RET TO COBOL MODULE   F41448 30498401
*/*POSITXC: P SAVE PDESIZE */                                           30498801
POSITXC  STC   R1,PPCOUNT              SAVE LENGTH FOR FUTURE USE       30500001
         STC   R1,PPDESIZE             SAVE SIZE OF PDE-1               30510020
*/* D (YES,POSITX12,NO,) 2ND RANGE VALUE */                             30512001
         TM    PFLAGS2,RNGEVAL2        IS THIS THE 2ND RANGE VALUE      30520020
         BO    POSITX12                YES, SPECIAL PROCESSING          30530020
         SPACE                                                          30540020
*                                                                       30550020
* CALCULATE PDE ADDRESS.                                                30560020
*                                                                       30570020
         MVC   PDWORD(TWO),PCEPDEO(XPCE) ALIGN PDE OFFSET ON PROPER     30580020
*                                         BOUNDARY                      30590020
         LH    R3,PDWORD               LOAD THE PDE OFFSET              30600020
*/* P GET TRUE ADDRESS OF PDE */                                        30602001
         A     R3,XPDL                 GET TRUE ADDRESS OF PDE          30610020
         ST    R3,PDEADR               STORE ADDR OF PDE IN PARM LIST   30620020
*                                         FOR POSSIBLE VALIDITY         30630020
*                                         CHECK EXIT                    30640020
         XC    PREVPDEL,PREVPDEL       CLEAR PREVIOUS PDE POINTER ---   30650020
*                                         ITS USED AS A SWITCH IN THE   30660020
*                                         VALIDITY CHECK ROUTINE        30670020
         LA    R2,ONE(R1)              GET SIZE OF DATA                 30680020
         AR    R2,R3                   OBTAIN ADDR OF POSSIBLE          30690020
*                                         2ND HALF OF PDE               30700020
         ST    R2,RNG2ADDR             SAVE FOR POSSIBLE 2ND            30710020
*                                         RANGE VALUE                   30720020
*/* D (YES,,NO,POSITX55) RANGE SPACE ALOTTED IN PDE */                  30722001
         TM    PCEFLGB2(XPCE),PCEFRNGE  IS RANGE SPACE ALOTTED IN PDE   30730020
         BZ    POSITX55                NO, CONTINUE                     30740020
         SPACE                                                          30750020
*/* P GET ACTUAL SIZE OF PDE */                                         30752001
         LA    R1,ONE(R1,R1)           YES, ADD LENGTH OF 2ND PDE TO    30760020
*                                         GET ACTUAL SIZE OF PDE-1      30770020
         STC   R1,PPDESIZE             SAVE                             30780020
         SPACE                                                          30790020
*/*POSITX55: D (YES,,NO,POSITX9A) PROCESSING A LIST */                  30792001
POSITX55 DS    0H                      * * * *                          30800020
         TM    PFLAGS,PFLIST           ARE WE PROCESSING A LIST         30810020
         BZ    POSITX9A                NO BIT ZERO --- BRANCH           30820020
         SPACE                                                          30830020
*                                                                       30840020
* FIND LAST LIST ELEMENT ON LIST CHAIN. STORAGE FOR THE FIRST PDE IN    30850020
* A LIST IS OBTAINED BY THE INITIALIZATION ROUTINE.                     30860020
*                                                                       30870020
*/*POSITX5: P INDICATE AT LEAST ONE PDE BUILT */                        30872001
POSITX5  DS    0H                      * * * *                          30880020
         OI    PFLAGS3,PFONE           INDICATE AT LEAST ONE PDE        30890020
*                                         HAS BEEN BUILT                30900020
*/* P GET PTR TO CHAIN PTR */                                           30902001
         LA    R15,ONE(R1,R3)          GET PTR TO CHAIN PTR             30910020
*/* D (YES,POSITXLE,NO,) FIRST ELEMENT OF LIST BEING STORED */          30912001
         EX    R1,POSITXNC             IS ACTUAL PDE EMPTY --- FIRST    30920020
*                                         ELEMENT OF LIST BEING STORED  30930020
         BZ    POSITXLE                YES IF ZERO --- BRANCH           30940020
         SPACE                                                          30950020
*/* D (YES,POSITXCE,NO,) LAST PDE IN CHAIN */                           30952001
         CLI   ZERO(R15),HFF           IS THIS THE LAST PDE IN CHAIN    30960020
         BE    POSITXCE                IF YES BRANCH                    30970020
         SPACE                                                          30980020
*/* P GET PTR TO NEXT CHAIN ELEMENT */                                  30982001
         L     R3,ZERO(R15)            FETCH PTR TO NEXT CHAIN ELEMENT  30990020
*/* D (,POSITX5) LOOP THROUGH CHAIN */                                  30992001
         B     POSITX5                 LOOP THROUGH CHAIN               31000020
         SPACE                                                          31010020
*                                                                       31020020
* ALLOCATE NEW PDE FOR CHAIN.                                           31030020
*                                                                       31040020
*/*POSITXCE: P ZERO LAST ELEMENT IN CHAIN INDICATOR */                  31042001
POSITXCE DS    0H                      * * * *                          31050020
         MVI   ZERO(R15),ZERO          ZERO LAST ELEMENT IN CHAIN       31060020
*                                         INDICATOR                     31070020
         LR    R3,R15                  SAVE CHAIN POINTER               31080020
         ST    R3,PREVPDEL             SAVE PREVIOUS PDE POINTER        31090020
*/* P INDICATE HOW MUCH CORE NEEDED */                                  31092001
         LA    R1,FIVE(R1)             INDICATE TO STORAGE ALLOCATION   31100020
*                                         ROUTINE HOW MUCH CORE NEEDED  31110020
*/* S STALOC: ALLOCATE STORAGE */                                       31112001
         BAL   LINK2,STALOC            ALLOCATE STORAGE                 31120020
         SPACE                                                          31130020
*                                      STORAGE ADDRESS RETURNED IN R1   31140020
*/* P FORWARD CHAIN ELEMENTS */                                         31142001
         ST    R1,ZERO(R3)             FORWARD CHAIN ELEMENTS           31150020
         LR    R3,R1                   SAVE NEW ELEMENT ADDRESS         31160020
         ST    R3,PDEADR               STORE ADDRESS OF NEW PDE FOR     31170020
*                                         POSSIBLE VALIDITY CHECK EXIT  31180020
         SR    R1,R1                   ZERO REG TO HOLD ONE BYTE LENGTH 31190020
         IC    R1,PPCOUNT              GET SIZE OF DATA -1              31200020
*/* P GET ACTUAL SIZE OF DATA */                                        31202001
         LA    R2,ONE(R1)              GET ACTUAL SIZE OF DATA          31210020
*/* P SAVE ADDR OF POSSIBLE 2ND HALF OF PDE */                          31212001
         AR    R2,R3                   OBTAIN ADDR OF POSSIBLE          31220020
*                                         2ND HALF OF PDE               31230020
         ST    R2,RNG2ADDR             SAVE FOR POSSIBLE 2ND VALUE      31240020
         SR    R1,R1                   ZERO REG TO HOLD ONE BYTE LENGTH 31250020
         IC    R1,PPDESIZE             LOAD SIZE OF PDE-1               31260020
*/* P GET NEXT PDE PTR */                                               31262001
         LA    R15,ONE(R1,R3)          POINT TO NEXT PDE PTR            31270020
         SPACE                                                          31280020
*/*POSITXLE: P SET LAST ELEMENT IN CHAIN INDICATOR */                   31282001
POSITXLE DS    0H                      * * * *                          31290020
         MVI   ZERO(R15),HFF           SET LAST ELEMENT IN CHAIN        31300020
*                                         INDICATOR                     31310020
*/* D (YES,POSITX9,NO,) FIRST VALUE OF A RANGE */                       31312001
         TM    PFLAGS2,RNGEVAL1        IS THIS THE 1ST VALUE OF A RANGE 31320020
         BO    POSITX9                 YES, EXIT                        31330020
*                                                                       31340020
*/*POSITX13: S SKIPB: SKIP SEPARATORS */                                31342001
POSITX13 DS    0H                      ENTRY FOR 2ND VALUE OF RANGE     31350020
         BAL   LINK2,SKIPB             SKIP BLANKS                      31360020
*                                                                       31370020
*/* D (YES,POSITX9,NO,) LIST COMPLETE */                                31372001
         B     POSITX9                 +0 RETURN - LIST COMPLETE        31380020
*                                                                       31390020
*/* P INCREMENT SCAN PTR */                                             31392001
         LA    XINPUT,ONE(XINPUT)      +4 RETURN - BUMP SCAN PTR        31400020
*/* D (YES,,NO,POSITX6) END OF LIST */                                  31402001
         CLI   ZERO(XINPUT),RIGHTPRN   IS THIS END OF LIST              31410020
         BNE   POSITX6                 IF NO BRANCH                     31420020
         SPACE                                                          31430020
*/* P INDICATE LIST END DELIMITER FOUND */                              31432001
         OI    PFLAGS4,PFLSTEND        INDICATE LIST END DELIMITER  HAS 31440020
*                                         BEEN FOUND                    31450020
         SPACE                                                          31460020
*/*POSITX9: P MOVE DATA TO PDE */                                       31462001
POSITX9  DS    0H                      * * * *                          31470020
         XR    R1,R1                   CLEAR WORK REG TO ZERO           31480020
         IC    R1,PPCOUNT              LOAD PDE LENGTH                  31490020
         EX    R1,PDEXMV               MOVE DATA TO PDE                 31500020
*/* D (YES,,NO,POSITX9B) FIRST VALUE OF RANGE BEING PROCESSED */        31502001
         TM    PFLAGS2,RNGEVAL1        IS THE FIRST VALUE OF A RANGE    31510020
*                                         BEING PROCESSED               31520020
         BZ    POSITX9B                NO - CONTINUE                    31530020
         SPACE                                                          31540020
         L     LINK2,PLINKSV1          RESTORE RETURN ADDR FOR RANGE 2  31550020
         XC    TEMPPDE(CBLTPDE),TEMPPDE ZERO TEMPORARY STORAGE AREA FOR 31560001
*                                         PDE                    F41448 31570001
*/* R RETURN TO CALLER */                                               31572001
         BR    LINK2                   YES, RETURN TO CALLER            31580020
         SPACE                                                          31590020
*/*POSITX9B: D (YES,,NO,POSITX9C) LEFT PAREN USED AS BEGINNING OF SUBF  31592001
*/* AND LIST */                                                         31594001
POSITX9B DS    0H                      * * * *                          31600020
         TM    PFLAGS5,RPRNFND         WAS END OF LIST FOUND     Y02666 31603002
         BO    POSITX9C                NO, BRANCH                Y02666 31606002
         TM    PFLAGS3,PFMORE          WAS LEFT PAREN USED AS BEGINNING 31610020
*                                         OF SUBFIELD AND LIST BECAUSE  31620020
*                                         ONLY ONE PARAMETER WAS        31630020
*                                         POSSIBLE WITHIN THE SUBFIELD  31640020
         BZ    POSITX9C                IF NO BRANCH              Y02666 31650002
*/* D (YES,,NO,POSITX9C) THIS IS END OF FIELD */                        31650401
POSITXAA DS    0H                                                Y02666 31651202
         TM    PFLAGS,PFENDF           IS THIS THE END OF FIELD         31652020
         BNZ   POSITX9C                NO, BRANCH                       31654020
         SPACE                                                          31660020
*/* P DECREMENT SCAN PTR */                                             31662001
         BCTR  XINPUT,ZERO             DECREMENT SCAN POINTER           31670020
         SPACE                                                          31680020
*/*POSITX9C: D (,VCERTN) BRANCH TO VALIDITY CHECK EXIT RTN */           31682001
POSITX9C DS    0H                      * * * *                          31690020
         TM    PFLAGS5,INVFLG                                    Y01156 31692001
         BO    POSITX4                                           Y01156 31694001
         BAL   LINK1,VCERTN            BRANCH TO VALIDITY CHECK EXIT    31700020
*                                         ROUTINE                       31710020
         SPACE                                                          31720020
*/*POSITX4: P INDICATE POSSIBLE LIST NOT BEING PROCESSED ANY MORE */    31722001
POSITX4  DS    0H                      * * * *                          31730020
         NI    PFLAGS,HFF-PFLIST       INDICATE POSSIBLE LIST NOT BEING 31740020
*                                         PROCESSED ANY MORE            31750020
*/* D (,POSITX3) BUMP TO NEXT PCE */                                    31752001
         B     POSITX3                 BUMP TO NEXT PCE                 31760020
         SPACE                                                          31770020
*/*POSITX9A: D (YES,,NO,POSITX9) LIST SPECIFIED IN PCE */               31772001
POSITX9A DS    0H                      SET 'FF' IN PDE IF LIST WAS      31780020
*                                         SPECIFIED IN PCE BUT NOT      31790020
*                                         ENTERED                       31800020
         TM    PCEFLGB2(XPCE),PCEFLIST IS LIST SPECIFIED IN PCE         31810020
         BZ    POSITX9                 NO - CONTINUE                    31820020
         SPACE                                                          31830020
         XR    R1,R1                   ZERO WORK REG                    31840020
         IC    R1,PPDESIZE             GET LENGTH OF BASIC PDE -1       31850020
         LA    R1,ONE(R1,R3)           GET ADDR OF LIST PTR             31860020
*/* P INDICATE LIST NOT ENTERED */                                      31862001
         MVI   ZERO(R1),HFF            INDICATE LIST WAS NOT ENTERED    31870020
*/* D (,POSITX9) CONTINUE */                                            31872001
         B     POSITX9                 CONTINUE                         31880020
         SPACE                                                          31890020
*/*POSITX6: P MOVE DATA TO PDE */                                       31892001
POSITX6  DS    0H                      * * * *                          31900020
         XR    R1,R1                   CLEAR WORK REG TO ZERO           31910020
         IC    R1,PPCOUNT              LOAD PDE LENGTH                  31920020
         EX    R1,PDEXMV               MOVE DATA TO PDE                 31930020
*/* D (YES,,NO,POSITX8) RIGHT PAREN FOUND */                            31930401
         TM    PFLAGS4,PFLSTEND        RIGHT PAREN FOUND         M3333  31932020
         BZ    POSITX8                 NO, CONTINUE              M3333  31934020
*/* D (YES,POSITX7,NO,) THIS CHARACTER RIGHT PAREN */                   31934401
         CLI   ONE(XINPUT),RIGHTPRN    CHARACTER A RIGHT PAREN   M3333  31936020
         BE    POSITX7                 YES CONTINUE              M3333  31938020
         TM    PFLAGS5,RPRNFND         WAS A RIGHT PAREN FOUND   Y02666 31940002
         BO    POSITX7                 YES, CONTINUE             Y02666 31941002
         SPACE                                                          31942002
*/*POSITX8: P DECREMENT SCAN PTR BEFORE EXIT */                         31943002
POSITX8  DS    0H                      * * * *                          31944002
         BCTR  XINPUT,ZERO             DECREMENT SCAN PTR BEFORE EXIT   31945002
*                                         IN CASE A NON-ZERO RETURN     31950020
*                                         CODE IS RETURNED              31960020
*/*POSITX7: S VCERTN: BRANCH TO VALIDITY CHECK EXIT RTN */              31960401
POSITX7  DS    0H                      * * * *                          31962020
         TM    PFLAGS5,INVFLG                                    Y01156 31964001
         BO    NEXTPOS                                           Y01156 31966001
         BAL   LINK1,VCERTN            BRANCH TO VALIDITY CHECK EXIT    31970020
*                                        ROUTINE                        31980020
         SPACE                                                          31990020
*/* D (YES,POSITX71,NO,) LIST END DELIMITER BEEN FOUND */               31992001
NEXTPOS  DS    0H                                                Y01156 31994001
         TM    PFLAGS4,PFLSTEND        HAS LIST END DELIMITER BEEN      32000020
*                                         FOUND                         32010020
         BO    POSITX71                IF END OF LIST, CONTINUE  F41448 32020001
*                                      NORMAL PARSE              F41448 32022001
         TM    PFLAGS5,RPRNFND         WAS A RIGHT PAREN FOUND?  Y02666 32022102
         BO    POSITX71                YES,CONTINUE NORMAL PARSE Y02666 32022202
*                                                                       32026002
*/*NOTEND1: D (NO,NEXTPCE,YES,) PROCESSING COBOL PCE'S? */              32027002
NOTEND1  TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 32028002
*                                      IF COBOL MODE AND NOT END F41448 32029202
*                                      OF LIST, RETURN MUST BE   F41448 32032002
*                                      TO COBOL MACRO PROCESSORS F41448 32033002
         BZ    NEXTPCE                 IF NOT COBOL MODE, GO TO  F41448 32034002
*                                      PROCESS NEXT PCE          F41448 32035002
*/* P LOAD RETURN ADDRESS INTO IKJPARS2 */                              32036002
*/* R () EXIT TO IKJPARS2 */                                            32037002
         L     LINK2,CBLNKSV2          IF IN COBOL MODE, RETURN  F41448 32040002
         BR    LINK2                   TO MACRO PROCESSOR AT     F41448 32041002
*                                      ADDRESS IN CBLNKSV2       F41448 32042002
         SPACE                                                          32043002
*/*POSITX71: P TURN OFF POSSIBLE LIST FLAG */                           32044002
POSITX71 NI    PFLAGS,HFF-PFLIST       YES, TURN OF POSSIBLE LIST FLAG  32045002
         SPACE                                                          32050020
*                                                                       32060020
* END OF POSITIONAL PARAMETER PROCESSING --- POINT TO NEXT PCE AND      32070020
* RETURN TO MAIN CONTROL ROUTINE.                                       32080020
*                                                                       32090020
*/*POSITX3: P CLEAR POSSIBLE ONE-PDE AND NO-SKIP-AFTER-PROMPT FLAGS */  32092001
POSITX3  DS    0H                      * * * *                          32100020
         NI    PFLAGS3,HFF-PFONE       CLEAR POSSIBLE ONE PDE FLAG      32110020
         NI    RFLAGS,HFF-RFNOSKIP     CLEAR POSSIBLE NO SKIP AFTER     32120020
*                                         PROMPT FLAG                   32130020
*/* D (YES,,NO,POSITX31) PROCESSING COBOL PCE'S? */                     32130401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 32132001
         BZ    POSITX31                NO-CONTINUE NORMAL PARSE  F41448 32134001
*/* P LOAD RETURN ADDRESS INTO IKJPARS2 */                              32134401
*/* R () EXIT TO IKJPARS2 */                                            32134801
         L     LINK2,CBLNKSV2          IF IN COBOL MODE, RETURN  F41448 32136001
         BR    LINK2                   TO MACRO PROCESSORS TO    F41448 32138001
*                                      HANDLE THE END OF LIST    F41448 32138401
*                                      AND NEXTPCE PROCESSING    F41448 32138801
POSITX31 MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH ON PROPER      32140001
*                                         BOUNDARY                      32150020
         AH    XPCE,PDWORD             COMPUTE THE NEXT PCE ADDRESS     32160020
*/*POSITX31: D (,NEXTPCE) GET NEXT PCE ADDRESS */                       32162001
         B     NEXTPCE                 CONTINUE PARSE OF INPUT          32170020
         SPACE                                                          32180020
*/*POSITX12: P SAVE ACTUAL SIZE OF PDE */                               32182001
POSITX12 DS    0H                      * * * *                          32190020
         LA    R1,ONE(R1,R1)           GET ACTUAL SIZE OF PDE -1        32200020
         STC   R1,PPDESIZE             SAVE                             32210020
*/* P PREPARE TO MOVE DATA INTO 2ND HALF OF PDE */                      32212001
         L     R3,RNG2ADDR             SET UP TO MOVE DATA INTO         32220020
*                                         2ND HALF OF PDE               32230020
*/* P TURN OFF 2ND VALUE FLAG */                                        32232001
         NI    PFLAGS2,HFF-RNGEVAL2    TURN OFF VAL 2 FLAG              32240020
*/* D (YES,POSITX13,NO,POSITX9) LIST BEING PROCESSED */                 32242001
         TM    PFLAGS,PFLIST           IS A LIST BEING PROCESSED        32250020
         BZ    POSITX9                 N0, MOVE DATA AND EXIT           32260020
         SPACE                                                          32270020
         B     POSITX13                YES, CHECK FOR MORE DATA IN THE  32280020
*                                         LIST                          32290020
         EJECT                                                          32300020
*                                                                       32310020
* IDENT PCE ROUTINE                                                     32320020
*                                                                       32330020
*/*IDENT: P GET SIZE OF PDE */                                          32332001
IDENT    DS    0H                      PROCESS IDENT-TYPE POSITIONAL    32340020
*                                         PARAMETERS                    32350020
         LA    R1,SEVEN                GET SIZE OF PDE-1                32360020
         STC   R1,PPCOUNT              SAVE                             32370020
*/* D (YES,IDENTERS,NO,) IN ERASE MODE */                               32372001
         TM    RFLAGS,RFERASE          IS THE SCAN IN ERASE MODE        32380020
         BO    IDENTERS                YES, BRANCH TO ERASE THE PDE     32390020
*                                                                       32400020
*/* S SCANF: POP STACK IF POSSIBLE */                                   32402001
         BAL   LINK1,SCANF             IF POSSIBLE POP THE INPUT STACK  32410020
*                                         TO GET NEXT LEVEL OF DATA     32420020
*                                         BEFORE THE SCAN BEGINS        32430020
*                                                                       32440020
         NOP   ZERO                    +0 RETURN - NO INPUT DATA LEFT   32450020
*                                                                       32460020
*                                      +4 RETURN - DATA REMAINS IN      32470020
*                                         CURRENT LEVEL OR POP OCCURRED 32480020
*                                                                       32490020
         XC    DATAPTR1(LTPDE),DATAPTR1 ZERO TEMPORARY                  32500020
*                                         STORAGE AREA FOR PDE          32510020
*                                                                       32520020
*/* S SKIPB: SKIP SEPARATORS */                                         32522001
         BAL   LINK2,SKIPB             SKIP BLANKS TO BEGINNING OF PARM 32530020
*                                                                       32540020
*/* D (YES,IDMSNG,NO,) END OF INPUT REACHED (PARM IS MISSING) */        32542001
         B     IDMSNG                  +0 RETURN - END OF INPUT REACHED 32550020
*                                         PARM IS MISSING               32560020
*                                                                       32570020
*                                      +4 RETURN - BEGINNING OF PARM    32580020
*                                         ESTABLISHED                   32590020
*                                                                       32600020
*/* S LISTT: TEST AND SET UP FOR LIST */                                32602001
         BAL   LINK1,LISTT             TEST AND SET UP FOR LIST         32610020
*                                         XINPUT POINTS TO NEXT ITEM IN 32620020
*                                         THE LIST IF LIST IS PRESENT   32630020
*/* D (YES,,NO,ILLIDENT) DATA IN LIST */                                32632001
         B     ILLIDENT                RETURN +0, NO DATA IN LIST, ERR  32640020
*                                                                       32650020
*                                      RETURN +4, DATA TO SCAN          32660020
         LA    R0,LRPAREN+ONE          TEST FOR DUMMY SUBFIELD   Y02666 32662002
         CR    R0,XINPUT               IS IT DUMMY?              Y02666 32664002
         BE    IDMSNG                  YES, PARAMETER IS MISSING Y02666 32666002
         SPACE                                                          32670020
*                                                                       32680020
* ENTRY POINT FOR RESCANNING NEW DATA                                   32690020
*                                                                       32700020
*/*IDENTRSC: P SAVE PTR FOR INVALID MSG */                              32702001
IDENTRSC DS    0H                      * * * *                          32710020
         MVC   INVPSAVE,PPOINTR        SAVE PTR FOR INVALID MSG         32720020
*/*IDRNG2SC: D (YES,ID00,NO,) MAX LENGTH SPECIFIED */                   32722001
IDRNG2SC DS    0H                      ENTRY TO SCAN 2ND RANGE VALUE    32730020
         TM    PCEOPT(XPCE),PCEFMAXL   IS A MAX LENGTH SPECIFIED        32740020
         BNZ   ID00                    YES, CONTINUE                    32750020
*                                                                       32760020
*/* P GET ADDR OF GENSCAN CONTROL INFO */                               32762001
         LA    R3,PCEOPT(XPCE)         NO, GET ADDR OF GENSCAN CONTROL  32770020
*/* D (,ID005) BRANCH */                                                32772001
         B     ID005                      INFO                          32780020
         SPACE                                                          32790020
*/*ID00: P MOVE INFO FROM IDENT PCE TO WORK AREA */                     32792001
ID00     MVC   PDWORD+FOUR(THREE),PCEOPT(XPCE) NO, MOVE OPTIONS, FIRST, 32800020
*                                         AND OTHER BYTES FROM IDENT    32810020
*                                         PCE TO WORK AREA              32820020
         MVC   PDWORD(TWO),PCEPARMT(XPCE) ALIGN PARAMETER TYPE LENGTH   32830020
*                                         ON PROPER BOUNDARY            32840020
         LH    R2,PDWORD               LOAD THE LENGTH                  32850020
         LA    R2,PCEPARMT(R2,XPCE)    COMPUTE ADDRESS OF MAXLNTH       32860020
*/* P MAKE MAXLENGTH CONTIGUOUS TO TYPE FIELD IN WORK AREA */           32862001
         MVC   PDWORD+SEVEN(ONE),ZERO(R2) MAKE MAXLENGTH                32870020
*                                         CONTIGUOUS TO OTHER TYPE      32880020
*                                         FIELD IN WORK AREA            32890020
*/* P GET ADDR OF GENSCAN CONTROL INFO */                               32892001
         LA    R3,PDWORD+FOUR          GET ADDR OF GENSCAN CONTROL INFO 32900020
         SPACE                                                          32910020
*/*ID005: P USE GENSCAN FOR SYNTAX CHECKING */                          32912001
ID005    DS    0H                      * * * *                          32920020
         ST    R3,PDWORD               SAVE ADR OF GENSCAN CONTROL INFO 32930020
*                                         IN PDWORD                     32940020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   32950020
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  32960020
*                                         THIS LINKAGE CLOBBERS R0,     32970020
*                                         R1, R2, R14 AND LINK1 AND     32980020
*                                         ALSO MODIFIES XINPUT, XINPUTB 32990020
*                                         PPOINTR                       33000020
*                                                                       33010020
*/* D (YES,IDMSNG,NO,) PARAMETER MISSING */                             33012001
         BCT   XINPUT,IDMSNG           +0 RETURN - MISSING, BACK UP     33020020
*                                                                       33030020
*/* D (YES,ILLIDENT,NO,) PARAMETER TOO LONG */                          33032001
         BCT   XINPUT,ILLIDENT         +4 RETURN - TOO LONG, BACK UP    33040020
*                                         INPUT, PROCESS INVALID        33050020
*                                                                       33060020
*/* D (YES,IDEND,NO,) END OF INPUT IS DELIMITER */                      33062001
         B     IDEND                   +8 RETURN - END IS DELIMITER     33070020
*                                                                       33080020
*                                      +12 RETURN - OK, CHECK DELIMITER 33090020
*/* S RANGE: CHECK FOR RANGE */                                         33092001
         BAL   LINK1,RANGE             CHECK FOR RANGE                  33100020
*/* D (YES,,NO,IDGOOD1) FIRST VALUE OF RANGE */                         33102001
         B     IDGOOD1                 +0 RETURN - RANGE NOT ALLOWED OR 33110020
*                                         RANGE NOT PRESENT OR          33120020
*                                         2ND VALUE OF RANGE            33130020
*                                      +4 RETURN - 1ST VALUE OF RANGE   33140020
*/* P LOAD ADDR OF 2ND VALUE SCAN */                                    33142001
         LA    LINK2,IDRNG2SC          LOAD ADDR OF 2ND VALUE SCAN      33150020
*/* D (,IDEND1) PROCESS END */                                          33152001
         B     IDEND1                  PROCESS END                      33160020
         SPACE                                                          33170020
*/*IDGOOD1: S TYPETEST: CHECK FOR DELIMITER CHARACTER */                33172001
IDGOOD1  DS    0H                      * * * *                          33173000
*                                                                       33174000
         NI    PFLAGS6,HFF-CHARFLG     TURN OFF FLAG             Y02666 33175000
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 33176000
         C     R15,ENDINPUT            END OF INPUT?             YM3610 33177000
         BC    CC10,COMBYPS3           BYPASS COMMENT CHECK       M4540 33178000
         CLC   ZERO(TWO,XINPUT),SLASHAST A COMMENT DELIMITER?    Y02666 33179000
         BE    IDEND1                  YES, A VALID DELIMITER    Y02666 33184002
COMBYPS3 DS    0H                      CHECK FOR DELIMITER       YM3610 33187002
         LA    R1,DLIMREQD             SET CHAR TYPE FOR DELIMITER TEST 33190020
         BAL   LINK1,TYPETEST          TEST                             33200020
*                                                                       33210020
*/* D (YES,IDEND1,NO,ILLIDENT) GOOD DELIMITER */                        33212001
         BCT   XINPUT,ILLIDENT         +0 RETURN - BAD                  33220020
*                                                                       33230020
         B     IDEND1                  +4 RETURN - GOOD DELIMITER       33240020
         SPACE                                                          33250020
*/*IDEND: D (YES,,NO,IDEND1) FIRST VALUE OF RANGE ENTERED */            33252001
IDEND    DS    0H                      * * * *                          33260020
         TM    PFLAGS2,RNGEVAL1        WAS 1ST VALUE OF RANGE ENTERED   33270020
         BZ    IDEND1                  NO, CONTINUE                     33280020
*/* P TURN OFF FIRST VALUE SWITCH */                                    33282001
         NI    PFLAGS2,HFF-RNGEVAL1    TURN OFF 1ST VALUE SWITCH        33290020
*/* P TURN ON 2ND VALUE SWITCH */                                       33292001
         OI    PFLAGS2,RNGEVAL2        TURN ON 2ND VALUE SWITCH         33300020
*/*IDEND1: P SAVE LENGTH */                                             33302001
IDEND1   DS    0H                      * * * *                          33310020
         TM    PFLAGS6,NUMFLG+PDEHEX   INTEG OR HEX PROCESSED?   Y02666 33312002
         BM    IDEXIT                  YES,BYPASS LENGTH COMPUTE Y02666 33314002
         S     XINPUTB,PPOINTR         COMPUTE LENGTH                   33320020
         STH   XINPUTB,PLENGTH         SAVE                             33330020
*/* D (,POSITX1) EXIT */                                                33332001
IDEXIT   DS    0H                                                Y02666 33334002
         BCT   XINPUT,POSITX1          BACK UP, EXIT TYPE 1             33340020
         SPACE                                                          33350020
*/*IDMSNG: D (YES,ILLIDENT,NO,) FIRST RANGE VALUE FOUND */              33352001
IDMSNG   DS    0H                                                       33360020
         TM    PFLAGS2,RNGEVAL1        WAS THE 1ST RANGE VALUE FOUND    33370020
         BO    ILLIDENT                YES, THEN IT IS INVALID          33380020
*                                                                       33390020
*/* S PROMPTQ: TRY TO PROMPT OR DEFAULT */                              33392001
         BAL   LINK1,PROMPTQ           TRY TO PROMPT OR DEFAULT         33400020
*                                                                       33410020
*/* D (YES,IDENTRSC,NO,POSITX2) NEW DATA TO SCAN */                     33412001
         B     IDENTRSC                +0 RETURN - NEW DATA TO SCAN     33420020
*                                                                       33430020
         B     POSITX2                 +4 RETURN - NO DATA, TAKE NULL   33440020
*                                         PDE EXIT                      33450020
         SPACE                                                          33460020
*                                                                       33470020
         EJECT                                                          33510020
*********************************************************************** 33520020
*                                                                     * 33530020
*   THE POINTER TO THE FIRST KEYWORD PCE IS SAVED AND THE INPUT IS    * 33540020
* SCANNED FOR THE NEXT IDENTIFIER. THE PCL IS SEARCHED FOR A MATCHING * 33550020
* KEYWORD AS FOLLOWS -                                                * 33560020
*              1. A KEYWORD PCE RESETS THE NAME COUNTER TO ONE.       * 33570020
*              2. WHEN AN NAME PCE IS FOUND THE NAME IS COMPARED TO   * 33580020
*                 THE KEYWORD IN THE INPUT BUFFER. IF ITS NOT EQUAL   * 33590020
*                 THE NEXT PCE IS USED.                               * 33600020
*                                                                     * 33610020
*   EVENTUALLY, A MATCH IS FOUND AND THE NAME COUNTER IS STORED INTO  * 33620020
* THE PDE.                                                            * 33630020
*   IF A SUBFIELD IS NOT REQUIRED THE NEXT IDENTIFIER IS SCANNED. IF  * 33640020
* IT IS A TEST IS MADE TO SEE IF IT WAS ENTERED. IF IT WAS NOT, A     * 33650020
* DUMMY () PAIR IS PLACED INTO THE INPUT STACK FOR LATER SCANNING. IF * 33660020
* THE FIRST SUBFIELD PARAMETER IS A POSITIONAL LIST, THE SCAN POINTER * 33670020
* IS RESET SO THAT THE LEFT PARENTHESIS IS RESCANNED LATER FOR THE    * 33680020
* LIST.                                                               * 33690020
*                                                                     * 33700020
*********************************************************************** 33710020
         SPACE                                                          33720020
*/*KEYWD: P SET KEYWORD PARSED ONCE FLAG */                             33742001
KEYWD    DS    0H                      PROCESS KEYWORD PARAMETERS       33750020
         ST    XPCE,RKEYSV             SAVE START OF KEYWORD PCL SECT.  33760020
         OI    RFLAGS,RFKYPRSE         SET PARSED ONCE FLAG             33770020
         SPACE                                                          33780020
*                                                                       33790020
* SCAN FOR NEXT IDENTIFIER.                                             33800020
*                                                                       33810020
*/*KEYWDSCN: S SCANF: POP STACK IF POSSIBLE */                          33812001
KEYWDSCN DS    0H                      * * * *                          33820020
         BAL   LINK1,SCANF             IF POSSIBLE POP THE INPUT STACK  33830020
*                                         TO GET NEXT LEVEL OF DATA     33840020
*                                         BEFORE THE SCAN BEGINS        33850020
*                                                                       33860020
*/* D (YES,,NO,KEYWDXI2) DATA REMAINS */                                33862001
         B     KEYWDXI2                +0 RETURN - NO INPUT DATA LEFT   33870020
*                                                                       33880020
*                                      +4 RETURN - DATA REMAINS IN      33890020
*                                         CURRENT LEVEL OR POP OCURRED  33900020
         SPACE                                                          33910020
*/* S SKIPB: SKIP SEPARATORS */                                         33912001
         BAL   LINK2,SKIPB             SKIP BLANKS                      33920020
*                                                                       33930020
*/* D (YES,,NO,KEYWDXI2) DATA LEFT TO SCAN */                           33932001
         B     KEYWDXI2                +0 RETURN - NO DATA LEFT TO SCAN 33940020
*                                                                       33950020
*                                      +4 RETURN - SCAN NEXT CHARACTER  33960020
         LA    R1,KEYSYNTX             GET REQUIRED SYNTAX FOR A KEYWD  33970020
         ST    R1,PDWORD               SAVE FOR GENSCAN                 33980020
         L     R15,AGENSCAN            GET ADDRESS OF GENSCAN ROUTINE   33990020
*/* P USE GENSCAN FOR SYNTAX CHECKING */                                33992001
         BALR  LINK2,R15               USE GENSCAN FOR SYNTAX CHECKING  34000020
*                                                                       34010020
*                                      SYNTAX CHECK FOR A KEYWORD       34020020
*                                                                       34030020
*/* D (YES,KEYWDMIS,NO,) INVALID 1ST CHARACTER */                       34032001
         B     KEYWDMIS                +0 RETURN - INVALID 1ST    M3337 34040020
*                                         CHAR, TEST FOR END OF   M3337 34050020
*                                         SUBFIELD OR SEMICOLON   M3337 34052020
*                                                                       34060020
*/* D (YES,ILLKEYWD,NO,) PARAMETER TOO LONG */                          34062001
         BCT   XINPUT,ILLKEYWD         +4 RETURN - TOO LONG, BACKUP AND 34070020
*                                         PROCESS INVALID               34080020
*                                                                       34090020
*/* D (YES,KEYWDEND,NO,) END OF BUFFER IS DELIMITER */                  34092001
         B     KEYWDEND                +8 RETURN - END IS DELIMITER     34100020
*                                                                       34110020
*                                      +12 RETURN - CHECK DELIMITER     34111000
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 34112000
         C     R15,ENDINPUT            END OF INPUT?             YM3610 34113000
         BC    CC10,COMBYPS4           BYPASS COMMENT CHECK       M4540 34114000
         CLC   ZERO(TWO,XINPUT),SLASHAST TEST FOR COMMENT DELIM. Y02666 34115000
         BE    KEYWDEND                END OF KEYWORD            Y02666 34121202
*/* D (YES,KEYWDEND,NO,) IS DELIMITER LEFT PAREN FOR SUBFIELD */        34122001
COMBYPS4 DS    0H                      CHECK FOR LEFT PAREN      YM3610 34126002
         CLI   ZERO(XINPUT),LEFTPRN    IS THE DELIMITER A LEFT PAREN    34130020
*                                         FOR A SUBFIELD                34140020
         BE    KEYWDEND                YES - GOOD, GO COMPUTE LENGTH    34150020
         SPACE                                                          34160020
         LA    R1,DLIMREQD             TEST FOR LEGAL END DELIMITER     34170020
*/* S TYPETEST: TEST FOR VALID END DELIMITER */                         34172001
         BAL   LINK1,TYPETEST          * * * *                          34180020
         SPACE                                                          34190020
*/* D (YES,ILLKEYWD,NO,) INVALID DELIMITER */                           34192001
         BCT   XINPUT,ILLKEYWD         +0 RETURN - ILLEGAL              34200020
         SPACE                                                          34210020
*                                      +4 RETURN - GOOD DELIMITER       34220020
         SPACE                                                          34230020
*/*KEYWDEND: P COMPUTE KEYWORD LENGTH */                                34232001
KEYWDEND DS    0H                                                       34240020
         S     XINPUTB,PPOINTR         COMPUTE KEYWORD LENGTH           34250020
         STH   XINPUTB,PLENGTH         SAVE LENGTH OF KEYWORD           34260020
         BCTR  XINPUT,ZERO             BACK UP INPUT POINTER BY ONE     34270020
         SPACE                                                          34280020
*                                                                       34290020
* LOCATE THE IKJNAME PCE THAT CORRESPONDS TO THE ENTERED KEYWORD. IF    34300020
* A KEYWORD PCE IS FOUND THE NAME COUNTER IS RESET TO ONE. A NAME PCE   34310020
* CAUSES THE NAME IN THE PCE TO BE COMPARED TO THE ENTERED KEYWORD, IF  34320020
* UNEQUAL, GO TO THE NEXT PCE.                                          34330020
*                                                                       34340020
         L     R15,ATRANSQ             GET ADDRESS OF TRANSLATE         34350020
*                                         ROUTINE                       34360020
*/* P TRANSLATE KEYWORD TO UPPER CASE IF NECESSARY */                   34362001
         BALR  LINK1,R15               TRANSLATE THE KEYWORD TO UPPER   34370020
*                                         CASE IF NECESSARY             34380020
         SPACE                                                          34390020
*/* P GET FIRST KEYWORD ENTRY */                                        34392001
         L     XPCE,RKEYSV             PICK UP FIRST KEYWORD ENTRY      34400020
         XR    R14,R14                 CLEAR MATCH COUNTER         P    34402020
         SPACE                                                          34410020
*/*KEYWDTL2: P FIND KEYWROD PROCESSOR ROUTINE */                        34412001
KEYWDTL2 DS    0H                      * * * *                          34420020
         XR    R2,R2                   CLEAR WORK REGISTER TO ZERO      34430020
         IC    R2,PCEFLGB1(XPCE)       LOAD TYPE INDICATOR              34440020
         N     R2,TYPEMASK             ISOLATE TYPE INDICATOR BITS      34450020
         SRL   R2,THREE                POSITION BITS FOR INDEXED BRANCH 34460020
         B     *+FOUR(R2)              FIND KEYWORD PROCESSOR ROUTINE   34470020
*                                                                       34480020
*/* D (YES,KEYWDXIT,NO,) END-OF-FIELD */                                34482001
         B     KEYWDXIT                END-OF-FIELD --- EXIT            34490020
*                                                                       34500020
*/* D (YES,KEYWDXIT,NO,) POSITIONAL */                                  34502001
         B     KEYWDXIT                POSITIONAL --- EXIT              34510020
*                                                                       34520020
*/* D (YES,KEYWDTL3,NO,) NEW KEYWORD SPECIFICATION */                   34522001
         B     KEYWDTL3                NEW KEYWORD SPECIFICATION        34530020
*                                                                       34540020
*/* D (YES,KEYWDNAM,NO,) NAME PCE */                                    34542001
         B     KEYWDNAM                NAME PCE --- PROCESS IT          34550020
*                                                                       34560020
*/* D (YES,KEYWDXIT,NO,) IDENT */                                       34562001
         B     KEYWDXIT                IDENT PCE --- EXIT               34570020
         SPACE                                                          34580020
*/*KEYWDNAM: P COMPARE KEYWORD ENTERED TO NAME PCE */                   34582001
KEYWDNAM DS    0H                       * * * *                         34590020
         XC    TEMPPDE(LTPDE),TEMPPDE  CLEAR WORK AREA                  34600020
         SR    R1,R1                   CLEAR TEMP. WORK REGISTER Y02666 34602002
         IC    R1,PCENAML(XPCE)        LOAD LENGTH OF NAME-1 FROM NAME  34610020
*                                         PCE                           34620020
         EX    R1,NAMEMVC              MOVE NAME TO WORK AREA           34630020
         LH    R2,PLENGTH              LOAD KEYWORD LENGTH FOR COMPARE  34640020
         BCTR  R2,ZERO                 REDUCE LENGTH FOR 'EX' INSTR.    34650020
         L     R1,PPOINTR              LOAD ADDRESS OF KEYWORD          34660020
         EX    R2,KEYWDCLC             COMPARE KEYWORD ENTERED TO NAME  34670020
*                                         PCE - KEYWORD LENGTH          34680020
*                                         MAXIMUM IS 31                 34690020
*/* D (YES,KEYWDTL6,NO,) BRANCH IF EQUAL */                             34692001
         BE    KEYWDTL6                IF EQUAL BRANCH                  34700020
         TM    PCEFLGB2(XPCE),PCEFALS  WERE ALIASES SPECIFIED?   Y02666 34702002
         BZ    KEYWDTL5                NO, GET NEXT PCE          Y02666 34704002
         SR    R1,R1                   CLEAR TEMP. WORK REGISTER Y02666 34706002
         SR    R15,R15                 CLEAR TEMP. WORK REGISTER Y02666 34706402
         IC    R1,PCENAML(XPCE)        GET NAME LENGTH FIELD     Y02666 34708002
*  UPDATE PAST NAME FIELD                                        Y02666 34708102
         LA    R1,SIX(R1,XPCE)         NAME LENGTH IS ONE LESS THAN     34708202
*                                      ACTUAL LENGTH             Y02666 34708302
*  R1 NOW POINTS TO SUBFIELD OFFSET OR INSERT DATA OR ALIAS DATA Y02666 34708402
*  IT MUST BE DETERMINED WHICH ONE.                              Y02666 34709302
         TM    PCEFLGB1(XPCE),PCEFSUBF SUBFIELD SPECIFIED?       Y02666 34710202
         BZ    KEYWDA                  BYPASS FIELD UPDATE       Y02666 34710502
         LA    R1,TWO(R1)              UPDATE PAST PCE OFFSET    Y02666 34710802
KEYWDA   DS    0H                                                Y02666 34711102
         TM    PCEFLGB2(XPCE),PCEFINST INSERT SPECIFIED?         Y02666 34711402
         BZ    KEYWDC                  NO, BYPASS FIELD UPDATE   Y02666 34711702
         IC    R15,ZERO(R1)            PICK UP INSERT LENGTH     Y02666 34712002
         LA    R1,TWO(R1,R15)          BYPASS INSERT DATE        Y02666 34713902
         CLI   ZERO(R1),ZERO           COMPARE LENGTH TO ZERO    Y02666 34715902
         BZ    KEYWDTL5                YES, GET NEXT PCE         Y02666 34717902
KEYWDC   DS    0H                                                Y02666 34718602
         IC    R0,ZERO(R1)             GET TOTAL # OF ALIASES    Y02666 34719002
         L     R15,PPOINTR             GET INPUT POINTER         Y02666 34719402
         LA    R1,ONE(R1)              GET FIRST ALIAS POINTER   Y02666 34719802
         SR    R9,R9                   CLEAR TEMP. WORK REGISTER Y02666 34719902
ABCOMP   DS    0H                                                Y02666 34723202
         IC    R9,ZERO(R1)             GET LENGTH OF ALIAS       Y02666 34725202
         EX    R2,NAMECOMP             IS INPUT KEYWORD EQUAL?   Y02666 34725602
         BNE   KEYUPDAT                YES,PROCESS VALID KEYWORD Y02666 34726002
         OI    PFLAGS6,ALIASFLG        INDICATE ALIAS FOUND      Y02666 34726102
         B     KEYWDTL6                PROCESS VALID KEYWORD     Y02666 34726202
KEYUPDAT DS    0H                                                Y02666 34726302
         LA    R1,ONE(R1,R9)           GET NEXT ALIAS POINTER    Y02666 34726402
         BCT   R0,ABCOMP               DECREMENT ALIAS NUMBER AND       34726502
*                                      CONTINUE                  Y02666 34726602
*                                      IF NONE LEFT,GET NEXT PCE Y02666 34726702
         SPACE                                                          34726802
*/*KEYWDTL5: P BUMP PTR TO NEXT PCE */                                  34730102
KEYWDTL5 DS    0H                      * * * *                          34733402
         LA    R3,ONE(R3)              BUMP NAME COUNTER BY ONE         34736702
         MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH FIELD ON       34740020
*                                         PROPER BOUNDARY               34750020
         AH    XPCE,PDWORD             BUMP PTR TO NEXT PCE             34760020
*/* D (,KEYWDTL2) GET NEXT PCE */                                       34762001
         B     KEYWDTL2                GET NEXT PCE                     34770020
         SPACE                                                          34780020
*/*KEYWDTL3: P SET NAME COUNTER TO ONE */                               34782001
KEYWDTL3 DS    0H                      * * * *                          34790020
         LA    R3,ONE                  SET NAME COUNTER TO ONE          34800020
*/* S KEYWDX1: SKIP THIS KEYWORD ENTRY */                               34802001
         BAL   LINK1,KEYWDX1           SKIP THIS KEYWORD ENTRY          34810020
         SPACE                                                          34820020
*/* D (,KEYWDTL2) GET NEXT PCE */                                       34822001
         B     KEYWDTL2                GET NEXT PCE                     34830020
         SPACE                                                          34840020
*                                                                       34850020
* A MATCH WAS FOUND, THE NAME COUNTER IS STORED INTO THE PDE AND A TEST 34860020
* IS MADE TO SEE IF A SUBFIELD MAY BE PRESENT. IF A SUBFIELD MAY BE     34870020
* SPECIFIED THE PROCESS IS REPEATED. IF A SUBFIELD WAS NOT SPECIFIED A  34880020
* DUMMY SET OF PARENTHESIS, (), IS PLACED ONTO THE INPUT STACK FOR      34890020
* LATER SCANNING. IF THE FIRST SUBFIELD PARAMETER IS A POSITIONAL LIST, 34900020
* THE SCAN POINTER IS RESET SO THAT THE LEFT PARENTHESIS IS RESCANNED   34910020
* LATER FOR THE LIST.                                                   34920020
*                                                                       34930020
*/*KEYWDTL6: P COMPARE LENGTH OF NAME TO LENGTH OF KEYWORD ENTERED */   34932001
KEYWDTL6 DS    0H                      * * * *                          34940020
         ST    XPCE,PKEYWDTB           SAVE TABLE POINTER FOR KEYWORD   34950020
         MVC   PKEYWDPM,PKEYWDPS       SAVE CURRENT NAME PCE POINTER    34960020
         MVC   PKEYWDPX,PKEYWDPC       SAVE CURRENT KEYWD PCE POINTER   34970020
         STH   R3,PKEYWDVL             SAVE NAME NUMBER                 34980020
         TM    PFLAGS6,ALIASFLG        WAS ALIAS ENTERED         Y02666 34982002
         BO    KEYALS                  YES, COMPARE ITS LENTH    Y02666 34984002
         XR    R1,R1                   CLEAR FOR INSERT                 34990020
         IC    R1,PCENAML(XPCE)        LOAD LENGTH OF NAME-1 FROM NAME  35000020
*                                         PCE                           35010020
         CR    R1,R2                   COMPARE LENGTH-1 OF KEYWORD      35020020
*                                         ENTERED TO LENGTH-1 OF NAME   35030020
*                                         IN PCE                        35040020
*/* D (YES,KEYWDFN1,NO,) LENGTHS EQUAL */                               35042001
         BE    KEYWDFN1                IF EQUAL DO NOT CHECK FOR        35050020
*                                         AMBIGUITY                     35060020
         SPACE                                                          35070020
*/* D (,KEYWDTL5) CHECK FOR FURTHER MATCHES */                          35072001
KEYMUPD  DS    0H                                                Y02666 35074002
         LA    R14,ONE(R14)            INDICATE MATCH FOUND       M2574 35080020
         B     KEYWDTL5                CHECK FOR FURTHER MATCHES        35120020
KEYALS   DS    0H                                                Y02666 35122002
         NI    PFLAGS6,HFF-ALIASFLG    TURN OFF ALIAS FLAG       Y02666 35122402
         BCTR  R9,ZERO                 DECREMENT LENGTH BY ONE   Y02666 35124002
         CR    R9,R2                   ARE TEH LENGTHS EQUAL     Y02666 35126002
         BE    KEYWDFN1                YES, COMPLETE PROCESS     Y02666 35128002
         B     KEYMUPD                 NO, UPDATE MATCH CTR.     Y02666 35128402
         SPACE                                                          35130020
*/*KEYWDFNO: P STORE MATCH NUMBER IN PDE */                             35132001
KEYWDFN0 DS    0H                      STORE MATCH NUMBER IN PDE        35140020
         NI    RFLAGS,HFF-RFERASE      CLEAR ERASE INDICATOR            35150020
         SPACE                                                          35160020
*/*KEYWDFN1: P RESTORE PDE AND PCE POINTERS */                          35162001
KEYWDFN1 DS    0H                      * * * *                          35170020
         L     XPCE,PKEYWDTB           RESTORE PCE POINTER TO PLACE     35200020
*                                         WHEN FOUND                    35210020
         L     R3,PKEYWDPM             RESTORE PDE POINTER ALSO         35220020
*                                         COMPUTED EARLIER              35230020
*/* D (YES,KEYWDRPT,NO,) PDE ALREADY FILLED IN */                       35232001
         NC    ZERO(TWO,R3),ZERO(R3)   WAS PDE ALREADY FILLED IN        35240020
         BNZ   KEYWDRPT                YES --- BRANCH --- ERROR         35250020
         SPACE                                                          35260020
         MVC   ZERO(TWO,R3),PKEYWDVL   STORE MATCH VALUE IN PDE         35270020
*/* D (YES,KEYWDSUB,NO,) IS SUBFIELD POSSIBLE */                        35272001
         TM    PCEFLGB1(XPCE),PCEFSUBF IS A SUBFIELD POSSIBLE           35280020
         BO    KEYWDSUB                YES --- PROCESS SUBFIELD         35290020
         SPACE                                                          35300020
*/*KEYWDINS: D (YES,,NO,KEYWDSCN) IS INSERT OPTION SPECIFIED */         35302001
KEYWDINS DS    0H                      CHECK FOR INSERT OPTION          35310020
         TM    PCEFLGB2(XPCE),PCEFINST IS INSERT OPTION SPECIFIED       35320020
         BZ    KEYWDSCN                NO --- GET NEXT KEYWORD          35330020
         SPACE                                                          35360020
*/* S PUSHI: PUSH STACK FOR DATA */                                     35362001
         BAL   LINK1,PUSHI             PUSH STACK FOR DATA              35370020
*                                         DATA                          35380020
         SPACE                                                          35390020
         XR    R2,R2                   CLEAR WORK REG                   35400020
*/* P GET LENGTH OF NAME IN PCE */                                      35402001
         IC    R2,PCENAML(XPCE)        GET LENGTH OF NAME IN PCE        35410020
         LA    R2,PCENAML+TWO(R2,XPCE)         BUMP PTR PAST NAME       35420020
*/* D (YES,,NO,KEYWDIN1) IS SUBFIELD SPECIFIED */                       35422001
         TM    PCEFLGB1(XPCE),PCEFSUBF IS A SUBFIELD SPECIFIED          35430020
         BZ    KEYWDIN1                NO, ALREADY POSITIONED AT INSERT 35440020
*                                         DATA                          35450020
         SPACE                                                          35460020
*/* P BUMP PTR PAST OFFSET TO SUBFIELD */                               35462001
         LA    R2,TWO(R2)              BUMP PTR PAST OFFSET TO SUBFLD   35470020
         SPACE                                                          35480020
*/*KEYWDIN1: P POINT TO START OF INSERT DATA */                         35482001
KEYWDIN1 DS    0H                      * * * *                          35490020
         LA    XINPUT,ONE(R2)          POINT TO START OF INSERT DATA    35500020
         ST    XINPUT,PPOINTR          SAVE FOR LATER                   35510020
         XR    R1,R1                   CLEAR WORK REG TO ZERO           35520020
*/* P LOAD LENGTH OF INSERT DATA */                                     35522001
         IC    R1,ZERO(R2)             LOAD LENGTH-1 OF INSERT DATA     35530020
         LA    R1,TWO(R1,R2)           GET PTR TO END OF INSERT DATA    35540020
*/* P POINT TO END OF INSERT DATA */                                    35542001
         ST    R1,ENDINPUT             SAVE END OF INSERT DATA          35550020
*/* D (,KEYWDSCN) GET NEXT KEYWORD */                                   35552001
         BCT   XINPUT,KEYWDSCN         REDUCE PTR AND GET NEXT KEYWORD  35560020
         SPACE                                                          35570020
*/*KEYWDSUB: P SET UP FOR SUBFIELD */                                   35572001
KEYWDSUB DS    0H                      SET UP FOR SUBFIELD              35580020
         OI    PFLAGS5,SUBFLG          INDICATE SUBFIELD IS BEING       35582001
*                                      PROCESSED                 Y01156 35584001
         MVC   KEYLEN(TWO),PLENGTH     SAVE KEYWORD LENGTH FOR MESSAGE  35586001
*                                      FOR PROMPTING             Y01156 35588001
         MVC   KEYPTR(FOUR),PPOINTR    SAVE USER KEYWORD PTR     Y01156 35588801
         XR    R1,R1                   CLEAR WORK REGISTER TO ZERO      35590020
         IC    R1,PCENAML(XPCE)        LOAD LENGTH - 1 OF NAME          35600020
         AR    R1,XPCE                 POINT INTO IKJNAME PCE           35610020
         MVC   PDWORD(TWO),SIX(R1)     ALIGN SUBFIELD OFFSET ON PROPER  35620020
*                                         BOUNDARY                      35630020
         LH    R3,PDWORD               LOAD THE SUBFIELD OFFSET         35640020
*/* P COMPUTE SUBFIELD ADDRESS */                                       35642001
         A     R3,PTABLEAD             COMPUTE REAL SUBFIELD ADDRESS    35650020
*                                                                       35660020
********                                                                35670020
******** NOTE - R3 NOW POINTS TO SECOND BYTE OF IKJSUBF PCE             35680020
********                                                                35690020
*                                                                       35700020
         BAL   LINK2,SKIPB             SKIP SEPARATORS           Y02666 35710002
         B     KEYWDFN2                END-OF INPUT,PROCESS      Y02666 35720002
         LA    XINPUT,ONE(XINPUT)      MORE DATA IN BUFFER              35750020
         LR    XINPUTB,XINPUT          SET BACKUP REGISTER              35760020
*/* D (YES,KEYWDRS1,NO,) CHARACTER IS LEFT PAREN */                     35762001
         CLI   ZERO(XINPUT),LEFTPRN    IS CHARACTER A LEFT PARENTHESIS  35770020
         BE    KEYWDRS1                IF YES BRANCH                    35780020
         SPACE                                                          35790020
*/* D (YES,KEYWDFN2,NO,) END OF INPUT */                                35790401
         BCTR  XINPUT,ZERO             REDUCE SCAN PTR BY ONE           35797400
         SPACE                                                          35812020
*/* S PUSHI: PUSH INPUT STACK */                                        35814001
         BAL   LINK1,PUSHI             PUSH DOWN INPUT STACK            35820020
         SPACE                                                          35830020
*/*KEYWDFN2: P POINT TO DUMMY () */                                     35830401
KEYWDFN2 DS    0H                      * * * *                          35832020
         LA    XINPUT,LRPAREN          POINT TO DUMMY ()                35840020
         LA    R0,LRPAREN+L'LRPAREN    SET END OF INPUT POINTER         35850020
         ST    R0,ENDINPUT             SAVE POINTER                     35860020
         SPACE                                                          35870020
*/*KEYWDRS1: D (YES,KEYWDRS3,NO,) IKJPOSIT PCE */                       35872001
KEYWDRS1 DS    0H                      * * * *                          35880020
         MVC   PDWORD(ONE),TWO(R3)     MOVE FLAG BYTE ONE OF PCE        35890020
         NI    PDWORD,HE0              ISOLATE THE TYPE INDICATOR BITS  35900020
*                                         FOLLOWING SUBFIELD PCE TO     35910020
*                                         WORK AREA                     35920020
         CLI   PDWORD,EIGHT*(POSITBB-MAINB) IS IT A IKJPOSIT PCE        35930020
         BE    KEYWDRS3                IF YES BRANCH                    35940020
         SPACE                                                          35950020
*/* D (YES,,NO,KEYWDRS2) IKJIDENT PCE */                                35952001
         CLI   PDWORD,EIGHT*(IDENTB-MAINB) IS IT AN IKJIDENT PCE        35960020
         BNE   KEYWDRS2                IF NO BRANCH                     35970020
         SPACE                                                          35980020
*                                                                       35990020
* IF THE SUBFIELD CAN CONTAIN ONLY ONE PARAMETER AND THAT PARAMETER CAN 36000020
* BE A LIST THE PARENTHESIS OF THE SUBFIELD IS ALSO USED AS THE         36010020
* DELIMITERS OF THE LIST. FOR EXAMPLE, KEYWORD(ITEM1 ITEM2). A LIST OF  36020020
* THE FORM KEYWORD((ITEM1 ITEM2)), CAUSES THE MIDDLE SET OF             36030020
* PARENTHESIS TO BE PICKED UP AS INVALID ITEMS IN THE LIST.             36040020
* IF THE SUBFIELD CAN CONTAIN MORE THAN ONE PARAMETER AND THE FIRST     36050020
* PARAMETER CAN BE A LIST THE SUBFIELD PARENTHESIS ARE NOT USED AS THE  36060020
* DELIMITERS OF THE LIST. IN THIS CASE THE PARENTHESIS DELIMITING       36070020
* THE LIST MUST BE SPECIFIED. FOR EXAMPLE, KEYWORD((ITEM1 ITEM2) (ITEM1 36080020
* ITEM2)).                                                              36090020
* IF THE FIRST PARAMETER CAN NOT BE A LIST THERE IS NO ADDITIONAL       36100020
* CONSIDERATION REQUIRED.                                               36110020
*                                                                       36120020
*/*KEYWDRS3: D (YES,,NO,KEYWDRS2) LIST IS SPECIFIED */                  36122001
KEYWDRS3 DS    0H                      * * * *                          36130020
         TM    THREE(R3),PCEFLIST      IS A LIST SPECIFIED              36140020
         BZ    KEYWDRS2                IF NO DON'T BACK UP              36150020
         SPACE                                                          36160020
         SPACE                                                          36170020
         MVC   PDWORD(TWO),PCELEN+TWO(R3) ALIGN PCE LENGTH ON PROPER    36180020
*                                         BOUNDARY                      36190020
         SPACE                                                          36200020
*                                                                       36210020
********                                                                36220020
******** N O T E  - ABOVE MVC AND TM ARE DEPENDENT ON THE LENGTH OF THE 36230020
********            SUBFIELD PCE.                                       36240020
********                                                                36250020
*                                                                       36260020
         SPACE                                                          36270020
*/* P COMPUTE TRUE ADDRESS OF NEXT PCE */                               36272001
         LH    R2,PDWORD               LOAD THE PCE LENGTH              36280020
         LA    R2,TWO(R3,R2)           OBTAIN TRUE ADDRESS OF NEXT PCE  36290020
         MVC   PDWORD(ONE),PCEFLGB1(R2) ISOLATE FLAG BYTE ONE           36300020
         NI    PDWORD,HE0              ISOLATE THE TYPE INDICATOR BITS  36310020
*/* D (YES,,NO,KEYWDRS2) IS IT AN END PCE */                            36312001
         CLI   PDWORD,EIGHT*(ENDB-MAINB) IS IT AN END PCE               36320020
         BNE   KEYWDRS2                IF NO BRANCH                     36330020
         SPACE                                                          36340020
*/* P INDICATE LEFT PAREN USED AS DELIMITER OF SUBF AND LIST */         36342001
         OI    PFLAGS3,PFMORE          INDICATE LEFT PAREN USED AS      36350020
*                                         DELIMITER OF SUBFIELD AND     36360020
*                                         LIST                          36370020
*/* P BACK UP OVER LEFT PAREN */                                        36372001
         BCTR  XINPUT,ZERO             BACK UP OVER LEFT PARENTHESIS    36380020
         SPACE                                                          36390020
*/*KEYWDRS2: P INDICATE KEYWORD WITH SUBFIELD */                        36392001
KEYWDRS2 DS    0H                      * * * *                          36400020
         LR    R2,R3                   SET PCE PTR FOR RECURSE ROUTINE  36410020
*                                         XPCE WILL BE SET TO NEXT PCE  36420020
*                                         IN RECURSE ROUTINE            36430020
         OI    RFLAGS,RFKEYWDS         INDICATE KEYWORD WITH SUBFIELD   36440020
*/* S REUCRSE: PROCESS SUBFIELD */                                      36442001
         BAL   LINK1,RECURSE           PROCESS SUBFIELD                 36450020
         SPACE                                                          36460020
         NI    PFLAGS5,HFF-SUBFLG      TURN OFF SUBFIELD FLAG    Y01156 36460401
*/* D (,KEYWDINS) SCAN NEXT KEYWORD */                                  36462001
         B     KEYWDINS                SCAN NEXT KEYWORD                36470020
         SPACE                                                          36480020
*/*KEYWDRPT: P GET ADDRESS FOR ERASE PDE */                             36482001
KEYWDRPT DS    0H                      * * * *                          36490020
         OI    RFLAGS,RFERASE          SET ERASE IN PROCESS FLAG        36500020
         LA    R0,KEYWDFN0             SET RETURN ADDRESS FROM ERASE TO 36510020
         ST    R0,RLINKSV1                BE ADDRESS FOR NEW KEYWORD    36520020
         LR    R2,R3                   PICK UP ADDRESS FOR ERASE PDE    36530020
         L     XPCE,PKEYWDPX           PICK UP PCE ADDRESS FOR IKJKEYWD 36540020
*/* D (,KEYWDER4) START ERASE */                                        36542001
         B     KEYWDER4                START ERASE                      36550020
         SPACE                                                          36560020
*/*KEYWDXIT: D (YES,ILLKEYWD,NO,) NO MATCHES FOUND */                   36562001
KEYWDXIT DS    0H                      * * * *                          36570020
*                                                                 M2574 36570420
         LA    R0,ONE                  GET NUMBER OF VALID MATCHES      36572020
         CR    R14,R0                  HOW MANY MATCHES FOUND     M2574 36574020
         BL    ILLKEYWD                NONE, INVALID KEYWORD      M2574 36576020
         SPACE                                                          36576420
*/* D (YES,KEYWDAMB,NO,) MORE THAN ONE MATCH FOUND */                   36576801
         BH    KEYWDAMB                MORE THAN ONE, AMBIGIOUS   M2574 36578020
         SPACE                                                          36578120
*/* D (,KEYWDFN1) ONLY ONE - PROCESS IT */                              36578201
         B     KEYWDFN1                ONE, PROCESS IT            M2574 36578420
         SPACE                                                          36578820
*/*KEYWDXI2: P RESTORE ENTRY PCE ADDRESS */                             36628801
KEYWDXI2 DS    0H                      * * * *                          36630020
         L     XPCE,RKEYSV             RESTORE ENTRY PCE ADDRESS        36640020
*/* D (,NEXTPCE) GET NEXT PCE */                                        36642001
         B     NEXTPCE                 GET NEXT PCE.                    36650020
         SPACE                                                          36660020
*                                                                       36670020
* AN AMBIGOUS MESSAGE IS ISSUED IF MORE THAN ONE MATCH IS FOUND.        36680020
* THIS IS DONE USING THE SAME INVALID PROCESSING TO KEEP THE            36690020
* HANDLING OF INVALID DATA CONSISTENT.  SOME SPECIAL HANDLING IS DONE   36700020
* WITH REGARD TO THE MSG SEGMENTS SINCE THE FORMAT OF THE MSG IS        36710020
* DIFFERENT.                                                            36720020
*                                                                       36730020
*/*KEYWDAMB: P INDICATE AMBIGUOUS MSG TO BE WRITTEN */                  36732001
KEYWDAMB DS    0H                      * * * *                          36740020
         MVI   MSGCODE,MSG4            INDICATE AN AMBIGUOUS MSG        36750020
*                                         SHOULD BE WRITTEN             36760020
*/* D (,ILLKAMB1) BRANCH TO ILLKEYWD PROCESSING */                      36770001
         B     ILLKAMB1                BRANCH TO ILLKEYWD PROCESSING    36780020
         SPACE                                                          36782020
*                                                                       36784020
* THE FIRST CHARACTER OF A KEYWORD IS INVALID. CHECK IF IT IS THE M3337 36786020
* CLOSING PAREN OF A SUBFIELD OR A SEMICOLON.  IF YES, EXIT THE   M3337 36788020
* KEYWORD SCANNING.  IF NO, PROCESS IT AS AN INVALID KEYWORD.     M3337 36788420
*                                                                       36788820
*/*KEYWDMIS: D (YES,KEYWDXI2,NO,) FIRST CHAR A SEMICOLON */             36788901
KEYWDMIS DS    0H                      * * * *                          36789220
         LR    R1,XINPUT               SAVE XINPUT                M3337 36789620
         BCTR  XINPUT,ZERO             DECREMENT AS USUAL         M3337 36789720
         CLI   ZERO(R1),SEMICOLN       IS 1ST CHAR A SEMICOLON    M3337 36789820
         BE    KEYWDXI2                YES, END OF KEYWORD SCAN   M3337 36789920
*/* D (YES,,NO,ILLKEYWD) SUBFIELD BEING PROCESSED */                    36791901
         NC    RBASESV,RBASESV         IS A SUBFIELD BEING        M3337 36793220
*                                         PROCESSED               M3337 36795220
         BZ    ILLKEYWD                NO, IT IS AN INVALID KEYWD M3337 36795620
*/* D (YES,KEYWDXI2,NO,ILLKEYWD) FIRST CHAR. A RIGHT PAREN */           36795701
         CLI   ZERO(R1),RIGHTPRN       IS 1ST CHAR A RT. PAREN    M3337 36796020
         BNE   ILLKEYWD                NO, IT IS AN INVALID KEYWD M3337 36796420
         B     KEYWDXI2                YES, IT IS THE CLOSING     M3337 36796520
*                                         PAREN OF A SUBFIELD     M3337 36796620
*                                         EXIT KEYWD SCAN         M3337 36799920
         SPACE                                                          36803201
         EJECT                                                          36803420
*********************************************************************** 36806720
*                                                                     * 36810020
*                       PROMPT/DEFAULT SUBROUTINE                     * 36820020
*                                                                     * 36830020
*   DETERMINE IF A PROMPT OR DEFAULT WAS SPECIFIED BY THE CALLER, IF  * 36840020
* NOT, RETURN +4. IF A DEFAULT WAS SPECIFIED PREPARE TO TREAT IT AS   * 36850020
* IF IT WAS NEW DATA RECEIVED FROM A PROMPT.                          * 36860020
*   IF A PROMPT IS REQUIRED, THE PROMPT DATA IS ADDED TO THE 'ENTER'  * 36870020
* MESSAGE.                                                            * 36880020
*                                                                     * 36890020
*********************************************************************** 36900020
         SPACE                                                          36910020
*/*PROMPTQ: E PROMPT/DEFAULT ROUTINE */                                 36912001
*/*PROMPTZ: D (YES,,NO,PROMPTQ0) LIST IS BEING PROCESSED */             36914001
PROMPTQ  DS    0H                      PROMPT/DEFAULT ROUTINE           36920020
         TM    PFLAGS,PFLIST           IS A LIST BEING PROCESSED        36930020
         BZ    PROMPTQ0                NO, CONTINUE WITH PROMPT/DEFAULT 36940020
         SPACE                                                          36950020
*/* P GET ADDRESS OF DUMMY () */                                        36952001
         LA    R0,LRPAREN+ONE          GET ADDRESS OF DUMMY ( )         36960020
*                                         INSERTED BY PARSE WHEN KEY-   36970020
*                                         WORD SPECIFYING SUBFIELD      36980020
*                                         ENTERED WITHOUT SUBFIELD AND  36990020
*                                         WHERE CURRENT SCAN PROCESSING 37000020
*                                         COULD BE                      37010020
*/* D (YES,PROMPTQ0,NO,CODE4) PROCESSING THIS () */                     37012001
         CR    R0,XINPUT               PROCESSING THIS ( )              37020020
         BE    PROMPTQ0                YES, PROMPT/DEFAULT IF CAN       37030020
         SPACE                                                          37040020
         B     CODE4                   IF NO BRANCH - THE FIRST         37050020
*                                         CHARACTER OF CURRENT INPUT    37060020
*                                         PARAMETER MUST BE INVALID FOR 37070020
*                                         THE TYPE OF PARAMETER         37080020
*                                         PRESENTLY BEING CHECKED FOR.  37090020
*                                         IF A LIST IS BEING PROCESSED  37100020
*                                         THIS PARAMETER IS TREATED AS  37110020
*                                         AN INVALID PARAMETER, TO      37120020
*                                         AVOID A LOOP FROM OCCURING.   37130020
         SPACE                                                          37140020
         SPACE                                                          37150020
*/*PROMPTQ0: D (YES,PROMPTQY,NO,) PROMPT/DEFAULT IS SPECIFIED */        37152001
PROMPTQ0 DS    0H                      * * *                            37160020
         TM    PCEFLGB1(XPCE),PCEFPRPT+PCEFDFLT IS PROMPT OR DEFAULT    37170020
*                                         SPECIFIED                     37180020
*/* R RETURN +4 */                                                      37182001
         BZ    FOUR(LINK1)             NO RETURN +4                     37190020
         SPACE                                                          37200020
         TM    PFLAGS5,INVPRMPT        HAS PROMPTING BEEN DONE   A45352 37200401
*                                      PREVIOUSLY  FOR THIS PARAMETER?  37200801
         BO    CODE4                   YES,PROMPT WITH INVALID MESSAGE  37201601
*                                                               A45352  37201701
*/*PROMPTQY: P SAVE RETURN ADDRESS */                                   37202001
         OI    PFLAGS5,INVPRMPT        INDICATE PROMPT FOR THIS PCE     37206001
*                                                               A45352  37208001
         ST    LINK1,PLINKSV1          SAVE RETURN ADDRESS              37210001
*/* S PUSHI: PUSH STACK TO GET NEW INPUT */                             37212001
         BAL   LINK1,PUSHI             PUSH STACK TO RECEIVE NEW INPUT  37220020
         SPACE                                                          37230020
*/*PROMPTQ1: P GET PCE TYPE INDICATORS */                               37232001
PROMPTQ1 DS    0H                      ENTERED FROM WRITER2 ROUTINE TO  37240020
*                                         USE DEFAULT IN PLACE OF A     37250020
*                                         NULL LINE                     37260020
*/* D (NO,PROMPTQ2,YES,) PROCESSING COBOL PCE'S? */                     37260401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 37262001
         BZ    PROMPTQ2                NO-CONTINUE NORMAL PARSE  F41448 37264001
*                                      IF IN COBOL MODE, SPECIAL F41448 37266001
*                                      CODE REQUIRED TO POSITION F41448 37268001
*                                      TO DEFAULT WITHIN THE     F41448 37268401
*                                      COBOL PCE'S               F41448 37268801
*/* D (YES,TERMPCE1,NO,) IS THE PCE TYPE A TERM PCE? */                 37268901
         TM    PCEFLGB1(XPCE),HA0      IF PCETYPE IS MIXED HERE, F41448 37269201
*                                      MUST BE A TERM PCE        F41448 37269601
         BM    TERMPCE1                PCETYPES ARE AS FOLLOWS:  F41448 37269701
*                                      TERM - 110                F41448 37269801
*                                      OPER - 111                F41448 37269901
*                                      RESERVED WORD - 101       F41448 37273201
*/* P  OPER OR RESERVED WORD PCE - PARM TYPE FIELD AT OFFSET  +6 */     37273601
         MVC   PDWORD(TWO),SIX(XPCE)   IF OPER OR RESRVD WORD,   F41448 37275201
*                                      THE PARM TYPE FIELD IS AT F41448 37275601
*                                      OFFSET 6.                 F41448 37276001
         LH    R2,PDWORD               BUMP PASSED PARM TYPE     F41448 37276401
         LA    R2,SIX(R2)              FIELD                     F41448 37276501
*/* D (NO,CHKDEFLT,YES,) IS THIS AN OPER PCE? */                        37277601
         TM    PCEFLGB1(XPCE),HE0      IF AN OPER PCE MUST BUMP  F41448 37280001
*                                      PASSED 8 BYTES OF OFFSET  F41448 37280501
*                                      FIELDS                    F41448 37282501
         BM    CHKDEFLT                IF MIXE, IS A RSVWD WORD  F41448 37282901
*/* P (,CHKDEFLT) BUMP PASSED 8 BYTES OF OFFSET FIELDS */               37283001
         LA    R2,EIGHT(R2)            BUMP PASSED OFFSET FIELDS F41448 37283301
         B     CHKDEFLT                BRANCH TO CHECK DEFAULT   F41448 37283701
*/*TERMPCE1: P TERM PCE - PARM TYPE FIELD AT OFFSET 7 */                37283801
*/* P (,CHKDEFLT) BUMP PASSED PARM TYPE FIELD IN TERM PCE */            37283901
TERMPCE1 MVC   PDWORD(TWO),SEVEN(XPCE) IF IS A TERM PCE, THE     F41448 37284101
*                                      PARM TYPE FIELD IS AT     F41448 37284201
*                                      OFFSET SEVEN              F41448 37284301
         LH    R2,PDWORD               BUMP PASSED PARM TYPE     F41448 37285701
         LA    R2,SEVEN(R2)            NOW POSITIONED AT DEFAULT F41448 37287701
         B     CHKDEFLT                BRANCH TO CHECK DEFAULT   F41448 37288101
PROMPTQ2 MVC   PDWORD(ONE),PCEFLGB1(XPCE) MOVE TYPE INDICATORS          37288601
         NI    PDWORD,HE0              ISOLATE PCE TYPE INDICATORS      37290001
*/*PROMPTQ2: D (YES,POSITPMT,NO,) IT IS AN IKJPOSIT PCE */              37292201
         CLI   PDWORD,EIGHT*(POSITBB-MAINB) IS IT AN IKJPOSIT PCE       37296101
         BE    POSITPMT                IF YES BRANCH                    37300020
         SPACE                                                          37310020
*/* D (YES,KEYWDPMT,NO,) IKJKEYWD PCE - IF NOT,MUST BE IKJIDENT */      37312001
         CLI   PDWORD,EIGHT*(KEYWDB-MAINB) IS IT AN IKJKEYWD PCE        37320020
         BE    KEYWDPMT                IF YES BRANCH                    37330020
         SPACE                                                          37340020
*                                      IT MUST BE AN IKJIDENT PCE       37350020
         MVC   PDWORD(TWO),PCEPARMT(XPCE) ALIGN PARAMETER TYPE LENGTH   37360020
*                                         ON PROPER BOUNDARY            37370020
         LH    R2,PDWORD               LOAD THE LENGTH                  37380020
*/* P GET PTR TO PROMPT/DEFAULT DATA */                                 37382001
         LA    R2,PCEPARMT(R2)         LOAD PTR TO PROMPT/DEFAULT DATA  37390020
*/* D (YES,,NO,CHKDEFLT) MAXLNTH WAS SPECIFIED */                       37392001
         TM    PCEOPT(XPCE),PCEFMAXL   WAS MAXLNTH SPECIFIED            37400020
         BZ    CHKDEFLT                IF NO BRANCH                     37410020
         SPACE                                                          37420020
*/* P ADD ADDITIONAL BYTE */                                            37422001
         LA    R2,ONE(R2)              IF YES ADD AN ADDITIONAL BYTE    37430020
*/* D (,CHKDEFLT) BRANCH TO MAIN STREAM */                              37432001
         B     CHKDEFLT                BRANCH BACK TO MAIN STREAM       37440020
         SPACE                                                          37450020
*/*KEYWDPMT: P LOAD PTR TO PROMPT/DEFAULT DATA */                       37452001
KEYWDPMT DS    0H                      * * * *                          37460020
         LA    R2,PCEPDEO+TWO          LOAD PTR TO PROMPT/DEFAULT DATA  37470020
*/* D (,CHKDEFLT) BRANCH TO MAIN STREAM */                              37472001
         B     CHKDEFLT                BRANCH BACK TO MAIN STREAM       37480020
         SPACE                                                          37490020
*/*POSITPMT: P LOAD PTR TO PROMPT/DEFAULT DATA */                       37492001
POSITPMT DS    0H                      * * * *                          37500020
         LA    R2,PCEPOST+ONE          LOAD PTR TO PROMPT/DEFAULT DATA  37510020
         SPACE                                                          37520020
*/*CHKDEFLT: D (YES,,NO,PROMPT) DEFAULT WAS SPECIFIED */                37522001
CHKDEFLT DS    0H                      * * * *                          37530020
         AR    R2,XPCE                 CALCULATE ACTUAL ADDRESS OF DATA 37540020
         TM    PCEFLGB1(XPCE),PCEFDFLT WAS A DEFAULT SPECIFIED          37550020
         BNO   PROMPT                  NO BRANCH TO PROMPT              37560020
*/* D (YES,INVPARMS,NO,PROMPDFL) ALREADY BEEN TAKEN */                  37562001
         TM    PFLAGS,PFDEFLT          YES,HAS IT BEEN TAKED            37570020
         BZ    PROMPDFL                NO, BRANCH TO TAKE DEFAULT       37580020
         B     INVPARMS                YES,DEFAULT INVALID CLEANUP AND  37590020
*                                      EXIT                             37600020
         SPACE                                                          37610020
*                                                                       37620020
* ISSUE PROMPT MESSAGE 'ENTER XXX'.                                     37630020
*                                                                       37640020
*/*PROMPT: P GET LENGTH OF DATA */                                      37642001
PROMPT   DS    0H                      * * * *                          37650020
         XR    R1,R1                   ZERO REG FOR LENGTH PICKUP       37660020
         IC    R1,ZERO(R2)             PICKUP LENGTH-1 OF PROMPT DATA   37670020
         LA    R1,FIVE(R1)             GET SIZE OF CORE FOR MESSAGE SEG 37680020
*                                         ONE PLUS FOUR FOR HEADER      37690020
         LR    R3,R1                   SAVE CALCULATED LENGTH           37700020
*/* S GETCORE: GET CORE FOR MESSAGE */                                  37702001
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     37710020
         SPACE                                                          37720020
*                                      CORE ADDRESS RETURNED IN R1      37730020
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 37740020
         STH   R3,ZERO(R1)             STORE LENGTH INTO SEGMENT        37750020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO ZERO 37760020
         MVI   THREE(R1),OFFSET1       SET OFFSET TO LENGTH OF 'ENTER'  37770020
*                                         MESSAGE                       37780020
         SH    R3,H5                   REDUCE LENGTH FOR 'EX'           37790020
         LA    R15,ONE(R2)             GET START OF DATA ADDRESS        37800020
*/* P MOVE TEXT TO SEGMENT */                                           37802001
         EX    R3,BUILDSEG             MOVE TEXT TO NEW SEGMENT         37810020
         MVI   MSGCODE,MSG1            INDICATE MESSAGE TO PRINT        37820020
         L     R1,ADRMSGC              LOAD ADDRESS OF MESSAGE CSECT    37830020
         L     R1,MSG1(R1)             LOAD ADDRESS OF MESSAGE SEGMENT  37840020
         MVC   PRIMSGID+FOUR(EIGHT),FOUR(R1) SAVE PRIMARY MESSAGE ID    37850020
*                                         FOR HELP MESSAGES             37860020
*/* P INDICATE TWO SEGMENT MESSAGE */                                   37862001
         LA    R0,TWO                  INDICATE A TWO SEGMENT MESSAGE   37870020
         ST    R0,SEGLIST+FOUR         STORE SEGMENT NUMBER FOR PRIMARY 37880020
*                                         MESSAGE                       37890020
*/* D (,WRITER2A) BRANCH TO PROMPT */                                   37892001
         B     WRITER2A                BRANCH TO PROMPT WITH A TWO      37900020
*                                         SEGMENT MESSAGE               37910020
         SPACE                                                          37920020
*                                                                       37930020
* A DEFAULT WAS SPECIFIED.                                              37940020
*                                                                       37950020
*/*PROMPDFL: P INDICATE DEFAULT TAKEN */                                37952001
PROMPDFL DS    0H                      * * * *                          37960020
         OI    PFLAGS,PFDEFLT          INDICATE DEFAULT TAKEN           37970020
         OI    PFLAGS4,PFPDDATA        INDICATE DEFAULT DATA PICKED UP  37980020
*/* P POINT TO START AND END OF DEFAULT DATA */                         37982001
         LA    XINPUT,ONE(R2)          POINT TO START OF DEFAULT TEXT   37990020
         ST    XINPUT,PPOINTR          SAVE FOR FUTURE USE              38000020
         LR    XINPUTB,XINPUT                                           38005003
         XR    R1,R1                   CLEAR WORK REG. TO ZERO          38010020
*/* P LOAD LENGTH OF DEFAULT DATA */                                    38012001
         IC    R1,ZERO(R2)             LOAD LENGTH OF DEFAULT TEXT - 1  38020020
         LA    R1,TWO(R1,R2)           GET PTR TO END OF DEFAULT DATA   38030020
         ST    R1,ENDINPUT             SAVE END OF DATA PTR             38040020
*/* D (,NOTENTER) BACK UP AND BRANCH */                                 38042001
         BCT   XINPUT,NOTENTER         BACK UP AND BRANCH               38050020
         EJECT                                                          39850020
*********************************************************************** 39868002
*                                                                     * 39870020
*                       SKIP BLANKS SUBROUTINE                        * 39880020
*                                                                     * 39890020
*   THE FUNCTION OF THIS ROUTINE IS TO SKIP BLANKS, COMMAS AND TABS IN* 39900020
* THE INPUT BUFFER.                                                   * 39910020
*   UPON ENTRY -                                                      * 39920020
*               XINPUT CONTAINS THE BUFFER ADDRESS                    * 39930020
*               LINK2 CONTAINS THE RETURN ADDRESS                     * 39940020
*   AN EXIT TO NSI +0 IS TAKEN IF THE END OF THE BUFFER HAS BEEN      * 39950020
* REACHED. A RETURN TO NSI +4 INDICATES THE XINPUT ADDRESS POINTS TO  * 39960020
* THE LAST SEPARATOR CHARACTER AND PPOINTR POINTS TO THE FIRST        * 39970020
* NON-SEPARATOR CHARACTER.                                            * 39980020
*                                                                     * 39990020
*********************************************************************** 40000020
         SPACE                                                          40010020
*/*SKIPB: E SKIP SEPARATORS SUBROUTINE */                               40012001
*/*SKIPB2: P INCREMENT POINTER */                                       40014001
SKIPB    DS    0H                      SKIP SEPARATORS SUBROUTINE       40020020
         LA    XINPUT,ONE(XINPUT)      BUMP INPUT PTR BY ONE            40030020
         LR    XINPUTB,XINPUT          SET BACKUP REGISTER              40040020
*/* D (YES,,NO,SKIPB1) REACHED END OF INPUT */                          40042001
         C     XINPUT,ENDINPUT         END OF INPUT                     40050020
         BL    SKIPB1                  NO - BRANCH                      40060020
         SPACE                                                          40070020
*/* S SCANDLSN: TRY TO POP STACK */                                     40072001
SKIPBPOP DS    0H                                                Y02666 40074002
         BAL   LINK1,SCANDLSN          NO, TRY TO POP PUSHDOWN STACK    40080020
*                                                                       40090020
*/* D (YES,SKIPBX,NO,) END OF GROUP EXIT */                             40092001
         B     SKIPBX                  +0 RETURN - END-OF-GROUP EXIT    40100020
*                                                                       40110020
         LA    XINPUT,ONE(XINPUT)      INCREMENT FOR DECREMENT    M3337 40122020
*/* D (NO,SKIPB1,YES,) PROCESSING COBOL PCE'S? */                       40122401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 40124001
         BZ    SKIPB1                  NO-CONTINUE NORMAL PARSE  F41448 40126001
*/* P SET XINPUTB = XINPUT IF IN COBOL MODE */                          40126401
         LR    XINPUTB,XINPUT          IF YES, SET XINPUTB IN    F41448 40128001
*                                      CASE DATA IS NOT PRECEEDEDF41448 40128401
*                                      BY BLANKS - PARS2 DEPENDS F41448 40128801
*                                      ON SETTING OF XINPUTB     F41448 40129201
         SPACE                                                          40130020
*/*SKIPB1: D (YES,SKIPB2,NO,) CHARACTER IS BLANK,COMMA OR TAB */        40132001
SKIPB1   DS    0H                      * * * *                          40140020
         CLI   ZERO(XINPUT),BLNK       IS IT A BLANK                    40150020
         BE    SKIPB                   IF YES REPEAT LOOP               40160020
         SPACE                                                          40170020
         CLI   ZERO(XINPUT),COMMA      IS IT A COMMA                    40180020
         BE    SKIPB                   IF YES REPEAT LOOP               40190020
         SPACE                                                          40200020
         CLI   ZERO(XINPUT),TABCHAR    IS IT A TAB                      40210020
         BE    SKIPB                   IF YES REPEAT LOOP               40220020
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 40220502
         C     R15,ENDINPUT            END OF INPUT?             YM3610 40221002
         BC    CC10,COMBYPS5           BYPASS COMMENT TEST        M4540 40221200
         CLC   ZERO(TWO,XINPUT),SLASHAST IS THIS A COMMENT?      Y02666 40222002
         BE    SKIPCOMT                YES, PROCESS COMMENT      Y02666 40224002
         SPACE                                                          40230020
*/* P STORE ADDRESS OF NON-SEPARATOR */                                 40232001
COMBYPS5 DS    0H                      SAVE INPUT PTR            YM3610 40236002
         ST    XINPUT,PPOINTR          STORE ADDRESS OF NON-SEPARATOR   40240020
*/* R BACK UP SCAN PTR BY ONE AND RETURN +4 */                          40242001
         BCT   XINPUT,FOUR(LINK2)      BACK UP INPUT PTR BY ONE AND     40250020
*                                         RETURN TO NSI +4              40260020
         SPACE                                                          40270020
*/*SKIPBX: P STORE ADDRESS */                                           40272001
SKIPBX   DS    0H                      * * * *                          40280020
         ST    XINPUT,PPOINTR          STORE ADDRESS                    40290020
*/* D (NO,DECEXIT,YES,) PROCESSING COBOL PCE'S? */                      40290101
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 40290401
         BZ    DECEXIT                 NO-CONTINUE NORMAL PARSE  F41448 40290801
*/* R () DO NOT DECREMENT SCAN PTR BEFORE RETURN TO IKJPARS2 */         40290901
         BR    LINK2                   IF YES, DO NOT DECREMENT  F41448 40291201
*                                      XINPUT A SECOND TIME      F41448 40291601
*/*DECEXIT: R BACK UP SCAN PTR BY ONE AND RETURN +0 */                  40292001
DECEXIT  BCTR  XINPUT,LINK2            BACK UP INPUT PTR BY ONE AND     40300001
*                                         RETURN TO NSI +0              40310020
SKIPCOMT DS    0H                                                Y02666 40312002
         LA    XINPUT,TWO(XINPUT)      SKIP OVER SLASH ASTERISK  Y02666 40314002
SKIPB2   DS    0H                                                Y02666 40316002
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 40316502
         C     R15,ENDINPUT            END OF INPUT?             YM3610 40317002
         BH    COMBYPS6                BYPASS COMMENT END TEST   YM3610 40317502
         CLC   ZERO(TWO,XINPUT),ASTSLASH COMMENT END DELIMITER?  Y02666 40318002
         BE    SKIPB3                  END COMMENT PROCESSING    Y02666 40318802
COMBYPS6 DS    0H                      UPDATE INPUT PTR          YM3610 40319002
         LA    XINPUT,ONE(XINPUT)      UPDATE TO NEXT CHARACTER  Y02666 40319202
         C     XINPUT,ENDINPUT         END OF BUFFER?            Y02666 40319602
         BNL   SKIPBPOP                YES,END COMMENT-POP STACK Y02666 40319702
         B     SKIPB2                  NO, CONTINUE SEARCH       Y02666 40319902
SKIPB3   DS    0H                                                Y02666 40323202
         LA    XINPUT,ONE(XINPUT)      UPDATE SCAN POINTER       Y02666 40325202
         B     SKIPB                   CONTINUE SCAN FOR SEPARATORS     40325602
*                                                                Y02666 40326002
         EJECT                                                          40326702
*********************************************************************** 40330020
*                                                                     * 40340020
*                       PUSH INPUT STACK SUBROUTINE                   * 40350020
*                                                                     * 40360020
*   IN THIS ROUTINE THE INPUT STACK IS PUSHED- THE CURRENT STATUS OF  * 40370020
* XINPUT AND ENDINPUT ARE SAVED IN THE STACK.                         * 40380020
*                                                                     * 40390020
*********************************************************************** 40400020
         SPACE                                                          40410020
*/*PUSHI: E PUSH INPUT STACK SUBROUTINE */                              40412001
PUSHI    DS    0H                      PUSH INPUT STACK SUBROUTINE      40420020
*/* D (YES,,NO,PUSHIX) CURRENT STATUS IS TO BE SAVED */                 40422001
         TM    PFLAGS,PFENDF           IS CURRENT STATUS TO BE SAVED    40430020
         BNZ   PUSHIX                  NO DON'T PUSH STACK THEN         40440020
         L     R15,UPTADDR             GET UPT PTR               Y02666 40444401
         TM    TWELVE(R15),INVPRMPT    IS NO PROMPT SPECIFIED?   Y02666 40444801
         BZ    PUSHON                  NO CONTINUE VALIDLY       Y02666 40445201
         TM    PFLAGS,PFLIST           YES,LIST PROCESSING,TOO   Y01156 40446001
         BZ    PUSHON                  NO, CONTINUE PROCESSING   Y01156 40448001
         BAL   LINK2,SKIPB             SKIP BLANKS               Y01156 40448401
         B     PUSHIX1                 END OF INPUT,RETURN       Y01156 40448801
         LA    XINPUT,ONE(XINPUT)      UPDATE FOR R. PAREN TEST  Y01156 40448902
         CLI   ZERO(XINPUT),RIGHTPRN   IS INPUT A RIGHT PAREN?   Y01156 40449201
         BE    PUSHON1                 NO, CONTINUE PROCESSING   Y01156 40449602
         BCT   XINPUT,PUSHON           DECREMENT AND BRANCH      Y01156 40449702
PUSHON1  DS    0H                                                Y01156 40450401
         TM    PFLAGS3,PFMORE          DOES R.PAREN TERMINATE LIST AND  40450601
*                                      SUBFIELD                  Y01156 40450801
         BZ    PUSHEY                  NO, DO NOT UPDATE         Y01156 40451001
         TM    PFLAGS,PFENDF           END OF INPUT FOUND        Y01156 40451201
         BNZ   PUSHEY                  YES DO NOT UPDATE         Y01156 40453001
         BCTR  XINPUT,ZERO             DECREMENT SCAN PTR        Y01156 40453401
PUSHEY   DS    0H                                                Y01156 40454501
         OI    PFLAGS5,RPRNFND         INDICATE R. PAREN FOUND   Y01156 40455601
         NI    PFLAGS,HFF-PFLIST       TURN OFF LIST INDICATOR   Y01156 40456701
         NI    PFLAGS3,HFF-PFMORE      TURN OFF L. PAREN INDICATOR      40457801
*                                                                Y01156 40458901
         SPACE                                                          40460001
*/* D (YES,,NO,PUSHGET) ROOM LEFT IN CURRENT STACK */                   40462001
PUSHON   DS    0H                                                Y01156 40464001
         CLI   PIPDLX,EIGHT*(IPDLMAXE) ANY ROOM IN CURRENT STACK        40466001
         BNL   PUSHGET                 NO - GET ANOTHER STACK           40470020
         SPACE                                                          40480020
*                                                                       40490020
* PUSH THE INPUT PUSHDOWN STACK.                                        40500020
*                                                                       40510020
*/*PUSHIT: P PUSH THE STACK */                                          40512001
PUSHIT   DS    0H                      PUSH THE STACK                   40520020
         XR    R15,R15                 ZERO WORK REGISTER               40530020
         IC    R15,PIPDLX              FETCH CURRENT AMOUNT OF INPUT    40540020
*                                         STACK USED                    40550020
         LA    R1,EIGHT(R15)           BUMP INDEX FOR NEXT PUSH ATTEMPT 40560020
         STC   R1,PIPDLX               STORE THE NEW INDEX              40570020
         A     R15,PIPDLCUR            COMPUTE THE SAVE ADDRESS         40580020
         ST    XINPUT,FOUR(R15)        SAVE SCAN PTR IN STACK           40590020
         MVC   EIGHT(L'ENDINPUT,R15),ENDINPUT SAVE END OF SCAN PTR IN   40600020
*                                         STACK                         40610020
         B     PUSHIX                                            Y01156 40612001
         SPACE                                                          40620020
*/*PUSHIX: P CLEAR END OF FILE INDICATOR */                             40622001
PUSHIX1  DS    0H                      * * * *                   Y01156 40630001
         NI    PFLAGS,HFF-PFLIST                                 Y01156 40630401
PUSHIX   DS    0H                      * * * *                          40632001
         NI    PFLAGS,HFF-PFENDF       CLEAR END-OF-FILE INDICATOR      40640020
*/* R RETURN TO CALLER */                                               40642001
         BR    LINK1                   RETURN TO CALLER                 40650020
         SPACE                                                          40660020
*                                                                       40670020
* GET SPACE FOR ANOTHER INPUT PUSHDOWN STACK AND CHAIN IT TO THE        40680020
* PREVIOUS ONE.                                                         40690020
*                                                                       40700020
*/*PUSHGET: S GETCORE: GET CORE FOR PUSHDOWN STACK */                   40702001
PUSHGET  DS    0H                      GET ANOTHER PUSHDOWN STACK       40710020
         LA    R1,EIGHT*(IPDLMAXE)+FOUR LOAD AMOUNT OF CORE NEEDED      40720020
         LR    R3,LINK1                SAVE RETURN REGISTER             40730020
         BAL   LINK1,GETCORE           GET CORE FOR PUSHDOWN STACK      40740020
         SPACE                                                          40750020
         LR    LINK1,R3                RESTORE RETURN REGISTER          40760020
         MVC   ONE(THREE,R1),PIPDLCUR+ONE BACKCHAIN THE NEW STACK       40770020
*/* P INDICATE NEW STACK IS NOW CURRENT ONE */                          40772001
         ST    R1,PIPDLCUR             INDICATE NEW STACK IS NOW        40780020
*                                         THE CURRENT ONE               40790020
         MVI   PIPDLX,ZERO             RESET THE PUSHDOWN INDEX SO THAT 40800020
*                                         FIRST SPACE IS USED           40810020
*/* D (,PUSHIT) PUSH DOWN INTO NEW STACK */                             40812001
         B     PUSHIT                  PUSH DOWN INTO NEW STACK         40820020
         EJECT                                                          40830020
*********************************************************************** 40840020
*                                                                     * 40850020
*                       SET UP TO PROCESS LIST SUBROUTINE             * 40860020
*                                                                     * 40870020
*   THIS ROUTINE DOES VARIOUS SET UP WORK TO PROCESS A LIST. THE      * 40880020
* RETURN ADDRESS IS IN LINK1.                                         * 40890020
*                                                                     * 40900020
*********************************************************************** 40910020
         SPACE                                                          40920020
*/*LISTT: E LIST SET UP SUBROUTINE */                                   40922001
LISTT    DS    0H                      LIST SET UP SUBROUTINE           40930020
*/* D (YES,LISTTY,NO,) LIST IS A LEGAL OPTION */                        40932001
         TM    PCEFLGB2(XPCE),PCEFLIST IS A LIST A LEGAL OPTION         40940020
*/* R RETURN +4 */                                                      40942001
         BZ    FOUR(LINK1)             IF NO RETURN +4                  40950020
         SPACE                                                          40960020
*/*LISTTY: D (YES,,NO,LISTTZ) ALREADY PROCESSING A LIST */              40962001
         TM    PFLAGS,PFLIST           ALREADY PROCESSING A LIST        40970020
*/* R RETURN +4 */                                                      40972001
         BO    FOUR(LINK1)             IF YES, RETURN +4                40980020
         SPACE                                                          40990020
*/*LISTTZ: P INCREMENT SCAN PTR */                                      40992001
         ST    LINK1,PLINKSV1          SAVE RETURN REGISTER             41000020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN PTR BY ONE        41010020
         LR    XINPUTB,XINPUT          SET BACKUP REGISTER              41020020
*/* D (YES,,NO,LISTX) THIS IS A LIST */                                 41022001
         CLI   ZERO(XINPUT),LEFTPRN    IS THIS A LIST                   41030020
         BNE   LISTX                   NO RETURN                        41040020
         SPACE                                                          41050020
*/* S SKIPB: SKIP SEPARATORS AFTER ( */                                 41052001
         ST    XINPUT,INVPSAVE         YES - SAVE PTR TO PAREN          41060020
*                                         IN CASE IT IS INVALID         41070020
         BAL   LINK2,SKIPB             SKIP SEPARATORS                  41080020
*                                                                       41090020
*/* D (YES,,NO,LISTERR) DATA RETURNED */                                41092001
         B     LISTERR                 +0 RETURN - NO DATA IN LIST      41100020
         SPACE                                                          41110020
*                                      +4 RETURN - DATA TO SCAN         41120020
         LA    XINPUT,ONE(XINPUT)      BUMP TO NEXT CHARACTER FOR LATER 41130020
*                                         DECREMENT                     41140020
*/* P INDICATE PROCESSING A LIST */                                     41142001
         OI    PFLAGS,PFLIST           INDICATE PROCESSING A LIST       41150020
         SPACE                                                          41160020
*/*LISTX: R REDUCE SCAN PTR BY ONE AND RETURN +4 */                     41162001
LISTX    DS    0H                      * * * *                          41170020
         L     LINK1,PLINKSV1          RESTORE RETURN ADDRESS           41180020
         BCT   XINPUT,FOUR(LINK1)      REDUCE SCAN PTR BY ONE AND       41190020
*                                         RETURN +4 TO CALLER           41200020
*/*LISTERR: P POINT TO INVALID PARAMETER */                             41202001
LISTERR  DS    0H                      * * * *                          41210020
         NI    PFLAGS3,HFF-PFMORE      TURN OFF FLAG WHICH INDICATES A  41212001
*                                      LEFT PAREN IS PRESENT     YM4036 41214001
         L     LINK1,PLINKSV1          RESTORE RETURN ADDRESS           41220020
         MVC   PPOINTR,INVPSAVE        SET PTR TO INVALID PARM          41230020
*/* R RETURN +0 */                                                      41232001
         BR    LINK1                   RETURN +0 - ERROR                41240020
         EJECT                                                          41250020
*        *                        **                                  * 41260020
*                                                                     * 41270020
*                             RANGE SUBROUTINE                        * 41280020
*                                                                     * 41290020
*                                                                     * 41300020
*        THIS ROUTINE DOES VARIOUS SET UP WORK TO PROCESS A RANGE.    * 41310020
*        A RETURN CODE OF +0 SPECIFIES THAT THE RANGE OPTION IS         41320020
*  1)NOT VALID, 2)VALID BUT AN ERROR CONDITION IS DETECTED,             41330020
*  3)VALID OPTION BUT NOT SPECIFIED, 4)VALID RANGE PARAMETER TO BE      41340020
*  CHECKED FOR VALID DELIMITER.                                         41350020
*        A +4 RETURN CODE DENTOES THE FIRST VALUE OF A RANGE PARAMETER  41360020
*  DETECTED                                                             41370020
*  THE RETURN ADDRESS IS IN LINK1.                                    * 41380020
         SPACE                                                          41390020
*/*RANGE: E RANGE SET UP ROUTINE */                                     41392001
RANGE    DS    0H                      RANGE SET UP ROUTINE             41400020
*/* D (YES,RANGEY,NO,) RANGE IS A LEGAL OPTION */                       41402001
         TM    PCEFLGB2(XPCE),PCEFRNGE IS A RANGE A LEGAL OPTION        41410020
*/* R RETURN +0 */                                                      41412001
         BCR   CC8,LINK1               IF NO, RETURN +0 (1)             41420020
         SPACE                                                          41430020
*/*RANGEY: D (YES,,NO,VALUE1) A RANGE IS ALREADY BEING PROCESSED */     41432001
         TM    PFLAGS2,RNGEVAL1        ARE WE ALREADY PROCESSING A      41440020
*                                      RANGE PARAMETER                  41450020
         BZ    VALUE1                  NO, BRANCH                       41460020
*/*  D  (YES,RANGEZ,NO)  END OF BUFFER, DONT CHECK FOR COLON */  Y00971 41462001
         TM    PFLAGS,PFENDF           ARE WE AT END OF BUFFER   Y00971 41464001
         BO    RANGEZ                  YES, DONT CHECK FOR COLON Y00971 41466001
         SPACE                                                          41470020
*/* D (YES,,NO,RANGEZ) THIS IS RANGE DELIMITER (:) */                   41472001
         CLI   ZERO(XINPUT),COLON      IS THES A RANGE DELIMITER        41480020
*/* R RETURN +0 */                                                      41482001
         BCR   CC8,LINK1               YES, ERROR, RETURN CODE OF +0(2) 41490020
         SPACE                                                          41500020
*/*RANGEZ: P TURN ON BIT FOR SECOND VALUE OF RANGE */                   41502001
RANGEZ   DS    0H                                                Y00971 41504001
         TM    PFLAGS7,VALENDF         SHOULD FLAGS BE SET       Y02666 41506002
         BO    RANGRC0                 NO, RETURN                Y02666 41508002
         NI    PFLAGS2,HFF-RNGEVAL1    TURN OFF CONTROL BIT FOR FIRST   41510020
*                                      VALUE OF RANGE PARAMETER         41520020
         OI    PFLAGS2,RNGEVAL2        TURN ON CONTROL BIT FOR SECOND   41530020
*                                      VALUE OF RANGE PARAMETER         41540020
*/* R RETURN +4 */                                                      41542001
RANGRC0  DS    0H                                                Y02666 41544002
         BR    LINK1                   RETURN (4)                       41550020
         SPACE                                                          41560020
*/*VALUE1: D (YES,RANGEW,NO,) THIS IS RANGE DELIMITER (:) */            41562001
VALUE1   DS    0H                      * * * *                          41570020
         CLI   ZERO(XINPUT),COLON      IS THIS A RANGE DELIMITER        41580020
*/* R RETURN +0 */                                                      41582001
         BCR   CC7,LINK1               NO, BRANCH (3)                   41590020
         SPACE                                                          41600020
*/*RANGEW: P INDICATE PROCESSING A RANGE */                             41602001
         TM    PFLAGS7,VALENDF         SHOUL FLAGS BE SET        Y02666 41604002
         BO    RANGRC4                 NO, RETURN                Y02666 41606002
         OI    PFLAGS2,RNGEVAL1        INDICATE PROCESSING A RANGE      41610020
         LA    XINPUT,ONE(XINPUT)      TEMPORARILY INCREMENT SCAN REG   41620020
*                                      DECREMENTED BEFORE EXITING       41630020
*/* R RETURN +4 */                                                      41632001
RANGRC4  DS    0H                                                Y02666 41634002
         B     FOUR(LINK1)             RETURN +4                        41640020
         EJECT                                                          41650020
*********************************************************************** 41660020
*                                                                     * 41670020
*               CONDITIONAL GETMAIN SUBROUTINE                          41680020
*                                                                       41690020
*   A CONDITIONAL GETMAIN IS ISSUED FOR THE AMOUNT OF SPACE REQUESTED * 41700020
* FROM THE SUBPOOL INDICATED.  IF THE REQUESTED SPACE CANNOT BE       * 41710020
* ALLOCATED, A RETURN CODE OF 16 IS SET AND PROCESSING IS TERMINATED  * 41720020
* VIA CLEANUP.                                                        * 41730020
*                                                                     * 41740020
* ARG - R1=BYTE  0    SUBPOOL NUMBER                                  * 41750020
*          BYTES 1-3  NUMBER OF BYTES                                 * 41760020
*                                                                     * 41770020
* OUT - R1=ADDRESS OF ALLOCATED SPACE                                   41780020
*                                                                     * 41790020
* RETURN - LINK1                                                      * 41800020
*                                                                     * 41810020
* ERROR EXIT - CLEANUP                                                * 41820020
*                                                                     * 41830020
*   REGISTER RESTRICTIONS -                                           * 41840020
*                         R2 OR R3 CANNOT BE USED BY THIS ROUTINE     * 41850020
*                                                                     * 41860020
*********************************************************************** 41870020
         SPACE                                                          41880020
*/*GETCORE: E GET STORAGE ROUTINE */                                    41882001
GETCORE  DS    0H                      GET STORAGE ROUTINE              41890020
*/* P STORE LENGTH REQUESTED */                                         41892001
         ST    R1,PGETLNTH             PUT LENGTH REQUESTED IN GETMAIN  41900020
*                                         PARAMETER LIST                41910020
         MVC   PGETMDSP+ONE(ONE),PGETLNTH MOVE SUBPOOL FROM LENGTH WORD 41920020
*                                         TO GETMAIN PARM LIST          41930020
         NI    PGETLNTH,ZERO           CLEAR SUBPOOL INDICATOR FROM     41940020
*                                         LENGTH WORD                   41950020
         LA    R1,PGETLIST             PUT ADDR OF GETMAIN PLIST IN R1  41960020
         SPACE                                                          41970020
*/* P ISSUE GETMAIN */                                                  41972001
         GETMAIN EC,A=SUBRWORK,MF=(E,(1)) ISSUE CONDITIONAL GETMAIN     41980020
         SPACE                                                          41990020
*/* D (YES,,NO,GETERROR) STORAGE WAS ALLOCATED */                       41992001
         LTR   R15,R15                 WAS STORAGE ALLOCATED            42000020
         BNZ   GETERROR                NO, PROCESS ERROR                42010020
         SPACE                                                          42020020
*/* P SAVE ADDR OF AREA */                                              42022001
         L     R1,SUBRWORK             YES, PUT ADDR OF AREA IN R1      42030020
         LA    R1,ZERO(R1)             CLEAR HIGH ORDER BYTE            42040020
*/* R RETURN TO CALLER */                                               42042001
         BR    LINK1                   RETURN TO CALLER                 42050020
         SPACE                                                          42060020
*/*GETERROR: P SET RETURN CODE */                                       42062001
GETERROR DS    0H                      * * * *                          42070020
         MVI   RETCODE,RCNOCORE        OTHERWISE - REPLACE              42080020
*/* D (,CLEANUP) GO CLEANUP */                                          42082001
         B     CLEANUP                 GO CLEANUP AND RETURN            42090020
         EJECT                                                          42100020
*********************************************************************** 42110020
*                                                                     * 42120020
*          CHARACTER TYPE TEST UTLITY ROUTINE                         * 42130020
*                                                                     * 42140020
*   THIS SUBROUTINE CHECKS THE CURRENT INPUT CHARACTER FOR THE        * 42150020
* CHARACTER TYPE GIVEN IN R1. IF THE SPECIFIED CHARACTER TYPE IS      * 42160020
* FOUND RETURN IS TO LINK1+4. OTHERWISE RETURN IS TO LINK1.           * 42170020
*                                                                     * 42180020
*********************************************************************** 42190020
         SPACE                                                          42200020
*/*TYPETEST: E CHARACTER TEST ROUTINE */                                42202001
TYPETEST DS    0H                      CHARACTER TEST ROUTINE           42210020
         XR    R15,R15                 CLEAR WORK REG                   42220020
*/* P USE CURRENT CHAR AS OFFSET INTO TABLE */                          42222001
         IC    R15,ZERO(XINPUT)        USE CURRENT CHAR AS OFFSET INTO  42230020
*                                         TESTAB                        42240020
         A     R15,ATRTAB              GET ADDRESS IN TABLE             42250020
*/* P EXECUTE TEST UNDER MASK FOR CHARACTER */                          42252001
         EX    R1,TYPETM               EXECUTE TEST UNDER MASK OF       42260020
*                                         TYPEBYTE FOR CHAR             42270020
*                                         SPECIFICATION GIVEN IN R1     42280020
*/* D (YES,,NO,TESTA) TYPE MATCHES */                                   42282001
*/* R RETURN TO CALLER +4 */                                            42284001
*/*TESTA: R RETURN TO CALLER +0 */                                      42286001
         BC    CC5,FOUR(LINK1)         TYPE MATCHES, RETURN +4          42290020
         BR    LINK1                   TYPE DOESN'T MATCH,RETURN +0     42300020
         EJECT                                                          42310020
*********************************************************************** 42311003
*                                                                       42312003
* ADDRESS OF NEXT CSECT.                                                42313003
*                                                                       42314003
ADRCST2  DC    V(IKJEFP02)             ADDRESS OF THIRD CSECT           42315003
         SPACE                                                          42316003
IKJEFP02 CSECT                                                          42317003
*********************************************************************** 42318003
         SPACE                                                          42319003
*********************************************************************** 42320020
*                                                                     * 42330020
*                       INFORMATIONAL MESSAGE SUBROUTINE              * 42340020
*                                                                     * 42350020
*   THIS ROUTINE USES PUTLINE TO WRITE INFORMATIONAL MESSAGES TO THE  * 42360020
* TERMINAL USER.                                                      * 42370020
*   UPON ENTRY THE ENTERED DATA TO BE INSERTED IN THE MESSAGE MUST BE * 42380020
* BUILT INTO A SEGMENT AND THE ADDRESS OF THE SEGMENT STORED INTO     * 42390020
* SEGLIST + EIGHT. THE RETURN ADDRESS MUST BE IN LINK1.               * 42400020
*                                                                     * 42410020
*********************************************************************** 42420020
         SPACE                                                          42430020
*/*WRITER1: E WRITE INFORMATIONAL MESSAGE */                            42432001
WRITER1  DS    0H                      WRITE INFORMATIONAL MESSAGE      42440020
*/* P INDICATE NO HELP MESSAGES */                                      42442001
         MVC   SEGLIST(L'ENDCHAIN),ENDCHAIN INDICATE NO HELP MESSAGES   42450020
         SPACE                                                          42460020
*/*WRITER1C: P INDICATE TWO SEGMENT MSG */                              42462001
WRITER1C DS    0H                      * * * *                          42470020
         LA    R15,TWO                 INDICATE ONLY TWO SEGMENT MSG    42480020
*/* D (YES,,NO,WRITER1A) INVALID IDENT MSG BEING WRITTEN */             42482001
         CLI   MSGCODE,MSG6            IS AN INVALID IDENT MSG BEING    42490020
*                                         WRITTEN                       42500020
         BNE   WRITER1A                IF NO BRANCH                     42510020
         SPACE                                                          42520020
*/* P SWAP LAST TWO SEGMENTS */                                         42522001
         XC    SEGLIST+TWELVE(FOUR),SEGLIST+SIXTEEN SWAP THE LAST       42530020
         XC    SEGLIST+SIXTEEN(FOUR),SEGLIST+TWELVE TWO SEGMENT         42540020
         XC    SEGLIST+TWELVE(FOUR),SEGLIST+SIXTEEN ADDRESSES           42550020
*/* P INDICATE THREE SEGMENT MESSAGE */                                 42552001
         LA    R15,THREE               INDICATE A THREE SEGMENT MSG     42560020
*/* D (YES,WRITER1F,NO,) COBOL PCE'S - SKIP PRINT INHIBIT MODE CHECKS   42562401
*/**/                                                                   42562801
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 42563901
         BO    WRITER1F                YES, SKIP CHECKS FOR      F41448 42565801
*                                      PRINT INHIBIT MODE        F41448 42567701
*/* D (YES,,NO,WRITER1A) PRINT INHIBIT MODE DESIRED */                  42569601
         TM    PFLAGS5,INVFLG          INVALID BUFFER BEING PROCESSED?  42569701
*                                                                Y01156 42571201
         BZ    WRITER1H                YES,BYPASS MODE REQUESTED?Y01156 42574001
         TM    PFLAGS5,BYPASFLG        BYPASS MODE FOR PREVIOUS PCE?    42575501
*                                                                Y01156 42577001
         BO    WRITER1J                                          Y01156 42578501
         B     WRITER1A                                          Y01156 42579501
WRITER1H DS    0H                                                Y01156 42580001
         TM    PCEOPT(XPCE),PCEFPTBY   PRINT INIBIT MODE DESIRED  M1564 42581501
         BZ    WRITER1A                NO,BRANCH                  M1564 42583001
*/* P INDICATE MESSAGE TO WRITE */                                      42584501
WRITER1J DS    0H                                                Y01156 42586001
         MVI   MSGCODE,MSG18           INCICATE MESSAGE TO WRITE  M1564 42587501
*/* P INDICATE TWO SEGMENT MESSAGE */                                   42589001
         LA    R15,TWO                 INDICATE TWO SEGMENT MSG   M1564 42590501
         B     WRITER1F                                           M1564 42592001
         SPACE                                                          42593501
*/*WRITER1A: D (YES,WRITER1E,NO,) INVALID PASSWORD MSG BEING WRITTEN */ 42595001
WRITER1A DS    0H                      * * * *                          42596501
         CLI   MSGCODE,MSG9            IS AN INVALID PASSWORD MSG       42598001
*                                      BEING WRITTEN              M1564 42599501
         BE    WRITER1E                YES,BRANCH              @Z40RPKQ 42599800
         CLI   MSGCODE,MSG21           IS AN INVALID NEW PASSWORD       42600100
*                                      MESSAGE BEING WRITTEN   @Z40RPKQ 42600400
         BE    WRITER1E                YES,BRANCH                 M1564 42601001
*/*WRITER1F: P GET MESSAGE TO WRITE */                                  42602501
WRITER1F DS    0H                                                       42604001
         NI    PFLAGS5,HFF-BYPASFLG    TURN OFF BYPASS MODE FLAG Y01156 42605501
         ST    R15,SEGLIST+FOUR        STORE SEGMENT NUMBER IN LIST     42607001
         IC    R15,MSGCODE             GET MESSAGE CODE                 42608501
         L     R1,ADRMSGC              LOAD ADDRESS OF MESSAGE CSECT    42610020
         L     R15,ZERO(R15,R1)        POINT TO MESSAGE SEGMENT         42620020
         ST    R15,SEGLIST+EIGHT       STORE PROTOTYPE MESSAGE PTR IN   42630020
*                                         MESSAGE SEGMENT LIST          42640020
         MVC   PRIMSGID+FOUR(EIGHT),FOUR(R15) SAVE PRIMARY MESSAGE ID   42650020
*                                         FOR HELP MESSAGES             42660020
         SPACE                                                          42680020
*/* P ISSUE PUTLINE TO WRITE MESSAGE */                                 42682001
         PUTLINE PARM=PUTLINE,OUTPUT=(SEGLIST,MULTLVL),                *42690002
               MF=(E,SRPARAMS)         WRITE MESSAGE             Y02225 42700002
         SPACE                                                          42710020
*/* D (,PLRCACT) TAKE ACTION ON PUTLINE RETURN CODE */                  42712001
         B     PLRCACT                 TAKE APPROPRIATE ACTION FOR      42720020
*                                         PUTLINE RETURN CODE           42730020
         SPACE                                                          42740020
*                                                                       42750020
* FREE SPACE OBTAINED FOR MESSAGE SEGMENT. THE EXECUTION OF THE         42760020
* FREEMAIN IS DEPENDENT ON THE RETURN CODE RETURNED FROM PUTLINE.       42770020
*                                                                       42780020
*/*WRITER1D: P LOAD ADDRESS OF MESSAGE SEGMENT */                       42782001
WRITER1D DS    0H                      RETURN FROM RETURN CODE CHECKER  42790020
         TM    PFLAGS5,PSWDFLG         PASSWORD IN PROCESS?      Y02666 42792002
         BZ    WRITER1P                NO, CONTUNUE              Y02666 42794002
         BR    LINK1                   ELSE BYPASS FREEING MSG   Y02666 42796002
WRITER1P DS    0H                                                Y02666 42798002
         L     R1,SEGLIST+TWELVE       LOAD ADDRESS OF MESSAGE SEGMENT  42800020
*/* D (YES,WRITER1G,NO,) INVALID IDENT MSG WRITTEN */                   42802001
         CLI   MSGCODE,MSG6            WAS AN INVALID IDENT MSG WRITTEN 42810020
         BE    WRITER1G                IF YES,BRANCH              M1564 42820020
*/* D (YES,,NO,WRITER1B) INVALID IDENT MSG IN BYPASS MODE */            42820401
         CLI   MSGCODE,MSG18           WAS INVALID IDENT MSG IN BYPASS  42822020
*                                      MODE WRITTEN               M1564 42822420
         BNE   WRITER1B                IF NO BRANCH               M1564 42822820
         SPACE                                                          42830020
*/*WRITER1G: P LOAD ADDR OF CORE TO FREE */                             42832001
WRITER1G L     R1,SEGLIST+SIXTEEN      IF YES LOAD ADR. OF CORE TO FREE 42840020
         SPACE                                                          42850020
*/*WRITER1B: P LOAD LENGTH OF MSG SEGMENT */                            42852001
WRITER1B DS    0H                      * * * *                          42860020
         LH    R0,ZERO(R1)             LOAD LENGTH OF MESSAGE SEGMENT   42870020
         SPACE                                                          42880020
*/* P FREE THE STORAGE */                                               42882001
         FREEMAIN R,LV=(0),A=(1)       FREE THE STORAGE                 42890020
         SPACE                                                          42900020
*/* R RETURN TO CALLER */                                               42902001
         BR    LINK1                   RETURN TO CALLING ROUTINE        42910020
*/*WRITER1E: P INDICATE ONE SEGMENT MSG */                              42910401
WRITER1E LA    R15,ONE                 INDICATE ONE SEGMENT MSG   M1564 42912020
*/* D (,WRITER1F) CONTINUE */                                           42912401
         B     WRITER1F                                           M1564 42914020
         EJECT                                                          42920020
*********************************************************************** 42930020
*                                                                     * 42940020
*                       PROMPT MESSAGE SUBROUTINE                     * 42950020
*                                                                     * 42960020
*   THIS SUBROUTINE USES THE PUTGET I/O SERVICE ROUTINE TO PROMPT     * 42970020
* FOR ANY MISSING OR INVALID PARAMETERS. A MAJOR PORTION OF THIS      * 42980020
* SUBROUTINE IS DEVOTED TO THE HANDLING OF HELP MESSAGES. PARSE WILL  * 42990020
* PASS THE HELP MESSAGES SUPPLIED BY THE CP ON EITHER THE IKJIDENT    * 43000020
* OR IKJPOSIT MACROS ALONG WITH THE PRIMARY MESSAGE TO THE PUTGET     * 43010020
* I/O SERVICE ROUTINE. EXTENSIVE USE IS MADE OF THE TEXT INSERTION    * 43020020
* FEATURE OF THE I/O ROUTINES.                                        * 43030020
*   IF THE TERMINAL USER RESPONDED WITH A NULL LINE AND IF THE        * 43040020
* PARAMETER IS REQUIRED, PROMPTING CONTINUES UNTIL A PARAMETER IS     * 43050020
* ENTERED. IF NOT REQUIRED, AND A DEFAULT WAS SPECIFIED A EXIT TO     * 43060020
* THE PROMPTQ ROUTINE IS TAKEN AND THE DEFAULT IS RETURNED AS NEW     * 43070020
* DATA TO BE PARSED. IF NEITHER OF THE ABOVE, THE INPUT PUSHDOWN STACK* 43080020
* IS POPPED.                                                          * 43090020
*                                                                     * 43100020
*********************************************************************** 43110020
         SPACE                                                          43120020
*/*WRITER2: E PROMPT ROUTINE */                                         43122001
WRITER2  DS    0H                      PROMPT ROUTINE                   43130020
*/* P INDICATE ONE WEGMENT MESSAGE */                                   43132001
         LA    R0,ONE                  INDICATE A ONE SEGMENT MESSAGE   43140020
         SPACE                                                          43150020
*/*WRITER2G: P STORE SEGMENT NUMBER FOR PRIMARY MSG */                  43152001
WRITER2G DS    0H                      ENTERED HERE WHEN OUTPUTING A    43160020
*                                         TWO SEGMENT MESSAGE - R0      43170020
*                                         CONTAINS SEGMENT NUMBER       43180020
         ST    R0,SEGLIST+FOUR         STORE SEGMENT NUMBER FOR PRIMARY 43190020
*                                         MESSAGE                       43200020
         ST    LINK1,PLINKSV1          SAVE RETURN ADDRESS              43210020
*/* S PUSHI: PUSH INPUT STACK */                                        43212001
         BAL   LINK1,PUSHI             ADD TO INPUT STACK               43220020
         SPACE                                                          43230020
*/*WRITER2A: P GET MESSAGE CODE */                                      43232001
WRITER2A DS    0H                      BRANCHED TO WHEN PROMPTING       43240020
*                                         WITH ENTER MESSAGE - SEGMENT  43250020
*                                         NUMBER STORED INTO SEGLIST +  43260020
*                                         FOUR BY CALLER                43270020
         XR    R15,R15                 CLEAR WORK REGISTER              43280020
         STH   R15,SAVLSLEN            CLEAR SAVE AREA FOR CORE SIZE    43290020
*                                         OBTAINED FOR HELP MESSAGES    43300020
         IC    R15,MSGCODE             GET MESSAGE CODE                 43310020
         L     R1,ADRMSGC              LOAD ADDRESS OF MESSAGE CSECT    43320020
         L     R15,ZERO(R15,R1)        POINT TO MESSAGE SEGMENT         43330020
         ST    R15,SEGLIST+EIGHT       STORE PTR TO MESSAGE SEGMENT     43340020
         MVC   SEGLIST(L'ENDCHAIN),ENDCHAIN INDICATE NO HELP MESSAGES   43350020
         SPACE                                                          43360020
*                                                                       43370020
* PASS ALONG SECOND LEVEL HELP MESSAGES IF USER HAD ANY.                43380020
*                                                                       43390020
*/* D (YES,,NO,WRITER2R) 2ND LEVEL MSG SUPPLIED BY VALIDITY CK */       43392001
         TM    PFLAGS4,PFVCMSG          HAS A SECOND LEVEL MESSAGE BEEN 43400020
*                                         SUPPLIED BY A VALIDITY CHECK  43410020
         BZ    WRITER2R                NO, CONTINUE PROCESSING          43420020
         SPACE                                                          43430020
         LA    R1,ONE                  LOAD THE NUMBER OF SECOND LEVEL  43450020
*                                         MESSAGES AVAILABLE FROM A     43460020
*                                         VALIDITY CHECK ROUTINE        43470020
         L     R2,VALMSG               PICK UP ADDRESS OF MESSAGE SEG-  43480020
*                                         MENT FOR PUTGET               43490020
*/* D (,VCHELP) PROCESS MESSAGE */                                      43492001
         B     VCHELP                  PROCESS MESSAGE                  43500020
         SPACE                                                          43510020
*/*WRITER2R: D (YES,,NO,WRITER2B) USER SPECIFIED HELP MSGS */           43512001
WRITER2R DS    0H                      * * *                            43520020
         TM    PCEFLGB1(XPCE),PCEFHELP DID THE USER SPECIFY HELP MSGS.  43530020
         BZ    WRITER2B                BIT ZERO IF NO --- BRANCH        43540020
*/* D (NO,WRITR2R1,YES,) PROCESSING COBOL PCE'S? */                     43540401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 43542001
         BZ    WRITR2R1                NO-CONTINUE NORMAL PARSE  F41448 43544001
*/* D (YES,TERMPCE,NO,) IS THIS A TERM PCE? */                          43544401
*/* P OPER OR RESERVED WORD - PARM TYPE AT OFFSET 6 */                  43544801
*/* P BUMP PASSED PARM TYPE FIELD */                                    43545201
         TM    PCEFLGB1(XPCE),HA0      IF MISED-KNOW IS A TERM   F41448 43546001
*                                      PCE. GO TO ROUTINE TO     F41448 43548001
*                                      POSITION TO TERM HELP     F41448 43548401
*                                      MESSAGES.                 F41448 43548801
         BM    TERMPCE                 GO TO ROUTINE TO POSIT-   F41448 43548901
*                                      ION TO TERM HELP MESSAGES F41448 43549001
         MVC   PDWORD(TWO),SIX(XPCE)   IF NOT A TERM, OPER AND   F41448 43549201
*                                      RESRVD WORD PARM TYPE AT  F41448 43549601
         LH    R15,PDWORD              LOAD FOR INCREMENTING     F41448 43549701
*/* D (YES,NOMAXL, NO,) IS THIS AN OPER - POSITIONED AT P/D DATA */     43549801
         LA    R15,SIX(R15)            BUMP PASSED THE PAREMETER F41448 43549901
*                                      TYPE FIELD IN THE PCE     F41448 43550001
         TM    PCEFLGB1(XPCE),HE0      IF ALL THESE BITS ON -    F41448 43553901
*                                      KNOW THIS IS AN OPER PCE  F41448 43555901
         BM    NOMAXL                  IF NOT, KNOW IS A RSVRD   F41448 43557901
*                                      WORD AND WE ARE POSIT-    F41448 43558601
*                                      IONED AT THE PROMPT/      F41448 43559001
*                                      DEFAULT DATA              F41448 43559401
*/* P (,NOMAXL) IF OPER - BUMP PASSED 8 BYTES OF OFFSET FIELDS */       43559501
         LA    R15,EIGHT(R15)          IF AN OPER, MUST BUMP     F41448 43559801
*                                      PASSED 8 BYTES OF OFFSETS F41448 43559901
         B     NOMAXL                  BRANCH TO PROMPT/DEFAULT  F41448 43563201
*                                      PROCESSING                F41448 43565201
*/*TERMPCE: P (,NOMAXL) IF TERM - BUMP PASSED PARM TYPE FIELD */        43565601
TERMPCE  MVC   PDWORD(TWO),SEVEN(XPCE) IF IS A TERM PCE, THE     F41448 43566401
*                                      PARM TYPE FIELD IS AT     F41448 43566501
*                                      OFFSET SEVEN              F41448 43566601
         LH    R15,PDWORD              ALLIGN FOR INCREMENTING   F41448 43566701
         LA    R15,SEVEN(R15)          INCREMENT PASSED THE PARM F41448 43567801
*                                      TYPE FIELDS - NOW POINT-  F41448 43569801
*                                      ING AT LENGTH OF PROMPT/  F41448 43569901
*                                      DEFAULT DATA              F41448 43572701
         B     NOMAXL                  GOTO ROUTINE TO BYPASS    F41448 43574701
*                                      THE PRMPT/DEFLT DATA      F41448 43575101
         SPACE                                                          43576001
*/*WRITR2R1: D (YES,,NO,NOTREQ) IDENT PCE WITH PROMPT SPECIFIED */      43578801
WRITR2R1 TM    PCEFLGB1(XPCE),PCEFIDNT+PCEFPRPT IS THIS AN IKJIDENT PCE 43581601
*                                         WITH PROMPT SPECIFIED         43584401
         BZ    NOTREQ                  IF NO FORGET TESTS FOR PRINT     43587201
*                                         INHIBIT MODE                  43590020
         SPACE                                                          43600020
*/* D (YES,ALLOWHLP,NO,) PRINT INHIBIT MODE DESIRED */                  43602001
         TM    PCEOPT(XPCE),PCEFPTBY   YES - ITS A REQUIRED PARAMETER   43610020
*                                         BEING PROMPTED FOR. IS PRINT  43620020
*                                         INHIBIT MODE DESIRED          43630020
         BO    ALLOWHLP                IF YES BRANCH - ALLOW HELP       43640020
*                                         MESSAGES                      43650020
         SPACE                                                          43660020
*/*NOTREQ: D (YES,WRITER2B,NO,) BYPASS MODE TO BE USED */               43662001
NOTREQ   DS    0H                      * * * *                          43670020
         TM    PFLAGS,PFBYPAS          IS BYPASS MODE TO BE USED        43680020
         BO    WRITER2B                IF YES SKIP HELP MESSAGE SUPPORT 43690020
         SPACE                                                          43700020
*/*ALLOWHLP: D (YES,POSITHLP,NO,) IKJPOSIT PCE */                       43702001
ALLOWHLP DS    0H                      * * * *                          43710020
         MVC   PDWORD(ONE),PCEFLGB1(XPCE) ISOLATE PCE TYPE INDICATORS   43720020
         NI    PDWORD,HE0              CLEAR OTHER BITS IN BYTE         43730020
         CLI   PDWORD,EIGHT*(POSITBB-MAINB) IS IT AN IKJPOSIT PCE       43740020
         BE    POSITHLP                IF YES BRANCH                    43750020
         SPACE                                                          43760020
*                                      IT MUST BE AN IKJIDENT PCE       43770020
*/* P MUST BE IKJIDENT - LOAD TYPE LENGTH */                            43772001
         MVC   PDWORD(TWO),PCEPARMT(XPCE) ALIGN PARAMETER TYPE LENGTH   43780020
*                                         ON PROPER BOUNDARY            43790020
         LH    R15,PDWORD                 LOAD THE LENGTH               43800020
         LA    R15,PCEPARMT(R15)       BUMP PTR BY BASIC IKJIDENT SIZE  43810020
*/* D (YES,,NO,NOMAXL) MAXLNTH WAS SPECIFIED */                         43812001
         TM    PCEOPT(XPCE),PCEFMAXL   WAS MAXLNTH SPECIFIED            43820020
         BZ    NOMAXL                  IF NO SKIP ADDING ITS LENGTH     43830020
         SPACE                                                          43840020
*/* P ADD LENGTH TO TOTAL */                                            43842001
         LA    R15,ONE(R15)            IF YES ADD LENGTH TO TOTAL       43850020
         SPACE                                                          43860020
*/*NOMAXL: D (YES,,NO,HAVEHELP) PROMPT/DEFAULT DATA SPECIFIED */        43862001
NOMAXL   DS    0H                      * * * *                          43870020
         TM    PCEFLGB1(XPCE),PCEFPRPT+PCEFDFLT WAS PROMPT/DEFAULT DATA 43880020
*                                         SPECIFIED                     43890020
         BZ    HAVEHELP                IF ZERO NO --- BRANCH            43900020
         SPACE                                                          43910020
         XR    R14,R14                 CLEAR WORK REGISTER              43920020
*/* P LOAD LENGTH OF DATA */                                            43922001
         IC    R14,ZERO(R15,XPCE)      LOAD LENGTH - 1 OF DATA          43930020
         LA    R15,TWO(R15,R14)        BUMP TOTAL BY LENGTH             43940020
*/* D (,HAVEHELP) POSITIONED TO HELP MSGS */                            43942001
         B     HAVEHELP                SHOULD BE POSITIONED TO HELP     43950020
*                                         MESSAGES NOW                  43960020
         SPACE                                                          43970020
*/*POSITHLP: D (,NOMAXL) CHECK FOR PROMPT/DEFAULT DATA */               43972001
POSITHLP DS    0H                      * * * *                          43980020
         LA    R15,PCEPOST+ONE         BUMP PTR BY BASIC IKJPOSIT       43990020
*                                         LENGTH                        44000020
         B     NOMAXL                  CHECK FOR PROMPT/DEFAULT DATA    44010020
         SPACE                                                          44020020
*/*HAVEHELP: P GET NUMBER OF HELP MSGS */                               44022001
HAVEHELP DS    0H                      AT THIS POINT R15 SHOULD BE      44030020
*                                         POSITIONED TO HELP MESSAGES   44040020
*/* D (NO,HELPCONT,YES,) PROCESSING COBOL PCE'S */                      44040401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 44042001
         BZ    HELPCONT                IF NOT CONTINUE           F41448 44044001
*/* D (NO,HELPCONT, YES,) IS IT A TERM PCE? */                          44044401
         TM    PCEFLGB1(XPCE),HA0      IF COBOL, IS IT A TERM    F41448 44046001
         BC    CC9,HELPCONT            IF NOT, CONTINUE          F41448 44048001
*/* D (NO,HELPCONT,YES,) IS RESVD WORD OR SUBSCRIPT SPECIFIED? */       44048101
         TM    PCEFLGB2(XPCE),H18      IS RESVD WORD OR SUBS-    F41448 44048401
*                                      SCRIPT SPECIFIED?         F41448 44048801
         BC    CC8,HELPCONT            IF NOT, CONTINUE          F41448 44049201
*/* P INCREMENT PASSED THE OFFSET FIELDS FOR RSVWD WRD OR SUBSCRPT */   44049301
         BC    CC4,UP2                 IF ONLY ONE SPCEDIFIED,   F41448 44049601
*                                      INCREMENT R15 BY TWO      F41448 44049701
         LA    R15,TWO(R15)            IF BOTH SPECIFIED, INC-   F41448 44049801
*                                      REMENT R15 BY FOUR        F41448 44049901
UP2      LA    R15,TWO(R15)            INCREMENT R15 BY TWO      F41448 44053201
HELPCONT XR    R1,R1                   CLEAR WORK REGISTER              44056701
         IC    R1,TWO(R15,XPCE)        LOAD NUMBER OF HELP MESSAGES     44060020
*/*HELPCONT: P GET TRUE ADDR OF PCE HELP DATA */                        44062001
         LA    R2,THREE(R15,XPCE)      SAVE TRUE ADDRESS OF PCE         44070020
*                                         HELP DATA                     44080020
         SPACE                                                          44090020
*/*VCHELP: P VALID CHK SPCEIFIED 2ND LEVEL MSG */                       44092001
VCHELP   DS    0H                      BRANCHED TO WHEN A VALIDITY      44100020
*                                         CHECK ROUTINE SPECIFIED A     44110020
*                                         SECOND LEVEL MESSAGE          44120020
         LR    R3,R1                   SAVE NUMBER OF HELP MESSAGES FOR 44130020
*                                         LOOP CONTROL                  44140020
         MH    R1,LISTLEN              MULTIPLY NUMBER OF MESSAGES BY   44150020
*                                         AMOUNT OF STORAGE EACH MSG    44160020
*                                         WILL TAKE                     44170020
         STH   R1,SAVLSLEN             SAVE CORE SIZE FOR FREEMAIN      44180020
*/* S GETCORE: GET STORAGE FOR MSGS */                                  44182001
         BAL   LINK1,GETCORE           BRANCH TO GET STORAGE ROUTINE    44190020
         SPACE                                                          44200020
         ST    R1,SEGLIST              SAVE PTR TO OBTAINED CORE        44210020
         SPACE                                                          44220020
*                                                                       44230020
* BUILD MULTI-LEVEL MESSAGE CHAIN IN THE OBTAINED CORE. THE FIRST WORD  44240020
* OF EACH ELEMENT POINTS TO THE NEXT ELEMENT, THE LAST ELEMENT POINTER  44250020
* CONTAINS X'FF000000'. THE SECOND WORD CONTAINS THE NUMBER OF SEGMENTS 44260020
* IN THE ELEMENT. THE THIRD WORD POINTS TO THE FIRST MESSAGE SEGMENT    44270020
* WHICH IS THE HELP MESSAGE ITSELF LOCATED IN THE PCE. THE LAST         44280020
* WORD POINTS TO THE SECOND MESSAGE SEGMENT WHICH IS THE WORD 'ENTER'   44290020
* WITH THE LAST PRIMARY MESSAGE ID AS A PREFIX.                         44300020
* HELP MESSAGES ARE GENERATED BY THE IKJPOSIT AND IKJIDENT MACROS IN    44310020
* THE FOLLOWING FORM -                                                  44320020
*                                                                       44330020
*              ********************************************             44340020
*              /  LENGTH     /  X'0000'    /   TEXT       /             44350020
*              ********************************************             44360020
*               0             2             4                           44370020
*                                                                       44380020
* SINCE THE MESSAGE ID/MESSAGE SEGMENT SEGMENT CONTAIN AN OFFSET OF     44390020
* ZERO INSERTED BEFORE THE HELP MESSAGE SEGMENT. IF IT WERE NOT DONE    44400020
* IN THIS MANNER THE WORD 'ENTER' COULD NOT BE REPLACED WITH 'MISSING'  44410020
* IF THE USER WAS IN NO-PROMPT MODE.                                    44420020
*                                                                       44430020
*/*NEXTLIST: P STORE HELP MSG SEGMENT ADDR */                           44432001
NEXTLIST DS    0H                      * * * *                          44440020
         ST    R2,SIXTEEN(R1)            STORE THE HELP MESSAGE SEGMENT 44450001
*                                         ADDRESS - HELP MESSAGE        44460020
*                                         SEGMENTS ARE CONSTRUCTED BY   44470020
*                                         THE PARSE MACROS              44480020
         LA    R0,CRMESS               GET NLCHAR PTR            Y05020 44480101
         ST    R0,EIGHT(R1)            PLACE IN SEGMENT LIST     Y05020 44480201
*/* D (YES,,NO,WRITER2S) 2ND LEVEL MSG SUPPLIED BY VALID CHK */         44480401
         TM    PFLAGS4,PFVCMSG         HAS SECOND LEVEL MESSAGE BEEN    44482020
*                                         SUPPLIED BY VALIDITY EXIT     44484020
         BZ    WRITER2S                NO, CONTINUE                     44486020
*/* P TURN OFF INDICATOR */                                             44486401
         LA    R0,TWO                  LOAD THE NUMBER OF SEGMENTS      44488401
         ST    R0,FOUR(R1)             STORE NUMBER IN ELEMENT          44488520
         ST    R2,TWELVE(R1)           PLACE VCE MSG IN LIST   Y05020   44489901
*/* D (,WRITER2T) CONTINUE */                                           44491601
         B     WRITER2T                CONTINUE                         44493001
         SPACE                                                          44494401
*/*WRITER2S: P LOAD FIRST SEGMENT ADDR */                               44495801
WRITER2S DS    0H                      * * * *                          44497201
         LA    R0,THREE                LOAD THE NUMBER OF SEGMENTS      44498601
         ST    R0,FOUR(R1)             STORE SEGMENT NUMBER IN ELEMENT  44500020
         LA    R0,PRIMSGID             LOAD FIRST SEGMENT ADDRESS       44510020
*/* P STORE IT IN ELEMENT */                                            44512001
         ST    R0,TWELVE(R1)           STORE IT IN ELEMENT              44520020
         LA    R0,LENMLLST(R1)         GET PTR TO NEXT ELEMENT          44530020
         ST    R0,ZERO(R1)             STORE PTR TO NEXT ELEMENT        44540020
         LR    R1,R0                   BUMP INDEX REGISTER TO NEXT      44550020
*                                         ELEMENT                       44560020
         MVC   PDWORD(TWO),ZERO(R2)    ALIGN LENGTH OF CURRENT HELP     44570020
*                                         MESSAGE ON PROPER BOUNDARY    44580020
*/* P POINT TO NEXT HELP MSG IF ANY */                                  44582001
         AH    R2,PDWORD               BUMP PCE PTR TO NEXT HELP        44590020
*                                         MESSAGE IF ANY                44600020
*/* P REDUCE HELP MSG COUNT */                                          44602001
         BCT   R3,NEXTLIST             REDUCE HELP MESSAGE COUNT AND    44610020
*/* D (YES,,NO,NEXTLIST) LAST ONE */                                    44612001
*                                         BRANCH IF NOT LAST ONE --- IF 44620020
*                                         LAST ONE WAS PROCESSED FALL   44630020
*                                         THROUGH                       44640020
         SPACE                                                          44650020
         SH    R1,LISTLEN              REDUCE ELEMENT PTR TO POINT TO   44660020
*                                         LAST ELEMENT                  44670020
         SPACE                                                          44672020
*/*WRITER2T: P INDICATE END OF CHAIN */                                 44672401
WRITER2T DS    0H                      * * * *                          44674020
         MVC   ZERO(L'ENDCHAIN,R1),ENDCHAIN INDICATE END OF CHAIN       44680020
         SPACE                                                          44690020
*/*WRITER2B: D (YES,,NO,NOTIDPR) IKJIDENT PCE WITH PROMPT SPECIFIED */  44692001
WRITER2B DS    0H                      BRANCHED TO TO REISSUE PROMPT    44700020
*                                         MESSAGE OR BYPASS HELP MSGS.  44710020
*/* D (YES,NOTIDPR,NO,) IF COBOL MODE - NO TESTS FOR PRINT INHIBIT MODE 44720401
*/* */                                                                  44720801
         TM    CBFLAGS1,COBOLMOD       ARE WE PROCESSING COBOL   F41448 44722001
*                                      PCE'S?                    F41448 44724001
         BO    NOTIDPR                 IF YES, FORGET TESTS FOR  F41448 44726001
*                                      PRINT INHIBIT MODE - GO   F41448 44728001
*                                      DIRECTLY TO WRITE OUT     F41448 44728401
*                                      MESSAGE                   F41448 44728801
         TM    PCEFLGB1(XPCE),PCEFIDNT+PCEFPRPT IS THIS AN IKJIDENT PCE 44730020
*                                         WITH PROMPT SPECIFIED         44740020
         BZ    NOTIDPR                 IF NO FORGET TESTS FOR PRINT     44750020
*                                         INHIBIT MODE                  44760020
         SPACE                                                          44770020
*/* D (YES,BYPASS,NO,) PRINT INHIBIT MODE DESIRED */                    44772001
         TM    PCEOPT(XPCE),PCEFPTBY   YES - ITS A REQUIRED PARAMETER   44780020
*                                         BEING PROMPTED FOR. IS PRINT  44790020
*                                         INHIBIT MODE DESIRED          44800020
         BO    BYPASS                  IF YES BRANCH - ALLOW HELP       44810020
         SPACE                                                          44820020
*/* D (YES,BYPASS,NO,) BYPASS MODE TO BE USED */                        44822001
         TM    PFLAGS,PFBYPAS          IS BYPASS MODE TO BE USED        44830020
         BO    BYPASS                  IF YES BRANCH                    44840020
         SPACE                                                          44850020
*/*NOTIDPR: P ISSUE PUTGET */                                           44852001
NOTIDPR  DS    0H                      * * * *                          44860020
         TM    PFLAGS5,SUBFLG          SUBFIELD BEING PROCESSED? Y01156 44862001
         BZ    PUTGT                NO, PROMPT WITH TERMPUT=EDIT        44864001
*                                      OPTION                    Y01156 44866001
         CLI   MSGCODE,MSG3            IS REENTER MSG TO BE WRITTEN?    44868001
*                                                                Y01156 44868101
         BE    WRITEKEY                YES, PROMPT WITH ASIS OPTION     44868401
*                                                                Y01156 44868501
         CLI   MSGCODE,MSG3A           IS REENTER+ MSG TO BE WRITTEN?   44868801
*                                                                Y01156 44868901
         BE    WRITEKEY                YES, PROMPT WITH ASIS OPTION     44869201
*                                                                Y01156 44869301
PUTGT    DS    0H                                                Y01156 44869601
         NI    PFLAGS4,HFF-PFVCMSG     TURN OFF VCE MSG FLAG     Y05020 44869701
         PUTGET PARM=PUTGET,OUTPUT=(SEGLIST,MULTLVL),                  *44870002
               TERMPUT=(EDIT),MF=(E,SRPARAMS) WRITE/READ FUNCTIONY02666 44880002
         SPACE                                                          44890020
*/*WRITER2C: D (,PGRCACT) TAKE ACTION FOR PUTGET RETURN CODE */         44892001
WRITER2C DS    0H                      BRANCHED TO BY BYPASS ROUTINE    44900020
         B     PGRCACT                 TAKE APPROPRIATE ACTION FOR      44910020
*                                         PUTGET RETURN CODE            44920020
WRITEKEY DS    0H                                                       44922001
         LA    R0,ONE                  GET NUMBER OF SEGMENTS    Y01156 44922201
         ST    R0,SEGLIST+FOUR         AND STORE                 Y01156 44922301
         TM    PFLAGS4,PFVCMSG         IS VCE MSG ENTERED?       Y05020 44922401
         BO    WRITEON                 YES, PROCESS              Y05020 44922501
         SR    R15,R15                 CLEAR                     Y05020 44922601
         IC    R15,MSGCODE             GET MSG INDEX             Y05020 44922701
         L     R2,ADRMSGC              GET MSG CSECT PTR         Y05020 44922801
         L     R15,ZERO(R15,R2)        GET MSG PTR               Y05020 44922901
         ST    R15,SEGLIST+EIGHT       STORE                     Y05020 44923001
WRITEON  DS    0H                                                Y05020 44923201
         NI    PFLAGS4,HFF-PFVCMSG     TURN OFF VCE MSG FLAG     Y05020 44923301
         L     R15,UPTADDR             GET UPT PTR               Y05020 44923602
         TM    TWELVE(R15),INVPRMPT    IS NO PROMPT SPECIFIED?   Y05020 44923702
         BO    MSNGMSG                 GO TO MISSING MSG RTN.    Y05020 44923802
         L     R15,ECTADDR             GET ECT PTR               Y02666 44923902
         USING ECT,R15                 ESTABLISH ADDRESSABILITY  Y02666 44924802
         TM    ECTSWS,ECTBKGRD         RUNNING IN BACKGROUND    Z40PQRD 44925200
         BZ    FOREGRND                NO, TEST FOR PROMPT      Z40PQRD 44925700
         L     R15,ECTIOWA             GET OUTPUT AREA PTR      Z40PQRD 44925900
         DROP  R15                     DROP ECT ADDRESSABILITY  Z40PQRD 44926100
         USING IOSRL,R15                                        Z40PQRD 44926600
         USING INSTACK,R14                                      Z40PQRD 44926800
         L     R14,IOSTELM             GET TOP ELEMENT OF STACK Z40PQRD 44927000
         DROP  R15                                              Z40PQRD 44927500
         TM    INSCODE,INSEXEC         PROCESSING CLIST         Z40PQRD 44927700
         BZ    MSNGMSG                 NO,THEN CANNOT PROMPT    Z40PQRD 44927900
         TM    INSCODE,INSPROM         IS PROMPT ALLOWED        Z40PQRD 44928400
         BO    WRITIT                  IF SO,PROMPT             Z40PQRD 44928600
         DROP  R14                                              Z40PQRD 44928800
FOREGRND DS    0H                      FOREGROUND PROCESSING    Z40PQRD 44929300
         USING ECT,R15                                          Z40PQRD 44929500
         L     R15,ECTIOWA             GET OUTPUT AREA PTR       Y02666 44929700
         DROP  R15                                                      44930200
         USING IOSRL,R15                                                44930400
         USING INSTACK,R14                                              44930600
         L     R14,IOSTELM             GET TOP ELEMENT PTR       Y02666 44932002
         DROP  R15                                                      44932902
         TM    INSCODE,INSPROC         INSTORAGE PROC?           Y02666 44933802
         BZ    WRITIT                  NO,PROMPT THE USER        Y02666 44934702
         TM    INSCODE,INSPROM         PROMPT IN CLIST?          Y02666 44935602
         BZ    MSNGMSG                 NO, BYPASS PROMPTING      Y02666 44937202
         DROP  R14                                                      44937402
WRITIT   DS    0H                      CONTINUE MSG SETTUP       YM3610 44937602
         L     R2,SEGLIST              SAVE FIRST WORD OF SEGLISTY05020 44938002
         MVC   SEGLIST(L'ENDCHAIN),ENDCHAIN INDICATE NO HELP MSGSY05020 44938202
*                                                                       44938602
         PUTLINE PARM=PUTLINE,OUTPUT=(SEGLIST,MULTLVL),                *44939302
               MF=(E,SRPARAMS)                                   Y02225 44940002
         ST    R2,SEGLIST              RESTORE SEGLIST           Y05020 44941002
         LTR   R15,R15                 IS RETURN CODE ZERO?      Y05020 44942002
         BNZ   PLRCACT                 NO, GO TEST RETURN CODE   Y05020 44944202
         LH    R14,KEYLEN              GET LENGTH OF USER KEYWD  Y01156 44945602
         LA    R14,SEVEN(R14)          ADD HEADER AND THREE BYTES FOR   44946302
*                                      NLCHAR AND COLON          Y01156 44947302
         STH   R14,KEYBUFLN            STORE BUFFER LENGTH       Y01156 44948402
         LA    R14,ZERO                GET KEYWORD OFFSET        Y05020 44949802
         STH   R14,KEYBUFOF            STORE OFFSET              Y01156 44951202
         L     R14,KEYPTR              GET PTR TO KEYWORD        Y01156 44952602
         LH    R1,KEYLEN               GET LENGTH                Y01156 44953602
         BCTR  R1,ZERO                 DECREMENT FOR EXECUTE IN. Y01156 44954602
         EX    R1,KEYWDMVC             MOVE DATA TO BUFFER       Y01156 44956802
         LA    R14,KEYDATA             GET PTR TO KEYDATA        Y01156 44958202
         MVI   ZERO(R14),BLNK          PLACE BLANK  IN BUFFER    Y05020 44959002
         AH    R14,KEYLEN              GET PTR TO BYTE BEYOND    Y01156 44961002
         MVI   ONE(R14),COLON          PUT COLON IN BUFFER       Y02666 44962402
         MVI   TWO(R14),BLNK           PLACE BLANK  IN BUFFER    Y05020 44963102
         LA    R0,KEYBUF               GET PTR TO KEYWORD BUFFER Y01156 44963802
         ST    R0,SEGLIST+EIGHT        AND STORE IN MESSAGE LIST Y01156 44965202
         PUTGET     PARM=PUTGET,OUTPUT=(SEGLIST,MULTLVL),              *44968002
               TERMPUT=(ASIS),MF=(E,SRPARAMS)                    Y02225 44969402
         B     PGRCACT                  PROCESS THE RETURN CODE         44970802
*                                      FROM PUTGET               Y01156 44972202
         SPACE                                                          44973602
*/*WRITER2J: D (YES,,NO,WRITER2K) 2ND VALUE OF RANGE BEING PROCESSED */ 44975002
WRITER2J DS    0H                      * * * *                          44976402
         SPACE                                                          44977802
         TM    PFLAGS2,RNGEVAL2+RNGEVAL1 IS THE 2ND VALUE OF A RANGE    44979202
*                                         BEING PROCESSED               44980602
         BZ    WRITER2K                NO, CONTINUE                     44982002
         SPACE                                                          44983402
*                                                                       44984802
* ERASE POSSIBLE 1ST HALF OF RANGE ALREADY IN THE PDE.  RANGE IS        44986202
* ALLOWED ONLY FOR AN IDENT, ADDRESS, OR VALUE PCE.                     44987602
*                                                                       44989002
         XR    R2,R2                   CLEAR WORK REGISTER              44990402
*/* P GET PDE SIZE FOR RANGE */                                         44991802
         IC    R2,PPCOUNT              GET PDE SIZE STORED BY           44993202
*                                         ROUTINES WHICH PROCESS        44994602
*                                         RANGES                        44996002
         MVC   PDWORD(TWO),PCEPDEO(XPCE)  ALIGN PDE OFFSET ON PROPER    44997402
*                                         BOUNDARY                      44998802
         LH    R3,PDWORD               LOAD THE PDE OFFSET              45000202
         A     R3,XPDL                 GET TRUE ADDRESS OF PDE          45001602
*/* P ERASE PDE */                                                      45003002
         EX    R2,ERASEXC              ERASE THE PDE                    45004402
         SPACE                                                          45005802
*/*WRITER2K: P LOAD INPUT BUFFER RETURN ADDRESS */                      45007202
WRITER2K DS    0H                      * * * *                          45008602
         L     R3,PUTGET+TWELVE        LOAD INPUT BUFFER RETURN ADDRESS 45010002
         MVC   PDWORD(TWO),ZERO(R3)    ALIGN LENGTH OF DATA ON PROPER   45011002
*                                         BOUNDARY                      45012002
*/* D (YES,,NO,PROMPGO) RESPONSE IS NULL */                             45013002
         CLC   PDWORD(TWO),H4          IS THE RESPONSE NULL             45014002
         BH    PROMPGO                 IF NOT CONTINUE PROCESSING       45015002
         SPACE                                                          45016002
*                                                                       45020020
* NULL RESPONSE --- FREE PUTGETS BUFFER AND DETERMINE WHAT TO           45030020
* RETURN TO CALLER.                                                     45040020
*                                                                       45050020
         LR    R1,R3                   MOVE BUFFER ADDRESS              45060020
         LH    R0,PDWORD               LOAD BUFFER SIZE                 45070020
         AL    R0,SUBPOOLN             ADD SUBPOOL NUMBER TO SIZE       45080020
         SPACE                                                          45090020
*/* P ISSUE FREEMAIN TO FREE PUTGETS BUFFER */                          45092001
         FREEMAIN R,LV=(0),A=(1)       FREE BUFFER                      45100020
         SPACE                                                          45110020
*/*WRITER2D: D (YES,WRITER2F,NO,) PROMPTING FOR PASSWORD */             45112001
WRITER2D DS    0H                      * * * *                          45120020
*                                                                 M0911 45120420
         NI    PFLAGS4,HFF-PFNOPOP     TURN OFF POSSIBLE NOPOP FLAG     45122020
         TM    PFLAGS,PFBYPAS          PROMPTING FOR A PASSWORD         45130020
         BO    WRITER2F                IF YES BRANCH                    45140020
         SPACE                                                          45150020
*/* D (YES,YESLIST,NO,) PROCESSING LIST */                              45152001
         TM    PFLAGS,PFLIST           IS A LIST BEING PROCESSED        45160020
         BO    YESLIST                 YES, CHECK FOR PROMPT/DEFAULT    45170020
*/* D (YES,YESLIST,NO,) COBOL PCE'S - GOTO TEST FOR PROMPT/DEFAULT */   45170401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 45172001
         BO    YESLIST                 IF YES, TEST FOR          F41448 45174001
*                                      PROMPT/DEFAULT            F41448 45176001
         SPACE                                                          45180020
         MVC   PDWORD(ONE),PCEFLGB1(XPCE) MOVE TYPE INDICATORS          45190020
         NI    PDWORD,HE0              ISOLATE PCE TYPE INDICATORS      45200020
*/* D (YES,WRITER2E,NO,) IKJKEYWD PCE */                                45202001
         CLI   PDWORD,EIGHT*(KEYWDB-MAINB) IS IT AN IKJKEYWD PCE        45210020
         BE    WRITER2E                YES, DO NOT TEST FOR DEFAULT     45220020
         SPACE                                                          45230020
*/*YESLIST: D (YES,WRITER2B,NO,) PARAMETER IS REQUIRED */               45232001
YESLIST  DS    0H                      * * * *                          45240020
         TM    PCEFLGB1(XPCE),PCEFPRPT IS THE PARAMETER REQUIRED        45250020
         BO    WRITER2B                IF YES BRANCH - REPEAT PROMPT    45260020
         SPACE                                                          45270020
*/* D (YES,PROMPTQ1,NO,) IS THERE A DEFAULT */                          45272001
         TM    PCEFLGB1(XPCE),PCEFDFLT DOES PARAMETER HAVE A DEFAULT    45280020
         BO    PROMPTQ1                IF YES PASS BACK DEFAULT         45290020
*/* D (YES,WRITER2F,NO,WRITER2E) PROCESSING COBOL PCE'S? */             45290401
*/* COMMENT (1,15) IF COBOL - GET */                                    45290801
*/* COMMENT (2,15) PFNULL ON */                                         45291201
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 45292001
         BO    WRITER2F                IF YES, SET PFNULL ON SO  F41448 45294001
*                                      WILL KNOW RECEIVED NULL   F41448 45296001
*                                      LINE FROM PROMPT          F41448 45298001
         SPACE                                                          45300020
         B     WRITER2E                NO --- POP STACK                 45310020
         SPACE                                                          45320020
*/*WRITER2F: P INDICATE NULL LINE ENTERED */                            45322001
WRITER2F DS    0H                      * * * *                          45330020
         OI    PFLAGS3,PFNULL          INDICATE A NULL LINE WAS ENTERED 45340020
         SPACE                                                          45350020
*/*WRITER2E: S SCANF: RE-POP THE STACK */                               45352001
WRITER2E DS    0H                      * * * *                          45360020
         BAL   LINK1,SCANDLSN          RE-POP STACK               M3337 45370020
*                                                                       45380020
         NOP   ZERO                    +0 RETURN                        45390020
*                                                                       45400020
*                                      +4 RETURN                        45410020
*/* D (YES,PROMPXIT,NO,) PROMPTING FOR  PASSWORD */                     45412001
         TM    PFLAGS,PFBYPAS          PROMPTING FOR A PASSWORD         45420020
         BO    PROMPXIT                IF YES BRANCH --- EXIT           45430020
         SPACE                                                          45640020
*/* D (YES,WRITER2H,NO,) PROCESSING LIST */                             45642001
         TM    PFLAGS,PFLIST           IS A LIST BEING PROCESSED        45650020
         BO    WRITER2H                IF YES CHECK FOR MORE LIST DATA  45660020
*/* D (YES,WRITR2E1,NO,) PROCESSING COBOL PCE'S? */                     45660401
*/* COMMENT (1,15) SKIP KEYWD */                                        45660801
*/* COMMENT (2,15) + ENDP TESTS */                                      45661201
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 45662001
         BO    WRITR2E1                IF YES, SKIP OVER TEST    F41448 45664001
*                                      FOR KEYWRD AND ENDP PCE'S F41448 45666001
         SPACE                                                          45670020
         MVC   PDWORD(ONE),PCEFLGB1(XPCE) MOVE TYPE INDICATORS          45680020
         NI    PDWORD,HE0              ISOLATE PCE TYPE INDICATORS      45690020
*/* D (YES,PROMPXIT,NO,) IKJKEYWD PCE */                                45692001
         CLI   PDWORD,EIGHT*(KEYWDB-MAINB) IS IT AN IKJKEYWD PCE        45700020
         BE    PROMPXIT                YES - EXIT                       45710020
         SPACE                                                          45720020
*/* D (YES,PROMPXIT,NO,) IKJENDP PCE */                                 45722001
         CLI   PDWORD,EIGHT*(ENDB-MAINB) IS IT AN IKJENDP PCE           45730020
         BE    PROMPXIT                IF YES EXIT                      45740020
         SPACE                                                          45750020
*/*WRITR2E1: D (YES,,NO,WRITER2L) LIST SPECIFIED IN PCE */              45752001
WRITR2E1 TM    PCEFLGB2(XPCE),PCEFLIST IS LIST SPECIFIED IN PCE         45760001
         BZ    WRITER2L                NO, EXIT NORMALLY                45770020
         SPACE                                                          45780020
*/*WRITER2M: P STORE RETURN ADDRESS */                                  45782001
WRITER2M DS    0H                      * * * *                          45790020
         LA    R0,POSITX               STORE POSITX -                   45800020
         ST    R0,PLINKSV1             AS RETURN ADDRESS                45810020
*/* D (,PROMPXIT) EXIT */                                               45812001
         B     PROMPXIT                EXIT WRITER2                     45820020
         SPACE                                                          45830020
*/*WRITER2L:  P STORE RETURN ADDRESS */                                 45832001
WRITER2L DS    0H                      * * * *                          45840020
         LA    R0,POSITX3              STORE POSITX3 -                  45850020
         ST    R0,PLINKSV1             AS RETURN ADDRESS -              45860020
*/* D (,PROMPXIT) EXIT */                                               45862001
         B     PROMPXIT                AND EXIT.                        45870020
         SPACE                                                          45880020
*/*WRITER2H: S SKIPB: SKIP SEPARATORS */                                45882001
WRITER2H DS    0H                      * * * *                          45890020
         SPACE                                                          45920020
         BAL   LINK2,SKIPB             SKIP SEPARATORS                  45930020
*                                                                       45940020
*/* D (YES,,NO,WRITER2P) DATA TO SCAN */                                45942001
         B     WRITER2P                +0 RETURN --- NO MORE DATA ---   45950020
*                                         BRANCH TO POSITIONAL EXIT RTN 45960020
*                                                                       45970020
*                                      +4 RETURN --- DATA TO SCAN       45980020
         LA    XINPUT,ONE(XINPUT)      BUMP INPUT POINTER               45990020
*/* D (YES,WRITER2P,NO,PROMPXIT) REACHED END OF THE LIST */             45992001
         CLI   ZERO(XINPUT),RIGHTPRN   IS THIS THE END OF THE LIST      46000020
         BE    WRITER2P                IF YES TAKE POSITIONAL EXIT      46010020
         SPACE                                                          46020020
         BCT   XINPUT,PROMPXIT         NO --- DECREMENT POINTER -- EXIT 46030020
         SPACE                                                          46040020
*/*WRITER2P: D (YES,WRITER2N,NO,) AT LEAST ONE PDE WAS BUILT */         46042001
WRITER2P DS    0H                      * * * *                          46050020
         TM    PFLAGS3,PFONE           WAS AT LEAST ONE PDE BUILT       46060020
*                                                                M0911  46062020
         BO    WRITER2N                YES, THEN LIST PTR IS ALREADY    46070020
*                                         SET - TAKE POSIT EXIT         46080020
         SPACE                                                          46090020
*/* P TURN OFF LIST PTR */                                              46092001
         NI    PFLAGS,HFF-PFLIST       TURN OFF LIST PTR                46100020
*/* D (,WRITER2M) GO TO SET UP LIST PTR */                              46102001
         B     WRITER2M                NO, GO SET UP TO SET LIST PTR    46110020
         SPACE                                                          46120020
*/*WRITER2N: D (YES,POSITX4,NO,) PROCESSING COBOL PCE'S? */             46120101
*/* D (YES,POSITX4,NO,) REACHED END OF INPUT */                         46120401
WRITER2N DS    0H                      * * * *                          46122001
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 46122101
         BO    POSITX4                 IF YES, DON'T DECREMENT   F41448 46122201
*                                      THE INPUT POINTER         F41448 46122301
         TM    PFLAGS,PFENDF           IS THIS THE END OF INPUT   M3337 46122420
         BNZ   POSITX4                 YES, DON'T DECREMENT       M3337 46122820
*/* P DECREMENT SCAN POINTER */                                         46123201
*/* D (,POSITX4) EXIT */                                                46123601
         BCT   XINPUT,POSITX4          DECREMENT BEFORE EXIT      M0911 46124020
         SPACE                                                          46126020
*                                                                       46130020
* DATA OBTAINED FROM THE PROMPT - MOVE IT TO PARSES CORE SO USER CAN    46140020
* USE IT.                                                               46150020
*                                                                       46160020
*/*PROMPGO: S STALOC: ALLOCATE SPACE TO COPY NEW DATA */                46162001
PROMPGO  DS    0H                      * * * *                          46170020
         LA    R2,FOUR(R3)             GET PROMPT DATA PTR.      Y02666 46172002
         LH    R1,PDWORD               LOAD LENGTH OF RETURNED DATA     46180020
         SH    R1,H4                   TO ACCOUNT FOR HEADER            46200020
         LR    R3,R1                   SAVE LENGTH OF PROMPT DATAY02666 46202002
         BAL   LINK2,STALOC            ALLOCATE SPACE TO COPY NEW DATA  46210020
         SPACE                                                          46220020
         LR    XINPUT,R1               SAVE PTR TO NEW DATA AREA        46230020
         LR    R5,R3                   SET LENGTH OF DATA        Y02666 46232002
         STM   R2,R5,P20SAVE           SAVE AROUND MOVE LONG     Y02666 46232402
         MVCL  XINPUT,R2               MOVE DATA TO NEW BUFFER   Y02666 46234002
         LM    R2,R5,P20SAVE           RESTORE REGS.             Y02666 46234402
         LA    R3,ZERO(XINPUT,R3)      GET END PTR.              Y02666 46236002
         ST    R3,ENDINPUT             SET END OF DATA PTR       Y02666 46238002
         BCTR  XINPUT,ZERO             REDUCE ONE FOR FUTURE SCANX      46240020
*/* P COPY NEW DATA TO PARSE STORAGE */                                 46302001
         SPACE                                                          46320020
*                                                                       46330020
* FREE PUTGETS BUFFER.                                                  46340020
*                                                                       46350020
         L     R1,PUTGET+TWELVE        RESTORE PUTGET BUFFER PTR Y02666 46352002
         LH    R0,PDWORD               COMPUTE BUFFER SIZE       Y02666 46370002
         AL    R0,SUBPOOLN             ADD SUBPOOL NUMBER TO SIZE       46380020
         SPACE                                                          46390020
*/* P ISSUE FREEMAIN TO FREE PUTGETS BUFFER */                          46392001
         FREEMAIN R,LV=(0),A=(1)       FREE BUFFER                      46400020
         SPACE                                                          46410020
*/* D (YES,,NO,PROMPXIT) SHOULD BLANKS BE SKIPPED */                    46412001
         TM    RFLAGS,RFNOSKIP         SEE IF BLANKS SHOULD BE          46420020
*                                         SKIPPED IN THE NEW BUFFER     46430020
         BO    PROMPXIT                NO, (FLAG ON) - EXIT             46440020
         SPACE                                                          46450020
*/* P INDICATE NOT TO POP STACK IF ALL BLANKS IN BUFFER */              46450401
         OI    PFLAGS4,PFNOPOP         DON'T POP STACK IF ALL     M0911 46452020
*                                         SEPARATORS IN PROMPT BUFFER   46454020
*/* S SKIPB: SKIP SEPARATORS */                                         46456001
         BAL   LINK2,SKIPB             SKIP BLANKS IN NEW BUFFER        46460020
         SPACE                                                          46470020
*/* D (YES,WRITER2D,NO,) ALL SEPARATORS IN BUFFER */                    46472001
         B     WRITER2D                +0 RETURN - ALL SEPARATERS -     46480020
*                                         REPROMPT                      46490020
*                                                                       46500020
*                                      +4 RETURN - EXIT                 46510020
         SPACE                                                          46520020
         NI    PFLAGS4,HFF-PFNOPOP     TURN OFF NOPOP FLAG        M0911 46522020
*/* P INDICATE PROMPT DATA PICKED UP */                                 46524001
         OI    PFLAGS4,PFPDDATA        INDICATE PROMPT DATA PICKED UP   46530020
*                                                                       46540020
* RETURN TO CALLER AFTER FREEING CORE OBTAINED FOR HELP MESSAGES        46550020
* AND 'ENTER' MESSAGE IF PREVIOUSLY OBTAINED.                           46560020
*                                                                       46570020
*/*PROMPXIT: D (YES,,NO,NOHELP) ANY HELP MSG STORAGE TO FREE */         46572001
PROMPXIT DS    0H                      EXIT FROM PUTGET ROUTINE         46580020
         NC    SAVLSLEN,SAVLSLEN       ANY HELP MESSAGE STORAGE TO FREE 46590020
         BZ    NOHELP                  IF NO BRANCH                     46600020
         SPACE                                                          46610020
         L     R1,SEGLIST              LOAD ADDRESS OF STORAGE          46620020
         LH    R0,SAVLSLEN             LOAD SIZE OF STORAGE OBTAINED    46630020
         SPACE                                                          46640020
*/* P ISSUE FREEMAIN TO FREE THE STORAGE */                             46642001
         FREEMAIN R,LV=(0),A=(1)       FREE THE STORAGE                 46650020
         SPACE                                                          46660020
*/*NOHELP: D (YES,YESENTER,NO,) 'ENTER' MSG WAS WRITTEN */              46662001
NOHELP   DS    0H                      * * * *                          46670020
         CLI   MSGCODE,MSG1            WAS AN 'ENTER' MESSAGE WRITTEN   46680020
         BE    YESENTER                IF YES BRANCH                    46690020
         SPACE                                                          46700020
*/* D (YES,,NO,NOTENTER) 'ENTER PASSWORD' MSG WAS WRITTEN */            46702001
        TM    DATAFLA2,PRESENT         TEST TO SEE IF CURRENT PASSWORD  46704000
*                                      HAS BEEN PROCESSED      @Z40RPKQ 46706000
        BO    NEWITTEN                 IF YES, BRANCH TO COMPARE FOR    46710000
*                                      NEW PASSWORD 'ENTER' MESSAGE     46710900
*                                                              @Z40RPKQ 46711800
         CLI   MSGCODE,MSG15           WAS AN 'ENTER CURRENT            46712700
*                                      PASSWORD MESSAGE WRITTEN         46713600
*                                                              @Z40RPKQ 46714500
         B     YESNOTST                BRANCH TO CHECK IF MESSAGE BEEN  46715400
*                                      WRITTEN                 @Z40RPKQ 46716300
NEWITTEN DS    0H                      * * * *                 @Z40RPKQ 46717200
         CLI   MSGCODE,MSG22           WAS AN 'ENTER' FOR NEW PASSWORD  46718100
*                                      MESSAGE WRITTEN         @Z40RPKQ 46720000
YESNOTST DS    0H                      * * * *                 @Z40RPKQ 46723000
         BNE   NOTENTER                IF NO BRANCH                     46730020
         SPACE                                                          46740020
*/*YESENTER: P ISSUE FREEMAIN TO FREE THE STORAGE */                    46742001
YESENTER DS    0H                      * * * *                          46750020
         L     R1,SEGLIST+TWELVE       LOAD ADDRESS OF STORAGE          46760020
         LH    R0,ZERO(R1)             LOAD SIZE OF STORAGE OBTAINED    46770020
         SPACE                                                          46780020
         FREEMAIN R,LV=(0),A=(1)       FREE THE STORAGE                 46790020
         SPACE                                                          46800020
*/*NOTENTER: P TURN OFF POSSIBLE FLAGS FOR BYPASS AND RANGE */          46802001
NOTENTER DS    0H                      * * * *                          46810020
         NI    PFLAGS,HFF-PFBYPAS      CLEAR POSSIBLE BYPASS FLAG       46820020
         NI    PFLAGS2,HFF-RNGEVAL1-RNGEVAL2  TURN OFF POSSIBLE RANGE   46830020
*                                         FLAGS TO REMOVE POSSIBLE      46840020
*                                         INVALID DATA IN PDE           46850020
         L     LINK1,PLINKSV1          LOAD RETURN ADDRESS              46860020
         XR    R1,R1                   SET R1 TO BASIC PCE SIZE         46870020
         IC    R1,PPCOUNT              FOR POSSIBLE USE BY POSITX       46880020
*/* R RETURN +0 */                                                      46882001
         BR    LINK1                   RETURN +0                        46890020
         SPACE                                                          46900020
*/*BYPASS: P ISSUE PUTGET */                                            46902001
BYPASS   DS    0H                      * * * *                          46910020
         NI    PFLAGS4,HFF-PFVCMSG     TURN OFF VCE MSG FLAG     Y05020 46912001
         PUTGET PARM=PUTGET,OUTPUT=(SEGLIST,MULTLVL,PTBYPS),           *46920020
               TERMPUT=(EDIT),MF=(E,SRPARAMS) WRITE/READ IN             46930002
*                                      BYPASS MODE               Y02225 46932002
         SPACE                                                          46940020
*/* D (,PGRCACT) RETURN TO MAINLINE CODE */                             46942002
         B     PGRCACT                 CHECK RETURN CODE         Y02666 46951002
         EJECT                                                          46960020
*/*VCERTN: D (YES,VCERA,NO,) VALIDCHK EXIT WANTED */                    46962001
VCERTN   DS    0H                      VALIDITY CHECK EXIT ROUTINE      46970020
         TM    PCEFLGB1(XPCE),PCEFVCHK IS A VALIDITY CHECK EXIT WANTED  46980020
         BO    VCERTN2                 IF SO CONTINUE NORMAL     F41448 46992001
*                                      PARSE                     F41448 46994001
*/*COBRET1: D (NO,VCRTN,YES,) PROCESSING COBOL PCE'S? */                46994401
COBRET1  TM    CBFLAGS1,COBOLMOD       IF NO V.C. EXIT, CHECK TO F41448 46996001
*                                      SEE IF PROCESSING COBOL   F41448 46998001
*                                      PCE'S                     F41448 46998401
         BCR   CC8,LINK1               NO - BIT ZERO - RETURN    F41448 46998801
*/*COBRET2: P CLEAR THE COBOL TEMPORARY PDE */                          46998901
*/*VCRTN: R () RETURN */                                                46999001
COBRET2  XC    TEMPPDE(CBLTPDE),TEMPPDE IF IN COBOL MODE, CLEAR  F41448 46999201
*                                      THE TEMPORARY PDE         F41448 46999601
         BR    LINK1                   RETURN ON LINK1           F41448 46999701
         SPACE                                                          47000020
*                                                                M3318  47002020
*/*VCERA: D (YES,VCERB,NO,) PDE CONTAINS DATA */                        47004001
VCERTN2  MVI   DATAEXP,H00             CLEAR EXPRESSION ADDRESS FLAG    47010001
*                                         IN TEMPPDE IN CASE NO DATA IS 47020020
*                                         IN ADDRESS PDE                47030020
         NI  DATAFLG,HFF-EMPTYFLG      TURN EMPTY FLAG BIT OFF   A45355 47040401
         NC  TEMPPDE(LTPDE),TEMPPDE    DOES THE PDE CONTAIN DATA?       47040801
*/* R RETURN */                                                         47042001
         BCR   CC8,LINK1               IF NO BRANCH                     47050020
         SPACE                                                          47060020
         OI  DATAFLG,EMPTYFLG          TURN EMPTY FLAG BIT ON    A45355 47060401
*/*VCERB: P GET ADDR OF VALIDITY CHECK ROUTINE */                       47062001
         MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH FIELD ON       47070020
*                                         PROPER BOUNDARY               47080020
         LH    R15,PDWORD              LOAD PCE LENGTH                  47090020
         SH    R15,H3                  GET ADDRESS OF VALIDITY CHECK    47100020
         AR    R15,XPCE                   ROUTINE ADDRESS               47110020
         MVC   PDWORD+ONE(THREE),ZERO(R15) ALIGN ADDRESS ON PROPER      47120020
*                                         BOUNDARY                      47130020
*/* D (YES,,NO,INVPARMS) VALID ADDRESS - ON HALFWD BOUNDARY */          47132001
         TM    PDWORD+THREE,H01        IS IT VALID ADDRESS - ON         47140020
*                                         HALFWORD BOUNDARY             47150020
         BO    INVPARMS                NO - BRANCH                      47160020
         SPACE                                                          47170020
         L     R15,PDWORD              LOAD ROUTINE ADDRESS             47180020
         MVC   VALMSG(L'ENDCHAIN),ENDCHAIN   CLEAR VALIDITY CHECK MES-  47190020
*                                         SAGE FIELD                    47200020
         LA    R1,VCEPARAM             LOAD PARAMETER LIST ADDRESS      47210020
*/* P GO TO VALIDITY CHECK ROUTINE */                                   47212001
         BALR  R14,R15                 BRANCH TO VALIDITY CHECK ROUTINE 47220020
         SPACE                                                          47230020
*/* D (YES,,NO,COBRET1) PROMPT IS REQUIRED */                           47232001
         LTR   R15,R15                 IS A PROMPT REQUIRED             47240020
         BZ    COBRET1                 IF ZERO RETURN , GO TO    F41448 47252001
*                                      NORMAL RETRUN ROUTINE     F41448 47254001
*/* D (NO,VCERC,YES,) IS IT THE SPECIAL COBOL RET - 16? */              47254401
         CH    R15,H16                 IF NOT ZERO RETURN, CHECK F41448 47256001
*                                      TO SEE IF IT IS THE       F41448 47258001
*                                      SPECIAL COBOL RETURN      F41448 47258401
*                                      CODE = 16                 F41448 47258801
         BNE   VCERTN3                 IF NOT, CONTINUE PARSE    F41448 47259201
*/* D (YES,INVPARMS,NO,) HAVE WE RECEIVED A 16 RET BEFORE ON THIS PCE?  47259301
*/**/                                                                   47259401
         TM    CBFLAGS1,RC16           IF IS, HAVE WE GOTTEN     F41448 47259601
*                                      THIS RETURN BEFORE FOR    F41448 47259701
*                                      THIS DATA NAME            F41448 47259801
         BO    INVPARMS                IF SO, ERROR              F41448 47259901
*/* P TURN ON RET CODE 16 INDICATOR = RC16 FLAG */                      47261901
         OI    CBFLAGS1,RC16           IF NOT, TURN ON RET CODE  F41448 47263901
*                                      16 INDICATOR              F41448 47265901
*/* D (NO,INVPARMS,YES,) ARE WE PROCESSING A CHAINED TERM OFF AN OPER?  47266301
*/**/                                                                   47266701
         TM    CBFLAGS2,CHAINTRM       IF RC = 16, IS THIS A     F41448 47267901
*                                      CHAINED TERM PCE OFF AN   F41448 47268601
*                                      OPER PCE,  IF NOT, A      F41448 47269001
         BZ    INVPARMS                R.C. OF 16 IS INVALID     F41448 47269401
*/* P LOAD RETURN ADDRESS INTO IKJPARS2 */                              47269501
*/* R () RETURN TO IKJPARS2 ON +4 */                                    47269601
         L     LINK2,CBLNKSV2          IF THE RET CODE 16  IS    F41448 47269801
         B     FOUR(LINK2)             VALID, BRANCH BACK TO     F41448 47269901
*                                      COBOL PROCESSORS ON +4 TO F41448 47273201
*                                      INDICATE A 16 R.C. WAS    F41448 47275201
*                                      RECEIVED                  F41448 47275601
         SPACE                                                          47276801
*/*VCERC: P ZERO THE PDE */                                             47280101
VCERTN3  XR    R1,R1                   CLEAR REG TO HOLD PDE LENGTH     47283401
         IC    R1,PPDESIZE             LOAD PDE LENGTH-1                47286701
         L     R3,PDEADR               LOAD R3 WITH PDEADR STORED BY    47290020
*                                         THE POSITIONAL EXIT ROUTINE   47300020
         EX    R1,ERASEXC              ZERO THE PDE - IT MUST BE        47310020
*                                         RECONSTRUCTED                 47320020
*/* P MOVE V.C. ERROR RETURN ADDRESS FOR RETURN TO IKJPARS2 */          47320101
         MVC   GOREGSV(L'GOREGSV),PLINKSV2                       F41448 47320401
*                                      IF AN ERROR HAS BEEN RET- F41448 47320801
*                                      URNED BY THE V.C. EXIT,   F41448 47321201
*                                      THE ERROR RETURN ADDRESS  F41448 47321601
*                                      INTO THE COBOL MACRO PRO- F41448 47321701
*                                      CESSOR MUST BE STORED     F41448 47321801
*                                      INTO GOREGSV SO THAT      F41448 47321901
*                                      RETURN WILL BE AT THE     F41448 47326401
*                                      PROPER PLACE TO INDICATE  F41448 47328401
*                                      THAT THE V.C. EXIT RET-   F41448 47330401
*                                      URNED WITH AN ERROR       F41448 47330801
*/* D (YES,,NO,VCERTN1) PROCESSING A LIST */                            47331001
         NC    PREVPDEL,PREVPDEL       IS A LIST BEING PROCESSED        47335501
         BZ    VCERTN1                 IF NO BRANCH                     47340020
         SPACE                                                          47350020
*/* P INDICATE LAST PDE PROCESSED WAS LAST ONE IN CHAIN */              47352001
         L     R14,PREVPDEL            LOAD THE PREVIOUS PDE ADDRESS    47360020
         MVC   ZERO(L'ENDCHAIN,R14),ENDCHAIN INDICATE THE LAST PDE      47370020
*                                         PROCESSED WAS THE LAST ONE IN 47380020
*                                         THE CHAIN                     47390020
         SPACE                                                          47400020
*/*VCERTN1: D (YES,CODE4,NO,) SHOULD INVALID MSG BE WRITTEN */          47402001
VCERTN1  DS    0H                      * * * *                          47410020
         CH    R15,H4                  SHOULD AN INVALID MESSAGE BE     47420020
*                                         WRITTEN                       47430020
         BE    CODE4X                  YES - FULL ERROR TREATMENT       47440002
         SPACE                                                          47450020
*/* D (YES,VCERR,NO,) SHOULD PARSE QUIT */                              47452001
         CH    R15,H12                 SHOULD PARSE QUIT                47460020
         BE    VCERR                   IF YES BRANCH                    47470020
         SPACE                                                          47480020
*/* D (YES,,NO,INVPARMS) SHOULD ONLY REENTER MSG BE WRITTEN */          47482001
         CH    R15,H8                  SHOULD ONLY REENTER MESSAGE BE   47490020
*                                         WRITTEN                       47500020
         BNE   INVPARMS                IF NO ITS AN INVALID RETURN CODE 47510020
         SPACE                                                          47520020
*/* P INDICATE TO PRINT ONLY REENTER MSG */                             47522001
         OI    PFLAGS2,PFSKPINV        SET FLAG TO SKIP INVALID MESSAGE 47530020
*                                         AND PRINT ONLY REENTER        47540020
*                                         MESSAGE                       47550020
CODE4X   DS    0H                                                Y02666 47552002
         L     R15,ADRMSGC             LOAD ADDRESS OF MESSAGE CSECT    47560020
         CLC   VALMSG,ENDCHAIN         HAS THE VALIDITY CHECK ROUTINE   47562001
*                                      SUPPLIED A HELP MESSAGE          47564001
         BNE   SETFLG                  YES, CONTINUE PROCESSING  Y01156 47566001
         SPACE                                                          47568001
         TM    PCEFLGB1(XPCE),PCEFHELP DID USER SPECIFY HELP MSG.Y01156 47568401
         BO    SETMSG3A                YES, SET UP REENTER+ MSG. Y01156 47568801
SETMSG3  DS    0H                                                Y02666 47569202
         L     R15,MSG3(R15)           LOAD ADDRESS OF REENTER MESSAGE  47570020
         MVC   PRIMSGID+FOUR(EIGHT),FOUR(R15) SAVE MESSAGE ID FOR HELP  47580020
*                                         MESSAGES                      47590020
         B     CODE4                   CONTINUE PROCESSING       Y01156 47590401
*/* D (YES,,NO,CODE4) HAS VALIDCHK RTN SUPPLIED HELP MSG */             47592001
*/* P INDICATE MSG IS PRESENT */                                        47632001
SETFLG   DS    0H                                                Y01156 47634001
         OI    PFLAGS4,PFVCMSG         YES, TURN ON FLAG TO INDICATE    47640020
*                                         A MESSAGE IS PRESENT          47650020
SETMSG3A DS    0H                                                Y01156 47652001
         TM    PFLAGS,PFBYPAS          IS BYPASS NEEDED?         Y02666 47652402
         BO    SETMSG3                 INDICATE NO HELP          Y02666 47652802
         L     R15,MSG3A(R15)          LOAD ADDRESS OF REENTER+         47654001
*                                      MESSAGE                   Y01156 47654801
         MVC   PRIMSGID+FOUR(EIGHT),FOUR(R15) SAVE MESSAGE ID FOR HELP  47656001
*                                         MESSAGES                      47658001
         SPACE                                                          47660020
*/*CODE4: D (NO,CODE41,YES,) PROCESSING COBOL PCE'S? */                 47660401
*/* P CLEAR THE TEMPORARY PDE (COBOL) */                                47660801
*/* R () RETURN TO IKJPARS2 */                                          47661201
*/*CODE41: D (YES,ILLIDENT,NO,) IKJIDENT PDE */                         47662001
CODE4    DS    0H                      * * * *                          47670001
         TM    CBFLAGS1,COBOLMOD       ARE WE PROCESSING COBOL   F41448 47672001
*                                      PCE'S?                    F41448 47674001
         BZ    CODE41                  IF NOT, CONTINUE PARSE    F41448 47676001
         XC    TEMPPDE(CBLTPDE),TEMPPDE IF IN COBOL MODE         F41448 47678001
*                                      CLEAR THE TEMP. PDE       F41448 47678401
         L     LINK1,CBLNKSV2          RETURN TO COBOL PROCESSRS F41448 47678801
*                                      WITH INDICATION THAT      F41448 47679201
         BR    LINK1                   V.C. RETURNED AN ERROR    F41448 47679601
*                                      INDICATION                F41448 47679701
CODE41   MVC   PDWORD(ONE),PCEFLGB1(XPCE) MOVE PCE TYPE INDICATORS      47680001
         NI    PDWORD,HE0              ISOLATE TYPE INDICATOR           47690020
         CLI   PDWORD,EIGHT*(IDENTB-MAINB) IS IT AN IKJIDENT PCE        47700020
         BE    ILLIDENT                YES -- PROCESS INVALID IDENT     47710020
         SPACE                                                          47720020
         XR    R1,R1                   CLEAR R1                  Y02666 47730002
         IC    R1,PCEPOST(XPCE)        PICK UP TYPE OF POSITIONAL PCE   47740020
*                                         FROM PCE                      47750020
         SLL   R1,TWO                  MULTIPLY IT BY FOUR              47760020
         B     *+FOUR(R1)              DETERMINE WHAT TYPE OF           47770020
*                                         POSITIONAL IT IS              47780020
*                                                                       47790020
*/* D (YES,INVPARMS,NO,) NON-EXISTENT TYPE PCE */                       47792001
         B     INVPARMS                TYPE 0  - NONEXISTENT            47800020
*                                                                       47810020
*/* D (YES,INVPARMS,NO,) DELIMITER TYPE PCE */                          47812001
         B     INVPARMS                TYPE 1  - DELIMITER              47820020
*                                                                       47830020
*/* D (YES,INVPARMS,NO,) SELF-DELIMITING STRING */                      47832001
         B     INVPARMS                TYPE 2  - SELF-DELIMITING STRING 47840020
*                                                                       47850020
*/* D (YES,ILLVALU,NO,) VALUE TYPE PCE */                               47852001
         B     ILLVALU                 TYPE 3  - VALUE                  47860020
*                                                                       47870020
*/* D (YES,ILLADDR,NO,) ADDRESS TYPE PCE */                             47872001
         B     ILLADDR                 TYPE 4  - ADDRESS                47880020
*                                                                       47890020
*/* D (YES,ILLPSTR,NO,) PARENTHESIZED STRING */                         47892001
         B     ILLPSTR                 TYPE 5 - PARENTHESIZED STRING    47900020
*                                                                       47910020
*/* D (YES,ILLUSID,NO,) USERID TYPE PCE */                              47912001
         B     ILLUSID                 TYPE 6 - USERID                  47920020
*                                                                       47930020
*/* D (YES,ILLDSN,NO,) DSNAME TYPE PCE */                               47932001
         B     ILLDSN                  TYPE 7  - DSNAME                 47940020
*                                                                       47950020
*/* D (YES,ILLDSN,NO,) ASTERISK FOR DSNAME */                           47952001
         B     ILLDSN                  TYPE 8  - * FOR DSNAME           47960020
*                                                                       47970020
*/* D (YES,ILLQSTR,NO,) QUOTED STRING TYPE PCE */                       47972001
         B     ILLQSTR                 TYPE 9 - QUOTED STRING           47980020
         B     INVPARMS                TYPE 10 - SPACE(NOT USED) Y02666 47982002
         B     ILLJOBN                 TYPE 11 - JOBNAME         Y02666 47984002
         SPACE                                                          47990020
*                                                                       48000020
********                                                                48010020
******** N O T E  - ANY OF THE ABOVE BRANCHES TO INVPARMS MEANS THAT    48020020
********            AN UNSUPPORTED VALIDITY CHECK EXIT WAS TAKEN.       48030020
********                                                                48040020
*                                                                       48050020
         EJECT                                                          48060020
*********************************************************************** 48070020
*                                                                     * 48080020
*                       ERROR HANDLING SUBROUTINE                     * 48090020
*                                                                     * 48100020
*   THIS ROUTINE WRITES THE 'INVALID' MESSAGE AND PROMPTS FOR THE     * 48110020
* CORRECT PARAMETER. IT ALSO CALCULATES THE LENGTH OF THE INVALID DATA* 48120020
* AND BUILDS THE APPROPRIATE MESSAGE SEGMENT.                         * 48130020
*   A RETURN IS MADE TO THE APPRIPRIATE RESCAN ROUTINE.               * 48140020
*                                                                     * 48150020
*********************************************************************** 48160020
         SPACE                                                          48170020
*                                                                       48180020
* INVALID DSNAME.                                                       48190020
*                                                                       48200020
*/*ILLDSN: P INDICATE MESSAGE TO WRITE */                               48202001
ILLDSN   DS    0H                      * * * *                          48210020
         NI    PFLAGS7,HFF-VOLSERF     RESET VOL SER FLAG        Y02666 48210402
         MVI   PERRCODE,ZERO           SET INDEX VALUE FOR DSNAME       48210802
         TM    PFLAGS7,DSNAMEF         IS DSNAME PROCESSING?     Y02666 48211202
         BO    INVDSN                  YES, PROCESS AS INVALID   Y02666 48211602
         TM    PFLAGS5,DSNFLG          DSNAME IN PROCESS?        Y02666 48212002
         BZ    ILLJOBN                 PROCESS INVALID JOB NAME  Y02666 48214002
INVDSN   DS    0H                                                Y02666 48214402
         TM    PCEFLGB2(XPCE),PCEFDDN  IS DDNAME BEING PROCESSED?Y02666 48216002
         BO    DDNMSG                  SET DDNAME MSG            Y02666 48218402
         MVI   MSGCODE,MSG10           INDICATE MESSAGE TO WRITE        48220020
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48232001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48240020
DDNMSG   DS    0H                                                Y02666 48242002
         MVI   MSGCODE,MSG20           SET UP DDNAME MSG         Y02666 48244002
         B     SYSR1                   BRANCH TO ERROR HANDLER   Y02666 48246002
         SPACE                                                          48250020
ILLJOBN  DS    0H                                                Y02666 48252002
         MVI   PERRCODE,ZERO           SET INDEX VALUE FOR JOBNAMY02666 48253002
         MVI   MSGCODE,MSG19           INDICATE MESSAGE TO WRITE Y02666 48254002
         B     SYSR1                   GO TO ERROR HANDLER       Y02666 48258402
*                                                                       48260020
* INVALID USERID                                                        48270020
*                                                                       48280020
*/*ILLUSID: P INDICATE MESSAGE TO WRITE */                              48282001
ILLUSID  DS    0H                      * * * *                          48290020
         MVI   MSGCODE,MSG11           INDICATE MESSAGE TO WRITE        48300020
         MVI   PERRCODE,THIRTY6        SET INDEX VALUE FOR USERID       48310020
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48312001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48320020
         SPACE                                                          48330020
*                                                                       48340020
* INVALID ADDRESS.                                                      48350020
*                                                                       48360020
*/*ILLADDR: P INDICATE MESSAGE TO WRITE */                              48362001
ILLADDR  DS    0H                      * * * *                          48370020
         NI    PFLAGS,HFF-HEXBIT-DECBIT-PFNEW-ADREXP    *         M4789 48380020
         NI    PFLAGS2,H80             CLEARS ALL BUT BIT 0 IN PFLAGS2  48390020
         NI    PFLAGS3,HFF-ONERBIT-TWORBIT       *                      48400020
         MVI   MSGCODE,MSG12           INDICATE MESSAGE TO WRITE        48410020
         MVI   PERRCODE,TWELVE         SET ERROR CODE FOR ADDRESS       48420020
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48422001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48430020
         SPACE                                                          48440020
*                                                                       48450020
* INVALID VALUE.                                                        48460020
*                                                                       48470020
*/*ILLVALU: P INDICATE MESSAGE TO WRITE */                              48472001
ILLVALU  DS    0H                      * * * *                          48480020
         MVI   MSGCODE,MSG14           INDICATE MESSAGE TO WRITE        48490020
         MVI   PERRCODE,SIXTEEN        SET INDEX VALUE FOR VALUE        48500020
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48502001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48510020
         SPACE                                                          48520020
*                                                                       48530020
* INVALID IDENT.                                                        48540020
*                                                                       48550020
*/*ILLIDENT: P INDICATE MESSAGE TO WRITE */                             48552001
ILLIDENT DS    0H                      * * * *                          48560020
         MVI   MSGCODE,MSG6            INDICATE MESSAGE TO WRITE        48570020
         MVI   PERRCODE,TWENTY4        SET INDEX VALUE FOR IDENT        48580020
         LA    R0,PCEPARMT(XPCE)       COMPUTE ADDRESS OF PARAMETER     48590020
*                                         TYPE MESSAGE SEGMENT IN PCE   48600020
         ST    R0,SEGLIST+SIXTEEN      STORE ADDRESS IN PARAMETER LIST  48610020
*                                         FOR PUTLINE                   48620020
         NI    PFLAGS6,HFF-NUMFLG-PDEHEX   RESET FLAGS           Y02666 48620402
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48622001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48630020
         SPACE                                                          48640020
*                                                                       48650020
* INVALID PASSWORD FOR A DSNAME.                                        48660020
*                                                                       48670020
*/*ILLDSNPS: P SET INDEX VALUE TO RESCAN DSNAME PASSWORD */             48672001
ILLDSNPS DS    0H                      * * * *                          48680020
         MVI   PERRCODE,EIGHT          SET INDEX VALUE TO RESCAN        48690020
*                                         DSNAME PASSWORD               48700020
*/* D (,ILLPASWD) BRANCH */                                             48702001
         B     ILLPASWD                BRANCH                           48710020
         SPACE                                                          48720020
*                                                                       48730020
* INVALID PASSWORD FOR A USERID.                                        48740020
*                                                                       48750020
*/*ILLUIDPS: P SET INDEX VALUE TO RESCAN USERID PASSWORD */             48752001
ILLUIDPS DS    0H                      * * * *                          48760020
         MVI   PERRCODE,THIRTY2        SET INDEX VALUE TO RESCAN        48770020
*                                         USERID PASSWORD               48780020
         TM    DATAFLA2,PRESENT        OFF IF ON CURRENT PSWD  @Z40RPKQ 48780500
         BO    ILLSPSWD                SET UP FOR NEW PSWD     @Z40RPKQ 48781000
         MVI   MSGCODE,MSG9            PROMPT MSG FOR CURRENT  @Z40RPKQ 48781500
*                                      PASSWORD                @Z40RPKQ 48782000
         B     PSWSCAN                                                  48782500
ILLSPSWD MVI   MSGCODE,MSG21                                            48783000
PSWSCAN  LA    XINPUT,ONE(XINPUT)      INCREMENT PTR TO NEXT   @Z40RPKQ 48783500
*                                      CHARACTER IN CMD BUFFER @Z40RPKQ 48784000
         C     XINPUT,ENDINPUT         END OF BUFFER?          @Z40RPKQ 48784500
         BNL   PSWSCAN2                BRANCH IF AT END OF     @Z40RPKQ 48785000
         CLI   ZERO(XINPUT),SLASH      CURRENT CHAR A SLASH?   @Z40RPKQ 48785500
         BNE   PSWSCAN                 NO,CONTINUE SCAN        @Z40RPKQ 48786000
         LA    XINPUT,ONE(XINPUT)      MOVE INPUT PTR OVER ONE @Z40RPKQ 48786500
         NI    PFLAGS,HFF-PFENDF       TURN OFF END OF FILE FLG@Z40RPKQ 48787000
         OI    PFLAGS7,PSW2SET         TURN ON FILE FLAG TO INDICATE    48787500
*                                      THAT 4R IS POINTING TO NEW PASS  48788000
*                                      WORD                    @Z40RPKQ 48788500
PSWSCAN2 DS    0H                      * * * *                 @Z40RPKQ 48789000
         B     PROMBYPS                 SET UP BYPASS MODE     @Z40RPKQ 48789500
         SPACE                                                          48790020
*/*ILLPASWD: P INDICATE MESSAGE TO WRITE */                             48792001
ILLPASWD DS    0H                      * * * *                          48800020
         MVI   MSGCODE,MSG9            INDICATE MESSAGE TO WRITE        48810020
*/* P INDICATE PROMPT IN BYPASS MODE */                                 48812001
PROMBYPS OI    PFLAGS,PFBYPAS          INDICATE PROMPTING TO BE DONE IN 48814000
*                                         BYPASS MODE          @Z40RPKQ 48816000
         MVC   DATAUSER,INVPSAVE       SAVE ERR PTR TO DSNAME OR USERID 48840020
         MVC   INVPSAVE,PPOINTR        REPLACE ERR PTR WITH PASSWD PTR  48850020
*/* D (,SYSR1) BRANCH TO ERROR HANDLER */                               48852001
         B     SYSR1                   BRANCH TO ERROR HANDLER          48860020
         SPACE                                                          48870020
*                                                                       48880020
* INVALID QUOTED STRING OR INVALID PARENTHESIZED STRING                 48890020
*                                                                       48900020
*/*ILLPSTR: P SET INDEX VALUE FOR PSTRING */                            48902001
ILLPSTR  DS    0H                      INVALID PSTRING                  48910020
         MVI   PERRCODE,TWENTY         SET INDEX VALUE FOR PSTRING      48920020
*/* D (,ILLSTR1) BRANCH */                                              48922001
         B     ILLSTR1                 BRANCH                           48930020
         SPACE                                                          48940020
*/*ILLQSTR: P SET INDEX VALUE FOR QSTRING */                            48942001
ILLQSTR  DS    0H                      INVALID QSTRING                  48950020
         MVI   PERRCODE,TWENTY8        SET INDEX VALUE FOR QSTRING      48960020
         SPACE                                                          48970020
*/*ILLSTR1: P INDICATE MESSAGE TO WRITE */                              48972001
ILLSTR1  DS    0H                      * * * *                          48980020
         MVI   MSGCODE,MSG16           INDICATE MESSAGE TO WRITE        48990020
         SPACE                                                          49000020
*                                                                       49010020
* PREPARE POINTERS TO CREATE 2ND SEGMENT FOR 'INVALID STRING' MESSAGE.  49020020
* THIS MESSAGE IS ISSUED ONLY AT THE REQUEST OF A VALIDITY CHECKING     49030020
* ROUTINE.  COMMON CODE FOR PSTRING AND QSTRING.                        49040020
*                                                                       49050020
*/* D (YES,JUSTPROM,NO,) VALIDCHK RTN SPECIFIED ONLY REENTER MSG */     49052001
         TM    PFLAGS2,PFSKPINV        DID THE VALIDITY CHECK ROUTINE   49060020
*                                         SPECIFY ONLY A REENTER MSG    49070020
         BO    JUSTPROM                YES IF BIT ON --- BRANCH         49080020
         B     SYSR1                   GO TO ERROR HANDLER       YM2356 49090001
         SPACE                                                          49100020
*/*ILLSTR2: D (YES,ILLSTR3,NO,) STRING ENDS AT END OF INPUT */          49102001
ILLSTR2  DS    0H                      * * * *                          49110020
         LH    XINPUTB,PLENGTH         GET LENGTH OF STRING             49120020
         LA    XINPUTB,ONE(XINPUTB)    INCREASE BY ONE TO INCLUDE       49130020
*                                         BEGINNING PUNCTUATION         49140020
         L     R3,INVPSAVE             LOAD POINTER TO STRING           49150020
         AR    R3,XINPUTB              COMPUTE ENDING ADDRESS OF STRING 49160020
         C     R3,ENDINPUT             DOES STRING END AT END OF INPUT  49170020
         BNL   ILLSTR3                 YES, CONTINUE NORMALLY           49180020
         SPACE                                                          49190020
*/* P INCREASE LENGTH BY 1 TO INCLUDE ENDING DELIMITER */               49192001
         LA    XINPUTB,ONE(XINPUTB)    INCREASE LENGTH BY ONE TO        49200020
*                                         INCLUDE ENDING PUNCTUATION    49210020
*/* D (,ILLSTR3) CONTINUE NORMALLY */                                   49212001
*/*ILLKEYWD: P INDICATE MESSAGE TO WRITE */                             49214001
         B     ILLSTR3                 CONTINUE NORMALLY                49220020
         SPACE                                                          49230020
*                                                                       49240020
* INVALID KEYWORD.                                                      49250020
*                                                                       49260020
ILLKEYWD DS    0H                      * * * *                          49270020
         MVI   MSGCODE,MSG13           INDICATE MESSAGE TO WRITE        49280020
         SPACE                                                          49290020
*                                                                       49300020
* ENTRY FOR AMBIGUOUS MESSAGE                                           49310020
*                                                                       49320020
*/*ILLKAMB1: P LOAD OFFSET TO KEYWORD OR END OF FIELD PCE */            49322001
ILLKAMB1 DS    0H                      * * * *                          49330020
         MVI   PERRCODE,FOUR           SET INDEX VALUE FOR KEYWORD      49340020
         L     XPCE,RPCEAD             LOAD ADDRESS OF SUBFIELD PCE     49350020
         MVC   PDWORD(TWO),ZERO(XPCE)  ALIGN DATA ON PROPER BOUNDARY    49360020
         LH    XPCE,PDWORD             LOAD OFFSET TO KEYWORD OR        49370020
*                                         END-OF-FIELD PCE              49380020
         A     XPCE,PTABLEAD           OBTAIN TRUE PCE ADDRESS          49390020
         NI    RFLAGS,HFF-RFKYPRSE     CLEAR ALREADY PARSED FLAG        49400020
         MVC   INVPSAVE,PPOINTR        REPLACE WITH PTR TO KEYWORD      49410020
         SPACE                                                          49420020
*                                                                       49430020
* CALCULATE LENGTH OF DATA ENTERED.                                     49440020
*                                                                       49450020
*/*SYSR1: D (YES,JUSTPROM,NO,) VALIDCHK RTN SPECIFY ONLY REENTER MSG */ 49452001
SYSR1    DS    0H                      * * * *                          49464001
         OI    PFLAGS5,INVPRMPT        INDICATE PROMPT FOR THIS PARAM   49466001
*                                                                A42352 49468001
         TM    PFLAGS6,PSWDQFLG        IS QUOTED PASSWORD?       Y02666 49468402
         BO    SYSR7                   YES, GO PROCESS           Y02666 49468802
         TM    PFLAGS2,PFSKPINV        DID THE VALIDITY CHECK ROUTINE   49470020
*                                         SPECIFY ONLY A REENTER MSG    49480020
         BO    JUSTPROM                YES IF BIT ON --- BRANCH         49490020
         SPACE                                                          49500020
         TM    PFLAGS6,PSWDQFLG        QUOTED PASSWORD           Y02666 49502002
         BO    SYSR7                   YES, DONT ZERO LENGTH     Y02666 49504002
         XC    PLENGTH,PLENGTH         CLEAR LENGTH FIELD               49510020
*/* D (YES,SYSR4,NO,) PROCESSING COBOL PCE'S? */                        49510101
*/* COMMENT (1,15) DO NOT TEST */                                       49510201
*/* COMMENT (2,15) PFENDSET */                                          49510301
SYSR7    DS    0H                                                Y02666 49513502
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 49517202
         BO    SYSR4                   NO, CONTINUE PARSE        F41448 49520402
*/* D (YES,SYSR2,NO,) ENDBAKUP HAS BEEN SET */                          49523602
         TM    PFLAGS4,PFENDSET        HAS ENDBAKUP BEEN SET            49526802
         BZ    SYSR2                   NO, CONTINUE                     49530020
         SPACE                                                          49540020
         LA    XINPUT,ONE(XINPUT)      INCREMENT SCAN POINTER    M0882  49542020
*/* S PUSHI: SAVE CURRENT LEVEL */                                      49544001
         BAL   LINK1,PUSHI             YES, SAVE CURRENT LEVEL          49550020
         SPACE                                                          49560020
*/* P (,SYSR2) SAVE END OF DATA THAT IS INVALID */                      49562001
******* THIS NEXT LINE WAS DELETED DUE TO APAR-16362********  @ZA16362  49564000
******** MVC   ENDINPUT,ENDBAKUP ***** GET END OF DATA THAT IS INVALID  49566000
************************************************************  @ZA16362  49570000
*/*SYSR4: P TURN PFENDSET OFF */                                        49570401
SYSR4    NI    PFLAGS4,HFF-PFENDSET    TURN OFF END SET FLAG     M0882  49572001
         SPACE                                                          49580020
*/*SYSR2: P RESET SCAN PTR */                                           49582001
SYSR2    DS    0H                      * * * *                          49590020
*/* D (YES,SYSRINDL,NO,) PROCESSING COBOL PCE'S? */                     49590401
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S?   F41448 49592001
         BO    SYSR3                   YES, SKIP SCAN            F41448 49594001
         TM    PFLAGS7,PSW2SET        TEST TO SEE IF 4R HAS BEEN MOVE   49595000
*                                      BY ONE                  @Z40RPKQ 49596000
         BO    SYSR3                   YES, SKIP PAST DELIMITER@Z40RPKQ 49597000
         L     XINPUT,INVPSAVE         RESET SCAN PTR TO START OF       49600020
         TM    PFLAGS6,PSWDQFLG        QUOTED PASSWORD?          Y02666 49600402
*/* D (,SYSRSTR) START SCAN */                                          49602402
         BZ    SYSRISTR                START SCAN                Y02666 49610002
         LH    XINPUTB,PLENGTH         GET LENGTH OF STRING      Y02666 49612002
         LA    XINPUT,ONE(XINPUTB,XINPUT) GET END OF INPUT PTR   Y02666 49614002
         C     XINPUT,ENDINPUT         AT END OF INPUT?          Y02666 49616002
         BL    SYSDECR                 DECREMENT LENGTH          Y02666 49618002
         OI    PFLAGS,PFENDF           INDICATE END OF INPUT     Y02666 49618402
SYSDECR  DS    0H                                                Y02666 49618802
         NI    PFLAGS6,HFF-PSWDQFLG    TURN OFF QUOTED PSWD FLAG Y02666 49619702
         BCTR  XINPUT,ZERO             DECREMENT SCAN PTR        Y02666 49619802
         B     ILLSTR3                 GET CORE                  Y02666 49619902
         SPACE                                                          49620020
*/*SYSRISCN: D (YES,,NO,SYSRSTR) REACHED END OF INPUT */                49622001
SYSRISCN DS    0H                      * * * *                          49630020
         LA    XINPUT,ONE(XINPUT)      BUMP SCAN REGISTER BY ONE        49640020
         LR    XINPUTB,XINPUT          SET BACKUP REGISTER              49650020
         C     XINPUT,ENDINPUT         END OF INPUT                     49660020
         BL    SYSRISTR                NO --- BRANCH                    49670020
         SPACE                                                          49680020
*/* P SET END OF FILE INDICATOR */                                      49682001
         OI    PFLAGS,PFENDF           SET END-OF-FILE INDICATOR SO     49690020
*                                         CURRENT STATUS OF SCAN WILL   49700020
*                                         NOT BE SAVED BEFORE PROMPT    49710020
*/* D (,SYSRINDL) BRANCH TO BUILD MSG SEGMENT */                        49712001
         B     SYSRINDL                BRANCH TO BUILD MESSAGE SEGMENT  49720020
         SPACE                                                          49730020
*/*SYSRSTR: D (YES,,NO,SYSRSTR1) CHARACTER IS LEFT PAREN */             49732001
SYSRISTR DS    0H                      * * * *                          49740020
         CLI   ZERO(XINPUT),LEFTPRN    IS CHARACTER A LEFT PAREN        49750020
         BNE   SYSRSTR1                NO CONTINUE PROCESSING           49760020
         SPACE                                                          49770020
*/* P INDICATE LEFT PAREN FOUND */                                      49772001
         OI    PFLAGS3,LPRNFND         YES - INDICATE A LEFT PAREN WAS  49780020
*                                         FOUND                         49790020
         SPACE                                                          49800020
*/*SYSRSTR1: S TYPETEST: CHECK IF CHARACTER IS DELIMITER */             49802001
SYSRSTR1 DS    0H                      * * * *                          49810020
         LA    R1,DLIMREQD             SEE IF THE CHARACTER IS A        49820020
*                                         DELIMITER                     49830020
         BAL   LINK1,TYPETEST          BRANCH TO CHARACTER TEST ROUTINE 49840020
*                                                                       49850020
*/* D (YES,,NO,SYSRISCN) CHARACTER IS DELIMITER */                      49852001
         B     SYSCOMT                 +0 RETURN - NON DELIMITER Y02666 49860002
*                                      TEST FOR COMMENT DELIMITR Y02666 49870002
*                                      +4 RETURN - DELIMITER FOUND      49880020
*/* D (YES,,NO,SYSRINDL) DELIMITER IS RIGHT PAREN */                    49882001
         CLI   ZERO(XINPUT),RIGHTPRN   IS DELIMITER A RIGHT PAREN       49890020
         BNE   SYSRINDL                NO CONITNUE PROCESSING           49900020
         SPACE                                                          49910020
*/* D (YES,,NO,SYSRINDL) LEFT PAREN WAS FOUND */                        49912001
         TM    PFLAGS3,LPRNFND         YES - WAS A LEFT PAREN FOUND     49920020
         BZ    SYSRINDL                NO - CONTINUE PROCESSING         49930020
         SPACE                                                          49940020
*/* P TURN OFF LEFT PAREN FLAG */                                       49942001
         NI    PFLAGS3,HFF-LPRNFND     YES - TURN OFF LEFT PAREN FLAG   49950020
*/* D (,SYSRISCN) SKIP RIGHT PAREN */                                   49952001
         B     SYSRISCN                SKIP THE RIGHT PAREN             49960020
         SPACE                                                          49970020
SYSCOMT  DS    0H                                                Y02666 49972002
         LA    R15,ONE(XINPUT)         GET NEXT CHARACTER PTR    YM3610 49972502
         C     R15,ENDINPUT            END OF INPUT?             YM3610 49973002
         BC    CC10,SYSRISCN           BYPASS COMMENT CHECK       M4540 49973200
         CLC   ZERO(TWO,XINPUT),SLASHAST COMMENT DELIMITER?      Y02666 49974002
         BNE   SYSRISCN                NO,CONTINUE.ELSE END SCAN Y02666 49976002
*                                                                       49980020
* BUILD MESSAGE SEGMENT FOR DATA-ENTERED                                49990020
*                                                                       50000020
*/*SYSRINDL: P COMPUTE LENGTH OF ERROR FIELD */                         50002001
SYSRINDL DS    0H                      * * * *                          50010020
         NI    PFLAGS3,HFF-LPRNFND     TURN OFF POSSIBLE LEFT PAREN     50020020
*                                         FLAG                          50030020
*                                      INVPSAVE POINTS TO START OF      50040020
*                                         ERROR FIELD                   50050020
SYSR3    S     XINPUTB,INVPSAVE        COMPUTE LENGTH OF ERROR FIELD    50060001
*/* D (YES,SYSRISCN,NO,) IF LENGTH ZERO SKIP PAST DELIMITER */          50062001
         BZ    SYSRISCN                IF LENGTH ZERO SKIP PAST         50070020
*                                         DELIMITER                     50080020
         SPACE                                                          50090020
*/* P DECREMENT SCAN POINTER */                                         50090401
         BCTR  XINPUT,ZERO            DECREMENT SCAN POINTER     M2454  50092020
         SPACE                                                          50150020
*/*ILLSTR3: S GETCORE: GET CORE FOR MESSAGE SEGMENT */                  50152001
ILLSTR3  DS    0H                      ENTER HERE TO BUILD SEGMENT FOR  50160020
*                                         INVALID STRING MSG            50170020
         LA    R1,FOUR(XINPUTB)        GET SIZE OF CORE FOR MESSAGE SEG 50180020
*                                         PLUS FOUR FOR HEADER          50190020
         BAL   LINK1,GETCORE           GET CORE FOR MESSAGE SEGMENT     50200020
         SPACE                                                          50210020
*                                      CORE ADDRESS RETURNED IN R1      50220020
         ST    R1,SEGLIST+TWELVE       STORE ADDRESS IN LIST OF SEGMENT 50230020
         LA    R0,FOUR(XINPUTB)        GET SIZE OF MESSAGE SEGMENT      50240020
         STH   R0,ZERO(R1)             STORE INTO SEGMENT               50250020
*/* D (YES,ILLKAMB2,NO,) AMBIGUOUS MSG BEING WRITTEN */                 50252001
         CLI   MSGCODE,MSG4            IS AN AMBIGUOUS MSG BEING        50260020
*                                         WRITTEN                       50270020
         BE    ILLKAMB2                YES, GO BUILD AMBIGUOUS SEGMENT  50280020
*                                                                       50290020
         XR    R15,R15                 CLEAR WORK INDEX REGISTER        50300020
         IC    R15,MSGCODE             INSERT MESSAGE INDEX             50310020
         L     R3,ADRMSGC              LOAD ADDRESS OF MESSAGE CSECT    50320020
         L     R15,ZERO(R15,R3)        LOAD ADDRESS OF MESSAGE          50330020
         LH    R15,ZERO(R15)           LOAD THE PROTOTYPE MESSAGE LEN.  50340020
         SH    R15,H4                  COMPENSATE FOR HEADER            50350020
*/* P STORE TRUE LENGTH OF MSG  */                                      50352001
         STH   R15,TWO(R1)             STORE TRUE LENGTH AS OFFSET FOR  50360020
*                                         NEW SEGMENT                   50370020
*                                                                       50380020
* ENTRY FROM SETTING OF AMBIGUOUS MSG OFFSET.                           50390020
*                                                                       50400020
*/*ILLKAMB3: P MOVE TEXT TO NEW SEGMENT */                              50402001
ILLKAMB3 DS    0H                      * * * *                          50410020
         L     R15,INVPSAVE            LOAD START OF DATA ADDRESS       50420020
         BCTR  XINPUTB,ZERO            DECREMENT FOR EXECUTE     YM2742 50422001
         EX    XINPUTB,BUILDSEG        MOVE TEXT TO NEW SEGMENT         50430020
*                                      MSGCODE SETUP PREVIOUSLY         50440020
*/* S WRITER1: BRANCH TO PUTLINE ROUTINE */                             50442001
         BAL   LINK1,WRITER1           BRANCH TO PUTLINE ROUTINE        50450020
         SPACE                                                          50460020
*/*JUSTPROM: D (YES,,NO,JUSTPRM2) INVALID PASSWORD MSG WRITTEN */       50462001
JUSTPROM DS    0H                      * * * *                          50470020
         NI    PFLAGS2,HFF-PFSKPINV    SET POSSIBLE                     50480020
*                                         FLAGS TO ZERO                 50490020
         CLI   MSGCODE,MSG9            IS AN INVALID PASSWORD MSG BEING 50500020
*                                         WRITTEN                       50510020
         BE    RESERRPT                IF YES, BRANCH TO RESTORE ERROR  50513000
*                                      POINTER                 @Z40RPKQ 50516000
         CLI   MSGCODE,MSG21           CHECK TO SEE IF AN INVALID PASS  50520000
*                                      WORD MESSAGE IS BEING WRITTEN    50522000
*                                                              @Z40RPKQ 50524000
         BNE   JUSTPRM2                IF NO BRANCH - ZERO TEMP PDE     50530000
         SPACE                                                          50532000
*/* P RESTORE ERR PTR TO DSNAME OR USERID */                            50534000
RESERRPT MVC   INVPSAVE,DATAUSER       RESTORE ERR PTR TO DSNAME OR     50540000
*                                         USERID FOR POSSIBLE INVALID   50542000
*                                      MSG FROM VALIDITY CHECK @Z40RPKQ 50544000
*/* D (,JUSTPRM1) BRANCH */                                             50562001
         B     JUSTPRM1                BRANCH - TEMPORARY PDE           50570020
*                                         CANNOT BE ZEROED BECAUSE      50580020
*                                         DATA GATHERED SO FAR IS       50590020
*                                         GOOD                          50600020
         SPACE                                                          50610020
*/*JUSTPRM2: P ZERO TEMPORARY PDE */                                    50612001
JUSTPRM2 DS    0H                      * * * *                          50620020
         XC    TEMPPDE(LTPDE),TEMPPDE  ZERO THE TEMPORARY PDE           50630020
         SPACE                                                          50640020
*/*JUSTPRM1: P INDICATE MSG TO PROMPT WITH */                           50642001
JUSTPRM1 DS    0H                      * * * *                          50650020
         TM    PCEFLGB1(XPCE),PCEFHELP HELP MESSAGES SPECIFIED   Y01156 50652001
         BO    SETHLP                  SKIP SETTING REENTER MSG. Y01156 50654001
BYPHELP  DS    0H                                                Y02666 50656002
         MVI   MSGCODE,MSG3            INDICATE MESSAGE TO PROMPT WITH  50660001
         B     VCECONT                 SKIP SETTING REENTER+ MSG Y01156 50660101
SETHLP   DS    0H                                                Y01156 50660301
         TM    PFLAGS,PFBYPAS          IS BYPASS MODE            Y02666 50660702
         BO    BYPHELP                 BYPASS HELP               Y02666 50661102
         MVI   MSGCODE,MSG3A           INDICATE REENTER+ MSG     Y01156 50662102
VCECONT  DS    0H                                                Y01156 50662502
*/* D (NO,JUSTPRM3,YES,) PROCESSING COBOL PCE'S? */                     50663501
         TM    CBFLAGS1,COBOLMOD       PROCESSING COBOL PCE'S    F41448 50665001
         BZ    JUSTPRM3                NO, CONTINUE NORMAL PARSE F41448 50666501
*/* P LOAD RETURN ADDRESS SUPPLIED BY IKJPARS2 INTO LINK1 */            50668502
         L     LINK1,CBLNKSV2          IF IN COBOL MODE, LOAD    F41448 50671001
*                                      RETURN ADDRESS SUPPLIED   F41448 50672501
*                                      BY COBOL MODULE           F41448 50674001
*/* R () BRANCH TO WRITER2 */                                           50674402
         B     WRITER2                 BRANCH TO WRITER2 TO      F41448 50675501
*                                      WRITE MSG                 F41448 50684602
JUSTPRM3 XR    R1,R1                   CLEAR WORK REG TO ZERO           50686402
         IC    R1,PERRCODE             LOAD RESCAN INDEX VALUE          50688202
         L     LINK1,RETRNTAB(R1)      GET APPROPRIATE RESCAN ADDRESS   50690020
*/*JUSTPRM3: D (,WRITER2) PROMPT FOR NEW DATA */                        50692001
         B     WRITER2                 PROMPT USER FOR NEW DATA         50700020
         SPACE                                                          50710020
*                                                                       50720020
* SET OFFSET FOR AMBIGUOUS MESSAGE.                                     50730020
*                                                                       50740020
*/*ILLKAMB2: P SET OFFSET TO PLACE IN MSG TO INSERT TEXT */             50742001
ILLKAMB2 DS    0H                      * * * *                          50750020
         MVI   TWO(R1),ZERO            SET FIRST BYTE OF OFFSET TO 0    50760020
         MVI   THREE(R1),OFFSET6       SET OFFSET TO PLACE IN MSG       50770020
*                                         TO INSERT TEXT                50780020
*/* D (,ILLKAMB3) RETURN TO MAINLINE CODE */                            50782001
         B     ILLKAMB3                RETURN TO MAINLINE INVALID MSG   50790020
*                                         PROCESSING                    50800020
         EJECT                                                          50810020
*********************************************************************** 50820020
*                                                                     * 50830020
*                   CLEANUP ROUTINE                                   * 50840020
* THIS ROUTINE IS ENTERED:                                            * 50850001
* WHEN AN UNRECOVERABLE ERROR OCCURS, WHEN THE PUTGET SERVICE ROUTINE * 50860001
* INDICATES THAT INPUT DATA IS MISSING OR IS INVALID FOR A USER IN    * 50862001
* NOPROMPT MODE (THIS INCLUDES THE BAKCGROUND USER), OR WHEN AN       * 50864001
* INPUT/OUTPUT SERVICE ROUTINE INDICATES AN ATTENTION HAS BEEN ISSUED * 50866001
* TO FREE THE VARIABLE RESOURCES OBTAINED DURING PROCESSING AND THEN  * 50880001
* BRANCHES TO THE NORMAL EXIT ROUTINE.                                * 50890020
*                                                                     * 50900020
*********************************************************************** 50910020
*/*CLEANUP: P FREE CORE OBTAINED FOR INPUT PUSHDOWN STACK CHAIN */      50912001
         SPACE                                                          50920020
*                                                                       50930020
* FREE CORE OBTAINED FOR INPUT PUSHDOWN STACK CHAIN.                    50940020
*                                                                       50950020
CLEANUP  DS    0H                      ERROR CLEANUP ROUTINE            50960020
         L     R1,PIPDLCUR             LOAD THE CURRENT INPUT PUSHDOWN  50970020
*                                         STACK POINTER                 50980020
         NC    ONE(THREE,R1),ONE(R1)   IS THE CHAIN WORD ZERO           50990020
         BZ    GETPDLAD                IF YES THERE ARE NO ADDITIONAL   51000020
*                                         STACKS --- BRANCH             51010020
         SPACE                                                          51020020
         MVC   PIPDLCUR+ONE(L'PIPDLCUR-ONE),ONE(R1) SAVE PREVIOUS STACK 51030020
*                                         ADDRESS                       51040020
         LA    R0,EIGHT*(IPDLMAXE)+FOUR LOAD STACK SIZE AND SUBPOOL     51050020
*                                         NUMBER FOR FREEMAIN           51060020
         SPACE                                                          51070020
         FREEMAIN R,LV=(0),A=(1)       FREE INPUT PUSHDOWN STACK        51080020
         SPACE                                                          51090020
         B     CLEANUP                 CONTINUE LOOP                    51100020
         SPACE                                                          51110020
*                                                                       51120020
* OBTAIN PDL ADDRESS AND RESET PDL POINTER.                             51130020
*                                                                       51140020
*/*GETPDLAD: P OBTAIN PDL ADDR AND RESET PDL POINTER */                 51142001
*/* D (YES,,NO,CLEANUP2) WAS A PDL EVER OBTAINED  */                    51144001
GETPDLAD DS    0H                      GET PDL ADDRESS                  51150020
         L     R2,FOUR(PBASE)          LOAD CALLERS SAVEAREA ADDR       51160020
         L     R2,TWENTY4(R2)          LOAD INPUT PARAMETERS ADDR       51170020
         L     R2,SIXTEEN(R2)          LOAD ANSWER PLACE ADDR           51180020
         L     R1,ZERO(R2)             LOAD PDL ADDR                    51190020
         MVC   ZERO(L'ENDCHAIN,R2),ENDCHAIN INDICATE NO PDL EXISTS      51200020
         LTR   R1,R1                   WAS A PDL OBTAINED - MAY HAVE    51210020
*                                         FAILED TRYING TO GETMAIN      51220020
*                                         FOR THE PDL                   51230020
         BZ    CLEANUP2                IF NO PDL BRANCH                 51240020
         SPACE                                                          51250020
*                                                                       51260020
* FREE CORE OBTAINED FOR PDL AND NEW DATA                               51270020
*                                                                       51280020
*/*CLEANUP1: P FREE PDL CORE AND NEW DATA CORE */                       51282001
CLEANUP1 DS    0H                      FREE SUBPOOL 1 CORE              51290020
         L     R3,ZERO(R1)             SAVE ADDR OF NEXT AREA TO FREE   51300020
         L     R0,FOUR(R1)             LOAD SUBPOOL NO. AND LENGTH INTO 51310020
*                                         R0                            51320020
         SPACE                                                          51330020
         FREEMAIN R,LV=(0),A=(1)       ISSUE FREEMAIN                   51340020
         SPACE                                                          51350020
         LA    R3,ZERO(R3)             CLEAR HIGH ORDER BYTE            51360020
         LTR   R1,R3                   COPY NEXT CORE ELEMENT ADDR      51370020
         BNZ   CLEANUP1                REPEAT IF NOT ZERO               51380020
         SPACE                                                          51390020
*                                                                       51400020
* FREE RECURSIVE WORK SPACES                                            51410020
*                                                                       51420020
*/*CLEANUP2: P (,EXITNORM) FREE RECURSIVE WORK SPACES */                51422001
CLEANUP2 DS    0H                      * * * *                          51430020
         LTR    RBASE,RBASE            CHECK IF ALREADY FREED    Y01156 51432001
         BZ    EXITNORM                IF YES, GO TO NORMAL EXIT        51434001
*                                         PROCEDURE              Y01156 51436001
CLEANUP3 DS    0H                                                Y01156 51438001
         L     R2,RBASESV              SEE IF THERE IS A PREVIOUS       51440020
         LTR   R2,R2                      RECURSIVE WORKSPACE           51450020
         BZ    EXITNORM                IF NO, GO TO NORMAL EXIT         51460020
*                                         PROCEDURE                     51470020
         SPACE                                                          51480020
         LR    R1,RBASE                IF YES, LOAD ADDR OF CURRENT     51490020
*                                         RECURSIVE WORKAREA            51500020
         SPACE                                                          51510020
         FREEMAIN R,LV=RWORKSZ,A=(1)   ISSUE FREEMAIN                   51520020
         SPACE                                                          51530020
         LR    RBASE,R2                ESTABLISH NEW BASE REGISTER      51540020
         B     CLEANUP3                CONTINUE                  Y01156 51550001
         EJECT                                                          51560020
*********************************************************************** 51570020
*                                                                     * 51580020
* CHECK RETURN CODES FROM PUTLINE AND PUTGET.  SET PARSE RETURN       * 51590020
* CODES ACCORDINGLY.                                                  * 51600020
*                                                                     * 51610020
*********************************************************************** 51620020
         SPACE                                                          51630020
INVPARMS DS    0H                      * * * *                          51640020
*/*INVPARMS: P (,CLEANUP) INDICATE PARSE RETURN CODE */                 51642001
         MVI   RETCODE,RCERROR         INDICATE PARSE RETURN CODE       51650020
         B     CLEANUP                 CLEANUP AND EXIT                 51660020
         SPACE                                                          51670020
LINEDROP DS    0H                                                Y02666 51672002
         MVI   RETCODE,RCLNDROP        SET LIN DROP RETURN CODE  Y02666 51674002
         B     CLEANUP                 CLEANUP AND EXIT          Y02666 51676002
         SPACE                                                          51678002
ATTNEXIT DS    0H                      * * * *                          51680020
*/*ATTNEXIT: P (,CLEANUP) INDICATE PARSE RETURN CODE */                 51682001
         MVI   RETCODE,RCATTN          INDICATE PARSE RETURN CODE       51690020
         B     CLEANUP                 CLEANUP AND EXIT                 51700020
         SPACE                                                          51710020
*                                                                       51720020
* VALIDITY CHECK EXIT ROUTINE INDICATED IT COULD NOT CONTINUE AND WANTS 51730020
* PARSE TO TERMINATE.                                                   51740020
*                                                                       51750020
*/*VCERR: P (,CLEANUP) INDICATE PARSE RETURN CODE */                    51752001
VCERR    DS    0H                      * * * *                          51760020
         MVI   RETCODE,RCVCERR         INDICATE PARSE RETURN CODE       51770020
         B     CLEANUP                 CLEANUP AND EXIT                 51780020
         SPACE                                                          51790020
*                                                                       51800020
* THE FOLLOWING ACTIONS ARE TAKEN FOR THE VARIOUS RETURN CODES FROM     51810020
* PUTLINE                                                               51820020
*                                                                       51830020
*/*PLRCACT: D (0,WRITER1D,4,ATTNEXIT,8,INVPARMS,12,INVPARMS,16,         51832001
*/*GETERROR,,INVPARMS)  IS PUTLINE RETURN CODE  */                      51834001
PLRCACT  DS    0H                      * * * *                          51840020
         LTR   R15,R15                 IS THE RETURN CODE 0             51850020
         BZ    WRITER1D                YES, SUCCESSFUL COMPLETION,      51860020
*                                         CONTINUE                      51870020
         SPACE                                                          51880020
         CH    R15,H4                  IS THE RETURN CODE FROM          51890020
*                                         PUTLINE 4                     51900020
         BE    ATTNEXIT                YES, AN ATTENTION INTERRUPT      51910020
*                                         OCCURRED DURING PUTLINE       51920020
*                                         PROCESSING, GO SET PARSE      51930020
*                                         RETURN CODE AND EXIT          51940020
         SPACE                                                          51950020
         CH    R15,H8                  IS THE RETURN CODE FROM          51960020
*                                         PUTLINE 8                     51970020
         BE    INVPARMS                YES, 'NOWAIT' WAS SPECIFED TO    51980020
*                                         PUTLINE, THIS IS AN INVALID   51990020
*                                         RETURN CODE TO PARSE          52000020
*                                         GO SET PARSE RETURN CODE      52010020
*                                         AND EXIT                      52020020
         SPACE                                                          52030020
         CH    R15,H12                 IS THE RETURN CODE FROM          52040020
*                                         PUTLINE TWELVE                52050020
         BE    INVPARMS                YES, INVALID PARAMETERS WERE     52060020
*                                         PASSED TO PUTLINE, GO SET     52070020
*                                         PARSE RETURN CODE AND EXIT    52080020
         SPACE                                                          52090020
         CH    R15,H16                 IS THE RETURN CODE FROM          52100020
*                                         PUTLINE SIXTEEN               52110020
         BE    GETERROR                YES, A CONDITIONAL GETMAIN WAS   52120002
*                                         ISSUED BY PUTLINE AND THERE   52130020
*                                         WAS NOT SUFFICIENT SPACE TO   52140020
*                                         SATISFY THE REQUEST, GO SET   52150020
*                                         PARSE RETURN CODE AND EXIT    52160020
*                                                                Y02666 52160402
         CH    R15,H20                 WAS LINE DROP CONDITION DETECTED 52162002
*                                                                Y02666 52164002
         BE    LINEDROP                INDICATE LINE DROP OCCURRED      52166002
*                                                                Y02666 52168002
         SPACE                                                          52170020
         B     INVPARMS                NO, AN INVALID RETURN CODE WAS   52180020
*                                         RETURNED FROM PUTLINE, SET    52190020
*                                         PARSE RETURN CODE AND EXIT    52200020
         SPACE                                                          52210020
*                                                                       52220020
* THE FOLLOWING ACTIONS ARE TAKEN FOR THE VARIOUS RETURN CODES FROM     52230020
* PUTGET.                                                               52240020
*                                                                       52250020
*/*PGRCACT: D (0,WRITER2J,4,INVPARMS,8,ATTNEXIT,12,MSNGMSG,16,          52252001
*/*INVPARMS,20,INVPARMS,24,INVPARMS,28,GETERROR,,INVPARMS)              52254001
*/* IS PUTGET RETURN CODE   */                                          52256001
PGRCACT  DS    0H                      * * * *                          52260020
         LTR   R15,R15                 IS THE RETURN CODE FROM PUTGET   52270020
*                                         ZERO                          52280020
         BZ    WRITER2J                YES, SUCCESSFUL COMPLETION,      52290020
*                                         CONTINUE                      52300020
         SPACE                                                          52310020
         CH    R15,H4                  IS THE RETURN CODE FROM PUTGET   52320020
*                                         FOUR                          52330020
         BE    INVPARMS                YES, INPUT LINE RETURNED IS NOT  52340020
*                                         FROM A TERMINAL, INVALID      52350020
*                                         RETURN CODE TO PARSE, GO SET  52360020
*                                         PSRSE RETURN CODE AND EXIT    52370020
         SPACE                                                          52380020
         CH    R15,H8                  IS THE RETURN CODE FROM PUTGET   52390020
*                                         EIGHT                         52400020
         BE    ATTNEXIT                YES, AN ATTENTION INTERRUPT      52410020
*                                         OCCURRED DURING THE EXECUTION 52420020
*                                         OF PUTGET, GO SET PARSE       52430020
*                                         RETURN CODE AND EXIT          52440020
         SPACE                                                          52450020
         CH    R15,H12                 IS THE RETURN CODE FROM PURGET   52460020
*                                         TWELVE                        52470020
         BE    MSNGMSG                 YES, NO INPUT LINE RETURNED      52480020
*                                         BECAUSE NO PROMPTING WAS      52490020
*                                         SPECIFIED, GO ISSUE MISSING   52500020
*                                         MESSAGE                       52510020
         SPACE                                                          52520020
         CH    R15,H16                 IS THE RETURN CODE FROM PUTGET   52530020
*                                         SIXTEEN                       52540020
         BE    INVPARMS                YES, 'NOWAIT' WAS SPECIFIED,THIS 52550020
*                                         IS AN INVALID RETURN CODE     52560020
*                                         TO PARSE, GO SET PARSE RETURN 52570020
*                                         CODE AND EXIT                 52580020
         SPACE                                                          52590020
         CH    R15,H20                 IS THE RETURN CODE FROM PUTGET   52600020
*                                         TWENTY                        52610020
         BE    INVPARMS                YES, 'NOWAIT' WAS SPECIFIED THIS 52620020
*                                         IS AN INVALID RETURN CODE     52630020
*                                         TO PARSE, GO SET PARSE RETURN 52640020
*                                         CODE AND EXIT                 52650020
         SPACE                                                          52660020
         CH    R15,H24                 IS THE RETURN CODE FROM PUTGET   52670020
*                                         TWENTY-FOUR                   52680020
         BE    INVPARMS                YES, INVALID PARAMETERS WERE     52690020
*                                         PASSED TO PUTGET, GO SET      52700020
*                                         PARSE RETURN CODE AND EXIT    52710020
         SPACE                                                          52720020
         CH    R15,H28                 IS THE RETURN CODE FROM PUTGET   52730020
*                                         TWENTY-EIGHT                  52740020
         BE    GETERROR                YES, A CONDITIONAL GETMAIN WAS   52750020
*                                         ISSUED BY PUTGET AND THERE    52760020
*                                         WAS NOT SUFFICIENT SPACE TO   52770020
*                                         SATISFY THE REQUEST, GO SET   52780020
*                                         PARSE RETURN CODE AND EXIT    52790020
         CH    R15,H32                 LINE DROP DETECTED?       Y02666 52792002
         BE    LINEDROP                INDICATE LINE DROP        Y02666 52794002
         SPACE                                                          52800020
         B     INVPARMS                NO AN INVALID RETURN CODE WAS    52810020
*                                         RETURNED FROM PUTGET, SET     52820020
*                                         PARSE RETURN CODE AND EXIT    52830020
         SPACE                                                          52840020
         EJECT                                                          52850020
*********************************************************************** 52860020
*                                                                     * 52870020
*   THIS ROUTINE CONSTRUCTS THE MSG SEGMENTS TO WRITE A 'MISSING'     * 52880020
* MSG. IT IS ENTERED WHEN PROMPTING IS ATTEMPTED, BUT PUTGET          * 52890020
* INDICATES THE USER SPECIFIED NO PROMPT OR INPUT IS FROM A COMMAND   * 52900020
* PROCEDURE.  IF PUTGET WAS NOT ISSUING AN 'ENTER' MSG THE 'MISSING'  * 52910020
* MSG IS NOT SENT.  EXIT IS TO NEXTPCE.                               * 52920001
*                                                                     * 52930020
*********************************************************************** 52940020
         SPACE                                                          52950020
MSNGMSG  DS    0H                      WRITE 'MISSING' MSG SUBROUTINE   52960020
*/*MSNGMSG: D (YES,,NO,CLEANUP) DID PUTGET ISSUE 'ENTER' */             52962001
*/* P SET UP 'MISSING' OR 'MISSING PASSWORD' MSG INDEX */               52964001
         OI    PFLAGS5,INVFLG          INDICATE INVALID DATA WAS FOUND  52966001
*                                      OR NEEDED DATA IS MISSING Y01156 52968001
         TM    PCEOPT(XPCE),PCEFPTBY   TEST FOR BYPASS MODE BEFORE      52968401
*                                      UPDATING PCE PTR          Y01156 52968501
         BZ    SETRET                  DO NOT INDICATE,IF OFF    Y01156 52968801
         OI    PFLAGS5,BYPASFLG        INDICATE BYPASS MODE      Y01156 52969201
SETRET   DS    0H                                                Y01156 52969601
         NI    RFLAGS,HFF-RFNOSKIP                               Y01156 52969701
         NI    PFLAGS3,HFF-PFONE                                 Y01156 52969801
*      UPDATE  TO NEXT PCE                                       Y01156 52976001
         BAL   LINK1,SCANDLSN          RESET BUFFER-SCAN PTRS    Y01156 52978002
         NOP   ZERO                    +0 RETURN                 Y01156 52978202
         TM    PFLAGS,PFLIST           WHEN PROCESSING A LIST    Y01156 52978303
         BZ    MSNGNXT                 BYPASS PCE UPDATE         Y01156 52978403
         CLI   ONE(XINPUT),RIGHTPRN    IS END OF LIST FOUND?     Y02666 52978703
         BNE   MSNGRET                 BYPASS PCE UPDATE         Y02666 52982002
         NI    PFLAGS,HFF-PFLIST       INDICATE END OF LIST      Y02666 52982403
MSNGNXT  DS    0H                                                Y02666 52982802
         MVC   PDWORD(TWO),PCELEN(XPCE) ALIGN PCE LENGTH         Y01156 52983202
         AH    XPCE,PDWORD             ADD TO GET NEXT PCE PTR   Y01156 52995203
MSNGRET  DS   0H                                                 Y01156 52997203
         MVI   RETCODE,RCNOPRMT        INDICATE PARSE RETURN CODE       53000003
         LA    R14,MSG2                INDICATE MESSAGE TO WRITE        53002003
         CLI   MSGCODE,MSG1            WAS AN 'ENTER' MSG SENT TO       53004003
*                                         PUTGET                        53006003
         BE    ISSUEMSG                YES - THEN 'MISSING' MSG SHOULD  53010020
*                                         BE ISSUED - BRANCH            53020020
         SPACE                                                          53030020
         LA    R14,MSG5                INDICATE MESSAGE TO WRITE        53040020
         TM    DATAFLA2,PRESENT        TEST TO SEE IF CURRENT PASSWORD  53043000
*                                      HAS BEEN PROCESSED      @Z40RPKQ 53046000
         BO    NEWMSNG                 IF YES, BRANCH TO COMPARE FOR    53050000
*                                       MISSING NEW PASSWORD   @Z40RPKQ 53050900
         CLI   MSGCODE,MSG15           IS A MISSING CURRENT             53051800
*                                      PASSWORD BEING PROMPTED FOR      53052700
*                                                              @Z40RPKQ 53053600
         B    MSGMSNGN                BRANCH TO CHECK FOR END OF MISS   53054500
*                                     ING PASSWORD MESSAGE     @Z40RPKQ 53055400
NEWMSNG  DS    0H                      * * * *                 @Z40RPKQ 53056300
         CLI   MSGCODE,MSG22          IS A MISSING NEW PASSWORD BEING   53057200
*                                     PROMPTED FOR             @Z40RPKQ 53058100
MSGMSNGN DS    0H                     * * * *                  @Z40RPKQ 53060000
         BNE   MSNGEND                 IF NO BRANCH - NO FURTHER MSGS.  53070001
*                                                                Y01156 53072001
         SPACE                                                          53080020
*                                                                       53090020
* EITHER AN 'ENTER' OR AN 'ENTER PASSWORD FOR' MESSAGE WAS TO BE        53100020
* OUTPUTTED, IN WHICH CASE, A 'MISSING' OR A 'MISSING PASSWORD FOR'     53110001
* MESSAGE WILL BE OUTPUTTED.                                            53120001
*                                                                       53130020
*/*ISSUEMSG: P FIND MSG AND MSG ATTRIBUTES IN MSG CSECT */              53132001
ISSUEMSG DS    0H                      * * * *                          53140020
         STC   R14,MSGCODE             INDICATE MESSAGE TO WRITE        53150020
         L     R15,ADRMSGC             GET ADDR OF MSG CSECT            53160020
         L     R14,ZERO(R14,R15)       GET ADDRESS OF MESSAGE           53170020
         LH    R15,ZERO(R14)           LOAD PROTOTYPE MESSAGE LENGTH    53180020
         SH    R15,H4                  COMPENSATE FOR HEADER            53190020
         L     R1,SEGLIST+TWELVE       LOAD PTR TO SECOND SEGMENT       53200020
         STH   R15,TWO(R1)             MODIFY THE OFFSET IN SEGMENT TWO 53210020
*                                         TO CORRESPOND TO MISSING MSG  53220020
         MVC   PLUSSEG+TWO(TWO),TWO(R1) USE SAME OFFSET FOR PLUS        53230020
*                                         SEGMENT                       53240020
         SPACE                                                          53250020
*                                                                       53260020
* LOOP THROUGH THE HELP MESSAGE SEGMENT LISTS REPLACING THE 'ENTER'     53270020
* MESSAGE ADDRESS WITH THE 'MISSING' MESSAGE ADDRESS. THIS IS THE ONLY  53280020
* CASE WHERE A INFORMATIONAL MESSAGE MAY HAVE ASSOCIATED HELP MESSAGES. 53290020
*                                                                       53300020
*/* P REPLACE 'ENTER' MSG ADDR IN HELP SEGMENTS WITH 'MISSING' ADDR */  53302001
         LA    R1,SEGLIST              LOAD PTR TO FIRST SEGMENT LIST   53310020
         SPACE                                                          53320020
MSNGLOOP DS    0H                      * * * *                          53330020
         CLC   ZERO(L'ENDCHAIN,R1),ENDCHAIN IS THIS LAST LEVEL MESSAGE  53340020
         BE    MSNGEXIT                IF YES BRANCH                    53350020
         SPACE                                                          53360020
         L     R1,ZERO(R1)             IF NO - LOAD PTR TO NEXT LEVEL   53370020
         ST    R14,TWELVE(R1)          STORE ADDRESS OF 'MISSING' MSG.  53380020
         B     MSNGLOOP                CONTINUE THROUGH HELP MESSAGES   53390020
         SPACE                                                          53400020
MSNGEXIT DS    0H                      * * * *                          53410020
*/*MSNGEXIT: D (YES,,NO,WRITER1C) ANY HELP MESSAGES ? */                53412001
*/* P (,WRITER1A) FORMAT THE HELP MESSAGES  */                          53414001
         TM    PFLAGS,PFENDF                                     Y01156 53416001
         BZ    SETNEXT                                           Y01156 53418001
         LA    LINK1,CLEANUP           SET RETURN FROM WRITER1 TO       53420001
         B     MSNGCONT                CONTINUE                  Y01156 53422001
SETNEXT  DS    0H                                                Y01156 53422401
         LA    LINK1,NEXTPCE           SET RETURN FROM WRITER1 TO       53424001
*                                         NEXTPCE ROUTINE        Y01156 53430001
MSNGCONT DS    0H                                                Y01156 53432001
         CLC   SEGLIST(L'ENDCHAIN),ENDCHAIN WERE THERE ANY HELP MSGS.   53440020
         BE    WRITER1C                IF NO BRANCH                     53450020
         SPACE                                                          53460020
         MVC   PLUSSEG(L'H5),H5        INDICATE SEGMENT LENGTH          53470020
         MVI   PLUSSEG+FOUR,PLUS       PUT THE PLUS IN THE SEGMENT      53480020
         LA    R0,PLUSSEG              GET ADDRESS OF PLUS MSG SEGMENT  53490020
         ST    R0,SEGLIST+SIXTEEN      STORE AS THIRD SEGMENT OF        53500020
*                                         INFORMATIONAL MESSAGE         53510020
         LA    R15,THREE               TELL WRITER1 THREE SEGMENT MSG   53520020
         B     WRITER1A                WRITE THE MESSAGE AND EXIT       53530020
MSNGEND  DS    0H                                                Y01156 53530401
         TM    PFLAGS,PFENDF                                     Y01156 53531201
         BO    CLEANUP                                           Y01156 53531601
         B     NEXTPCE                                           Y01156 53531701
*/*IKJEFP00: END */                                                     53532001
         EJECT                                                          53540020
*********************************************************************** 53550020
*                                                                     * 53560020
*                                 CONSTANT AREA                       * 53570020
*                                                                     * 53580020
*********************************************************************** 53590020
         SPACE                                                          53600020
*                                                                       53610020
* THE FOLLOWING TWO FIELDS MUST BE CONTIGUOUS.                          53620020
*                                                                       53630020
LRPAREN  DC    C'( )'                  FOR NULL SUBFIELD                53640020
SLASHAST DC    CL2'/*'                 BEGIN COMMENT DELIMITER   Y02666 53642002
ASTSLASH DC    CL2'*/'                 END COMMENT DELIMITER     Y02666 53644002
*                                                                       53650020
         SPACE                                                          53660020
*                                                                       53670020
* VARIOUS NUMERIC QUANTITIES.                                           53680020
*                                                                       53690020
H0       DC    H'00'                   USED TO COMPARE ZERO      Y02666 53692002
H8       DC    H'8'                    LENGTH OF ENTRY IN PUSH DOWN     53700020
*                                         STACK                         53710020
*                                                                       53720020
H4       DC    H'4'                    TO USE AS A FOUR                 53730020
*                                                                       53740020
H3       DC    H'3'                    USED TO OBTAIN VALIDITY CHECK    53750020
*                                         ROUTINE ADDRESS FROM PCE      53760020
*                                                                       53770020
H5       DC    H'5'                    TO OBTAIN NEW BUFFER OFFSET IN   53780020
*                                         EXIT ROUTINE                  53790020
H12      DC    H'12'                   USED TO TEST FOR A VALIDITY      53800020
*                                         CHECK EXIT RETURN CODE        53810020
*                                         OF TWELVE                     53820020
H16      DC    H'16'                   USED TO TEST RETURN CODES        53830020
H20      DC    H'20'                   USED TO TEST RETURN CODES        53840020
H24      DC    H'24'                   USED TO TEST RETURN CODES        53850020
H28      DC    H'28'                   USED TO TEST RETURN CODES        53860020
H32      DC    H'32'                   USED TO TEST RETURN CODES Y02666 53860402
DEC7     DC    H'7'                    TYPES OF ADDRESSES               53870020
DEC9     DC    H'9'                    * * * *                          53880020
DEC32    DC    H'32'                   * * * *                          53890020
DATALEN  DC    H'200'                  LENGTH OF INVALID DATA PRINTED   53892020
TWO55    DC    H'255'                  MAX. LENGTH FOR EXECUTE INSTR.   53894001
TWO56    DC    H'256'                  EXCEDES MAXIMUM NUMBER OF LEVELS 53900020
*                                         OF INDIRECT ADDRESSING BY ONE 53910020
*                                                                       53911002
CRMESS   DS    0H                       NEW LINE CHARACTER MSG   Y05020 53912102
*                                                                       53913102
CRLEN    DC    H'6'                     LENGTH                   Y05020 53914102
*                                                                       53915102
CROFF    DC    H'0'                     OFFSET                   Y05020 53916102
*                                                                       53917102
CRMSG    DC    X'4015'                  NEW LINE CHARACTER       Y05020 53918102
         SPACE                                                          53920020
PSWDMSG  DS    0H                      PASSWORD OFFSET MSG       Y02666 53922002
         DC    H'27'                                             Y02666 53924002
         DC    H'30'                                             Y02666 53926002
         DC    CL23' -- PASSWORD PROCESSING'                     Y02666 53928002
*                                                                       53930020
* USED TO OBTAIN CORE TO BUILD HELP MESSAGE SEGMENTS.                   53940020
*                                                                       53950020
LISTLEN  DC    0H'0'                   HALFWORD BOUNDARY ALIGNMENT      53960020
         DC    AL2(LENMLLST)           LENGTH OF MULTI-LEVEL ELEMENT    53970020
*                                         USED FOR GETMAIN              53980020
         SPACE                                                          53990020
*                                                                       54000020
* VARIOUS INSTRUCTIONS THAT ARE 'EX'.                                   54010020
*                                                                       54020020
KEYWDCLC CLC   ZERO(*-*,R1),TEMPPDE    USED TO COMPARE NAME IN          54030020
*                                         IKJNAME PCE TO BUFFER DATA    54040020
*                                                                       54050020
NAMECOMP CLC   ONE(*-*,R1),ZERO(R15)   COMPARE ALIAS TO USER ENTERED    54052002
*                                      KEYWORD                   Y02666 54054002
NAMEMVC  MVC   TEMPPDE(*-*),PCENAMN(XPCE) MOVE NAME FROM PCE TO         54060020
*                                         WORKAREA                      54070020
*                                                                       54080020
IOBMVC2  MVC   ONE(*-*,XINPUT),FOUR(R3) TO COPY DATA RECEIVED FROM      54090020
*                                         PROMPT TO PARSE STORAGE       54100020
*                                                                       54110020
CLEARXC  XC    ZERO(*-*,R1),ZERO(R1)   TO CLEAR ALLOCATED STORAGE       54120020
*                                                                       54130020
BUILDSEG MVC   FOUR(*-*,R1),ZERO(R15)  TO BUILD A MESSAGE SEGMENT       54140020
*                                                                       54150020
ERASEXC  XC    ZERO(*-*,R3),ZERO(R3)   TO ERASE POSITIONAL PDE          54160020
*                                                                       54170020
PDEXMV   MVC   ZERO(*-*,R3),TEMPPDE    TO COPY DATA FROM TEMPORARY PDE  54180020
*                                         TO USERS PDE                  54190020
*                                                                       54200020
POSITXNC NC    ZERO(*-*,R3),ZERO(R3)   TO TEST FOR END OF PDE CHAIN     54210020
*                                                                       54220020
TYPETM   TM    ZERO(R15),*-*           TEST FOR CHARACTER TYPE          54230020
*                                                                       54240020
QSTRMVC  MVC   ZERO(*-*,XINPUT),ONE(XINPUT) USED TO REMOVE SECOND QUOTE 54250020
*                                         FROM QSTRING                  54260020
KEYWDMVC MVC   KEYDATA+ONE(*-*),ZERO(R14) MOVE USER KEYWORD      Y01156 54262001
UIDMVC   MVC   ZERO(*-*,R1),ZERO(R3)   MOVE DSNAME WITH USERID   Y02666 54264002
         SPACE                                                          54270020
*                                                                       54280020
* VARIOUS BIT CONFIGURATIONS USED AS MASKS. THEY MUST BE ON FULL WORD   54290020
* BOUNDARIES                                                            54300020
*                                                                       54310020
TYPEMASK DC    0A(0)                   ALIGN ON FULL WORD BOUNDARY      54320020
         DC    X'000000E0'             USED TO SELECT TYPE INDICATOR    54330020
*                                         FROM PCE                      54340020
*                                                                       54350020
EIGHTMAK DC    X'FFFFFFF8'             USED TO ROUND TO EIGHT           54360020
*                                                                       54370020
CLEARMK1 DC    X'000000FF'             USED IN STORAGE ALLOCATION RTN.  54380020
*                                                                       54390020
CLEARMK2 DC    X'FFFFFF00'             USED TO MASK REMAINDER LESS      54400020
*                                         THAN 256                      54410020
*                                                                       54420020
SUBPOOLN DC    AL1(1,0,0,0)            SUBPOOL NUMBER USED TO FREE      54430020
*                                         PUTGETS BUFFERS --- THIS      54440020
*                                         CONSTANT IS ALSO USED TO      54450020
*                                         SET THE SPECIAL FLAG IN       54460020
*                                         XINPUT BY THE INVALID RTN.    54470020
SPLNGTH  DC    X'01000010'             CORE USED FOR EXPRESSION VALUE   54480020
*                                         PDE'S                         54490020
         SPACE                                                          54500020
*                                                                       54510020
* SUBPOOL NUMBER AND CHAINING OVERHEAD FOR GETMAIN IN STORAGE           54520020
* ALLOCATION SUBROUTINE.                                                54530020
*                                                                       54540020
SPOVRHD  DC    0A(0)                   ALIGN ON FULL WORD BOUNDARY      54550020
         DC    AL1(1,0,0,8)            SUBPOOL NUMBER AND OVERHEAD      54560020
         SPACE                                                          54570020
*                                                                       54580020
* TABLE OF ADDRESSES FOR RESCANNING AFTER AN INVALID MESSAGE AND A      54590020
* PROMPT. THE INDEX VALUE TO THE APPROPRIATE ADDRESS IS IN PERRCODE.    54600020
*                                                                       54610020
RETRNTAB DC    0A(0)                   ALIGN ON FULL WORD BOUNDARY      54620020
         DC    A(DSNAMRSC)             PERRCODE = 0  DSNAME             54630020
         DC    A(NEXTPCE)              PERRCODE = 4  KEYWORDS           54640020
         DC    A(DSNPSRSC)             PERRCODE = 8  DSNAME PASSWORDS   54650020
         DC    V(ADDRERSC)             PERRCODE = 12 ADDRESS            54660003
         DC    A(VALUERSC)             PERRCODE = 16 VALUE              54670020
         DC    A(PSTRIRSC)             PERRCODE = 20 PSTRING            54680020
         DC    A(IDENTRSC)             PERRCODE = 24 IDENT              54690020
         DC    A(QSTRIRSC)             PERRCODE = 28 QSTRING            54700020
         DC    A(UIDPSRSC)             PERRCODE = 32 USERID PASSWORDS   54710020
         DC    A(USIDRSC)              PERRCODE = 36 USERID             54720020
         SPACE                                                          54730020
*  TABLE OF ADDRESSES USED BY COBOL ROUTINES TO ENTER PARSE      F41448 54732001
*  SUBROUTINES TO ACCOMPLISH SPECIFIC FUNCTIONS IN THE SCAN      F41448 54734001
*  AND PROMPTING UNDER COBOL SYMBOLIC DEBUG                      F41448 54736001
         SPACE                                                          54738001
QSTRINGA DC    A(QSTR01)               QSTRING ROUTINE ADDRESS   F41448 54738401
         DC    A(PROMPTQ)              PROMPT ROUTINE            F41448 54738801
         DC    A(POSITXCB)             ADD PDE TO PERM PDE       F41448 54739201
         DC    A(SYSR1)                WRITE INVALID MESSAGE     F41448 54739601
         DC    A(SKIPB)                SKIP BLANKS               F41448 54739701
         DC    A(RANGE)                RANGE DETERMINER          F41448 54739801
         DC    V(GENSCAN)              SCAN STRING ROUTINE       F41448 54739901
         DC    A(TYPETEST)             DETERMINE CHARACTER TYPE  F41448 54743201
         DC    V(TRANSQ)               TRANSLATE TO UPPERCASE    F41448 54745201
         DC    A(PSTRIMSG)             ENDING PAREN ASSUMED      F41448 54745601
         DC    A(LISTT)                LIST PROCESSOR            F41448 54746001
         DC    A(STALOC)               ALLOCTE STORAGE IN SBPL 1 F41448 54746401
         DC    A(SCANF)                POP THE STACK             F41448 54746501
         DC    A(GETCORE)              GET CORE WHICH WILL BE    F41448 54746601
*                                      RELEASE BEFORE EXIT       F41448 54749901
         DC    A(NAMESKP3)             SKIP TO THE NEXT  PCE     F41448 54751901
         DC    A(CLEANUP)              FREE CORE, DELETE MODULES F41448 54752301
*                                      EXIT                      F41448 54752701
         DC    A(PUSHI)                PUSH THE STACK            F41448 54753101
         DC    A(PARS2ENT)             ENTRY POINT FROM IKJPARS2 F41448 54753201
*                                      WHEN SUBROUTINE FUNCTIONS F41448 54753301
*                                      REQUIRED                  F41448 54756601
         DC    A(NEXTPCE)              GOTO NEXT PCE ROUTINE     F41448 54758601
MAXBLKSZ DC    F'248'                  BLOCK SIZE FOR GETMAINS BY       54760101
*                                         STORAGE ALLOCATION ROUTINE    54763401
         SPACE                                                          54766701
ADRMSGC  DC    A(IKJEFP10)             ADDRESS OF MESSAGE CSECT         54770020
ADPOSIT  DC    A(POSITX1)                                        Y02666 54772002
ADDRP    DC    A(IKJEFP03)             ADDRESS OF ADDRESS PCE PROCESSOR 54774003
*                                                               Y30NQJN 54776003
         SPACE                                                          54780020
ENDCHAIN DC    XL4'FF000000'           LAST ELEMENT INDICATOR FOR       54790020
*                                         CHAINS CONSTRUCTED WITHIN     54800020
*                                         PROGRAM                       54810020
         SPACE                                                          54820020
*                                                                       54830020
* CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A DSNAME            54840020
* QUALIFIER, MEMBER NAME, OR COMMAND NAME.                              54850001
*                                                                       54860020
DSNCNTL  EQU   *                       * * * *                          54870020
JOBNCNTL EQU   *                       JOB NAME CONTROL DATA     Y02666 54880002
JOBIDCTL EQU   *                       JOB ID   CONTROL DATA     Y02666 54882002
MEMBCNTL EQU   *                       * * * *                          54890020
         DC    X'40'                   ASTERISK NOT ALLOWED, MAXIMUM    54900020
*                                         LENGTH SPECIFIED              54910020
         DC    X'01'                   FIRST CHARACTER MUST BE          54920020
*                                         ALPHABETIC                    54930020
         DC    X'03'                   OTHER CHARACTERS MUST BE         54940020
*                                         ALPHAMERIC                    54950020
         DC    X'08'                   MAXIMUM LENGTH = 8               54960020
         SPACE                                                          54970020
*                                                                       54970401
*                                                                       54971201
* CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A PASSWORD          54971601
*                                                                       54972001
*                                                                       54972801
PWSYNTAX EQU   *                       * * * *                   A45306 54974001
         DC    X'40'                   ASTERISK NOT ALLOWED, MAXIMUM    54976001
*                                         LENGTH SPECIFIED       A45306 54978001
*                                         LENGTH SPECIFIED       A45306 54978101
         DC    X'00'                   FIRST CHARACTER MUST BE   Y02666 54978402
*                                         ANY,ANY                Y02666 54978802
         DC    X'03'                  OTHER CHARACTERS MUST BE          54979000
*                                         ALPHAMERIC           @Z40RPKQ 54979200
         DC    X'08'                   MAXIMUM LENGTH = 8        A45306 54984001
         SPACE                                                          54986001
*                                                                       54994002
* CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A USERID            54997002
*                                                                       55000020
USIDCNTL EQU   *                       * * * *                          55010020
         DC    X'40'                   ASTERISK NOT ALLOWED, MAXIMUM    55020020
*                                         LENGTH SPECIFIED              55030020
         DC    X'01'                   FIRST CHARACTERS MUST BE         55040020
*                                         ALPHABETIC                    55050020
         DC    X'03'                   OTHER CHARACTERS MUST BE         55060020
*                                         ALPHANUMERIC                  55070020
         DC    X'07'                   MAXIMUM LENGTH = 7               55080020
         SPACE                                                          55090020
*                                                                       55092002
*CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A VOLUME SERIAL NAME 55094002
*                                                                       55096002
VOLSERC  EQU   *                       * * * *                   Y02666 55098002
         DC    X'40'                   ASTERISK NOT ALLOWED, MAXIMUM    55098402
*                                         LENGTH SPECIFIED       Y02666 55098802
         DC    X'03'                   FIRST CHARACTERS MUST BE         55099202
*                                         ALPHANUMERIC           Y02666 55099602
         DC    X'03'                   OTHER CHARACTERS MUST BE         55099702
*                                         ALPHANUMERIC           Y02666 55099802
         DC    X'06'                   MAXIMUM LENGTH = 6        Y02666 55099902
         SPACE                                                          55103202
*                                                                       55106702
* CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A DSTHING           55110020
*                                                                       55120020
DSTCNTL  EQU   *                       * * * *                          55130020
         DC    X'C0'                   ASTERISK ALLOWED, MAXIMUM        55140020
*                                         LENGTH SPECIFIED              55150020
         DC    X'01'                   FIRST CHARACTER MUST BE          55160020
*                                         ALPHABETIC                    55170020
         DC    X'03'                   OTHER CHARACTERS MUST BE         55180020
*                                         ALPHAMERIC                    55190020
         DC    X'08'                   MAXIMUM LENGTH = 8               55200020
         SPACE                                                          55210020
*                                                                       55220020
* CONTROL INFORMATION FOR GENSCAN WHEN SCANNING FOR A KEYWORD           55230020
*                                                                       55240020
KEYSYNTX EQU   *                       * * * *                          55250020
         DC    X'40'                   ASTERISK NOT ALLOWED, MAXIMUM    55260020
*                                         LENGTH SPECIFIED              55270020
         DC    X'01'                   FIRST CHARACTER MUST BE          55280020
*                                         ALPHABETIC                    55290020
         DC    X'03'                   OTHER CHARACTERS MUST BE         55300020
*                                         ALPHAMERIC                    55310020
         DC    X'1F'                   MAXIMUM LENGTH = 31              55320020
         SPACE                                                          55330020
*                                                                       55340020
* L FORM OF I/O SERVICE ROUTINE MACROS.                                 55350020
*                                                                       55360020
LPUTLINE PUTLINE ,MF=L                 * * * *                          55370020
         SPACE                                                          55380020
LPLEND   EQU   *                       USED TO GET LENGTH OF LPUTLINE   55390020
         SPACE                                                          55400020
LPUTGET  PUTGET ,MF=L                  * * * *                          55410020
         SPACE                                                          55420020
LPGEND   EQU   *                       USED TO GET LENGTH OF LPUTGET    55430020
         SPACE                                                          55440020
AGENSCAN DC    V(GENSCAN)              ADDRESS OF GENSCAN ROUTINE       55450020
*                                         CONTAINED IN IKJEFP20         55460020
ATRANSQ  DC    V(TRANSQ)               ADDRESS OF TRANSLATE ROUTINE     55470020
*                                         CONTAINED IN IKJEFP20         55480020
ATRTAB   DC    A(TRTAB)                ADDRESS OF TABLE USED BY         55490020
*                                         TYPETEST IN SYNTAX CHECKING   55500020
*                                         CONTAINED IN IKJEFP20         55510020
AUPTAB   DC    A(UPPERTAB)             ADDRESS OF TABLE USED TO         55520020
*                                         TRANSLATE DATA TO UPPERCASE   55530020
*                                         CONTAINED IN IKJEFP20         55540020
         EJECT                                                          55550020
UPT      IKJUPT                                                         55550402
         EJECT                                                          55552002
ECT      IKJECT                                                         55554002
         EJECT                                                          55556002
PWORK    IKJEFPWA                                                       55560020
         EJECT                                                          55570020
*********************************************************************** 55580020
*                                                                     * 55590020
*                            RECURSIVE WORKSPACE                      * 55600020
*                                                                     * 55610020
*********************************************************************** 55620020
         SPACE                                                          55630020
RWORK    DSECT                                                          55640020
         SPACE                                                          55650020
RPCEAD   DS    A                       ADDRESS OF SUBFIELD PCE          55660020
         SPACE                                                          55670020
RBASESV  DS    A                       BACK CHAIN TO PREVIOUS RWORK     55680020
         SPACE                                                          55690020
RXPCESV  DS    A                       RESUME PCE ADDRESS WHEN GO BACK  55700020
         SPACE                                                          55710020
RLINKSV  DS    A                       RETURN ADDRESS FROM RECURSE      55720020
         SPACE                                                          55730020
RKEYSV   DS    A                       STARTING KEYWORD ADDRESS         55740020
         SPACE                                                          55750020
RLINKSV1 DS    A                       SAVE LINKAGE DURING ERASE        55760020
         SPACE                                                          55770020
RFLAGS   DS    X                       FLAG BYTE                        55780020
         SPACE                                                          55790020
RWORKSZ  EQU   *-RWORK                 RECURSIVE WORKSPACE LENGTH       55800020
         EJECT                                                          55810020
*********************************************************************** 55810802
*                                                                       55811602
*    THE FOLLOWING DATA AREAS ARE USED IN ASSISTING IN DETERMINING WHEN 55812402
*    TO PROMPT THE USER FOR ADDITIONAL OR MISSING INFORMATION.   Y02666 55813202
*                                                                       55814002
*********************************************************************** 55814802
IOSRL    DSECT                                                          55815602
IOSTELM  DS    A                       TOP STACK ELEMENT PTR     Y02666 55816402
IOSBELM  DS    A                       BOTTOM ELEMENT PTR        Y02666 55817202
*                                                                       55817402
*                                                                       55817602
INSTACK  DSECT                                                          55818002
INSCODE  DS    X                      INSTORAGE STACK FLAGS      Y02666 55818400
         END                                                            55818800
