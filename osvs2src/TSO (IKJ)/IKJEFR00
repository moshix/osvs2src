         TITLE 'IKJEFR00 RUN                                           *00001000
                       '                                                00002000
IKJEFR00 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFR00  73.222'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  LA    @12,4095(,@11)                                      0001 00012000
         USING @PSTART,@11                                         0001 00013000
         USING @PSTART+4095,@12                                    0001 00014000
         L     @00,@SIZDATD                                        0001 00015000
         GETMAIN R,LV=(0)                                               00016000
         LR    @09,@01                                             0001 00017000
         LA    @10,4095(,@09)                                      0001 00018000
         USING @DATD,@09                                           0001 00019000
         USING @DATD+4095,@10                                      0001 00020000
         ST    @13,@SA00001+4                                      0001 00021000
         LM    @00,@01,20(@13)                                     0001 00022000
         ST    @09,8(,@13)                                         0001 00023000
         LR    @13,@09                                             0001 00024000
         MVC   @PC00001(4),0(@01)                                  0001 00025000
BEGIN    MVC STACKLSD(LISTE-LISTB),STACKLS                              00026000
*   CPPLPTR=R1;                     /* SAVE ADDRESS OF TMP INPUT     */ 00027000
         ST    R1,CPPLPTR                                          0155 00028000
*   INVALIDT='000000'X;             /* INITIALIZE INVALID OPT SWITCH */ 00029000
         MVC   INVALIDT(3),@CB00769                                0156 00030000
*   SERVRPTR=ADDR(SERTEPRM);        /* ADDRESS OF SERVICE ROUTINE  0157 00031000
*                                      AREA FOR PPL,IOPL,DAPL        */ 00032000
         LA    @14,SERTEPRM                                        0157 00033000
         ST    @14,SERVRPTR                                        0157 00034000
*   DAPB0PTR=ADDR(DAIRPARM);        /* ADDR OF DAIR STORAGE AREA     */ 00035000
         LA    DAPB0PTR,DAIRPARM                                   0158 00036000
*   ADUPT=CPPLUPT;                  /* PTR TO UPT                    */ 00037000
         L     @14,CPPLPTR                                         0159 00038000
         MVC   ADUPT(4),CPPLUPT(@14)                               0159 00039000
*   ADECT=CPPLECT;                  /* PTR TO ECT                    */ 00040000
         MVC   ADECT(4),CPPLECT(@14)                               0160 00041000
*   ADECB=ADDR(COMMECB);            /* PTR TO ECB                    */ 00042000
         LA    @08,COMMECB                                         0161 00043000
         ST    @08,ADECB                                           0161 00044000
*   COMMECB=0;                      /* CLEAR COMMUNICATIONS ECB      */ 00045000
         SR    @08,@08                                             0162 00046000
         ST    @08,COMMECB                                         0162 00047000
*   SWITCH='00'X;                   /* INITIALIZE SWITCH             */ 00048000
         MVI   SWITCH,X'00'                                        0163 00049000
*                                                                  0164 00050000
*/********************************************************************/ 00051000
*/*                                                                  */ 00052000
*/* BUILD PARAMETER LIST FOR IKJPARSE AND USE THAT ROUTINE TO SCAN   */ 00053000
*/* THE COMMAND BUFFER                                               */ 00054000
*/*                                                                  */ 00055000
*/********************************************************************/ 00056000
*                                                                  0164 00057000
*   PPLPCL=RUNADCN;                 /* PTR TO CONTROL LIST           */ 00058000
         L     @08,PPLPTR                                          0164 00059000
         MVC   PPLPCL(4,@08),RUNADCN                               0164 00060000
*   PPLCBUF=CPPLCBUF;               /* PTR TO COMMAND BUFFER         */ 00061000
         MVC   PPLCBUF(4,@08),CPPLCBUF(@14)                        0165 00062000
*   PPLANS=ADDR(PDLADDR);           /* PTR TO ANSWER PLACE           */ 00063000
         LA    @14,PDLADDR                                         0166 00064000
         ST    @14,PPLANS(,@08)                                    0166 00065000
*   R1=PPLPTR;                      /* PTR TO SER.RTE.PARM LIST      */ 00066000
         LR    R1,@08                                              0167 00067000
*   GEN REFS(R1)SETS(R15);                                         0168 00068000
*                                   /* PARSE TO SCAN CMD BFR   Y01993*/ 00069000
         LINK EP=IKJPARS                                                00070000
*   RCODESV=R15;                    /* SAVE PARSE RETURN CODE        */ 00071000
         ST    R15,RCODESV                                         0169 00072000
*   IF RCODESV=0 THEN               /* A RETURN CODE OF ZERO       0170 00073000
*                                      INDICATES                     */ 00074000
         L     @14,RCODESV                                         0170 00075000
         LTR   @14,@14                                             0170 00076000
         BZ    @RT00170                                            0170 00077000
*     GO TO NOPRSERR;               /* PARSE WAS SUCCESSFUL          */ 00078000
*DIAGPARS:                                                         0172 00079000
*   IF RCODESV=4 THEN                                              0172 00080000
DIAGPARS CLC   RCODESV(4),@CF00106                                 0172 00081000
         BNE   @RF00172                                            0172 00082000
*     DO;                           /* IF USER IN NON PROMPT MODE    */ 00083000
*       RTCODE12=YES;               /* IND RUN CAN'T CONTINUE  Y01993*/ 00084000
         OI    RTCODE12,B'00000100'                                0174 00085000
*       GO TO EXIT1;                /* EXIT                          */ 00086000
         B     EXIT1                                               0175 00087000
*     END;                          /* END NO PROMPT PROCESSING      */ 00088000
*   W4=ADDR(PARSE);                 /* PARSE ERROR                   */ 00089000
@RF00172 LA    @14,PARSE                                           0177 00090000
         ST    @14,W4                                              0177 00091000
*   IF RCODESV=16 THEN                                             0178 00092000
         CLC   RCODESV(4),@CF00154                                 0178 00093000
         BNE   @RF00178                                            0178 00094000
*     DO;                           /* IF NO STORAGE                 */ 00095000
*NOSTORGE:                                                         0180 00096000
*       W1=ADDR(SEG10);             /* NOT ENOUGH MAIN STORAGE       */ 00097000
NOSTORGE LA    @14,SEG10                                           0180 00098000
         ST    @14,W1                                              0180 00099000
*       W3=0;                       /* END OF MESSAGE                */ 00100000
         SR    @14,@14                                             0181 00101000
         ST    @14,W3                                              0181 00102000
*       GO TO ISSMSG;               /* ISSUE MESSAGE                 */ 00103000
         B     ISSMSG                                              0182 00104000
*     END;                          /* END NO STORAGE                */ 00105000
*COMMERR:                                                          0184 00106000
*   W1=ADDR(SEG09);                 /* COMMAND SYSTEM ERROR          */ 00107000
@RF00178 DS    0H                                                  0184 00108000
COMMERR  LA    @14,SEG09                                           0184 00109000
         ST    @14,W1                                              0184 00110000
*   W3=ADDR(SEG04);                 /* MESSAGE ID                    */ 00111000
         LA    @14,SEG04                                           0185 00112000
         ST    @14,W3                                              0185 00113000
*   W5=ADDR(SEG11);                 /* RETURN CODE IS                */ 00114000
         LA    @14,SEG11                                           0186 00115000
         ST    @14,W5                                              0186 00116000
*   W6=ADDR(RTCDLEN);               /* NUMERICAL RETURN CODE         */ 00117000
         LA    @14,RTCDLEN                                         0187 00118000
         ST    @14,W6                                              0187 00119000
*   W7=0;                           /* END OF MESSAGE                */ 00120000
         SR    @14,@14                                             0188 00121000
         ST    @14,W7                                              0188 00122000
*   CVD(RCODESV,UNPACK);            /* CONVERT TO DECIMAL      Y01993*/ 00123000
         L     @14,RCODESV                                         0189 00124000
         CVD   @14,UNPACK                                          0189 00125000
*   UNPK(RTCDAREA,UNPACK);          /* UNPACK TO ZONED         Y01993*/ 00126000
         UNPK  RTCDAREA(8),UNPACK(8)                               0190 00127000
*   FZERO=FZERO|'F0'X;              /* OR IN F0 IN LOWER BYTE        */ 00128000
         OI    FZERO,X'F0'                                         0191 00129000
*   RTCDLEN=4;                      /* RETURN CODE LENGTH            */ 00130000
         MVC   RTCDLEN(2),@CH00106                                 0192 00131000
*ISSMSG:                                                           0193 00132000
*   W2=0;                           /* END FIRST LEVEL               */ 00133000
ISSMSG   SR    @14,@14                                             0193 00134000
         ST    @14,W2                                              0193 00135000
*   RTCODE12=YES;                   /* RUN FAILED RETURN 12    Y01993*/ 00136000
         OI    RTCODE12,B'00000100'                                0194 00137000
*   CALL PUTINTFC;                  /* ISSUE MESSAGE           Y01993*/ 00138000
         BAL   @14,PUTINTFC                                        0195 00139000
*   IF STPRSNT=YES THEN             /* IF STACK PRESENT        Y01993*/ 00140000
         TM    STPRSNT,B'01000000'                                 0196 00141000
         BO    @RT00196                                            0196 00142000
*     GO TO STEXIT;                 /* RETURN TO FREE STACK    Y01993*/ 00143000
*   ELSE                                                           0198 00144000
*     GO TO EXIT1;                  /* RETURN TO EXIT          Y01993*/ 00145000
         B     EXIT1                                               0198 00146000
*NOPRSERR:                                                         0199 00147000
*   PDLPRES=YES;                    /* INDICATE PDL PRESENT    Y01993*/ 00148000
NOPRSERR OI    PDLPRES,B'00001000'                                 0199 00149000
*   CALL DSNRTE;                    /* PROCESS PARTS OF DSNAME Y01993*/ 00150000
         BAL   @14,DSNRTE                                          0200 00151000
*                                                                  0201 00152000
*/********************************************************************/ 00153000
*/*                                                                  */ 00154000
*/*      DETERMINE IF THE RIGHTMOST QUALIFIER  OF THE DSNAME IS A    */ 00155000
*/*      VALID COMPILER COMMAND (IF ANY)                             */ 00156000
*/*                                                                  */ 00157000
*/* IF IT HAS NOT SEE IF THE TYPE HAS BEEN SPECIFIED , IF IT         */ 00158000
*/*      HAS NOT, PROMPT FOR IT. IF IT HAS BEEN SPECIFIED AND THE    */ 00159000
*/*      RIGHTMOST QUALIFIER IS A VALID COMMAND, THE TYPE TAKES      */ 00160000
*/*      PRECEDENCE                                                  */ 00161000
*/*                                                                  */ 00162000
*/*      APPEND THE COMPILER COMMAND IF NECESSARY. APPENDAGE IS NOT  */ 00163000
*/*      NECESSARY FOR FULLY QUALIFIED NAMES OR NAMES WHOSE RIGHT    */ 00164000
*/*      MOST QUALIFIER IS A VALID COMPILER COMMAND                  */ 00165000
*/*                                                                  */ 00166000
*/********************************************************************/ 00167000
*                                                                  0201 00168000
*QUALRTE:                                                          0201 00169000
*   IF DSLENG=0 THEN                /* 0 INDICATES NO DSNAME         */ 00170000
QUALRTE  LH    @14,DSLENG                                          0201 00171000
         SR    @08,@08                                             0201 00172000
         CR    @14,@08                                             0201 00173000
         BE    @RT00201                                            0201 00174000
*     GO TO NOTQUAL;                /* SO QUALIFICATION NECESSARY    */ 00175000
*   X=ADDR(DSNBUF)+DSLENG;          /* POINT TO END OF DSNAME        */ 00176000
         LA    X,DSNBUF                                            0203 00177000
         AR    X,@14                                               0203 00178000
*   Z=0;                            /* Z TO BE USED AS COUNTER       */ 00179000
         ST    @08,Z                                               0204 00180000
*TESTQUAL:                                                         0205 00181000
*   Z=Z+1;                          /* KEEP COUNT OF CHARACTERS      */ 00182000
TESTQUAL LA    @14,1                                               0205 00183000
         A     @14,Z                                               0205 00184000
         ST    @14,Z                                               0205 00185000
*   X=X-1;                          /* ADDRESS OF NEXT CHARACTER     */ 00186000
         BCTR  X,0                                                 0206 00187000
*   IF LASTQUAL='.' THEN                                           0207 00188000
         CLI   LASTQUAL(X),C'.'                                    0207 00189000
         BNE   @RF00207                                            0207 00190000
*     DO;                           /* CHECK FOR A PERIOD            */ 00191000
*       PRDFOUND=YES;               /* INDICATE PERIOD WAS     Y01993*/ 00192000
         OI    PRDFOUND,B'00000001'                                0209 00193000
*       GO TO QUALFIND;             /* FOUND AND A QUALIFIER EXIST   */ 00194000
         B     QUALFIND                                            0210 00195000
*     END;                          /* END CHECK FOR PERIOD          */ 00196000
*   IF Z=DSLENG THEN                /* IF ALL CHARACTERS HAVE        */ 00197000
@RF00207 L     @14,Z                                               0212 00198000
         CH    @14,DSLENG                                          0212 00199000
         BE    @RT00212                                            0212 00200000
*     GO TO QUALFND2;               /* BEEN CHECKED THEN DSNAME      */ 00201000
*                                   /* CONTAINS ONLY ONE             */ 00202000
*                                   /* QUALIFIER. CHECK IT           */ 00203000
*   GO TO TESTQUAL;                 /* OTHERWISE,CHECK NEXT CHAR.    */ 00204000
         B     TESTQUAL                                            0214 00205000
*                                   /* THE DSNAME CONTAINS MORE      */ 00206000
*                                   /* THAN ONE QUALIFIER. X CON-    */ 00207000
*                                   /* TAINS THE ADDRESS OF THE      */ 00208000
*                                   /* '.' PRECEDING THE LAST        */ 00209000
*                                   /* QUALIFIER. Z CONTAINS THE     */ 00210000
*                                   /* LENGTH OF THE LAST QUALI-     */ 00211000
*                                   /* FIER + 1.                     */ 00212000
*QUALFIND:                                                         0215 00213000
*   X=X+1;                          /* X POINTS TO QUALIFIER         */ 00214000
QUALFIND AH    X,@CH00033                                          0215 00215000
*   Z=Z-1;                          /* Z CONTAINS LENGTH OF QUAL     */ 00216000
         L     @14,Z                                               0216 00217000
         BCTR  @14,0                                               0216 00218000
         ST    @14,Z                                               0216 00219000
*                                   /* IFIER.                        */ 00220000
*                                   /* IF THE NAME CONTAINS ONLY     */ 00221000
*                                   /* ONE QUALIFIER, X POINTS       */ 00222000
*                                   /* TO THE FIRST CHARACTER OF     */ 00223000
*                                   /* THAT QUALIFIER, Z CONTAINS    */ 00224000
*                                   /* ITS LENGTH                    */ 00225000
*QUALFND2:                                                         0217 00226000
*   BUF=' ';                        /* BLANK BUFFER TO HOLD QUAL     */ 00227000
QUALFND2 MVI   BUF+1,C' '                                          0217 00228000
         MVC   BUF+2(6),BUF+1                                      0217 00229000
         MVI   BUF,C' '                                            0217 00230000
*   BUF(1:Z)=LAST(1:Z);             /* MOVE THE LAST QUALIFIER       */ 00231000
         L     @14,Z                                               0218 00232000
         BCTR  @14,0                                               0218 00233000
         EX    @14,@SM00892                                        0218 00234000
*                                   /* INTO A BUFFER                 */ 00235000
*   Y=1;                            /* SET UP COUNTER TO LOOK        */ 00236000
         MVC   Y(4),@CF00033                                       0219 00237000
*                                   /* THRU TABLE OF COMPLR NAMES    */ 00238000
*TESTBUF:                                                          0220 00239000
*   IF TYPES(Y,1)='FF'X THEN        /* IF THE END OF THE LIST        */ 00240000
TESTBUF  L     @14,Y                                               0220 00241000
         LR    @08,@14                                             0220 00242000
         SLA   @08,4                                               0220 00243000
         LA    @02,TYPES-16(@08)                                   0220 00244000
         CLI   0(@02),X'FF'                                        0220 00245000
         BE    @RT00220                                            0220 00246000
*     GO TO NOTQUAL;                /* HAS BEEN REACHED,THEN QUAL    */ 00247000
*                                   /* IFIER IS NOT VALID COM-       */ 00248000
*                                   /* PILER COMMAND                 */ 00249000
*   IF BUF=QUALTYPE(Y)THEN          /* A MATCH INDICATES LAST        */ 00250000
         LR    @08,@14                                             0222 00251000
         MH    @08,@CH00037                                        0222 00252000
         LA    @02,QUALTYPE-10(@08)                                0222 00253000
         CLC   BUF(8),0(@02)                                       0222 00254000
         BE    @RT00222                                            0222 00255000
*                                   /* QUALIFIER IS A VALID COMPI    */ 00256000
*     GO TO VALDCMPL;               /* IS AT LEAST PARTIALLY QUAL    */ 00257000
*   Y=Y+1;                          /* INCREMENT TO NEXT NAME        */ 00258000
         AH    @14,@CH00033                                        0224 00259000
         ST    @14,Y                                               0224 00260000
*   GO TO TESTBUF;                  /* CONTINUE SEARCH               */ 00261000
         B     TESTBUF                                             0225 00262000
*                                   /* THE RIGHTMOST QUALIFIER OF    */ 00263000
*                                   /* THE DSNAME IS A VALID COM-    */ 00264000
*                                   /* PILER COMMAND-QUALIFICA-      */ 00265000
*                                   /* TION IS NOT NECESSARY         */ 00266000
*VALDCMPL:                                                         0226 00267000
*   IF TYPEPDE=0 THEN               /* IF TYPE WAS NOT SPECIFIED     */ 00268000
VALDCMPL L     @14,PDLADDR                                         0226 00269000
         ICM   @08,3,TYPEPDE(@14)                                  0226 00270000
         BNZ   @RF00226                                            0226 00271000
*     IF PRDFOUND=YES THEN          /* AND A QUALIF WAS FOUND  Y01993*/ 00272000
         TM    PRDFOUND,B'00000001'                                0227 00273000
         BO    @RT00227                                            0227 00274000
*       GO TO DAIRINIT;             /* IN THE DATA SET NAME, GO      */ 00275000
*     ELSE                                                         0229 00276000
*       GO TO PROMPT;               /* TO DAIR, ELSE PROMPT          */ 00277000
         B     PROMPT                                              0229 00278000
*   CALCY=Y;                        /* SAVE CALCULATED QUALIF  Y01993*/ 00279000
@RF00226 L     CALCY,Y                                             0230 00280000
*   Y=TYPEPDE;                      /* Y EQUALS SPECIFIED TYPE       */ 00281000
         L     @14,PDLADDR                                         0231 00282000
         LH    @14,TYPEPDE(,@14)                                   0231 00283000
         ST    @14,Y                                               0231 00284000
*   IF CALCY=2 THEN                 /* IF FORT IS QUALIFIER          */ 00285000
         CH    CALCY,@CH00078                                      0232 00286000
         BNE   @RF00232                                            0232 00287000
*     IF Y=6 THEN                   /* IF FORT WAS SPECIFIED         */ 00288000
         CH    @14,@CH00104                                        0233 00289000
         BNE   @RF00233                                            0233 00290000
*       IF PRDFOUND=YES THEN        /* TEST IF QUALIFIER       Y01993*/ 00291000
         TM    PRDFOUND,B'00000001'                                0234 00292000
         BO    @RT00234                                            0234 00293000
*         GO TO DAIRINIT;           /* GO TO DAIR INIT ROUTINE       */ 00294000
*   IF Y^=CALCY THEN                /* IF THE RIGHTMOST QUALIFIER    */ 00295000
@RF00233 DS    0H                                                  0236 00296000
@RF00232 C     CALCY,Y                                             0236 00297000
         BNE   @RT00236                                            0236 00298000
*     GO TO PRMPRET;                /* DOES NOT EQUAL TYPE APPEND    */ 00299000
*                                   /* A PERIOD (.) AND TYPE         */ 00300000
*   IF PRDFOUND=YES THEN            /* IF A . WAS FOUND THEN   Y01993*/ 00301000
         TM    PRDFOUND,B'00000001'                                0238 00302000
         BO    @RT00238                                            0238 00303000
*     GO TO DAIRINIT;               /* NOTHING HAS TO BE APPENDED,   */ 00304000
*   ELSE                            /* OTHERWISE APPEND . AND TYPE   */ 00305000
*     GO TO PRMPRET;                /* GO TO TEST FOR QUOTES         */ 00306000
         B     PRMPRET                                             0240 00307000
*NOTQUAL:                                                          0241 00308000
*   NODSNCON=YES;                   /* INDICATE THAT THE NAME  Y01993*/ 00309000
NOTQUAL  OI    NODSNCON,B'00010000'                                0241 00310000
*                                   /* DOES NOT FOLLOW CONVENTION    */ 00311000
*PROMPT:                                                           0242 00312000
*   IF TYPEPDE=0 THEN               /* IF THE TYPE HAS NOT BEEN      */ 00313000
PROMPT   L     @14,PDLADDR                                         0242 00314000
         LH    @14,TYPEPDE(,@14)                                   0242 00315000
         LTR   @14,@14                                             0242 00316000
         BZ    @RT00242                                            0242 00317000
*     GO TO PRMPTYPE;               /* SPECIFIED,PROMPT FOR IT       */ 00318000
*   Y=TYPEPDE;                      /* PROPER SUBSCRIPT FOR TYPE     */ 00319000
         ST    @14,Y                                               0244 00320000
*PRMPRET:                                                          0245 00321000
*   IF FULLQUAL=YES THEN            /* RETURN FROM PROMPT      Y01993*/ 00322000
PRMPRET  TM    FULLQUAL,B'10000000'                                0245 00323000
         BO    @RT00245                                            0245 00324000
*                                   /* DO NOT QUALIFY FULLY          */ 00325000
*     GO TO DAIRINIT;               /* QUALIFIED NAMES               */ 00326000
*   X=ADDR(DSNBUF)+DSLENG;          /* POINTS TO END OF DSNAME       */ 00327000
         LH    @14,DSLENG                                          0247 00328000
         LA    @08,DSNBUF                                          0247 00329000
         LR    X,@08                                               0247 00330000
         AR    X,@14                                               0247 00331000
*                                   /* BUFFER                        */ 00332000
*   IF X=ADDR(DSNBUF)THEN           /* IF NO DSNAME HAS BEEN         */ 00333000
         CR    X,@08                                               0248 00334000
         BE    @RT00248                                            0248 00335000
*     GO TO QUALONLY;               /* SPECIFIED, QUALIFIER          */ 00336000
*                                   /* BECOMES DSNAME                */ 00337000
*   LASTQUAL='.';                   /* PLACE '.' THERE               */ 00338000
         MVI   LASTQUAL(X),C'.'                                    0250 00339000
*   DSLENG=DSLENG+1;                /* UPDATE LENGTH OF DSNAME       */ 00340000
         LA    @08,1                                               0251 00341000
         AR    @14,@08                                             0251 00342000
         STH   @14,DSLENG                                          0251 00343000
*   X=X+1;                          /* POINT TO NEXT AVAILABLE       */ 00344000
         AR    X,@08                                               0252 00345000
*QUALONLY:                                                         0253 00346000
*   LAST=QUALTYPE(Y);               /* SPOT IN BUFFER AND APPEND     */ 00347000
QUALONLY L     @14,Y                                               0253 00348000
         MH    @14,@CH00037                                        0253 00349000
         LA    @08,QUALTYPE-10(@14)                                0253 00350000
         MVC   LAST(8,X),0(@08)                                    0253 00351000
*   DSLENG=DSLENG+QUALLENG(Y);      /* APPROPRIATE QUALIFIER.        */ 00352000
         LH    @08,DSLENG                                          0254 00353000
         AH    @08,QUALLENG-10(@14)                                0254 00354000
         STH   @08,DSLENG                                          0254 00355000
*                                   /* UPDATE LENGTH                 */ 00356000
*                                                                  0255 00357000
*/********************************************************************/ 00358000
*/*                                                                  */ 00359000
*/*  INTERFACE WITH DAIR SERVICE ROUTINE                             */ 00360000
*/*                                                                  */ 00361000
*/*      . BUILD THE DAIR PARAMETER LIST                             */ 00362000
*/*      . PASS CONTROL TO DAIR                                      */ 00363000
*/*      . UPON RETURN, INTERROGATE THE RETURN CODE                  */ 00364000
*/*            . IF THE DATA SET WAS FOUND TO EXIST, THEN PROCEED    */ 00365000
*/*            . IF THE DATA SET WAS NOT FOUND, THEN NOTIFY THE      */ 00366000
*/*              USER AND PROMPT FOR RESPECIFICATION                 */ 00367000
*/*            . IF AN UNCORRECTABLE ERROR OCCURRED, NOTIFY THE USER */ 00368000
*/*              AND TERMINATE                                       */ 00369000
*/*                                                                  */ 00370000
*/********************************************************************/ 00371000
*                                                                  0255 00372000
*DAIRINIT:                                                         0255 00373000
*   DA04CD='0004'X;                 /* DAIR OPERATION CODE           */ 00374000
DAIRINIT MVC   DA04CD(2,DAPB0PTR),@CB00809                         0255 00375000
*   ZERO1=ZERO1&&ZERO1;             /* ZERO RETURN CODE FIELDS       */ 00376000
         XC    ZERO1(6,DAPB0PTR),ZERO1(DAPB0PTR)                   0256 00377000
*   ZERO2=ZERO2&&ZERO2;             /* ZERO CONTROL                  */ 00378000
         XC    ZERO2(4,DAPB0PTR),ZERO2(DAPB0PTR)                   0257 00379000
*   DA04PDSN=ADDR(DSBUFFER);        /* ADDRESS OF DSNAME BUFFER      */ 00380000
         LA    @14,DSBUFFER                                        0258 00381000
         ST    @14,DA04PDSN(,DAPB0PTR)                             0258 00382000
*   IF FULLQUAL^=YES THEN           /* IF THE DATA SET NAME IS Y01993*/ 00383000
         TM    FULLQUAL,B'10000000'                                0259 00384000
         BO    @RF00259                                            0259 00385000
*     DA04UID=YES;                  /* NOT FULLY QUALIFIED,    Y01993*/ 00386000
         OI    DA04UID(DAPB0PTR),B'00100000'                       0260 00387000
*                                   /* INDICATE SO TO DAIR           */ 00388000
*   DAPLPSCB=CPPLPSCB;              /* PTR TO PSCB                   */ 00389000
@RF00259 L     @14,DAPLPTR                                         0261 00390000
         L     @08,CPPLPTR                                         0261 00391000
         MVC   DAPLPSCB(4,@14),CPPLPSCB(@08)                       0261 00392000
*   DAPLDAPB=ADDR(DAIRPARM);        /* PTR TO DAIR PARAMETER LIST    */ 00393000
         LA    @08,DAIRPARM                                        0262 00394000
         ST    @08,DAPLDAPB(,@14)                                  0262 00395000
*   R1=DAPLPTR;                     /* PTR TO SER.RTE PARAMETER LIST */ 00396000
         LR    R1,@14                                              0263 00397000
*   GEN REFS(R1)SETS(R15);                                         0264 00398000
*                                   /* DAIR TO VARIFY ALLOC    Y01993*/ 00399000
         LINK EP=IKJEFD00                                               00400000
*   RCODESV=R15;                    /* SAVE RETURN CODE              */ 00401000
         ST    R15,RCODESV                                         0265 00402000
*   IF RCODESV=0 THEN               /* A ZERO INDICATES SUCCESSFUL   */ 00403000
         L     @14,RCODESV                                         0266 00404000
         LTR   @14,@14                                             0266 00405000
         BZ    @RT00266                                            0266 00406000
*     GO TO CALCORE;                /* COMPLETION                    */ 00407000
*   GEN(LOAD  EP=IKJEFF18);         /* LOAD ENTRY TO DAIRFAIL        */ 00408000
         LOAD  EP=IKJEFF18                                              00409000
*   CALL IKJEFF18                   /* CALL DAIR FAIL ROUT           */ 00410000
*       (DAPL,                      /* DAIR PARM LIST                */ 00411000
*       RCODESV,                    /* DAIR RETURN CODE              */ 00412000
*       ADMSG,                      /* ALWAYS ZERO                   */ 00413000
*       CALLERNO);                  /* CALLER NO (1)                 */ 00414000
         L     @14,DAPLPTR                                         0269 00415000
         ST    @14,@AL00001                                        0269 00416000
         LA    @14,RCODESV                                         0269 00417000
         ST    @14,@AL00001+4                                      0269 00418000
         LA    @14,ADMSG                                           0269 00419000
         ST    @14,@AL00001+8                                      0269 00420000
         LA    @14,CALLERNO                                        0269 00421000
         ST    @14,@AL00001+12                                     0269 00422000
         LR    @15,R0                                              0269 00423000
         LA    @01,@AL00001                                        0269 00424000
         BALR  @14,@15                                             0269 00425000
*   GEN(DELETE  EP=IKJEFF18);       /* DELETE FROM EP TABLE          */ 00426000
         DELETE  EP=IKJEFF18                                            00427000
*   IF(RCODESV^=8)|(DA04CTRC^='0008'X)/*                       Y01993*/ 00428000
*     THEN                          /* IF DATA SET WASNT FOUND Y01993*/ 00429000
         CLC   RCODESV(4),@CF00054                                 0271 00430000
         BNE   @RT00271                                            0271 00431000
         CLC   DA04CTRC(2,DAPB0PTR),@CH00812                       0271 00432000
         BE    @RF00271                                            0271 00433000
@RT00271 DS    0H                                                  0272 00434000
*     DO;                           /* BYPASS EXIT TO PROMPT   Y01993*/ 00435000
*       RTCODE12=YES;               /* SET RETURN CODE 12 BIT  Y01993*/ 00436000
         OI    RTCODE12,B'00000100'                                0273 00437000
*       GO TO EXIT1;                /* EXIT                    Y01993*/ 00438000
         B     EXIT1                                               0274 00439000
*     END;                          /*                         Y01993*/ 00440000
*   PPLPCL=RUNADCN3;                /* PARSE IS REENTERED TO DO      */ 00441000
@RF00271 L     @14,PPLPTR                                          0276 00442000
         MVC   PPLPCL(4,@14),RUNADCN3                              0276 00443000
*   PPLCBUF=CPPLCBUF;               /* THE PROMPTING                 */ 00444000
         L     @08,CPPLPTR                                         0277 00445000
         MVC   PPLCBUF(4,@14),CPPLCBUF(@08)                        0277 00446000
*   PPLANS=ADDR(PDLADDR2);          /* ADDRESS OF ANSWER PLACE       */ 00447000
         LA    @08,PDLADDR2                                        0278 00448000
         ST    @08,PPLANS(,@14)                                    0278 00449000
*   R1=PPLPTR;                      /* PARSE PARM LIST ADDRESS       */ 00450000
         LR    R1,@14                                              0279 00451000
*   GEN REFS(R1)SETS(R15);                                         0280 00452000
*                                   /* PROMPT                  Y01993*/ 00453000
         LINK EP=IKJPARS                                                00454000
*   RCODESV=R15;                    /* SAVE PARSE RETURN CODE        */ 00455000
         ST    R15,RCODESV                                         0281 00456000
*   IF RCODESV^=0 THEN              /* IF RETURN CODE IS NOT 0 THEN  */ 00457000
         L     @14,RCODESV                                         0282 00458000
         LTR   @14,@14                                             0282 00459000
         BNZ   @RT00282                                            0282 00460000
*     GO TO DIAGPARS;               /* PARSE FAILED GO TO DIAG RTN   */ 00461000
*   PDLSAVE=PDLADDR;                /* SAVE ADDR OF MAIN PDL         */ 00462000
         L     PDLSAVE,PDLADDR                                     0284 00463000
*   PDLADDR=PDLADDR2;               /* ADDRESS OF DSNAME PDL         */ 00464000
         MVC   PDLADDR(4),PDLADDR2                                 0285 00465000
*   CALL DSNRTE;                    /* PROCESS THE DSN         Y01993*/ 00466000
         BAL   @14,DSNRTE                                          0286 00467000
*DAIRRET:                                                          0287 00468000
*   PDLADDR=PDLSAVE;                /* RESTORE MAIN PDL ADDRESS      */ 00469000
DAIRRET  ST    PDLSAVE,PDLADDR                                     0287 00470000
*   R5=ADDR(PDLADDR2);              /* ADDRESS OF PDL                */ 00471000
         LA    R5,PDLADDR2                                         0288 00472000
*   GEN REFS(R5);                                                  0289 00473000
*                                   /* RELEASE PDL CORE        Y01993*/ 00474000
         IKJRLSA (5)                                                    00475000
*   GO TO QUALRTE;                  /* CONTINUE WITH NEW DSNAME      */ 00476000
         B     QUALRTE                                             0290 00477000
*                                                                  0291 00478000
*/********************************************************************/ 00479000
*/*                                                                  */ 00480000
*/* CALCULATE THE AMOUNT OF STORAGE REQUIRED FOR THE COMMAND LIST    */ 00481000
*/* CONSIDER THE FOLLOWING -                                         */ 00482000
*/*           . SIZE OF INPUT SOURCE DESCRIPTOR TABLE                */ 00483000
*/*           . SIZE OF COMPILER COMMAND                             */ 00484000
*/*           . SIZE OF WHEN IF AND LOADGO COMMANDS ,IF NECESSARY    */ 00485000
*/*                                                                  */ 00486000
*/********************************************************************/ 00487000
*                                                                  0291 00488000
*CALCORE:                                                          0291 00489000
*   X=20;                           /* INPUT SOURCE DESCRIPTOR (16)  */ 00490000
CALCORE  LA    X,20                                                0291 00491000
*                                   /* SIZE + CONTROL INFORMATION FOR*/ 00492000
*                                   /* COMPILER COMMAND (4)          */ 00493000
*   X=X+TYPELNG(Y)+1;               /* LENGTH OF COMPILER COMMAND    */ 00494000
         L     @14,Y                                               0292 00495000
         LR    @08,@14                                             0292 00496000
         SLA   @08,4                                               0292 00497000
         LR    @03,X                                               0292 00498000
         AH    @03,TYPELNG-16(@08)                                 0292 00499000
         AH    @03,@CH00033                                        0292 00500000
         LR    X,@03                                               0292 00501000
*   IF Y=7&                         /* IF PLI AND A52235             */ 00502000
*       OPTPDE=0 THEN               /* NO PLI PARM SPECIFIED A52235  */ 00503000
         CH    @14,@CH00172                                        0293 00504000
         BNE   @RF00293                                            0293 00505000
         L     @14,PDLADDR                                         0293 00506000
         ICM   @08,3,OPTPDE(@14)                                   0293 00507000
         BNZ   @RF00293                                            0293 00508000
*     OPTPDE=2;                     /* DEFAULT PARM TO OPT A52235    */ 00509000
         MVC   OPTPDE(2,@14),@CH00078                              0294 00510000
*   IF DSNPRSNT=NO THEN             /* IF ONLY A MEMBER NAME   Y01993*/ 00511000
@RF00293 TM    DSNPRSNT,B'00100000'                                0295 00512000
         BZ    @RT00295                                            0295 00513000
*     GO TO NODSNAME;               /* SPECIFIED, BRANCH             */ 00514000
*   IF FULLQUAL=YES THEN            /*                         Y01993*/ 00515000
         TM    FULLQUAL,B'10000000'                                0297 00516000
         BNO   @RF00297                                            0297 00517000
*                                   /* IF THE DATA SET NAME IS FULLY */ 00518000
*     X=X+3+DSLENG;                 /* QUALIFIED THEN RESERVE SPACE  */ 00519000
         LA    @14,3                                               0298 00520000
         AR    @14,X                                               0298 00521000
         AH    @14,DSLENG                                          0298 00522000
         LR    X,@14                                               0298 00523000
*                                   /* FOR THE NAME (DSLENG)+ABLANK  */ 00524000
*                                   /* AFTER IT (1) + QUOTES (2)     */ 00525000
*   ELSE                                                           0299 00526000
*     X=X+DSLENG+1;                 /* OTHERWISE ALLOW SPACE FOR     */ 00527000
         B     @RC00297                                            0299 00528000
@RF00297 LR    @14,X                                               0299 00529000
         AH    @14,DSLENG                                          0299 00530000
         AH    @14,@CH00033                                        0299 00531000
         LR    X,@14                                               0299 00532000
*                                   /* DATA SET NAME AND A BLANK     */ 00533000
*NODSNAME:                                                         0300 00534000
*   IF MBRLENG>0 THEN               /* TEST IF A MEMBER NAME HAS BEEN*/ 00535000
@RC00297 DS    0H                                                  0300 00536000
NODSNAME LH    @14,MBRLENG                                         0300 00537000
         LTR   @14,@14                                             0300 00538000
         BNP   @RF00300                                            0300 00539000
*     IF DSNPRSNT=YES THEN          /* SPECIFIED -IF SO AND DSN    0301 00540000
*                                                              Y01993*/ 00541000
         TM    DSNPRSNT,B'00100000'                                0301 00542000
         BNO   @RF00301                                            0301 00543000
*       X=X+MBRLENG+2;              /* FULLY QUALIFIED THEN RESERVE  */ 00544000
         AR    @14,X                                               0302 00545000
         AH    @14,@CH00078                                        0302 00546000
         LR    X,@14                                               0302 00547000
*     ELSE                          /* IF NOT FULLY QUALIFY          */ 00548000
*       X=X+MBRLENG+3;              /* SPACE FOR 2 PARENS ( & )      */ 00549000
         B     @RC00301                                            0303 00550000
@RF00301 LR    @14,X                                               0303 00551000
         AH    @14,MBRLENG                                         0303 00552000
         AH    @14,@CH00355                                        0303 00553000
         LR    X,@14                                               0303 00554000
*                                   /* IF NOT THE RESERVE SPACE FOR 2*/ 00555000
*                                   /* PARENS ( & ) AND A BLANK      */ 00556000
*   IF PASSLENG>0 THEN              /* IF A PASSWORD WAS SPECIFIED 0304 00557000
*                                      ADD                           */ 00558000
@RC00301 DS    0H                                                  0304 00559000
@RF00300 LH    @14,PASSLENG                                        0304 00560000
         LTR   @14,@14                                             0304 00561000
         BNP   @RF00304                                            0304 00562000
*     X=X+PASSLENG+1;               /* ITS LENGTH PLUS ONE SLASH     */ 00563000
         AR    @14,X                                               0305 00564000
         AH    @14,@CH00033                                        0305 00565000
         LR    X,@14                                               0305 00566000
*   IF MSGPDE>0 THEN                /* IF THE LMSG/SMSG PARAMETER WAS*/ 00567000
@RF00304 L     @14,PDLADDR                                         0306 00568000
         ICM   @08,3,MSGPDE(@14)                                   0306 00569000
         BNP   @RF00306                                            0306 00570000
*     IF LMSGSMSG(Y)=YES            /* SPECIFIED AND IF IT     Y01993*/ 00571000
*       THEN                        /* IS ALLOWED              Y01993*/ 00572000
         L     @14,Y                                               0307 00573000
         SLA   @14,4                                               0307 00574000
         LA    @08,LMSGSMSG-16(@14)                                0307 00575000
         TM    0(@08),B'01000000'                                  0307 00576000
         BNO   @RF00307                                            0307 00577000
*       X=X+5;                      /* ADD 5 FOR ITS LENGTH AND BLANK*/ 00578000
         AH    X,@CH00152                                          0308 00579000
*   IF PRECPDE>0 THEN               /* FOR THE SPREC/LPREC     Y01993*/ 00580000
@RF00307 DS    0H                                                  0309 00581000
@RF00306 L     @14,PDLADDR                                         0309 00582000
         ICM   @08,3,PRECPDE(@14)                                  0309 00583000
         BNP   @RF00309                                            0309 00584000
*     IF PRECPARM(Y)=YES            /* PARAMETER               Y01993*/ 00585000
*       THEN                                                       0310 00586000
         L     @14,Y                                               0310 00587000
         SLA   @14,4                                               0310 00588000
         LA    @08,PRECPARM-16(@14)                                0310 00589000
         TM    0(@08),B'00010000'                                  0310 00590000
         BNO   @RF00310                                            0310 00591000
*       X=X+6;                                                     0311 00592000
         AH    X,@CH00104                                          0311 00593000
*   IF TESTPDE>0 THEN               /* IF EITHER THE TEST/NOTEST PARA*/ 00594000
@RF00310 DS    0H                                                  0312 00595000
@RF00309 L     @14,PDLADDR                                         0312 00596000
         LH    @14,TESTPDE(,@14)                                   0312 00597000
         LTR   @14,@14                                             0312 00598000
         BNP   @RF00312                                            0312 00599000
*     IF TESTPARM(Y)=YES            /* METER IS SPECIFIED AND IF IT  */ 00600000
*       THEN                        /* IS ALLOWED ADD THE APPROPRIATE*/ 00601000
         L     @08,Y                                               0313 00602000
         SLA   @08,4                                               0313 00603000
         LA    @03,TESTPARM-16(@08)                                0313 00604000
         TM    0(@03),B'00100000'                                  0313 00605000
         BNO   @RF00313                                            0313 00606000
*       IF TESTPDE=1 THEN           /* LENGTH FOR THE PARAMETER +    */ 00607000
         CH    @14,@CH00033                                        0314 00608000
         BNE   @RF00314                                            0314 00609000
*         X=X+5;                    /* A BLANK                       */ 00610000
         AH    X,@CH00152                                          0315 00611000
*       ELSE                        /* IF NOT                        */ 00612000
*         X=X+7;                    /* INCREMENT BY SEVEN            */ 00613000
         B     @RC00314                                            0316 00614000
@RF00314 AH    X,@CH00172                                          0316 00615000
*   IF FORMPDE>0 THEN               /* THE SAME FOR FIXED/FREE       */ 00616000
@RC00314 DS    0H                                                  0317 00617000
@RF00313 DS    0H                                                  0317 00618000
@RF00312 L     @14,PDLADDR                                         0317 00619000
         LH    @14,FORMPDE(,@14)                                   0317 00620000
         LTR   @14,@14                                             0317 00621000
         BNP   @RF00317                                            0317 00622000
*     IF FORM(Y)=YES THEN           /* CHECK FORM                    */ 00623000
         L     @08,Y                                               0318 00624000
         SLA   @08,4                                               0318 00625000
         LA    @03,FORM-16(@08)                                    0318 00626000
         TM    0(@03),B'00001000'                                  0318 00627000
         BNO   @RF00318                                            0318 00628000
*       IF FORMPDE=1 THEN           /* IF INDICATED                  */ 00629000
         CH    @14,@CH00033                                        0319 00630000
         BNE   @RF00319                                            0319 00631000
*         X=X+6;                    /* THAN INCREMENT BY SIX         */ 00632000
         AH    X,@CH00104                                          0320 00633000
*       ELSE                        /* ESLE                          */ 00634000
*         X=X+5;                    /* INCREMENT ADDRESS BY 5        */ 00635000
         B     @RC00319                                            0321 00636000
@RF00319 AH    X,@CH00152                                          0321 00637000
*   IF GOPDE>0 THEN                 /* IF GO SPECIFIED AND IT  Y02676*/ 00638000
@RC00319 DS    0H                                                  0322 00639000
@RF00318 DS    0H                                                  0322 00640000
@RF00317 L     @14,PDLADDR                                         0322 00641000
         LH    @14,GOPDE(,@14)                                     0322 00642000
         LTR   @14,@14                                             0322 00643000
         BNP   @RF00322                                            0322 00644000
*     IF GOBIT(Y)=YES THEN          /* IS ALLOWED, THEN ALLOW  Y02676*/ 00645000
         L     @08,Y                                               0323 00646000
         SLA   @08,4                                               0323 00647000
         LA    @03,GOBIT-16(@08)                                   0323 00648000
         TM    0(@03),B'01000000'                                  0323 00649000
         BNO   @RF00323                                            0323 00650000
*       IF GOPDE=1 THEN             /* FOR APPROPRIATE KYWD    Y02676*/ 00651000
         CH    @14,@CH00033                                        0324 00652000
         BNE   @RF00324                                            0324 00653000
*         X=X+3;                    /* ALLOW FOR GO + BLANK    Y02676*/ 00654000
         AH    X,@CH00355                                          0325 00655000
*       ELSE                        /*                         Y02676*/ 00656000
*         X=X+5;                    /* ALLOW FOR NOGO + BLANK  Y02676*/ 00657000
         B     @RC00324                                            0326 00658000
@RF00324 AH    X,@CH00152                                          0326 00659000
*   IF PAUSPDE>0 THEN               /* IF PAUSE SPECIFIED      Y02676*/ 00660000
@RC00324 DS    0H                                                  0327 00661000
@RF00323 DS    0H                                                  0327 00662000
@RF00322 L     @14,PDLADDR                                         0327 00663000
         LH    @14,PAUSPDE(,@14)                                   0327 00664000
         LTR   @14,@14                                             0327 00665000
         BNP   @RF00327                                            0327 00666000
*     IF PAUSBIT(Y)=YES THEN        /* AND IT IS ALLOWED       Y02676*/ 00667000
         L     @08,Y                                               0328 00668000
         SLA   @08,4                                               0328 00669000
         LA    @03,PAUSBIT-16(@08)                                 0328 00670000
         TM    0(@03),B'00100000'                                  0328 00671000
         BNO   @RF00328                                            0328 00672000
*       IF PAUSPDE=1 THEN           /* ALLOW FOR APPRO KYD     Y02676*/ 00673000
         CH    @14,@CH00033                                        0329 00674000
         BNE   @RF00329                                            0329 00675000
*         X=X+6;                    /* ALLOW FOR PAUSE + BLANK Y02676*/ 00676000
         AH    X,@CH00104                                          0330 00677000
*       ELSE                        /*                         Y02676*/ 00678000
*         X=X+8;                    /* ALLOW FOR NOPAUSE + BLANK   0331 00679000
*                                                              Y02676*/ 00680000
         B     @RC00329                                            0331 00681000
@RF00329 AH    X,@CH00054                                          0331 00682000
*   IF STOREPDE>0 THEN              /* IF STORE SPECIFIED      Y02676*/ 00683000
@RC00329 DS    0H                                                  0332 00684000
@RF00328 DS    0H                                                  0332 00685000
@RF00327 L     @14,PDLADDR                                         0332 00686000
         LH    @14,STOREPDE(,@14)                                  0332 00687000
         LTR   @14,@14                                             0332 00688000
         BNP   @RF00332                                            0332 00689000
*     IF STORBIT(Y)=YES THEN        /* AND IS ALLOWED ALOW     Y02676*/ 00690000
         L     @08,Y                                               0333 00691000
         SLA   @08,4                                               0333 00692000
         LA    @03,STORBIT-16(@08)                                 0333 00693000
         TM    0(@03),B'00010000'                                  0333 00694000
         BNO   @RF00333                                            0333 00695000
*       IF STOREPDE=1 THEN          /* FOR APPROPRIATE KYW     Y02676*/ 00696000
         CH    @14,@CH00033                                        0334 00697000
         BNE   @RF00334                                            0334 00698000
*         X=X+6;                    /* ALLOW FOR STORE + BLANK Y02676*/ 00699000
         AH    X,@CH00104                                          0335 00700000
*       ELSE                        /*                         Y02676*/ 00701000
*         X=X+8;                    /* ALLOW FOR NOSTORE + BLANK   0336 00702000
*                                                              Y02676*/ 00703000
         B     @RC00334                                            0336 00704000
@RF00334 AH    X,@CH00054                                          0336 00705000
*   IF SRCPDE>0 THEN                /* IF SRC/OBJ SPECIFID     Y02676*/ 00706000
@RC00334 DS    0H                                                  0337 00707000
@RF00333 DS    0H                                                  0337 00708000
@RF00332 L     @14,PDLADDR                                         0337 00709000
         ICM   @08,3,SRCPDE(@14)                                   0337 00710000
         BNP   @RF00337                                            0337 00711000
*     IF SRCBIT(Y)=YES THEN         /* AND IT IS ALLOWED       Y02676*/ 00712000
         L     @14,Y                                               0338 00713000
         SLA   @14,4                                               0338 00714000
         LA    @08,SRCBIT-16(@14)                                  0338 00715000
         TM    0(@08),B'00001000'                                  0338 00716000
         BNO   @RF00338                                            0338 00717000
*       X=X+7;                      /* ALLOW FOR SOURCE/OBJECT +BLANK   00718000
*                                                              Y02676*/ 00719000
         AH    X,@CH00172                                          0339 00720000
*   IF SIZPDE>0 THEN                                               0340 00721000
@RF00338 DS    0H                                                  0340 00722000
@RF00337 L     @14,PDLADDR                                         0340 00723000
         ICM   @08,3,SIZPDE(@14)                                   0340 00724000
         BNP   @RF00340                                            0340 00725000
*     IF SIZBIT(Y)=YES THEN                                        0341 00726000
         L     @08,Y                                               0341 00727000
         SLA   @08,4                                               0341 00728000
         LA    @03,SIZBIT-16(@08)                                  0341 00729000
         TM    0(@03),B'00000100'                                  0341 00730000
         BNO   @RF00341                                            0341 00731000
*       X=X+7+SIZLEN;               /* ALLOW FOR SIZE(NNN)+ BLANK  0342 00732000
*                                                              Y02676*/ 00733000
         LA    @08,7                                               0342 00734000
         AR    @08,X                                               0342 00735000
         AH    @08,SIZLEN(,@14)                                    0342 00736000
         LR    X,@08                                               0342 00737000
*   IF OPTPDE>0 THEN                /* IF CHECK/OPT WAS SPECIFIED AND*/ 00738000
@RF00341 DS    0H                                                  0343 00739000
@RF00340 L     @14,PDLADDR                                         0343 00740000
         LH    @14,OPTPDE(,@14)                                    0343 00741000
         LTR   @14,@14                                             0343 00742000
         BNP   @RF00343                                            0343 00743000
*     IF CHECKOPT(Y)=YES THEN       /* IS ALLOWED, TEST IF     Y01993*/ 00744000
         L     @08,Y                                               0344 00745000
         SLA   @08,4                                               0344 00746000
         LA    @03,CHECKOPT-16(@08)                                0344 00747000
         TM    0(@03),B'00000001'                                  0344 00748000
         BNO   @RF00344                                            0344 00749000
*       IF OPTPDE=1 THEN            /* A WHEN OR A LOADGO CMD  Y01993*/ 00750000
         LA    @08,1                                               0345 00751000
         CR    @14,@08                                             0345 00752000
         BNE   @RF00345                                            0345 00753000
*         DO;                       /* IS NEEDED, IF NOT BRANCH    0346 00754000
*                                      AROUND                        */ 00755000
*           X=X+1;                  /* ADDITIONAL BLANK FOR PLIC     */ 00756000
         AR    X,@08                                               0347 00757000
*           GO TO PRMCON;           /* TEST FOR PARM STRING          */ 00758000
         B     PRMCON                                              0348 00759000
*         END;                      /* END OPT CHECK                 */ 00760000
*       ELSE                        /* ELSE PL1 BASE                 */ 00761000
*         DO;                       /* THEN INCREMENT                */ 00762000
@RF00345 DS    0H                                                  0351 00763000
*           X=X+8;                  /* ACCOUNT FOR PL1BASE           */ 00764000
         AH    X,@CH00054                                          0351 00765000
*         END;                      /* END PLI CHECK                 */ 00766000
*   X=X-1;                          /* TAKE OUT ENDING BLANK FROM    */ 00767000
@RF00344 DS    0H                                                  0353 00768000
@RF00343 BCTR  X,0                                                 0353 00769000
*                                   /* VARIABLE LIST                 */ 00770000
*   IF WHENCMND(Y)^=YES             /* IF WHEN CMD IS ^ NEEDED Y01993*/ 00771000
*     THEN                                                         0354 00772000
         L     @14,Y                                               0354 00773000
         SLA   @14,4                                               0354 00774000
         LA    @08,WHENCMND-16(@14)                                0354 00775000
         TM    0(@08),B'01000000'                                  0354 00776000
         BNO   @RT00354                                            0354 00777000
*     GO TO NOSTRIP;                /* THEN BRANCH AROUND WHEN/LOADGO*/ 00778000
*                                   /* IF THE WHEN COMMAND IS NEEDED */ 00779000
*                                   /* ADD ITS LENGTH + LENGTH OF THE*/ 00780000
*                                   /* CONTROL INFORMATION           */ 00781000
*   X=X+20;                         /* 4 BYTES FOR CNTRL, 16 FOR WHEN*/ 00782000
         AH    X,@CH00814                                          0356 00783000
*   IF LOADCMD(Y)^=YES THEN         /* IF THE LOADGO CMD IS ^  Y01993*/ 00784000
         LA    @08,LOADCMD-16(@14)                                 0357 00785000
         TM    0(@08),B'00100000'                                  0357 00786000
         BNO   @RT00357                                            0357 00787000
*     GO TO NOSTRIP;                /* REQUIRED, BRANCH TO GETMAIN   */ 00788000
*   X=X+13;                         /* FOR LOADGO + CTL + BLNK Y00973*/ 00789000
         AH    X,@CH00510                                          0359 00790000
*   IF DSNPRSNT=NO THEN             /* IF NO DSNAME IS PRESENT Y01156*/ 00791000
         TM    DSNPRSNT,B'00100000'                                0360 00792000
         BZ    @RT00360                                            0360 00793000
*     GO TO NODSNPRS;               /* PROCESS THE MEMBER NAME Y01993*/ 00794000
*   X=X+4;                          /* +.OBJ                   Y00973*/ 00795000
         AH    X,@CH00106                                          0362 00796000
*   IF FULLQUAL=YES THEN            /* IF DATA SET IS FULLY    Y01993*/ 00797000
         TM    FULLQUAL,B'10000000'                                0363 00798000
         BNO   @RF00363                                            0363 00799000
*     X=X+DSLENG+1;                 /* QUALIFIED THEN ALLOW          */ 00800000
         LR    @14,X                                               0364 00801000
         AH    @14,DSLENG                                          0364 00802000
         AH    @14,@CH00033                                        0364 00803000
         LR    X,@14                                               0364 00804000
*   ELSE                                                           0365 00805000
*     X=X+DSLENG-                   /* SPACE FOR THE DSNAME AND A    */ 00806000
*         TYPELNG(Y);               /* BLANK, OTHERWISE DROP THE     */ 00807000
         B     @RC00363                                            0365 00808000
@RF00363 LR    @14,X                                               0365 00809000
         AH    @14,DSLENG                                          0365 00810000
         L     @08,Y                                               0365 00811000
         SLA   @08,4                                               0365 00812000
         SH    @14,TYPELNG-16(@08)                                 0365 00813000
         LR    X,@14                                               0365 00814000
*                                   /* RIGHTMOST QUALIFIER           */ 00815000
*NODSNPRS:                                                         0366 00816000
*   IF MBRLENG>0 THEN               /* IF A MEMBER NAME IS PRESENT   */ 00817000
@RC00363 DS    0H                                                  0366 00818000
NODSNPRS LH    @14,MBRLENG                                         0366 00819000
         LTR   @14,@14                                             0366 00820000
         BNP   @RF00366                                            0366 00821000
*     IF DSNPRSNT=NO THEN           /* AND A DSNAME ISN'T COUNT    0367 00822000
*                                      MEMBER                        */ 00823000
         TM    DSNPRSNT,B'00100000'                                0367 00824000
         BNZ   @RF00367                                            0367 00825000
*       X=X+MBRLENG+3;              /* LENGTH + 2 PARENS + A BLANK   */ 00826000
         AR    @14,X                                               0368 00827000
         AH    @14,@CH00355                                        0368 00828000
         LR    X,@14                                               0368 00829000
*     ELSE                                                         0369 00830000
*       X=X+MBRLENG+2;              /* ELSE COUNT MEMBER LENGTH + 2  */ 00831000
         B     @RC00367                                            0369 00832000
@RF00367 LR    @14,X                                               0369 00833000
         AH    @14,MBRLENG                                         0369 00834000
         AH    @14,@CH00078                                        0369 00835000
         LR    X,@14                                               0369 00836000
*                                   /* PARENS. THEN BLANK IS       0370 00837000
*                                      ACCOUNTED                     */ 00838000
*                                   /* FOR IN DSNAME PROCESSING      */ 00839000
*   IF LIBPDE=1&LIBOPND(Y)=YES      /* IF LIB OPERAND          Y01156*/ 00840000
*     THEN                          /* AND IS ALLOWED,THEN     Y01156*/ 00841000
@RC00367 DS    0H                                                  0370 00842000
@RF00366 L     @14,PDLADDR                                         0370 00843000
         CLC   LIBPDE(2,@14),@CH00033                              0370 00844000
         BNE   @RF00370                                            0370 00845000
         L     @08,Y                                               0370 00846000
         SLA   @08,4                                               0370 00847000
         LA    @03,LIBOPND-16(@08)                                 0370 00848000
         TM    0(@03),B'10000000'                                  0370 00849000
         BNO   @RF00370                                            0370 00850000
*     DO;                           /*                         Y01156*/ 00851000
*       LIBPTR=ADDR(FIRSTDSN);      /* SET PTR TO 1ST DSN      Y01156*/ 00852000
         LA    LIBPTR,FIRSTDSN(,@14)                               0372 00853000
*       DO WHILE LIBPTR^=ENDCHAIN;  /* DO UNTIL FF00           Y01156*/ 00854000
         B     @DE00373                                            0373 00855000
@DL00373 DS    0H                                                  0374 00856000
*         X=X+LDSNLEN+1;            /* ADD DS LENGTH + SEP BLNKY01156*/ 00857000
         LR    @14,X                                               0374 00858000
         AH    @14,LDSNLEN(,LIBPTR)                                0374 00859000
         AH    @14,@CH00033                                        0374 00860000
         LR    X,@14                                               0374 00861000
*         IF LDSNQUOT=YES           /* IF DSNAME IS FULLY QUAL Y01156*/ 00862000
*           THEN                                                   0375 00863000
         TM    LDSNQUOT(LIBPTR),B'01000000'                        0375 00864000
         BNO   @RF00375                                            0375 00865000
*           X=X+2;                  /* ACCOUNT FOR QUOTS       Y01156*/ 00866000
         AH    X,@CH00078                                          0376 00867000
*         IF LMBRPRES=YES           /* IF MEMBER NAME IS PRES  Y01156*/ 00868000
*           THEN                                                   0377 00869000
@RF00375 TM    LMBRPRES(LIBPTR),B'10000000'                        0377 00870000
         BNO   @RF00377                                            0377 00871000
*           X=X+2+LMBRLEN;          /* ADD LENGTH+2PARENS      Y01156*/ 00872000
         LA    @14,2                                               0378 00873000
         AR    @14,X                                               0378 00874000
         AH    @14,LMBRLEN(,LIBPTR)                                0378 00875000
         LR    X,@14                                               0378 00876000
*         IF LPASPRES=YES           /* IF PASSWORD IS PRES, ADDY01156*/ 00877000
*           THEN                                                   0379 00878000
@RF00377 TM    LPASPRES(LIBPTR),B'10000000'                        0379 00879000
         BNO   @RF00379                                            0379 00880000
*           X=X+1+LPASSLEN;         /* ITS LENGTH + A '/'Y01156      */ 00881000
         LA    @14,1                                               0380 00882000
         AR    @14,X                                               0380 00883000
         AH    @14,LPASSLEN(,LIBPTR)                               0380 00884000
         LR    X,@14                                               0380 00885000
*         LIBPTR=CHAINPTR;          /* UPDATE LIBPTR TO NEXT   Y01156*/ 00886000
@RF00379 L     LIBPTR,CHAINPTR(,LIBPTR)                            0381 00887000
*       END;                        /*                         Y01156*/ 00888000
@DE00373 CL    LIBPTR,@CF00306                                     0382 00889000
         BNE   @DL00373                                            0382 00890000
*       X=X+5;                      /* ACCOUNT FOR ' LIB( )'   Y01156*/ 00891000
         AH    X,@CH00152                                          0383 00892000
*     END;                          /* AND REMOVE LAST BLANK   Y01156*/ 00893000
*PRMCON:                                                           0385 00894000
*   IF PARMLEN=0 THEN               /* IF A NULL PARM STRING IS      */ 00895000
@RF00370 DS    0H                                                  0385 00896000
PRMCON   SR    @14,@14                                             0385 00897000
         L     @08,PDLADDR                                         0385 00898000
         LH    @03,PARMLEN(,@08)                                   0385 00899000
         CR    @03,@14                                             0385 00900000
         BE    @RT00385                                            0385 00901000
*     GO TO PLITEST;                /* PASSED SKIP PARM PROCESSING   */ 00902000
*   IF PARMPRES=YES THEN            /* IF A PARAMETER STRING   Y01993*/ 00903000
         TM    PARMPRES(@08),B'10000000'                           0387 00904000
         BNO   @RF00387                                            0387 00905000
*     IF PRMSTRNG(Y)=YES            /* HAS BEEN SPECIFIED AND  Y01993*/ 00906000
*       THEN                        /* IS ALLOWED ADD          Y01993*/ 00907000
         L     @07,Y                                               0388 00908000
         SLA   @07,4                                               0388 00909000
         LA    @06,PRMSTRNG-16(@07)                                0388 00910000
         TM    0(@06),B'10000000'                                  0388 00911000
         BNO   @RF00388                                            0388 00912000
*       DO;                                                        0389 00913000
*         IF PARMLEN<=100 THEN      /* IF THE LENGHT OF THE STRING   */ 00914000
         LA    @07,100                                             0390 00915000
         CR    @03,@07                                             0390 00916000
         BNH   @RT00390                                            0390 00917000
*           GO TO PRMCON2;          /* IS LESS THAN OR EQUAL TO 100  */ 00918000
*                                   /* CONTINUE NORMAL PROCESSING    */ 00919000
*         XSAVE=X;                  /* SAVE X                        */ 00920000
         LR    XSAVE,X                                             0392 00921000
*         PARMLEN=100;              /* OTHERWISE TRUNCATE AND NOTIFY */ 00922000
         STH   @07,PARMLEN(,@08)                                   0393 00923000
*         W1=ADDR(SEG08);           /* USER                          */ 00924000
         LA    @08,SEG08                                           0394 00925000
         ST    @08,W1                                              0394 00926000
*         W2=0;                     /* INDICATE END OF MESSAGE       */ 00927000
         ST    @14,W2                                              0395 00928000
*         W3=0;                     /* NO 2ND LEVEL MESSAGE          */ 00929000
         ST    @14,W3                                              0396 00930000
*         CALL PUTINTFC;            /* GO TO PUTLINE           Y01156*/ 00931000
         BAL   @14,PUTINTFC                                        0397 00932000
*PRMCON1:                                                          0398 00933000
*         X=XSAVE;                  /* RESTORE X                     */ 00934000
PRMCON1  LR    X,XSAVE                                             0398 00935000
*         IF RCODESV>0 THEN                                        0399 00936000
         ICM   @14,15,RCODESV                                      0399 00937000
         BNP   @RF00399                                            0399 00938000
*           DO;                     /* IF PUTLINE FAILED EXIT        */ 00939000
*             RTCODE12=YES;         /* RETURN CODE IS 12       Y01156*/ 00940000
         OI    RTCODE12,B'00000100'                                0401 00941000
*             GO TO EXIT1;          /* EXIT                          */ 00942000
         B     EXIT1                                               0402 00943000
*           END;                    /* END PUTLINE FAIL TEST         */ 00944000
*PRMCON2:                                                          0404 00945000
*         Z=PARMPTR;                /* ADDRESS OF PARM STRING        */ 00946000
@RF00399 DS    0H                                                  0404 00947000
PRMCON2  L     @14,PDLADDR                                         0404 00948000
         MVC   Z(4),PARMPTR(@14)                                   0404 00949000
*         DO I=1 TO PARMLEN;        /* DEFINE LIMITS OF TEST         */ 00950000
         LA    @14,1                                               0405 00951000
         B     @DE00405                                            0405 00952000
@DL00405 DS    0H                                                  0406 00953000
*           IF CBUFF(I)='7D'X THEN  /* TEST FOR APOSTROPHE           */ 00954000
         L     @08,Z                                               0406 00955000
         ALR   @08,@14                                             0406 00956000
         AL    @08,@CF00896                                        0406 00957000
         CLI   CBUFF(@08),X'7D'                                    0406 00958000
         BNE   @RF00406                                            0406 00959000
*             DO;                   /* IF PRESENT                    */ 00960000
*               CHARMOVE=0;         /* SET COUNTER TO ZERO           */ 00961000
         SR    @14,@14                                             0408 00962000
         STH   @14,CHARMOVE                                        0408 00963000
*               TOTALA=0;           /* SET COUNTER TO ZERO           */ 00964000
         STH   @14,TOTALA                                          0409 00965000
*               SIZE=PARMLEN;       /* AMOUNT OF CORE FOR PARM       */ 00966000
         L     @14,PDLADDR                                         0410 00967000
         LH    @14,PARMLEN(,@14)                                   0410 00968000
         STCM  @14,7,SIZE                                          0410 00969000
*               SPOOL='01'X;        /* SUBPOOL                 Y01993*/ 00970000
         MVI   SPOOL,X'01'                                         0411 00971000
*               R0=CORE;            /* MOVE SIZE & SUBPOOL TO REG 0  */ 00972000
         L     R0,CORE                                             0412 00973000
*               GEN REFS(R0)SETS(R1);                              0413 00974000
*                                                            /*Y01993*/ 00975000
                    GETMAIN R,LV=(0)     ISSUE GETMAIN                  00976000
*               A=R1;               /* ADDRESS OF GOTTEN CORE        */ 00977000
         LR    A,R1                                                0414 00978000
*               COREADDR=A;         /* ADDRESS OF GOTTEN CORE        */ 00979000
         ST    A,COREADDR                                          0415 00980000
*               PARMHOLD(1:PARMLEN)=/* MOVE PARM                     */ 00981000
*                   CBUFF(1:PARMLEN);/* INTO GOTTEN CORE             */ 00982000
         L     @14,PDLADDR                                         0416 00983000
         LH    @14,PARMLEN(,@14)                                   0416 00984000
         BCTR  @14,0                                               0416 00985000
         L     @08,Z                                               0416 00986000
         EX    @14,@SM00897                                        0416 00987000
*               CBUFF(1:I)=         /* MOVE CHARACTERS UP TO THE     */ 00988000
*                   PARMHOLD(1:I);  /* FIRST APOSTROPHE IN PARM      */ 00989000
         L     @14,I                                               0417 00990000
         LR    @07,@14                                             0417 00991000
         BCTR  @07,0                                               0417 00992000
         EX    @07,@SM00899                                        0417 00993000
*               Z=Z+I;              /* BUMP POINTER FOR NEXT CHAR    */ 00994000
         AR    @08,@14                                             0418 00995000
         ST    @08,Z                                               0418 00996000
*               A=A+I-1;            /* POINT TO LAST CHARACTER MOVED */ 00997000
         LR    @08,A                                               0419 00998000
         AR    @08,@14                                             0419 00999000
         BCTR  @08,0                                               0419 01000000
         LR    A,@08                                               0419 01001000
*               CHARMOVE=I;         /* KEEP COUNT OF CHARACTERS MOVED*/ 01002000
         STH   @14,CHARMOVE                                        0420 01003000
*               GO TO MOVEAPOS;     /* INSERT AN APOSTROPHE          */ 01004000
         B     MOVEAPOS                                            0421 01005000
*TESTCHAR:                                                         0422 01006000
*               IF BUFFCHAR='7D'X THEN/* TEST FOR APOSTROPHE         */ 01007000
TESTCHAR L     @14,Z                                               0422 01008000
         CLI   BUFFCHAR(@14),X'7D'                                 0422 01009000
         BNE   @RF00422                                            0422 01010000
*                 DO;               /* IF PRESENT                    */ 01011000
*                   Z=Z+1;          /* BUMP POINTER FOR NEXT CHAR    */ 01012000
         AH    @14,@CH00033                                        0424 01013000
         ST    @14,Z                                               0424 01014000
*MOVEAPOS:                                                         0425 01015000
*                   BUFFCHAR='7D'X; /* INSERT APOSTROPHE             */ 01016000
MOVEAPOS L     @14,Z                                               0425 01017000
         MVI   BUFFCHAR(@14),X'7D'                                 0425 01018000
*                   TOTALA=TOTALA+1;/* BUMP COUNT OF                 */ 01019000
         LA    @14,1                                               0426 01020000
         AH    @14,TOTALA                                          0426 01021000
         STH   @14,TOTALA                                          0426 01022000
*                                   /* APOSTROPHES MOVED             */ 01023000
*                 END;              /* END                           */ 01024000
*               IF PARMLEN=CHARMOVE THEN/* TEST FOR ALL              */ 01025000
@RF00422 L     @14,PDLADDR                                         0428 01026000
         LH    @08,PARMLEN(,@14)                                   0428 01027000
         CH    @08,CHARMOVE                                        0428 01028000
         BNE   @RF00428                                            0428 01029000
*                                   /* CHARACTERS OF PARM MOVED      */ 01030000
*                 DO;               /* IF PRESENT                    */ 01031000
*                   Z=Z+1;          /* BUMP POINTER                  */ 01032000
         LA    @03,1                                               0430 01033000
         A     @03,Z                                               0430 01034000
         ST    @03,Z                                               0430 01035000
*                   BUFFCHAR='7D'X; /* CLOSING APOSTROPHE            */ 01036000
         MVI   BUFFCHAR(@03),X'7D'                                 0431 01037000
*                   PARMLEN=PARMLEN+TOTALA;/* ADD NUMBER             */ 01038000
         AH    @08,TOTALA                                          0432 01039000
         STH   @08,PARMLEN(,@14)                                   0432 01040000
*                                   /* OF APOSTROPHES INSERTED       */ 01041000
*                   R0=CORE;        /* SIZE AND SUBPOOL              */ 01042000
         L     R0,CORE                                             0433 01043000
*                   R1=COREADDR;    /* ADDRESS OF GOTTEN CORE        */ 01044000
         L     R1,COREADDR                                         0434 01045000
*                   GEN REFS(R0,R1);                               0435 01046000
*                                                            /*Y01993*/ 01047000
                       FREEMAIN R,LV=(0),A=(1)                          01048000
*                   GO TO PRMCON3;  /* CONTINUE CALCORE              */ 01049000
         B     PRMCON3                                             0436 01050000
*                 END;              /* END                           */ 01051000
*                                   /* IF ALL CHARACTERS FROM PARM   */ 01052000
*                                   /* STRING HAVE NOT BEEN MOVED    */ 01053000
*                                   /* CONTINUE MOVING THEM          */ 01054000
*               Z=Z+1;              /* BUMP PTR TO COMMAND BUFFER    */ 01055000
@RF00428 LA    @14,1                                               0438 01056000
         L     @08,Z                                               0438 01057000
         AR    @08,@14                                             0438 01058000
         ST    @08,Z                                               0438 01059000
*               A=A+1;              /* BUMP PTR TO GOTTEN CORE       */ 01060000
         AR    A,@14                                               0439 01061000
*               BUFFCHAR=HOLDCHAR;  /* MOVE A CHARACTER              */ 01062000
         MVC   BUFFCHAR(1,@08),HOLDCHAR(A)                         0440 01063000
*               CHARMOVE=CHARMOVE+1;/* BUMP COUNT OF MOVES           */ 01064000
         AH    @14,CHARMOVE                                        0441 01065000
         STH   @14,CHARMOVE                                        0441 01066000
*               GO TO TESTCHAR;     /* TEST FOR AN APOSTROPHE        */ 01067000
         B     TESTCHAR                                            0442 01068000
*             END;                  /* END                           */ 01069000
*         END;                      /* END                           */ 01070000
@RF00406 LA    @14,1                                               0444 01071000
         A     @14,I                                               0444 01072000
@DE00405 ST    @14,I                                               0444 01073000
         L     @08,PDLADDR                                         0444 01074000
         CH    @14,PARMLEN(,@08)                                   0444 01075000
         BNH   @DL00405                                            0444 01076000
*PRMCON3:                                                          0445 01077000
*         X=X+PARMLEN+3;            /* ITS LENGTH AND QUOTES         */ 01078000
PRMCON3  LR    @14,X                                               0445 01079000
         L     @08,PDLADDR                                         0445 01080000
         AH    @14,PARMLEN(,@08)                                   0445 01081000
         AH    @14,@CH00355                                        0445 01082000
         LR    X,@14                                               0445 01083000
*PLITEST:                                                          0446 01084000
*         IF TYPES(Y,1:3)='PLI' THEN/*                         Y01993*/ 01085000
PLITEST  L     @14,Y                                               0446 01086000
         SLA   @14,4                                               0446 01087000
         LA    @08,TYPES-16(@14)                                   0446 01088000
         CLC   0(3,@08),@CC00830                                   0446 01089000
         BE    @RT00446                                            0446 01090000
*                                   /* IF TYPE IS PLI THEN           */ 01091000
*           GO TO BUILD3;           /* NO MORE CALCULATIONS NEEDED   */ 01092000
*       END;                        /* END PARM STRING PROCESS       */ 01093000
*   IF FLIBPARM(Y)=YES              /* IF THE FORTLIB PARM IS REQ.   */ 01094000
*     THEN                                                         0449 01095000
@RF00388 DS    0H                                                  0449 01096000
@RF00387 L     @14,Y                                               0449 01097000
         SLA   @14,4                                               0449 01098000
         LA    @08,FLIBPARM-16(@14)                                0449 01099000
         TM    0(@08),B'00000100'                                  0449 01100000
         BNO   @RF00449                                            0449 01101000
*     DO;                           /* ADD ITS LENGTH                */ 01102000
*       X=X+8;                      /* INCREMENT BY 8                */ 01103000
         AH    X,@CH00054                                          0451 01104000
*       GO TO BUILD3;               /* GO TO BUILD STACK             */ 01105000
         B     BUILD3                                              0452 01106000
*     END;                          /* END FORT TEST                 */ 01107000
*   IF CLIBPARM(Y)=YES              /* IF THE COBLIB PARM      Y01993*/ 01108000
*     THEN                          /* IS REQ                  Y01993*/ 01109000
@RF00449 L     @14,Y                                               0454 01110000
         SLA   @14,4                                               0454 01111000
         LA    @08,CLIBPARM-16(@14)                                0454 01112000
         TM    0(@08),B'00000010'                                  0454 01113000
         BNO   @RF00454                                            0454 01114000
*     DO;                           /* ADD ITS LENGTH                */ 01115000
*       X=X+7;                      /* INCREMENT BY 7                */ 01116000
         AH    X,@CH00172                                          0456 01117000
*     END;                          /* END                           */ 01118000
*BUILD3:                                                           0458 01119000
*   X=X-1;                          /* DROP BLANK FROM VARIABLE LIST */ 01120000
@RF00454 DS    0H                                                  0458 01121000
BUILD3   BCTR  X,0                                                 0458 01122000
*NOSTRIP:                                                          0459 01123000
*   AMNT=X;                         /* SIZE OF CORE GOTTEN FOR STACK */ 01124000
NOSTRIP  ST    X,AMNT                                              0459 01125000
*                                                                  0460 01126000
*   /*****************************************************************/ 01127000
*   /*                                                               */ 01128000
*   /* MOVE LIST FORM                                                */ 01129000
*   /*                                                               */ 01130000
*   /*****************************************************************/ 01131000
*                                                                  0460 01132000
*   GETLIST(1:GETLEN)=GETCORE(1:GETLEN);                           0460 01133000
         L     @14,GETLEN                                          0460 01134000
         BCTR  @14,0                                               0460 01135000
         EX    @14,@SM00901                                        0460 01136000
*   R4=X;                           /* PUT AMT INTO REG 4      Y01993*/ 01137000
         LR    R4,X                                                0461 01138000
*   R5=ADDR(LSDPTR);                /* ADDRESS OF REQUIRED WORD TO   */ 01139000
         LA    R5,LSDPTR                                           0462 01140000
*                                   /* STORE ADDRESS OF CORE         */ 01141000
*   R1=ADDR(GETLIST);               /* ADDRESS OF LIST               */ 01142000
*                                                                  0463 01143000
         LA    R1,GETLIST                                          0463 01144000
*   /*****************************************************************/ 01145000
*   /*                                                               */ 01146000
*   /* ISSUE CONDITLINAL GETMAIN FOR STACK CORE                      */ 01147000
*   /*                                                               */ 01148000
*   /*****************************************************************/ 01149000
*                                                                  0464 01150000
*   GEN REFS(R4,R5,R1)SETS(R15);                                   0464 01151000
*                                                            /*Y01993*/ 01152000
         GETMAIN EC,LV=(4),A=(5),MF=(E,(1))                             01153000
*   RCODESV=R15;                    /* SAVE RETURN CODE              */ 01154000
         ST    R15,RCODESV                                         0465 01155000
*   IF RCODESV>0 THEN               /* IF RETURN CODE = 0,THEN CORE  */ 01156000
         L     @14,RCODESV                                         0466 01157000
         LTR   @14,@14                                             0466 01158000
         BP    @RT00466                                            0466 01159000
*     GO TO NOSTORGE;               /* WAS OBTAINED                  */ 01160000
*                                                                  0468 01161000
*/********************************************************************/ 01162000
*/*                                                                  */ 01163000
*/* BUILD THE IN-CORE COMMAND LIST                                   */ 01164000
*/*                                                                  */ 01165000
*/*     MOVE THE COMMANDS AND THEIR PARAMETERS INTO THE GOTTEN AREA  */ 01166000
*/*     AS THE COMMAND IS BUILT, BUILD THE INPUT SOURCE DESCRIPTOR   */ 01167000
*/*     TABLE                                                        */ 01168000
*/*                                                                  */ 01169000
*/********************************************************************/ 01170000
*                                                                  0468 01171000
*BLNKBUF:                                                          0468 01172000
*   R0=ADDR(CMDBFR);                /* WHERE TO START BLNK     Y02676*/ 01173000
BLNKBUF  L     R0,LSDPTR                                           0468 01174000
*   R1=X;                           /* HOW MUCH TO BLANK       Y02676*/ 01175000
         LR    R1,X                                                0469 01176000
*   R4=0;                           /* NO FROM LOCATION        Y02676*/ 01177000
         SR    R4,R4                                               0470 01178000
*   R5=BLANK;                       /* 0 LEN AND BLNK PAD      Y02676*/ 01179000
         L     R5,@CF00763                                         0471 01180000
*   GEN REFS(R0,R1,R4,R5)(MVCL R0,R4);/* BLANK BUFFER                */ 01181000
         MVCL R0,R4                                                     01182000
*INSRCBLD:                                                         0473 01183000
*                                                                  0473 01184000
*   /*****************************************************************/ 01185000
*   /*                                                               */ 01186000
*   /* MOVE IN STACK PARM                                            */ 01187000
*   /*                                                               */ 01188000
*   /*****************************************************************/ 01189000
*                                                                  0473 01190000
*   STACKPRM(1:STACKLEN)=STACKLST(1:STACKLEN);                     0473 01191000
INSRCBLD L     @14,STACKLEN                                        0473 01192000
         BCTR  @14,0                                               0473 01193000
         EX    @14,@SM00903                                        0473 01194000
*   LSDRCLEN=0;                     /* INDICATE VARIABLE LENGTH    0474 01195000
*                                      RECORD                        */ 01196000
         SR    @14,@14                                             0474 01197000
         L     @08,LSDPTR                                          0474 01198000
         STH   @14,LSDRCLEN(,@08)                                  0474 01199000
*   LSDTOTLN=X-16;                  /* TOTAL LENGTH OF THE COMMAND   */ 01200000
         LA    @03,16                                              0475 01201000
         LR    @07,X                                               0475 01202000
         SR    @07,@03                                             0475 01203000
         STH   @07,LSDTOTLN(,@08)                                  0475 01204000
*                                   /* LIST IS LENGTH OF GOTTEN AREA */ 01205000
*                                   /* LESS SIZE OF INPUT SOURCE DESC*/ 01206000
*   Z=LSDPTR+16;                    /* POINT TO FIRST AVAILABLE BYTE */ 01207000
         AR    @03,@08                                             0476 01208000
         ST    @03,Z                                               0476 01209000
*                                   /* IN COMMAND LIST               */ 01210000
*   LSDADATA=Z;                     /* TO INPUT SOURCE DESCRIPTOR    */ 01211000
         ST    @03,LSDADATA(,@08)                                  0477 01212000
*   LSDANEXT=Z;                                                    0478 01213000
         ST    @03,LSDANEXT(,@08)                                  0478 01214000
*   X=Z+4;                          /* X POINTS TO 1ST BYTE AVAILABLE*/ 01215000
         AH    @03,@CH00106                                        0479 01216000
         LR    X,@03                                               0479 01217000
*                                   /* FOR PARAMETERS                */ 01218000
*   IF OPTPDE>0 THEN                /* IF OPT IS INDICATED           */ 01219000
         L     @08,PDLADDR                                         0480 01220000
         LH    @08,OPTPDE(,@08)                                    0480 01221000
         CR    @08,@14                                             0480 01222000
         BNH   @RF00480                                            0480 01223000
*     DO;                                                          0481 01224000
*       IF CHECKOPT(Y)=YES THEN     /* IF CHECK IS IND         Y01193*/ 01225000
         L     @14,Y                                               0482 01226000
         SLA   @14,4                                               0482 01227000
         LA    @03,CHECKOPT-16(@14)                                0482 01228000
         TM    0(@03),B'00000001'                                  0482 01229000
         BNO   @RF00482                                            0482 01230000
*         DO;                                                      0483 01231000
*           IF OPTPDE=1 THEN                                       0484 01232000
         CH    @08,@CH00033                                        0484 01233000
         BNE   @RF00484                                            0484 01234000
*             DO;                   /* IF OPTION PLI                 */ 01235000
*               CMDNAME(1:4)=PLICNAME(1:4);/* MOVE PLIC COMMAND      */ 01236000
         MVC   CMDNAME(4,X),PLICNAME                               0486 01237000
*               X=X+5;              /* INCREMENT                     */ 01238000
         AH    X,@CH00152                                          0487 01239000
*               GO TO DSNTST;       /* CONTINUE                      */ 01240000
         B     DSNTST                                              0488 01241000
*             END;                  /* END PLI TEST                  */ 01242000
*         END;                                                     0490 01243000
*       ELSE                        /* IF CHECK OR OPT IS INVALID    */ 01244000
*         DO;                       /* FOR THE PROMPTER BEING INVOKED*/ 01245000
         B     @RC00482                                            0491 01246000
@RF00482 DS    0H                                                  0492 01247000
*           IF OPTPDE=1 THEN        /* SET A SWITCH TO INDICATE      */ 01248000
         L     @14,PDLADDR                                         0492 01249000
         CLC   OPTPDE(2,@14),@CH00033                              0492 01250000
         BNE   @RF00492                                            0492 01251000
*             CHECKINV=YES;         /* WHICH KEYWORD WAS SPEC  Y01993*/ 01252000
         OI    CHECKINV,B'00100000'                                0493 01253000
*           ELSE                    /* IF CHECK WAS SPECIFIED        */ 01254000
*             OPTINV=YES;           /* SET CHECKINV SWITCH OTHERWISE */ 01255000
         B     @RC00492                                            0494 01256000
@RF00492 OI    OPTINV,B'00010000'                                  0494 01257000
*           INVALID=YES;            /* SET OPTINV SWITCH AND INVALID */ 01258000
@RC00492 OI    INVALID,B'10000000'                                 0495 01259000
*         END;                      /* SWITCH                  Y01993*/ 01260000
*     END;                                                         0497 01261000
@RC00482 DS    0H                                                  0498 01262000
*   A=TYPELNG(Y);                   /* LENGTH OF COMMAND NAME        */ 01263000
@RF00480 L     @14,Y                                               0498 01264000
         SLA   @14,4                                               0498 01265000
         LH    @08,TYPELNG-16(@14)                                 0498 01266000
         LR    A,@08                                               0498 01267000
*   CMDNAME(1:A)=                   /* MOVE COMMAND NAME TO COMMAND  */ 01268000
*       TYPES(Y,1:A);               /* LIST                          */ 01269000
         LR    @07,A                                               0499 01270000
         BCTR  @07,0                                               0499 01271000
         LA    @06,TYPES-16(@14)                                   0499 01272000
         EX    @07,@SM00906                                        0499 01273000
*   X=X+TYPELNG(Y)+1;               /* INCREMENT TO NEXT BYTE IN   0500 01274000
*                                      BUFFR                         */ 01275000
         AR    @08,X                                               0500 01276000
         AH    @08,@CH00033                                        0500 01277000
         LR    X,@08                                               0500 01278000
*DSNTST:                                                           0501 01279000
*   IF DSNPRSNT=NO THEN             /*                         Y01993*/ 01280000
DSNTST   TM    DSNPRSNT,B'00100000'                                0501 01281000
         BZ    @RT00501                                            0501 01282000
*                                   /* IF NO DSNAME IS PRESENT, THEN */ 01283000
*     GO TO NODSN2;                 /* PROCESS THE MEMBER NAME       */ 01284000
*   IF FULLQUAL^=YES THEN           /* IF THE DATA SET NAME IS NOT   */ 01285000
         TM    FULLQUAL,B'10000000'                                0503 01286000
         BNO   @RT00503                                            0503 01287000
*     GO TO MOVEDSN;                /* FULLY QUALIFIED JUST MOVE     */ 01288000
*   LQUOTE='7D'X;                   /* THE DATA SET NAME OTHERWISE   */ 01289000
         MVI   LQUOTE(X),X'7D'                                     0505 01290000
*   X=X+1;                          /* MOVE IN A QUOTE (') AND       */ 01291000
         AH    X,@CH00033                                          0506 01292000
*                                   /* INCREMENT POINTER (X)         */ 01293000
*MOVEDSN:                                                          0507 01294000
*   DSNPARM(1:DSLENG)=              /* MOVE THE NAME INTO THE        */ 01295000
*       DSNBUF(1:DSLENG);           /* COMMAND BUFFER                */ 01296000
MOVEDSN  LH    @14,DSLENG                                          0507 01297000
         LR    @08,@14                                             0507 01298000
         BCTR  @08,0                                               0507 01299000
         EX    @08,@SM00908                                        0507 01300000
*   X=X+DSLENG;                     /* INCREMENT X                   */ 01301000
         AR    X,@14                                               0508 01302000
*   IF MBRLENG>0 THEN               /* IF MEMBER NAME IS PRESENT     */ 01303000
         ICM   @14,3,MBRLENG                                       0509 01304000
         BNP   @RF00509                                            0509 01305000
*     DO;                           /* MOVE IT INTO THE COMMAND      */ 01306000
*NODSN2:                                                           0511 01307000
*       LPAREN='(';                 /* BUFFER ENCLOSED IN PARENS     */ 01308000
NODSN2   MVI   LPAREN(X),C'('                                      0511 01309000
*       X=X+1;                      /* INCREMENT X                   */ 01310000
         LA    @14,1                                               0512 01311000
         AR    X,@14                                               0512 01312000
*       MBRPARM(1:MBRLENG)=         /* MOVE MEMBER NAME              */ 01313000
*           MBRNAME(1:MBRLENG);     /*                               */ 01314000
         LH    @08,MBRLENG                                         0513 01315000
         LR    @03,@08                                             0513 01316000
         BCTR  @03,0                                               0513 01317000
         EX    @03,@SM00910                                        0513 01318000
*       X=X+MBRLENG;                /* INCREMENT X                   */ 01319000
         AR    X,@08                                               0514 01320000
*       RPAREN=')';                 /* PLACE RIGHT PEREN             */ 01321000
         MVI   RPAREN(X),C')'                                      0515 01322000
*       X=X+1;                      /* NEXT BYTE                     */ 01323000
         AR    X,@14                                               0516 01324000
*     END;                          /* END MEMBER TEST               */ 01325000
*   IF FULLQUAL=YES THEN            /* IF FULLY QUALIFIED PUT  Y01993*/ 01326000
@RF00509 TM    FULLQUAL,B'10000000'                                0518 01327000
         BNO   @RF00518                                            0518 01328000
*     DO;                           /* CLOSING QUOTE INTO            */ 01329000
*       RQUOTE='7D'X;               /* COMMAND BUFFER                */ 01330000
         MVI   RQUOTE(X),X'7D'                                     0520 01331000
*       X=X+1;                      /* INCREMENT X                   */ 01332000
         AH    X,@CH00033                                          0521 01333000
*     END;                          /* END FULLY QUALIFY TEST        */ 01334000
*PASS:                                                             0523 01335000
*   IF PASSLENG^=0 THEN                                            0523 01336000
@RF00518 DS    0H                                                  0523 01337000
PASS     LH    @14,PASSLENG                                        0523 01338000
         LTR   @14,@14                                             0523 01339000
         BZ    @RF00523                                            0523 01340000
*     DO;                           /* IF A PASSWORD IS PRESENT      */ 01341000
*       SLASH='/';                  /* PLACE SLASH IN BUFFER         */ 01342000
         MVI   SLASH(X),C'/'                                       0525 01343000
*       X=X+1;                      /* INCREMENT X                   */ 01344000
         AH    X,@CH00033                                          0526 01345000
*       PASSPARM(1:PASSLENG)=       /* MOVE THE NAME TO THE BUFFER   */ 01346000
*           PASSNAME(1:PASSLENG);   /* MOVE THE NAME TO THE BUFFER   */ 01347000
         LR    @08,@14                                             0527 01348000
         BCTR  @08,0                                               0527 01349000
         EX    @08,@SM00912                                        0527 01350000
*       X=X+PASSLENG;               /* INCREMENT FOR PASSWORD        */ 01351000
         AR    X,@14                                               0528 01352000
*     END;                          /* END PASSWORD TEST             */ 01353000
*   IF MSGPDE>0 THEN                /* IF THE LMSG/SMSG PARAMETER HAS*/ 01354000
@RF00523 L     @14,PDLADDR                                         0530 01355000
         LH    @14,MSGPDE(,@14)                                    0530 01356000
         LTR   @14,@14                                             0530 01357000
         BNP   @RF00530                                            0530 01358000
*     IF LMSGSMSG(Y)=YES THEN       /* BEEN SPEC AND IF IT IS  Y01993*/ 01359000
         L     @08,Y                                               0531 01360000
         SLA   @08,4                                               0531 01361000
         LA    @03,LMSGSMSG-16(@08)                                0531 01362000
         TM    0(@03),B'01000000'                                  0531 01363000
         BNO   @RF00531                                            0531 01364000
*       DO;                         /* ALLOWED, MOVE THE APPROPRIATE */ 01365000
*         X=X+1;                    /* TO ALLOW FOR BLANK 6          */ 01366000
         LA    @08,1                                               0533 01367000
         AR    X,@08                                               0533 01368000
*         IF MSGPDE=1 THEN          /* PARAMETER TO THE BUFFER       */ 01369000
         CR    @14,@08                                             0534 01370000
         BNE   @RF00534                                            0534 01371000
*           MSGBUFF=LMSG;           /* MOVE INTO LONG MSG BUFF       */ 01372000
         MVC   MSGBUFF(4,X),LMSG                                   0535 01373000
*         ELSE                      /* IF NOT LONG MSG               */ 01374000
*           MSGBUFF=SMSG;           /* DEFAULT SHORT MSG             */ 01375000
         B     @RC00534                                            0536 01376000
@RF00534 MVC   MSGBUFF(4,X),SMSG                                   0536 01377000
*         X=X+4;                    /* INCREMENT X                   */ 01378000
@RC00534 AH    X,@CH00106                                          0537 01379000
*       END;                        /* END MSG OPTION TEST           */ 01380000
*     ELSE                          /* IF LONG MSG OR                */ 01381000
*       DO;                         /* SHORT MSG IS                  */ 01382000
         B     @RC00531                                            0539 01383000
@RF00531 DS    0H                                                  0540 01384000
*         IF MSGPDE=1 THEN          /* INVALID FOR THE               */ 01385000
         L     @14,PDLADDR                                         0540 01386000
         CLC   MSGPDE(2,@14),@CH00033                              0540 01387000
         BNE   @RF00540                                            0540 01388000
*           LMSGINV=YES;            /* PROMPTER BEING INVOKED  Y01993*/ 01389000
         OI    LMSGINV,B'00100000'                                 0541 01390000
*         ELSE                      /* SET THE SWITCH INDICATING     */ 01391000
*           SMSGINV=YES;            /* WHICH KEYWORD WAS       Y01993*/ 01392000
         B     @RC00540                                            0542 01393000
@RF00540 OI    SMSGINV,B'00010000'                                 0542 01394000
*         INVALID=YES;              /* SPECIFIED AND SET THE   Y01993*/ 01395000
@RC00540 OI    INVALID,B'10000000'                                 0543 01396000
*       END;                        /* INVALID OPTION SWITCH         */ 01397000
*   IF PRECPDE>0 THEN               /* IF THE LPREC/SPREC PARAMETER  */ 01398000
@RC00531 DS    0H                                                  0545 01399000
@RF00530 L     @14,PDLADDR                                         0545 01400000
         LH    @14,PRECPDE(,@14)                                   0545 01401000
         LTR   @14,@14                                             0545 01402000
         BNP   @RF00545                                            0545 01403000
*     IF PRECPARM(Y)=YES THEN       /* HAS BEEN SPECIF AND IS  Y01993*/ 01404000
         L     @08,Y                                               0546 01405000
         SLA   @08,4                                               0546 01406000
         LA    @03,PRECPARM-16(@08)                                0546 01407000
         TM    0(@03),B'00010000'                                  0546 01408000
         BNO   @RF00546                                            0546 01409000
*       DO;                         /* ALLOWED, MOVE THE APPROPRIATE */ 01410000
*         X=X+1;                    /* TO ALLOW FOR BLANK            */ 01411000
         LA    @08,1                                               0548 01412000
         AR    X,@08                                               0548 01413000
*         IF PRECPDE=1 THEN         /* PARAMETR TO THE BUFFER        */ 01414000
         CR    @14,@08                                             0549 01415000
         BNE   @RF00549                                            0549 01416000
*           PRECPRM=LPREC;          /* LONG PRECISION                */ 01417000
         MVC   PRECPRM(5,X),LPREC                                  0550 01418000
*         ELSE                      /* DEFAULT SHORT PREC      Y01993*/ 01419000
*           PRECPRM=SPREC;          /* MOVE INTO BUFFER              */ 01420000
         B     @RC00549                                            0551 01421000
@RF00549 MVC   PRECPRM(5,X),SPREC                                  0551 01422000
*         X=X+5;                    /* T INCREMENT X                 */ 01423000
@RC00549 AH    X,@CH00152                                          0552 01424000
*       END;                        /* END PRECISION TEST            */ 01425000
*     ELSE                          /* IF LONG PRECISION (LPREC) OR  */ 01426000
*       DO;                         /* SHORT PRECISION (SPREC) IS    */ 01427000
         B     @RC00546                                            0554 01428000
@RF00546 DS    0H                                                  0555 01429000
*         IF PRECPDE=1 THEN         /* INVALID FOR THE               */ 01430000
         L     @14,PDLADDR                                         0555 01431000
         CLC   PRECPDE(2,@14),@CH00033                             0555 01432000
         BNE   @RF00555                                            0555 01433000
*           LPRECINV=YES;           /* PROMPTER BEING INVOKED  Y01993*/ 01434000
         OI    LPRECINV,B'00000010'                                0556 01435000
*         ELSE                      /* SET THE SWITCH INDICATING     */ 01436000
*           SPRECINV=YES;           /* WHICH KEYWORD WAS       Y01993*/ 01437000
         B     @RC00555                                            0557 01438000
@RF00555 OI    SPRECINV,B'00000001'                                0557 01439000
*         INVALID=YES;              /* SPECIFIED AND SET THE   Y01993*/ 01440000
@RC00555 OI    INVALID,B'10000000'                                 0558 01441000
*       END;                        /* INVALID OPTION SWITCH         */ 01442000
*   IF GOPDE>0 THEN                 /* IF GO SPECIFIED THEN    Y02676*/ 01443000
@RC00546 DS    0H                                                  0560 01444000
@RF00545 L     @14,PDLADDR                                         0560 01445000
         LH    @14,GOPDE(,@14)                                     0560 01446000
         LTR   @14,@14                                             0560 01447000
         BNP   @RF00560                                            0560 01448000
*     IF GOBIT(Y)=YES THEN          /* AND IS ALLOWED THEN     Y02676*/ 01449000
         L     @08,Y                                               0561 01450000
         SLA   @08,4                                               0561 01451000
         LA    @03,GOBIT-16(@08)                                   0561 01452000
         TM    0(@03),B'01000000'                                  0561 01453000
         BNO   @RF00561                                            0561 01454000
*       IF GOPDE=1 THEN             /* IF 'GO' THEN            Y02676*/ 01455000
         LA    @08,1                                               0562 01456000
         CR    @14,@08                                             0562 01457000
         BNE   @RF00562                                            0562 01458000
*         DO;                       /* MOVE IN 'GO'            Y02676*/ 01459000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01460000
         AR    X,@08                                               0564 01461000
*           GOPRM=GO;               /* 'GO'                    Y02676*/ 01462000
         MVC   GOPRM(2,X),GO                                       0565 01463000
*           X=X+2;                  /* UPDATE POINTER          Y02676*/ 01464000
         AH    X,@CH00078                                          0566 01465000
*         END;                      /*                         Y02676*/ 01466000
*       ELSE                        /* OTHERWIZE ASSUME NOGO   Y02676*/ 01467000
*         DO;                       /* MOVE IN 'NOGO'          Y02676*/ 01468000
         B     @RC00562                                            0568 01469000
@RF00562 DS    0H                                                  0569 01470000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01471000
         AH    X,@CH00033                                          0569 01472000
*           NOGOPRM=NOGO;           /* 'NOGO'                  Y02676*/ 01473000
         MVC   NOGOPRM(4,X),NOGO                                   0570 01474000
*           X=X+4;                  /* UPDATE POINTER          Y02676*/ 01475000
         AH    X,@CH00106                                          0571 01476000
*         END;                      /*                         Y02676*/ 01477000
*     ELSE                          /* INVALID FOR THIS COMP   Y02676*/ 01478000
*       DO;                         /* SET INVALID SWITCHES    Y02676*/ 01479000
         B     @RC00561                                            0573 01480000
@RF00561 DS    0H                                                  0574 01481000
*         INVALID=YES;              /*                         Y02676*/ 01482000
         OI    INVALID,B'10000000'                                 0574 01483000
*         IF GOPDE=1 THEN           /* SET APPROPRIATE         Y02676*/ 01484000
         L     @14,PDLADDR                                         0575 01485000
         CLC   GOPDE(2,@14),@CH00033                               0575 01486000
         BNE   @RF00575                                            0575 01487000
*           GOINV=YES;              /* INVALID KYWD SWITCH     Y02676*/ 01488000
         OI    GOINV,B'00000100'                                   0576 01489000
*         ELSE                      /*                         Y02676*/ 01490000
*           NOGOINV=YES;            /*                         Y02676*/ 01491000
         B     @RC00575                                            0577 01492000
@RF00575 OI    NOGOINV,B'00000010'                                 0577 01493000
*       END;                        /* END GO/NOGO             Y02676*/ 01494000
@RC00575 DS    0H                                                  0579 01495000
*   IF PAUSPDE>0 THEN               /* IF PAUSE SPECIFIED      Y02676*/ 01496000
@RC00561 DS    0H                                                  0579 01497000
@RF00560 L     @14,PDLADDR                                         0579 01498000
         LH    @14,PAUSPDE(,@14)                                   0579 01499000
         LTR   @14,@14                                             0579 01500000
         BNP   @RF00579                                            0579 01501000
*     IF PAUSBIT(Y)=YES THEN        /* AND WAS ALLOWED,        Y02676*/ 01502000
         L     @08,Y                                               0580 01503000
         SLA   @08,4                                               0580 01504000
         LA    @03,PAUSBIT-16(@08)                                 0580 01505000
         TM    0(@03),B'00100000'                                  0580 01506000
         BNO   @RF00580                                            0580 01507000
*       IF PAUSPDE=1 THEN           /* MOVE IN APPROP KYWD     Y02676*/ 01508000
         LA    @08,1                                               0581 01509000
         CR    @14,@08                                             0581 01510000
         BNE   @RF00581                                            0581 01511000
*         DO;                       /*                         Y02676*/ 01512000
*           X=X+1;                  /* ALLOW FOR BLANK         Y02676*/ 01513000
         AR    X,@08                                               0583 01514000
*           PAUSPRM=PAUSE;          /* 'PAUSE'                 Y02676*/ 01515000
         MVC   PAUSPRM(5,X),PAUSE                                  0584 01516000
*           X=X+5;                  /* UPDATE PTR              Y02676*/ 01517000
         AH    X,@CH00152                                          0585 01518000
*         END;                      /*                         Y02676*/ 01519000
*       ELSE                        /* ASSUME NOPAUSE          Y02676*/ 01520000
*         DO;                       /*                         Y02676*/ 01521000
         B     @RC00581                                            0587 01522000
@RF00581 DS    0H                                                  0588 01523000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01524000
         AH    X,@CH00033                                          0588 01525000
*           NOPAUPRM=NOPAUSE;       /* 'NOPAUSE'               Y02676*/ 01526000
         MVC   NOPAUPRM(7,X),NOPAUSE                               0589 01527000
*           X=X+7;                  /* UPDATE PTR              Y02676*/ 01528000
         AH    X,@CH00172                                          0590 01529000
*         END;                      /*                         Y02676*/ 01530000
*     ELSE                          /* INVALID FOR COMP        Y02676*/ 01531000
*       DO;                         /* SET INVALID SWITCHES    Y02676*/ 01532000
         B     @RC00580                                            0592 01533000
@RF00580 DS    0H                                                  0593 01534000
*         INVALID=YES;              /*                         Y02676*/ 01535000
         OI    INVALID,B'10000000'                                 0593 01536000
*         IF PAUSPDE=1 THEN         /* SET APPROPRIATE FLAG    Y02676*/ 01537000
         L     @14,PDLADDR                                         0594 01538000
         CLC   PAUSPDE(2,@14),@CH00033                             0594 01539000
         BNE   @RF00594                                            0594 01540000
*           PAUSINV=YES;            /*                         Y02676*/ 01541000
         OI    PAUSINV,B'00000001'                                 0595 01542000
*         ELSE                      /*                         Y02676*/ 01543000
*           NOPAUINV=YES;           /*                         Y02676*/ 01544000
         B     @RC00594                                            0596 01545000
@RF00594 OI    NOPAUINV,B'10000000'                                0596 01546000
*       END;                        /* END PAUSE/NOPAUSE       Y02676*/ 01547000
@RC00594 DS    0H                                                  0598 01548000
*   IF STOREPDE>0 THEN              /* IF STORE SPECIFIED      Y02676*/ 01549000
@RC00580 DS    0H                                                  0598 01550000
@RF00579 L     @14,PDLADDR                                         0598 01551000
         LH    @14,STOREPDE(,@14)                                  0598 01552000
         LTR   @14,@14                                             0598 01553000
         BNP   @RF00598                                            0598 01554000
*     IF STORBIT(Y)=YES THEN        /* AND IS ALLOWED          Y02676*/ 01555000
         L     @08,Y                                               0599 01556000
         SLA   @08,4                                               0599 01557000
         LA    @03,STORBIT-16(@08)                                 0599 01558000
         TM    0(@03),B'00010000'                                  0599 01559000
         BNO   @RF00599                                            0599 01560000
*       IF STOREPDE=1 THEN          /* MOVE IN APPROPRIATE     Y02676*/ 01561000
         LA    @08,1                                               0600 01562000
         CR    @14,@08                                             0600 01563000
         BNE   @RF00600                                            0600 01564000
*         DO;                       /* KEYWORD                 Y02676*/ 01565000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01566000
         AR    X,@08                                               0602 01567000
*           STOREPRM=STORE;         /* 'STORE'                 Y02676*/ 01568000
         MVC   STOREPRM(5,X),STORE                                 0603 01569000
*           X=X+5;                  /* UPDATE POINTER          Y02676*/ 01570000
         AH    X,@CH00152                                          0604 01571000
*         END;                      /*                         Y02676*/ 01572000
*       ELSE                        /* ASSUME NOSTORE          Y02676*/ 01573000
*         DO;                       /*                         Y02676*/ 01574000
         B     @RC00600                                            0606 01575000
@RF00600 DS    0H                                                  0607 01576000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01577000
         AH    X,@CH00033                                          0607 01578000
*           NOSTOPRM=NOSTORE;       /* 'NOSTORE'               Y02676*/ 01579000
         MVC   NOSTOPRM(7,X),NOSTORE                               0608 01580000
*           X=X+7;                  /* UPDATE POINTER          Y02676*/ 01581000
         AH    X,@CH00172                                          0609 01582000
*         END;                      /*                         Y02676*/ 01583000
*     ELSE                          /* INVALID FOR THIS COMP   Y02676*/ 01584000
*       DO;                         /*                         Y02676*/ 01585000
         B     @RC00599                                            0611 01586000
@RF00599 DS    0H                                                  0612 01587000
*         INVALID=YES;              /* SET INVALID SWITCHED    Y02676*/ 01588000
         OI    INVALID,B'10000000'                                 0612 01589000
*         IF STOREPDE=1 THEN        /*                         Y02676*/ 01590000
         L     @14,PDLADDR                                         0613 01591000
         CLC   STOREPDE(2,@14),@CH00033                            0613 01592000
         BNE   @RF00613                                            0613 01593000
*           STORINV=YES;            /*                         Y02676*/ 01594000
         OI    STORINV,B'01000000'                                 0614 01595000
*         ELSE                      /*                         Y02676*/ 01596000
*           NOSTINV=YES;            /*                         Y02676*/ 01597000
         B     @RC00613                                            0615 01598000
@RF00613 OI    NOSTINV,B'00100000'                                 0615 01599000
*       END;                        /* END STORE/NOSTORE       Y02676*/ 01600000
@RC00613 DS    0H                                                  0617 01601000
*   IF SRCPDE>0 THEN                /* IS SRC/OBJ SPECIFIED    Y02676*/ 01602000
@RC00599 DS    0H                                                  0617 01603000
@RF00598 L     @14,PDLADDR                                         0617 01604000
         LH    @14,SRCPDE(,@14)                                    0617 01605000
         LTR   @14,@14                                             0617 01606000
         BNP   @RF00617                                            0617 01607000
*     IF SRCBIT(Y)=YES THEN         /* AND ALLOWED, MOV IN     Y02676*/ 01608000
         L     @08,Y                                               0618 01609000
         SLA   @08,4                                               0618 01610000
         LA    @03,SRCBIT-16(@08)                                  0618 01611000
         TM    0(@03),B'00001000'                                  0618 01612000
         BNO   @RF00618                                            0618 01613000
*       IF SRCPDE=1 THEN            /* APPROPRIATE KEYWORD     Y02676*/ 01614000
         LA    @08,1                                               0619 01615000
         CR    @14,@08                                             0619 01616000
         BNE   @RF00619                                            0619 01617000
*         DO;                       /*                         Y02676*/ 01618000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01619000
         AR    X,@08                                               0621 01620000
*           SRCPRM=SOURCE;          /* 'SOURCE'                Y02676*/ 01621000
         MVC   SRCPRM(6,X),SOURCE                                  0622 01622000
*           X=X+6;                  /* UPDATE PTR              Y02676*/ 01623000
         AH    X,@CH00104                                          0623 01624000
*         END;                      /*                         Y02676*/ 01625000
*       ELSE                        /* ASSUME NOSTORE          Y02676*/ 01626000
*         DO;                       /*                         Y02676*/ 01627000
         B     @RC00619                                            0625 01628000
@RF00619 DS    0H                                                  0626 01629000
*           X=X+1;                  /* FOR BLANK               Y02676*/ 01630000
         AH    X,@CH00033                                          0626 01631000
*           OBJPRM=OBJECT;          /* 'OBJECT'                Y02676*/ 01632000
         MVC   OBJPRM(6,X),OBJECT                                  0627 01633000
*           X=X+6;                  /* UPDATE POINTER          Y02676*/ 01634000
         AH    X,@CH00104                                          0628 01635000
*         END;                      /*                         Y02676*/ 01636000
*     ELSE                          /* INVALID FOR THIS COMP   Y02676*/ 01637000
*       DO;                         /* SET INVALID SWITCHES    Y02676*/ 01638000
         B     @RC00618                                            0630 01639000
@RF00618 DS    0H                                                  0631 01640000
*         INVALID=YES;              /*                         Y02676*/ 01641000
         OI    INVALID,B'10000000'                                 0631 01642000
*         IF SRCPDE=1 THEN          /* FOR APPROPRIATE KEYWRD  Y02676*/ 01643000
         L     @14,PDLADDR                                         0632 01644000
         CLC   SRCPDE(2,@14),@CH00033                              0632 01645000
         BNE   @RF00632                                            0632 01646000
*           SRCINV=YES;             /*                         Y02676*/ 01647000
         OI    SRCINV,B'00010000'                                  0633 01648000
*         ELSE                      /*                         Y02676*/ 01649000
*           OBJINV=YES;             /*                         Y02676*/ 01650000
         B     @RC00632                                            0634 01651000
@RF00632 OI    OBJINV,B'00001000'                                  0634 01652000
*       END;                        /* END SOURCE/OBJECT       Y02676*/ 01653000
@RC00632 DS    0H                                                  0636 01654000
*   IF SIZPDE>0 THEN                /* IF SIZE SPECIFIED AND   Y02676*/ 01655000
@RC00618 DS    0H                                                  0636 01656000
@RF00617 L     @14,PDLADDR                                         0636 01657000
         ICM   @08,3,SIZPDE(@14)                                   0636 01658000
         BNP   @RF00636                                            0636 01659000
*     IF SIZBIT(Y)=YES THEN         /* IS ALLOWED THEN MOVE    Y02676*/ 01660000
         L     @08,Y                                               0637 01661000
         SLA   @08,4                                               0637 01662000
         LA    @03,SIZBIT-16(@08)                                  0637 01663000
         TM    0(@03),B'00000100'                                  0637 01664000
         BNO   @RF00637                                            0637 01665000
*       DO;                         /* IN SIZE(NNN)            Y02676*/ 01666000
*         X=X+1;                    /* FOR BLANK               Y02676*/ 01667000
         LA    @08,1                                               0639 01668000
         AR    X,@08                                               0639 01669000
*         SIZEPRM=SIZZ;             /* 'SIZE'                  Y02676*/ 01670000
         MVC   SIZEPRM(4,X),SIZZ                                   0640 01671000
*         X=X+4;                    /* UPDATE POINTER          Y02676*/ 01672000
         AH    X,@CH00106                                          0641 01673000
*         LPAREN='(';               /* LEFT PAREN              Y02676*/ 01674000
         MVI   LPAREN(X),C'('                                      0642 01675000
*         X=X+1;                    /* FOR PAREN               Y02676*/ 01676000
         AR    X,@08                                               0643 01677000
*         SIZEPRM(1:SIZLEN)=SIZPTR->SIZEPRM(1:SIZLEN);             0644 01678000
         LH    @03,SIZLEN(,@14)                                    0644 01679000
         LR    @07,@03                                             0644 01680000
         BCTR  @07,0                                               0644 01681000
         L     @14,SIZPTR(,@14)                                    0644 01682000
         EX    @07,@SM00916                                        0644 01683000
*         X=X+SIZLEN;               /* MOVE IN NUMBERS AND     Y02676*/ 01684000
         AR    X,@03                                               0645 01685000
*         RPAREN=')';               /* UPDATE POINTER-')'      Y02676*/ 01686000
         MVI   RPAREN(X),C')'                                      0646 01687000
*         X=X+1;                    /* FOR RIGHT PAREN         Y02676*/ 01688000
         AR    X,@08                                               0647 01689000
*       END;                        /*                         Y02676*/ 01690000
*     ELSE                          /* INVALID FOR THIS COMP   Y02676*/ 01691000
*       DO;                         /* SET INVALID SWITCHES    Y02676*/ 01692000
         B     @RC00637                                            0649 01693000
@RF00637 DS    0H                                                  0650 01694000
*         INVALID=YES;              /*                         Y02676*/ 01695000
         OI    INVALID,B'10000000'                                 0650 01696000
*         SIZINV=YES;               /*                         Y02676*/ 01697000
         OI    SIZINV,B'00000100'                                  0651 01698000
*       END;                        /*                         Y02676*/ 01699000
*   IF TESTPDE>0 THEN               /* IF TEST SPECIFIED AND         */ 01700000
@RC00637 DS    0H                                                  0653 01701000
@RF00636 L     @14,PDLADDR                                         0653 01702000
         LH    @14,TESTPDE(,@14)                                   0653 01703000
         LTR   @14,@14                                             0653 01704000
         BNP   @RF00653                                            0653 01705000
*     IF TESTPARM(Y)=YES THEN       /* HAS BEEN SPEC AND IT IS Y01993*/ 01706000
         L     @08,Y                                               0654 01707000
         SLA   @08,4                                               0654 01708000
         LA    @03,TESTPARM-16(@08)                                0654 01709000
         TM    0(@03),B'00100000'                                  0654 01710000
         BNO   @RF00654                                            0654 01711000
*       DO;                         /* ALLOWED, MOVE THE APPROPRIATE */ 01712000
*         X=X+1;                    /* TO ALLOW FOR BLANK            */ 01713000
         LA    @08,1                                               0656 01714000
         AR    X,@08                                               0656 01715000
*         IF TESTPDE=1 THEN         /* PARAMETR TO THE BUFFER        */ 01716000
         CR    @14,@08                                             0657 01717000
         BNE   @RF00657                                            0657 01718000
*           DO;                     /* INCREMENT X ACCORDINGLY       */ 01719000
*             TESTPRM=TEST;         /* MOVE IN TEST                  */ 01720000
         MVC   TESTPRM(4,X),TEST                                   0659 01721000
*             X=X+4;                /* INCREMENT X                   */ 01722000
         AH    X,@CH00106                                          0660 01723000
*             GO TO BUILD1;         /* GO TO BUILD                   */ 01724000
         B     BUILD1                                              0661 01725000
*           END;                    /* END TEST FOR TEST             */ 01726000
*         NOTESTPR=NOTEST;          /* DEFAULT IS NOTEST             */ 01727000
@RF00657 MVC   NOTESTPR(6,X),NOTEST                                0663 01728000
*         X=X+6;                    /* INCREMENT X                   */ 01729000
         AH    X,@CH00104                                          0664 01730000
*       END;                        /* END OPTION TEST               */ 01731000
*     ELSE                          /* IF TEST OR NOTEST             */ 01732000
*       DO;                         /* IS SPECIFIED AND IS           */ 01733000
         B     @RC00654                                            0666 01734000
@RF00654 DS    0H                                                  0667 01735000
*         IF TESTPDE=1 THEN         /* INVALID FOR THE               */ 01736000
         L     @14,PDLADDR                                         0667 01737000
         CLC   TESTPDE(2,@14),@CH00033                             0667 01738000
         BNE   @RF00667                                            0667 01739000
*           TESTINV=YES;            /* PROMPTER BEING INVOKED  Y01993*/ 01740000
         OI    TESTINV,B'00001000'                                 0668 01741000
*         ELSE                      /* SET THE SWITCH INDICATING     */ 01742000
*           NOTSTINV=YES;           /* WHICH KEYWORD WAS       Y01993*/ 01743000
         B     @RC00667                                            0669 01744000
@RF00667 OI    NOTSTINV,B'00000100'                                0669 01745000
*         INVALID=YES;              /* SPECIFIED AND SET THE   Y01993*/ 01746000
@RC00667 OI    INVALID,B'10000000'                                 0670 01747000
*       END;                        /* INVALID OPTION SWITCH         */ 01748000
*BUILD1:                            /* IF THE STANDARD/FREE PARAMETER*/ 01749000
*   IF FORMPDE>0 THEN               /* HAS BEEN SPECIFIED AND  Y01993*/ 01750000
@RC00654 DS    0H                                                  0672 01751000
@RF00653 DS    0H                                                  0672 01752000
BUILD1   L     @14,PDLADDR                                         0672 01753000
         LH    @14,FORMPDE(,@14)                                   0672 01754000
         LTR   @14,@14                                             0672 01755000
         BNP   @RF00672                                            0672 01756000
*     IF FORM(Y)=YES THEN           /* ALLOWED, MOVE THE APPROPRIATE */ 01757000
         L     @08,Y                                               0673 01758000
         SLA   @08,4                                               0673 01759000
         LA    @03,FORM-16(@08)                                    0673 01760000
         TM    0(@03),B'00001000'                                  0673 01761000
         BNO   @RF00673                                            0673 01762000
*       DO;                         /* PARAMETER TO THE BUFFER.      */ 01763000
*         X=X+1;                    /* TO ALLOW FOR BLANK            */ 01764000
         LA    @08,1                                               0675 01765000
         AR    X,@08                                               0675 01766000
*         IF FORMPDE=1 THEN                                        0676 01767000
         CR    @14,@08                                             0676 01768000
         BNE   @RF00676                                            0676 01769000
*           DO;                                                    0677 01770000
*             FIXEDPRM=FIXD;        /* MOVE IN FIXED OPTION    Y01993*/ 01771000
         MVC   FIXEDPRM(5,X),FIXD                                  0678 01772000
*             X=X+5;                /* INCREMENT X                   */ 01773000
         AH    X,@CH00152                                          0679 01774000
*             GO TO BUILD2;         /* BUILD CONTINE                 */ 01775000
         B     BUILD2                                              0680 01776000
*           END;                    /* END FIXED TEST                */ 01777000
*         FREEPARM=FREE;            /* DEFAULT IS FREE               */ 01778000
@RF00676 MVC   FREEPARM(4,X),FREE                                  0682 01779000
*         X=X+4;                    /* INCREMENT X                   */ 01780000
         AH    X,@CH00106                                          0683 01781000
*       END;                        /* END FIXED OPTION TEST         */ 01782000
*     ELSE                          /* IF FIXED OR FREE              */ 01783000
*       DO;                         /* IS SPECIFIED AND IS           */ 01784000
         B     @RC00673                                            0685 01785000
@RF00673 DS    0H                                                  0686 01786000
*         IF FORMPDE=1 THEN         /* INVALID FOR THE               */ 01787000
         L     @14,PDLADDR                                         0686 01788000
         CLC   FORMPDE(2,@14),@CH00033                             0686 01789000
         BNE   @RF00686                                            0686 01790000
*           FIXEDINV=YES;           /* PROMPTER BEING INVOKED  Y01993*/ 01791000
         OI    FIXEDINV,B'10000000'                                0687 01792000
*         ELSE                      /* SET THE SWITCH INDICATING     */ 01793000
*           FREEINV=YES;            /* WHICH KEYWORD WAS       Y01993*/ 01794000
         B     @RC00686                                            0688 01795000
@RF00686 OI    FREEINV,B'01000000'                                 0688 01796000
*         INVALID=YES;              /* SPECIFIED AND SET THE   Y01993*/ 01797000
@RC00686 OI    INVALID,B'10000000'                                 0689 01798000
*       END;                        /* INVALID OPTION SWITCH         */ 01799000
*                                                                  0690 01800000
*   /*****************************************************************/ 01801000
*   /*                                                               */ 01802000
*   /* CHECK FOR OPTIONS IF PRESENT PROCESS THAN GO CHECK PARMS      */ 01803000
*   /*                                                               */ 01804000
*   /*****************************************************************/ 01805000
*                                                                  0691 01806000
*   IF OPTPDE>0 THEN                                               0691 01807000
@RC00673 DS    0H                                                  0691 01808000
@RF00672 L     @14,PDLADDR                                         0691 01809000
         LH    @14,OPTPDE(,@14)                                    0691 01810000
         LTR   @14,@14                                             0691 01811000
         BNP   @RF00691                                            0691 01812000
*     IF CHECKOPT(Y)=YES THEN       /*                         Y01993*/ 01813000
         L     @08,Y                                               0692 01814000
         SLA   @08,4                                               0692 01815000
         LA    @03,CHECKOPT-16(@08)                                0692 01816000
         TM    0(@03),B'00000001'                                  0692 01817000
         BNO   @RF00692                                            0692 01818000
*       IF OPTPDE=1 THEN                                           0693 01819000
         CH    @14,@CH00033                                        0693 01820000
         BE    @RT00693                                            0693 01821000
*         GO TO PARMATCH;                                          0694 01822000
*BUILD2:                                                           0695 01823000
*   CONTRLBF=X-Z;                   /* LENGTH OF COMMAND TO CONTRLBF */ 01824000
@RF00692 DS    0H                                                  0695 01825000
@RF00691 DS    0H                                                  0695 01826000
BUILD2   L     @14,Z                                               0695 01827000
         LR    @08,X                                               0695 01828000
         SR    @08,@14                                             0695 01829000
         STH   @08,CONTRLBF(,@14)                                  0695 01830000
*   CONTRESD=0;                     /* ZERO OTHER PORTION            */ 01831000
         SR    @08,@08                                             0696 01832000
         STH   @08,CONTRESD(,@14)                                  0696 01833000
*   Z=X;                            /* RESET Z FOR NEXT COMMAND      */ 01834000
         ST    X,Z                                                 0697 01835000
*   X=X+4;                          /* RESET X FOR NEXT AVAIL BYTE   */ 01836000
         AH    X,@CH00106                                          0698 01837000
*   IF WHENCMND(Y)=YES              /* IF THE WHEN COMMAND IS  Y01993*/ 01838000
*     THEN                                                         0699 01839000
         L     @14,Y                                               0699 01840000
         SLA   @14,4                                               0699 01841000
         LA    @08,WHENCMND-16(@14)                                0699 01842000
         TM    0(@08),B'01000000'                                  0699 01843000
         BNO   @RF00699                                            0699 01844000
*     DO;                           /* NECESSARY FOR THIS COMPILE    */ 01845000
*       WHENIFCD=WHENEND;           /* SEQUENCE,PLACE IT IN COMMAND  */ 01846000
         MVC   WHENIFCD(16,X),WHENEND                              0701 01847000
*       CNTRLBF='0014'X;            /* LENGTH OF WHEN COMMAND        */ 01848000
         L     @14,Z                                               0702 01849000
         MVC   CNTRLBF(2,@14),@CB00852                             0702 01850000
*       CNTRESD='0000'X;            /* CONTROL INFORMATION           */ 01851000
         MVC   CNTRESD(2,@14),@CB00391                             0703 01852000
*       X=X+20;                                                    0704 01853000
         LA    @08,20                                              0704 01854000
         AR    X,@08                                               0704 01855000
*       Z=Z+20;                     /* SET X AND Z FOR NEXT COMMAND  */ 01856000
         AR    @14,@08                                             0705 01857000
         ST    @14,Z                                               0705 01858000
*     END;                                                         0706 01859000
*   IF LOADCMD(Y)=NO THEN           /* IF THE LOADGO COMMAND IS NOT  */ 01860000
@RF00699 L     @14,Y                                               0707 01861000
         SLA   @14,4                                               0707 01862000
         LA    @08,LOADCMD-16(@14)                                 0707 01863000
         TM    0(@08),B'00100000'                                  0707 01864000
         BZ    @RT00707                                            0707 01865000
*     GO TO PARMATCH;               /* REQUIRED FOR THIS COMMAND SE- */ 01866000
*                                   /* QUENCE , THE LIST IS COMPLETE */ 01867000
*   LOADCMND=LOADGO;                /* PLACE LOADGO ( IN THE BUFFER  */ 01868000
         MVC   LOADCMND(8,X),LOADGO                                0709 01869000
*   X=X+8;                          /* INCREMENT X Y01156            */ 01870000
         AH    X,@CH00054                                          0710 01871000
*   IF DSNPRSNT=NO THEN             /* IF NO DSNAME IS PRESENT, THEN */ 01872000
         TM    DSNPRSNT,B'00100000'                                0711 01873000
         BZ    @RT00711                                            0711 01874000
*     GO TO NODSN3;                 /* THEN PROCESS THE MEMBER NAME  */ 01875000
*   IF FULLQUAL=YES                 /* IF THE DATA SET NAME IS Y01993*/ 01876000
*     THEN                          /* FULLY QUALIFIED THEN    Y01993*/ 01877000
         TM    FULLQUAL,B'10000000'                                0713 01878000
         BNO   @RF00713                                            0713 01879000
*     DO;                           /* CHECK                   Y01993*/ 01880000
*       IF DSLEN+PSCBUSRL>39        /* IF THE DATA SET NAME +  Y01993*/ 01881000
*         THEN                      /* '.OBJ' IS GREATER THAN  Y01993*/ 01882000
         L     @14,PDLADDR                                         0715 01883000
         LH    @14,DSLEN(,@14)                                     0715 01884000
         L     @08,CPPLPTR                                         0715 01885000
         L     @08,CPPLPSCB(,@08)                                  0715 01886000
         SR    @03,@03                                             0715 01887000
         IC    @03,PSCBUSRL(,@08)                                  0715 01888000
         LR    @07,@14                                             0715 01889000
         AR    @07,@03                                             0715 01890000
         CH    @07,@CH00854                                        0715 01891000
         BNH   @RF00715                                            0715 01892000
*         DO;                       /* 44 CHARACTERS, IF SO    Y01993*/ 01893000
*           W1=ADDR(SEG05);         /* ISSUE AN ERROR MSG AND  Y01993*/ 01894000
         LA    @06,SEG05                                           0717 01895000
         ST    @06,W1                                              0717 01896000
*           W2=ADDR(SEG05B);        /* TERMINATE PROCESSING    Y01993*/ 01897000
         LA    @06,SEG05B                                          0718 01898000
         ST    @06,W2                                              0718 01899000
*           W3=ADDR(SEG05A);        /* SEG05 IS FIRST HALF     Y01993*/ 01900000
         LA    @06,SEG05A                                          0719 01901000
         ST    @06,W3                                              0719 01902000
*           W4=0;                   /* SEG05B HAS DATA SET NAMEY01993*/ 01903000
         SR    @06,@06                                             0720 01904000
         ST    @06,W4                                              0720 01905000
*           W5=0;                   /* SEG05A HAS LAST HALF    Y01993*/ 01906000
         ST    @06,W5                                              0721 01907000
*           RTCODE12=YES;           /* SET RUN CANNOT CONTINUE Y01993*/ 01908000
         OI    RTCODE12,B'00000100'                                0722 01909000
*           LEN5B=DSLEN+PSCBUSRL+1; /* MOVE LENGTH IN          Y01993*/ 01910000
         LA    @06,1                                               0723 01911000
         AR    @07,@06                                             0723 01912000
         STH   @07,LEN5B                                           0723 01913000
*           NAME5B=PSCBUSER;        /* MOVE IN USERID          Y01993*/ 01914000
         MVI   NAME5B+7,C' '                                       0724 01915000
         MVC   NAME5B+8(44),NAME5B+7                               0724 01916000
         MVC   NAME5B(7),PSCBUSER(@08)                             0724 01917000
*           NAME5B(PSCBUSRL+1)='.'; /* MOVE IN PERIOD          Y01993*/ 01918000
         LA    @08,NAME5B(@03)                                     0725 01919000
         MVI   0(@08),C'.'                                         0725 01920000
*           NAME5B(PSCBUSRL+2:PSCBUSRL+1+DSLEN)=DSNBUF(1:DSLEN);/* 0726 01921000
*                                      MOVE IN DATA SET NAME   Y01993*/ 01922000
         LA    @08,NAME5B+1(@03)                                   0726 01923000
         AR    @06,@03                                             0726 01924000
         AR    @06,@14                                             0726 01925000
         SR    @06,@03                                             0726 01926000
         BCTR  @06,0                                               0726 01927000
         BCTR  @06,0                                               0726 01928000
         EX    @06,@SM00918                                        0726 01929000
*           CALL PUTINTFC;          /* ISSUE MESSAGE           Y01993*/ 01930000
         BAL   @14,PUTINTFC                                        0727 01931000
*         END;                      /* END OF > 44 PROCESSING  Y01993*/ 01932000
*       ELSE                                                       0729 01933000
*         ;                         /*                         Y01993*/ 01934000
@RF00715 DS    0H                                                  0730 01935000
*     END;                          /*                         Y01993*/ 01936000
*   ELSE                            /* IF THE DSNAME IS NOT    Y01993*/ 01937000
*     DO;                           /* FULLY QUALIFIED, DROP THE     */ 01938000
         B     @RC00713                                            0731 01939000
@RF00713 DS    0H                                                  0732 01940000
*       DSLENG=DSLENG-TYPELNG(Y)-1; /* RIGHTMOST QUALIFIER           */ 01941000
         L     @14,Y                                               0732 01942000
         SLA   @14,4                                               0732 01943000
         LH    @08,DSLENG                                          0732 01944000
         SH    @08,TYPELNG-16(@14)                                 0732 01945000
         BCTR  @08,0                                               0732 01946000
         STH   @08,DSLENG                                          0732 01947000
*     END;                                                         0733 01948000
*   DSNPARM(1:DSLENG)=              /* MOVE THE DATA SET NAME INTO   */ 01949000
*       DSNBUF(1:DSLENG);           /* THE COMMAND BUFFER            */ 01950000
@RC00713 LH    @14,DSLENG                                          0734 01951000
         LR    @08,@14                                             0734 01952000
         BCTR  @08,0                                               0734 01953000
         EX    @08,@SM00908                                        0734 01954000
*   X=X+DSLENG;                     /* INCREMENT X                   */ 01955000
         AR    X,@14                                               0735 01956000
*   DOTOBJ=OBJQUAL;                 /* QUALIFY LOADGO DATASET NAME 0736 01957000
*                                      WITH .OBJ M4249               */ 01958000
         MVC   DOTOBJ(4,X),OBJQUAL                                 0736 01959000
*   X=X+4;                          /* X PASS .OBJ M4249             */ 01960000
         AH    X,@CH00106                                          0737 01961000
*   IF MBRLENG>0 THEN                                              0738 01962000
         ICM   @14,3,MBRLENG                                       0738 01963000
         BNP   @RF00738                                            0738 01964000
*     DO;                           /* IF A MEMBER NAME IS PRESENT   */ 01965000
*NODSN3:                                                           0740 01966000
*       LPAREN='(';                 /* THEN PUT A LEFT PAREN IN      */ 01967000
NODSN3   MVI   LPAREN(X),C'('                                      0740 01968000
*       X=X+1;                      /* COMMAND BUFFER, INCREMENT X   */ 01969000
         LA    @14,1                                               0741 01970000
         AR    X,@14                                               0741 01971000
*       MBRPARM(1:MBRLENG)=         /* MOVE MEMBER NAME              */ 01972000
*           MBRNAME(1:MBRLENG);     /* INTO THE COMMAND BUFFER,      */ 01973000
         LH    @08,MBRLENG                                         0742 01974000
         LR    @03,@08                                             0742 01975000
         BCTR  @03,0                                               0742 01976000
         EX    @03,@SM00910                                        0742 01977000
*       X=X+MBRLENG;                /* INCREMENT X, PUT              */ 01978000
         AR    X,@08                                               0743 01979000
*       RPAREN=')';                 /* A RIGHT PAREN IN COMMAND      */ 01980000
         MVI   RPAREN(X),C')'                                      0744 01981000
*       X=X+1;                      /* BUFFER AND INCREMENT X        */ 01982000
         AR    X,@14                                               0745 01983000
*     END;                          /* END MEMBER PROCESSIN          */ 01984000
*   RPAREN=')';                     /* END DSNAME PROCESSING   Y00973*/ 01985000
@RF00738 MVI   RPAREN(X),C')'                                      0747 01986000
*   X=X+1;                          /* UPDATE PTR              Y00973*/ 01987000
         AH    X,@CH00033                                          0748 01988000
*PARMATCH:                                                         0749 01989000
*   IF PARMLEN=0 THEN               /* IF PARM IS NULL               */ 01990000
PARMATCH L     @14,PDLADDR                                         0749 01991000
         LH    @08,PARMLEN(,@14)                                   0749 01992000
         LTR   @08,@08                                             0749 01993000
         BZ    @RT00749                                            0749 01994000
*     GO TO FORTTEST;               /* NO PARM PROCESSING            */ 01995000
*   IF PARMPRES=YES THEN            /* IF A PARM STRNG HAS     Y01993*/ 01996000
         TM    PARMPRES(@14),B'10000000'                           0751 01997000
         BNO   @RF00751                                            0751 01998000
*     IF PRMSTRNG(Y)=YES THEN       /* BEEN SPECIFIED MOVE IT TO THE */ 01999000
         L     @03,Y                                               0752 02000000
         SLA   @03,4                                               0752 02001000
         LA    @07,PRMSTRNG-16(@03)                                0752 02002000
         TM    0(@07),B'10000000'                                  0752 02003000
         BNO   @RF00752                                            0752 02004000
*       DO;                         /* LOADGO COMMAND                */ 02005000
*         X=X+1;                    /* TO ALLOW FOR BLANK            */ 02006000
         LA    @03,1                                               0754 02007000
         AR    X,@03                                               0754 02008000
*         RQUOTE='7D'X;             /* PLACE QUOTES AROUND IT        */ 02009000
         MVI   RQUOTE(X),X'7D'                                     0755 02010000
*         X=X+1;                    /* INCREMENT X                   */ 02011000
         AR    X,@03                                               0756 02012000
*         PARMPARM(1:PARMLEN)=PARMBUF(1:PARMLEN);/* MOVE IN PARMS  0757 02013000
*                                                              Y01993*/ 02014000
         LR    @07,@08                                             0757 02015000
         BCTR  @07,0                                               0757 02016000
         L     @14,PARMPTR(,@14)                                   0757 02017000
         EX    @07,@SM00920                                        0757 02018000
*         X=X+PARMLEN;              /* INCREMENT X                   */ 02019000
         AR    X,@08                                               0758 02020000
*         LQUOTE='7D'X;             /* ENCLOSE IN QUOTES             */ 02021000
         MVI   LQUOTE(X),X'7D'                                     0759 02022000
*         X=X+1;                    /* INCREMENT X                   */ 02023000
         AR    X,@03                                               0760 02024000
*       END;                        /* END PARM PROCESSING           */ 02025000
*     ELSE                          /* IF A PARM STRING WAS PASSED   */ 02026000
*       DO;                         /* AND IS INVALID FOR THE        */ 02027000
         B     @RC00752                                            0762 02028000
@RF00752 DS    0H                                                  0763 02029000
*         PARMINV=YES;              /* PROMPTER BEING INVOKED. SET   */ 02030000
*         INVALID=YES;              /* THE INVALID OPTION SWITCH AND */ 02031000
         OI    PARMINV,B'11000000'                                 0764 02032000
*       END;                        /* INVALID PARM STRING SWITCH    */ 02033000
*FORTTEST:                                                         0766 02034000
*   IF FLIBPARM(Y)=YES              /* IF THE FORTLIB PARAMETER IS   */ 02035000
*     THEN                          /* YES                           */ 02036000
@RC00752 DS    0H                                                  0766 02037000
@RF00751 DS    0H                                                  0766 02038000
FORTTEST L     @14,Y                                               0766 02039000
         SLA   @14,4                                               0766 02040000
         LA    @08,FLIBPARM-16(@14)                                0766 02041000
         TM    0(@08),B'00000100'                                  0766 02042000
         BNO   @RF00766                                            0766 02043000
*     DO;                           /* REQUIRED PLACE IT IN BUFFER   */ 02044000
*       X=X+1;                      /* TO ALLOW FOR BLANK            */ 02045000
         AH    X,@CH00033                                          0768 02046000
*       FORTLIBP=FLIBNAME;          /* MOVE                          */ 02047000
         MVC   FORTLIBP(7,X),FLIBNAME                              0769 02048000
*       X=X+7;                      /* INCREMENT X                   */ 02049000
         AH    X,@CH00172                                          0770 02050000
*     END;                          /* END FORT PARM PROCCESS        */ 02051000
*   IF CLIBPARM(Y)=YES              /* IF THE COBLIB PARAM IS REQ    */ 02052000
*     THEN                                                         0772 02053000
@RF00766 L     @14,Y                                               0772 02054000
         SLA   @14,4                                               0772 02055000
         LA    @08,CLIBPARM-16(@14)                                0772 02056000
         TM    0(@08),B'00000010'                                  0772 02057000
         BNO   @RF00772                                            0772 02058000
*     DO;                           /* THEN PLACE IT IN THE BUFFER   */ 02059000
*       X=X+1;                      /* TO ALLOW FOR BLANK            */ 02060000
         AH    X,@CH00033                                          0774 02061000
*       COBLIBP=CLIBNAME;           /* MOVEIN                        */ 02062000
         MVC   COBLIBP(6,X),CLIBNAME                               0775 02063000
*       X=X+6;                      /* INCREMENT X                   */ 02064000
         AH    X,@CH00104                                          0776 02065000
*     END;                          /* END COBOL PARM TEST           */ 02066000
*   IF CHECKOPT(Y)=YES THEN         /* TEST IF PL1BASE PARAMETER IS  */ 02067000
@RF00772 L     @14,Y                                               0778 02068000
         SLA   @14,4                                               0778 02069000
         LA    @08,CHECKOPT-16(@14)                                0778 02070000
         TM    0(@08),B'00000001'                                  0778 02071000
         BNO   @RF00778                                            0778 02072000
*     IF OPTPDE=2 THEN              /* REQUIRED, THEN PLACE IT IN THE*/ 02073000
         L     @14,PDLADDR                                         0779 02074000
         CLC   OPTPDE(2,@14),@CH00078                              0779 02075000
         BNE   @RF00779                                            0779 02076000
*       DO;                         /* INPUT STACK                   */ 02077000
*         X=X+1;                    /* ALLOW FOR BLANK               */ 02078000
         AH    X,@CH00033                                          0781 02079000
*         PL1BASEP=PL1BASE;         /* MOVE IN PLIBASE               */ 02080000
         MVC   PL1BASEP(7,X),PL1BASE                               0782 02081000
*         X=X+7;                    /* INCREMENT                     */ 02082000
         AH    X,@CH00172                                          0783 02083000
*       END;                        /* END PLIBASE TEST              */ 02084000
*   IF LIBPDE=1                     /* IF THE LIB OPERAND IS SPECIF  */ 02085000
*     THEN                          /* AND IT IS ALLOWED, THEN BUILD */ 02086000
@RF00779 DS    0H                                                  0785 02087000
@RF00778 LA    @14,1                                               0785 02088000
         L     @08,PDLADDR                                         0785 02089000
         CH    @14,LIBPDE(,@08)                                    0785 02090000
         BNE   @RF00785                                            0785 02091000
*     IF LIBOPND(Y)=YES&            /* THE LIB OPERAND ON THE  Y01156*/ 02092000
*         OPTPDE^=1                 /* LOADGO COMMAND          Y01156*/ 02093000
*       THEN                        /*                         Y01156*/ 02094000
         L     @03,Y                                               0786 02095000
         SLA   @03,4                                               0786 02096000
         LA    @07,LIBOPND-16(@03)                                 0786 02097000
         TM    0(@07),B'10000000'                                  0786 02098000
         BNO   @RF00786                                            0786 02099000
         CH    @14,OPTPDE(,@08)                                    0786 02100000
         BE    @RF00786                                            0786 02101000
*       DO;                         /*                         Y01156*/ 02102000
*         X=X+1;                    /* FOR BLANK               Y01156*/ 02103000
         AR    X,@14                                               0788 02104000
*         LIBPTR=ADDR(FIRSTDSN);    /* SET TO FIRST ADDR       Y01156*/ 02105000
         LA    LIBPTR,FIRSTDSN(,@08)                               0789 02106000
*         LIBOUT(1:4)=LIBNAME;      /* INSERT LIB(             Y01156*/ 02107000
         MVC   LIBOUT(4,X),LIBNAME                                 0790 02108000
*         X=X+4;                    /* UPDATE PTR              Y01156*/ 02109000
         AH    X,@CH00106                                          0791 02110000
*         DO WHILE LIBPTR^=ENDCHAIN;/* DO UNTIL END            Y01156*/ 02111000
         B     @DE00792                                            0792 02112000
@DL00792 DS    0H                                                  0793 02113000
*           IF LDSNQUOT=YES         /* IF DSN IS FULLY QUAL    Y01156*/ 02114000
*             THEN                  /*                         Y01156*/ 02115000
         TM    LDSNQUOT(LIBPTR),B'01000000'                        0793 02116000
         BNO   @RF00793                                            0793 02117000
*             DO;                   /*                         Y01156*/ 02118000
*               LIBOUT(1)=QUOTE;    /* MOVE IN QUOTE           Y01156*/ 02119000
         MVI   LIBOUT(X),X'7D'                                     0795 02120000
*               X=X+1;              /* UPDATE PTR              Y01156*/ 02121000
         AH    X,@CH00033                                          0796 02122000
*             END;                  /*                         Y01156*/ 02123000
*           IF LDSNPRES=YES         /* IF DSN IS PRESENT       Y01156*/ 02124000
*             THEN                  /*                         Y01156*/ 02125000
@RF00793 TM    LDSNPRES(LIBPTR),B'10000000'                        0798 02126000
         BNO   @RF00798                                            0798 02127000
*             DO;                   /* MOVE IN DATA SET NAME   Y01156*/ 02128000
*               LIBOUT(1:LDSNLEN)=DSNMELIB(1:LDSNLEN);             0800 02129000
         LH    @14,LDSNLEN(,LIBPTR)                                0800 02130000
         LR    @08,@14                                             0800 02131000
         BCTR  @08,0                                               0800 02132000
         L     @07,LDSNPTR(,LIBPTR)                                0800 02133000
         EX    @08,@SM00922                                        0800 02134000
*               X=X+LDSNLEN;        /* UPDATE PTR              Y01156*/ 02135000
         AR    X,@14                                               0801 02136000
*             END;                                                 0802 02137000
*           IF LMBRPRES=YES         /* IF MEMBER IS PRES THEN  Y01156*/ 02138000
*             THEN                  /* MOVE IN MEMBER NAME     Y01156*/ 02139000
@RF00798 TM    LMBRPRES(LIBPTR),B'10000000'                        0803 02140000
         BNO   @RF00803                                            0803 02141000
*             DO;                   /*                         Y01156*/ 02142000
*               LIBOUT(1)=OPENP;    /* MOVE IN PAREN           Y01156*/ 02143000
         MVI   LIBOUT(X),C'('                                      0805 02144000
*               LIBOUT(2:LMBRLEN+1)=MBRNMLIB(1:LMBRLEN);           0806 02145000
         LH    @14,LMBRLEN(,LIBPTR)                                0806 02146000
         LR    @08,@14                                             0806 02147000
         BCTR  @08,0                                               0806 02148000
         L     @07,LMBRPTR(,LIBPTR)                                0806 02149000
         EX    @08,@SM00924                                        0806 02150000
*               LIBOUT(LMBRLEN+2)=CLOSEP;/* MOVE IN PAREN            */ 02151000
         ALR   @14,X                                               0807 02152000
         MVI   LIBOUT+1(@14),C')'                                  0807 02153000
*               X=X+2+LMBRLEN;      /* UPDATE PTR TO NEXT AVAIL      */ 02154000
         LA    @14,2                                               0808 02155000
         AR    @14,X                                               0808 02156000
         LH    @08,LMBRLEN(,LIBPTR)                                0808 02157000
         AR    @14,@08                                             0808 02158000
         LR    X,@14                                               0808 02159000
*             END;                  /*                         Y01156*/ 02160000
*           IF LDSNQUOT=YES         /* IF QUOTED MOVE IN QUOTE Y01156*/ 02161000
*             THEN                  /*                         Y01156*/ 02162000
@RF00803 TM    LDSNQUOT(LIBPTR),B'01000000'                        0810 02163000
         BNO   @RF00810                                            0810 02164000
*             DO;                   /*                         Y01156*/ 02165000
*               LIBOUT(1)=QUOTE;    /* MOVE IN QUOTE           Y01156*/ 02166000
         MVI   LIBOUT(X),X'7D'                                     0812 02167000
*               X=X+1;              /* UPDATE PTR              Y01156*/ 02168000
         AH    X,@CH00033                                          0813 02169000
*             END;                  /*                         Y01156*/ 02170000
*           IF LPASPRES=YES         /* IF PASSWORD IS PRESENT, Y01156*/ 02171000
*             THEN                  /* MOVE IN A '/' AND THE   Y01156*/ 02172000
@RF00810 TM    LPASPRES(LIBPTR),B'10000000'                        0815 02173000
         BNO   @RF00815                                            0815 02174000
*             DO;                   /* PASSWORD                Y01156*/ 02175000
*               LIBOUT(1)=SLASH2;   /* MOVE IN SLASH           Y01156*/ 02176000
         MVI   LIBOUT(X),C'/'                                      0817 02177000
*               LIBOUT(2:LPASSLEN+1)=PASNMLIB(1:LPASSLEN);         0818 02178000
         LH    @14,LPASSLEN(,LIBPTR)                               0818 02179000
         LR    @08,@14                                             0818 02180000
         BCTR  @08,0                                               0818 02181000
         L     @07,LPASSPTR(,LIBPTR)                               0818 02182000
         EX    @08,@SM00926                                        0818 02183000
*               X=X+1+LPASSLEN;     /* UPDATE PTR              Y01156*/ 02184000
         LA    @08,1                                               0819 02185000
         AR    @08,X                                               0819 02186000
         AR    @08,@14                                             0819 02187000
         LR    X,@08                                               0819 02188000
*             END;                  /*                         Y01156*/ 02189000
*           X=X+1;                  /* SPACE BETWEEN DATA SETS Y01156*/ 02190000
@RF00815 AH    X,@CH00033                                          0821 02191000
*           LIBPTR=CHAINPTR;        /* UPDATE ADDR OF PDL      Y01156*/ 02192000
         L     LIBPTR,CHAINPTR(,LIBPTR)                            0822 02193000
*         END;                      /*                         Y01156*/ 02194000
@DE00792 CL    LIBPTR,@CF00306                                     0823 02195000
         BNE   @DL00792                                            0823 02196000
*         X=X-1;                    /* REMOVE XTRA BLANK       Y01156*/ 02197000
         BCTR  X,0                                                 0824 02198000
*         LIBOUT(1)=CLOSEP;         /* MOVE IN ENDING PAREN    Y01156*/ 02199000
         MVI   LIBOUT(X),C')'                                      0825 02200000
*         X=X+1;                    /* UPDATE TO LAST CHAR     Y01156*/ 02201000
         AH    X,@CH00033                                          0826 02202000
*       END;                        /*                         Y01156*/ 02203000
*     ELSE                          /*                         Y01156*/ 02204000
*       DO;                         /*                         Y01156*/ 02205000
         B     @RC00786                                            0828 02206000
@RF00786 DS    0H                                                  0829 02207000
*         INVALID=YES;              /* SET INVALID SW          Y01156*/ 02208000
         OI    INVALID,B'10000000'                                 0829 02209000
*         LIBINV=YES;               /* SET LIB INVAL           Y01156*/ 02210000
         OI    LIBINV,B'00001000'                                  0830 02211000
*       END;                        /*                         Y01156*/ 02212000
*   ELSE                                                           0832 02213000
*     ;                             /*                         Y01156*/ 02214000
@RF00785 DS    0H                                                  0833 02215000
*BUILD4:                            /*                         Y01156*/ 02216000
*   IF LOADCMD(Y)=NO THEN           /* IF NO LOADGO COMMAND M2428    */ 02217000
@RC00785 DS    0H                                                  0833 02218000
BUILD4   L     @14,Y                                               0833 02219000
         SLA   @14,4                                               0833 02220000
         LA    @08,LOADCMD-16(@14)                                 0833 02221000
         TM    0(@08),B'00100000'                                  0833 02222000
         BZ    @RT00833                                            0833 02223000
*     GO TO INVOPTST;               /* GO TEST FOR INVALID OPTIONS   */ 02224000
*   CNTRLBF=X-Z;                    /* LENGTH OF COMMAND             */ 02225000
         L     @14,Z                                               0835 02226000
         LR    @08,X                                               0835 02227000
         SR    @08,@14                                             0835 02228000
         STH   @08,CNTRLBF(,@14)                                   0835 02229000
*   CNTRESD='0000'X;                /* CONTROL INFORMATION           */ 02230000
         MVC   CNTRESD(2,@14),@CB00391                             0836 02231000
*                                                                  0837 02232000
*/********************************************************************/ 02233000
*/*      THE FOLLOWING CODE TEST TO SEE IF THERE WERE ANY INVALID    */ 02234000
*/*      OPTION ENTERED FOR THE INVOKED COMPILER PROMPTER. IF        */ 02235000
*/*      SO, THE INVALID BIT IS ON AND A TABLE OF MASKS IS ANDED     */ 02236000
*/*      WITH THE INVALID TABLE OF BITS TO DETERMINDED WHICH         */ 02237000
*/*      INVALID OPTIONS WERE SPECIFIED AND THE CORRESPONDING        */ 02238000
*/*      MESSAGE SEGMENT ADDRESS IS PLACED IN THE TABLE OF SEGMENTS  */ 02239000
*/*      IN ORDER TO INFORM THE USER WITH A MESSAGE FROM PUTLINE     */ 02240000
*/*                                                                  */ 02241000
*/********************************************************************/ 02242000
*                                                                  0837 02243000
*INVOPTST:                                                         0837 02244000
*   IF INVALID=NO THEN              /* ARE THERE INVALID OPTIONS     */ 02245000
INVOPTST TM    INVALID,B'10000000'                                 0837 02246000
         BZ    @RT00837                                            0837 02247000
*     GO TO ENDBLD;                                                0838 02248000
*   X=0;                            /* INITIALIZE X TO ZERO          */ 02249000
         SR    X,X                                                 0839 02250000
*   DO I=1 TO 22;                   /* DO MAX OF 22 TIMES            */ 02251000
         LA    @14,1                                               0840 02252000
         ST    @14,I                                               0840 02253000
@DL00840 DS    0H                                                  0841 02254000
*     IF(INVALIDT&MASK(I))^='000000'X THEN/* IF MASK BIT AND A BIT IN*/ 02255000
         LR    @08,@14                                             0841 02256000
         MH    @08,@CH00355                                        0841 02257000
         MVC   @TS00001(3),INVALIDT                                0841 02258000
         LA    @03,MASK-3(@08)                                     0841 02259000
         NC    @TS00001(3),0(@03)                                  0841 02260000
         CLC   @TS00001(3),@CB00769                                0841 02261000
         BE    @RF00841                                            0841 02262000
*       DO;                         /* INVALID TABLE MATCH           */ 02263000
*         X=X+1;                    /* INCREMENT MESSAGE TABLE       */ 02264000
         AH    X,@CH00033                                          0843 02265000
*         TABLESEG(X)=TABOPTAD(I);  /* INSERT CORRESPONDING MESSAGE     02266000
*                                      SEGMENT IN TO SEGMENT TABLE   */ 02267000
         LR    @08,X                                               0844 02268000
         SLA   @08,2                                               0844 02269000
         SLA   @14,2                                               0844 02270000
         L     @14,TABOPTAD-4(@14)                                 0844 02271000
         ST    @14,TABLESEG-4(@08)                                 0844 02272000
*       END;                        /* END INSERT DO                 */ 02273000
*   END;                            /* END DO LOOP                   */ 02274000
@RF00841 LA    @14,1                                               0846 02275000
         A     @14,I                                               0846 02276000
         ST    @14,I                                               0846 02277000
         CH    @14,@CH00731                                        0846 02278000
         BNH   @DL00840                                            0846 02279000
*   I=TABLESEG(X);                  /* OPTAIN ADDRESS OF LAST SEGMENT*/ 02280000
         LR    @14,X                                               0847 02281000
         SLA   @14,2                                               0847 02282000
         L     @08,TABLESEG-4(@14)                                 0847 02283000
         ST    @08,I                                               0847 02284000
*   LASTBUFF(1:LSTNUM+2)=LSTSEG(1:LSTNUM+2);/* MOVE LAST MESSAGE   0848 02285000
*                                      SEGMENT TO BUFFER             */ 02286000
         LA    @03,1                                               0848 02287000
         LH    @07,LSTNUM(,@08)                                    0848 02288000
         AR    @07,@03                                             0848 02289000
         EX    @07,@SM00928                                        0848 02290000
*   TABLESEG(X)=ADDR(LASTBUFF);     /* REPLACE LAST SEG ADDR WITH  0849 02291000
*                                      ADDR OF BUFFER                */ 02292000
         LA    @08,LASTBUFF                                        0849 02293000
         ST    @08,TABLESEG-4(@14)                                 0849 02294000
*   MINCOMLN=MINCOMLN-1;            /* SUBTRACT ONE TO LOSE COMMA    */ 02295000
         LH    @14,MINCOMLN                                        0850 02296000
         BCTR  @14,0                                               0850 02297000
         STH   @14,MINCOMLN                                        0850 02298000
*   X=X+1;                          /* INCREMENT X FOR NEXT SEGMENT  */ 02299000
         AR    X,@03                                               0851 02300000
*   TABLESEG(X)=ADDR(SEG13);        /* IGNORED FOR                   */ 02301000
         LR    @14,X                                               0852 02302000
         SLA   @14,2                                               0852 02303000
         LA    @08,SEG13                                           0852 02304000
         ST    @08,TABLESEG-4(@14)                                 0852 02305000
*   X=X+1;                          /* INCREMENT X FOR NEXT SEGMENT  */ 02306000
         AR    X,@03                                               0853 02307000
*   DATALEN=TYPELNG(Y);             /* LENGTH OF COMPILER NAME       */ 02308000
         L     @14,Y                                               0854 02309000
         LR    @08,@14                                             0854 02310000
         SLA   @08,4                                               0854 02311000
         LH    @03,TYPELNG-16(@08)                                 0854 02312000
         STH   @03,DATALEN                                         0854 02313000
*   DATATXT=TYPES(Y);               /* MOVE IN COMPILER NAME         */ 02314000
         LA    @07,TYPES-16(@08)                                   0855 02315000
         MVC   DATATXT(8),0(@07)                                   0855 02316000
*   IF Y=7 THEN                     /* IF CMPLR = PLI THEN INSERT    */ 02317000
         CH    @14,@CH00172                                        0856 02318000
         BNE   @RF00856                                            0856 02319000
*     DO;                                                          0857 02320000
*       DATATXT(5:7)=PLITYPE(OPTPDE);/* CHK OR OPT                   */ 02321000
         L     @14,PDLADDR                                         0858 02322000
         LH    @14,OPTPDE(,@14)                                    0858 02323000
         MH    @14,@CH00355                                        0858 02324000
         LA    @08,PLITYPE-3(@14)                                  0858 02325000
         MVC   DATATXT+4(3),0(@08)                                 0858 02326000
*       DATALEN=DATALEN+4;          /* ALLOW FOR CHK OR OPT          */ 02327000
         AH    @03,@CH00106                                        0859 02328000
         STH   @03,DATALEN                                         0859 02329000
*     END;                                                         0860 02330000
*   TABLESEG(X)=ADDR(DATATYPE);     /* COMPILER NAME                 */ 02331000
@RF00856 LR    @14,X                                               0861 02332000
         SLA   @14,2                                               0861 02333000
         LA    @08,DATATYPE                                        0861 02334000
         ST    @08,TABLESEG-4(@14)                                 0861 02335000
*   X=X+1;                          /* INCREMENT X FOR NEXT SEGMENT  */ 02336000
         LA    @14,1                                               0862 02337000
         AR    X,@14                                               0862 02338000
*   TABLESEG(X)=ADDR(PROCESS);      /* PROCESSING                    */ 02339000
         LR    @08,X                                               0863 02340000
         SLA   @08,2                                               0863 02341000
         LA    @03,PROCESS                                         0863 02342000
         ST    @03,TABLESEG-4(@08)                                 0863 02343000
*   X=X+1;                          /* INCREMENT X FOR NEXT SEGMENT  */ 02344000
         AR    X,@14                                               0864 02345000
*   TABLESEG(X)=0;                  /* END FIRST LEVEL MESSAGE       */ 02346000
         SR    @08,@08                                             0865 02347000
         LR    @03,X                                               0865 02348000
         SLA   @03,2                                               0865 02349000
         ST    @08,TABLESEG-4(@03)                                 0865 02350000
*   X=X+1;                          /* INCREMENT X FOR NEXT SEGMENT  */ 02351000
         AR    X,@14                                               0866 02352000
*   TABLESEG(X)=0;                  /* NO SECOND LEVEL MESSAGE       */ 02353000
         LR    @14,X                                               0867 02354000
         SLA   @14,2                                               0867 02355000
         ST    @08,TABLESEG-4(@14)                                 0867 02356000
*   CALL PUTINTFC;                  /* ISSUE IGNORED MESSAGE         */ 02357000
         BAL   @14,PUTINTFC                                        0868 02358000
*                                                                  0869 02359000
*/****************************************************************** */ 02360000
*/*                                                                  */ 02361000
*/* INTERFACE WITH THE STACK SERVICE ROUTINE TO PLACE THE COMMAND    */ 02362000
*/* LIST ON THE STACK OF CURRENTLY ACTIVE SOURCES OF INPUT. TO DO SO */ 02363000
*/* BUILD THE APPROPRIATE PARAMETER LIST AND LINK TO THE STACK SER-  */ 02364000
*/* VICE ROUTINE                                                     */ 02365000
*/*                                                                  */ 02366000
*/****************************************************************** */ 02367000
*                                                                  0869 02368000
*ENDBLD:                                                           0869 02369000
*   STPBPTR=ADDR(STACKPRM);         /* ADDRES OF STACK PARM LIST     */ 02370000
ENDBLD   LA    @14,STACKPRM                                        0869 02371000
         LR    STPBPTR,@14                                         0869 02372000
*   STPBALSD=LSDPTR;                /* ADDRESS OF INPUT SOURCE     0870 02373000
*                                      DESCRIP                       */ 02374000
         MVC   STPBALSD(4,STPBPTR),LSDPTR                          0870 02375000
*                                   /* TOR TO PARM LIST              */ 02376000
*   STPLSTPB=ADDR(STACKPRM);        /* PTR TO STACK PARAMETER LIST   */ 02377000
         L     @08,STPLPTR                                         0871 02378000
         ST    @14,STPLSTPB(,@08)                                  0871 02379000
*   R1=STPLPTR;                     /* PTR TO SER.RTE PARAMETER LIST */ 02380000
         LR    R1,@08                                              0872 02381000
*   GEN REFS(R1)SETS(R15);                                         0873 02382000
*                                    /* ISSUE STACK             */      02383000
         STACK MF=(E,(1))                                               02384000
*   RCODESV=R15;                    /* SAVE RETURN CODE FROM STACK   */ 02385000
         ST    R15,RCODESV                                         0874 02386000
*   IF RCODESV>0 THEN               /* IF STACK WAS NOT SUCCESSFUL   */ 02387000
         L     @14,RCODESV                                         0875 02388000
         LTR   @14,@14                                             0875 02389000
         BNP   @RF00875                                            0875 02390000
*     DO;                           /* THEN FREE CORE GOTTEN         */ 02391000
*       STPRSNT=YES;                /* INDICATE STACK PRESENT        */ 02392000
         OI    STPRSNT,B'01000000'                                 0877 02393000
*       W4=ADDR(STACK);             /* PLACE STACK IN ERROR CODE MSG */ 02394000
         LA    @14,STACK                                           0878 02395000
         ST    @14,W4                                              0878 02396000
*       GO TO COMMERR;              /* GO TO ISSUE COMMAND SYSTEM  0879 02397000
*                                      ERROR MESSAGE                 */ 02398000
         B     COMMERR                                             0879 02399000
*STEXIT:                                                           0880 02400000
*       R5=LSDPTR;                  /* GET POINTER TO CORE           */ 02401000
STEXIT   L     R5,LSDPTR                                           0880 02402000
*       R4=AMNT;                    /* GET SIZE OF GOTTEN CORE       */ 02403000
         L     R4,AMNT                                             0881 02404000
*       GEN REFS(R5,R4);                                           0882 02405000
         FREEMAIN R,LV=(4),A=(5),SP=78                                  02406000
*       RTCODE12=YES;               /* SET RETURN CODE 12 BIT        */ 02407000
         OI    RTCODE12,B'00000100'                                0883 02408000
*       GO TO EXIT1;                /* GO TO EXIT ROUTINE            */ 02409000
         B     EXIT1                                               0884 02410000
*     END;                          /* END STACK FAIL                */ 02411000
*EXIT1:                                                            0886 02412000
*   IF PDLPRES=YES THEN                                            0886 02413000
@RF00875 DS    0H                                                  0886 02414000
EXIT1    TM    PDLPRES,B'00001000'                                 0886 02415000
         BNO   @RF00886                                            0886 02416000
*     DO;                           /* TEST IF THERE IS A FREE PDL   */ 02417000
*       R5=ADDR(PDLADDR);           /* PTR TO PDL TO FREE            */ 02418000
         LA    R5,PDLADDR                                          0888 02419000
*       GEN REFS(R5);                                              0889 02420000
*                                   /* FREE PDL                      */ 02421000
         IKJRLSA (5)                                                    02422000
*     END;                          /* END PDL PRESENT TEST          */ 02423000
*   IF RTCODE12=YES THEN            /* IF RETURN CODE 12 BIT SET     */ 02424000
@RF00886 TM    RTCODE12,B'00000100'                                0891 02425000
         BNO   @RF00891                                            0891 02426000
*     DO;                           /* IF FAILURE EXIT M2588         */ 02427000
*       R5=ADDR(STACKLSD);          /* REG 2 ADDRESS OF STACK LIST   */ 02428000
         LA    R5,STACKLSD                                         0893 02429000
*       R1=STPLPTR;                 /* REG1 STACK PARM LIST          */ 02430000
         L     R1,STPLPTR                                          0894 02431000
*       GEN REFS(R5,R1)SETS(R15);                                  0895 02432000
               STACK PARM=(R5),DELETE=ALL,MF=(E,(1))                    02433000
*       RCODESV=R15;                /* SAVE RETURN CODE              */ 02434000
         ST    R15,RCODESV                                         0896 02435000
*       GEN(TCLEARQ INPUT);         /* CLEAR GETLINE INPUT QUEUE     */ 02436000
         TCLEARQ INPUT                                                  02437000
*       RTRNCODE=12;                /* CALL UNSUCCESSFUL             */ 02438000
         LA    RTRNCODE,12                                         0898 02439000
*     END;                          /* END FAILURE EXIT PROCESSING   */ 02440000
*   ELSE                            /* IF RUN SUCCESFUL              */ 02441000
*     RTRNCODE=0;                   /* SET RETURN CODE TO 0          */ 02442000
         B     @RC00891                                            0900 02443000
@RF00891 SR    RTRNCODE,RTRNCODE                                   0900 02444000
*   RETURN CODE(RTRNCODE);          /* RETURN TO TMP                 */ 02445000
*                                                                  0901 02446000
@RC00891 L     @13,4(,@13)                                         0901 02447000
         L     @00,@SIZDATD                                        0901 02448000
         LR    @01,@09                                             0901 02449000
         FREEMAIN R,LV=(0),A=(1)                                        02450000
         LR    @15,@02                                             0901 02451000
         L     @14,12(,@13)                                        0901 02452000
         LM    @00,@12,20(@13)                                     0901 02453000
         BR    @14                                                 0901 02454000
*/********************************************************************/ 02455000
*/*                                                                  */ 02456000
*/* THIS ROUTINE IS ENTERED WHEN THE DATA SET TYPE HAS NOT BEEN      */ 02457000
*/* SPECIFIED AND THE DATA SET NAME IS NOT PARTIALLY QUALIFIED OR    */ 02458000
*/* DOES NOT ADHERE TO THE DATA SET NAMING CONVENTIONS.              */ 02459000
*/*                                                                  */ 02460000
*/* THE USER MUST BE PROMPTED FOR THE TYPE. PARSE IS REENTERD TO     */ 02461000
*/* DO THIS,                                                         */ 02462000
*/*                                                                  */ 02463000
*/********************************************************************/ 02464000
*                                                                  0902 02465000
*PRMPTYPE:                                                         0902 02466000
*   PPLPCL=RUNADCN2;                /* PARSE IS REENTERED TO DO      */ 02467000
PRMPTYPE L     @14,PPLPTR                                          0902 02468000
         MVC   PPLPCL(4,@14),RUNADCN2                              0902 02469000
*   PPLCBUF=CPPLCBUF;               /* THE PROMPTING                 */ 02470000
         L     @08,CPPLPTR                                         0903 02471000
         MVC   PPLCBUF(4,@14),CPPLCBUF(@08)                        0903 02472000
*   PPLANS=ADDR(PDLADDR2);          /* ADDRESS OF ANSWER PLACE       */ 02473000
         LA    @08,PDLADDR2                                        0904 02474000
         ST    @08,PPLANS(,@14)                                    0904 02475000
*   R1=PPLPTR;                      /* PPL POINTER IN REG 1          */ 02476000
         LR    R1,@14                                              0905 02477000
*   GEN REFS(R1)SETS(R15);                                         0906 02478000
*                                   /* PROMPT                        */ 02479000
         LINK EP=IKJPARS                                                02480000
*   RCODESV=R15;                    /* SAVE PARSE RETURN CODE        */ 02481000
         ST    R15,RCODESV                                         0907 02482000
*   IF RCODESV>0 THEN               /* IF PARSE FAILED GO TO DIAGPARS*/ 02483000
         L     @14,RCODESV                                         0908 02484000
         LTR   @14,@14                                             0908 02485000
         BP    @RT00908                                            0908 02486000
*     GO TO DIAGPARS;               /* GO TO PARSE FAIL ROUT         */ 02487000
*   I=1;                            /* INITIALIXE I                  */ 02488000
         MVC   I(4),@CF00033                                       0910 02489000
*ENDCHECK:                                                         0911 02490000
*   IF TYPES(I,1)='FF'X THEN        /* TEST FOR END OF VALID CMPLR   */ 02491000
ENDCHECK L     @14,I                                               0911 02492000
         LR    @08,@14                                             0911 02493000
         SLA   @08,4                                               0911 02494000
         LA    @02,TYPES-16(@08)                                   0911 02495000
         CLI   0(@02),X'FF'                                        0911 02496000
         BE    @RT00911                                            0911 02497000
*     GO TO TYPEMSG;                /* TYPES                         */ 02498000
*   IF TYPES(I,1:TYPELEN)^=         /* COMPARE FOR VALID CMPLR TYPES */ 02499000
*       CMPLR(1:TYPELEN)THEN                                       0913 02500000
         L     @02,PDLADDR2                                        0913 02501000
         L     @07,TYPEPTR(,@02)                                   0913 02502000
         LH    @02,TYPELEN(,@02)                                   0913 02503000
         BCTR  @02,0                                               0913 02504000
         LA    @06,TYPES-16(@08)                                   0913 02505000
         EX    @02,@SC00930                                        0913 02506000
         BE    @RF00913                                            0913 02507000
*     DO;                           /* LOOP                          */ 02508000
*       I=I+1;                      /* INCREMENT I                   */ 02509000
         AH    @14,@CH00033                                        0915 02510000
         ST    @14,I                                               0915 02511000
*       GO TO ENDCHECK;             /* COMPARE NEXT DATA TYPE IN   0916 02512000
*                                      TABLE                         */ 02513000
         B     ENDCHECK                                            0916 02514000
*     END;                          /* END LOOP                      */ 02515000
*   ELSE                            /* MATCH FOUND                   */ 02516000
*     DO;                           /* THEN                          */ 02517000
@RF00913 DS    0H                                                  0919 02518000
*       Y=I;                        /* SAVE I                        */ 02519000
         MVC   Y(4),I                                              0919 02520000
*RLSE:                                                             0920 02521000
*       R5=ADDR(PDLADDR2);          /* SET UP TO FREE THE PDL        */ 02522000
RLSE     LA    R5,PDLADDR2                                         0920 02523000
*       GEN REFS(R5);                                              0921 02524000
*                                    /* FREE PDL                     */ 02525000
         IKJRLSA (5)                                                    02526000
*       IF BADTYPE=NO THEN          /* TEST SWITCH INDICATING BAD  0922 02527000
*                                      DATA                          */ 02528000
         TM    BADTYPE,B'00000010'                                 0922 02529000
         BZ    @RT00922                                            0922 02530000
*         GO TO PRMPRET;            /* TYPE - 0 -DATA TYPE FOUND     */ 02531000
*                                   /* 1 - DATA TYPE NOT FOUND       */ 02532000
*       ELSE                        /* IF NOT                        */ 02533000
*         DO;                       /* FAILURE                       */ 02534000
*           BADTYPE=NO;             /* RESET SWITCH                  */ 02535000
         NI    BADTYPE,B'11111101'                                 0925 02536000
*           CALL PUTINTFC;          /* ISSUE MESSAGE                 */ 02537000
         BAL   @14,PUTINTFC                                        0926 02538000
*TYPERTN:                                                          0927 02539000
*           IF RCODESV^=0 THEN                                     0927 02540000
TYPERTN  ICM   @14,15,RCODESV                                      0927 02541000
         BZ    @RF00927                                            0927 02542000
*             DO;                   /* IF PUTLINE FAILED EXIT        */ 02543000
*               RTCODE12=YES;       /* SET RUN RETURN CODE TO 12     */ 02544000
         OI    RTCODE12,B'00000100'                                0929 02545000
*               GO TO EXIT1;        /* EXIT ROUTINE                  */ 02546000
         B     EXIT1                                               0930 02547000
*             END;                  /* END PUTLINE FAILURE           */ 02548000
*           ELSE                    /* OTHERWISE                     */ 02549000
*             GO TO PRMPTYPE;       /* REENTER PARSE FOR DATA TYPE   */ 02550000
*         END;                      /* END ESLE                      */ 02551000
*     END;                          /* END                           */ 02552000
*TYPEMSG:                                                          0935 02553000
*   W1=ADDR(SEG18);                 /* SET UP MESSAGE TO INFORM USER */ 02554000
TYPEMSG  LA    @14,SEG18                                           0935 02555000
         ST    @14,W1                                              0935 02556000
*   W2=ADDR(DATATYPE);              /* OF INVALID DATA TYPE          */ 02557000
         LA    @14,DATATYPE                                        0936 02558000
         ST    @14,W2                                              0936 02559000
*   W3=ADDR(SEG19);                 /* INVALID DATA TYPE             */ 02560000
         LA    @14,SEG19                                           0937 02561000
         ST    @14,W3                                              0937 02562000
*   W4=0;                           /* END OF 1ST LEVEL MESSAGE      */ 02563000
         SR    @14,@14                                             0938 02564000
         ST    @14,W4                                              0938 02565000
*   W5=0;                           /* NO 2ND LEVEL MESSAGE          */ 02566000
         ST    @14,W5                                              0939 02567000
*   DATALEN=TYPELEN;                /* MOVE LENGTH INTO BUFFER FOR   */ 02568000
         L     @14,PDLADDR2                                        0940 02569000
         LH    @08,TYPELEN(,@14)                                   0940 02570000
         STH   @08,DATALEN                                         0940 02571000
*   DATATXT(1:DATALEN)=CMPLR(1:DATALEN);/* MESSAGE SEGMENT, MOVE NAME   02572000
*                                      ALSO                          */ 02573000
         BCTR  @08,0                                               0941 02574000
         L     @14,TYPEPTR(,@14)                                   0941 02575000
         EX    @08,@SM00933                                        0941 02576000
*   BADTYPE=YES;                    /* SET SWITCH INDICATING BAD DATA*/ 02577000
         OI    BADTYPE,B'00000010'                                 0942 02578000
*   GO TO RLSE;                     /* TYPE                          */ 02579000
         B     RLSE                                                0943 02580000
*                                                                  0944 02581000
*/********************************************************************/ 02582000
*/*                                                                  */ 02583000
*/* TAKE THE SPECIFIED DSNAME AND BREAK IT INTO ITS VARIOUS PARTS    */ 02584000
*/*      THE 'DSNAME'                                                */ 02585000
*/*      THE 'MEMBER NAME'                                           */ 02586000
*/*      THE 'PASSWORD'                                              */ 02587000
*/* PLACE THESE PARTS IN THE APPROPRIATE BUFFERS IN MAIN STORAGE     */ 02588000
*/* IF THE NAME IS FULLY QUALIFIED SET A BIT TO INDICATE SO          */ 02589000
*/*                                                                  */ 02590000
*/********************************************************************/ 02591000
*                                                                  0944 02592000
*DSNRTE:                                                           0944 02593000
*   PROC;                                                          0944 02594000
DSNRTE   STM   @14,@12,12(@13)                                     0944 02595000
*   IF DSNPRES=YES THEN                                            0945 02596000
         L     @14,PDLADDR                                         0945 02597000
         TM    DSNPRES(@14),B'10000000'                            0945 02598000
         BNO   @RF00945                                            0945 02599000
*     DO;                           /* IF SPECIFIED, MOVE THE        */ 02600000
*       DSNBUF=DSNMEBUF;            /* DSNAME TO THE APPROPRIATE     */ 02601000
         L     @08,DSNPTR(,@14)                                    0947 02602000
         MVC   DSNBUF(44),DSNMEBUF(@08)                            0947 02603000
*       DSLENG=DSLEN;               /* BUFFER - AND LENGTH OR        */ 02604000
         MVC   DSLENG(2),DSLEN(@14)                                0948 02605000
*       DSNPRSNT=YES;               /* INDICATE DSNAME PRESENT       */ 02606000
         OI    DSNPRSNT,B'00100000'                                0949 02607000
*       IF DSNQUOT=YES THEN         /* IF THE DSNAME IS FULLY        */ 02608000
         TM    DSNQUOT(@14),B'01000000'                            0950 02609000
         BNO   @RF00950                                            0950 02610000
*         FULLQUAL=YES;             /* QUALIFIED THEN INDICATE SO    */ 02611000
         OI    FULLQUAL,B'10000000'                                0951 02612000
*       ELSE                        /* OTHERWISE SET SWITCH TO       */ 02613000
*         FULLQUAL=NO;              /* INDICATE NOT QUALIFIED        */ 02614000
         B     @RC00950                                            0952 02615000
@RF00950 NI    FULLQUAL,B'01111111'                                0952 02616000
*     END;                          /* THIS IS AN END STATEMENT      */ 02617000
*   ELSE                            /* IF NO DATA SET PRESENT        */ 02618000
*     DSLENG=0;                     /* ZERO THE LENGTH               */ 02619000
         B     @RC00945                                            0954 02620000
@RF00945 SR    @14,@14                                             0954 02621000
         STH   @14,DSLENG                                          0954 02622000
*   IF MBRPRES=YES THEN                                            0955 02623000
@RC00945 L     @14,PDLADDR                                         0955 02624000
         TM    MBRPRES(@14),B'10000000'                            0955 02625000
         BNO   @RF00955                                            0955 02626000
*     DO;                           /* IF SPECIFIED, MOVE THE        */ 02627000
*       MBRNAME=MBRNMBUF;           /* MEMBER NAME AND LENGTH TO     */ 02628000
         L     @08,MBRPTR(,@14)                                    0957 02629000
         MVC   MBRNAME(8),MBRNMBUF(@08)                            0957 02630000
*       MBRLENG=MBRLEN;             /* MEMBER NAME LENGTH            */ 02631000
         MVC   MBRLENG(2),MBRLEN(@14)                              0958 02632000
*     END;                          /* OR ZERO THE LENGTH            */ 02633000
*   ELSE                                                           0960 02634000
*     MBRLENG=0;                    /* ZERO MEMBER LENGTH            */ 02635000
         B     @RC00955                                            0960 02636000
@RF00955 SR    @14,@14                                             0960 02637000
         STH   @14,MBRLENG                                         0960 02638000
*   IF PASSPRES=YES THEN                                           0961 02639000
@RC00955 L     @14,PDLADDR                                         0961 02640000
         TM    PASSPRES(@14),B'10000000'                           0961 02641000
         BNO   @RF00961                                            0961 02642000
*     DO;                           /* IF SPECIFIED MOVE THE         */ 02643000
*       PASSNAME=PASNMBUF;          /* PASSWORD AND LENGTH TO        */ 02644000
         L     @08,PASSPTR(,@14)                                   0963 02645000
         MVC   PASSNAME(8),PASNMBUF(@08)                           0963 02646000
*       PASSLENG=PASSLEN;           /* THE APPROPRIATE BUFFER OR     */ 02647000
         MVC   PASSLENG(2),PASSLEN(@14)                            0964 02648000
*     END;                          /* END PASSWORD TEST             */ 02649000
*   ELSE                            /* IF NO PASSWORD                */ 02650000
*     PASSLENG=0;                   /* ZERO THE LENGTH               */ 02651000
         B     @RC00961                                            0966 02652000
@RF00961 SR    @14,@14                                             0966 02653000
         STH   @14,PASSLENG                                        0966 02654000
*   END DSNRTE;                     /* RETURN                        */ 02655000
@EL00002 DS    0H                                                  0967 02656000
@EF00002 DS    0H                                                  0967 02657000
@ER00002 LM    @14,@12,12(@13)                                     0967 02658000
         BR    @14                                                 0967 02659000
*                                                                  0968 02660000
*/********************************************************************/ 02661000
*/*                                                                  */ 02662000
*/* PUTINTFC ROUTINE -                                               */ 02663000
*/*     INTERFACES WITH PUTLINE TO PUT OUT A SINGLE OR DOUBLE        */ 02664000
*/*     LEVEL MESSAGE                                                */ 02665000
*/*                                                                  */ 02666000
*/*     INPUT IS ADDRESSES OF THE MESSAGE SEGMENTS USED TO COMPLETE  */ 02667000
*/*     THE MESSAGE. R14 CONTAINS THE RETURN ADDRESS.                */ 02668000
*/*                                                                  */ 02669000
*/*     THE END OF THE LIST IS SIGNIFIED BY A WORD OF ZEROS          */ 02670000
*/*                                                                  */ 02671000
*/********************************************************************/ 02672000
*                                                                  0968 02673000
*PUTINTFC:                                                         0968 02674000
*   PROC;                                                          0968 02675000
PUTINTFC STM   @14,@12,@SA00003                                    0968 02676000
*   SEGONENO=1;                     /* NUMBER OF MESSAGE SEGMENTS    */ 02677000
         MVC   SEGONENO(4),@CF00033                                0969 02678000
*   A=ADDR(BUFMSG1);                /* PTR TO MESSAGE BUFFER         */ 02679000
         LA    A,BUFMSG1                                           0970 02680000
*   PTRMSG1=ADDR(MSG1BUF);          /* ADDRESS OF MESSAGE FOR PUTLINE*/ 02681000
         LA    @14,MSG1BUF                                         0971 02682000
         ST    @14,PTRMSG1                                         0971 02683000
*   I=0;                            /* INITIALIZE SUBSCRIPT          */ 02684000
         SR    @14,@14                                             0972 02685000
         ST    @14,I                                               0972 02686000
*FRMTLOOP:                                                         0973 02687000
*   I=I+1;                          /* INCREMENT SUBSCRIPT           */ 02688000
FRMTLOOP LA    @14,1                                               0973 02689000
         A     @14,I                                               0973 02690000
         ST    @14,I                                               0973 02691000
*   B=SGMNTLST(I);                  /* PTR TO MESSAGE SEGMENT        */ 02692000
         SLA   @14,2                                               0974 02693000
         L     B,SGMNTLST-4(@14)                                   0974 02694000
*   IF B=0 THEN                     /* IF 0, MESSAGE IS COMPLETE,    */ 02695000
         LTR   B,B                                                 0975 02696000
         BZ    @RT00975                                            0975 02697000
*     GO TO MSG2FRMT;               /* FORMAT 2ND, IF ANY            */ 02698000
*   FRMT1BUF(1:LENMESS)=            /* MOVE MESSAGE SEGMENT TO BUFFER*/ 02699000
*       TXTMESS(1:LENMESS);         /* AND INCREMENT FOR SIZE        */ 02700000
         LH    @14,LENMESS(,B)                                     0977 02701000
         LR    @08,@14                                             0977 02702000
         BCTR  @08,0                                               0977 02703000
         EX    @08,@SM00936                                        0977 02704000
*   A=A+LENMESS;                                                   0978 02705000
         AR    A,@14                                               0978 02706000
*   GO TO FRMTLOOP;                 /* GET NEXT SEGMENT              */ 02707000
         B     FRMTLOOP                                            0979 02708000
*MSG2FRMT:                                                         0980 02709000
*   A=A-ADDR(BUFMSG1);              /* DETERMINE LENGTH OF MESSAGE   */ 02710000
MSG2FRMT LA    @14,BUFMSG1                                         0980 02711000
         SR    A,@14                                               0980 02712000
*   A=A+4;                          /* ACCOUNT FOR HEADER RECORD     */ 02713000
         AH    A,@CH00106                                          0981 02714000
*   LENMSG1=A;                      /* STORE IN LIST                 */ 02715000
         STH   A,LENMSG1                                           0982 02716000
*   OFFMSG1=0;                      /* SET OFFSET TO ZERO (0)        */ 02717000
         SR    @14,@14                                             0983 02718000
         STH   @14,OFFMSG1                                         0983 02719000
*   I=I+1;                          /* INCREMENT IN LIST             */ 02720000
         LA    @08,1                                               0984 02721000
         A     @08,I                                               0984 02722000
         ST    @08,I                                               0984 02723000
*   B=SGMNTLST(I);                  /* PICK UP PTR TO NEXT SEGMENT   */ 02724000
         SLA   @08,2                                               0985 02725000
         L     B,SGMNTLST-4(@08)                                   0985 02726000
*   IF B=0 THEN                     /* IF 0,THERE IS NO 2ND LEVEL    */ 02727000
         CR    B,@14                                               0986 02728000
         BNE   @RF00986                                            0986 02729000
*     DO;                           /* MESSAGE                       */ 02730000
*       MSG2PTR='FF000000'X;        /* INDICATE SO                   */ 02731000
         MVC   MSG2PTR(4),@CF00306                                 0988 02732000
*       GO TO PUTMSG;               /* PUT OUT THE MESSAGE           */ 02733000
         B     PUTMSG                                              0989 02734000
*     END;                          /* END B ZERO TEST               */ 02735000
*   MSG2PTR=ADDR(MSGTWO);           /* ADDRESS OF SEC LEVEL          */ 02736000
@RF00986 LA    @14,MSGTWO                                          0991 02737000
         ST    @14,MSG2PTR                                         0991 02738000
*   PTRMSG2=ADDR(MSG2BUF);          /* ADDR OF SEC LEVEL MSG BUF     */ 02739000
         LA    @14,MSG2BUF                                         0992 02740000
         ST    @14,PTRMSG2                                         0992 02741000
*   A=ADDR(BUFMSG2);                /* ADDRESS OF BUFFER             */ 02742000
         LA    A,BUFMSG2                                           0993 02743000
*   SEGTWONO=1;                     /* SET TO 1                      */ 02744000
         MVC   SEGTWONO(4),@CF00033                                0994 02745000
*   MSG3PTR='FF000000'X;            /* INDICATE END                  */ 02746000
         MVC   MSG3PTR(4),@CF00306                                 0995 02747000
*MSGLOOP2:                                                         0996 02748000
*   FRMT1BUF(1:LENMESS)=TXTMESS(1:LENMESS);/* MOVE MESSAGE TO BUFFER */ 02749000
MSGLOOP2 LH    @14,LENMESS(,B)                                     0996 02750000
         LR    @08,@14                                             0996 02751000
         BCTR  @08,0                                               0996 02752000
         EX    @08,@SM00936                                        0996 02753000
*   A=A+LENMESS;                    /* INCREMENT                     */ 02754000
         AR    A,@14                                               0997 02755000
*   I=I+1;                          /* INCREMENT FOR TABLE           */ 02756000
         LA    @14,1                                               0998 02757000
         A     @14,I                                               0998 02758000
         ST    @14,I                                               0998 02759000
*   B=SGMNTLST(I);                  /* OBTAIN NEXT SEGMENT PTR       */ 02760000
         SLA   @14,2                                               0999 02761000
         L     B,SGMNTLST-4(@14)                                   0999 02762000
*   IF B^=0 THEN                    /* IF 0,MESSAGE IS COMPLETE      */ 02763000
         SR    @14,@14                                             1000 02764000
         CR    B,@14                                               1000 02765000
         BNE   @RT01000                                            1000 02766000
*     GO TO MSGLOOP2;               /* LOOP                          */ 02767000
*   A=A-ADDR(BUFMSG2);              /* LENGTH OF MESSAGE             */ 02768000
         LA    @08,BUFMSG2                                         1002 02769000
         SR    A,@08                                               1002 02770000
*   A=A+4;                          /* ACCOUNT FOR HEADER RECORD     */ 02771000
         AH    A,@CH00106                                          1003 02772000
*   LENMSG2=A;                      /* STORE                         */ 02773000
         STH   A,LENMSG2                                           1004 02774000
*   OFFMSG2=0;                      /* SET OFFSET TO ZERO (0)        */ 02775000
         STH   @14,OFFMSG2                                         1005 02776000
*PUTMSG:                                                           1006 02777000
*   SIZE=PUTLEN;                    /* AMT OF CORE TO GET FOR PUTLINE*/ 02778000
PUTMSG   MVC   SIZE(3),PUTLEN+1                                    1006 02779000
*   SPOOL='01'X;                    /* SUBPOOL                       */ 02780000
         MVI   SPOOL,X'01'                                         1007 02781000
*   R0=CORE;                        /* PUTLIST CORE IN REG 0         */ 02782000
         L     R0,CORE                                             1008 02783000
*   GEN REFS(R0)SETS(R1);                                          1009 02784000
*                                   /* GET CORE FOR PUTLIST          */ 02785000
         GETMAIN R,LV=(0)                                               02786000
*   IOPLIOPB=R1;                    /* ADDRESS OF GOTTEN CORE        */ 02787000
         L     @14,IOPLPTR                                         1010 02788000
         ST    R1,IOPLIOPB(,@14)                                   1010 02789000
*   COREGOT(1:PUTLEN)=              /* MOVE PUTLINE PARAMETERS INTO  */ 02790000
*       PUTLIST(1:PUTLEN);          /* GOTTEN CORE                   */ 02791000
         L     @08,IOPLPTR                                         1011 02792000
         L     @08,IOPLIOPB(,@08)                                  1011 02793000
         L     @07,PUTLEN                                          1011 02794000
         BCTR  @07,0                                               1011 02795000
         EX    @07,@SM00938                                        1011 02796000
*   OUTADDR=ADDR(MSGONE);           /* PLACE MESS IN PUTLIST         */ 02797000
         LA    @07,MSGONE                                          1012 02798000
         ST    @07,OUTADDR(,@08)                                   1012 02799000
*   R1=IOPLPTR;                     /* REG 1 POINTS TO SER ROUT AREA */ 02800000
         LR    R1,@14                                              1013 02801000
*   GEN REFS(R1)SETS(R15);                                         1014 02802000
*                                   /* PUTLINE TO ISSUE MESSAGE      */ 02803000
         PUTLINE MF=(E,(1))                                             02804000
*   RCODESV=R15;                    /* SAVE PUTLINE RETURN CODE      */ 02805000
         ST    R15,RCODESV                                         1015 02806000
*   R0=CORE;                        /* SIZE & SP OF GOTTEN CORE      */ 02807000
         L     R0,CORE                                             1016 02808000
*   R1=IOPLIOPB;                    /* ADDRESS OF GOTTEN CORE        */ 02809000
         L     @14,IOPLPTR                                         1017 02810000
         L     R1,IOPLIOPB(,@14)                                   1017 02811000
*   GEN REFS(R0,R1);                                               1018 02812000
*                                   /* FREE PUTLIST CORE             */ 02813000
         FREEMAIN R,LV=(0),A=(1)                                        02814000
*   END PUTINTFC;                   /* RETURN                        */ 02815000
@EL00003 DS    0H                                                  1019 02816000
@EF00003 DS    0H                                                  1019 02817000
@ER00003 LM    @14,@12,@SA00003                                    1019 02818000
         BR    @14                                                 1019 02819000
*   END IKJEFR00                                                   1020 02820000
*                                                                  1020 02821000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02822000
*/*%INCLUDE SYSLIB  (IKJDAPL )                                       */ 02823000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                       */ 02824000
*/*%INCLUDE SYSLIB  (IKJDAP04)                                       */ 02825000
*/*%INCLUDE SYSLIB  (IKJSTPL )                                       */ 02826000
*/*%INCLUDE SYSLIB  (IKJSTPB )                                       */ 02827000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */ 02828000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */ 02829000
*/*%INCLUDE SYSLIB  (IKJLSD  )                                       */ 02830000
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */ 02831000
*                                                                  1020 02832000
*       ;                                                          1020 02833000
@EL00001 L     @13,4(,@13)                                         1020 02834000
@EF00001 L     @00,@SIZDATD                                        1020 02835000
         LR    @01,@09                                             1020 02836000
         FREEMAIN R,LV=(0),A=(1)                                        02837000
@ER00001 LM    @14,@12,12(@13)                                     1020 02838000
         BR    @14                                                 1020 02839000
@DATA    DS    0H                                                       02840000
@CH00078 DC    H'2'                                                     02841000
@CH00355 DC    H'3'                                                     02842000
@CH00152 DC    H'5'                                                     02843000
@CH00104 DC    H'6'                                                     02844000
@CH00172 DC    H'7'                                                     02845000
@CH00037 DC    H'10'                                                    02846000
@CH00510 DC    H'13'                                                    02847000
@CH00814 DC    H'20'                                                    02848000
@CH00731 DC    H'22'                                                    02849000
@CH00854 DC    H'39'                                                    02850000
@CH00812 DC    XL2'0008'                                                02851000
@SM00892 MVC   BUF(0),LAST(X)                                           02852000
@SM00897 MVC   PARMHOLD(0,A),CBUFF(@08)                                 02853000
@SM00899 MVC   CBUFF(0,@08),PARMHOLD(A)                                 02854000
@SM00901 MVC   GETLIST(0),GETCORE                                       02855000
@SM00903 MVC   STACKPRM(0),STACKLST                                     02856000
@SM00906 MVC   CMDNAME(0,X),0(@06)                                      02857000
@SM00908 MVC   DSNPARM(0,X),DSNBUF                                      02858000
@SM00910 MVC   MBRPARM(0,X),MBRNAME                                     02859000
@SM00912 MVC   PASSPARM(0,X),PASSNAME                                   02860000
@SM00916 MVC   SIZEPRM(0,X),SIZEPRM(@14)                                02861000
@SM00918 MVC   0(0,@08),DSNBUF                                          02862000
@SM00920 MVC   PARMPARM(0,X),PARMBUF(@14)                               02863000
@SM00922 MVC   LIBOUT(0,X),DSNMELIB(@07)                                02864000
@SM00924 MVC   LIBOUT+1(0,X),MBRNMLIB(@07)                              02865000
@SM00926 MVC   LIBOUT+1(0,X),PASNMLIB(@07)                              02866000
@SM00928 MVC   LASTBUFF(0),LSTSEG(@08)                                  02867000
@SC00930 CLC   0(0,@06),CMPLR(@07)                                      02868000
@SM00933 MVC   DATATXT(0),CMPLR(@14)                                    02869000
@SM00936 MVC   FRMT1BUF(0,A),TXTMESS(B)                                 02870000
@SM00938 MVC   COREGOT(0,@08),PUTLIST                                   02871000
@DATD    DSECT                                                          02872000
         DS    0F                                                       02873000
@SA00001 DS    18F                                                      02874000
@PC00001 DS    1F                                                       02875000
@SA00003 DS    15F                                                      02876000
@AL00001 DS    4A                                                       02877000
IKJEFR00 CSECT                                                          02878000
         DS    0F                                                       02879000
@CF00896 DC    F'-1'                                                    02880000
@CF00033 DC    F'1'                                                     02881000
@CH00033 EQU   @CF00033+2                                               02882000
@CF00106 DC    F'4'                                                     02883000
@CH00106 EQU   @CF00106+2                                               02884000
@CF00054 DC    F'8'                                                     02885000
@CH00054 EQU   @CF00054+2                                               02886000
@CF00154 DC    F'16'                                                    02887000
@CF00306 DC    XL4'FF000000'                                            02888000
@CF00763 DC    XL4'40000000'                                            02889000
@DATD    DSECT                                                          02890000
         DS    0D                                                       02891000
I        DS    A                                                        02892000
Y        DS    A                                                        02893000
Z        DS    A                                                        02894000
CPPLPTR  DS    A                                                        02895000
SERVRPTR DS    A                                                        02896000
LSDPTR   DS    A                                                        02897000
FAKPTR   DS    A                                                        02898000
PSCBPTR  DS    A                                                        02899000
COREADDR DS    A                                                        02900000
AMNT     DS    F                                                        02901000
RCODESV  DS    F                                                        02902000
AMTLEFT  DS    F                                                        02903000
AMTMOVED DS    F                                                        02904000
CHARMOVE DS    H                                                        02905000
TOTALA   DS    H                                                        02906000
RTRN     DS    FL2                                                      02907000
         ORG   RTRN                                                     02908000
FIRST    DS    CL1                                                      02909000
SECOND   DS    CL1                                                      02910000
         ORG   RTRN+2                                                   02911000
@TS00001 DS    CL3                                                      02912000
BUF      DS    CL8                                                      02913000
SWITCH   DS    CL1                                                      02914000
         ORG   SWITCH                                                   02915000
FULLQUAL DS    BL1                                                      02916000
STPRSNT  EQU   SWITCH+0                                                 02917000
DSNPRSNT EQU   SWITCH+0                                                 02918000
NODSNCON EQU   SWITCH+0                                                 02919000
PDLPRES  EQU   SWITCH+0                                                 02920000
RTCODE12 EQU   SWITCH+0                                                 02921000
BADTYPE  EQU   SWITCH+0                                                 02922000
PRDFOUND EQU   SWITCH+0                                                 02923000
         ORG   SWITCH+1                                                 02924000
         DS    CL2                                                      02925000
WORKAREA DS    CL140                                                    02926000
         ORG   WORKAREA                                                 02927000
PARSPARM DS    CL8                                                      02928000
         ORG   PARSPARM                                                 02929000
PDLADDR  DS    AL4                                                      02930000
PDLADDR2 DS    AL4                                                      02931000
         ORG   WORKAREA+8                                               02932000
STACKPRM DS    CL8                                                      02933000
         ORG   STACKPRM                                                 02934000
@NM00017 DS    CL4                                                      02935000
@NM00018 DS    AL4                                                      02936000
         ORG   WORKAREA+16                                              02937000
DAIRSTOR DS    CL64                                                     02938000
         ORG   DAIRSTOR                                                 02939000
DAIRPARM DS    CL16                                                     02940000
DSBUFFER DS    CL46                                                     02941000
         ORG   DSBUFFER                                                 02942000
DSLENG   DS    FL2                                                      02943000
DSNBUF   DS    CL44                                                     02944000
         ORG   DAIRSTOR+62                                              02945000
@NM00019 DS    CL2                                                      02946000
         ORG   WORKAREA+80                                              02947000
COMMECB  DS    FL4                                                      02948000
SERTEPRM DS    CL28                                                     02949000
         ORG   SERTEPRM                                                 02950000
ADUPT    DS    AL4                                                      02951000
ADECT    DS    AL4                                                      02952000
ADECB    DS    AL4                                                      02953000
@NM00020 DS    AL4                                                      02954000
@NM00021 DS    AL4                                                      02955000
@NM00022 DS    AL4                                                      02956000
@NM00023 DS    AL4                                                      02957000
         ORG   WORKAREA+112                                             02958000
MBRBUF   DS    CL10                                                     02959000
         ORG   MBRBUF                                                   02960000
MBRLENG  DS    FL2                                                      02961000
MBRNAME  DS    CL8                                                      02962000
         ORG   WORKAREA+122                                             02963000
PASSBUF  DS    CL10                                                     02964000
         ORG   PASSBUF                                                  02965000
PASSLENG DS    FL2                                                      02966000
PASSNAME DS    CL8                                                      02967000
         ORG   WORKAREA+132                                             02968000
QUALBUF  DS    CL8                                                      02969000
         ORG   WORKAREA+140                                             02970000
CORE     DS    CL4                                                      02971000
         ORG   CORE                                                     02972000
SPOOL    DS    CL1                                                      02973000
SIZE     DS    AL3                                                      02974000
         ORG   CORE+4                                                   02975000
SEG05B   DS    CL54                                                     02976000
         ORG   SEG05B                                                   02977000
LEN5B    DS    FL2                                                      02978000
NAME5B   DS    CL52                                                     02979000
         ORG   SEG05B+54                                                02980000
RTCDAREA DS    CL8                                                      02981000
         ORG   RTCDAREA                                                 02982000
@NM00060 DS    CL2                                                      02983000
RTCDLEN  DS    FL2                                                      02984000
RETDEC   DS    CL4                                                      02985000
         ORG   RETDEC                                                   02986000
@NM00061 DS    CL3                                                      02987000
FZERO    DS    CL1                                                      02988000
         ORG   RTCDAREA+8                                               02989000
         DS    CL2                                                      02990000
UNPACK   DS    CL8                                                      02991000
DATATYPE DS    CL10                                                     02992000
         ORG   DATATYPE                                                 02993000
DATALEN  DS    FL2                                                      02994000
DATATXT  DS    CL8                                                      02995000
         ORG   DATATYPE+10                                              02996000
         DS    CL2                                                      02997000
GETLIST  DS    CL40                                                     02998000
MSGONE   DS    CL12                                                     02999000
         ORG   MSGONE                                                   03000000
MSG2PTR  DS    AL4                                                      03001000
SEGONENO DS    FL4                                                      03002000
PTRMSG1  DS    AL4                                                      03003000
         ORG   MSGONE+12                                                03004000
MSG1BUF  DS    CL104                                                    03005000
         ORG   MSG1BUF                                                  03006000
LENMSG1  DS    FL2                                                      03007000
OFFMSG1  DS    FL2                                                      03008000
BUFMSG1  DS    CL100                                                    03009000
         ORG   MSG1BUF+104                                              03010000
MSGTWO   DS    CL12                                                     03011000
         ORG   MSGTWO                                                   03012000
MSG3PTR  DS    AL4                                                      03013000
SEGTWONO DS    FL4                                                      03014000
PTRMSG2  DS    AL4                                                      03015000
         ORG   MSGTWO+12                                                03016000
MSG2BUF  DS    CL104                                                    03017000
         ORG   MSG2BUF                                                  03018000
LENMSG2  DS    FL2                                                      03019000
OFFMSG2  DS    FL2                                                      03020000
BUFMSG2  DS    CL100                                                    03021000
         ORG   MSG2BUF+104                                              03022000
INVALIDT DS    CL3                                                      03023000
         ORG   INVALIDT                                                 03024000
INVALID  DS    BL1                                                      03025000
PARMINV  EQU   INVALIDT+0                                               03026000
LMSGINV  EQU   INVALIDT+0                                               03027000
SMSGINV  EQU   INVALIDT+0                                               03028000
TESTINV  EQU   INVALIDT+0                                               03029000
NOTSTINV EQU   INVALIDT+0                                               03030000
LPRECINV EQU   INVALIDT+0                                               03031000
SPRECINV EQU   INVALIDT+0                                               03032000
FIXEDINV DS    BL1                                                      03033000
FREEINV  EQU   INVALIDT+1                                               03034000
CHECKINV EQU   INVALIDT+1                                               03035000
OPTINV   EQU   INVALIDT+1                                               03036000
LIBINV   EQU   INVALIDT+1                                               03037000
GOINV    EQU   INVALIDT+1                                               03038000
NOGOINV  EQU   INVALIDT+1                                               03039000
PAUSINV  EQU   INVALIDT+1                                               03040000
NOPAUINV DS    BL1                                                      03041000
STORINV  EQU   INVALIDT+2                                               03042000
NOSTINV  EQU   INVALIDT+2                                               03043000
SRCINV   EQU   INVALIDT+2                                               03044000
OBJINV   EQU   INVALIDT+2                                               03045000
SIZINV   EQU   INVALIDT+2                                               03046000
         ORG   INVALIDT+3                                               03047000
         DS    CL1                                                      03048000
LASTBUFF DS    CL14                                                     03049000
         ORG   LASTBUFF                                                 03050000
MINCOMLN DS    FL2                                                      03051000
INVBUFF  DS    CL12                                                     03052000
         ORG   LASTBUFF+14                                              03053000
         DS    CL2                                                      03054000
TABLESEG DS    22A                                                      03055000
IKJEFR00 CSECT                                                          03056000
         DS    0F                                                       03057000
@SIZDATD DC    AL1(1)                                                   03058000
         DC    AL3(@ENDDATD-@DATD)                                      03059000
         DS    0D                                                       03060000
ADMSG    DC    F'0'                                                     03061000
CALLERNO DC    H'1'                                                     03062000
@CC00830 DC    C'PLI'                                                   03063000
@CB00391 DC    X'0000'                                                  03064000
@CB00809 DC    X'0004'                                                  03065000
@CB00852 DC    X'0014'                                                  03066000
@CB00769 DC    X'000000'                                                03067000
LIBNAME  DC    CL4'LIB('                                                03068000
FLIBNAME DC    CL8'FORTLIB'                                             03069000
CLIBNAME DC    CL6'COBLIB'                                              03070000
LOADGO   DC    CL8'LOADGO ('                                            03071000
WHENEND  DC    CL16'WHEN SYSRC(GT 4)'                                   03072000
OBJQUAL  DC    CL4'.OBJ'                                                03073000
PLICNAME DC    CL4'PLIC'                                                03074000
PL1BASE  DC    CL7'PLIBASE'                                             03075000
         DS    CL1                                                      03076000
SEG04    DS    CL12                                                     03077000
         ORG   SEG04                                                    03078000
SEG04LEN DC    H'10'                                                    03079000
SEG04TXT DC    CL10'IKJ56052I '                                         03080000
         ORG   SEG04+12                                                 03081000
SEG05    DS    CL35                                                     03082000
         ORG   SEG05                                                    03083000
@NM00052 DC    H'33'                                                    03084000
@NM00053 DC    CL33'IKJ56057I CREATED DATA SET NAME, '                  03085000
         ORG   SEG05+35                                                 03086000
         DS    CL1                                                      03087000
SEG05A   DS    CL28                                                     03088000
         ORG   SEG05A                                                   03089000
@NM00054 DC    H'26'                                                    03090000
@NM00055 DC    CL26'.OBJ EXCEEDS 44 CHARACTERS'                         03091000
         ORG   SEG05A+28                                                03092000
SEG08    DS    CL50                                                     03093000
         ORG   SEG08                                                    03094000
SEG08LEN DC    H'48'                                                    03095000
SEG08TXT DC    CL48'IKJ56053I PARM FIELD TRUNCATED TO 100 CHARACTERS'   03096000
         ORG   SEG08+50                                                 03097000
SEG09    DS    CL33                                                     03098000
         ORG   SEG09                                                    03099000
SEG09LEN DC    H'31'                                                    03100000
SEG09TXT DC    CL31'IKJ56052I COMMAND SYSTEM ERROR+'                    03101000
         ORG   SEG09+33                                                 03102000
         DS    CL1                                                      03103000
SEG10    DS    CL54                                                     03104000
         ORG   SEG10                                                    03105000
SEG10LEN DC    H'52'                                                    03106000
SEG10TXT DC    CL52'IKJ56056I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMANC03107000
               D'                                                       03108000
         ORG   SEG10+54                                                 03109000
SEG11    DS    CL14                                                     03110000
         ORG   SEG11                                                    03111000
SEG11LEN DC    H'12'                                                    03112000
SEG11TXT DC    CL12' ERROR CODE '                                       03113000
         ORG   SEG11+14                                                 03114000
SEG13    DS    CL15                                                     03115000
         ORG   SEG13                                                    03116000
SEG13LEN DC    H'13'                                                    03117000
SEG13TXT DC    CL13' IGNORED FOR '                                      03118000
         ORG   SEG13+15                                                 03119000
         DS    CL1                                                      03120000
SEG18    DS    CL12                                                     03121000
         ORG   SEG18                                                    03122000
SEG18LEN DC    H'10'                                                    03123000
SEG18TXT DC    CL10'IKJ56054I '                                         03124000
         ORG   SEG18+12                                                 03125000
SEG19    DS    CL20                                                     03126000
         ORG   SEG19                                                    03127000
SEG19LEN DC    H'18'                                                    03128000
SEG19TXT DC    CL18' INVALID DATA TYPE'                                 03129000
         ORG   SEG19+20                                                 03130000
PARSE    DS    CL7                                                      03131000
         ORG   PARSE                                                    03132000
@NM00056 DC    H'5'                                                     03133000
@NM00057 DC    CL5'PARSE'                                               03134000
         ORG   PARSE+7                                                  03135000
         DS    CL1                                                      03136000
STACK    DS    CL7                                                      03137000
         ORG   STACK                                                    03138000
@NM00058 DC    H'5'                                                     03139000
@NM00059 DC    CL5'STACK'                                               03140000
         ORG   STACK+7                                                  03141000
         DS    CL1                                                      03142000
PARMINBF DS    CL14                                                     03143000
         ORG   PARMINBF                                                 03144000
@NM00062 DC    H'12'                                                    03145000
@NM00063 DC    CL11'PARM STRING'                                        03146000
@NM00064 DC    CL1','                                                   03147000
         ORG   PARMINBF+14                                              03148000
LMSGINBF DS    CL7                                                      03149000
         ORG   LMSGINBF                                                 03150000
@NM00065 DC    H'5'                                                     03151000
LMSG     DC    CL4'LMSG'                                                03152000
@NM00066 DC    CL1','                                                   03153000
         ORG   LMSGINBF+7                                               03154000
         DS    CL1                                                      03155000
SMSGINBF DS    CL7                                                      03156000
         ORG   SMSGINBF                                                 03157000
@NM00067 DC    H'5'                                                     03158000
SMSG     DC    CL4'SMSG'                                                03159000
@NM00068 DC    CL1','                                                   03160000
         ORG   SMSGINBF+7                                               03161000
         DS    CL1                                                      03162000
TESTINBF DS    CL7                                                      03163000
         ORG   TESTINBF                                                 03164000
@NM00069 DC    H'5'                                                     03165000
TEST     DC    CL4'TEST'                                                03166000
@NM00070 DC    CL1','                                                   03167000
         ORG   TESTINBF+7                                               03168000
         DS    CL1                                                      03169000
NOTSTIBF DS    CL9                                                      03170000
         ORG   NOTSTIBF                                                 03171000
@NM00071 DC    H'7'                                                     03172000
NOTEST   DC    CL6'NOTEST'                                              03173000
@NM00072 DC    CL1','                                                   03174000
         ORG   NOTSTIBF+9                                               03175000
         DS    CL1                                                      03176000
LPRECIBF DS    CL8                                                      03177000
         ORG   LPRECIBF                                                 03178000
@NM00073 DC    H'6'                                                     03179000
LPREC    DC    CL5'LPREC'                                               03180000
@NM00074 DC    CL1','                                                   03181000
         ORG   LPRECIBF+8                                               03182000
SPRECIBF DS    CL8                                                      03183000
         ORG   SPRECIBF                                                 03184000
@NM00075 DC    H'6'                                                     03185000
SPREC    DC    CL5'SPREC'                                               03186000
@NM00076 DC    CL1','                                                   03187000
         ORG   SPRECIBF+8                                               03188000
FIXEDIBF DS    CL8                                                      03189000
         ORG   FIXEDIBF                                                 03190000
@NM00077 DC    H'6'                                                     03191000
FIXD     DC    CL5'FIXED'                                               03192000
@NM00078 DC    CL1','                                                   03193000
         ORG   FIXEDIBF+8                                               03194000
FREEINBF DS    CL7                                                      03195000
         ORG   FREEINBF                                                 03196000
@NM00079 DC    H'5'                                                     03197000
FREE     DC    CL4'FREE'                                                03198000
@NM00080 DC    CL1','                                                   03199000
         ORG   FREEINBF+7                                               03200000
         DS    CL1                                                      03201000
CHECKIBF DS    CL8                                                      03202000
         ORG   CHECKIBF                                                 03203000
@NM00081 DC    H'6'                                                     03204000
CHECK    DC    CL5'CHECK'                                               03205000
@NM00082 DC    CL1','                                                   03206000
         ORG   CHECKIBF+8                                               03207000
LIBINBUF DS    CL6                                                      03208000
         ORG   LIBINBUF                                                 03209000
@NM00083 DC    H'4'                                                     03210000
LIB      DC    CL3'LIB'                                                 03211000
@NM00084 DC    CL1','                                                   03212000
         ORG   LIBINBUF+6                                               03213000
GOINVBF  DS    CL5                                                      03214000
         ORG   GOINVBF                                                  03215000
@NM00085 DC    H'3'                                                     03216000
GO       DC    CL2'GO'                                                  03217000
@NM00086 DC    CL1','                                                   03218000
         ORG   GOINVBF+5                                                03219000
         DS    CL1                                                      03220000
NOGINVBF DS    CL7                                                      03221000
         ORG   NOGINVBF                                                 03222000
@NM00087 DC    H'5'                                                     03223000
NOGO     DC    CL4'NOGO'                                                03224000
@NM00088 DC    CL1','                                                   03225000
         ORG   NOGINVBF+7                                               03226000
         DS    CL1                                                      03227000
PAUINVBF DS    CL8                                                      03228000
         ORG   PAUINVBF                                                 03229000
@NM00089 DC    H'6'                                                     03230000
PAUSE    DC    CL5'PAUSE'                                               03231000
@NM00090 DC    CL1','                                                   03232000
         ORG   PAUINVBF+8                                               03233000
NOPINVBF DS    CL10                                                     03234000
         ORG   NOPINVBF                                                 03235000
@NM00091 DC    H'8'                                                     03236000
NOPAUSE  DC    CL7'NOPAUSE'                                             03237000
@NM00092 DC    CL1','                                                   03238000
         ORG   NOPINVBF+10                                              03239000
STOINVBF DS    CL8                                                      03240000
         ORG   STOINVBF                                                 03241000
@NM00093 DC    H'6'                                                     03242000
STORE    DC    CL5'STORE'                                               03243000
@NM00094 DC    CL1','                                                   03244000
         ORG   STOINVBF+8                                               03245000
NOSINVBF DS    CL10                                                     03246000
         ORG   NOSINVBF                                                 03247000
@NM00095 DC    H'8'                                                     03248000
NOSTORE  DC    CL7'NOSTORE'                                             03249000
@NM00096 DC    CL1','                                                   03250000
         ORG   NOSINVBF+10                                              03251000
SRCINVBF DS    CL9                                                      03252000
         ORG   SRCINVBF                                                 03253000
@NM00097 DC    H'7'                                                     03254000
SOURCE   DC    CL6'SOURCE'                                              03255000
@NM00098 DC    CL1','                                                   03256000
         ORG   SRCINVBF+9                                               03257000
         DS    CL1                                                      03258000
OBJINVBF DS    CL9                                                      03259000
         ORG   OBJINVBF                                                 03260000
@NM00099 DC    H'7'                                                     03261000
OBJECT   DC    CL6'OBJECT'                                              03262000
@NM00100 DC    CL1','                                                   03263000
         ORG   OBJINVBF+9                                               03264000
         DS    CL1                                                      03265000
SIZINVBF DS    CL7                                                      03266000
         ORG   SIZINVBF                                                 03267000
@NM00101 DC    H'5'                                                     03268000
SIZZ     DC    CL4'SIZE'                                                03269000
@NM00102 DC    CL1','                                                   03270000
         ORG   SIZINVBF+7                                               03271000
         DS    CL1                                                      03272000
OPTINBF  DS    CL6                                                      03273000
         ORG   OPTINBF                                                  03274000
@NM00103 DC    H'4'                                                     03275000
OPT      DC    CL3'OPT'                                                 03276000
@NM00104 DC    CL1','                                                   03277000
         ORG   OPTINBF+6                                                03278000
MSGIDOP  DS    CL12                                                     03279000
         ORG   MSGIDOP                                                  03280000
@NM00105 DC    H'10'                                                    03281000
@NM00106 DC    CL10'IKJ56055I '                                         03282000
         ORG   MSGIDOP+12                                               03283000
PROCESS  DS    CL13                                                     03284000
         ORG   PROCESS                                                  03285000
@NM00107 DC    H'11'                                                    03286000
@NM00108 DC    CL11' PROCESSING'                                        03287000
         ORG   PROCESS+13                                               03288000
         DS    CL1                                                      03289000
QUALTAB  DS    CL10                                                     03290000
         ORG   QUALTAB+0                                                03291000
QUALLENG DC    H'3'                                                     03292000
QUALTYPE DC    CL8'ASM     '                                            03293000
         ORG   QUALTAB+10                                               03294000
         ORG   QUALTAB+10                                               03295000
         DC    H'4'                                                     03296000
         DC    CL8'FORT    '                                            03297000
         ORG   QUALTAB+20                                               03298000
         ORG   QUALTAB+20                                               03299000
         DC    H'5'                                                     03300000
         DC    CL8'COBOL   '                                            03301000
         ORG   QUALTAB+30                                               03302000
         ORG   QUALTAB+30                                               03303000
         DC    H'5'                                                     03304000
         DC    CL8'BASIC   '                                            03305000
         ORG   QUALTAB+40                                               03306000
         ORG   QUALTAB+40                                               03307000
         DC    H'4'                                                     03308000
         DC    CL8'IPLI    '                                            03309000
         ORG   QUALTAB+50                                               03310000
         ORG   QUALTAB+50                                               03311000
         DC    H'4'                                                     03312000
         DC    CL8'FORT    '                                            03313000
         ORG   QUALTAB+60                                               03314000
         ORG   QUALTAB+60                                               03315000
         DC    H'3'                                                     03316000
         DC    CL8'PLI     '                                            03317000
         ORG   QUALTAB+70                                               03318000
         ORG   QUALTAB+70                                               03319000
         DC    H'7'                                                     03320000
         DC    CL8'VSBASIC '                                            03321000
         ORG   QUALTAB+80                                               03322000
         ORG   QUALTAB+80                                               03323000
         DC    H'1'                                                     03324000
         DC    CL8'QUALEND '                                            03325000
         ORG   QUALTAB+90                                               03326000
PLITYPE  DC    CL3'CHK'                                                 03327000
         DC    CL3'OPT'                                                 03328000
TYPETBLE DS    CL16                                                     03329000
         ORG   TYPETBLE+0                                               03330000
TYPELNG  DC    H'3'                                                     03331000
TYPES    DC    CL8'ASM     '                                            03332000
COMMANDS DC    X'E0'                                                    03333000
         ORG   COMMANDS+0                                               03334000
COMPLCMD DS    BL1                                                      03335000
WHENCMND EQU   COMMANDS+0                                               03336000
LOADCMD  EQU   COMMANDS+0                                               03337000
@NM00050 EQU   COMMANDS+0                                               03338000
         ORG   TYPETBLE+11                                              03339000
VALIDPRM DC    X'8080'                                                  03340000
         ORG   VALIDPRM+0                                               03341000
PRMSTRNG DS    BL1                                                      03342000
LMSGSMSG EQU   VALIDPRM+0                                               03343000
TESTPARM EQU   VALIDPRM+0                                               03344000
PRECPARM EQU   VALIDPRM+0                                               03345000
FORM     EQU   VALIDPRM+0                                               03346000
FLIBPARM EQU   VALIDPRM+0                                               03347000
CLIBPARM EQU   VALIDPRM+0                                               03348000
CHECKOPT EQU   VALIDPRM+0                                               03349000
LIBOPND  DS    BL1                                                      03350000
GOBIT    EQU   VALIDPRM+1                                               03351000
PAUSBIT  EQU   VALIDPRM+1                                               03352000
STORBIT  EQU   VALIDPRM+1                                               03353000
SRCBIT   EQU   VALIDPRM+1                                               03354000
SIZBIT   EQU   VALIDPRM+1                                               03355000
         ORG   TYPETBLE+13                                              03356000
@NM00051 DS    CL3                                                      03357000
         ORG   TYPETBLE+16                                              03358000
         ORG   TYPETBLE+16                                              03359000
         DC    H'6'                                                     03360000
         DC    CL8'GOFORT  '                                            03361000
         DC    X'80'                                                    03362000
         DC    X'4800'                                                  03363000
         ORG   TYPETBLE+32                                              03364000
         ORG   TYPETBLE+32                                              03365000
         DC    H'5'                                                     03366000
         DC    CL8'COBOL   '                                            03367000
         DC    X'E0'                                                    03368000
         DC    X'8280'                                                  03369000
         ORG   TYPETBLE+48                                              03370000
         ORG   TYPETBLE+48                                              03371000
         DC    H'5'                                                     03372000
         DC    CL8'BASIC   '                                            03373000
         DC    X'80'                                                    03374000
         DC    X'7000'                                                  03375000
         ORG   TYPETBLE+64                                              03376000
         ORG   TYPETBLE+64                                              03377000
         DC    H'4'                                                     03378000
         DC    CL8'IPLI    '                                            03379000
         DC    X'80'                                                    03380000
         DC    X'6000'                                                  03381000
         ORG   TYPETBLE+80                                              03382000
         ORG   TYPETBLE+80                                              03383000
         DC    H'4'                                                     03384000
         DC    CL8'FORT    '                                            03385000
         DC    X'E0'                                                    03386000
         DC    X'8480'                                                  03387000
         ORG   TYPETBLE+96                                              03388000
         ORG   TYPETBLE+96                                              03389000
         DC    H'3'                                                     03390000
         DC    CL8'PLI     '                                            03391000
         DC    X'E0'                                                    03392000
         DC    X'8180'                                                  03393000
         ORG   TYPETBLE+112                                             03394000
         ORG   TYPETBLE+112                                             03395000
         DC    H'7'                                                     03396000
         DC    CL8'VSBASIC '                                            03397000
         DC    X'80'                                                    03398000
         DC    X'307C'                                                  03399000
         ORG   TYPETBLE+128                                             03400000
         ORG   TYPETBLE+128                                             03401000
         DC    H'1'                                                     03402000
         DC    X'FFFFFFFFFFFFFFFF'                                      03403000
         DC    X'00'                                                    03404000
         DC    X'0000'                                                  03405000
         ORG   TYPETBLE+144                                             03406000
TABOPTAD DC    AL4(MSGIDOP)                                             03407000
         DC    AL4(PARMINBF)                                            03408000
         DC    AL4(LMSGINBF)                                            03409000
         DC    AL4(SMSGINBF)                                            03410000
         DC    AL4(TESTINBF)                                            03411000
         DC    AL4(NOTSTIBF)                                            03412000
         DC    AL4(LPRECIBF)                                            03413000
         DC    AL4(SPRECIBF)                                            03414000
         DC    AL4(FIXEDIBF)                                            03415000
         DC    AL4(FREEINBF)                                            03416000
         DC    AL4(CHECKIBF)                                            03417000
         DC    AL4(OPTINBF)                                             03418000
         DC    AL4(LIBINBUF)                                            03419000
         DC    AL4(GOINVBF)                                             03420000
         DC    AL4(NOGINVBF)                                            03421000
         DC    AL4(PAUINVBF)                                            03422000
         DC    AL4(NOPINVBF)                                            03423000
         DC    AL4(STOINVBF)                                            03424000
         DC    AL4(NOSINVBF)                                            03425000
         DC    AL4(SRCINVBF)                                            03426000
         DC    AL4(OBJINVBF)                                            03427000
         DC    AL4(SIZINVBF)                                            03428000
MASK     DC    X'800000'                                                03429000
         DC    X'400000'                                                03430000
         DC    X'200000'                                                03431000
         DC    X'100000'                                                03432000
         DC    X'080000'                                                03433000
         DC    X'040000'                                                03434000
         DC    X'020000'                                                03435000
         DC    X'010000'                                                03436000
         DC    X'008000'                                                03437000
         DC    X'004000'                                                03438000
         DC    X'002000'                                                03439000
         DC    X'001000'                                                03440000
         DC    X'000800'                                                03441000
         DC    X'000400'                                                03442000
         DC    X'000200'                                                03443000
         DC    X'000100'                                                03444000
         DC    X'000080'                                                03445000
         DC    X'000040'                                                03446000
         DC    X'000020'                                                03447000
         DC    X'000010'                                                03448000
         DC    X'000008'                                                03449000
         DC    X'000004'                                                03450000
IKJEFR00 CSECT                                                          03451000
*                                                            /*Y01993*/ 03452000
GETCORE  GETMAIN EC,SP=78,MF=L                                          03453000
GETEND   EQU *                                                          03454000
GETLEN   DC A(GETEND-GETCORE)                                           03455000
PUTLIST  PUTLINE OUTPUT=(PUTLIST,MULTLVL),MF=L                          03456000
PUTEND   EQU *                                                          03457000
PUTLEN   DC  A(PUTEND-PUTLIST)                                          03458000
STACKLST STACK STORAGE=(STACKLST,PROCN),MF=L                            03459000
STACKEND EQU *                                                          03460000
STACKLEN DC A(STACKEND-STACKLST)                                        03461000
         DS    0F                                                       03462000
LISTB    EQU   *                                                        03463000
STACKLS  STACK MF=L                                                     03464000
LISTE    EQU  *                                                         03465000
IKJEFR01 IKJPARM DSECT=PCL                                              03466000
DSNAME   IKJPOSIT   DSNAME,                                            X03467000
               PROMPT='DATA SET NAME',                                 X03468000
               HELP='INPUT DATA SET NAME'                               03469000
PARMS    IKJPOSIT   QSTRING                                             03470000
DSTYPE   IKJKEYWD                                                       03471000
         IKJNAME    'ASM'                                               03472000
         IKJNAME    'GOFORT'                                            03473000
         IKJNAME    'COBOL'                                             03474000
         IKJNAME    'BASIC'                                             03475000
         IKJNAME    'IPLI'                                              03476000
         IKJNAME    'FORT'                                              03477000
         IKJNAME    'PLI'                                               03478000
         IKJNAME    'VSBASIC'                                           03479000
MSG      IKJKEYWD                                                       03480000
         IKJNAME    'LMSG'                                              03481000
         IKJNAME    'SMSG'                                              03482000
PREC     IKJKEYWD                                                       03483000
         IKJNAME    'LPREC'                                             03484000
         IKJNAME    'SPREC'                                             03485000
TESTP    IKJKEYWD                                                       03486000
         IKJNAME    'TEST'                                              03487000
         IKJNAME    'NOTEST'                                            03488000
FORMAT   IKJKEYWD                                                       03489000
         IKJNAME    'FIXED'                                             03490000
         IKJNAME    'FREE'                                              03491000
CKOPT    IKJKEYWD                                                       03492000
         IKJNAME     'CHECK'                                            03493000
         IKJNAME     'OPT'                                              03494000
LOADLIB   IKJKEYWD                                                      03495000
          IKJNAME    'LIB',SUBFLD=DSLIST                         Y01156 03496000
GOGO     IKJKEYWD                                                       03497000
         IKJNAME    'GO'                                                03498000
         IKJNAME    'NOGO'                                              03499000
PPAUS    IKJKEYWD                                                       03500000
         IKJNAME    'PAUSE'                                             03501000
         IKJNAME    'NOPAUSE'                                           03502000
SSTOR    IKJKEYWD                                                       03503000
         IKJNAME    'STORE'                                             03504000
         IKJNAME    'NOSTORE'                                           03505000
SSRC     IKJKEYWD                                                       03506000
         IKJNAME    'SOURCE'                                            03507000
         IKJNAME    'OBJECT'                                            03508000
SSIZ     IKJKEYWD                                                       03509000
         IKJNAME    'SIZE',SUBFLD=SZLST                                 03510000
DSLIST   IKJSUBF                                                        03511000
DSLIB    IKJPOSIT   DSNAME,LIST,                                       *03512000
               PROMPT='LIBRARY DATA SET NAME',                         *03513000
               HELP='NAME OF LIBRARY CONTAINING ROUTINES USED BY YOUR P*03514000
               ROGRAM.'                                                 03515000
SZLST    IKJSUBF                                                        03516000
SNUM     IKJIDENT   'USER AREA SPACE',FIRST=NUMERIC,OTHER=NUMERIC,     *03517000
               PROMPT='THE SIZE OF USER AREA YOU DESIRE',MAXLNTH=3      03518000
         IKJENDP                                                        03519000
RUNADCN  DC    A(IKJEFR01)                                              03520000
* THE FOLLOWING IS A PCL FOR PARSE, USED WHEN IT IS NECESSARY TO        03521000
* REENTER PARSE TO PROMPT FOR THE DATA SET TYPE                         03522000
IKJEFR02 IKJPARM DSECT=PCL2                                             03523000
TYPE2    IKJIDENT 'COMPILER',FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=7,     C03524000
               PROMPT='DATA SET TYPE',                                 C03525000
               HELP='ASM,FORT,COBOL,BASIC,IPLI,GOFORT,PLI,VSBASIC'      03526000
         IKJENDP                                                        03527000
RUNADCN2 DC A(IKJEFR02)                                                 03528000
* THE FOLLOWING IS A PCL FOR PARSE,  USED WHEN IT IS REENTERED TO       03529000
* PROMPT FOR THE DSNAME - THE FIRST NAME WAS NOT FOUND                  03530000
IKJEFR03 IKJPARM DSECT=PCL3                                             03531000
DSNAME2  IKJPOSIT   DSNAME,PROMPT='DATA SET NAME',                     *03532000
               HELP='INPUT DATA SET NAME'                               03533000
         IKJENDP                                                        03534000
RUNADCN3 DC A(IKJEFR03)                                                 03535000
@DATD    DSECT                                                          03536000
STACKLSD STACK MF=L                                                     03537000
@DATD    DSECT                                                          03538000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                03539000
@ENDDATD EQU   *                                                        03540000
IKJEFR00 CSECT                                                          03541000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03542000
@01      EQU   01                                                       03543000
@02      EQU   02                                                       03544000
@03      EQU   03                                                       03545000
@04      EQU   04                                                       03546000
@05      EQU   05                                                       03547000
@06      EQU   06                                                       03548000
@07      EQU   07                                                       03549000
@08      EQU   08                                                       03550000
@09      EQU   09                                                       03551000
@10      EQU   10                                                       03552000
@11      EQU   11                                                       03553000
@12      EQU   12                                                       03554000
@13      EQU   13                                                       03555000
@14      EQU   14                                                       03556000
@15      EQU   15                                                       03557000
XSAVE    EQU   @03                                                      03558000
LIBPTR   EQU   @03                                                      03559000
CALCY    EQU   @02                                                      03560000
PDLSAVE  EQU   @02                                                      03561000
STPBPTR  EQU   @02                                                      03562000
DAPB0PTR EQU   @03                                                      03563000
RTRNCODE EQU   @02                                                      03564000
X        EQU   @02                                                      03565000
B        EQU   @02                                                      03566000
A        EQU   @03                                                      03567000
R0       EQU   @00                                                      03568000
R1       EQU   @01                                                      03569000
R5       EQU   @05                                                      03570000
R4       EQU   @04                                                      03571000
R15      EQU   @15                                                      03572000
LASTQUAL EQU   0                                                        03573000
LAST     EQU   0                                                        03574000
DAPL     EQU   0                                                        03575000
DAPLPSCB EQU   DAPL+12                                                  03576000
DAPLDAPB EQU   DAPL+16                                                  03577000
PPL      EQU   0                                                        03578000
PPLPCL   EQU   PPL+12                                                   03579000
PPLANS   EQU   PPL+16                                                   03580000
PPLCBUF  EQU   PPL+20                                                   03581000
DAPB04   EQU   0                                                        03582000
DA04CD   EQU   DAPB04                                                   03583000
DA04FLG  EQU   DAPB04+2                                                 03584000
DA04CTRC EQU   DAPB04+6                                                 03585000
DA04PDSN EQU   DAPB04+8                                                 03586000
DA04CTL  EQU   DAPB04+12                                                03587000
DA04UID  EQU   DA04CTL                                                  03588000
STPL     EQU   0                                                        03589000
STPLSTPB EQU   STPL+12                                                  03590000
STPB     EQU   0                                                        03591000
STPBALSD EQU   STPB+4                                                   03592000
IOPL     EQU   0                                                        03593000
IOPLIOPB EQU   IOPL+12                                                  03594000
CMDBFR   EQU   0                                                        03595000
CPPL     EQU   0                                                        03596000
CPPLCBUF EQU   CPPL                                                     03597000
CPPLUPT  EQU   CPPL+4                                                   03598000
CPPLPSCB EQU   CPPL+8                                                   03599000
CPPLECT  EQU   CPPL+12                                                  03600000
COMMDBUF EQU   0                                                        03601000
CONTRLBF EQU   COMMDBUF                                                 03602000
CNTRLBF  EQU   CONTRLBF                                                 03603000
CONTRESD EQU   COMMDBUF+2                                               03604000
CNTRESD  EQU   CONTRESD                                                 03605000
CMDNAME  EQU   0                                                        03606000
MSGBUFF  EQU   0                                                        03607000
PRECPRM  EQU   0                                                        03608000
WHENIFCD EQU   0                                                        03609000
DSNPARM  EQU   0                                                        03610000
RPAREN   EQU   0                                                        03611000
MBRPARM  EQU   0                                                        03612000
LPAREN   EQU   0                                                        03613000
SLASH    EQU   0                                                        03614000
PASSPARM EQU   0                                                        03615000
NOTESTPR EQU   0                                                        03616000
TESTPRM  EQU   0                                                        03617000
FIXEDPRM EQU   0                                                        03618000
FREEPARM EQU   0                                                        03619000
GOPRM    EQU   0                                                        03620000
NOGOPRM  EQU   0                                                        03621000
SRCPRM   EQU   0                                                        03622000
OBJPRM   EQU   0                                                        03623000
PAUSPRM  EQU   0                                                        03624000
NOPAUPRM EQU   0                                                        03625000
STOREPRM EQU   0                                                        03626000
NOSTOPRM EQU   0                                                        03627000
SIZEPRM  EQU   0                                                        03628000
LOADCMND EQU   0                                                        03629000
PARMPARM EQU   0                                                        03630000
RQUOTE   EQU   0                                                        03631000
LQUOTE   EQU   0                                                        03632000
FORTLIBP EQU   0                                                        03633000
COBLIBP  EQU   0                                                        03634000
PL1BASEP EQU   0                                                        03635000
LSD      EQU   0                                                        03636000
LSDADATA EQU   LSD                                                      03637000
LSDRCLEN EQU   LSD+4                                                    03638000
LSDTOTLN EQU   LSD+6                                                    03639000
LSDANEXT EQU   LSD+8                                                    03640000
PDL2     EQU   0                                                        03641000
TYPEPTR  EQU   PDL2+8                                                   03642000
TYPELEN  EQU   PDL2+12                                                  03643000
CMPLR    EQU   0                                                        03644000
RUNPDL   EQU   0                                                        03645000
DSNPDE   EQU   RUNPDL+8                                                 03646000
DSNPTR   EQU   DSNPDE                                                   03647000
DSLEN    EQU   DSNPDE+4                                                 03648000
DSNFLAG  EQU   DSNPDE+6                                                 03649000
DSNPRES  EQU   DSNFLAG                                                  03650000
DSNQUOT  EQU   DSNFLAG                                                  03651000
MBRPTR   EQU   DSNPDE+8                                                 03652000
MBRLEN   EQU   DSNPDE+12                                                03653000
MBRFLAG  EQU   DSNPDE+14                                                03654000
MBRPRES  EQU   MBRFLAG                                                  03655000
PASSPTR  EQU   DSNPDE+16                                                03656000
PASSLEN  EQU   DSNPDE+20                                                03657000
PASSFLAG EQU   DSNPDE+22                                                03658000
PASSPRES EQU   PASSFLAG                                                 03659000
PARMPDE  EQU   RUNPDL+32                                                03660000
PARMPTR  EQU   PARMPDE                                                  03661000
PARMLEN  EQU   PARMPDE+4                                                03662000
PARMFLAG EQU   PARMPDE+6                                                03663000
PARMPRES EQU   PARMFLAG                                                 03664000
TYPEPDE  EQU   RUNPDL+40                                                03665000
MSGPDE   EQU   RUNPDL+42                                                03666000
PRECPDE  EQU   RUNPDL+44                                                03667000
TESTPDE  EQU   RUNPDL+46                                                03668000
FORMPDE  EQU   RUNPDL+48                                                03669000
OPTPDE   EQU   RUNPDL+50                                                03670000
LIBPDE   EQU   RUNPDL+52                                                03671000
GOPDE    EQU   RUNPDL+54                                                03672000
PAUSPDE  EQU   RUNPDL+56                                                03673000
STOREPDE EQU   RUNPDL+58                                                03674000
SRCPDE   EQU   RUNPDL+60                                                03675000
SIZPDE   EQU   RUNPDL+62                                                03676000
FIRSTDSN EQU   RUNPDL+64                                                03677000
@NM00037 EQU   RUNPDL+92                                                03678000
SIZPTR   EQU   @NM00037                                                 03679000
SIZLEN   EQU   @NM00037+4                                               03680000
LDSNPDE  EQU   0                                                        03681000
LDSNPTR  EQU   LDSNPDE                                                  03682000
LDSNLEN  EQU   LDSNPDE+4                                                03683000
LDSNFLAG EQU   LDSNPDE+6                                                03684000
LDSNPRES EQU   LDSNFLAG                                                 03685000
LDSNQUOT EQU   LDSNFLAG                                                 03686000
LMBRPTR  EQU   LDSNPDE+8                                                03687000
LMBRLEN  EQU   LDSNPDE+12                                               03688000
LMBRFLAG EQU   LDSNPDE+14                                               03689000
LMBRPRES EQU   LMBRFLAG                                                 03690000
LPASSPTR EQU   LDSNPDE+16                                               03691000
LPASSLEN EQU   LDSNPDE+20                                               03692000
LPASSFLG EQU   LDSNPDE+22                                               03693000
LPASPRES EQU   LPASSFLG                                                 03694000
CHAINPTR EQU   LDSNPDE+24                                               03695000
DSNMELIB EQU   0                                                        03696000
MBRNMLIB EQU   0                                                        03697000
PASNMLIB EQU   0                                                        03698000
LIBOUT   EQU   0                                                        03699000
PSCB     EQU   0                                                        03700000
PSCBUSER EQU   PSCB                                                     03701000
PSCBUSRL EQU   PSCB+7                                                   03702000
PSCBATR1 EQU   PSCB+16                                                  03703000
DSNMEBUF EQU   0                                                        03704000
MBRNMBUF EQU   0                                                        03705000
PASNMBUF EQU   0                                                        03706000
PARMBUF  EQU   0                                                        03707000
DOTOBJ   EQU   0                                                        03708000
PARMHOLD EQU   0                                                        03709000
CBUFF    EQU   0                                                        03710000
BUFFCHAR EQU   0                                                        03711000
HOLDCHAR EQU   0                                                        03712000
COREGOT  EQU   0                                                        03713000
IKJEFF18 EQU   0                                                        03714000
FRMT1BUF EQU   0                                                        03715000
MESSAGE  EQU   0                                                        03716000
LENMESS  EQU   MESSAGE                                                  03717000
TXTMESS  EQU   MESSAGE+2                                                03718000
LSTSEG   EQU   0                                                        03719000
LSTNUM   EQU   LSTSEG                                                   03720000
FAKBFR   EQU   0                                                        03721000
TMCTPARM EQU   0                                                        03722000
DAPLPTR  EQU   SERVRPTR                                                 03723000
PPLPTR   EQU   SERVRPTR                                                 03724000
STPLPTR  EQU   SERVRPTR                                                 03725000
ZERO1    EQU   DA04FLG                                                  03726000
ZERO2    EQU   DA04CTL                                                  03727000
IOPLPTR  EQU   SERVRPTR                                                 03728000
OUTADDR  EQU   COREGOT+4                                                03729000
MSGPARM  EQU   TABLESEG                                                 03730000
W1       EQU   MSGPARM                                                  03731000
W2       EQU   MSGPARM+4                                                03732000
W3       EQU   MSGPARM+8                                                03733000
W4       EQU   MSGPARM+12                                               03734000
W5       EQU   MSGPARM+16                                               03735000
W6       EQU   MSGPARM+20                                               03736000
W7       EQU   MSGPARM+24                                               03737000
SGMNTLST EQU   MSGPARM                                                  03738000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03739000
W12      EQU   MSGPARM+44                                               03740000
W11      EQU   MSGPARM+40                                               03741000
W10      EQU   MSGPARM+36                                               03742000
W9       EQU   MSGPARM+32                                               03743000
W8       EQU   MSGPARM+28                                               03744000
LSTOPT   EQU   LSTSEG+2                                                 03745000
PSCBU    EQU   PSCB+64                                                  03746000
PSCBRSZ  EQU   PSCB+60                                                  03747000
PSCBLINE EQU   PSCB+59                                                  03748000
PSCBCHAR EQU   PSCB+58                                                  03749000
PSCBUPTL EQU   PSCB+56                                                  03750000
PSCBUPT  EQU   PSCB+52                                                  03751000
PSCBRLGB EQU   PSCB+48                                                  03752000
PSCBDEST EQU   PSCB+40                                                  03753000
@NM00049 EQU   PSCB+36                                                  03754000
@NM00048 EQU   PSCB+32                                                  03755000
@NM00047 EQU   PSCB+28                                                  03756000
PSCBLTI2 EQU   PSCB+24                                                  03757000
PSCBLTIM EQU   PSCB+20                                                  03758000
PSCBATR2 EQU   PSCB+18                                                  03759000
@NM00046 EQU   PSCBATR1                                                 03760000
@NM00045 EQU   PSCBATR1                                                 03761000
@NM00044 EQU   PSCBATR1                                                 03762000
PSCBATTN EQU   PSCBATR1                                                 03763000
PSCBVMNT EQU   PSCBATR1                                                 03764000
PSCBJCL  EQU   PSCBATR1                                                 03765000
PSCBACCT EQU   PSCBATR1                                                 03766000
PSCBCTRL EQU   PSCBATR1                                                 03767000
PSCBGPNM EQU   PSCB+8                                                   03768000
@NM00043 EQU   LDSNPDE+23                                               03769000
@NM00042 EQU   LPASSFLG                                                 03770000
@NM00041 EQU   LDSNPDE+15                                               03771000
@NM00040 EQU   LMBRFLAG                                                 03772000
@NM00039 EQU   LDSNPDE+7                                                03773000
@NM00038 EQU   LDSNFLAG                                                 03774000
@NM00036 EQU   PARMPDE+7                                                03775000
@NM00035 EQU   PARMFLAG                                                 03776000
@NM00034 EQU   DSNPDE+23                                                03777000
@NM00033 EQU   PASSFLAG                                                 03778000
@NM00032 EQU   DSNPDE+15                                                03779000
@NM00031 EQU   MBRFLAG                                                  03780000
@NM00030 EQU   DSNPDE+7                                                 03781000
@NM00029 EQU   DSNFLAG                                                  03782000
@NM00028 EQU   RUNPDL+4                                                 03783000
@NM00027 EQU   RUNPDL                                                   03784000
@NM00026 EQU   PDL2+15                                                  03785000
TYPEFLG  EQU   PDL2+14                                                  03786000
@NM00025 EQU   PDL2+4                                                   03787000
@NM00024 EQU   PDL2                                                     03788000
LSDRSVRD EQU   LSD+12                                                   03789000
IOPLECB  EQU   IOPL+8                                                   03790000
IOPLECT  EQU   IOPL+4                                                   03791000
IOPLUPT  EQU   IOPL                                                     03792000
STPBOTDD EQU   STPB+12                                                  03793000
STPBINDD EQU   STPB+8                                                   03794000
@NM00016 EQU   STPB                                                     03795000
STPLECB  EQU   STPL+8                                                   03796000
STPLECT  EQU   STPL+4                                                   03797000
STPLUPT  EQU   STPL                                                     03798000
DA04DSO  EQU   DAPB04+15                                                03799000
@NM00015 EQU   DAPB04+13                                                03800000
@NM00014 EQU   DA04CTL                                                  03801000
@NM00013 EQU   DA04CTL                                                  03802000
@NM00012 EQU   DA04CTL                                                  03803000
@NM00011 EQU   DA04CTL                                                  03804000
@NM00010 EQU   DA04CTL                                                  03805000
@NM00009 EQU   DA04CTL                                                  03806000
@NM00008 EQU   DA04CTL                                                  03807000
@NM00007 EQU   DAPB04+4                                                 03808000
@NM00006 EQU   DA04FLG                                                  03809000
DA04DSE  EQU   DA04FLG                                                  03810000
DA04CAT  EQU   DA04FLG                                                  03811000
@NM00005 EQU   DA04FLG                                                  03812000
@NM00004 EQU   DA04FLG                                                  03813000
@NM00003 EQU   DA04FLG                                                  03814000
@NM00002 EQU   DA04FLG                                                  03815000
@NM00001 EQU   DA04FLG                                                  03816000
PPLUWA   EQU   PPL+24                                                   03817000
PPLECB   EQU   PPL+8                                                    03818000
PPLECT   EQU   PPL+4                                                    03819000
PPLUPT   EQU   PPL                                                      03820000
DAPLECB  EQU   DAPL+8                                                   03821000
DAPLECT  EQU   DAPL+4                                                   03822000
DAPLUPT  EQU   DAPL                                                     03823000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03824000
@RT00170 EQU   NOPRSERR                                                 03825000
@RT00196 EQU   STEXIT                                                   03826000
@RF00196 EQU   EXIT1                                                    03827000
@RT00201 EQU   NOTQUAL                                                  03828000
@RT00212 EQU   QUALFND2                                                 03829000
@RT00220 EQU   NOTQUAL                                                  03830000
@RT00222 EQU   VALDCMPL                                                 03831000
@RT00227 EQU   DAIRINIT                                                 03832000
@RF00227 EQU   PROMPT                                                   03833000
@RT00234 EQU   DAIRINIT                                                 03834000
@RT00236 EQU   PRMPRET                                                  03835000
@RT00238 EQU   DAIRINIT                                                 03836000
@RF00238 EQU   PRMPRET                                                  03837000
@RT00242 EQU   PRMPTYPE                                                 03838000
@RT00245 EQU   DAIRINIT                                                 03839000
@RT00248 EQU   QUALONLY                                                 03840000
@RT00266 EQU   CALCORE                                                  03841000
@RT00282 EQU   DIAGPARS                                                 03842000
@RT00295 EQU   NODSNAME                                                 03843000
@RT00354 EQU   NOSTRIP                                                  03844000
@RT00357 EQU   NOSTRIP                                                  03845000
@RT00360 EQU   NODSNPRS                                                 03846000
@RT00385 EQU   PLITEST                                                  03847000
@RT00390 EQU   PRMCON2                                                  03848000
@RT00446 EQU   BUILD3                                                   03849000
@RT00466 EQU   NOSTORGE                                                 03850000
@RF00484 EQU   @RC00482                                                 03851000
@RT00501 EQU   NODSN2                                                   03852000
@RT00503 EQU   MOVEDSN                                                  03853000
@RC00562 EQU   @RC00561                                                 03854000
@RC00581 EQU   @RC00580                                                 03855000
@RC00600 EQU   @RC00599                                                 03856000
@RC00619 EQU   @RC00618                                                 03857000
@RT00693 EQU   PARMATCH                                                 03858000
@RT00707 EQU   PARMATCH                                                 03859000
@RT00711 EQU   NODSN3                                                   03860000
@RT00749 EQU   FORTTEST                                                 03861000
@RC00786 EQU   @RC00785                                                 03862000
@RT00833 EQU   INVOPTST                                                 03863000
@RT00837 EQU   ENDBLD                                                   03864000
@RT00908 EQU   DIAGPARS                                                 03865000
@RT00911 EQU   TYPEMSG                                                  03866000
@RT00922 EQU   PRMPRET                                                  03867000
@RF00927 EQU   PRMPTYPE                                                 03868000
@RC00950 EQU   @RC00945                                                 03869000
@RC00961 EQU   @EL00002                                                 03870000
@RT00975 EQU   MSG2FRMT                                                 03871000
@RT01000 EQU   MSGLOOP2                                                 03872000
@PB00003 EQU   @EL00001                                                 03873000
@PB00002 EQU   @PB00003                                                 03874000
@ENDDATA EQU   *                                                        03875000
         END   IKJEFR00                                                 03876000
