         TITLE 'IKJEGASN, ''ASSIGN'' SUBCOMMAND OF TEST'                00050002
         COPY   IKJEGSIO                                                00060002
         EJECT                                                          00070002
         MACRO                                                          00100002
         VALUPDE                                                        00150002
*********************************************************************** 00200002
*                                                                     * 00250002
*        MAPPING DSECT FOR PDES FOR VALUES                            * 00300002
*                                                                     * 00350002
*        STATUS -- VERSION NO. 01 - RELEASE NO. 01                    * 00400002
*                                                                     * 00450002
*        CHANGE LEVEL -- 00 - DATE 03/09/72                           * 00500002
*                                                                     * 00550002
*********************************************************************** 00600002
VALUPDE  DSECT                                                          00650002
VALUPTR  DS    F -                      POINTER TO CHARACTER STRING,    00700002
*                                       FIRST BYTE AFTER QUOTE          00750002
VALULNH  DS    H -                      LENGTH OF CHARACTER STRING,     00800002
*                                       EXCLUDING QUOTES                00850002
VALUFLG  DS    XL1 -                    FLAG                            00900002
VALUBIT  EQU   B'10000000' -            BIT ON MEANS VALUE PRESENT      00950002
VALUTYPE DS    CL1 -                    TYPE CHARACTER (CHARACTER       01000002
*                                       PRECEDING QUOTE)                01050002
VALUCHAI DS    F -                      ADDRESS OF NEXT VALUE           01100002
*                                       PDE ON CHAIN                    01150002
VALUPDL  EQU   *-VALUPDE -              LENGTH OF VALUE PDE             01200002
         MEND                                                           01250002
         EJECT                                                          01300002
*********************************************************************** 01350002
*                                                                     * 01400002
* STATUS--                                                            * 01450002
*    CHANGE LEVEL 00, VERSION NUMBER 02, OS/VS2 (5/17/73)             * 01500002
*                                                                     * 01550002
* FUNCTION--                                                          * 01600002
*    IKJEGASN WILL REPLACE THE CONTENTS OF USER DESIGNATED            * 01650002
*    AREAS OF CORE STORAGE OR REGISTERS WITH VALUES SPECIFIED         * 01700002
*    BY THE USER.  CORE STORAGE AREAS ARE PATCHED BY A MVC            * 01750002
*    INSTRUCTION AND REGISTER CONTENTS ARE MODIFIED BY ISSUING        * 01800002
*    A SUPERVISOR CALL (SVC 97)  WITH THE IKJEGS9G MACRO.             * 01850002
*                                                                     * 01900002
*    CONTROL IS RECEIVED WHEN IKJEGPCH ISSUES A BRANCH INSTRUCTION    * 01950002
*    IKJEGASN MUST DETERMINE WHAT TYPE OF DATA THE USER HAS           * 02000002
*    SPECIFIED AS AN OPERAND.  IF NECESSARY, IKJEGASN WILL            * 02050002
*    BRANCH TO IKJEGCVT TO CONVERT DATA STRINGS TO REQUESTED FORMAT.  * 02100002
*                                                                     * 02150002
*    THE DATA IS MOVED INTO THE ADDRESS SPCEFIED BY THE USER.         * 02200002
*    HOWEVER, IF THE ADDRESS IS A REGISTER, THE ASSIGNED VALUE        * 02250002
*    IS PLACED INTO THE REGISTER BY IKJEGS9G(SVC97).                  * 02300002
*                                                                     * 02350002
*    A RETURN CODE IS SET IN REGISTER 15 AND CONTROL IS RETURNED      * 02400002
*    TO IKJEGMNL BY BRANCHING ON REGISTER 14.                         * 02450002
*                                                                     * 02500002
* ENTRY POINTS--                                                      * 02550002
*         IKJEGASN  MAIN ENTRY POINT, ENTERED FROM IKJEGPCH BY AN XCTL* 02600002
*                                                                     * 02650002
* INPUT--                                                             * 02700002
*    PCHWORK   THE ASSIGNMENT COMMAND WORKAREA INITIALIZED BY         * 02750002
*    MODULE IKJEGPCH AND CONTAINING THE FIRST OR ONLY VALUE PDE AND   * 02800002
*    THE NECESSARY VARIABLES TO PERFORM THE PATCH.                    * 02850002
*    REGISTER NINE POINTS TO THE TCOMTAB                              * 02900002
*                                                                     * 02950002
* OUTPUT--                                                            * 03000002
*    THE CONVERTED VALUE IN THE REQUESTED CORE STORAGE LOCATION OR    * 03050002
*    REGISTER.                                                        * 03100002
*    REGISTER FIFTEEN CONTAINS A RETURN CODE                          * 03150002
*                                                                     * 03200002
* EXTERNAL REFERENCES--                                               * 03250002
*         IKJEGCVT FOR CONVERSION OF ADDRESSES TO BINARY AND VALUES TO* 03300002
*         THE MACHINE FORMAT OF THE TYPE SPECIFIED.                   * 03350002
*         IKJEGI0 FOR OUTPUTTING MESSAGES.                           *  03400002
*                                                                     * 03450002
* EXITS, NORMAL--                                                     * 03500002
*         BRANCH REGISTER 14 RETURNING TO CALLER WITH A CONDITION CODE* 03550002
*         OF ZERO FOR SUCCESSFUL COMPLETION OR DIAGNOSTIC ERROR AND A * 03600002
*         RETURN CODE OF SIXTEEN (16) IF AN ATTENTION HAS BEEN        * 03650002
*         SCHEDULED.                                                  * 03700002
*                                                                     * 03750002
* EXITS, ERROR--                                                      * 03800002
*         BRANCH REGISTER 14 RETURNING TO CALLER WITH A CONDITION CODE* 03850002
*         OF TWENTY (20) FROM THE STAE RETRY ROUTINE AFTER AN ABEND,  * 03900002
*        OF 24 INDICATING THE ESTAE MACRO FAILED, 16 AN ATTN.         * 03910002
*                                                                     * 03950002
* TABLES/WORK AREAS --                                                * 04000002
*    1 TCOMTAB, POINTED AT BY REG 9 IS THE TEST COMMUNICATIONS TABLE  * 04050002
*    2 PCHWORK, A DESECT WHICH DESCRIBES PART OF THE COMMON WORKING   * 04100002
*    CORE MAINTAINED BY TEST AND POINTED AT BY 'WORKAREA' IN TCOMTAB. * 04150002
*    3 PARAMETER DESCRIPTOR LIST (PDL) PREPARED BY IKJPARSE TO        * 04200002
*    DESCRIBE THE VARIOUS FIELDS OF THE PARSED SUBCOMMAND             * 04250002
*                                                                     * 04300002
* ATTRIBUTES--                                                        * 04350002
*    REENTRANT, REFRESHABLE, PROBLEM PROGRAM.                         * 04400002
*                                                                     * 04450002
* CHARACTER CODE DEPENDENCY--                                         * 04500002
*    OPERATION OF THIS MODULE REQUIRES AND DEPENDS ON THE BIT         * 04550002
*    PATTERNS AND BINARY VALUES OF THE EBCDIC CHARACTER SET.          * 04600002
*    THE DEPENDENCY IS IN TABLE 'PCHTRTBL'. OTHER PORTIONS OF         * 04650002
*    THE MODULE REQUIRE ONLY REASSEMBLY FOR CHANGE OF CODE.           * 04700002
*                                                                     * 04750002
* NOTES--                                                             * 04800002
*    THIS MODULE REQUIRES THE STANDARD INSTRUCTION SET.               * 04850002
*                                                                     * 04900002
*********************************************************************** 04950002
IKJEGASN CSECT                                                          05000002
         SPACE                                                          05200002
* REGISTER EQUATES.                                                     05250002
         SPACE                                                          05300002
R0       EQU   0                   REGISTER EQUATE                      05350002
R1       EQU   1                   PARAMETER REGISTER                   05400002
R2       EQU   2                   REGISTER EQUATE                      05450002
R3       EQU   3                   REGISTER EQUATE                      05500002
R4       EQU   4                   REGISTER EQUATE                      05550002
R5       EQU   5                   REGISTER EQUATE                      05600002
R6       EQU   6                   REGISTER EQUATE                      05650002
R7       EQU   7                   REGISTER EQUATE                      05700002
R8       EQU   8                   REGISTER EQUATE                      05750002
R9       EQU   9                   BASE REG FOR TCOMTAB, COMM. DSECT    05800002
R10      EQU   10                  INTERNAL LINK REG FOR THIS MODULE    05850002
R11      EQU   11                  BASE REG FOR THIS PROGRAM.           05900002
R12      EQU   12                  *                                    05950002
R13      EQU   13                  PTR TO CURRENT SAVE AREA.            06000002
R14      EQU   14                                                       06050002
R15      EQU   15                                                       06100002
         SPACE 2                                                        06150002
*  DATA EQUATES FOR OPERANDS OF IMMEDIATE TYPE INSTRUCTIONS.            06200002
         SPACE                                                          06250002
NULL     EQU   0                   USED FOR BALR R,0 AND BCTR R,0.      06300002
ZERO     EQU   0                                                        06350002
ONE      EQU   1                   SYMBOLIC FOR THE NUMBER 1            06400002
THREE    EQU   3                   SYMBOLIC FOR THE QUANTITY '3'        06500002
FOUR     EQU   4                                                        06550002
EIGHT    EQU   8                                                        06600002
SIXTEEN  EQU   16                                                       06700002
TWENTY   EQU   20                  VALUE FOR COMPARE                    06750002
B1       EQU   1                   USED AS A SHIFT VALUE TO DIVIDE BY 2 06800002
PLUS     EQU   C'+'                USED IN IMMEDIATE OPERANDS           06950002
MINUS    EQU   C'-'                USED IN IMMEDIATE OPERANDS           07000002
QUOTE    EQU   C''''               USED FOR SCANNING CHAR STRINGS.      07050002
ODD      EQU   X'01'               FOR TESTING WHETHER AN ADDR IS ODD.  07100002
R10OFF   EQU   60                  OFFSET INTO SAVE AREA FOR R10        07150002
M2OFFSET EQU   80                  OFFSET INTO BUFFER FOR 2ND LEVEL MSG 07200002
LL00IDL  EQU   14                  LENGTH OF LL00 AND ID FLDS OF MSG    07250002
CGRPLEN  EQU   64                  QUANTITY OF CHAR DATA FOR ONE GROUP  07450002
         SPACE                                                          07500002
FOREPTR  EQU   8                   OFFSET TO FOREWARD PTR IN SAVE AREA  07550002
BACKPTR  EQU   4                   OFFSET TO BACKWARD PTR IN SAVE AREA  07600002
CONLNTH  EQU   0                   OFFSET INTO CONVERT OUTPUT FOR LNTH  07650002
CONDATA  EQU   1                   OFFSET INTO CONVERT OUTPUT FOR DATA  07700002
         SPACE                                                          07850002
LOTOHI   EQU   24                  SHIFT VALUE TO GET LOW BYTE TO HIGH  07900002
LOGONBIT EQU   X'40'               FOR TESTING AND ECB FOR LOGON POSTED 07950002
DWBDY    EQU   B'00000111'         USED TO TEST ADDRS FOR DBL WRD BDY.  08000002
FWBDY    EQU   B'00000011'                                FULL          08050002
HWBDY    EQU   B'00000001'                                HALF          08100002
ASNFIRST EQU   B'00010000'         FIRST TIME SWITCH FOR ASSIGN         08160002
         SPACE                                                          08200002
HEXFF    EQU   X'FF'                                                    08250002
ATTNBIT  EQU   B'01000000'                                              08300002
         SPACE                                                          08350002
*  THE FOLLOWING TABLE CONTAINS THE INTERNAL ASSEMBLER TYPE CODES.      08400002
         SPACE                                                          08450002
CHARCODE EQU   X'00'               TYPE ATTRIBUTE =CHAR                 08500002
HEXCODE  EQU   X'04'                ''     ''     =HEXADECIMAL          08550002
BINCODE  EQU   X'08'                ''     ''     =BINARY               08600002
HCODE    EQU   X'14'                ''     ''       ''   '', HALFWORD   08700002
ECODE    EQU   X'18'                ''     ''     =FLT PT, FULLWORD     08750002
PACKCODE EQU   X'30'                ''     ''     =PACKED DECIMAL       09050002
ZONECODE EQU   X'34'                ''     ''     =ZONED DECIMAL        09100002
         SPACE                                                          09150002
*  SYMBOLIC OFFSETS INTO THE MESSAGE CSECT FOR VARIOUS MESSAGE          09200002
         SPACE                                                          09250002
MSG101   EQU   101                 INVALID ADDRESS+                     09300002
MSG280   EQU   280                 **** WORD BOUNDRY REQUIRED           09350002
INST2    EQU   2                   SECOND FIXED INSERT (HALF)           09400002
INST3    EQU   3                   THIRD FIXED INSERT (FULL)            09450002
INST4    EQU   4                   FOURTH FIXED INSERT (DOUBLE)         09500002
MSG011   EQU   11                  LENGTH ERROR FOR VALUE BEGINNING--   09550002
MSG213   EQU   213                 DATA LENGTH EXCEEDS REGISTER         09650002
MSG012   EQU   12                  DATA TYPE ERROR FOR VALUE BEGINNING  09660002
MSG214   EQU   214                 INVALID DATA TYPES ARE X OR E        09670002
MSG215   EQU   215                 INVALID DATA TYPES ARE X OR D        09680002
MSG013   EQU   13                  DATA AREA CONTAINED BREAKPOINTS      09690002
MSG216   EQU   216                 BREAKPOINTS WERE DEACTIVATED---      09692002
MSG014   EQU   14                  UNABLE TO MODIFY CONTAINS OF REG     09694002
MSG283   EQU   283                 SVC97 NONZERO RETURN CODE            09696002
         EJECT                                                          09700002
         TITLE 'IKJEGASN, ''ASSIGN'' SUBCOMMAND OF TEST, INITIALIZE'    09750002
*********************************************************************** 09800002
*                                                                     * 09850002
*  BEGIN WITH ESTABLISHING ADDRABILITY, NOTE WE DO NOT STORE REGS     * 09900002
*  AS WE ARE ONLY BRANCH ENTERED. R13 WAS NOT BACKED UP...            * 09920002
*                                                                     * 09950002
*********************************************************************** 10000002
         LR    R11,R15             PICK UP ENTRY POINT ADDR FOR BASE    10100002
         USING IKJEGASN,R11                                             10150002
         USING TCOMTAB,R9                                               10200002
*        CROSS CHAINNING OF REGISTER SAVE AREAS IS CORRECT.....         10250002
         SPACE                                                          10300002
         STM   R10,R12,R10OFF(R13) SAVE BASE IN CASE OF ABEND           10350002
         SPACE                                                          10450002
         L     R10,WORKAREA        GET PTR TO WORKING CORE              10500002
         USING TSTCWORK,R10                                             10550002
         LA    R10,CWORKCMD        SET UP BASE OF SUB-CMD WORK CORE     10600002
         USING PCHWORK,R10                                              10650002
         MVI   ASNFLGS1,ZERO       INITIALIZE LOCAL FLAGS               10660002
         SPACE                                                          10700002
*********************************************************************** 11650002
*                                                                     * 11700002
*  AT THIS POINT, INITIALIZATION IS COMPLETE. THE PCHWORK DSECT HAS   * 11750002
*  BEEN SET UP BY IKJEGPCH AND PROCESSING MAY BEGIN.                  * 11800002
*        NEXT, TEST FOR THE 3 SPECIAL TYPES OF C, X, AND Z. IF NONE   * 11850002
*        OF THESE, FALL THROUGH AND GO TO CONVERT.                    * 11900002
*********************************************************************** 11950002
PCH020   EQU   *                                                        12000002
         LA    R8,VPDE                                                  12050002
         USING VALUPDE,R8                                               12100002
         CLI   VALUTYPE,HEXCODE    IS THE TYPE HEX                      12150002
         BE    XTYPE               IF HEX, BRANCH                       12200002
         CLI   VALUTYPE,CHARCODE   IS THE TYPE CHARACTER                12250002
         BE    CTYPE               IF CHARACTER, BRANCH                 12300002
         CLI   VALUTYPE,ZONECODE   IS THE TYPE ZONED DECIMAL            12350002
         BE    ZTYPE               IF ZONED, BRANCH                     12400002
         SPACE                                                          12450002
*  TYPE WAS NOT ONE OF THE SPECIAL 3.  NEXT GO CONVERT THE VALUE.       12500002
*  REGISTERS MUST BE SET UP AS FOLLOWS.                                 12550002
*        0     SET TO ZERO TO SHOW CONVERT TO BINARY                    12600002
*        1     POSITIVE ADDR OF THE VALUE PDE                           12650002
*        14    LINK REGISTER                                            12700002
*        15    ENTRY POINT OF CONVERT ROUTINE                           12750002
         SPACE                                                          12800002
         SR    R0,R0               REG 0 TO ZERO                        12850002
         LA    R1,VPDE             REG 1 = ADDR OF VALUE PDE            12900002
         L     R15,TSTCONVT        GET ADDR OF CONVERT ROUTINE          12950002
         SPACE                                                          13000002
         BALR  R14,R15             GO CONVERT A VALUE                   13050002
         LTR   R15,R15             IS RETURN CODE ZERO                  13100002
         BNZ   CVTRC               IF NON ZERO, BRANCH                  13150002
         SPACE                                                          13200002
         IC    R15,VALUTYPE        GET INPUT FORMAT TYPE                13250002
* PLEASE NOTE THAT A BRANCH TABLE HAS BEEN USED IN LIEU OF NUMEROUS   * 13300002
* TESTS FOR INPUT FORMAT TYPE.                                        * 13350002
         B     TYPEBTBL(R15)       GO TO PROPER ADDRESS ANALYSIS RTN    13400002
         SPACE                                                          13450002
         ORG   *-BINCODE           ELIMINATE SPACE FOR C AND X CODES    13500002
TYPEBTBL EQU   *                                                        13550002
         ORG   *+BINCODE           RESET LOCATION CTR FOR BRANCH TABLE  13600002
         B     BTYPE               CODE X'08' FOR BINARY                13650002
         B     XTYPE               CODE X'0C' THIS CODE NOT USED.       13700002
         B     FTYPE               CODE X'10' FOR FULLWORD FIXED PT     13750002
         B     HTYPE               CODE X'14' FOR HALFWORD FIXED PT     13800002
         B     ETYPE               CODE X'18' FOR SHORT FLT PT          13850002
         B     DTYPE               CODE X'1C' FOR LONG FLT PT           13900002
         B     AQTYPE              CODE X'20' FOR A AND Q ADDR CNSTNTS  13950002
         B     YTYPE               CODE X'24' FOR Y ADDR CONSTANTS      14000002
         B     STYPE               CODE X'28' FOR S ADDR CONSTANTS      14050002
         B     VTYPE               CODE X'2C' FOR V ADDR CONSTANTS      14100002
         B     PTYPE               CODE X'30' FOR PACKED DECIMAL        14150002
         TITLE 'IKJEGASN, ''ASSIGN'' SUBCOMMAND OF TEST, MAIN PROCESS'  14200002
PCH038   EQU   *                                                        14250002
BTYPE    EQU   *                                                        14300002
PTYPE    EQU   *                                                        14350002
         TM    A1TYPE,GENR+SFPR+LFPR   IS ADDRESS TYPE REGISTER         14400002
         BNZ   REGADDR             IF ADDR IS REG TYPE, BRANCH          14450002
PCH040   EQU   *                                                        14500002
         SR    R2,R2               CLEAR REG 2                          14550002
         L     R1,CONAREA          GET PTR TO DATA AREA                 14600002
         IC    R2,CONLNTH(R1)      GET LNTH OF DATA TO BE MOVED         14650002
         BAL   R14,PCHMOVE         GO TO MOVE DATA ROUTINE              14700002
PCH044   EQU   *                                                        14750002
         TM    VALUCHAI,HEXFF      IS THERE ANOTHER VALUE TO PROCESS    14800002
         BO    PCHRET1             IF NO MORE VALUES, BRANCH            14850002
         L     R3,A1               GET LAST OUTPUT ADDR                 14900002
         LA    R3,ONE(R2,R3)       INCRE OUTPUT ADDR BY LAST DATA LNTH  14950002
         ST    R3,A1                                                    15000002
         SPACE                                                          15050002
*  IF MORE VALUES, RESET AND GO BACK FOR NEXT                           15100002
         SPACE                                                          15150002
PCH046   EQU   *                                                        15200002
         L     R4,VALUCHAI         GET ADDR OF NEXT VALUE PDE           15250002
         MVC   VPDE(VALUPDL),ZERO(R4)  MOVE NEXT VALUE PDE TO DSECT     15300002
         OI    TSTFLGS1,PCHLSTVL   TURN ON THE LIST OF VALUES SW        15350002
         B     PCH020              GO BACK THROUGH PROCESS              15400002
         SPACE                                                          15450002
*  TURN OFF SWITCHES USED BY PATCH.                                     15500002
         SPACE                                                          15550002
PCHRET1  EQU   *                                                        15600002
         L     R15,PCHRETCD        PICK UP PRESET RETURN CODE.          15610002
PCHRET1A DS    0H                  RETURN WITH WHAT IS IN R15           15620002
         NI    TSTFLGS1,HEXFF-PCHLSTVL-TSTFIRST                         15650002
         NI    ASNFLGS1,HEXFF-ASNFIRST   TURN OFF SWITCH                15660002
         LR    R2,R15              SAVE THE RETURN CODE                 15670002
         ESTAE 0                   REMOVE THE ESTAE                     15710002
         NI    TSTFLGS4,HEXFF-TSTRERTN  TURN OFF RERTY SW.              15720002
         LR    R15,R2              RESTORE THE RETURN CODE              15730002
         L     R13,BACKPTR(R13)    GET ADDR OF PREVIOUS SAVE AREA.      15750002
         RETURN  (14,12),T,RC=(15) RETURN TO THE CALLER                 15800002
         SPACE                                                          15850002
CVTRC    EQU   *                                                        15900002
         CH    R15,HSIXTEEN        IS THE RETURN CODE 16                15950002
         BE    PCHCC16             IF RC=16, BRANCH TO RC=16 RTN.       16000002
         B     PCHRET1             OTHERWISE, BRANCH TO WRAPUP RTN.     16050002
         SPACE                                                          16100002
PCHCC16  EQU   *                                                        16150002
         LA    R15,SIXTEEN         SETUP A RETURN CODE OF 16.           16200002
         ST    R15,PCHRETCD        STORE RETURN CODE IN RC FIELD.       16250002
         B     PCHRET1             GO RETURN TO CALLER                  16300002
         EJECT                                                          16350002
*********************************************************************** 16400002
*                                                                     * 16450002
*  THE ADDRESS HAS NOW BEEN DETERMINED TO BE A CORE TYPE AND THE DATA * 16500002
*  HAS BEEN CONVERTED TO ITS PROPER CORE FORMAT. THE FOLLOWING CODE   * 16550002
*  WILL--                                                             * 16600002
*                                                                     * 16650002
*        1. INITIALIZE THE REGISTERS TO MOVE THE DATA TO ITS PROPER   * 16700002
*           LOCATION.                                                 * 16750002
*        2. TEST FOR AN ATTENTION POSTED.                             * 16800002
*        3. TEST FOR  A SCHEDULED LOGOFF.                             * 16850002
*        4. REMOVE ANY BREAKPOINT SVC'S FROM THE TARGET AREA          * 16900002
*        5. MOVE THE DATA TO THE REQUESTED LOCATION USING AN EX INSTR * 17000002
*                                                                       17050002
*        AT ENTRY,  R1  POINTS TO THE INPUT DATA ADDR MINUS ONE (1).  * 17100002
*                   R2  CONTAINS THE LENGTH OF DATA TO BE MOVED       * 17150002
*                   R14 CONTAINS THE RETURN ADDRESS.                  * 17200002
*                   A1  CONTAINS THE OUTPUT AREA ADDRESS              * 17250002
*                                                                     * 17300002
*********************************************************************** 17350002
PCHMOVE  EQU   *                                                        17400002
         LR    R7,R14              SAVE REG 14                          17450002
         BCTR  R2,NULL             DECREMENT LNTH FOR THE MVC INSTR     17500002
         SPACE                                                          17550002
         L     R3,ECBTMPA          PICKUP ADDR OF ATTENTION ECB.        17600002
         TM    ZERO(R3),ATTNBIT    IS AN ATTENTION POSTED               17650002
         BO    PCHCC16             BRANCH IF AN ATTENTION WAS POSTED    17700002
         L     R3,ECBLOG           GET PTR TO THE LOGON/LOGOFF ECB      17750002
         TM    ZERO(R3),LOGONBIT   IS LOGOFF SCHEDULED                  17800002
         BO    PCHCC16             IF LOGOFF SCHEDULED, BRANCH          17850002
         BAL   R14,ASNBPT          GO REMOVE BREAKPTS AND BRK ELEMENTS  17900002
         LTR   R15,R15             TEST RETURN CODE FROM BRK-PT RTN     17950002
         BNZ   CVTRC               IF RETURN CODE IS NON-ZERO, BRANCH   18000002
         L     R15,A1              GET A PTR TO THE OUTPUT AREA.        18050002
         EX    R2,DATAMVC1         MOVE DATA TO REQUESTED LOCATION.     18100002
         ENTRY PCHABND1            THIS AN ELEMENT OF PCH ABEND TABLE   18110002
PCHABND1 EQU   *                   MARK ADDRESS OF POTENTIAL ABEND      18150002
         SPACE                                                          18200002
         LR    R14,R7              RESTORE REG 14                       18250002
         BR    R14                 RETURN TO CALLER                     18300002
         EJECT                                                          18350002
*********************************************************************** 18400002
*                                                                     * 18450002
*  THE FOLLOWING ROUTINE PROCESSES DATA STRINGS FOR ZONED TYPE VALUES * 18500002
*  THE ROUTINE PROCESSES THE STRINGS AS FOLLOWS.                      * 18550002
*        1. DETERMINE WHETHER A SIGN WAS SPECIFIED AND SET UP TO USE  * 18600002
*           IT.  ADJUST DATA LENGTH AND PTR IF NECESSARY.             * 18650002
*        2. MOVE DATA TO CONAREA AND RETURN TO MAIN ROUTINE.          * 18700002
*                                                                     * 18750002
*********************************************************************** 18800002
         SPACE                                                          18850002
ZTYPE    EQU   *                                                        18900002
         LA    R4,NEGZONE          SET UP PTR TO A NEGATIVE ZONE.       18950002
         LH    R2,VALULNH          GET THE LENGTH OF DATA STRING        19000002
         L     R15,VALUPTR         GET ADDR OF START OF DATA STRING     19050002
         CLI   ZERO(R15),MINUS     DOES STRING BEGIN WITH A MINUS SIGN  19100002
         BE    SIGN                IF SO, GO ADJUST PTRS FOR SIGN.      19150002
         LA    R4,POSZONE          RESET PTR TO A POSITIVE ZONE         19200002
         CLI   ZERO(R15),PLUS      DOES STRING BEGIN WITH A PLUS SIGN   19250002
         BNE   NOSIGN              IF NOT, SKIP SETUP FOR SIGN.         19300002
SIGN     EQU   *                                                        19350002
         LA    R15,ONE(R15)        INCRE DATA PTR PAST SIGN.            19400002
         BCTR  R2,NULL             DECREMENT LENGTH BY 1 FOR SIGN       19450002
         SPACE                                                          19500002
NOSIGN   EQU   *                                                        19550002
         L     R1,CONAREA          GET ADDR OF CONVERT WORK AREA.       19600002
         STC   R2,CONLNTH(R1)      SET LENGTH OF CONVERTED CONSTANT     19650002
         BCTR  R2,NULL             REDUCE LENGTH FOR MVC INSTR.         19700002
         EX    R2,DATAMVC2         MOVE DATA TO CONAREA.                19750002
         LA    R1,CONDATA(R2,R1)   INCREMENT PTR TO LAST BYTE OF CON.   19800002
         MVZ   ZERO(ONE,R1),ZERO(R4)   MOVE CORRECT ZONE (SIGN) TO CON. 19850002
         B     PCH038              GO PERFORM PATCH                     19900002
         EJECT                                                          19950002
*********************************************************************** 20000002
*                                                                     * 20050002
*  THIS ROUTINE CHECKS BOUNDARY ALIGNMENT AND ADDRESS TYPE FOR        * 20100002
*  FULLWORD TYPE CONSTANTS (A, E, F, Q, AND V).                       * 20150002
*                                                                     * 20200002
*********************************************************************** 20250002
         SPACE                                                          20300002
AQTYPE   EQU   *                                                        20350002
ETYPE    EQU   *                                                        20400002
FTYPE    EQU   *                                                        20450002
VTYPE    EQU   *                                                        20500002
         TM    A1TYPE,SFPR         IS ADDR SINGLE PREC FLT PT REG       20550002
         BO    ETYP10              IF YES, GO CHECK THAT TYPE IS 'E'    20600002
         TM    A1TYPE,LFPR         IS ADDR DBL PREC FLT PT REG          20650002
         BO    DTYPE20             IF YES, GO TO ERR RTN.               20700002
         TM    A1TYPE,GENR         IS ADDR A GENERAL REGISTER           20750002
         BNO   BDYFWTST            IF NOT, GO CHECK BDY FOR CORE PATCH  20800002
REGINCRF EQU   *                                                        20850002
         MVC   ADDRINCR,GRDATA     CONSTANTS FOR GEN REGS TO TEST AREA  20900002
         L     R1,CONAREA          ADDR OF CONVERT AREA                 20950002
         L     R2,A1               GPR TO BE PATCHED INTO R2            21000002
         LA    R8,CONDATA(R1)      INCR DATA PTR PAST LENGTH BYTE       21050002
         MVC   REGDATA,0(R8)       PLACE PATCH VALUE IN FULLWORD        21100002
         L     R8,REGDATA          AND THEN INTO REGISTER EIGHT         21150002
         L     R7,PPTCB            TARGET TCB ADDR FOR SVC97            21200002
         BAL   R14,ATNCHK          CHECK FOR ATN OR LOGOFF IN PROGRESS  21250002
         IKJEGS9G GPR,TCBADDR=(R7),VALUE=(R8),REGNO=(R2),MF=(E,ASNSVCL) 21300002
CHKSVC   EQU   *                                                        21350002
         LTR   R15,R15             TEST SVC RETURN CODE                 21400002
         LA    R8,VPDE             INSURE ADDRESSABILITY TO VALUE PDE   21450002
         BNZ   SVCMSG              BRANCH NONZERO                       21500002
         TM    VALUCHAI,HEXFF      ARE THERE MORE VALUES TO PROCESS     21550002
         BO    PCHRET1             IF NO MORE VALUES, BRANCH            21600002
         L     R2,A1               GET REGISTER NUMBER JUST PATCHED     21650002
         AH    R2,ADDRINCR         ADD  THE ADDR INCREMENT              21700002
         CH    R2,MAXRADDR         IS UPDATED REG  NO. GREATER THAN MAX 21750002
         ST    R2,A1               SAVE UPDATED ADDR, ANTICIPATING OK   21800002
         BNH   PCH046              IF REG NO. NOT GT MAX, BRANCH        21850002
         SR    R2,R2               OTHER WISE, RESET ADDR TO ZERO       21900002
         ST    R2,A1               SAVE RESET REG ADDRESS               21950002
         B     PCH046              GO PROCESS NEXT VALUE                22000002
         SPACE                                                          22050002
ETYP10   EQU   *                                                        22100002
         TM    VALUTYPE,ECODE      IS DATA TYPE 'E'                     22150002
         BO    REGINCRE            IF 'E', BRANCH                       22200002
ETYP20   EQU   *                                                        22250002
         LA    R2,MSG012           R2= MSG NO. 12                       22300002
         LA    R3,MSG214           R3= SECOND LEVEL 214                 22350002
         B     MSGOUTV             OUTPUT INDICATED MSG (VPDE INSERT)   22360002
         EJECT                                                          22400002
*********************************************************************** 22450002
*                                                                     * 22500002
*  THE FOLLOWING CODE TESTS FOR AN ATTENTION                          * 22550002
*                                                                     * 22600002
*********************************************************************** 22650002
         SPACE                                                          22700002
ATNCHK   EQU   *                                                        22750002
         L     R3,ECBTMPA          GET ADDR OF ATTENTION ECB.           22800002
         TM    ZERO(R3),ATTNBIT    IS AN ATTENTION POSTED               22850002
         BO    PCHCC16             IF YES, GO TO CLEANUP ROUTINE.       22900002
         L     R3,ECBLOG           GET PTR TO LOGON ECB                 22950002
         TM    ZERO(R3),LOGONBIT   IS LOGOFF SCHEDULED                  23000002
         BO    PCHCC16             IF YES, BRANCH                       23050002
         BR    R14                 RETURN                               23100002
         SPACE                                                          23150002
SVCMSG   EQU   *                                                        23200002
         LA    R2,SIXTEEN          IS THE SVC RETURN CODE 16 OR ABOVE.  23210002
         CR    R15,R2              R15 GREATER THAN 16?                 23220002
         BH    PCHRET1A            EXIT TO MNL.                         23230002
         LA    R2,MSG014           R2= FIRST LEVEL MSG NO 14            23250002
         LA    R3,MSG283           R3= SECOND LEVEL MSG NO 283          23300002
         B     MSGOUT              OUTPUT THE MSG NO INSERT             23350002
         EJECT                                                          23450002
BDYFWTST EQU   *                                                        23500002
         TM    A1+THREE,FWBDY      TEST IF ADDRESS IS A FULL WORD BDY   23550002
         BZ    PCH040              IF BOUNDARY OK, BRANCH               23600002
         TM    TSTFLGS1,PCHLSTVL   IS VALUE PART OF A LIST OF VALUES    23650002
         BZ    FBDYERR             IF ADDR BDY IS WRONG, GO TO ERR RTN. 23700002
         SPACE                                                          23750002
*********************************************************************** 23800002
*                                                                     * 23850002
*  IF VALUE IS PART OF A LIST OF VALUES, ROUND ADDR UP TO NEXT FULL   * 23900002
*  BOUNDARY BY ADDING 3 THEN ROUNDING DOWN TO AN ADDR THAT ENDS WITH  * 23950002
*  TWO BINARY ZERO'S.                                                 * 24000002
*                                                                     * 24050002
*********************************************************************** 24100002
         SPACE                                                          24150002
         L     R15,A1              GET CURRENT ADDRESS                  24200002
         AL    R15,FTHREE          ADD 3 TO INCRE TO OR PAST NXT F BDY  24250002
         ST    R15,A1              REPLACE ADDRESS                      24300002
         NI    A1+THREE,HEXFF-FWBDY  ROUND ADDR DOWN TO EXACT BDY       24350002
         B     PCH040              GO PATCH A CORE LOCATION             24400002
         SPACE 2                                                        24450002
DTYPE    EQU   *                                                        24500002
         TM    A1TYPE,LFPR         IS ADDR DBL PRECISION FLT PT REG     24550002
         BO    REGINCRD            IF YES, GO SET UP CORRECT CONSTANTS  24600002
         TM    A1TYPE,GENR+SFPR    IS ADDR A 4 BYTE REG TYPE            24650002
         BNZ   LENERR              IF 4 BYTE REG TYPE, BRANCH           24700002
         TM    A1+THREE,DWBDY      IS OUTPUT ADDR ON A DBL WORD BDY     24750002
         BZ    PCH040              IF DBL WORD BDY, BRANCH              24800002
         SPACE                                                          24850002
         TM    TSTFLGS1,PCHLSTVL   IS THIS VALUE PART OF A LIST.        24900002
         BZ    DBDYERR             IF NOT, BRANCH TO ERROR ROUTINE.     24950002
         L     R15,A1              GET ADDR TO BE ROUNDED               25000002
         AL    R15,FSEVEN          INCRE IT TO OR PAST NXT DBL WORD BDY 25050002
         ST    R15,A1              REPLACE ORIGINAL ADDRESS             25100002
         NI    A1+THREE,HEXFF-DWBDY  ROUND ADDR DOWN TO EXACT BDY       25150002
         B     PCH040              GO PATCH AREA OF CORE                25200002
         SPACE                                                          25250002
DTYPE20  EQU   *                                                        25300002
         LA    R2,MSG012           R2= FIRST LEVEL MSG NO 12            25350002
         LA    R3,MSG215           R3= SECOND LEVEL MSG NO 215          25400002
         B     MSGOUTV             OUTPT THE MSG (VPDE INSERT)          25410002
         SPACE 2                                                        25450002
REGADDR  EQU   *                                                        25500002
         L     R3,CONAREA          GET ADDR OF CONVERT OUTPUT AREA      25550002
         USING CONAREA1,R3                                              25600002
         SR    R2,R2               CLEAR REG AND                        25650002
         IC    R2,CONLNTH+CONAREA1 GET LENGTH OF CONVERTED DATA         25700002
         TM    A1TYPE,LFPR         IS ADDR DBL PRECISION FLT PT REG     25750002
         BO    REGADDR1            IF REG ADDR IS 'D' TYPE, BRANCH      25800002
         CH    R2,HFOUR            COMPARE CONSTANT LENGTH TO 4.        25850002
         BE    REGADDR2            IF EQUAL, GO DETERMINE REG TYPE      25900002
         BH    LENERR              IF HIGH, GO TO ERROR ROUTINE.        25950002
         LCR   R2,R2               MAKE LENGTH NEGATIVE.                26000002
         L     R4,CONDATA+CONAREA1  GET LEFT JUSTIFIED CONSTANT         26050002
         AH    R2,HFOUR            SUBTRACT LENGTH FROM 4.              26100002
         SLL   R2,THREE            MULTIPLY LENGTH BY 8 TO GET BIT LNTH 26150002
         SRL   R4,ZERO(R2)         RIGHT JUSTIFY CONSTANT.              26200002
         ST    R4,CONDATA+CONAREA1 STORE RIGHT JUSTIFIED CONSTANT       26250002
         MVI   CONLNTH+CONAREA1,FOUR  STORE LENGTH IN LNTH FIELD        26300002
REGADDR2 EQU   *                                                        26350002
         TM    A1TYPE,GENR         IS REG TYPE GENERAL REGISTER         26400002
         BO    REGINCRF            IF GENERAL REG, BRANCH               26450002
         CLI   VALUTYPE,HEXCODE    IS THE DATA TYPE HEX                 26500002
         BE    REGINCRE            IF HEX, BRANCH                       26550002
         B     ETYP20              IF NOT, GO TO ERROR MSG ROUTINE      26600002
         SPACE                                                          26650002
REGADDR1 EQU   *                                                        26700002
         CLI   VALUTYPE,HEXCODE    IS THE DATA TYPE HEX                 26750002
         BNE   DTYPE20             IF NOT, BRANCH TO ERROR MSG RTN      26800002
         CH    R2,HEIGHT               COMPARE LENGTH TO 8.             26850002
         BE    REGINCRD                IF 8, GO TO REG PATCH ROUTINE.   26900002
         BH    LENERR                  IF GREATER THAN 8, GO TO ERROR.  26950002
         SPACE                                                          27000002
*  IF ADDR IS FOR A DBL PRECISION FLOATING PT REG AND LENGTH IS LESS    27050002
*     THAN 8, RIGHT JUSTIFY THE CONSTANT AND PAD WITH ZEROS.            27100002
         SPACE                                                          27150002
         LCR   R2,R2               MAKE CONSTANT LENGTH NEGATIVE,       27200002
         LM    R4,R5,CONDATA+CONAREA1  PICK UP THE CONVERTED DATA       27250002
         SPACE                                                          27300002
*  THE NEXT INSTRUCTION EFFECTIVELY SUBSTRACTS THE LENGTH FROM 8.       27350002
         SPACE                                                          27400002
         AH    R2,HEIGHT           ADD NEG LENGTH TO PLUS 8.            27450002
         SLL   R2,THREE            MULTIPLY NEG LNTH BY 8 FOR BIT LNTH  27500002
         SRDL  R4,ZERO(R2)         RIGHT JUSTIFY THE CONSTANT           27550002
         STM   R4,R5,CONDATA+CONAREA1  JUSTIFIED/PADDED DATA TO CONAREA 27600002
         MVI   ZERO(R3),EIGHT      SET LENGTH FIELD TO 8.               27650002
REGINCRD EQU   *                                                        27700002
         DROP  R3                  FREE BASE USED FOR CVT OUTPUT AREA   27750002
         MVC   ADDRINCR,FPRDATA                                         27800002
         L     R1,CONAREA          ADDRESS OF CONVERT AREA              27850002
         L     R2,A1               FPR REGISTER TO BE PATCHED INTO R2   27900002
         LA    R8,CONDATA(R1)      INCR DATA PTR PAST LENGTH BYTE       27950002
         L     R7,PPTCB            TARGET TCB ADDR FOR SVC97            28000002
         BAL   R14,ATNCHK          CHECK FOR ATN OR LOGOFF IN PROGRESS  28050002
         IKJEGS9G FPR,TCBADDR=(R7),VALUE=(R8),REGNO=(R2),MF=(E,ASNSVCL) 28100002
         B     CHKSVC              CHECK RETURN CODE FROM SVC97         28150002
         SPACE                                                          28200002
REGINCRE EQU   *                                                        28250002
         OI    A1+THREE,ODD        MAKE REG NUMBER ODD FOR 'E' TYPE     28300002
         B     REGINCRD            GO TO REG PATCH ROUTINE              28350002
         EJECT                                                          28400002
*********************************************************************** 28450002
*                                                                     * 28500002
*  HEX PATCH ROUTINE, DATA IS CONVERTED TO HEX BY IKJEGCVT 4 BYTES    * 28550002
*  AT A TIME. THE LAST OR ONLY FIELD MAY BE LESS THAN 4 BYTES.        * 28600002
*                                                                     * 28650002
*********************************************************************** 28700002
         SPACE                                                          28750002
XTYPE    EQU   *                                                        28800002
         MVC   DUMMYPDE(VALUPDL),VPDE  COPY THE PDE FOR MODIFICATION    28850002
         LH    R2,VALULNH          GET LNTH OF INPUT STRING             28900002
         L     R15,VALUPTR         GET PTR TO INPUT STRING              28950002
         LR    R4,R2               SAVE THE LENGTH OF THE STRING.       29000002
         BCTR  R2,NULL             REDUCE LENGTH FOR TR INSTR.          29050002
         EX    R2,PCHTR            TRANSLATE TO UPPER CASE.             29100002
         LA    R2,EIGHT            SET LIMIT FOR FIELD LENGTH           29150002
         CR    R4,R2               IS INPUT LENGTH GREATER THAN 8       29200002
         BNH   XTYPE04             IF NOT GREATER THAN 8, BRANCH        29250002
         STH   R2,DUMMYPDE+(VALULNH-VALUPDE)  IF GT 8, CNVT 8 AT TIME   29300002
         SPACE                                                          29350002
*  INITIALIZE TO CONVERT A VALUE TO HEX.                                29400002
         SPACE                                                          29450002
XTYPE04  EQU   *                                                        29500002
         L     R2,DUMMYPDE+(VALUPTR-VALUPDE)  PICK UP PTR TO DATA       29550002
         LA    R5,HOLDAREA+ONE     R5=ADDR OF TEMPORARY HOLDING AREA    29600002
         SR    R0,R0               R0=0                                 29650002
         LA    R1,DUMMYPDE         SET PTR TO VALUE PDE FOR CONVERT     29700002
HEXCVT   EQU   *                                                        29750002
         L     R15,TSTCONVT        R15=ADDR OF CONVERT ROUTINE          29800002
         BALR  R14,R15             GO TO CONVERT RTN                    29850002
         LTR    R15,R15            TEST RETURN CODE FROM IKJEGCVT       29900002
         BNZ   CVTRC               IF NON-ZERO, GO ANALYZE              29950002
         L     R15,CONAREA         PICK OF ADDR OF CONVET OUTPUT AREA   30000002
         USING CONAREA1,R15                                             30050002
         LH    R3,DUMMYPDE+(VALULNH-VALUPDE)  GET LNTH OF INPUT         30100002
         L     R14,CONAREA1+CONDATA  PICK UP CONVERTED DATA             30150002
         DROP  R15                                                      30200002
         ST    R14,ZERO(R5)        SAVE IT TEMPORARILY IN HOLD AREA     30250002
         SPACE                                                          30300002
*********************************************************************** 30350002
*  IF THERE ARE MORE THAN 8 BYTES OF INPUT, ADJUST THE POINTERS AND   * 30400002
*   CONTINUE IN THIS LOOP UNTIL ALL DATA HAS BEEN PROCESSED.          * 30450002
*********************************************************************** 30500002
         SPACE                                                          30550002
         SR    R4,R3               DECREMENT AMT TO CONVERT BY AMT DONE 30600002
         BZ    XTYPE08             WHEN ALL BYTES ARE CONVERTED, BRANCH 30650002
         AR    R2,R3               INCREMENT PTR TO INPUT DATA FOR NEXT 30700002
         ST    R2,DUMMYPDE+(VALUPTR-VALUPDE)  UPDATED ADDR IN VALUPDE   30750002
         LA    R5,FOUR(R5)         INCREMENT CUR HOLD AREA PTR          30800002
         CH    R4,HEIGHT           IS REMAINDER LESS THAN 8.            30850002
         BNL   HEXCVT              IF MORE TO CONVERT, BRANCH           30900002
         STH   R4,DUMMYPDE+(VALULNH-VALUPDE)  STORE RMNG LNTH IN PDE    30950002
         B     HEXCVT              GO CONVERT REMAINING DATA            31000002
REGHEX   EQU   *                                                        31050002
         CH    R3,HEIGHT           IS LENGTH OF CONVERTED DATA GT 8.    31100002
         BNL   LENERR              IF 8 OR GREATER, GO TO ERROR RTN     31150002
         LM    R14,R15,HOLDAREA+ONE  PICK UP CONVERTED DATA             31200002
         SRDL  R14,FOUR            RIGHT JUSTIFY CONSTANT               31250002
         STM   R14,R15,HOLDAREA+ONE  PLACE DATA BACK INTO HOLDING AREA  31300002
         L     R15,CONAREA         GET ADDR OF CONVERT OUTPUT AREA      31350002
         LA    R3,ONE(R3)          INCRMENT LENGTH OF OUTPUT DATA       31400002
         B     NOTODD              GO TO COMMON HEX PREP ROUTINE.       31450002
         SPACE                                                          31500002
*********************************************************************** 31550002
*                                                                     * 31600002
*  THE FOLLOWING ROUTINE IS ENTERED WHEN ALL INPUT BYTES HAVE BEEN    * 31650002
*  CONVERTED TO HEX.                                                  * 31700002
*  AT ENTRY, REG 5 POINTS TO THE NEXT AREA OF HOLDAREA                * 31750002
*            REG 14 CONTAINS THE LAST CONVERTED BYTES                 * 31800002
*            REG 15 POINTS TO THE CONVERT AREA                        * 31850002
*                                                                     * 31900002
*********************************************************************** 31950002
         SPACE                                                          32000002
XTYPE08  EQU   *                                                        32050002
         LH    R3,VALULNH          GET TOTAL LNTH OF INPUT STRING       32100002
         SRL   R3,B1               DIVIDE LNTH BY 2, DISCARD REMAINDER  32150002
         TM    VALULNH+ONE,ODD     IS LNTH AN ODD NUMBER OF BYTES       32200002
         BZ    NOTODD              IF NOT, BRANCH                       32250002
         SLL   R14,FOUR            ELIMINATE LEADIN HALF BYTE 0         32300002
         ST    R14,ZERO(R5)        STORE LAST DATA AFTER ADJUSTMENT     32350002
         TM    A1TYPE,GENR+SFPR+LFPR   IS ADDRESS REG TYPE              32400002
         BNZ   REGHEX              IF NOT, TRULY REG, BRANCH            32450002
         L     R2,A1               GET RECIEVING ADDRESS                32500002
         LA    R2,ZERO(R3,R2)      POINT TO LAST BYTE OF TARGET AREA    32550002
         LA    R5,HOLDAREA+ONE     PICK UP ADDR OF HOLDING AREA         32600002
         LA    R4,ZERO(R3,R5)      POINT TO LAST BYTE IN HOLDING AREA   32650002
         SPACE                                                          32700002
*  IF THE NUMBER OF HEX CHARACTERS SUPPLIED IS ODD, GET ONE HEX DIGIT   32750002
*     FROM THE LAST BYTE OF THE TARGET AREA TO FILL OUT THE LAST BYTE   32800002
*         OF PATCH DATA.                                                32850002
         SPACE                                                          32900002
         MVN   ZERO(ONE,R4),ZERO(R2)   MOVE IN 2ND HALF.                32950002
         LA    R3,ONE(R3)          INCREMENT COUNT FOR DATA             33000002
NOTODD   EQU   *                                                        33050002
         L     R15,CONAREA         GET PTR TO CONVERT OUTPUT AREA       33100002
         USING CONAREA1,R15                                             33150002
         STC   R3,CONAREA1         STORE DATA COUNT IN CONVERT LEN FLD  33200002
         BCTR  R3,NULL             DECREMENT COUNT FOR MVC INSTR        33250002
         EX    R3,DATAMVC3         MOVE DATA FROM HOLD TO CONVERT AREA  33300002
         B     PCH038              GO PROCESS DATA.                     33350002
         DROP  R15                                                      33400002
         EJECT                                                          33450002
*********************************************************************** 33500002
*                                                                     * 33550002
*  THE FOLLOWING ROUTINE HANDLES THE TWO BYTE CONSTANTS SUCH AS H, S, * 33600002
*  AND Y.  THE ROUTINE FIRST CHECKS WHETHER THE ADDRESS IS REGISTER OR* 33650002
*  CORE. FOR CORE TYPES THE BOUNDARY ALIGNMENT IS CHECKED AND FOR     * 33700002
*  LISTS OF VALUES, ADJUSTED TO A HALF WORD BOUNDARY.  FOR REGISTER   * 33750002
*  ADDRESSES, A FURTHER CHECK IS MADE TO SEE IF THE CONSTANT TYPE IS  * 33800002
*  'H'.FOR H TYPE CONSTANTS, THE DATA IS EXTENDED TO FULLWORD SIZE TO * 33850002
*  ACCOUNT FOR THE SIGN. S OR Y TYPE CONSTANTS ARE HANDLED AS BYTE    * 33900002
*  CONSTANTS.  FLOATING POINT REGISTER ADDRESSES ARE INVALID.         * 33950002
*                                                                     * 34000002
*********************************************************************** 34050002
         SPACE                                                          34100002
HTYPE    EQU   *                                                        34150002
STYPE    EQU   *                                                        34200002
YTYPE    EQU   *                                                        34250002
         TM    A1TYPE,SFPR         IS ADDRESS A SHORT FLT PT REG TYPE   34300002
         BO    ETYP20              IF YES, BRANCH TO ERROR RTN.         34350002
         TM    A1TYPE,LFPR         IS ADDRESS A LONG FLT PT REG TYPE    34400002
         BO    DTYPE20             IF YES, BRANCH                       34450002
         TM    A1TYPE,GENR         IS ADDRESS A GENERAL REGISTER TYPE   34500002
         BO    HREGADDR            IF GENERAL REGISTER TYPE, BRANCH     34550002
         TM    A1+THREE,HWBDY      IS ADDRESS ON A HALFWORD BDY         34600002
         BZ    PCH040              IF HALF WORD BDY, BRANCH             34650002
         TM    TSTFLGS1,PCHLSTVL   IF DATA PART OF A LIST OF VALUES     34700002
         BNO   HBDYERR             IF NOT, GO TO ERROR TRN              34750002
         SPACE                                                          34800002
*  ADDR HAS BEEN FOUND TO BE A BYTE BDY, AND DATA PART OF A LIST OF   * 34850002
*  VALUES.  THE ADDRESS MUST BE ROUNDED UP TO THE NEXT HALFWORD BDY.  * 34900002
         SPACE                                                          34950002
         L     R15,A1              GET CURRENT ADDRESS                  35000002
         AL    R15,FONE            INCREMENT ADDR TO NEXT HALFWORD BDY  35050002
         ST    R15,A1              SAVE UPDATED ADDR                    35100002
         B     PCH040              GO DO PATCH                          35150002
         SPACE 2                                                        35200002
HREGADDR EQU   *                                                        35250002
         CLI   VALUTYPE,HCODE      IS THE CONSTANT TYPE 'H'             35300002
         BNE   REGADDR             IF NOT, BRANCH TO BYTE TYPE RTN.     35350002
         L     R3,CONAREA          PICK UP ADDR OF CONVERT OUTPUT AREA  35400002
         USING CONAREA1,R3                                              35450002
         LH    R4,CONAREA1+ONE     LOAD 2 BYTE CONSTANT INTO 4 BYTE REG 35500002
         ST    R4,CONAREA1+ONE     STORE EXTENDED CONSTANT BACK.        35550002
         MVI   ZERO(R3),FOUR       SET CONSTANTS LENGTH TO 4.           35600002
         B     REGINCRF            GO PROCESS AS A FULLWORD CONSTANT.   35650002
         DROP  R3                                                       35700002
         EJECT                                                          35750002
*********************************************************************** 35800002
*  ROUTINE TO HANDLE CHARACTER TYPE DATA.                             * 35850002
*        THIS DATA HAS NO MAXIMUM LENGTH RESTRICTION, AND IF THE INPUT* 35900002
*        DATA STRING IS LONGER THAN 64 BYTES, IT MUST BE PROCESSED    * 35950002
*        IN GROUPS OF 63 OR 64 CHARACTERS AT A TIME. THE GROUP SIZE   * 36000002
*        VARIES TO ALLOW EACH STRING BEING PROCESSED TO CONTAIN ONLY  * 36050002
*        PAIRS OF SINGLE QUOTES--- SINCE SINGLE QUOTES ARE A SPECIAL  * 36100002
*        CASE.                                                        * 36150002
*********************************************************************** 36200002
CTYPE    EQU   *                                                        36250002
         L     R2,VALUPTR          PTR TO INPUT STRING                  36300002
         LH    R3,VALULNH          LNTH OF INPUT STRING                 36350002
CTYPE04  EQU   *                                                        36400002
         LA    R4,CGRPLEN          SET UP MAX QUANTITY FOR 1 PASS       36450002
         STH   R3,A1L              SAVE ORIGINAL OR REMAINING LENGTH    36500002
         CR    R3,R4               IS LENGTH OF DATA STRING GT MAX      36550002
         BNH   CTYPE20             IF LENGTH NOT GT MAX, BRANCH         36600002
         LR    R3,R4               SET CURRENT LENGTH TO MAX            36650002
         STH   R3,VALULNH          SAVE LNTH TO BE USED FOR THIS GROUP  36700002
         LA    R5,ZERO(R2,R3)      SET UP PTR TO 1ST BYTE OF NXT GROUP  36750002
         CLI   ZERO(R5),QUOTE      IS THAT CHARACTER A SINGLE QUOTE     36800002
         BNE   CTYPE20             IF NOT, BRANCH                       36850002
         BCTR  R5,NULL             BACK UP PTR TO LAST BYTE OF THIS GRP 36900002
         CLI   ZERO(R5),QUOTE      IS THIS CHARACTER A QUOTE            36950002
         BNE   CTYPE20             IF NOT, BRANCH                       37000002
         SPACE                                                          37050002
*  IF QUOTES EXTEND ACROSS GROUPS, THE FOLLOWING CODE ADJUSTS THE       37100002
*     GROUP LENGTH AS NECESSARY TO INSURE THE GROUP TO BE PROCESSED     37150002
*        CONTAINS ONLY PAIRED SINGLQUOTES. (NO. OF QUOTES/GRP NOT ODD)  37200002
         SPACE                                                          37250002
         LR    R5,R2               GET PTR TO START OF DATA STRING      37300002
         SR    R15,R15             INITIALZE QUOTE COUNTER TO ZERO      37350002
CTYPE08  EQU   *                                                        37400002
         CLI   ZERO(R5),QUOTE      IS THIS DATA CHAR A QUOTE            37450002
         BNE   CTYPE12             IF NOT, BRANCH                       37500002
         LA    R15,ONE(R15)        IF CHAR WAS A QUOTE, INCRE COUNTER   37550002
CTYPE12  EQU   *                                                        37600002
         LA    R5,ONE(R5)          INCRE DATA STRING PTR TO NXT CHAR    37650002
         BCT   R4,CTYPE08          IF MORE CHARACTERS TO CHECK, BRANCH  37700002
         LA    R4,ONE              MAKE A MASK TO ISOLATE LOW ORDER BIT 37750002
         NR    R4,R15              ISOLATE LOW ORDER BIT OF QUOTE COUNT 37800002
         SR    R3,R4               SUBTRACT 1 FROM LNTH IF COUNT ODD    37850002
         STH   R3,VALULNH          STORE ADJUSTED LENGTH IN PDE         37900002
         B     CTYPE20             BO PROCESS THIS GROUP                37950002
         EJECT                                                          38000002
*********************************************************************** 38050002
*                                                                     * 38100002
*  THE FOLLOWING ROUTINE SCANS CHARACTER CONSTANTS FOR SINGLE QUOTES. * 38150002
*  USERS MUST SPECIFY TWO SINGLE QUOTES FOR EACH ONE DESIRED IN THE   * 38200002
*  OUTPUT. THIS ROUTINE SQUEEZES OUT THE EXTRA QUOTES AND MOVES THE   * 38250002
*  PROCESSED CONSTANT TO THE TEMPORARY HOLD AREA. THE CONVERT AREA IS * 38300002
*  NOT USED BECAUSE THE CONSTANT AFTER PROCESSING MAY BE UP TO 64     * 38350002
*  BYTES LONG. IN THIS ROUTINE, REGS ARE USED AS FOLLOWS--            * 38400002
*        R1    POINTS TO NEXT AVAILABLE BYTE IN HOLDARA.              * 38450002
*        R2    POINTS TO THE NEXT INPUT BYTE TO BE TESTED.            * 38500002
*        R3    CONTIANS VALUE LENGTH, IT IS DECREMENTED 1 FOR EACH '' * 38550002
*        R4    CONAINS INCREMENT FOR BXLE INSTR                       * 38600002
*        R5    CONTAINS COMPAREND FOR BYLE INSTR (PTR TO END OF INPUT * 38650002
*        R14   USED TO CALCULATE NUMBER OF BYTES SCANED               * 38700002
*        R15   POINTS TO BEGINNING BYTE OF CURRENT SCAN.              * 38750002
*                                                                     * 38800002
*********************************************************************** 38850002
         SPACE                                                          38900002
CTYPE20  EQU   *                                                        38950002
         L     R1,CONAREA          GET PTR TO CONVERTED DATA AREA       39000002
         LA    R5,ZERO(R3,R2)      SET UP BXLE COMPAREND AS INPUT ADDR  39050002
         LA    R4,ONE              SET BXLE INSTR INCRE                 39100002
         SR    R5,R4                   + LENGTH OF DATA - 1.            39150002
         LR    R15,R2              SAVE STARTING POINT IN STRING.       39200002
         SPACE                                                          39250002
CLOOP    EQU   *                                                        39300002
         CLI   ZERO(R2),QUOTE      IS THIS CHARACTER A SINGLE QUOTE     39350002
         BE    QUOTEFND            BRANCH IF CHAR=QUOTE                 39400002
CLOOP1   EQU   *                                                        39450002
         BXLE  R2,R4,CLOOP         INCRE STRING PTR, LOOP IF MORE TO DO 39500002
         SPACE                                                          39550002
         LR    R14,R2              CALCULATE NUMBER OF BYTES SCANNED    39600002
         SR    R14,R15                 AS CUR STRING PTR - BEGIN PTR.   39650002
         BZ    DONE                IS RESULT IS 0, BRANCH AROUND MVC.   39700002
         BCTR  R14,NULL            DECRE COUNT FOR MVC INSTR            39750002
         EX    R14,DATAMVC2        MOVE REMAINING DATA TO HOLDAREA      39800002
DONE     EQU   *                                                        39850002
         L     R1,CONAREA          GET PTR TO CONVERTED DATA AREA       39900002
         STC   R3,CONLNTH(R1)      STORE LNTH IN CONVERTED DATA AREA    39950002
         SPACE                                                          40000002
*  SETUP TO DO PATCH BY DETERMINING WHETHER ADDRESS IS REG OR CORE      40050002
         TM    A1TYPE,GENR+SFPR+LFPR   IS ADDRESS TYPE REGISTER         40100002
         LR    R5,R3               GET ADJUSTED DATA LNTH OF LAST PATCH 40150002
         BNZ   REGADDR             IF REGISTER TYPE, BRANCH             40200002
         LR    R2,R3               SET UP LENGTH FOR  THE PCHMOVE RTN   40250002
         BAL   R14,PCHMOVE         GO MOVE DATA                         40300002
         LH    R3,A1L              GET REMAINING LNTH OF DATA STRING    40350002
         SH    R3,VALULNH          SUBTRACT THE LNTH JUST PROCESSED     40400002
         BZ    PCH044              IF ALL DATA PROCESSED, BRANCH        40450002
         SPACE                                                          40500002
*  UPDATE THE INPUT AND OUTPUT POINTERS FOR THE DATA ALREADY USED.      40550002
         SPACE                                                          40600002
         L     R2,VALUPTR          GET CURRENT OUTPUT ADDRESS           40650002
         L     R4,A1               GET CURRENT OUTPUT ADDRESS           40700002
         AH    R2,VALULNH          INCRE PTR PAST DATA PROCESSED        40750002
         AR    R4,R5               ADD LNTH OF AREA JUST PATCHED        40800002
         ST    R2,VALUPTR          SAVE UPDATED DATA ADDR IN VALUE PDE  40850002
         STH   R3,VALULNH          SAVE UPDATED LNTH IN VALUE PDE       40900002
         ST    R4,A1               STORE UPDATED OUTPUT ADDRESS         40950002
         B     CTYPE04             GO BACK AND PROCESS MORE OF STRING   41000002
         SPACE                                                          41050002
*********************************************************************** 41100002
*                                                                     * 41150002
*  THIS ROUTINE IS ENTERED WHEN THE CHARACTER SCAN ROUTINE FINDS A    * 41200002
*  SINGLE QUOTE. IT MOVES THE SCANNED DATA TO HOLDAREA, ADJUSTS THE   * 41250002
*  NECESSARY PTRS, AND DECREMENTS THE VALUES LENGTH BY 1.             * 41300002
*                                                                     * 41350002
*********************************************************************** 41400002
         SPACE                                                          41450002
QUOTEFND EQU   *                                                        41500002
         LR    R14,R2              CALCULATE NUMBER OF BYTES SCANNED    41550002
         SR    R14,R15                 AS CUR STRING PTR - BEGIN PTR.   41600002
         EX    R14,DATAMVC2        MOVE SCANNED DATA TO CUR HOLD POS.   41650002
         BCTR  R3,NULL             DECREMENT VALUES LENGTH BY 1.        41700002
         AR    R2,R4               INCREMENT STRING PTR PAST QUOTE.     41750002
         LA    R1,ONE(R14,R1)      INCREMENT CUR HOLD AREA PTR          41800002
         LA    R15,ONE(R2)         RESET BEGIN PTR TO ENXT BYTE TO SCAN 41850002
         B     CLOOP1              GO BACK TO SCAN LOOP AT BXLE INSTR.  41900002
         EJECT                                                          41950002
*********************************************************************** 42000002
*                                                                     * 42050002
*    THIS SECTION OF CODE CONTAINS ALL THE CALLS TO IKJEGIO             42100002
*                                                                     * 42450002
*********************************************************************** 42500002
         SPACE                                                          44150002
MSGOUT   DS    0H                  OUTPUT SINGLE MSG NO INSERT          44152002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM AREA        44154002
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),ID=ASN03,MF=(E,TSTIOPRM)   44156002
         B     RETABLE(R15)        CHECK IO RETUNR CODES                44158802
         SPACE                                                          44159202
MSGOUTV  DS    0H                  OUTPTU MSG WITH VPDE INSERT (R8)     44159602
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM AREA         44159702
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(VPDE,(R8)),       *44159802
               ID=ASN03,MF=(E,TSTIOPRM)   INVOKE IO                     44159902
         B     RETABLE(R15)        CHECK IO RETURN CODES                44173202
         SPACE                                                          44183202
MSGOUTAI DS    0H                  MSG APDE INSERT + STATIC INSERT      44185202
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM AREA         44185602
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(APDE,APDEADDR),   *44186002
               INST21=(NUM,(R4)),ID=ASN03,MF=(E,TSTIOPRM) INVOKE IO     44186402
         B     RETABLE(R15)        CHECK IO RETURN CODES                44186502
         SPACE                                                          44186602
RETABLE  DS    0H                  RETURN CODE CHECK TABLE              44191002
         B     RETMNL00            RETURN TO MNL WITH ZERO IO=0         44193002
         B     RETMNL00            RETURN TO MNL WITH ZERO IO=4         44195402
         B     RETMNL00            RETURN TO MNL WITH ZERO IO=8         44195502
         B     RETMNL00            RETURN TO MNL WITH ZERO IO=12        44209102
         B     PCHRET1A            RETURN TO MNL WITH R C IO=16         44219102
         B     PCHRET1A            RETURN TO MNL WITH R C IO=20         44221102
         B     PCHRET1A            RETURN TO MNL WITH R C IO=24         44221502
         SPACE                                                          44221902
RETMNL00 DS    0H                  RETURN TO MNL WITH A ZERO            44222302
         XC    PCHRETCD(L'PCHRETCD),PCHRETCD CLEAR RETURN CODE          44222702
         B     PCHRET1             RETURN TO MNL WITH ZERO              44227202
         EJECT                                                          44231902
HBDYERR  EQU   *                                                        44236402
         LA    R4,INST2            R4= INSERT NO 2 (HALF)               44386402
         B     SETMSGA             OUTPUT THE MESSAGE                   44436402
         SPACE                                                          44450002
FBDYERR  EQU   *                                                        44500002
         LA    R4,INST3            R4= INSERT NO 3 (FULL)               44550002
         B     SETMSGA             OUTPUT THE MESSAGE                   44600002
         SPACE                                                          44750002
DBDYERR  EQU   *                                                        44800002
         LA    R4,INST4            R4= INSERT NO 4 (DOUBLE)             44810002
         SPACE                                                          44870002
SETMSGA  DS    0H                  SET MSG NO'S.                        44880002
         LA    R2,MSG101           R2= FIRST LEVEL MSG NO 101           44920002
         LA    R3,MSG280           R3= SECOND LEVEL MSG NO 280          44970002
         B     MSGOUTAI            OUTPUT THE MESSAGE                   45020002
         SPACE                                                          45150002
LENERR   EQU   *                                                        45200002
         LA    R2,MSG011           R2= FIRST LEVEL MSG NO 11            45250002
         LA    R3,MSG213           R3= SECOND LEVEL MSG NO 213          45300002
         B     MSGOUTV             OUTPUT MSG WITH VPDE INSERT (R8)     45350002
         SPACE                                                          45400002
         EJECT                                                          47250002
*********************************************************************** 47300002
*                                                                     * 47350002
*  THIS CLOSED SUBROUTINE CALLS THE BRK ELEMENT SRCH ROUTINE TO CHECK * 47400002
*  BREAK POINTS BY SEARCHING THE BREAK ELEMENT QUEUE FOR ADDRESSES    * 47450002
*  WHICH FALL WITHIN THE AREA ABOUT TO BE PATCHED.                    * 47500002
*  WHEN A BREAK POINT IS FOUND WITHIN THE TARGET AREA, THE ORIGINAL   * 47550002
*  DATA IS MOVED FROM THE BREAK ELEMENT BACK TO ITS ORIGINAL LOCATION * 47600002
*  OVERLAYING THE BREAK POINT SVC. THE BREAK ELEMENT IS REMOVED       * 47650002
*  AND A SWITCH IS SET INDICATING A MESSAGE MUST BE ISSUED            * 47700002
*  TO TELL THE USER THAT BREAKPOINTS HAVE BEEN OVERLAYED.             * 47750002
*                                                                     * 47800002
*  INPUT  A1=START ADDRESS OF THE TARGET AREA                         * 47850002
*         R2 CONTAINS THE LENGTH OF THE PATCH DATA                    * 47900002
*         R1 CONTAINS THE ADDRESS OF THE INPUT PATCH DATA             * 47950002
*  OUTPUT R15 CONTAINS A RETURN CODE OF ZERO, OR THE ERROR RETURN     * 48000002
*             CODE FROM IKJEGIO OR IKJEGSRH.                          * 48050002
*                                                                     * 48100002
*********************************************************************** 48150002
ASNBPT   EQU   *                                                        48200002
         SAVE  (14,12)             STANDARD SAVE                        48250002
         L     R15,REGSAVE3        PTR TO 2ND SUB-CMD SAVE AREA         48300002
         ST    R15,FOREPTR(ZERO,R13)   FORWARD AND                      48350002
         ST    R13,BACKPTR(ZERO,R15)       BACKWARD CHAIN SAVE AREAS    48400002
         LR    R13,R15             ESTABLISH NEW SAVE AREA              48450002
         SR    R15,R15             PRESET RETURN CODE TO ZERO           48500002
         L     R3,A1               GET START ADDR OF AREA TO PATCH      48550002
         LA    R4,ZERO(R2,R3)      CALCULATE DATA END ADDRESS           48600002
         LA    R3,ZERO(R3)         CLEAR HIGH ORDER BYTE                48650002
         LA    R1,ASNSVCL          ADDRESS OF PARAMETER LIST            48700002
         LA    R2,EIGHT            INDICATE SEARCH OF RANGE             48750002
         STM   R2,R4,0(R1)         STORE INTO PARAMETER LIST            48800002
         L     R15,TSTSRHRT        ADDRESS OF BREAKPOINT PROCESSOR      48850002
         BALR  R14,R15             BRANCH AND PROCESS BREAKPOINTS       48900002
         LTR   R15,R15             TEST RETURN CODE FROM BRKPT ROUTINE  48950002
         BZ    ASNBPT10            BRANCH IF BRKPTS FOUND AND REMOVED   49000002
         CH    R15,HEIGHT          IS RETURN CODE TWELVE                49050002
         BH    ASNBPT20            BRANCH IF SRH ENTERED STAE RETRY     49100002
         LA    R15,ZERO            TRY PATCH EVEN THO BRKPT NOT FOUND   49150002
         B     ASNBPT30            RETURN TO MAIN LINE OF CODE          49200002
ASNBPT10 TM    ASNFLGS1,ASNFIRST   HAS MESSAGE BEEN ISSUED              49250002
         BZ    ASNBPT50            IF NOT, PLEASE DO SO                 49300002
         B     ASNBPT30            OTHERWISE, RETURN TO CALLER          49350002
ASNBPT20 LA    R15,TWENTY          TELL IKJEGMNL SOMETHINGS AMISS       49400002
         ST    R15,PCHRETCD        SAVE RETURN CODE                     49450002
ASNBPT30 EQU   *                                                        50850002
         L     R13,BACKPTR(ZERO,R13)   GET CALLERS SAVE AREA ADDR       50900002
         RETURN (14,12),RC=(15)    RETURN TO CALLER                     50950002
         SPACE                                                          51000002
*********************************************************************** 51050002
*  IF A BREAK POINT IS FOUND IN THE RANGE, THE FOLLOWING CODE           51100002
*  WILL CALL IO MODULE TO NOTIFY USER THAT BREAKPOINT HAS BEEN RMVD.    51150002
*********************************************************************** 51200002
         SPACE                                                          51250002
ASNBPT50 EQU   *                                                        51850002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM AREA         51900002
         LA    R2,MSG013           R2 = FIRST LEVEL MSG NO 13           51910002
         LA    R3,MSG216           R3 = SECOND LEVEL MSG NO.            51920002
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),ID=ASN03,MF=(E,TSTIOPRM)   51950002
         LTR   R15,R15             TEST RC FROM IKJEGIO                 52050002
         BNZ   ASNBPT30            IF RETURN CODE NON-ZERO, BRANCH      52100002
         OI    ASNFLGS1,ASNFIRST   INDICATE MSG HAS BEEN ISSUED         52150002
         B     ASNBPT30            RETURN TO CALLING ROUTINE            52200002
         EJECT                                                          53950002
DATAMVC1 MVC   ZERO(NULL,R15),ONE(R1)  MOVES DATA TO USER CORE          53960002
DATAMVC2 MVC   ONE(ZERO,R1),ZERO(R15)  MOVES DATA INTO CONAREA          53970002
DATAMVC3 MVC   ONE(ZERO,R15),HOLDAREA+ONE MOVES DATA FROM HOLD          53980002
****                               AERA TO CONAREA                      53990002
PCHTR    TR    ZERO(ZERO,R15),PCHTRTBL  FOR TRANSLATION TO UPPER CASE   53992002
         SPACE                                                          53994002
NEGZONE  DC    Z'-1'               BYTE WITH NEGATIVE ZONE FIELD.       54000002
POSZONE  DC    Z'+1'               BYTE WITH POSITIVE ZONE FIELD.       54050002
         SPACE 2                                                        54100002
FONE     DC    F'1'                FOR ROUNDING HALFWORD ADDRS          54150002
FTHREE   DC    F'3'                *            FULLWORD                54200002
FSEVEN   DC    F'7'                *            DBL WORD                54250002
         SPACE                                                          54350002
HFOUR    DC    H'4'                CONSTANT 4 HALF WORD                 54710002
HEIGHT   DC    H'8'                CONSTANT 8 HALF WORD                 54720002
HSIXTEEN DC    H'16'               CONSTANT 16 HALF WORD                54770002
         SPACE                                                          54820002
GRDATA   DS    0F                                                       54830002
GRINCR   DC    H'1'                INCRE VALUE FOR GEN REG ADDRS        54850002
GRLIM    DC    H'15'               MAX GEN REG ADDR                     54900002
         SPACE                                                          54950002
FPRDATA  DS    0F                                                       55000002
FPRINCR  DC    H'2'                INCRE VALUE FOR FL PT REGS.          55050002
         SPACE                                                          55500002
         EJECT                                                          55750002
PCHTRTBL DC    256AL1(*-PCHTRTBL)  LOWER TO UPPER CASE TR TABLE         55800002
         ORG   PCHTRTBL+C'A'-X'40' SET LOCATION CTR TO LOWER CASE 'A'   55850002
         DC    (C'Z'-C'A'+1)AL1(*-PCHTRTBL+X'40')  DEFINES UPPER CASE   55900002
         ORG                                                            55950002
SUPERZAP DC    50C'Z'              MAINTENANCE AREA                     56000002
         EJECT                                                          56050002
*                                                                       62750002
*        FOLLOWING IS A MAP OF THE WORK AREA USED BY THE PATCH MODULES  62800002
*                                                                       62850002
PCHWORK  DSECT                                                          62900002
PPCL     DS    7F                  SPACE FOR PARSE PARM LIST            63100002
         SPACE                                                          63150002
ADDRINCR DS    F                   FULLWORD TO HOLD CONSTANTS FOR REGS  63200002
MAXRADDR EQU   ADDRINCR+2          OFFSET FOR MAX REG NUMBER            63250002
PCHRETCD DS    F                   HOLDS CURRENT RETURN CODE            63300002
VPDE     DS    3F                  HOLDS CURRENT COPY OF THE VALUE PDE  63350002
A1       DS    F                   HLODS CURRENT ADDR TO BE PATCHED     63400002
DUMMYPDE DS    3F                  RESERVE SPACE FOR COPY OF VALUE PDE. 63450002
A1L      DS    H                   HOLDS CURRENT STRING LNTH FOR 'C'    63500002
A1TYPE   DS    X                   CONTAINS TYPE ASSOCIATED WITH VALUE  63550002
         DS    AL3                 RESERVED                             63600002
         DS    XL1                 RESERVED                             63650002
         DS    0D                                                       63700002
         ORG   *-1                 POSITION FOR LENGTH BYTE OF HOLDAREA 63750002
CONAREA1 DS    XL41                USED FOR ADDRESSING PURPOSES ONLY.   63800002
         ORG   CONAREA1            RE-USE SPACE FOR ACTUAL HOLDAREA     63850002
HOLDAREA DS    XL65                TEMP HOLD AREA FOR DATA CONVERSION   63900002
MSGPLIST DS    2F                  PARM LIST FOR CALLING IKJEGIO1.      63950002
TYPESAVE DS    C                   FOR SAVING USER SUPPLIED TYPE CODE   64050002
REGDATA  DS    F                   PATCH VALUE TO BE PLACED IN REGISTER 64100002
ASNSVCL  DS    3F                  FOR SVC97 & IKJEGSRH PARAMETER LIST  64150002
APDEADDR DS    F                   ADDR OF THE ADDR PDE                 64152002
ASNFLGS1 DS    X                   FLAGS FOR EXCLUSIVE USE OF ASSIGN    64160002
LPCHWORK EQU   *-PCHWORK           LENGTH OF TOTAL DSECT.               64200002
         EJECT                                                          64250002
         VALUPDE                                                        64300002
         EJECT                                                          64350002
         BRKELEM                                                        64400002
         SPACE 3                                                        64450002
         TSTCWORK                  EXPAND TEST'S CORE MAPPING DSECT     64500002
         EJECT                                                          64550002
         TCOMTAB                                                        64600002
         EJECT                                                          64650002
         IKJPARMA                  EXPAND THE ADDR PDE MAPPING DSECT    64700002
         EJECT                                                          64750002
CVT      DSECT                                                          64800002
         CVT                                                            64850002
         EJECT                                                          64900002
         IKJTCB                                                         64950002
         END                                                            65000002
