         TITLE 'IKJEGIO - I/O SERVICE MODULE FOR VS2-R2 OF TSO TEST    *00001000
                        '                                               00002000
         COPY IKJEGSIO                                                  00003000
IKJEGIO  CSECT ,                                                   0002 00004000
@PROLOG  STM   @14,@12,12(@13)                                     0002 00005000
         BALR  @03,0                                               0002 00006000
@PSTART  LA    @07,4095(,@03)                                      0002 00007000
         LA    @08,4095(,@07)                                      0002 00008000
         USING @PSTART,@03                                         0002 00009000
         USING @PSTART+4095,@07                                    0002 00010000
         USING @PSTART+8190,@08                                    0002 00011000
         L     @00,@SIZDATD                                        0002 00012000
         GETMAIN  R,LV=(0)                                              00013000
         LR    @12,@01                                             0002 00014000
         USING @DATD,@12                                           0002 00015000
         ST    @13,@SA00001+4                                      0002 00016000
         LM    @00,@01,20(@13)                                     0002 00017000
         ST    @12,8(,@13)                                         0002 00018000
         LR    @13,@12                                             0002 00019000
         USING TCOMTAB,TCOMPTR         ESTABLISH BASE REGISTER FOR TCOM 00020000
*   RTNCODE=0;                      /* INITIALIZE THE RTN CODE-OK    */ 00021000
         SLR   RTNCODE,RTNCODE                                     0072 00022000
*   IOPARMS=PRMREG1;                /* STORE THE ADDRESS TO PARMS    */ 00023000
         ST    PRMREG1,IOPARMS                                     0073 00024000
*/********************************************************************/ 00025000
*/*                                                                  */ 00026000
*/*                D  (NO,,YES,TESTPARM)                           0074 00027000
*/*                   IS THERE AN ABEND IN PROCESS ?                 */ 00028000
*/*                                                                  */ 00029000
*/********************************************************************/ 00030000
*                                                                  0074 00031000
*   IF TSTFLGS4(4)='1'B|TSTFLGS4(5)='1'B|SIOMODID=16 THEN          0074 00032000
         TM    TSTFLGS4,B'00011000'                                0074 00033000
         BNZ   @RT00074                                            0074 00034000
         L     @14,IOPARMS                                         0074 00035000
         CLI   SIOMODID(@14),16                                    0074 00036000
         BE    @RT00074                                            0074 00037000
*     GO TO NOESTAE;                /* IF ON DON'T ISSUE ESTAE       */ 00038000
*/********************************************************************/ 00039000
*/*                                                                  */ 00040000
*/*                P  (,,ABEND,RETRY)                              0076 00041000
*/*                   ISSUE AN ESTAE MACRO                           */ 00042000
*/*                                                                  */ 00043000
*/********************************************************************/ 00044000
*                                                                  0076 00045000
*   PRMREG1=REGSAVE5;               /* PICK UP ADDRESS SAVE AREA     */ 00046000
         L     PRMREG1,REGSAVE5                                    0076 00047000
*   GENERATE(STM 0,14,0(1));        /* SAVE REGISTER INCASE RETRY    */ 00048000
         STM 0,14,0(1)                                                  00049000
*   ESTAEPRM='00'X;                 /* ZERO THE PARM LIST            */ 00050000
         XC    ESTAEPRM+1(15),ESTAEPRM+1                           0078 00051000
         MVI   ESTAEPRM,X'00'                                      0078 00052000
*   ESTAEADD=TSTSTAE;               /* PUT STA ADDRESS IN REGISTER   */ 00053000
         L     ESTAEADD,TSTSTAE                                    0079 00054000
*   GENERATE;                                                      0080 00055000
         ESTAE (2),CT,PARAM=IKJEGSPL,XCTL=NO,MF=(E,ESTAEPRM)            00056000
*   IF RTNCODE^=0 THEN              /* SEE IF ESTAE WAS SUCCESSFUL   */ 00057000
         LTR   RTNCODE,RTNCODE                                     0081 00058000
         BZ    @RF00081                                            0081 00059000
*     DO;                                                          0082 00060000
*       GENERATE(STC  15,TSTESTRC); /* SAVE RETURN CODE FOR MAINL'E  */ 00061000
         STC  15,TSTESTRC                                               00062000
*       RTNCODE=24;                 /* INDICATE TO CALLER PROBLEM    */ 00063000
         LA    RTNCODE,24                                          0084 00064000
*       GO TO ENDIO;                /* RETURN TO CALLER              */ 00065000
         B     ENDIO                                               0085 00066000
*     END;                                                         0086 00067000
*                                                                  0086 00068000
*/********************************************************************/ 00069000
*/*                                                                  */ 00070000
*/*TESTPARM:       D  (NO,,YES,%CONT1)                             0087 00071000
*/*                   IS THE SERVICE REQ'T NUMBER WRONG ?            */ 00072000
*/*                S  (,END)                                       0087 00073000
*/*                   CALL MAG-DATA: CALL REQUESTED                0087 00074000
*/*                   ROUTINE DATA, SVCERR,MSG,PTGT                  */ 00075000
*/*%CONT1:         S  (,END)                                       0087 00076000
*/*                   CALL BADPARM: ISSUE BAD PARM MESSAGE           */ 00077000
*/*                                                                  */ 00078000
*/********************************************************************/ 00079000
*                                                                  0087 00080000
*NOESTAE:                                                          0087 00081000
*   MSGCSECT=ADDR(ATTACHIO);        /* GET ATTACH PARMS ADDR INTO  0087 00082000
*                                      REGISTER TO INCREASE EFF      */ 00083000
@RF00081 DS    0H                                                  0087 00084000
NOESTAE  L     MSGCSECT,@CA00152                                   0087 00085000
*   IF SIOTYPE=1 THEN               /* SEE IF REQUEST IS FOR DATA    */ 00086000
         L     @14,IOPARMS                                         0088 00087000
         CLI   SIOTYPE(@14),1                                      0088 00088000
         BNE   @RF00088                                            0088 00089000
*     CALL DATA;                    /* CALL DATA PROCESSOR IF SO     */ 00090000
         BAL   @14,DATA                                            0089 00091000
*   ELSE                                                           0090 00092000
*     IF SIOTYPE=4 THEN             /* SEE IF REQUEST IS FOR PTGT    */ 00093000
         B     @RC00088                                            0090 00094000
@RF00088 L     @14,IOPARMS                                         0090 00095000
         CLI   SIOTYPE(@14),4                                      0090 00096000
         BNE   @RF00090                                            0090 00097000
*       CALL PTGT;                  /* CALL PTGT PROCESSOR IF SO     */ 00098000
         BAL   @14,PTGT                                            0091 00099000
*     ELSE                                                         0092 00100000
*       IF SIOTYPE=2 THEN           /* SEE IF REQUEST IS FOR MSG     */ 00101000
         B     @RC00090                                            0092 00102000
@RF00090 L     @14,IOPARMS                                         0092 00103000
         CLI   SIOTYPE(@14),2                                      0092 00104000
         BNE   @RF00092                                            0092 00105000
*         CALL MSG;                 /* CALL MSG PROCESSOR IF SO      */ 00106000
         BAL   @14,MSG                                             0093 00107000
*       ELSE                                                       0094 00108000
*         IF SIOTYPE=3 THEN         /* SEE IF REQUEST IS FOR   SVCERR*/ 00109000
         B     @RC00092                                            0094 00110000
@RF00092 L     @14,IOPARMS                                         0094 00111000
         CLI   SIOTYPE(@14),3                                      0094 00112000
         BNE   @RF00094                                            0094 00113000
*           CALL SVCERR;            /* CALL SVCERR PROCESSOR IF SO   */ 00114000
         BAL   @14,SVCERR                                          0095 00115000
*         ELSE                      /* IF NO MATCH YET THEN ERROR    */ 00116000
*           CALL BADPARM;           /* SERVICE NUM IN ERROR BY CALL  */ 00117000
         B     @RC00094                                            0096 00118000
@RF00094 BAL   @14,BADPARM                                         0096 00119000
*/********************************************************************/ 00120000
*/*                                                                  */ 00121000
*/*END:            P  PREPARE FOR RETURN TO CALLER                   */ 00122000
*/*                R  RETURN TO CALLER                               */ 00123000
*/*                                                                  */ 00124000
*/********************************************************************/ 00125000
*                                                                  0097 00126000
*ENDIO:                                                            0097 00127000
*   IF TSTFLGS4(4)^='1'B|TSTFLGS4(5)^='1'B|SIOMODID^=16 THEN       0097 00128000
@RC00094 DS    0H                                                  0097 00129000
@RC00092 DS    0H                                                  0097 00130000
@RC00090 DS    0H                                                  0097 00131000
@RC00088 DS    0H                                                  0097 00132000
ENDIO    TM    TSTFLGS4,B'00011000'                                0097 00133000
         BNO   @RT00097                                            0097 00134000
         L     @14,IOPARMS                                         0097 00135000
         CLI   SIOMODID(@14),16                                    0097 00136000
         BE    @RF00097                                            0097 00137000
@RT00097 DS    0H                                                  0098 00138000
*     DO;                                                          0098 00139000
*       RTNSAVE=RTNCODE;            /* TRANSFER RETURN CODE          */ 00140000
         LR    RTNSAVE,RTNCODE                                     0099 00141000
*       GENERATE(ESTAE  0);         /* REMOVE ESTAE                  */ 00142000
         ESTAE  0                                                       00143000
*       RTNCODE=RTNSAVE;            /* TRANSFER RETURN CODE          */ 00144000
         LR    RTNCODE,RTNSAVE                                     0101 00145000
*     END;                                                         0102 00146000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLING TEST MOD    */ 00147000
@RF00097 LR    @06,@15                                             0103 00148000
         L     @13,4(,@13)                                         0103 00149000
         L     @00,@SIZDATD                                        0103 00150000
         LR    @01,@12                                             0103 00151000
         FREEMAIN R,LV=(0),A=(1)                                        00152000
         LR    @15,@06                                             0103 00153000
         L     @14,12(,@13)                                        0103 00154000
         LM    @00,@12,20(@13)                                     0103 00155000
         BR    @14                                                 0103 00156000
*                                                                  0104 00157000
*/********************************************************************/ 00158000
*/*                                                                  */ 00159000
*/*    THE FOLLOWING PROCEDURE IS THE RETRY ROUTINE.                 */ 00160000
*/*    IT WILL BE INVOKED IF THE MODULE PROGRAM CHECKS               */ 00161000
*/*    THE PRIMARY FUNCTIONS ARE:                                    */ 00162000
*/*                                                                  */ 00163000
*/*        1.  REESTABLISH MODULE ADDRESSABILITY                     */ 00164000
*/*        2.  REMOVE SCB AND SET THE RETURN CODE TO 20              */ 00165000
*/*                                                                  */ 00166000
*/********************************************************************/ 00167000
*/********************************************************************/ 00168000
*/*                                                                  */ 00169000
*/*RETRY:          P  TURN ON RETRY SW ISSUE ESTAE ZERO & RTNCODE=20 */ 00170000
*/*                R  RETURN TO CALLER                               */ 00171000
*/*                                                                  */ 00172000
*/********************************************************************/ 00173000
*                                                                  0104 00174000
*RETRY:                                                            0104 00175000
*   PROCEDURE OPTIONS(NOSAVEAREA,DONTSAVE);                        0104 00176000
*                                                                  0104 00177000
RETRY    DS    0H                                                  0105 00178000
*/********************************************************************/ 00179000
*/*                                                                  */ 00180000
*/* THE FOLLOWING GENERATE SECTION WILL REGAIN MODULE ADDRESSABILITY */ 00181000
*/*                                                                  */ 00182000
*/********************************************************************/ 00183000
*                                                                  0105 00184000
*   GENERATE;                                                      0105 00185000
         L     4,16                    PICK UP CVT PTR                  00186000
         USING CVTDSECT,4              ESTABLISH ADDRESSABILITY         00187000
         L     4,CVTTCBP               PICK UP TCB ADDRESS              00188000
         L     4,4(4)                  CURRENT TCB PTR                  00189000
         DROP  4                                                        00190000
         USING TCB,4                   ESTABLISH ADDRESSABILITY         00191000
         L     9,TCBTRN                PICK UP ADDRESS OF TCOMTAB       00192000
         OI    TSTFLGS4,B'00001000'    TURN ON RETRY SWITCH             00193000
         L     1,REGSAVE5              PICK UP REG SAVE AREA ADDR       00194000
         LM    0,14,0(1)               RESTORE ORIGINAL REGISTERS       00195000
         DROP  4                                                        00196000
*   RTNCODE=20;                     /* SET THE RETURN CODE - RETRY   */ 00197000
         LA    RTNCODE,20                                          0106 00198000
*   TSTFLGS4(5)='0'B;               /* TURN OFF THE RETRY BIT        */ 00199000
         NI    TSTFLGS4,B'11110111'                                0107 00200000
*   RETURN TO ENDIO CODE(RTNCODE);  /* GO TO THE IO EXIT ROUTINE     */ 00201000
         LA    @14,ENDIO                                           0108 00202000
@EL00002 DS    0H                                                  0108 00203000
@EF00002 DS    0H                                                  0108 00204000
@ER00002 BR    @14                                                 0108 00205000
*   END RETRY;                                                     0109 00206000
*                                                                  0110 00207000
*/********************************************************************/ 00208000
*/*                                                                  */ 00209000
*/*    THE FOLLOWING PROCEDURE IS THE MESSAGE ROUTINE.               */ 00210000
*/*    IT WILL BE INVOKED IF THE USERS HAS REQUESTED 'MSG' SERVICE.  */ 00211000
*/*                                                                  */ 00212000
*/*        1.  DETERMINE WHETHER THE USER HAS REQUESTED ONE          */ 00213000
*/*            OR TWO LEVEL MESSAGE BE ISSUED.                       */ 00214000
*/*        2.  FIND THE MESSAGE AND PREPARE IT FOR ISSUANCE          */ 00215000
*/*                                                                  */ 00216000
*/********************************************************************/ 00217000
*/********************************************************************/ 00218000
*/*                                                                  */ 00219000
*/*MSGROUT:        E  MESSAGE ROUTINE                                */ 00220000
*/*                                                                  */ 00221000
*/********************************************************************/ 00222000
*                                                                  0110 00223000
*MSG:                                                              0110 00224000
*   PROCEDURE;                                                     0110 00225000
*                                                                  0110 00226000
MSG      STM   @14,@12,@SA00003                                    0110 00227000
*/********************************************************************/ 00228000
*/*                                                                  */ 00229000
*/*                P  FIND AND PREPARE FIRST LEVEL MESSAGE           */ 00230000
*/*                S  CALL BADPARM: IF ERROR IN PARMS                */ 00231000
*/*                                                                  */ 00232000
*/********************************************************************/ 00233000
*                                                                  0111 00234000
*   IF SIO1STMS>0&SIO1STMS<100 THEN /* TEST FOR MSG BEING IN 1ST     */ 00235000
         L     @14,IOPARMS                                         0111 00236000
         L     @14,SIO1STMS(,@14)                                  0111 00237000
         LTR   @14,@14                                             0111 00238000
         BNP   @RF00111                                            0111 00239000
         CH    @14,@CH00256                                        0111 00240000
         BNL   @RF00111                                            0111 00241000
*     DO;                                                          0112 00242000
*       INDXTAB=MSG99PTR;           /* TABLE IF SO SET UP ADDRESS    */ 00243000
         L     @06,MSG99PTR(,MSGCSECT)                             0113 00244000
         ST    @06,INDXTAB                                         0113 00245000
*       IF AMTINDX<SIO1STMS THEN    /* LOOK AT ACTUAL TAB LEN FOR    */ 00246000
         C     @14,AMTINDX(,@06)                                   0114 00247000
         BNH   @RF00114                                            0114 00248000
*         DO;                       /* POSSIBLE BAD NUMBER PASSED    */ 00249000
*           CALL BADPARM;           /* IF MSG NUM EXCEEDS LEN-ERROR  */ 00250000
         BAL   @14,BADPARM                                         0116 00251000
*           GO TO EXITMSG;          /* BRANCH TO END OF PROCEDURE    */ 00252000
         B     EXITMSG                                             0117 00253000
*         END;                                                     0118 00254000
*     END;                                                         0119 00255000
*   ELSE                                                           0120 00256000
*     IF SIO1STMS>0&SIO1STMS<200 THEN/* TEST FOR MSG IN OTH TB       */ 00257000
         B     @RC00111                                            0120 00258000
@RF00111 L     @14,IOPARMS                                         0120 00259000
         L     @14,SIO1STMS(,@14)                                  0120 00260000
         LTR   @14,@14                                             0120 00261000
         BNP   @RF00120                                            0120 00262000
         CH    @14,@CH00258                                        0120 00263000
         BNL   @RF00120                                            0120 00264000
*       DO;                                                        0121 00265000
*         INDXTAB=MSG199PT;         /* TABLE IF SO SET UP ADDRESS    */ 00266000
         L     @06,MSG199PT(,MSGCSECT)                             0122 00267000
         ST    @06,INDXTAB                                         0122 00268000
*         IF AMTINDX<SIO1STMS THEN  /* LOOK AT ACTUAL TAB LEN FOR    */ 00269000
         C     @14,AMTINDX(,@06)                                   0123 00270000
         BNH   @RF00123                                            0123 00271000
*           DO;                     /* POSSIBLE BAD NUMBER PASSED    */ 00272000
*             CALL BADPARM;         /* IF MSG NUM EXCEEDS LEN-ERROR  */ 00273000
         BAL   @14,BADPARM                                         0125 00274000
*             GO TO EXITMSG;        /* BRANCH TO END OF PROCEDURE    */ 00275000
         B     EXITMSG                                             0126 00276000
*           END;                                                   0127 00277000
*         SIO1STMS=SIO1STMS-99;     /* ADJUST TO TABLE VALUES        */ 00278000
@RF00123 L     @14,IOPARMS                                         0128 00279000
         L     @06,SIO1STMS(,@14)                                  0128 00280000
         SH    @06,@CH00259                                        0128 00281000
         ST    @06,SIO1STMS(,@14)                                  0128 00282000
*       END;                                                       0129 00283000
*     ELSE                                                         0130 00284000
*       DO;                                                        0130 00285000
         B     @RC00120                                            0130 00286000
@RF00120 DS    0H                                                  0131 00287000
*         CALL BADPARM;             /* IF MSG NOT IN TABLE ERROR     */ 00288000
         BAL   @14,BADPARM                                         0131 00289000
*         GO TO EXITMSG;            /* BRANCH TO END OF PROCEDURE    */ 00290000
         B     EXITMSG                                             0132 00291000
*       END;                                                       0133 00292000
*   MSGPTR=INDXPTR(SIO1STMS);       /* ESTAB. ADDRESSABILITY TO MSG  */ 00293000
@RC00120 DS    0H                                                  0134 00294000
@RC00111 L     @14,IOPARMS                                         0134 00295000
         L     @14,SIO1STMS(,@14)                                  0134 00296000
         SLA   @14,2                                               0134 00297000
         L     @06,INDXTAB                                         0134 00298000
         L     @14,INDXPTR-4(@14,@06)                              0134 00299000
         ST    @14,MSGPTR                                          0134 00300000
*   IF INDISP(1)='FF'X THEN         /* TEST IF NULL ENTRY            */ 00301000
         CLI   INDISP(@14),255                                     0135 00302000
         BNE   @RF00135                                            0135 00303000
*     DO;                                                          0136 00304000
*       CALL BADPARM;               /* CALL FOR ERROR PROC BAD PRMS  */ 00305000
         BAL   @14,BADPARM                                         0137 00306000
*       GO TO EXITMSG;              /* BRANCH TO EXIT ROUTINE        */ 00307000
         B     EXITMSG                                             0138 00308000
*     END;                                                         0139 00309000
*   MESSAGE(1)=LOCALMSG;            /* MOVE MESSAGE INTO MYWK AREA   */ 00310000
@RF00135 MVI   MESSAGE+93,C' '                                     0140 00311000
         MVC   MESSAGE+94(10),MESSAGE+93                           0140 00312000
         L     @14,MSGPTR                                          0140 00313000
         MVC   MESSAGE(93),LOCALMSG(@14)                           0140 00314000
*   SIO1STMS=ADDR(MESSAGE(1));      /* STORE ADDRESS OF MSG IN P.L.  */ 00315000
         L     @14,IOPARMS                                         0141 00316000
         LA    @06,MESSAGE                                         0141 00317000
         ST    @06,SIO1STMS(,@14)                                  0141 00318000
*/********************************************************************/ 00319000
*/*                                                                  */ 00320000
*/*                P  PREPARE TO PROCESS FIRST LEVEL INSERTS         */ 00321000
*/*                                                                  */ 00322000
*/********************************************************************/ 00323000
*                                                                  0142 00324000
*   LEV=1;                          /* INDICATE THAT THIS IS 1ST LV  */ 00325000
         MVI   LEV,X'01'                                           0142 00326000
*   SIOTYPPT=ADDR(SIOTYP11);        /* SET ADDRESSABILITY TO TYPES   */ 00327000
         LA    @06,SIOTYP11(,@14)                                  0143 00328000
         ST    @06,SIOTYPPT                                        0143 00329000
*   SIOINTPT=ADDR(SIO11PTR);        /* SET ADDRESSABILITY TO INST    */ 00330000
         LA    @14,SIO11PTR(,@14)                                  0144 00331000
         ST    @14,SIOINTPT                                        0144 00332000
*/********************************************************************/ 00333000
*/*                                                                  */ 00334000
*/*                S  CALL INSERT R.: PROCESS INSERTS                */ 00335000
*/*                                                                  */ 00336000
*/********************************************************************/ 00337000
*                                                                  0145 00338000
*   CALL INSERT;                    /* CALL INSERT PROCESSOR         */ 00339000
         BAL   @14,INSERT                                          0145 00340000
*   IF RTNCODE^=0 THEN              /* TEST FOR SUCCESSFUL CALL      */ 00341000
         SLR   @14,@14                                             0146 00342000
         CR    RTNCODE,@14                                         0146 00343000
         BNE   @RT00146                                            0146 00344000
*     GOTO EXITMSG;                 /* BRANCH TO END OF PROCEDURE    */ 00345000
*/********************************************************************/ 00346000
*/*                                                                  */ 00347000
*/*                D  (YES,,NO,ONELEV)                             0148 00348000
*/*                   IS THERE A SECOND LEVEL MSG ?                  */ 00349000
*/*                                                                  */ 00350000
*/********************************************************************/ 00351000
*                                                                  0148 00352000
*   IF SIO2NDMS^=0 THEN             /* TEST FOR PRESENTS OF 2ND LEV  */ 00353000
         L     @06,IOPARMS                                         0148 00354000
         L     @06,SIO2NDMS(,@06)                                  0148 00355000
         CR    @06,@14                                             0148 00356000
         BE    @RF00148                                            0148 00357000
*     DO;                                                          0149 00358000
*       INDXTAB=SECONDPT;           /* ESTAB ADDRESSABILITY TO TAB   */ 00359000
         L     @14,SECONDPT(,MSGCSECT)                             0150 00360000
         ST    @14,INDXTAB                                         0150 00361000
*       MESSAGE(1,LENMSG(1))='+';   /* INDICATE TO USER TWO LEVELS   */ 00362000
         LH    @11,LENMSG                                          0151 00363000
         LA    @10,MESSAGE-1(@11)                                  0151 00364000
         MVI   0(@10),C'+'                                         0151 00365000
*       IF SIO2NDMS<200|SIO2NDMS>AMTINDX THEN/* TEST FOR VAL #       */ 00366000
         CH    @06,@CH00258                                        0152 00367000
         BL    @RT00152                                            0152 00368000
         C     @06,AMTINDX(,@14)                                   0152 00369000
         BNH   @RF00152                                            0152 00370000
@RT00152 DS    0H                                                  0153 00371000
*         DO;                                                      0153 00372000
*           CALL BADPARM;           /* CALL FOR ERROR PROC BAD PARM  */ 00373000
         BAL   @14,BADPARM                                         0154 00374000
*           GO TO EXITMSG;          /* BRANCH TO END OF ROUTINE      */ 00375000
         B     EXITMSG                                             0155 00376000
*         END;                                                     0156 00377000
*                                                                  0156 00378000
*/********************************************************************/ 00379000
*/*                                                                  */ 00380000
*/*SECOND:         P  FIND AND PREPARE SECOND LEVEL MESSAGE          */ 00381000
*/*                                                                  */ 00382000
*/********************************************************************/ 00383000
*                                                                  0157 00384000
*       SIO2NDMS=SIO2NDMS-199;      /* ADJUST TO TABLE VALUES        */ 00385000
@RF00152 L     @14,IOPARMS                                         0157 00386000
         L     @06,SIO2NDMS(,@14)                                  0157 00387000
         SH    @06,@CH00263                                        0157 00388000
         ST    @06,SIO2NDMS(,@14)                                  0157 00389000
*       MSGPTR=INDXPTR(SIO2NDMS);   /* ESTAB ADDRESSABILITY TO MSG   */ 00390000
         SLA   @06,2                                               0158 00391000
         L     @14,INDXTAB                                         0158 00392000
         L     @14,INDXPTR-4(@06,@14)                              0158 00393000
         ST    @14,MSGPTR                                          0158 00394000
*       IF INDISP(1)='FF'X THEN     /* TEST IF NULL ENTRY            */ 00395000
         CLI   INDISP(@14),255                                     0159 00396000
         BNE   @RF00159                                            0159 00397000
*         DO;                                                      0160 00398000
*           CALL BADPARM;           /* CALL FOR ERROR PROC BAD PRMS  */ 00399000
         BAL   @14,BADPARM                                         0161 00400000
*           GO TO EXITMSG;          /* BRANCH TO EXIT ROUTINE        */ 00401000
         B     EXITMSG                                             0162 00402000
*         END;                                                     0163 00403000
*       MESSAGE(2)='00'X;           /* CLEAR CORE FOR SECOND MSG     */ 00404000
@RF00159 XC    MESSAGE+105(103),MESSAGE+105                        0164 00405000
         MVI   MESSAGE+104,X'00'                                   0164 00406000
*       WKMSGID(2)=WKMSGID(1);      /* MOVE FIRST LEVEL NUMBER       */ 00407000
         MVC   WKMSGID+104(9),WKMSGID                              0165 00408000
*       WKMSGTXT(2)=TEXTMSG;        /* MOVE IN THE TEXT PORTION      */ 00409000
         MVI   WKMSGTXT+193,C' '                                   0166 00410000
         MVI   WKMSGTXT+194,C' '                                   0166 00411000
         L     @14,MSGPTR                                          0166 00412000
         MVC   WKMSGTXT+104(89),TEXTMSG(@14)                       0166 00413000
*       LENMSG(2)=LENLOCAL;         /* MOVE IN MESSAGE LENGTH        */ 00414000
         MVC   LENMSG+104(2),LENLOCAL(@14)                         0167 00415000
*       SIO2NDMS=ADDR(MESSAGE(2));  /* STORE ADDRESS OF MSG IN P.L.  */ 00416000
         L     @14,IOPARMS                                         0168 00417000
         LA    @06,MESSAGE+104                                     0168 00418000
         ST    @06,SIO2NDMS(,@14)                                  0168 00419000
*/********************************************************************/ 00420000
*/*                                                                  */ 00421000
*/*                P  PREPARE TO PROCESS SECOND LEVEL INSERTS        */ 00422000
*/*                                                                  */ 00423000
*/********************************************************************/ 00424000
*                                                                  0169 00425000
*       LEV=2;                      /* INDICATE THAT THIS IS 2ND LV  */ 00426000
         MVI   LEV,X'02'                                           0169 00427000
*       SIOTYPPT=ADDR(SIOTYP21);    /* SET ADDRESSABILITY TO TYPES   */ 00428000
         LA    @06,SIOTYP21(,@14)                                  0170 00429000
         ST    @06,SIOTYPPT                                        0170 00430000
*       SIOINTPT=ADDR(SIO21PTR);    /* SET ADDRESSABILITY TO INST    */ 00431000
         LA    @14,SIO21PTR(,@14)                                  0171 00432000
         ST    @14,SIOINTPT                                        0171 00433000
*/********************************************************************/ 00434000
*/*                                                                  */ 00435000
*/*                S  CALL INSERT R.: PROCESS INSERTS                */ 00436000
*/*                                                                  */ 00437000
*/********************************************************************/ 00438000
*                                                                  0172 00439000
*       CALL INSERT;                /* CALL INSERT PROCESSOR         */ 00440000
         BAL   @14,INSERT                                          0172 00441000
*       IF RTNCODE^=0 THEN          /* TEST FOR SUCCESSFUL CALL      */ 00442000
         LTR   RTNCODE,RTNCODE                                     0173 00443000
         BNZ   @RT00173                                            0173 00444000
*         GOTO EXITMSG;             /* BRANCH TO END OF PROCEDURE    */ 00445000
*/********************************************************************/ 00446000
*/*                                                                  */ 00447000
*/*                S   (,MSGEND)                                   0175 00448000
*/*                    CALL TERMOUT:  ISSUE 2 LEVEL MSG              */ 00449000
*/*                                                                  */ 00450000
*/********************************************************************/ 00451000
*                                                                  0175 00452000
*       CALL TERMOUT;               /* CALL PUTLINE FOR MULTILEVEL   */ 00453000
         BAL   @14,TERMOUT                                         0175 00454000
*     END;                                                         0176 00455000
*                                                                  0176 00456000
*/********************************************************************/ 00457000
*/*                                                                  */ 00458000
*/*ONELEV:         S   CALL TERMOUT: ISSUE SINGLE LEVEL MSG          */ 00459000
*/*                                                                  */ 00460000
*/********************************************************************/ 00461000
*                                                                  0177 00462000
*   ELSE                                                           0177 00463000
*     CALL TERMOUT;                 /* CALL PUTLINE FOR SINGLELEVEL  */ 00464000
         B     @RC00148                                            0177 00465000
@RF00148 BAL   @14,TERMOUT                                         0177 00466000
*/********************************************************************/ 00467000
*/*                                                                  */ 00468000
*/*MSGEND:         R  RETURN TO IO CONTROLLER                        */ 00469000
*/*                                                                  */ 00470000
*/********************************************************************/ 00471000
*                                                                  0178 00472000
*EXITMSG:                           /* LABEL TO BRANCH TO END        */ 00473000
*   RETURN CODE(RTNCODE);           /* RETURN TO DRIVER WITH CODE    */ 00474000
@RC00148 DS    0H                                                  0178 00475000
EXITMSG  L     @14,@SA00003                                        0178 00476000
         LM    @00,@12,@SA00003+8                                  0178 00477000
         BR    @14                                                 0178 00478000
*   END MSG;                                                       0179 00479000
*                                                                  0180 00480000
*/********************************************************************/ 00481000
*/*                                                                  */ 00482000
*/*    THE FOLLOWING PROCEDURE IS THE INSERT ROUTINE.                */ 00483000
*/*    IT WILL BE INVOKED IF THE USERS HAS REQUESTED 'MSG' SERVICE.  */ 00484000
*/*                                                                  */ 00485000
*/*        1.  DETERMINE WHICH TYPE INSERT TO BE PREPARED AND        */ 00486000
*/*            INVOKE APPROPRIATE ROUTINE.                           */ 00487000
*/*        2.  KEEP TRACK OF INSERT BEING PROCESSED.                 */ 00488000
*/*                                                                  */ 00489000
*/********************************************************************/ 00490000
*/********************************************************************/ 00491000
*/*                                                                  */ 00492000
*/*INSTPROC:       E  INSERT PROCESSOR ROUTINE                       */ 00493000
*/*                                                                  */ 00494000
*/********************************************************************/ 00495000
*                                                                  0180 00496000
*INSERT:                                                           0180 00497000
*   PROCEDURE;                                                     0180 00498000
*                                                                  0180 00499000
INSERT   STM   @14,@12,@SA00004                                    0180 00500000
*/********************************************************************/ 00501000
*/*                                                                  */ 00502000
*/*                P  INITIALIZE TO PROCESS INSERTS                  */ 00503000
*/*                                                                  */ 00504000
*/********************************************************************/ 00505000
*                                                                  0181 00506000
*   DCL                                                            0181 00507000
*     TYPEINST FIXED(8);            /* TEMP VAR TO FIND TYPE         */ 00508000
*   DO INSTCTR=1 TO 7;              /* SET UP LOOP COUNTER FOR 7     */ 00509000
         LA    @14,1                                               0182 00510000
         ST    @14,INSTCTR                                         0182 00511000
@DL00182 DS    0H                                                  0183 00512000
*     IF LEV=1 THEN                 /* SEE IF INST OLD NUM IS 1ST    */ 00513000
         CLI   LEV,1                                               0183 00514000
         BNE   @RF00183                                            0183 00515000
*       SIONUMI1=SIONUMI1+1;        /* INSERT AMOUNT OF INSERTS      */ 00516000
         L     @14,IOPARMS                                         0184 00517000
         LA    @06,1                                               0184 00518000
         AL    @06,SIONUMI1(,@14)                                  0184 00519000
         ST    @06,SIONUMI1(,@14)                                  0184 00520000
*     ELSE                                                         0185 00521000
*       IF LEV=2 THEN               /* THE ONLY OTHER POSSIBILITY    */ 00522000
         B     @RC00183                                            0185 00523000
@RF00183 CLI   LEV,2                                               0185 00524000
         BNE   @RF00185                                            0185 00525000
*         SIONUMI2=SIONUMI2+1;      /* INSERT AMOUNT OF INSERTS      */ 00526000
         L     @14,IOPARMS                                         0186 00527000
         LA    @06,1                                               0186 00528000
         AL    @06,SIONUMI2(,@14)                                  0186 00529000
         ST    @06,SIONUMI2(,@14)                                  0186 00530000
*       ELSE                                                       0187 00531000
*         DO;                                                      0187 00532000
         B     @RC00185                                            0187 00533000
@RF00185 DS    0H                                                  0188 00534000
*           RTNCODE=4;              /* SOMEHOW AN ERR HAS HAPPENED   */ 00535000
         LA    RTNCODE,4                                           0188 00536000
*           GO TO EXITINST;         /* BRANCH TO EXIT OF ROUTINE     */ 00537000
         B     EXITINST                                            0189 00538000
*         END;                                                     0190 00539000
*                                                                  0190 00540000
*/********************************************************************/ 00541000
*/*                                                                  */ 00542000
*/*%CONT10:        D  (YES,,NO,EXITINST)                           0191 00543000
*/*                   ARE THERE INSERTS TO PROCESS ?                 */ 00544000
*/*                                                                  */ 00545000
*/********************************************************************/ 00546000
*                                                                  0191 00547000
*     IF INSTCTR>6 THEN             /* TEST IF MAXIMUM NUMBER        */ 00548000
@RC00185 DS    0H                                                  0191 00549000
@RC00183 L     @14,INSTCTR                                         0191 00550000
         CH    @14,@CH00129                                        0191 00551000
         BH    @RT00191                                            0191 00552000
*       GO TO EXITINST;             /* BRANCH TO EXIT                */ 00553000
*     TYPEINST=TYP(INSTCTR);        /* OBTAIN TYPE INSERT BY CALLER  */ 00554000
         L     @06,SIOTYPPT                                        0193 00555000
         BCTR  @06,0                                               0193 00556000
         SLR   @11,@11                                             0193 00557000
         IC    @11,TYP(@14,@06)                                    0193 00558000
         STC   @11,TYPEINST                                        0193 00559000
*     IF TYPEINST=0 THEN            /* TEST FOR INSERT TO PROCESS    */ 00560000
         CLI   TYPEINST,0                                          0194 00561000
         BE    @RT00194                                            0194 00562000
*       GO TO EXITINST;             /* BRANCH TO EXIT IF NONE        */ 00563000
*     IF INDISP(INSTCTR)=0 THEN     /* TEST FOR ERROR NO DISP VALUE  */ 00564000
         L     @06,MSGPTR                                          0196 00565000
         BCTR  @06,0                                               0196 00566000
         SLR   @11,@11                                             0196 00567000
         IC    @11,INDISP(@14,@06)                                 0196 00568000
         CH    @11,@CH00235                                        0196 00569000
         BNE   @RF00196                                            0196 00570000
*       DO;                                                        0197 00571000
*         CALL BADPARM;             /* ISSUE BAD PARM MESSAGE        */ 00572000
         BAL   @14,BADPARM                                         0198 00573000
*         GO TO EXITINST;           /* GO TO EXIT INSERT             */ 00574000
         B     EXITINST                                            0199 00575000
*       END;                                                       0200 00576000
*                                                                  0200 00577000
*/********************************************************************/ 00578000
*/*                                                                  */ 00579000
*/*%CONT11:        D  (YES,,NO,%CONT12)                            0201 00580000
*/*                   IS THIS INSERT "NUM" ?                         */ 00581000
*/*                S  (,EXITINST)                                  0201 00582000
*/*                   CALL NUM INSERT: FORMAT INSERT OF FIXED INSERT */ 00583000
*/*                                                                  */ 00584000
*/********************************************************************/ 00585000
*                                                                  0201 00586000
*     ELSE                                                         0201 00587000
*       IF TYPEINST=5 THEN          /* TEST TO SEE IF TYPE IS NUM    */ 00588000
@RF00196 CLI   TYPEINST,5                                          0201 00589000
         BNE   @RF00201                                            0201 00590000
*         CALL INSTNUM;             /* IF SO INVOKE THE NUM ROUT.    */ 00591000
         BAL   @14,INSTNUM                                         0202 00592000
*/********************************************************************/ 00593000
*/*                                                                  */ 00594000
*/*%CONT12:        D  (YES,,NO,%CONT13)                            0203 00595000
*/*                   IS THIS INSERT "APDE" ?                        */ 00596000
*/*                S  (,EXITINST)                                  0203 00597000
*/*                   CALL APDE INSERT: FORMAT INSERT OF ADDRESS PDE */ 00598000
*/*                                                                  */ 00599000
*/********************************************************************/ 00600000
*                                                                  0203 00601000
*       ELSE                                                       0203 00602000
*         IF TYPEINST=6 THEN        /* TEST TO SEE IF TYPE IS A-PDE  */ 00603000
         B     @RC00201                                            0203 00604000
@RF00201 CLI   TYPEINST,6                                          0203 00605000
         BNE   @RF00203                                            0203 00606000
*           CALL INSTAPDE;          /* IF SO INVOKE THE A-PDE PROC.  */ 00607000
         BAL   @14,INSTAPDE                                        0204 00608000
*/********************************************************************/ 00609000
*/*                                                                  */ 00610000
*/*%CONT13:        D  (YES,,NO,%CONT14)                            0205 00611000
*/*                   IS THIS INSERT "VPDE" ?                        */ 00612000
*/*                S  (,EXITINST)                                  0205 00613000
*/*                   CALL VPDE INSERT: FORMAT INSERT OF VALUE PDE   */ 00614000
*/*                                                                  */ 00615000
*/********************************************************************/ 00616000
*                                                                  0205 00617000
*         ELSE                                                     0205 00618000
*           IF TYPEINST=7 THEN      /* TEST TO SEE IF TYPE IS E-PDE  */ 00619000
         B     @RC00203                                            0205 00620000
@RF00203 CLI   TYPEINST,7                                          0205 00621000
         BNE   @RF00205                                            0205 00622000
*             CALL INSTVPDE;        /* IF SO INVOKE THE V-PDE PROC.  */ 00623000
         BAL   @14,INSTVPDE                                        0206 00624000
*/********************************************************************/ 00625000
*/*                                                                  */ 00626000
*/*%CONT14:        D  (YES,,NO,%CONT15)                            0207 00627000
*/*                   IS THIS INSERT "REG" ?                         */ 00628000
*/*                S  (,EXITINST)                                  0207 00629000
*/*                   CALL  INSERTREG: FORMAT INSERT FOR CONT OF REG */ 00630000
*/*                                                                  */ 00631000
*/********************************************************************/ 00632000
*                                                                  0207 00633000
*           ELSE                                                   0207 00634000
*             IF TYPEINST=1 THEN    /* TEST TO SEE IF TYPE IS REG    */ 00635000
         B     @RC00205                                            0207 00636000
@RF00205 CLI   TYPEINST,1                                          0207 00637000
         BNE   @RF00207                                            0207 00638000
*               CALL INSTREG;       /* IF SO INVOKE THE REG PROC.    */ 00639000
         BAL   @14,INSTREG                                         0208 00640000
*/********************************************************************/ 00641000
*/*                                                                  */ 00642000
*/*%CONT15:        D  (YES,,NO,%CONT16)                            0209 00643000
*/*                   IS THIS INSERT "ADDR" ?                        */ 00644000
*/*                S  (,EXITINST)                                  0209 00645000
*/*                   CALL INSTADDR: FORMAT INSERT                   */ 00646000
*/*                                                                  */ 00647000
*/********************************************************************/ 00648000
*                                                                  0209 00649000
*             ELSE                                                 0209 00650000
*               IF TYPEINST=2 THEN  /* TEST TO SEE IF TYPE IS ADDR   */ 00651000
         B     @RC00207                                            0209 00652000
@RF00207 CLI   TYPEINST,2                                          0209 00653000
         BNE   @RF00209                                            0209 00654000
*                 CALL INSTADDR;    /* IF SO THE PROC. IS COMPLETE   */ 00655000
         BAL   @14,INSTADDR                                        0210 00656000
*/********************************************************************/ 00657000
*/*                                                                  */ 00658000
*/*%CONT16:        D  (YES,,NO,%CONT17)                            0211 00659000
*/*                   IS THIS INSERT "ADDRCONX" ?                    */ 00660000
*/*                S  (,EXITINST)                                  0211 00661000
*/*                   CALL ADDRCONX I: FORMAT AND CONVERT INSERT     */ 00662000
*/*                                                                  */ 00663000
*/********************************************************************/ 00664000
*                                                                  0211 00665000
*               ELSE                                               0211 00666000
*                 IF TYPEINST=3 THEN/* TEST IF TYPE INSERT ADDRCONX  */ 00667000
         B     @RC00209                                            0211 00668000
@RF00209 CLI   TYPEINST,3                                          0211 00669000
         BNE   @RF00211                                            0211 00670000
*                   CALL INSTADDX;  /* IF SO INVOKE INSTADCX ROUT    */ 00671000
         BAL   @14,INSTADDX                                        0212 00672000
*/********************************************************************/ 00673000
*/*                                                                  */ 00674000
*/*%CONT17:        D  (YES,,NO,%CONT18)                            0213 00675000
*/*                   IS THIS INSERT "ADDRCOND" ?                    */ 00676000
*/*                S  (,EXITINST)                                  0213 00677000
*/*                   CALL ADDRCOND: FORMAT AND CONVERT INSERT       */ 00678000
*/*                                                                  */ 00679000
*/********************************************************************/ 00680000
*                                                                  0213 00681000
*                 ELSE                                             0213 00682000
*                   IF TYPEINST=4 THEN/* TEST IF TYPE INSERT ADDRCOND*/ 00683000
         B     @RC00211                                            0213 00684000
@RF00211 CLI   TYPEINST,4                                          0213 00685000
         BNE   @RF00213                                            0213 00686000
*                     CALL INSTADDD;/* IF SO INVOKE INSTADCD ROUT    */ 00687000
         BAL   @14,INSTADDD                                        0214 00688000
*/********************************************************************/ 00689000
*/*                                                                  */ 00690000
*/*%CONT18:        S   CALL BADPARM:  ISSUE ERROR MESSAGE            */ 00691000
*/*                                                                  */ 00692000
*/********************************************************************/ 00693000
*                                                                  0215 00694000
*                   ELSE                                           0215 00695000
*                     DO;                                          0215 00696000
         B     @RC00213                                            0215 00697000
@RF00213 DS    0H                                                  0216 00698000
*                       CALL BADPARM;/* IF NO MATCH YET BAD PARM     */ 00699000
         BAL   @14,BADPARM                                         0216 00700000
*                       GO TO EXITINST;/* BRANCH TO EXIT OF ROUTINE  */ 00701000
         B     EXITINST                                            0217 00702000
*                     END;                                         0218 00703000
*   END;                                                           0219 00704000
*                                                                  0219 00705000
@RC00213 DS    0H                                                  0219 00706000
@RC00211 DS    0H                                                  0219 00707000
@RC00209 DS    0H                                                  0219 00708000
@RC00207 DS    0H                                                  0219 00709000
@RC00205 DS    0H                                                  0219 00710000
@RC00203 DS    0H                                                  0219 00711000
@RC00201 LA    @14,1                                               0219 00712000
         AL    @14,INSTCTR                                         0219 00713000
         ST    @14,INSTCTR                                         0219 00714000
         CH    @14,@CH00033                                        0219 00715000
         BNH   @DL00182                                            0219 00716000
*/********************************************************************/ 00717000
*/*                                                                  */ 00718000
*/*EXITINST:       R  RETURN TO I/O CONTROLLER                       */ 00719000
*/*                                                                  */ 00720000
*/********************************************************************/ 00721000
*                                                                  0220 00722000
*EXITINST:                          /* LABEL USED TO EXIT ON ERROR   */ 00723000
*   RETURN CODE(RTNCODE);           /* RETURN TO PROCESSING          */ 00724000
EXITINST L     @14,@SA00004                                        0220 00725000
         LM    @00,@12,@SA00004+8                                  0220 00726000
         BR    @14                                                 0220 00727000
*   END INSERT;                     /* END OF INSERT ROUTINE         */ 00728000
*                                                                  0222 00729000
*/********************************************************************/ 00730000
*/*                                                                  */ 00731000
*/*    THE FOLLOWING PROCEDURE IS THE ADDRESS PDE INSERT ROUTINE.    */ 00732000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 00733000
*/*    TYPE INSERT.  THE PRIMARY FUNCTIONS ARE:                      */ 00734000
*/*                                                                  */ 00735000
*/*        1.  SETS UP AND INVOKE THE IKJEGBLD ROUTINE               */ 00736000
*/*            TO EXTRACT AND FORMAT THE ADDRESS PDE.                */ 00737000
*/*        2.  PREPARE THE INSERT FOR INCLUSION                      */ 00738000
*/*                                                                  */ 00739000
*/********************************************************************/ 00740000
*/********************************************************************/ 00741000
*/*                                                                  */ 00742000
*/*INSTAPDE:       E  PDE INSERT BUILD ROUTINE                       */ 00743000
*/*                                                                  */ 00744000
*/********************************************************************/ 00745000
*                                                                  0222 00746000
*INSTAPDE:                                                         0222 00747000
*   PROCEDURE;                                                     0222 00748000
INSTAPDE STM   @14,@12,@SA00005                                    0222 00749000
*   PDEREG=INTPLPTR(INSTCTR);       /* SET UP ADDR TO PDE FOR CONV   */ 00750000
         L     @14,INSTCTR                                         0223 00751000
         LR    @06,@14                                             0223 00752000
         SLA   @06,2                                               0223 00753000
         L     @11,SIOINTPT                                        0223 00754000
         AL    @11,@CF00622                                        0223 00755000
         L     PDEREG,INTPLPTR(@06,@11)                            0223 00756000
*   IF LEV=1 THEN                   /* SEE WHETHER WORKING ON 1ST L  */ 00757000
         CLI   LEV,1                                               0224 00758000
         BNE   @RF00224                                            0224 00759000
*     INSERTRG=ADDR(INSTTXT1(INSTCTR));/* IF SO ADDRESS 1ST INSERT PL*/ 00760000
         MH    @14,@CH00617                                        0225 00761000
         LA    INSERTRG,INSTTXT1-56(@14)                           0225 00762000
*   ELSE                                                           0226 00763000
*     IF LEV=2 THEN                 /* SEE WHETHER WORKING ON 2ND    */ 00764000
         B     @RC00224                                            0226 00765000
@RF00224 CLI   LEV,2                                               0226 00766000
         BNE   @RF00226                                            0226 00767000
*       INSERTRG=ADDR(INSTTXT2(INSTCTR));/* IF SO ADDRESS 2ND INSERTS*/ 00768000
         L     INSERTRG,INSTCTR                                    0227 00769000
         MH    INSERTRG,@CH00617                                   0227 00770000
         LA    INSERTRG,INSTTXT2-56(INSERTRG)                      0227 00771000
*     ELSE                                                         0228 00772000
*       DO;                                                        0228 00773000
         B     @RC00226                                            0228 00774000
@RF00226 DS    0H                                                  0229 00775000
*         RTNCODE=4;                /* IF NOT 1 OR 2 THE FOUL UP     */ 00776000
         LA    RTNCODE,4                                           0229 00777000
*         GO TO EXITAPDE;           /* BRANCH TO EXIT                */ 00778000
         B     EXITAPDE                                            0230 00779000
*       END;                                                       0231 00780000
*                                                                  0231 00781000
*/********************************************************************/ 00782000
*/*                                                                  */ 00783000
*/*                S  CALL PDECONVR: CONVERT PDE FOR USE             */ 00784000
*/*                                                                  */ 00785000
*/********************************************************************/ 00786000
*                                                                  0232 00787000
*                                   /* BY PASSING THE COMPLEMENT     */ 00788000
*   CALL PDECONVR;                  /* CALL ROUTINE OUTSIDE IO       */ 00789000
@RC00226 DS    0H                                                  0232 00790000
@RC00224 L     @15,TSTADDR                                         0232 00791000
         BALR  @14,@15                                             0232 00792000
*   RTNCODE=0;                      /* RESET RTNCODE BACK TO ZERO    */ 00793000
         SLR   RTNCODE,RTNCODE                                     0233 00794000
*   IF PDELEN>50 THEN               /* IF AFTER CONV. TOO BIG MUST   */ 00795000
         LA    @14,50                                              0234 00796000
         CR    PDELEN,@14                                          0234 00797000
         BNH   @RF00234                                            0234 00798000
*     PDELEN=50;                    /* REDUCE TO MAX. SIZE POSS.     */ 00799000
         LR    PDELEN,@14                                          0235 00800000
*/********************************************************************/ 00801000
*/*                                                                  */ 00802000
*/*                P  PREPARE INSERT FOR INSERTION                   */ 00803000
*/*                                                                  */ 00804000
*/********************************************************************/ 00805000
*                                                                  0236 00806000
*   IF LEV=1 THEN                   /* SEE IF ADDR SHOULD BE TO 1ST  */ 00807000
@RF00234 CLI   LEV,1                                               0236 00808000
         BNE   @RF00236                                            0236 00809000
*     DO;                                                          0237 00810000
*       INSTTXT1(INSTCTR,PDELEN+1:PDELEN+1)=' ';/* INSERT BLANK SEP  */ 00811000
         L     @14,INSTCTR                                         0238 00812000
         LR    @06,@14                                             0238 00813000
         MH    @06,@CH00617                                        0238 00814000
         LR    @11,PDELEN                                          0238 00815000
         ALR   @11,@06                                             0238 00816000
         LA    @10,INSTTXT1-56(@11)                                0238 00817000
         MVI   0(@10),C' '                                         0238 00818000
*       LENINST1(INSTCTR)=PDELEN+5; /* MOVE AIN THE LENGTH           */ 00819000
         LA    @11,5                                               0239 00820000
         ALR   @11,PDELEN                                          0239 00821000
         STH   @11,LENINST1-56(@06)                                0239 00822000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISP TO PL          */ 00823000
         L     @11,MSGPTR                                          0240 00824000
         BCTR  @11,0                                               0240 00825000
         SLR   @10,@10                                             0240 00826000
         IC    @10,INDISP(@14,@11)                                 0240 00827000
         STH   @10,DISPIN1-56(@06)                                 0240 00828000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE PTR TO PL  */ 00829000
         SLA   @14,2                                               0241 00830000
         LA    @06,MSGINST1-56(@06)                                0241 00831000
         L     @11,SIOINTPT                                        0241 00832000
         AL    @11,@CF00622                                        0241 00833000
         ST    @06,INTPLPTR(@14,@11)                               0241 00834000
*     END;                                                         0242 00835000
*   ELSE                                                           0243 00836000
*     DO;                                                          0243 00837000
         B     @RC00236                                            0243 00838000
@RF00236 DS    0H                                                  0244 00839000
*       INSTTXT2(INSTCTR,PDELEN+1:PDELEN+1)=' ';/* INSERT BLANK SEP  */ 00840000
         L     @14,INSTCTR                                         0244 00841000
         LR    @06,@14                                             0244 00842000
         MH    @06,@CH00617                                        0244 00843000
         LR    @11,PDELEN                                          0244 00844000
         ALR   @11,@06                                             0244 00845000
         LA    @10,INSTTXT2-56(@11)                                0244 00846000
         MVI   0(@10),C' '                                         0244 00847000
*       LENINST2(INSTCTR)=PDELEN+5; /* MOVE AIN THE LENGTH           */ 00848000
         LA    @11,5                                               0245 00849000
         ALR   @11,PDELEN                                          0245 00850000
         STH   @11,LENINST2-56(@06)                                0245 00851000
*       DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISP TO PL          */ 00852000
         L     @11,MSGPTR                                          0246 00853000
         BCTR  @11,0                                               0246 00854000
         SLR   @10,@10                                             0246 00855000
         IC    @10,INDISP(@14,@11)                                 0246 00856000
         STH   @10,DISPIN2-56(@06)                                 0246 00857000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE PTR TO PL  */ 00858000
         SLA   @14,2                                               0247 00859000
         LA    @06,MSGINST2-56(@06)                                0247 00860000
         L     @11,SIOINTPT                                        0247 00861000
         AL    @11,@CF00622                                        0247 00862000
         ST    @06,INTPLPTR(@14,@11)                               0247 00863000
*     END;                                                         0248 00864000
*                                                                  0248 00865000
*/********************************************************************/ 00866000
*/*                                                                  */ 00867000
*/*EXITAPDE:       R  RETURN TO MAIN INSERT ROUTINE                  */ 00868000
*/*                                                                  */ 00869000
*/********************************************************************/ 00870000
*                                                                  0249 00871000
*EXITAPDE:                          /* LABEL TO EXIT ROUTINE         */ 00872000
*   RETURN CODE(RTNCODE);                                          0249 00873000
@RC00236 DS    0H                                                  0249 00874000
EXITAPDE L     @14,@SA00005                                        0249 00875000
         LM    @00,@12,@SA00005+8                                  0249 00876000
         BR    @14                                                 0249 00877000
*   END INSTAPDE;                                                  0250 00878000
*                                                                  0251 00879000
*/********************************************************************/ 00880000
*/*                                                                  */ 00881000
*/*    THE FOLLOWING PROCEDURE IS THE VALUE PDE INSERT ROUTINE.      */ 00882000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 00883000
*/*    TYPE INSERT.  THE PRIMARY FUNCTION IS:                        */ 00884000
*/*                                                                  */ 00885000
*/*        1.  PREPARE THE INSERT FOR INCLUSION                      */ 00886000
*/*                                                                  */ 00887000
*/********************************************************************/ 00888000
*/********************************************************************/ 00889000
*/*                                                                  */ 00890000
*/*INSTVPDE:       E  PDE INSERT BUILD ROUTINE                       */ 00891000
*/*                                                                  */ 00892000
*/********************************************************************/ 00893000
*                                                                  0251 00894000
*INSTVPDE:                                                         0251 00895000
*   PROCEDURE;                                                     0251 00896000
INSTVPDE STM   @14,@12,12(@13)                                     0251 00897000
*   DCL                                                            0252 00898000
*     INSTPDE CHAR(8) BDY(WORD) BASED(INTPLPTR(INSTCTR));/* OVERLAY  */ 00899000
*   DCL                                                            0253 00900000
*     VPDETXT CHAR(*) BASED(VPDEPT);/* DEFINE USER TEXT              */ 00901000
*   VPDE=INSTPDE;                   /* MOVE PDE INTO MY WORK PDE     */ 00902000
         L     @14,INSTCTR                                         0254 00903000
         SLA   @14,2                                               0254 00904000
         L     @06,SIOINTPT                                        0254 00905000
         AL    @06,@CF00622                                        0254 00906000
         L     @14,INTPLPTR(@14,@06)                               0254 00907000
         MVC   VPDE(8),INSTPDE(@14)                                0254 00908000
*   IF VPDEL>50 THEN                /* MAKE SURE WILL NOT OVERFLOW   */ 00909000
         LA    @14,50                                              0255 00910000
         CH    @14,VPDEL                                           0255 00911000
         BNL   @RF00255                                            0255 00912000
*     VPDEL=50;                     /* REDUCE TO MAX ALLOWED         */ 00913000
         STH   @14,VPDEL                                           0256 00914000
*/********************************************************************/ 00915000
*/*                                                                  */ 00916000
*/*                P  PREPARE INSERT FOR INSERTION                   */ 00917000
*/*                                                                  */ 00918000
*/********************************************************************/ 00919000
*                                                                  0257 00920000
*   IF LEV=1 THEN                   /* SEE IF WE'RE WORKING OF 1ST   */ 00921000
@RF00255 CLI   LEV,1                                               0257 00922000
         BNE   @RF00257                                            0257 00923000
*     DO;                                                          0258 00924000
*       LENINST1(INSTCTR)=VPDEL+5;  /* CALCULATE LENGTH OF INSERT    */ 00925000
         L     @14,INSTCTR                                         0259 00926000
         LR    @06,@14                                             0259 00927000
         MH    @06,@CH00617                                        0259 00928000
         LH    @11,VPDEL                                           0259 00929000
         LA    @10,5                                               0259 00930000
         ALR   @10,@11                                             0259 00931000
         STH   @10,LENINST1-56(@06)                                0259 00932000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL IN */ 00933000
         L     @10,MSGPTR                                          0260 00934000
         BCTR  @10,0                                               0260 00935000
         SLR   @05,@05                                             0260 00936000
         IC    @05,INDISP(@14,@10)                                 0260 00937000
         STH   @05,DISPIN1-56(@06)                                 0260 00938000
*       INSTTXT1(INSTCTR,1:VPDEL+1)=VPDETXT(1:VPDEL+1);            0261 00939000
         LA    @10,INSTTXT1-56(@06)                                0261 00940000
         L     @05,VPDEPT                                          0261 00941000
         EX    @11,@SM00623                                        0261 00942000
*       INSTTXT1(INSTCTR,VPDEL+1:VPDEL+1)=' ';/* INSERT BLANK        */ 00943000
         ALR   @11,@06                                             0262 00944000
         LA    @10,INSTTXT1-56(@11)                                0262 00945000
         MVI   0(@10),C' '                                         0262 00946000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE PTR TO PL  */ 00947000
         SLA   @14,2                                               0263 00948000
         LA    @06,MSGINST1-56(@06)                                0263 00949000
         L     @11,SIOINTPT                                        0263 00950000
         AL    @11,@CF00622                                        0263 00951000
         ST    @06,INTPLPTR(@14,@11)                               0263 00952000
*     END;                                                         0264 00953000
*   ELSE                                                           0265 00954000
*     IF LEV=2 THEN                 /* SEE IF WE'RE WORKING OF 2ND   */ 00955000
         B     @RC00257                                            0265 00956000
@RF00257 CLI   LEV,2                                               0265 00957000
         BNE   @RF00265                                            0265 00958000
*       DO;                                                        0266 00959000
*         LENINST2(INSTCTR)=VPDEL+5;/* CALCULATE LENGTH OR INST      */ 00960000
         L     @14,INSTCTR                                         0267 00961000
         LR    @06,@14                                             0267 00962000
         MH    @06,@CH00617                                        0267 00963000
         LH    @11,VPDEL                                           0267 00964000
         LA    @10,5                                               0267 00965000
         ALR   @10,@11                                             0267 00966000
         STH   @10,LENINST2-56(@06)                                0267 00967000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL     00968000
*                                      IN                            */ 00969000
         L     @10,MSGPTR                                          0268 00970000
         BCTR  @10,0                                               0268 00971000
         SLR   @05,@05                                             0268 00972000
         IC    @05,INDISP(@14,@10)                                 0268 00973000
         STH   @05,DISPIN2-56(@06)                                 0268 00974000
*         INSTTXT2(INSTCTR,1:VPDEL+1)=VPDETXT(1:VPDEL+1);          0269 00975000
         LA    @10,INSTTXT2-56(@06)                                0269 00976000
         L     @05,VPDEPT                                          0269 00977000
         EX    @11,@SM00623                                        0269 00978000
*         INSTTXT2(INSTCTR,VPDEL+1:VPDEL+1)=' ';/* INSERT BLANK      */ 00979000
         ALR   @11,@06                                             0270 00980000
         LA    @10,INSTTXT2-56(@11)                                0270 00981000
         MVI   0(@10),C' '                                         0270 00982000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE PTR TO PL*/ 00983000
         SLA   @14,2                                               0271 00984000
         LA    @06,MSGINST2-56(@06)                                0271 00985000
         L     @11,SIOINTPT                                        0271 00986000
         AL    @11,@CF00622                                        0271 00987000
         ST    @06,INTPLPTR(@14,@11)                               0271 00988000
*       END;                                                       0272 00989000
*     ELSE                                                         0273 00990000
*       RTNCODE=4;                  /* IF LEV NOT 1 OR 2 THEN ERROR  */ 00991000
         B     @RC00265                                            0273 00992000
@RF00265 LA    RTNCODE,4                                           0273 00993000
*/********************************************************************/ 00994000
*/*                                                                  */ 00995000
*/*                R  RETURN TO MAIN INSERT ROUTINE                  */ 00996000
*/*                                                                  */ 00997000
*/********************************************************************/ 00998000
*                                                                  0274 00999000
*EXITVPDE:                          /* LABEL USED TO BRANCH TO EXIT  */ 01000000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT PROCESSOR    */ 01001000
@RC00265 DS    0H                                                  0274 01002000
@RC00257 DS    0H                                                  0274 01003000
EXITVPDE L     @14,12(,@13)                                        0274 01004000
         LM    @00,@12,20(@13)                                     0274 01005000
         BR    @14                                                 0274 01006000
*   END INSTVPDE;                   /* END OF ROUTINE                */ 01007000
*                                                                  0276 01008000
*/********************************************************************/ 01009000
*/*                                                                  */ 01010000
*/*    THE FOLLOWING PROCEDURE IS THE NUMBER INSERT ROUTINE.         */ 01011000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 01012000
*/*    TYPE INSERT.  THE PRIMARY FUNCTIONS ARE:                      */ 01013000
*/*                                                                  */ 01014000
*/*        1.  LOCATE THE INSERT WITHIN IKJEGMSG                     */ 01015000
*/*        2.  PREPARE THE INSERT FOR INCLUSION                      */ 01016000
*/*                                                                  */ 01017000
*/********************************************************************/ 01018000
*/********************************************************************/ 01019000
*/*                                                                  */ 01020000
*/*INSTNUM:        E  NUMBER INSERT ROUTINE                          */ 01021000
*/*                                                                  */ 01022000
*/********************************************************************/ 01023000
*                                                                  0276 01024000
*INSTNUM:                                                          0276 01025000
*   PROCEDURE;                                                     0276 01026000
*                                                                  0276 01027000
INSTNUM  STM   @14,@12,@SA00007                                    0276 01028000
*/********************************************************************/ 01029000
*/*                                                                  */ 01030000
*/*                P  FIND INSERT AND PREPARE FOR INCLUSION          */ 01031000
*/*                                                                  */ 01032000
*/********************************************************************/ 01033000
*                                                                  0277 01034000
*   INDXTAB=INSERTPT;               /* ESTAB ADDRESSABILITY TO INST  */ 01035000
         L     @14,INSERTPT(,MSGCSECT)                             0277 01036000
         ST    @14,INDXTAB                                         0277 01037000
*   IF AMTINDX<INTPLPTR(INSTCTR) THEN/* SEE IF IN INDEX RANGE        */ 01038000
         L     @06,INSTCTR                                         0278 01039000
         SLA   @06,2                                               0278 01040000
         L     @14,AMTINDX(,@14)                                   0278 01041000
         L     @11,SIOINTPT                                        0278 01042000
         AL    @11,@CF00622                                        0278 01043000
         C     @14,INTPLPTR(@06,@11)                               0278 01044000
         BNL   @RF00278                                            0278 01045000
*     DO;                                                          0279 01046000
*       CALL BADPARM;               /* HAVE MESSAGE SENT OUT         */ 01047000
         BAL   @14,BADPARM                                         0280 01048000
*       GO TO EXITNUM;              /* GO TO EXIT OR ROUTINE         */ 01049000
         B     EXITNUM                                             0281 01050000
*     END;                                                         0282 01051000
*   INSTPTR=INDXPTR(INTPLPTR(INSTCTR));/* GET ADDRESS OR INSERT      */ 01052000
@RF00278 L     @14,INSTCTR                                         0283 01053000
         SLA   @14,2                                               0283 01054000
         L     @06,SIOINTPT                                        0283 01055000
         AL    @06,@CF00622                                        0283 01056000
         L     @14,INTPLPTR(@14,@06)                               0283 01057000
         SLA   @14,2                                               0283 01058000
         L     @06,INDXTAB                                         0283 01059000
         L     @14,INDXPTR-4(@14,@06)                              0283 01060000
         ST    @14,INSTPTR                                         0283 01061000
*   IF MSGINST(1)='FF'X THEN        /* TEST FOR MESSING INSERT       */ 01062000
         CLI   MSGINST(@14),X'FF'                                  0284 01063000
         BNE   @RF00284                                            0284 01064000
*     DO;                                                          0285 01065000
*       CALL BADPARM;               /* HAVE MESSAGE SENT OUT         */ 01066000
         BAL   @14,BADPARM                                         0286 01067000
*       GO TO EXITNUM;              /* GO TO EXIT OF ROUTINE         */ 01068000
         B     EXITNUM                                             0287 01069000
*     END;                                                         0288 01070000
*   IF LEV=1 THEN                   /* TEST FOR FIRST LEVEL          */ 01071000
@RF00284 CLI   LEV,1                                               0289 01072000
         BNE   @RF00289                                            0289 01073000
*     DO;                                                          0290 01074000
*       MSGINST1(INSTCTR)=MSGINST;  /* MOVE INSERT TO WORKAREA       */ 01075000
         L     @14,INSTCTR                                         0291 01076000
         LR    @06,@14                                             0291 01077000
         MH    @06,@CH00617                                        0291 01078000
         LA    @11,MSGINST1-56(@06)                                0291 01079000
         MVI   54(@11),C' '                                        0291 01080000
         MVI   55(@11),C' '                                        0291 01081000
         L     @10,INSTPTR                                         0291 01082000
         MVC   0(54,@11),MSGINST(@10)                              0291 01083000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACE VALUE IN   */ 01084000
         L     @11,MSGPTR                                          0292 01085000
         BCTR  @11,0                                               0292 01086000
         SLR   @10,@10                                             0292 01087000
         IC    @10,INDISP(@14,@11)                                 0292 01088000
         STH   @10,DISPIN1-56(@06)                                 0292 01089000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE ADDR TO PL */ 01090000
         SLA   @14,2                                               0293 01091000
         LA    @06,MSGINST1-56(@06)                                0293 01092000
         L     @11,SIOINTPT                                        0293 01093000
         AL    @11,@CF00622                                        0293 01094000
         ST    @06,INTPLPTR(@14,@11)                               0293 01095000
*     END;                                                         0294 01096000
*   ELSE                                                           0295 01097000
*     IF LEV=2 THEN                 /* TEST FOR SECOND LEVEL         */ 01098000
         B     @RC00289                                            0295 01099000
@RF00289 CLI   LEV,2                                               0295 01100000
         BNE   @RF00295                                            0295 01101000
*       DO;                                                        0296 01102000
*         MSGINST2(INSTCTR)=MSGINST;/* MOVE INSERT TO WORKAREA       */ 01103000
         L     @14,INSTCTR                                         0297 01104000
         LR    @06,@14                                             0297 01105000
         MH    @06,@CH00617                                        0297 01106000
         LA    @11,MSGINST2-56(@06)                                0297 01107000
         MVI   54(@11),C' '                                        0297 01108000
         MVI   55(@11),C' '                                        0297 01109000
         L     @10,INSTPTR                                         0297 01110000
         MVC   0(54,@11),MSGINST(@10)                              0297 01111000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACE VALUE IN */ 01112000
         L     @11,MSGPTR                                          0298 01113000
         BCTR  @11,0                                               0298 01114000
         SLR   @10,@10                                             0298 01115000
         IC    @10,INDISP(@14,@11)                                 0298 01116000
         STH   @10,DISPIN2-56(@06)                                 0298 01117000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE ADDR TO     01118000
*                                      PL                            */ 01119000
         SLA   @14,2                                               0299 01120000
         LA    @06,MSGINST2-56(@06)                                0299 01121000
         L     @11,SIOINTPT                                        0299 01122000
         AL    @11,@CF00622                                        0299 01123000
         ST    @06,INTPLPTR(@14,@11)                               0299 01124000
*       END;                                                       0300 01125000
*     ELSE                                                         0301 01126000
*       RTNCODE=4;                  /* IF LEV NOT 1 OR 2 THEN ERROR  */ 01127000
         B     @RC00295                                            0301 01128000
@RF00295 LA    RTNCODE,4                                           0301 01129000
*/********************************************************************/ 01130000
*/*                                                                  */ 01131000
*/*EXITNUM:        R  RETURN TO MAIN INSERT ROUTINE                  */ 01132000
*/*                                                                  */ 01133000
*/********************************************************************/ 01134000
*                                                                  0302 01135000
*EXITNUM:                           /* LABEL TO EXIT ROUTINE         */ 01136000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT ROUTINE      */ 01137000
@RC00295 DS    0H                                                  0302 01138000
@RC00289 DS    0H                                                  0302 01139000
EXITNUM  L     @14,@SA00007                                        0302 01140000
         LM    @00,@12,@SA00007+8                                  0302 01141000
         BR    @14                                                 0302 01142000
*   END INSTNUM;                                                   0303 01143000
*                                                                  0304 01144000
*/********************************************************************/ 01145000
*/*                                                                  */ 01146000
*/*    THE FOLLOWING PROCEDURE IS THE PREFORMMATTED USER'S INSERT R. */ 01147000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 01148000
*/*    TYPE INSERT.  THE PRIMARY FUNCTION IS:                        */ 01149000
*/*                                                                  */ 01150000
*/*        1.  PREPARE THE INSERT FOR INCLUSION                      */ 01151000
*/*                                                                  */ 01152000
*/********************************************************************/ 01153000
*/********************************************************************/ 01154000
*/*                                                                  */ 01155000
*/*INSTADDR:       E  ADDR BUILD INSERT ROUTINE                      */ 01156000
*/*                P  PREPARE INSERT FOR INCLUSION                   */ 01157000
*/*                                                                  */ 01158000
*/********************************************************************/ 01159000
*                                                                  0304 01160000
*INSTADDR:                                                         0304 01161000
*   PROCEDURE;                                                     0304 01162000
INSTADDR STM   @14,@12,12(@13)                                     0304 01163000
*   INSTPTR=INTPLPTR(INSTCTR);      /* OBTAIN ADDRESS FOR MOVE       */ 01164000
         L     @14,INSTCTR                                         0305 01165000
         SLA   @14,2                                               0305 01166000
         L     @06,SIOINTPT                                        0305 01167000
         AL    @06,@CF00622                                        0305 01168000
         L     @14,INTPLPTR(@14,@06)                               0305 01169000
         ST    @14,INSTPTR                                         0305 01170000
*   IF INSTLEN>54 THEN              /* MAKE SURE LENGTH IS LESS-MAX  */ 01171000
         LA    @06,54                                              0306 01172000
         CH    @06,INSTLEN(,@14)                                   0306 01173000
         BNL   @RF00306                                            0306 01174000
*     INSTLEN=54;                   /* REDUCE TO MAXIMUM             */ 01175000
         STH   @06,INSTLEN(,@14)                                   0307 01176000
*   IF LEV=1 THEN                   /* TEST FOR MSG LEVEL 1          */ 01177000
@RF00306 CLI   LEV,1                                               0308 01178000
         BNE   @RF00308                                            0308 01179000
*     DO;                                                          0309 01180000
*       MSGINST1(INSTCTR,1:INSTLEN)=MSGINST;/* MOVE INSERT TO WKAREA */ 01181000
         L     @14,INSTCTR                                         0310 01182000
         LR    @06,@14                                             0310 01183000
         MH    @06,@CH00617                                        0310 01184000
         LA    @11,MSGINST1-56(@06)                                0310 01185000
         L     @10,INSTPTR                                         0310 01186000
         LH    @05,INSTLEN(,@10)                                   0310 01187000
         BCTR  @05,0                                               0310 01188000
         EX    @05,@SM00625                                        0310 01189000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE IN THE DISPLACEMENT */ 01190000
         L     @11,MSGPTR                                          0311 01191000
         BCTR  @11,0                                               0311 01192000
         SLR   @10,@10                                             0311 01193000
         IC    @10,INDISP(@14,@11)                                 0311 01194000
         STH   @10,DISPIN1-56(@06)                                 0311 01195000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE ADDR TO PL */ 01196000
         SLA   @14,2                                               0312 01197000
         LA    @06,MSGINST1-56(@06)                                0312 01198000
         L     @11,SIOINTPT                                        0312 01199000
         AL    @11,@CF00622                                        0312 01200000
         ST    @06,INTPLPTR(@14,@11)                               0312 01201000
*     END;                                                         0313 01202000
*   ELSE                                                           0314 01203000
*     IF LEV=2 THEN                 /* TEST FOR MSG LEVEL 2          */ 01204000
         B     @RC00308                                            0314 01205000
@RF00308 CLI   LEV,2                                               0314 01206000
         BNE   @RF00314                                            0314 01207000
*       DO;                                                        0315 01208000
*         MSGINST2(INSTCTR,1:INSTLEN)=MSGINST;/* MOVE INSERT TO    0316 01209000
*                                      WKAREA                        */ 01210000
         L     @14,INSTCTR                                         0316 01211000
         LR    @06,@14                                             0316 01212000
         MH    @06,@CH00617                                        0316 01213000
         LA    @11,MSGINST2-56(@06)                                0316 01214000
         L     @10,INSTPTR                                         0316 01215000
         LH    @05,INSTLEN(,@10)                                   0316 01216000
         BCTR  @05,0                                               0316 01217000
         EX    @05,@SM00625                                        0316 01218000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE IN THE          0317 01219000
*                                      DISPLACEMENT                  */ 01220000
         L     @11,MSGPTR                                          0317 01221000
         BCTR  @11,0                                               0317 01222000
         SLR   @10,@10                                             0317 01223000
         IC    @10,INDISP(@14,@11)                                 0317 01224000
         STH   @10,DISPIN2-56(@06)                                 0317 01225000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE ADDR TO     01226000
*                                      PL                            */ 01227000
         SLA   @14,2                                               0318 01228000
         LA    @06,MSGINST2-56(@06)                                0318 01229000
         L     @11,SIOINTPT                                        0318 01230000
         AL    @11,@CF00622                                        0318 01231000
         ST    @06,INTPLPTR(@14,@11)                               0318 01232000
*       END;                                                       0319 01233000
*     ELSE                                                         0320 01234000
*       RTNCODE=4;                  /* IF NOT LEV 1 OR 2 SOMEHOW ER  */ 01235000
         B     @RC00314                                            0320 01236000
@RF00314 LA    RTNCODE,4                                           0320 01237000
*/********************************************************************/ 01238000
*/*                                                                  */ 01239000
*/*EXITADDR:       R  RETURN TO MAIN INSERT ROUTINE                  */ 01240000
*/*                                                                  */ 01241000
*/********************************************************************/ 01242000
*                                                                  0321 01243000
*EXITADDR:                          /* LABEL TO BRANCH TO EXIT       */ 01244000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT ROUTINE      */ 01245000
@RC00314 DS    0H                                                  0321 01246000
@RC00308 DS    0H                                                  0321 01247000
EXITADDR L     @14,12(,@13)                                        0321 01248000
         LM    @00,@12,20(@13)                                     0321 01249000
         BR    @14                                                 0321 01250000
*   END INSTADDR;                   /* END OF ROUTINE                */ 01251000
*                                                                  0323 01252000
*/********************************************************************/ 01253000
*/*                                                                  */ 01254000
*/*    THE FOLLOWING PROCEDURE IS THE  UNFORMMATTED USER'S INSERT R. */ 01255000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 01256000
*/*    TYPE INSERT.  THE PRIMARY FUNCTIONS ARE:                      */ 01257000
*/*                                                                  */ 01258000
*/*        1.  CALL IKJEGCVT TO CONVERT INSERT TO PRINTABLE CHAR.    */ 01259000
*/*        2.  PREPARE THE INSERT FOR INCLUSION                      */ 01260000
*/*                                                                  */ 01261000
*/********************************************************************/ 01262000
*/********************************************************************/ 01263000
*/*                                                                  */ 01264000
*/*INSTADDX:       E  ADDRCONV BUILD INSERT ROUTINE                  */ 01265000
*/*                P  CONVERT TEXT TO PRINTABLE CHARACTERS           */ 01266000
*/*                P  PREPARE INSERT FOR INCLUSION                   */ 01267000
*/*                                                                  */ 01268000
*/********************************************************************/ 01269000
*                                                                  0323 01270000
*INSTADDX:                                                         0323 01271000
*   PROCEDURE;                                                     0323 01272000
INSTADDX STM   @14,@12,@SA00009                                    0323 01273000
*   INSTPTR=INTPLPTR(INSTCTR);      /* OBTAIN INSERT ADDRESS         */ 01274000
         L     @14,INSTCTR                                         0324 01275000
         SLA   @14,2                                               0324 01276000
         L     @06,SIOINTPT                                        0324 01277000
         AL    @06,@CF00622                                        0324 01278000
         L     @14,INTPLPTR(@14,@06)                               0324 01279000
         ST    @14,INSTPTR                                         0324 01280000
*   IF INSTLEN>54 THEN              /* SEE IF CALL FOR MORE THAN MX  */ 01281000
         LA    @06,54                                              0325 01282000
         CH    @06,INSTLEN(,@14)                                   0325 01283000
         BNL   @RF00325                                            0325 01284000
*     INSTLEN=54;                   /* IF SO REDUCE TO MAX           */ 01285000
         STH   @06,INSTLEN(,@14)                                   0326 01286000
*   VPDEL=(INSTLEN-4)/2;            /* CALCULATE LENGTH FOR CVT      */ 01287000
@RF00325 LA    @14,4                                               0327 01288000
         L     @06,INSTPTR                                         0327 01289000
         LH    @04,INSTLEN(,@06)                                   0327 01290000
         SLR   @04,@14                                             0327 01291000
         SRDA  @04,32                                              0327 01292000
         D     @04,@CF00119                                        0327 01293000
         STH   @05,VPDEL                                           0327 01294000
*   VPDEPT=INSTPTR+4+VPDEL;         /* ADJUST & SET UP ADDR OF DATA  */ 01295000
         ALR   @06,@14                                             0328 01296000
         ALR   @06,@05                                             0328 01297000
         ST    @06,VPDEPT                                          0328 01298000
*   VPDET='04'X;                    /* INDICATE THAT NEED DATA HEX   */ 01299000
         MVI   VPDET,X'04'                                         0329 01300000
*   PRMREG0=-1;                     /* INDICATE THAT RESULTS BE PRT  */ 01301000
         SLR   PRMREG0,PRMREG0                                     0330 01302000
         BCTR  PRMREG0,0                                           0330 01303000
*   PRMREG1=ADDR(VPDE);             /* PASS ADDR OF PDE IN REG 1     */ 01304000
         LA    PRMREG1,VPDE                                        0331 01305000
*   CALL CONVROUT;                  /* CALL IKJEGCVT TO CONVERT DAT  */ 01306000
         L     @15,TSTCONVT                                        0332 01307000
         BALR  @14,@15                                             0332 01308000
*   IF RTNCODE^=0 THEN              /* TEST FOR SUCCESS OF REQ'T     */ 01309000
         LTR   RTNCODE,RTNCODE                                     0333 01310000
         BNZ   @RT00333                                            0333 01311000
*     GO TO EXITADDX;               /* BRANCH TO EXIT IF ERROR       */ 01312000
*   IF LEV=1 THEN                   /* SEE IF WE'RE WORKING OF 1ST   */ 01313000
         CLI   LEV,1                                               0335 01314000
         BNE   @RF00335                                            0335 01315000
*     DO;                                                          0336 01316000
*       LENINST1(INSTCTR)=CONLEN+5; /* CALCULATE LEN OR INST         */ 01317000
         L     @14,INSTCTR                                         0337 01318000
         LR    @06,@14                                             0337 01319000
         MH    @06,@CH00617                                        0337 01320000
         L     @11,CONAREA                                         0337 01321000
         SLR   @10,@10                                             0337 01322000
         IC    @10,CONLEN(,@11)                                    0337 01323000
         LA    @05,5                                               0337 01324000
         ALR   @05,@10                                             0337 01325000
         STH   @05,LENINST1-56(@06)                                0337 01326000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL IN */ 01327000
         L     @05,MSGPTR                                          0338 01328000
         BCTR  @05,0                                               0338 01329000
         SLR   @04,@04                                             0338 01330000
         IC    @04,INDISP(@14,@05)                                 0338 01331000
         STH   @04,DISPIN1-56(@06)                                 0338 01332000
*       INSTTXT1(INSTCTR)=CONTXT;   /* MOVE IN INST CONVERTED TEXT   */ 01333000
         LA    @05,INSTTXT1-56(@06)                                0339 01334000
         MVI   31(@05),C' '                                        0339 01335000
         MVC   32(20,@05),31(@05)                                  0339 01336000
         MVC   0(31,@05),CONTXT(@11)                               0339 01337000
*       INSTTXT1(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK      */ 01338000
         ALR   @10,@06                                             0340 01339000
         LA    @11,INSTTXT1-56(@10)                                0340 01340000
         MVI   0(@11),C' '                                         0340 01341000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE PTR TO PL  */ 01342000
         SLA   @14,2                                               0341 01343000
         LA    @06,MSGINST1-56(@06)                                0341 01344000
         L     @11,SIOINTPT                                        0341 01345000
         AL    @11,@CF00622                                        0341 01346000
         ST    @06,INTPLPTR(@14,@11)                               0341 01347000
*     END;                                                         0342 01348000
*   ELSE                                                           0343 01349000
*     IF LEV=2 THEN                 /* SEE IF WE'RE WORKING OF 2ND   */ 01350000
         B     @RC00335                                            0343 01351000
@RF00335 CLI   LEV,2                                               0343 01352000
         BNE   @RF00343                                            0343 01353000
*       DO;                                                        0344 01354000
*         LENINST2(INSTCTR)=CONLEN+5;/* CALCULATE LENGTH OR INST     */ 01355000
         L     @14,INSTCTR                                         0345 01356000
         LR    @06,@14                                             0345 01357000
         MH    @06,@CH00617                                        0345 01358000
         L     @11,CONAREA                                         0345 01359000
         SLR   @10,@10                                             0345 01360000
         IC    @10,CONLEN(,@11)                                    0345 01361000
         LA    @05,5                                               0345 01362000
         ALR   @05,@10                                             0345 01363000
         STH   @05,LENINST2-56(@06)                                0345 01364000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL     01365000
*                                      IN                            */ 01366000
         L     @05,MSGPTR                                          0346 01367000
         BCTR  @05,0                                               0346 01368000
         SLR   @04,@04                                             0346 01369000
         IC    @04,INDISP(@14,@05)                                 0346 01370000
         STH   @04,DISPIN2-56(@06)                                 0346 01371000
*         INSTTXT2(INSTCTR)=CONTXT; /* MOVE IN INST CONVERTED TEXT   */ 01372000
         LA    @05,INSTTXT2-56(@06)                                0347 01373000
         MVI   31(@05),C' '                                        0347 01374000
         MVC   32(20,@05),31(@05)                                  0347 01375000
         MVC   0(31,@05),CONTXT(@11)                               0347 01376000
*         INSTTXT2(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK    */ 01377000
         ALR   @10,@06                                             0348 01378000
         LA    @11,INSTTXT2-56(@10)                                0348 01379000
         MVI   0(@11),C' '                                         0348 01380000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE PTR TO PL*/ 01381000
         SLA   @14,2                                               0349 01382000
         LA    @06,MSGINST2-56(@06)                                0349 01383000
         L     @11,SIOINTPT                                        0349 01384000
         AL    @11,@CF00622                                        0349 01385000
         ST    @06,INTPLPTR(@14,@11)                               0349 01386000
*       END;                                                       0350 01387000
*     ELSE                                                         0351 01388000
*       RTNCODE=4;                  /* IF LEV NOT 1 OR 2 THEN ERROR  */ 01389000
         B     @RC00343                                            0351 01390000
@RF00343 LA    RTNCODE,4                                           0351 01391000
*/********************************************************************/ 01392000
*/*                                                                  */ 01393000
*/*                R  RETURN TO MAIN INSERT ROUTINE                  */ 01394000
*/*                                                                  */ 01395000
*/********************************************************************/ 01396000
*                                                                  0352 01397000
*EXITADDX:                          /* LABEL USED TO BRANCH TO EXIT  */ 01398000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT PROCESSOR    */ 01399000
@RC00343 DS    0H                                                  0352 01400000
@RC00335 DS    0H                                                  0352 01401000
EXITADDX L     @14,@SA00009                                        0352 01402000
         LM    @00,@12,@SA00009+8                                  0352 01403000
         BR    @14                                                 0352 01404000
*   END INSTADDX;                   /* END OF ROUTINE                */ 01405000
*                                                                  0354 01406000
*/********************************************************************/ 01407000
*/*                                                                  */ 01408000
*/*    THE FOLLOWING PROCEDURE IS THE  UNFORMMATTED USER'S INSERT R. */ 01409000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 01410000
*/*    TYPE INSERT.  THE PRIMARY FUNCTIONS ARE:                      */ 01411000
*/*                                                                  */ 01412000
*/*        1.  CALL IKJEGCVT TO CONVERT INSERT TO PRINTABLE CHAR.    */ 01413000
*/*        2.  PREPARE THE INSERT FOR INCLUSION                      */ 01414000
*/*                                                                  */ 01415000
*/********************************************************************/ 01416000
*/********************************************************************/ 01417000
*/*                                                                  */ 01418000
*/*INSTADDD:       E  INSTADDD BUILD INSERT ROUTINE                  */ 01419000
*/*                P  CONVERT TEXT TO DECIMAL PRINTABLE CHARACTERS   */ 01420000
*/*                P  PREPARE INSERT FOR INCLUSION                   */ 01421000
*/*                                                                  */ 01422000
*/********************************************************************/ 01423000
*                                                                  0354 01424000
*INSTADDD:                                                         0354 01425000
*   PROCEDURE;                                                     0354 01426000
INSTADDD STM   @14,@12,@SA00010                                    0354 01427000
*   INSTPTR=INTPLPTR(INSTCTR);      /* OBTAIN INSERT ADDRESS         */ 01428000
         L     @14,INSTCTR                                         0355 01429000
         SLA   @14,2                                               0355 01430000
         L     @06,SIOINTPT                                        0355 01431000
         AL    @06,@CF00622                                        0355 01432000
         L     @14,INTPLPTR(@14,@06)                               0355 01433000
         ST    @14,INSTPTR                                         0355 01434000
*   IF INSTLEN>54 THEN              /* MAKE SURE INSERT UNDER MAX    */ 01435000
         LA    @06,54                                              0356 01436000
         CH    @06,INSTLEN(,@14)                                   0356 01437000
         BNL   @RF00356                                            0356 01438000
*     INSTLEN=54;                   /* IF NOT REDUCE IT              */ 01439000
         STH   @06,INSTLEN(,@14)                                   0357 01440000
*   VPDEL=(INSTLEN-4)/2;            /* CALCULATE LENGTH FOR CVT      */ 01441000
@RF00356 LA    @14,4                                               0358 01442000
         L     @06,INSTPTR                                         0358 01443000
         LH    @04,INSTLEN(,@06)                                   0358 01444000
         SLR   @04,@14                                             0358 01445000
         SRDA  @04,32                                              0358 01446000
         D     @04,@CF00119                                        0358 01447000
         STH   @05,VPDEL                                           0358 01448000
*   VPDEPT=INSTPTR+4+VPDEL;         /* ADJUST & SET UP ADDR OF DATA  */ 01449000
         ALR   @06,@14                                             0359 01450000
         ALR   @06,@05                                             0359 01451000
         ST    @06,VPDEPT                                          0359 01452000
*   VPDET='10'X;                    /* INDICATE THAT NEED DATA DEC   */ 01453000
         MVI   VPDET,X'10'                                         0360 01454000
*   PRMREG0=-1;                     /* INDICATE THAT RESULTS BE PRT  */ 01455000
         SLR   PRMREG0,PRMREG0                                     0361 01456000
         BCTR  PRMREG0,0                                           0361 01457000
*   PRMREG1=ADDR(VPDE);             /* PASS ADDR OF PDE IN REG 1     */ 01458000
         LA    PRMREG1,VPDE                                        0362 01459000
*   CALL CONVROUT;                  /* CALL IKJEGCVT TO CONVERT DAT  */ 01460000
         L     @15,TSTCONVT                                        0363 01461000
         BALR  @14,@15                                             0363 01462000
*   IF RTNCODE^=0 THEN              /* TEST FOR SUCCESS OF REQ'T     */ 01463000
         LTR   RTNCODE,RTNCODE                                     0364 01464000
         BNZ   @RT00364                                            0364 01465000
*     GO TO EXITADDD;               /* BRANCH TO EXIT IF ERROR       */ 01466000
*   IF LEV=1 THEN                   /* SEE IF WE'RE WORKING OF 1ST   */ 01467000
         CLI   LEV,1                                               0366 01468000
         BNE   @RF00366                                            0366 01469000
*     DO;                                                          0367 01470000
*       LENINST1(INSTCTR)=CONLEN+5; /* CALCULATE LENGTH OF INSERT    */ 01471000
         L     @14,INSTCTR                                         0368 01472000
         LR    @06,@14                                             0368 01473000
         MH    @06,@CH00617                                        0368 01474000
         L     @11,CONAREA                                         0368 01475000
         SLR   @10,@10                                             0368 01476000
         IC    @10,CONLEN(,@11)                                    0368 01477000
         LA    @05,5                                               0368 01478000
         ALR   @05,@10                                             0368 01479000
         STH   @05,LENINST1-56(@06)                                0368 01480000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL IN */ 01481000
         L     @05,MSGPTR                                          0369 01482000
         BCTR  @05,0                                               0369 01483000
         SLR   @04,@04                                             0369 01484000
         IC    @04,INDISP(@14,@05)                                 0369 01485000
         STH   @04,DISPIN1-56(@06)                                 0369 01486000
*       INSTTXT1(INSTCTR)=CONTXT;   /* MOVE IN INST CONVERTED TEXT   */ 01487000
         LA    @05,INSTTXT1-56(@06)                                0370 01488000
         MVI   31(@05),C' '                                        0370 01489000
         MVC   32(20,@05),31(@05)                                  0370 01490000
         MVC   0(31,@05),CONTXT(@11)                               0370 01491000
*       INSTTXT1(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK      */ 01492000
         ALR   @10,@06                                             0371 01493000
         LA    @11,INSTTXT1-56(@10)                                0371 01494000
         MVI   0(@11),C' '                                         0371 01495000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE PTR TO PL  */ 01496000
         SLA   @14,2                                               0372 01497000
         LA    @06,MSGINST1-56(@06)                                0372 01498000
         L     @11,SIOINTPT                                        0372 01499000
         AL    @11,@CF00622                                        0372 01500000
         ST    @06,INTPLPTR(@14,@11)                               0372 01501000
*     END;                                                         0373 01502000
*   ELSE                                                           0374 01503000
*     IF LEV=2 THEN                 /* SEE IF WE'RE WORKING OF 2ND   */ 01504000
         B     @RC00366                                            0374 01505000
@RF00366 CLI   LEV,2                                               0374 01506000
         BNE   @RF00374                                            0374 01507000
*       DO;                                                        0375 01508000
*         LENINST2(INSTCTR)=CONLEN+5;/* CALCULATE LENGTH OF INSERT   */ 01509000
         L     @14,INSTCTR                                         0376 01510000
         LR    @06,@14                                             0376 01511000
         MH    @06,@CH00617                                        0376 01512000
         L     @11,CONAREA                                         0376 01513000
         SLR   @10,@10                                             0376 01514000
         IC    @10,CONLEN(,@11)                                    0376 01515000
         LA    @05,5                                               0376 01516000
         ALR   @05,@10                                             0376 01517000
         STH   @05,LENINST2-56(@06)                                0376 01518000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL     01519000
*                                      IN                            */ 01520000
         L     @05,MSGPTR                                          0377 01521000
         BCTR  @05,0                                               0377 01522000
         SLR   @04,@04                                             0377 01523000
         IC    @04,INDISP(@14,@05)                                 0377 01524000
         STH   @04,DISPIN2-56(@06)                                 0377 01525000
*         INSTTXT2(INSTCTR)=CONTXT; /* MOVE IN INST CONVERTED TEXT   */ 01526000
         LA    @05,INSTTXT2-56(@06)                                0378 01527000
         MVI   31(@05),C' '                                        0378 01528000
         MVC   32(20,@05),31(@05)                                  0378 01529000
         MVC   0(31,@05),CONTXT(@11)                               0378 01530000
*         INSTTXT2(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK    */ 01531000
         ALR   @10,@06                                             0379 01532000
         LA    @11,INSTTXT2-56(@10)                                0379 01533000
         MVI   0(@11),C' '                                         0379 01534000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE PTR TO PL*/ 01535000
         SLA   @14,2                                               0380 01536000
         LA    @06,MSGINST2-56(@06)                                0380 01537000
         L     @11,SIOINTPT                                        0380 01538000
         AL    @11,@CF00622                                        0380 01539000
         ST    @06,INTPLPTR(@14,@11)                               0380 01540000
*       END;                                                       0381 01541000
*     ELSE                                                         0382 01542000
*       RTNCODE=4;                  /* IF LEV NOT 1 OR 2 THEN ERROR  */ 01543000
         B     @RC00374                                            0382 01544000
@RF00374 LA    RTNCODE,4                                           0382 01545000
*/********************************************************************/ 01546000
*/*                                                                  */ 01547000
*/*                R  RETURN TO MAIN INSERT ROUTINE                  */ 01548000
*/*                                                                  */ 01549000
*/********************************************************************/ 01550000
*                                                                  0383 01551000
*EXITADDD:                          /* LABEL USED TO BRANCH TO EXIT  */ 01552000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT PROCESSOR    */ 01553000
@RC00374 DS    0H                                                  0383 01554000
@RC00366 DS    0H                                                  0383 01555000
EXITADDD L     @14,@SA00010                                        0383 01556000
         LM    @00,@12,@SA00010+8                                  0383 01557000
         BR    @14                                                 0383 01558000
*   END INSTADDD;                   /* END OF ROUTINE                */ 01559000
*                                                                  0385 01560000
*/********************************************************************/ 01561000
*/*                                                                  */ 01562000
*/*    THE FOLLOWING PROCEDURE IS THE  REGISTER TYPE USER'S INSERT R.*/ 01563000
*/*    IT WILL BE INVOKED IF THE USER'S MESSAGE MUST INCLUDE THIS    */ 01564000
*/*    TYPE INSERT.  THE PRIMARY FUNCTIONS ARE:                      */ 01565000
*/*                                                                  */ 01566000
*/*        1.  CALL IKJEGCVT TO CONVERT INSERT TO PRINTABLE CHAR.    */ 01567000
*/*        2.  PREPARE THE INSERT FOR INCLUSION                      */ 01568000
*/*                                                                  */ 01569000
*/********************************************************************/ 01570000
*/********************************************************************/ 01571000
*/*                                                                  */ 01572000
*/*INSTREG:        E  REGISTER INSERT BUILD ROUTINE                  */ 01573000
*/*                P  COUNT LEADING ZEROS                            */ 01574000
*/*                P  ADJUST POINTER TO FIRST NON-ZERO NUMBER        */ 01575000
*/*                                                                  */ 01576000
*/********************************************************************/ 01577000
*                                                                  0385 01578000
*INSTREG:                                                          0385 01579000
*   PROCEDURE;                                                     0385 01580000
INSTREG  STM   @14,@12,@SA00011                                    0385 01581000
*   DCL                                                            0386 01582000
*     ZEROTEST FIXED(8) BASED(REGPTR);/* SETUP STRUCTURE-COMPARE 0'S */ 01583000
*   DCL                                                            0387 01584000
*     ZEROCTR FIXED(31);            /* SETUP STRUCTURE-COMPARE 0'S   */ 01585000
*   DCL                                                            0388 01586000
*     REGPTR PTR(31);               /* VAR TO POINT TO DATA CVT R.   */ 01587000
*   REGPTR=ADDR(INTPLPTR(INSTCTR)); /* ESTAB ADDRESS TO CONTENTS     */ 01588000
         L     @14,INSTCTR                                         0389 01589000
         SLA   @14,2                                               0389 01590000
         L     @06,SIOINTPT                                        0389 01591000
         AL    @06,@CF00622                                        0389 01592000
         LA    @14,INTPLPTR(@14,@06)                               0389 01593000
         ST    @14,REGPTR                                          0389 01594000
*   DO ZEROCTR=0 TO 2 WHILE ZEROTEST=0;/* MOVE DOWN STRING UNTIL^=0  */ 01595000
         SLR   @14,@14                                             0390 01596000
         ST    @14,ZEROCTR                                         0390 01597000
@DL00390 L     @06,REGPTR                                          0390 01598000
         CLI   ZEROTEST(@06),0                                     0390 01599000
         BNE   @DC00390                                            0390 01600000
*     REGPTR=REGPTR+1;              /* INCREMENT TO NEXT BYTE        */ 01601000
         AH    @06,@CH00115                                        0391 01602000
         ST    @06,REGPTR                                          0391 01603000
*   END;                                                           0392 01604000
*                                                                  0392 01605000
         AH    @14,@CH00115                                        0392 01606000
         ST    @14,ZEROCTR                                         0392 01607000
         CH    @14,@CH00119                                        0392 01608000
         BNH   @DL00390                                            0392 01609000
@DC00390 DS    0H                                                  0393 01610000
*/********************************************************************/ 01611000
*/*                                                                  */ 01612000
*/*                P  MOVE AND CONVERT TO PRINTABLE HEX TO INSERT    */ 01613000
*/*                P  PREPARE INSERT FOR INCLUSION                   */ 01614000
*/*                                                                  */ 01615000
*/********************************************************************/ 01616000
*                                                                  0393 01617000
*   VPDEL=4-ZEROCTR;                /* CALCULATE LENGTH FOR CVT      */ 01618000
         LA    @14,4                                               0393 01619000
         SL    @14,ZEROCTR                                         0393 01620000
         STH   @14,VPDEL                                           0393 01621000
*   VPDEPT=REGPTR;                  /* ADJUST & SET UP ADDR OF DATA  */ 01622000
         MVC   VPDEPT(4),REGPTR                                    0394 01623000
*   VPDET='04'X;                    /* INDICATE THAT DATA NEED HEX   */ 01624000
         MVI   VPDET,X'04'                                         0395 01625000
*   PRMREG0=-1;                     /* INDICATE THAT RESULTS BE HEX  */ 01626000
         SLR   PRMREG0,PRMREG0                                     0396 01627000
         BCTR  PRMREG0,0                                           0396 01628000
*   PRMREG1=ADDR(VPDE);             /* PASS ADDR OF PDE IN REG 1     */ 01629000
         LA    PRMREG1,VPDE                                        0397 01630000
*   CALL CONVROUT;                  /* CALL IKJEGCVT TO CONVERT DAT  */ 01631000
         L     @15,TSTCONVT                                        0398 01632000
         BALR  @14,@15                                             0398 01633000
*   IF RTNCODE^=0 THEN              /* TEST FOR SUCCESS OF REQ'T     */ 01634000
         LTR   RTNCODE,RTNCODE                                     0399 01635000
         BNZ   @RT00399                                            0399 01636000
*     GO TO EXITREG;                /* BRANCH TO EXIT IF ERROR       */ 01637000
*   IF LEV=1 THEN                   /* SEE IF WE'RE WORKING OF 1ST   */ 01638000
         CLI   LEV,1                                               0401 01639000
         BNE   @RF00401                                            0401 01640000
*     DO;                                                          0402 01641000
*       LENINST1(INSTCTR)=CONLEN+5; /* CALCULATE LENGTH OR INST      */ 01642000
         L     @14,INSTCTR                                         0403 01643000
         LR    @06,@14                                             0403 01644000
         MH    @06,@CH00617                                        0403 01645000
         L     @11,CONAREA                                         0403 01646000
         SLR   @10,@10                                             0403 01647000
         IC    @10,CONLEN(,@11)                                    0403 01648000
         LA    @05,5                                               0403 01649000
         ALR   @05,@10                                             0403 01650000
         STH   @05,LENINST1-56(@06)                                0403 01651000
*       DISPIN1(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL IN */ 01652000
         L     @05,MSGPTR                                          0404 01653000
         BCTR  @05,0                                               0404 01654000
         SLR   @04,@04                                             0404 01655000
         IC    @04,INDISP(@14,@05)                                 0404 01656000
         STH   @04,DISPIN1-56(@06)                                 0404 01657000
*       INSTTXT1(INSTCTR)=CONTXT;   /* MOVE IN INST TXT              */ 01658000
         LA    @05,INSTTXT1-56(@06)                                0405 01659000
         MVI   31(@05),C' '                                        0405 01660000
         MVC   32(20,@05),31(@05)                                  0405 01661000
         MVC   0(31,@05),CONTXT(@11)                               0405 01662000
*       INSTTXT1(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK      */ 01663000
         ALR   @10,@06                                             0406 01664000
         LA    @11,INSTTXT1-56(@10)                                0406 01665000
         MVI   0(@11),C' '                                         0406 01666000
*       INTPLPTR(INSTCTR)=ADDR(MSGINST1(INSTCTR));/* MOVE PTR TO PL  */ 01667000
         SLA   @14,2                                               0407 01668000
         LA    @06,MSGINST1-56(@06)                                0407 01669000
         L     @11,SIOINTPT                                        0407 01670000
         AL    @11,@CF00622                                        0407 01671000
         ST    @06,INTPLPTR(@14,@11)                               0407 01672000
*     END;                                                         0408 01673000
*   ELSE                                                           0409 01674000
*     IF LEV=2 THEN                 /* SEE IF WE'RE WORKING OF 2ND   */ 01675000
         B     @RC00401                                            0409 01676000
@RF00401 CLI   LEV,2                                               0409 01677000
         BNE   @RF00409                                            0409 01678000
*       DO;                                                        0410 01679000
*         LENINST2(INSTCTR)=CONLEN+5;/* CALCULATE LENGTH OR INST     */ 01680000
         L     @14,INSTCTR                                         0411 01681000
         LR    @06,@14                                             0411 01682000
         MH    @06,@CH00617                                        0411 01683000
         L     @11,CONAREA                                         0411 01684000
         SLR   @10,@10                                             0411 01685000
         IC    @10,CONLEN(,@11)                                    0411 01686000
         LA    @05,5                                               0411 01687000
         ALR   @05,@10                                             0411 01688000
         STH   @05,LENINST2-56(@06)                                0411 01689000
*         DISPIN2(INSTCTR)=INDISP(INSTCTR);/* MOVE DISPLACEMENT VAL     01690000
*                                      IN                            */ 01691000
         L     @05,MSGPTR                                          0412 01692000
         BCTR  @05,0                                               0412 01693000
         SLR   @04,@04                                             0412 01694000
         IC    @04,INDISP(@14,@05)                                 0412 01695000
         STH   @04,DISPIN2-56(@06)                                 0412 01696000
*         INSTTXT2(INSTCTR)=CONTXT; /* MOVE IN INST CONVERTED TEXT   */ 01697000
         LA    @05,INSTTXT2-56(@06)                                0413 01698000
         MVI   31(@05),C' '                                        0413 01699000
         MVC   32(20,@05),31(@05)                                  0413 01700000
         MVC   0(31,@05),CONTXT(@11)                               0413 01701000
*         INSTTXT2(INSTCTR,CONLEN+1:CONLEN+1)=' ';/* INSERT BLANK    */ 01702000
         ALR   @10,@06                                             0414 01703000
         LA    @11,INSTTXT2-56(@10)                                0414 01704000
         MVI   0(@11),C' '                                         0414 01705000
*         INTPLPTR(INSTCTR)=ADDR(MSGINST2(INSTCTR));/* MOVE PTR TO PL*/ 01706000
         SLA   @14,2                                               0415 01707000
         LA    @06,MSGINST2-56(@06)                                0415 01708000
         L     @11,SIOINTPT                                        0415 01709000
         AL    @11,@CF00622                                        0415 01710000
         ST    @06,INTPLPTR(@14,@11)                               0415 01711000
*       END;                                                       0416 01712000
*     ELSE                                                         0417 01713000
*       RTNCODE=4;                  /* IF LEV NOT 1 OR 2 THEN ERROR  */ 01714000
         B     @RC00409                                            0417 01715000
@RF00409 LA    RTNCODE,4                                           0417 01716000
*/********************************************************************/ 01717000
*/*                                                                  */ 01718000
*/*                R  RETURN TO MAIN INSERT ROUTINE                  */ 01719000
*/*                                                                  */ 01720000
*/********************************************************************/ 01721000
*                                                                  0418 01722000
*EXITREG:                           /* LABEL USED TO BRANCH TO EXIT  */ 01723000
*   RETURN CODE(RTNCODE);           /* RETURN TO INSERT PROCESSOR    */ 01724000
@RC00409 DS    0H                                                  0418 01725000
@RC00401 DS    0H                                                  0418 01726000
EXITREG  L     @14,@SA00011                                        0418 01727000
         LM    @00,@12,@SA00011+8                                  0418 01728000
         BR    @14                                                 0418 01729000
*   END INSTREG;                    /* END OF ROUTINE                */ 01730000
*                                                                  0420 01731000
*/********************************************************************/ 01732000
*/*                                                                  */ 01733000
*/*    THE FOLLOWING PROCEDURE IS THE SVC ERROR MESSAGE ROUTINE      */ 01734000
*/*    IT WILL BE INVOKED IF THE USER'S HAS REQUESTED AN SVC ERROR   */ 01735000
*/*    MESSAGE. THE PRIMARY FUNCTIONS ARE:                           */ 01736000
*/*                                                                  */ 01737000
*/*        1.  DETERMINE WHICH MESSAGE TO ISSUE                      */ 01738000
*/*        2.  PREPARE THE INSERTS FOR INCLUSION                     */ 01739000
*/*                                                                  */ 01740000
*/********************************************************************/ 01741000
*/********************************************************************/ 01742000
*/*                                                                  */ 01743000
*/*SVCERR:         E  SVC ERROR MESSAGE ROUTINE                      */ 01744000
*/*                                                                  */ 01745000
*/********************************************************************/ 01746000
*                                                                  0420 01747000
*SVCERR:                                                           0420 01748000
*   PROCEDURE;                                                     0420 01749000
*                                                                  0420 01750000
SVCERR   STM   @14,@12,@SA00012                                    0420 01751000
*/********************************************************************/ 01752000
*/*                                                                  */ 01753000
*/*  THE FOLLOWING DCL STRUCTURES WILL BE USED FOR SVCERR MESSAGES   */ 01754000
*/*                                                                  */ 01755000
*/********************************************************************/ 01756000
*                                                                  0421 01757000
*   DCL                                                            0421 01758000
*     SVCTABPR PTR(31) BDY(WORD);   /* TEMP POINTER - TAB SEARCHING  */ 01759000
*   DCL                                                            0422 01760000
*     SVCINDX FIXED(31) BDY(WORD);  /* INDEX VALUE FOR SVC SEARCH    */ 01761000
*   DCL                                                            0423 01762000
*     ABENDINX FIXED(31) BDY(WORD); /* INDEX VALUE FOR AB TAB SRCH   */ 01763000
*   DCL                                                            0424 01764000
*     RCODEINX FIXED(31) BDY(WORD); /* INDEX VALUE FOR RC TAB SRCH   */ 01765000
*   DCL                                                            0425 01766000
*     1 SVCTB1 BDY(WORD) BASED(SVCTABPR),/* STRUCTURE-AB TAB SRCH    */ 01767000
*      2 AB2NDLV1 PTR(31),          /* POINTER TO SEC LEV MSG        */ 01768000
*      2 ABCDTB1(*),                /* ARRAY FOR REPEAT OF LEV 3     */ 01769000
*       3 SVCNUM1 FIXED(31),        /* SVC NUMBER OR ZERO IF END     */ 01770000
*       3 ABTABPT1 PTR(31),         /* PTR TO TAB OF AB CODES        */ 01771000
*       3 SVCINST1 PTR(31);         /* PTR TO SVC NAME INSERT        */ 01772000
*   DCL                                                            0426 01773000
*     1 ABTAB1(*) BDY(WORD) BASED(ABTABPT1(SVCINDX)),/* AB TAB STRU. */ 01774000
*      2 ABCODE1 FIXED(31),         /* ABEND CODE OR ZERO IF END     */ 01775000
*      2 RCTABPT1 PTR(31),          /* POINTER TO RC TAB FOR SRCH    */ 01776000
*      2 ABCDINST PTR(31);          /* POINTER TO ABCODE INSERT      */ 01777000
*   DCL                                                            0427 01778000
*     1 RCTAB1 BDY(WORD) BASED(RCTABPT1(ABENDINX)),/* RC TAB   STRUCT*/ 01779000
*      2 SVC1STM1 PTR(31),          /* POINTER TO FIRST LEV MSG      */ 01780000
*      2 RCSVC(*),                  /* ARRAY OF RTNCODES             */ 01781000
*       3 SVCRC1 FIXED(31),         /* RTN CODE VALUE OR ZERO END    */ 01782000
*       3 RCINST1 PTR(31);          /* POINTER TO RTN NUM INSERT     */ 01783000
*   DCL                                                            0428 01784000
*     1 SVCTBRC2 BDY(WORD) BASED(SVCTABPR),/* RC TAB STRUCTURE       */ 01785000
*      2 RC2NDLV2 PTR(31),          /* POINTER TO SEC LEV MSG        */ 01786000
*      2 SVCRCT2(*),                /* ARRAY OF RTNCODES             */ 01787000
*       3 SVCNUM2 FIXED(31),        /* VALUE OF SVC NUMBERS          */ 01788000
*       3 SVCRCTB2 PTR(31);         /* POINTER TO RC TABLE           */ 01789000
*   DCL                                                            0429 01790000
*     1 RCTAB2(*) BDY(WORD) BASED(SVCRCTB2(SVCINDX)),/* RC TAB STRUC */ 01791000
*      2 SVCRC2 FIXED(31),          /* RC NUMBER VALUE OF ZERO END   */ 01792000
*      2 SVC1STM2 PTR(31),          /* PTR TO THE 1ST LEVEL MSG      */ 01793000
*      2 SVCRCIN2 PTR(31);          /* PTR TO THE RC NUM INSERT      */ 01794000
*/********************************************************************/ 01795000
*/*                                                                  */ 01796000
*/* THERE IS TWO BASIC SEARCH ROUTINE TO FIND PROPER MESSAGES.       */ 01797000
*/* THE FIRST ROUTINE (SVCABSH) SEARCHES FOR AN SVC FAILURE THAT     */ 01798000
*/* RETURNS AN ABEND CODE SUCH AS THE LINK SVC 6.                    */ 01799000
*/* IF THE PROPER MESSAGE HAS NOT BEEN FOUND IN THE FIRST SEARCH,    */ 01800000
*/* THE RETURN CODE IS SET TO 8 TO INDICATE THAT THE SECOND TABLE    */ 01801000
*/* SHOULD BE SEARCHED (SVCRCSH--RETURN CODE TYPE).                  */ 01802000
*/*                                                                  */ 01803000
*/********************************************************************/ 01804000
*                                                                  0430 01805000
*   CALL SVCABSH;                   /* FIRST SEARCH FOR MSG-AB TAB   */ 01806000
         BAL   @14,SVCABSH                                         0430 01807000
*   IF RTNCODE=8 THEN               /* IF NOT IN ABEND TABLE         */ 01808000
         CH    RTNCODE,@CH00034                                    0431 01809000
         BNE   @RF00431                                            0431 01810000
*     CALL SVCRCSH;                 /* SEARCH FOR MSG IN RC TY TAB   */ 01811000
         BAL   @14,SVCRCSH                                         0432 01812000
*SVCABSH:                                                          0433 01813000
*   PROCEDURE;                                                     0433 01814000
*                                                                  0433 01815000
         B     @PB00013                                            0433 01816000
SVCABSH  STM   @14,@12,@SA00013                                    0433 01817000
*/********************************************************************/ 01818000
*/*                                                                  */ 01819000
*/*                P  LOCATE MSG AND PREPARE INSERTS FOR INSERTION   */ 01820000
*/*                                                                  */ 01821000
*/********************************************************************/ 01822000
*                                                                  0434 01823000
*   SVCTABPR=SVCTBP;                /* ESTAB ADDR TO AB TYPE TABLE   */ 01824000
         MVC   SVCTABPR(4),SVCTBP(MSGCSECT)                        0434 01825000
*   DO SVCINDX=1 BY 1 TO 20 WHILE SVCNUM1(SVCINDX)^=0;/* SVC NUM OR     01826000
*                                      ZERO(NOT THERE)               */ 01827000
         LA    @14,1                                               0435 01828000
         ST    @14,SVCINDX                                         0435 01829000
@DL00435 MH    @14,@CH00058                                        0435 01830000
         L     @06,SVCTABPR                                        0435 01831000
         AL    @06,@CF00627                                        0435 01832000
         L     @14,SVCNUM1-4(@14,@06)                              0435 01833000
         LTR   @14,@14                                             0435 01834000
         BZ    @DC00435                                            0435 01835000
*     IF SVCNUM1(SVCINDX)=SIOSVCMG THEN/* TEST MATCH IN SVC NUM      */ 01836000
         L     @06,IOPARMS                                         0436 01837000
         C     @14,SIOSVCMG(,@06)                                  0436 01838000
         BNE   @RF00436                                            0436 01839000
*       DO ABENDINX=1 BY 1 TO 20 WHILE ABCODE1(ABENDINX)^=0;/* TEST     01840000
*                                      MATCH IN ABEND VAL            */ 01841000
         LA    @14,1                                               0437 01842000
         ST    @14,ABENDINX                                        0437 01843000
@DL00437 LA    @06,12                                              0437 01844000
         LR    @05,@14                                             0437 01845000
         MR    @04,@06                                             0437 01846000
         L     @14,SVCTABPR                                        0437 01847000
         LR    @11,@06                                             0437 01848000
         M     @10,SVCINDX                                         0437 01849000
         LA    @06,0(@11,@14)                                      0437 01850000
         AL    @06,@CF00622                                        0437 01851000
         L     @06,ABTABPT1-8(,@06)                                0437 01852000
         LA    @10,0(@05,@06)                                      0437 01853000
         AL    @10,@CF00628                                        0437 01854000
         L     @10,ABCODE1(,@10)                                   0437 01855000
         LTR   @10,@10                                             0437 01856000
         BZ    @DC00437                                            0437 01857000
*         IF ABCODE1(ABENDINX)=SIOABREG THEN/* WHEN MATCH SRH RC   0438 01858000
*                                      FIRST DO INITAL SET UP OF MSG    01859000
*                                      PTRS & INST PTRS              */ 01860000
         L     @04,IOPARMS                                         0438 01861000
         C     @10,SIOABREG(,@04)                                  0438 01862000
         BNE   @RF00438                                            0438 01863000
*           DO;                                                    0439 01864000
*             SIOTYPPT=ADDR(SIOTYP11);/* ADDRESSABILITY INPUT PL     */ 01865000
         LA    @10,SIOTYP11(,@04)                                  0440 01866000
         ST    @10,SIOTYPPT                                        0440 01867000
*             SIOINTPT=ADDR(SIO11PTR);/* ADDRESSABILITY INST PL      */ 01868000
         LA    @10,SIO11PTR(,@04)                                  0441 01869000
         ST    @10,SIOINTPT                                        0441 01870000
*             MSGPTR=SVC1STM1;      /* ADDRESSABILITY TO MSG         */ 01871000
         AL    @06,@CF00627                                        0442 01872000
         L     @06,RCTABPT1-4(@05,@06)                             0442 01873000
         L     @06,SVC1STM1(,@06)                                  0442 01874000
         ST    @06,MSGPTR                                          0442 01875000
*             MESSAGE(1)=LOCALMSG;  /* MOVE MESSAGE TO WK AREA       */ 01876000
         MVI   MESSAGE+93,C' '                                     0443 01877000
         MVC   MESSAGE+94(10),MESSAGE+93                           0443 01878000
         MVC   MESSAGE(93),LOCALMSG(@06)                           0443 01879000
*             INSTPTR=SVCINST1(SVCINDX);/* ESTAB ADDR OF INST        */ 01880000
         L     @14,SVCINST1-12(@11,@14)                            0444 01881000
         ST    @14,INSTPTR                                         0444 01882000
*             MSGINST1(1)=MSGINST;  /* MOVE INSERT TO WK AREA        */ 01883000
         MVI   MSGINST1+54,C' '                                    0445 01884000
         MVI   MSGINST1+55,C' '                                    0445 01885000
         MVC   MSGINST1(54),MSGINST(@14)                           0445 01886000
*             DISPIN1(1)=INDISP(1); /* MOVE DISPLACEMENT VAL         */ 01887000
         SLR   @14,@14                                             0446 01888000
         IC    @14,INDISP(,@06)                                    0446 01889000
         STH   @14,DISPIN1                                         0446 01890000
*             INTPLPTR(1)=ADDR(MSGINST1(1));/* MOVE PTR OF INST      */ 01891000
         LA    @14,MSGINST1                                        0447 01892000
         ST    @14,INTPLPTR(,@10)                                  0447 01893000
*             SIO13PTR=SIOMODID+100;/* ADJ & RESTORE INST NO         */ 01894000
         LA    @14,100                                             0448 01895000
         SLR   @06,@06                                             0448 01896000
         IC    @06,SIOMODID(,@04)                                  0448 01897000
         ALR   @14,@06                                             0448 01898000
         ST    @14,SIO13PTR(,@04)                                  0448 01899000
*             INSTCTR=3;            /* INDICATE TO INSTNUM 2ND       */ 01900000
         MVC   INSTCTR(4),@CF00032                                 0449 01901000
*             LEV=1;                /* INDICATE TO NUM PRC LEV       */ 01902000
         MVI   LEV,X'01'                                           0450 01903000
*             CALL INSTNUM;         /* CALL AND HAVE INST PROC.      */ 01904000
         BAL   @14,INSTNUM                                         0451 01905000
*             IF RTNCODE^=0 THEN    /* MAKE SURE SUCESSFUL           */ 01906000
         LTR   RTNCODE,RTNCODE                                     0452 01907000
         BNZ   @RT00452                                            0452 01908000
*               GO TO EXITABSH;     /* GO TO THE EXIT IF NOT         */ 01909000
*             INTPLPTR(2)=ADDR(MSGINST1(3));/* MOVE PTR OF INST      */ 01910000
         LA    @14,MSGINST1+112                                    0454 01911000
         L     @06,SIOINTPT                                        0454 01912000
         ST    @14,INTPLPTR+4(,@06)                                0454 01913000
*             DISPIN1(3)=INDISP(2); /* MOVE DISPLACEMENT VAL         */ 01914000
         L     @14,MSGPTR                                          0455 01915000
         SLR   @06,@06                                             0455 01916000
         IC    @06,INDISP+1(,@14)                                  0455 01917000
         STH   @06,DISPIN1+112                                     0455 01918000
*             SIONUMI1=3;           /* SET UP AMT OF SEGMENTS        */ 01919000
         LA    @14,3                                               0456 01920000
         L     @06,IOPARMS                                         0456 01921000
         ST    @14,SIONUMI1(,@06)                                  0456 01922000
*             SIOTYPPT=ADDR(SIOTYP21);/* ADDRESSABILITY INPUT PL     */ 01923000
         LA    @11,SIOTYP21(,@06)                                  0457 01924000
         ST    @11,SIOTYPPT                                        0457 01925000
*             SIOINTPT=ADDR(SIO21PTR);/* ADDRESSABILITY INST PL      */ 01926000
         LA    @10,SIO21PTR(,@06)                                  0458 01927000
         ST    @10,SIOINTPT                                        0458 01928000
*             MSGPTR=AB2NDLV1;      /* ESTAB ADDR TO 2ND MSG         */ 01929000
         L     @10,SVCTABPR                                        0459 01930000
         L     @10,AB2NDLV1(,@10)                                  0459 01931000
         ST    @10,MSGPTR                                          0459 01932000
*             MESSAGE(2)='00'X;     /* ZERO OUT WORK AREA            */ 01933000
         XC    MESSAGE+105(103),MESSAGE+105                        0460 01934000
         MVI   MESSAGE+104,X'00'                                   0460 01935000
*             WKMSGID(2)=WKMSGID(1);/* MOVE FIRST LEVEL NUMBER       */ 01936000
         MVC   WKMSGID+104(9),WKMSGID                              0461 01937000
*             WKMSGTXT(2)=TEXTMSG;  /* MOVE IN 2ND LEV TEXT          */ 01938000
         MVI   WKMSGTXT+193,C' '                                   0462 01939000
         MVI   WKMSGTXT+194,C' '                                   0462 01940000
         MVC   WKMSGTXT+104(89),TEXTMSG(@10)                       0462 01941000
*             LENMSG(2)=LENLOCAL;   /* MOVE IN MESSAGE LENGTH        */ 01942000
         MVC   LENMSG+104(2),LENLOCAL(@10)                         0463 01943000
*             LEV=2;                /* INDICATE THAT WORKING 2       */ 01944000
         MVI   LEV,X'02'                                           0464 01945000
*             INSTCTR=1;            /* INDICATE 1ST INSERT           */ 01946000
         MVC   INSTCTR(4),@CF00115                                 0465 01947000
*             IF TYP(1)=5 THEN      /* FIND OUT WHICH INST           */ 01948000
         CLI   TYP(@11),5                                          0466 01949000
         BNE   @RF00466                                            0466 01950000
*               DO;                                                0467 01951000
*                 SIONUMI2=3;       /* SET UP AMT OF SEGMENTS        */ 01952000
         ST    @14,SIONUMI2(,@06)                                  0468 01953000
*                 CALL INSTNUM;     /* HAVE INSERT LOCATED           */ 01954000
         BAL   @14,INSTNUM                                         0469 01955000
*                 IF RTNCODE^=0 THEN/* TEST FOR SUCESSFUL REQ        */ 01956000
         LTR   RTNCODE,RTNCODE                                     0470 01957000
         BNZ   @RT00470                                            0470 01958000
*                   GO TO EXITABSH; /* BRANCH TO EXIT                */ 01959000
*               END;                                               0472 01960000
*             ELSE                                                 0473 01961000
*               SIONUMI2=2;         /* NO INST FROM CALLER RED       */ 01962000
         B     @RC00466                                            0473 01963000
@RF00466 L     @14,IOPARMS                                         0473 01964000
         MVC   SIONUMI2(4,@14),@CF00119                            0473 01965000
*             INSTPTR=ABCDINST(ABENDINX);/* PTR TO ABEND NUM INT     */ 01966000
@RC00466 LA    @14,12                                              0474 01967000
         L     @05,ABENDINX                                        0474 01968000
         MR    @04,@14                                             0474 01969000
         LR    @11,@14                                             0474 01970000
         M     @10,SVCINDX                                         0474 01971000
         L     @14,SVCTABPR                                        0474 01972000
         AL    @14,@CF00622                                        0474 01973000
         L     @14,ABTABPT1-8(@11,@14)                             0474 01974000
         AL    @14,@CF00622                                        0474 01975000
         L     @14,ABCDINST-8(@05,@14)                             0474 01976000
         ST    @14,INSTPTR                                         0474 01977000
*             MSGINST2(2)=MSGINST;  /* MOVE INSERT TO WORK AREA      */ 01978000
         MVI   MSGINST2+110,C' '                                   0475 01979000
         MVI   MSGINST2+111,C' '                                   0475 01980000
         MVC   MSGINST2+56(54),MSGINST(@14)                        0475 01981000
*             DISPIN2(2)=INDISP(2); /* MOVE DISPLACEMENT VAL         */ 01982000
         L     @14,MSGPTR                                          0476 01983000
         SLR   @06,@06                                             0476 01984000
         IC    @06,INDISP+1(,@14)                                  0476 01985000
         STH   @06,DISPIN2+56                                      0476 01986000
*             IF TYP(1)=5 THEN      /* SEE WHICH INST THIS IS        */ 01987000
         L     @14,SIOTYPPT                                        0477 01988000
         CLI   TYP(@14),5                                          0477 01989000
         BNE   @RF00477                                            0477 01990000
*               INTPLPTR(2)=ADDR(MSGINST2(2));/* MOVE ADDR TO PL     */ 01991000
         LA    @14,MSGINST2+56                                     0478 01992000
         L     @06,SIOINTPT                                        0478 01993000
         ST    @14,INTPLPTR+4(,@06)                                0478 01994000
*             ELSE                                                 0479 01995000
*               INTPLPTR(1)=ADDR(MSGINST2(2));/* MOVE ADDR TO PL     */ 01996000
         B     @RC00477                                            0479 01997000
@RF00477 LA    @14,MSGINST2+56                                     0479 01998000
         L     @06,SIOINTPT                                        0479 01999000
         ST    @14,INTPLPTR(,@06)                                  0479 02000000
*             IF SVCRC1(1)^=0 THEN                                 0480 02001000
@RC00477 LA    @14,12                                              0480 02002000
         L     @05,ABENDINX                                        0480 02003000
         MR    @04,@14                                             0480 02004000
         LR    @11,@14                                             0480 02005000
         M     @10,SVCINDX                                         0480 02006000
         L     @14,SVCTABPR                                        0480 02007000
         AL    @14,@CF00622                                        0480 02008000
         L     @14,ABTABPT1-8(@11,@14)                             0480 02009000
         AL    @14,@CF00627                                        0480 02010000
         L     @14,RCTABPT1-4(@05,@14)                             0480 02011000
         ICM   @06,15,SVCRC1(@14)                                  0480 02012000
         BZ    @RF00480                                            0480 02013000
*               DO RCODEINX=1 BY 1 TO 20/* SET UP FIND RC            */ 02014000
*                     WHILE SVCRC1(RCODEINX)^=0;/* IF 0 THEN ERROR   */ 02015000
         LA    @14,1                                               0481 02016000
         ST    @14,RCODEINX                                        0481 02017000
@DL00481 SLA   @14,3                                               0481 02018000
         LA    @06,12                                              0481 02019000
         L     @05,ABENDINX                                        0481 02020000
         MR    @04,@06                                             0481 02021000
         LR    @11,@06                                             0481 02022000
         M     @10,SVCINDX                                         0481 02023000
         L     @06,SVCTABPR                                        0481 02024000
         AL    @06,@CF00622                                        0481 02025000
         L     @06,ABTABPT1-8(@11,@06)                             0481 02026000
         AL    @06,@CF00627                                        0481 02027000
         L     @06,RCTABPT1-4(@05,@06)                             0481 02028000
         LA    @11,0(@14,@06)                                      0481 02029000
         AL    @11,@CF00622                                        0481 02030000
         L     @11,SVCRC1-4(,@11)                                  0481 02031000
         LTR   @11,@11                                             0481 02032000
         BZ    @DC00481                                            0481 02033000
*                 IF SVCRC1(RCODEINX)=SIORCREG THEN/* SRCH           */ 02034000
         L     @10,IOPARMS                                         0482 02035000
         C     @11,SIORCREG(,@10)                                  0482 02036000
         BNE   @RF00482                                            0482 02037000
*                   DO;                                            0483 02038000
*                     SIONUMI1=SIONUMI1+1;/* INCREMENT SG #          */ 02039000
         LA    @11,1                                               0484 02040000
         AL    @11,SIONUMI1(,@10)                                  0484 02041000
         ST    @11,SIONUMI1(,@10)                                  0484 02042000
*                     INSTPTR=RCINST1(RCODEINX);/* ADDR INT          */ 02043000
         L     @14,RCINST1-8(@14,@06)                              0485 02044000
         ST    @14,INSTPTR                                         0485 02045000
*                     MSGINST1(2)=MSGINST;/* MOVE INT TO WK          */ 02046000
         MVI   MSGINST1+110,C' '                                   0486 02047000
         MVI   MSGINST1+111,C' '                                   0486 02048000
         MVC   MSGINST1+56(54),MSGINST(@14)                        0486 02049000
*                     MSGPTR=SVC1STM1;/* ESTAB ADD - D'SP            */ 02050000
         L     @14,SVC1STM1(,@06)                                  0487 02051000
         ST    @14,MSGPTR                                          0487 02052000
*                     DISPIN1(2)=INDISP(2);/* MOVE DISP VAL          */ 02053000
         SLR   @06,@06                                             0488 02054000
         IC    @06,INDISP+1(,@14)                                  0488 02055000
         STH   @06,DISPIN1+56                                      0488 02056000
*                     DISPIN1(3)=INDISP(3);/* MOVE DISP VAL          */ 02057000
         SLR   @06,@06                                             0489 02058000
         IC    @06,INDISP+2(,@14)                                  0489 02059000
         STH   @06,DISPIN1+112                                     0489 02060000
*                     SIOINTPT=ADDR(SIO11PTR);/* READJUST 1ST        */ 02061000
         LA    @14,SIO11PTR(,@10)                                  0490 02062000
         ST    @14,SIOINTPT                                        0490 02063000
*                     INTPLPTR(2)=ADDR(MSGINST1(2));/* ADDR          */ 02064000
         LA    @06,MSGINST1+56                                     0491 02065000
         ST    @06,INTPLPTR+4(,@14)                                0491 02066000
*                     INTPLPTR(3)=ADDR(MSGINST1(3));/* ADDR          */ 02067000
         LA    @06,MSGINST1+112                                    0492 02068000
         ST    @06,INTPLPTR+8(,@14)                                0492 02069000
*                   END;                                           0493 02070000
*               END;                                               0494 02071000
@RF00482 LA    @14,1                                               0494 02072000
         AL    @14,RCODEINX                                        0494 02073000
         ST    @14,RCODEINX                                        0494 02074000
         CH    @14,@CH00251                                        0494 02075000
         BNH   @DL00481                                            0494 02076000
@DC00481 DS    0H                                                  0495 02077000
*             SIO1STMS=ADDR(MESSAGE(1));/* ESTAB PTR                 */ 02078000
@RF00480 L     @14,IOPARMS                                         0495 02079000
         LA    @06,MESSAGE                                         0495 02080000
         ST    @06,SIO1STMS(,@14)                                  0495 02081000
*             SIO2NDMS=ADDR(MESSAGE(2));/* ESTAB PTR                 */ 02082000
         LA    @06,MESSAGE+104                                     0496 02083000
         ST    @06,SIO2NDMS(,@14)                                  0496 02084000
*             CALL TERMOUT;         /* HAVE MESSAGE SENT TO USER     */ 02085000
         BAL   @14,TERMOUT                                         0497 02086000
*             GO TO EXITABSH;       /* BRANCH TO EXIT OF ROUTINE     */ 02087000
         B     EXITABSH                                            0498 02088000
*           END;                                                   0499 02089000
*       END;                                                       0500 02090000
@RF00438 LA    @14,1                                               0500 02091000
         AL    @14,ABENDINX                                        0500 02092000
         ST    @14,ABENDINX                                        0500 02093000
         CH    @14,@CH00251                                        0500 02094000
         BNH   @DL00437                                            0500 02095000
@DC00437 DS    0H                                                  0501 02096000
*   END;                                                           0501 02097000
@RF00436 LA    @14,1                                               0501 02098000
         AL    @14,SVCINDX                                         0501 02099000
         ST    @14,SVCINDX                                         0501 02100000
         CH    @14,@CH00251                                        0501 02101000
         BNH   @DL00435                                            0501 02102000
@DC00435 DS    0H                                                  0502 02103000
*   RTNCODE=8;                      /* INDICATE NOT IN ABCODE TAB    */ 02104000
         LA    RTNCODE,8                                           0502 02105000
*EXITABSH:                          /* LABEL TO BRANCH TO EXIT OF R  */ 02106000
*   RETURN CODE(RTNCODE);           /* RETURN TO MAIN SVCERR ROUT    */ 02107000
EXITABSH L     @14,@SA00013                                        0503 02108000
         LM    @00,@12,@SA00013+8                                  0503 02109000
         BR    @14                                                 0503 02110000
*   END SVCABSH;                                                   0504 02111000
*                                                                  0505 02112000
*/********************************************************************/ 02113000
*/*                                                                  */ 02114000
*/* THIS ROUTINE WILL SEARCH FOR SVC ERROR MSGS SUCH AS ESTAE AND    */ 02115000
*/* PREPARE THE NECESSARY MESSAGES.                                  */ 02116000
*/*                                                                  */ 02117000
*/********************************************************************/ 02118000
*                                                                  0505 02119000
*SVCRCSH:                                                          0505 02120000
*   PROCEDURE;                                                     0505 02121000
SVCRCSH  STM   @14,@12,@SA00014                                    0505 02122000
*   SVCTABPR=SVCTBRCP;              /* ESTAB ADDR TO RC TYPE TABLE   */ 02123000
         MVC   SVCTABPR(4),SVCTBRCP(MSGCSECT)                      0506 02124000
*   RTNCODE=0;                      /* INITIALIZE THE RC TO ZERO     */ 02125000
         SLR   RTNCODE,RTNCODE                                     0507 02126000
*   DO SVCINDX=1 BY 1 TO 20         /* START SEARCH FOR SVC NO       */ 02127000
*         WHILE SVCNUM2(SVCINDX)^=0;/* SEARCH UNTIL REACH END TAB    */ 02128000
         LA    @14,1                                               0508 02129000
         ST    @14,SVCINDX                                         0508 02130000
@DL00508 SLA   @14,3                                               0508 02131000
         L     @06,SVCTABPR                                        0508 02132000
         AL    @06,@CF00622                                        0508 02133000
         L     @14,SVCNUM2-4(@14,@06)                              0508 02134000
         LTR   @14,@14                                             0508 02135000
         BZ    @DC00508                                            0508 02136000
*     IF SVCNUM2(SVCINDX)=SIOSVCMG THEN/* IF MATCH STOP FOR ADDR     */ 02137000
         L     @06,IOPARMS                                         0509 02138000
         C     @14,SIOSVCMG(,@06)                                  0509 02139000
         BNE   @RF00509                                            0509 02140000
*       DO RCODEINX=1 BY 1 TO 20    /* SEARCH UNTIL REACH END / TAB  */ 02141000
*             WHILE SVCRC2(RCODEINX)^=0;/* TEST FOR END OF TAB       */ 02142000
         LA    @14,1                                               0510 02143000
         ST    @14,RCODEINX                                        0510 02144000
@DL00510 MH    @14,@CH00058                                        0510 02145000
         L     @06,SVCTABPR                                        0510 02146000
         L     @11,SVCINDX                                         0510 02147000
         SLA   @11,3                                               0510 02148000
         L     @11,SVCRCTB2-8(@11,@06)                             0510 02149000
         LA    @10,0(@14,@11)                                      0510 02150000
         AL    @10,@CF00628                                        0510 02151000
         L     @10,SVCRC2(,@10)                                    0510 02152000
         LTR   @10,@10                                             0510 02153000
         BZ    @DC00510                                            0510 02154000
*         IF SVCRC2(RCODEINX)=SIORCREG THEN/* IF FIND STOP & PROC    */ 02155000
         L     @05,IOPARMS                                         0511 02156000
         C     @10,SIORCREG(,@05)                                  0511 02157000
         BNE   @RF00511                                            0511 02158000
*           DO;                                                    0512 02159000
*             MSGPTR=SVC1STM2(RCODEINX);/* MOVE MSG PTR              */ 02160000
         LA    @10,0(@14,@11)                                      0513 02161000
         AL    @10,@CF00627                                        0513 02162000
         L     @10,SVC1STM2-4(,@10)                                0513 02163000
         ST    @10,MSGPTR                                          0513 02164000
*             MESSAGE(1)=LOCALMSG;  /* MOVE IN MSG TO WORK AREA      */ 02165000
         MVI   MESSAGE+93,C' '                                     0514 02166000
         MVC   MESSAGE+94(10),MESSAGE+93                           0514 02167000
         MVC   MESSAGE(93),LOCALMSG(@10)                           0514 02168000
*             SIOTYPPT=ADDR(SIOTYP21);/* ADDRESSABILITY INPUT PL     */ 02169000
         LA    @10,SIOTYP21(,@05)                                  0515 02170000
         ST    @10,SIOTYPPT                                        0515 02171000
*             SIOINTPT=ADDR(SIO21PTR);/* ADDRESSABILITY INST PL      */ 02172000
         LA    @10,SIO21PTR(,@05)                                  0516 02173000
         ST    @10,SIOINTPT                                        0516 02174000
*             MSGPTR=RC2NDLV2;      /* ESTAB ADDR TO MESSAGE 2ND LV  */ 02175000
         L     @06,RC2NDLV2(,@06)                                  0517 02176000
         ST    @06,MSGPTR                                          0517 02177000
*             MESSAGE(2)='00'X;     /* CLEAR WORK AREA               */ 02178000
         XC    MESSAGE+105(103),MESSAGE+105                        0518 02179000
         MVI   MESSAGE+104,X'00'                                   0518 02180000
*             WKMSGID(2)=WKMSGID(1);/* MOVE FIRST LEVEL NUMBER       */ 02181000
         MVC   WKMSGID+104(9),WKMSGID                              0519 02182000
*             WKMSGTXT(2)=TEXTMSG;  /* MOVE IN 2ND LEV TEXT PORTION  */ 02183000
         MVI   WKMSGTXT+193,C' '                                   0520 02184000
         MVI   WKMSGTXT+194,C' '                                   0520 02185000
         MVC   WKMSGTXT+104(89),TEXTMSG(@06)                       0520 02186000
*             LENMSG(2)=LENLOCAL;   /* MOVE IN MESSAGE LENGTH        */ 02187000
         MVC   LENMSG+104(2),LENLOCAL(@06)                         0521 02188000
*             INSTPTR=SVCRCIN2(RCODEINX);/* ESTAB ADDR TO INSERT     */ 02189000
         AL    @11,@CF00622                                        0522 02190000
         L     @14,SVCRCIN2-8(@14,@11)                             0522 02191000
         ST    @14,INSTPTR                                         0522 02192000
*             MSGINST2(1)=MSGINST;  /* MOVE INSERT TO WORK AREA      */ 02193000
         MVI   MSGINST2+54,C' '                                    0523 02194000
         MVI   MSGINST2+55,C' '                                    0523 02195000
         MVC   MSGINST2(54),MSGINST(@14)                           0523 02196000
*             DISPIN2(1)=INDISP(1); /* MOVE DISPLACEMENT VAL TO INT  */ 02197000
         SLR   @14,@14                                             0524 02198000
         IC    @14,INDISP(,@06)                                    0524 02199000
         STH   @14,DISPIN2                                         0524 02200000
*             INTPLPTR(1)=ADDR(MSGINST2(1));/* MOVE ADDR TO P.L.     */ 02201000
         LA    @14,MSGINST2                                        0525 02202000
         ST    @14,INTPLPTR(,@10)                                  0525 02203000
*             LEV=2;                /* INDICATE TWO LEVEL MESSAGE    */ 02204000
         MVI   LEV,X'02'                                           0526 02205000
*             SIONUMI1=1;           /* INDICATE NO INSERTS IN MSG    */ 02206000
         MVC   SIONUMI1(4,@05),@CF00115                            0527 02207000
*             SIONUMI2=2;           /* INDICATE NO INSERTS IN MSG    */ 02208000
         MVC   SIONUMI2(4,@05),@CF00119                            0528 02209000
*             SIO1STMS=ADDR(MESSAGE(1));/* ESTAB ADDRESSABILITY      */ 02210000
         LA    @14,MESSAGE                                         0529 02211000
         ST    @14,SIO1STMS(,@05)                                  0529 02212000
*             SIO2NDMS=ADDR(MESSAGE(2));/* ESTAB ADDRESSABILITY      */ 02213000
         LA    @14,MESSAGE+104                                     0530 02214000
         ST    @14,SIO2NDMS(,@05)                                  0530 02215000
*             RTNCODE=0;            /* RESET THE RETURN CODE TO 0    */ 02216000
         SLR   RTNCODE,RTNCODE                                     0531 02217000
*             CALL TERMOUT;         /* HAVE MESSAGE SENT TO TERM     */ 02218000
         BAL   @14,TERMOUT                                         0532 02219000
*             GO TO EXITRCSH;       /* BRANCH TO END OF PROC         */ 02220000
         B     EXITRCSH                                            0533 02221000
*           END;                                                   0534 02222000
*       END;                                                       0535 02223000
@RF00511 LA    @14,1                                               0535 02224000
         AL    @14,RCODEINX                                        0535 02225000
         ST    @14,RCODEINX                                        0535 02226000
         CH    @14,@CH00251                                        0535 02227000
         BNH   @DL00510                                            0535 02228000
@DC00510 DS    0H                                                  0536 02229000
*   END;                                                           0536 02230000
*                                                                  0536 02231000
@RF00509 LA    @14,1                                               0536 02232000
         AL    @14,SVCINDX                                         0536 02233000
         ST    @14,SVCINDX                                         0536 02234000
         CH    @14,@CH00251                                        0536 02235000
         BNH   @DL00508                                            0536 02236000
@DC00508 DS    0H                                                  0537 02237000
*/********************************************************************/ 02238000
*/*                                                                  */ 02239000
*/* AFTER BOTH TABLES HAVE BEEN SEARCHED WITH NO SUCCESS. THE ERROR  */ 02240000
*/* MSG THAT DATA HAS BEEN LOST DURING IO PROCESSING WILL BE ISSUED  */ 02241000
*/*                                                                  */ 02242000
*/********************************************************************/ 02243000
*                                                                  0537 02244000
*   CALL BADPARM;                   /* IF OUT OF TABLE THEN ERROR    */ 02245000
         BAL   @14,BADPARM                                         0537 02246000
*/********************************************************************/ 02247000
*/*                                                                  */ 02248000
*/*                R  RETURN TO I/O CONTROLLER                       */ 02249000
*/*                                                                  */ 02250000
*/********************************************************************/ 02251000
*                                                                  0538 02252000
*EXITRCSH:                          /* LABEL TO BRANCH TO EXIT OF R  */ 02253000
*   RETURN CODE(RTNCODE);           /* RETURN TO MAIN SVCERR ROUTIN  */ 02254000
EXITRCSH L     @14,@SA00014                                        0538 02255000
         LM    @00,@12,@SA00014+8                                  0538 02256000
         BR    @14                                                 0538 02257000
*   END SVCRCSH;                                                   0539 02258000
@PB00014 DS    0H                                                  0540 02259000
*EXITSERR:                          /* LABEL TO BRANCH TO EXIT       */ 02260000
*   RETURN CODE(RTNCODE);           /* RETURN TO DRIVER WITH CODE    */ 02261000
EXITSERR L     @14,@SA00012                                        0540 02262000
         LM    @00,@12,@SA00012+8                                  0540 02263000
         BR    @14                                                 0540 02264000
*   END SVCERR;                                                    0541 02265000
*                                                                  0542 02266000
*/********************************************************************/ 02267000
*/*                                                                  */ 02268000
*/*    THE FOLLOWING PROCEDURE IS THE PROMTING MESSAGE ROUTINE       */ 02269000
*/*    IT WILL BE INVOKED IF THE USER'S HAS REQUESTED  A PROMPTING   */ 02270000
*/*    MESSAGE. THE PRIMARY FUNCTION IS:                             */ 02271000
*/*                                                                  */ 02272000
*/*        1.  DETERMINE WHICH MESSAGE TO ISSUE                      */ 02273000
*/*                                                                  */ 02274000
*/********************************************************************/ 02275000
*/********************************************************************/ 02276000
*/*                                                                  */ 02277000
*/*PTGTROUT:       E  ENTRY TO PUT/GET (PTGT) ROUTINE                */ 02278000
*/*                                                                  */ 02279000
*/********************************************************************/ 02280000
*                                                                  0542 02281000
*PTGT:                                                             0542 02282000
*   PROCEDURE;                                                     0542 02283000
*                                                                  0542 02284000
PTGT     STM   @14,@12,@SA00015                                    0542 02285000
*/********************************************************************/ 02286000
*/*                                                                  */ 02287000
*/*                P  LOCATE AND POINT TO PROMPTING MESSAGE          */ 02288000
*/*                                                                  */ 02289000
*/********************************************************************/ 02290000
*                                                                  0543 02291000
*   IF SIO1STMS>0&SIO1STMS<100 THEN /* TEST FOR MSG BEING IN 1ST     */ 02292000
         L     @14,IOPARMS                                         0543 02293000
         L     @14,SIO1STMS(,@14)                                  0543 02294000
         LTR   @14,@14                                             0543 02295000
         BNP   @RF00543                                            0543 02296000
         CH    @14,@CH00256                                        0543 02297000
         BNL   @RF00543                                            0543 02298000
*     INDXTAB=MSG99PTR;             /* TABLE IF SO SET UP ADDRESS    */ 02299000
         MVC   INDXTAB(4),MSG99PTR(MSGCSECT)                       0544 02300000
*   ELSE                                                           0545 02301000
*     IF SIO1STMS>0&SIO1STMS<200 THEN/* TEST IF IN 2ND TAB           */ 02302000
         B     @RC00543                                            0545 02303000
@RF00543 L     @14,IOPARMS                                         0545 02304000
         L     @06,SIO1STMS(,@14)                                  0545 02305000
         LTR   @06,@06                                             0545 02306000
         BNP   @RF00545                                            0545 02307000
         CH    @06,@CH00258                                        0545 02308000
         BNL   @RF00545                                            0545 02309000
*       DO;                                                        0546 02310000
*         INDXTAB=MSG199PT;         /* TABLE IF SO SET UP ADDRESS    */ 02311000
         MVC   INDXTAB(4),MSG199PT(MSGCSECT)                       0547 02312000
*         SIO1STMS=SIO1STMS-99;     /* ADJUST TO TABLE VALUES        */ 02313000
         SH    @06,@CH00259                                        0548 02314000
         ST    @06,SIO1STMS(,@14)                                  0548 02315000
*       END;                                                       0549 02316000
*     ELSE                                                         0550 02317000
*       DO;                                                        0550 02318000
         B     @RC00545                                            0550 02319000
@RF00545 DS    0H                                                  0551 02320000
*         CALL BADPARM;             /* IF MSG NOT IN TABLE ERROR     */ 02321000
         BAL   @14,BADPARM                                         0551 02322000
*         GO TO EXITPTGT;           /* BRANCH TO END OF PROCEDURE    */ 02323000
         B     EXITPTGT                                            0552 02324000
*       END;                                                       0553 02325000
*   IF AMTINDX<SIO1STMS THEN        /* LOOK AT ACTUAL TAB LEN FOR    */ 02326000
@RC00545 DS    0H                                                  0554 02327000
@RC00543 L     @14,INDXTAB                                         0554 02328000
         L     @14,AMTINDX(,@14)                                   0554 02329000
         L     @06,IOPARMS                                         0554 02330000
         C     @14,SIO1STMS(,@06)                                  0554 02331000
         BNL   @RF00554                                            0554 02332000
*     DO;                           /* POSSIBLE BAD NUMBER PASSED    */ 02333000
*       CALL BADPARM;               /* IF MSG NUM EXCEEDS LEN-ERROR  */ 02334000
         BAL   @14,BADPARM                                         0556 02335000
*       GO TO EXITPTGT;             /* BRANCH TO END OF PROCEDURE    */ 02336000
         B     EXITPTGT                                            0557 02337000
*     END;                                                         0558 02338000
*   MSGPTR=INDXPTR(SIO1STMS);       /* ESTAB ADDRESSABILITY TO MSG   */ 02339000
@RF00554 L     @14,IOPARMS                                         0559 02340000
         L     @14,SIO1STMS(,@14)                                  0559 02341000
         SLA   @14,2                                               0559 02342000
         L     @06,INDXTAB                                         0559 02343000
         L     @14,INDXPTR-4(@14,@06)                              0559 02344000
         ST    @14,MSGPTR                                          0559 02345000
*   IF INDISP(1)='FF'X THEN         /* TEST IF NULL ENTRY            */ 02346000
         CLI   INDISP(@14),255                                     0560 02347000
         BNE   @RF00560                                            0560 02348000
*     DO;                                                          0561 02349000
*       CALL BADPARM;               /* CALL FOR ERROR PROC BAD PRMS  */ 02350000
         BAL   @14,BADPARM                                         0562 02351000
*       GO TO EXITPTGT;             /* BRANCH TO EXIT ROUTINE        */ 02352000
         B     EXITPTGT                                            0563 02353000
*     END;                                                         0564 02354000
*   MESSAGE(1)=LOCALMSG;            /* MOVE MESSAGE INTO MYWK AREA   */ 02355000
@RF00560 MVI   MESSAGE+93,C' '                                     0565 02356000
         MVC   MESSAGE+94(10),MESSAGE+93                           0565 02357000
         L     @14,MSGPTR                                          0565 02358000
         MVC   MESSAGE(93),LOCALMSG(@14)                           0565 02359000
*   SIONUMI1=1;                     /* SET NUM OF INSERTS TO ONE     */ 02360000
         L     @14,IOPARMS                                         0566 02361000
         MVC   SIONUMI1(4,@14),@CF00115                            0566 02362000
*   SIO1STMS=ADDR(MESSAGE(1));      /* STORE ADDRESS OF MSG IN P.L.  */ 02363000
         LA    @06,MESSAGE                                         0567 02364000
         ST    @06,SIO1STMS(,@14)                                  0567 02365000
*/********************************************************************/ 02366000
*/*                                                                  */ 02367000
*/*                S  CALL TERMOUT: HAVE MESSAGE SENT OUT TO USER    */ 02368000
*/*                                                                  */ 02369000
*/********************************************************************/ 02370000
*                                                                  0568 02371000
*   LEV=3;                          /* INDICATE PTGT TYPE REQ'T      */ 02372000
         MVI   LEV,X'03'                                           0568 02373000
*   CALL TERMOUT;                   /* HAVE THE I/O PERFORMED        */ 02374000
         BAL   @14,TERMOUT                                         0569 02375000
*/********************************************************************/ 02376000
*/*                                                                  */ 02377000
*/*PTGTEND:        R  RETURN TO IO CONTROLLER                        */ 02378000
*/*                                                                  */ 02379000
*/********************************************************************/ 02380000
*                                                                  0570 02381000
*EXITPTGT:                          /* LABEL USED TO BRANCH TO EXIT  */ 02382000
*   RETURN CODE(RTNCODE);           /* RETURN TO DRIVER WITH CODE    */ 02383000
EXITPTGT L     @14,@SA00015                                        0570 02384000
         LM    @00,@12,@SA00015+8                                  0570 02385000
         BR    @14                                                 0570 02386000
*   END PTGT;                                                      0571 02387000
*                                                                  0572 02388000
*/********************************************************************/ 02389000
*/*                                                                  */ 02390000
*/*    THE FOLLOWING PROCEDURE IS THE TERMINAL OUTPUT ROUTINE        */ 02391000
*/*    IT WILL BE INVOKED IF THE DATA OR MESSAGE IS TO BE SENT       */ 02392000
*/*    TO THE USER'S TERMINAL.                                       */ 02393000
*/*    THE PRIMARY FUNCTIONS ARE:                                    */ 02394000
*/*                                                                  */ 02395000
*/*        1.  DETERMINE WHICH TYPE PUTLINE MACROS SHOULD BE USED    */ 02396000
*/*        2.  ISSUE THE APPROPRIATE MACROS                          */ 02397000
*/*        3.  ANALYZE RETURN CODES AND RETURN                       */ 02398000
*/*                                                                  */ 02399000
*/********************************************************************/ 02400000
*/********************************************************************/ 02401000
*/*                                                                  */ 02402000
*/*TERMOUT:        E  TERMOUT ROUTINE TO ISSUE OUTPUT TO TERMINAL    */ 02403000
*/*                P  PREPARE COMMON OPERATIONS TO ALL OUTPUT        */ 02404000
*/*                                                                  */ 02405000
*/********************************************************************/ 02406000
*                                                                  0572 02407000
*TERMOUT:                                                          0572 02408000
*   PROCEDURE;                                                     0572 02409000
TERMOUT  STM   @14,@12,@SA00016                                    0572 02410000
*   RFY                                                            0573 02411000
*    (DSECT10,                                                     0573 02412000
*     IOPLREG,                                                     0573 02413000
*     IOPBREG,                                                     0573 02414000
*     OLD) RSTD;                    /* THESE REGS NOT FOR USE        */ 02415000
*   DCL                                                            0574 02416000
*     SKIPLINE FIXED(15) BASED(SIODATA) BDY(HWORD);/* DETERMINE SKIP */ 02417000
*   DCL                                                            0575 02418000
*     PUTSPACE CHAR(12) GEND;       /* ID LIST FORM OF PUTLINE       */ 02419000
*   DCL                                                            0576 02420000
*     PUTDATA CHAR(12) GEND;        /* ID LIST FORM OF PUTLINE       */ 02421000
*   DCL                                                            0577 02422000
*     PUTMSG2 CHAR(12) GEND;        /* ID LIST FORM OF PUTLINE       */ 02423000
*   DCL                                                            0578 02424000
*     PUTGETIT CHAR(16) GEND;       /* ID LIST FORM OF PUTLINE       */ 02425000
*   DCL                                                            0579 02426000
*     INBUF PTR(31) GEND;           /* PTR IN TCOM OF INPUT LINE     */ 02427000
*   DCL                                                            0580 02428000
*     PRMREG5 REGISTER(5) RSTD;     /* DEFINE REG TO PASS TO P.L.    */ 02429000
*   DCL                                                            0581 02430000
*     ECTMSGF BIT(8) GEND;          /* DEFINE FLAG BYTE FLUSH 2 LEV  */ 02431000
*   DCL                                                            0582 02432000
*     1 PUTGETDS BASED(IOPBREG),    /* OVERLAY STRUCTURE PUTGET PB   */ 02433000
*      2 * CHAR(12),                /* FILLER                        */ 02434000
*      2 INBUFPTR PTR(31);          /* POINTER TO PROMPT LINE BACK   */ 02435000
*   DCL                                                            0583 02436000
*     1 NULLINE STATIC BDY(WORD),   /* IF CALLER WANTS BLANK LINE    */ 02437000
*      2 * FIXED(15) INIT(5),       /* TOTAL LEN INCL HEADER         */ 02438000
*      2 * FIXED(15) INIT(0),       /* RESERVED CONTROL BYTE PUTLIN  */ 02439000
*      2 * CHAR(1) INIT(' ');       /* ONE BLANK WILL ACHIEVE SKIP   */ 02440000
*   DCL                                                            0584 02441000
*     PARSEMSG CHAR(256) BASED(OUTBUF);/* DEFINE LOCATION OF MSG     */ 02442000
*   DCL                                                            0585 02443000
*     OUTBUF PTR(31) GEND;          /* DEFINE POINTER TO OUTBUF      */ 02444000
*   DCL                                                            0586 02445000
*     1 FMTMSG BDY(HWORD) BASED(FMATMSG),/* DEFINE FORMATTED MSG     */ 02446000
*      2 FMTMSGLN FIXED(15),        /* DEFINE LENGTH OF MSG          */ 02447000
*      2 * FIXED(15),               /* FILLER                        */ 02448000
*      2 * CHAR(*);                 /* TEXT                          */ 02449000
*   IOPLREG=ADDR(USERIOPL);         /* ESTAB ADDR TO IOPL FOR P.L.   */ 02450000
         LA    IOPLREG,USERIOPL                                    0587 02451000
*   IOPBREG=ADDR(OUTPUTPB);         /* ESTAB ADDR TO IOPB FOR P.L.   */ 02452000
         LA    IOPBREG,OUTPUTPB                                    0588 02453000
*   OLD=ADDR(OLDPTR2);              /* SET UP ADDR TO OLD PARM LST   */ 02454000
         L     OLD,IOPARMS                                         0589 02455000
         LA    OLD,OLDPTR2(,OLD)                                   0589 02456000
*   USERIOPL=PARMLIST;              /* MOVE THE UPT,ECT & ECB TO PL  */ 02457000
         MVI   USERIOPL+12,C' '                                    0590 02458000
         MVC   USERIOPL+13(3),USERIOPL+12                          0590 02459000
         MVC   USERIOPL(12),PARMLIST                               0590 02460000
*/********************************************************************/ 02461000
*/*                                                                  */ 02462000
*/*                S  CALL ATTNCK: CHECK FOR ATTN OR LOGOFF          */ 02463000
*/*                P  DETERMINE WHICH FORM PUTLINE SHOULD BE ISSUED  */ 02464000
*/*                P  ISSUE PUTLINE OR PUTGET MACRO                  */ 02465000
*/*                S  CALL R.C. CHECK: INTERPRUPT RTN CODE           */ 02466000
*/*                                                                  */ 02467000
*/********************************************************************/ 02468000
*                                                                  0591 02469000
*   CALL ATTNCK;                    /* BEFORE SENDING OUTPUT CK ATT  */ 02470000
         BAL   @14,ATTNCK                                          0591 02471000
*   IF RTNCODE^=0 THEN              /* SEE IF ONE IS SCHEDULED       */ 02472000
         SLR   @14,@14                                             0592 02473000
         CR    RTNCODE,@14                                         0592 02474000
         BNE   @RT00592                                            0592 02475000
*     GO TO EXITTERM;               /* IF SO GO TO EXIT              */ 02476000
*   IF LEV=0 THEN                   /* TEST FOR DATA OUTPUT          */ 02477000
         CLI   LEV,0                                               0594 02478000
         BNE   @RF00594                                            0594 02479000
*     DO;                                                          0595 02480000
*       IF SKIPLINE=0 THEN          /* CHECK FOR NULL LINE           */ 02481000
         L     @11,IOPARMS                                         0596 02482000
         L     @11,SIODATA(,@11)                                   0596 02483000
         CH    @14,SKIPLINE(,@11)                                  0596 02484000
         BNE   @RF00596                                            0596 02485000
*         DO;                                                      0597 02486000
*           OUTPUTPB=PUTSPACE;      /* SEND EDIT FORM PUTL'E TO PL   */ 02487000
         MVI   OUTPUTPB+12,C' '                                    0598 02488000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0598 02489000
         MVC   OUTPUTPB(12),PUTSPACE                               0598 02490000
*           MSGINST1(1)=NULLINE;    /* MOVE INSERT TO WORKAREA       */ 02491000
         MVI   MSGINST1+5,C' '                                     0599 02492000
         MVC   MSGINST1+6(50),MSGINST1+5                           0599 02493000
         MVC   MSGINST1(5),NULLINE                                 0599 02494000
*           OLD=ADDR(MSGINST1(1));  /* SET UP ADDRESS IN P.L.        */ 02495000
         LA    OLD,MSGINST1                                        0600 02496000
*         END;                                                     0601 02497000
*       ELSE                                                       0602 02498000
*         DO;                                                      0602 02499000
         B     @RC00596                                            0602 02500000
@RF00596 DS    0H                                                  0603 02501000
*           OUTPUTPB=PUTDATA;       /* SEND DATA PUTLINE LIST TO PL  */ 02502000
         MVI   OUTPUTPB+12,C' '                                    0603 02503000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0603 02504000
         MVC   OUTPUTPB(12),PUTDATA                                0603 02505000
*           OLD=SIODATA;            /* POINT TO DATA LINE            */ 02506000
         L     @14,IOPARMS                                         0604 02507000
         L     OLD,SIODATA(,@14)                                   0604 02508000
*         END;                                                     0605 02509000
*                                                                  0605 02510000
*/********************************************************************/ 02511000
*/*                                                                  */ 02512000
*/*    ISSUE PUTLINE MACRO FOR A DATA LINE TO USER'S TERMINAL        */ 02513000
*/*                                                                  */ 02514000
*/********************************************************************/ 02515000
*                                                                  0606 02516000
*       GENERATE;                                                  0606 02517000
@RC00596 DS    0H                                                  0606 02518000
         PUTLINE PARM=(5),OUTPUT=((4),TERM,SINGLE,DATA),MF=(E,(1))      02519000
*       IF RTNCODE^=0 THEN          /* SEE IF PROBLEMS OCCURRED      */ 02520000
         LTR   RTNCODE,RTNCODE                                     0607 02521000
         BZ    @RF00607                                            0607 02522000
*         CALL RCCHECK;             /* INTERPRET RETURN CODE         */ 02523000
         BAL   @14,RCCHECK                                         0608 02524000
*     END;                                                         0609 02525000
*   ELSE                                                           0610 02526000
*     IF LEV=1 THEN                 /* SEE IF SINGLE LEV MESSAGE     */ 02527000
         B     @RC00594                                            0610 02528000
@RF00594 CLI   LEV,1                                               0610 02529000
         BNE   @RF00610                                            0610 02530000
*       DO;                                                        0611 02531000
*         OUTPUTPB=PUTMSG;          /* MOVE LIST FORM PUTLINE TO PL  */ 02532000
         MVI   OUTPUTPB+12,C' '                                    0612 02533000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0612 02534000
         MVC   OUTPUTPB(12),PUTMSG                                 0612 02535000
*         OLD=ADDR(SIONUMI1);       /* ADJUST OUTPUT LINE DES PTR    */ 02536000
         L     OLD,IOPARMS                                         0613 02537000
         LA    OLD,SIONUMI1(,OLD)                                  0613 02538000
*/********************************************************************/ 02539000
*/*                                                                  */ 02540000
*/*    ISSUE PUTLINE MACRO FOR A SINGLE LEVEL INFORMATIONAL MESSAGE  */ 02541000
*/*                                                                  */ 02542000
*/********************************************************************/ 02543000
*                                                                  0614 02544000
*         GENERATE;                                                0614 02545000
         PUTLINE PARM=(5),OUTPUT=((4),TERM,SINGLE,INFOR),MF=(E,(1))     02546000
*         IF RTNCODE^=0 THEN        /* SEE IF PROBLEMS OCCURRED      */ 02547000
         LTR   RTNCODE,RTNCODE                                     0615 02548000
         BZ    @RF00615                                            0615 02549000
*           CALL RCCHECK;           /* INTERPRET RETURN CODE         */ 02550000
         BAL   @14,RCCHECK                                         0616 02551000
*       END;                                                       0617 02552000
*     ELSE                                                         0618 02553000
*       IF LEV=2 THEN               /* SEE IF SINGLE LEV MESSAGE     */ 02554000
         B     @RC00610                                            0618 02555000
@RF00610 CLI   LEV,2                                               0618 02556000
         BNE   @RF00618                                            0618 02557000
*         IF TSTFLGS4(8)='1'B THEN  /* SEE IF CALLER IN PARSE VAL    */ 02558000
         TM    TSTFLGS4,B'00000001'                                0619 02559000
         BNO   @RF00619                                            0619 02560000
*           DO;                                                    0620 02561000
*             OUTPUTPB=PUTMSG;      /* MOVE LIST FORM PUTLINE TO PL  */ 02562000
         MVI   OUTPUTPB+12,C' '                                    0621 02563000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0621 02564000
         MVC   OUTPUTPB(12),PUTMSG                                 0621 02565000
*             OLD=ADDR(SIONUMI1);   /* ADJUST OUTPUT LINE DES PTR    */ 02566000
         L     OLD,IOPARMS                                         0622 02567000
         LA    OLD,SIONUMI1(,OLD)                                  0622 02568000
*/********************************************************************/ 02569000
*/*                                                                  */ 02570000
*/*    ISSUE PUTLINE MACRO FOR FIRST HALF OF TWO LEVEL MESSAGE       */ 02571000
*/*                                                                  */ 02572000
*/********************************************************************/ 02573000
*                                                                  0623 02574000
*             GENERATE;                                            0623 02575000
         PUTLINE PARM=(5),OUTPUT=((4),TERM,SINGLE,INFOR),MF=(E,(1))     02576000
*             IF RTNCODE^=0 THEN    /* SEE IF PROBLEMS OCCURRED      */ 02577000
         LTR   RTNCODE,RTNCODE                                     0624 02578000
         BZ    @RF00624                                            0624 02579000
*               CALL RCCHECK;       /* INTERPRET RETURN CODE         */ 02580000
         BAL   @14,RCCHECK                                         0625 02581000
*             IF RTNCODE=0 THEN     /* IF OK THEN FORMAT SECOND      */ 02582000
@RF00624 LTR   RTNCODE,RTNCODE                                     0626 02583000
         BNZ   @RF00626                                            0626 02584000
*               DO;                                                0627 02585000
*                 OUTPUTPB=PUTMSG;  /* MOVE LIST FORM PUTLINE TO PL  */ 02586000
         MVI   OUTPUTPB+12,C' '                                    0628 02587000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0628 02588000
         MVC   OUTPUTPB(12),PUTMSG                                 0628 02589000
*                 OLD=ADDR(SIONUMI2);/* ADJUST OUTPUT LINE DES PTR   */ 02590000
         L     OLD,IOPARMS                                         0629 02591000
         LA    OLD,SIONUMI2(,OLD)                                  0629 02592000
*/********************************************************************/ 02593000
*/*                                                                  */ 02594000
*/*    ISSUE PUTLINE MACRO FOR SECOND HALF OF TWO LEVEL MESSAGE      */ 02595000
*/*    THE SECOND LEVEL WILL BE FORMATTED ONLY.                      */ 02596000
*/*                                                                  */ 02597000
*/********************************************************************/ 02598000
*                                                                  0630 02599000
*                 GENERATE;                                        0630 02600000
         PUTLINE PARM=(5),OUTPUT=((4),FORMAT,SINGLE,INFOR),MF=(E,(1))   02601000
*                 IF RTNCODE^=0 THEN/* SEE IF PROBLEMS OCCURRED      */ 02602000
         LTR   RTNCODE,RTNCODE                                     0631 02603000
         BZ    @RF00631                                            0631 02604000
*                   CALL RCCHECK;   /* INTERPRET RETURN CODE         */ 02605000
         BAL   @14,RCCHECK                                         0632 02606000
*                 IF RTNCODE=0 THEN /* IF EVERY THING IS OK PASS AD  */ 02607000
@RF00631 LTR   RTNCODE,RTNCODE                                     0633 02608000
         BNZ   @RF00633                                            0633 02609000
*                   DO;                                            0634 02610000
*                     PRMREG5=FMTMSGLN;/* PICK UP LENGTH             */ 02611000
         L     @14,FMATMSG                                         0635 02612000
         LH    PRMREG5,FMTMSGLN(,@14)                              0635 02613000
*                     PRMREG4=FMATMSG;/* PICK UP ADDRESS OF MSG      */ 02614000
         LR    PRMREG4,@14                                         0636 02615000
*                     IF PRMREG5>256 THEN/* SEE IF MESSAGE IS TOO BIG*/ 02616000
         LA    @11,256                                             0637 02617000
         CR    PRMREG5,@11                                         0637 02618000
         BNH   @RF00637                                            0637 02619000
*                       FMTMSGLN=256;/* REDUCE TO MAXIMUM            */ 02620000
         STH   @11,FMTMSGLN(,@14)                                  0638 02621000
*                     PARSEMSG(1:FMTMSGLN)=FMTMSG(1:FMTMSGLN);/* MOVE   02622000
*                                      MSG                           */ 02623000
@RF00637 L     @14,OUTBUF                                          0639 02624000
         L     @11,FMATMSG                                         0639 02625000
         LH    @06,FMTMSGLN(,@11)                                  0639 02626000
         BCTR  @06,0                                               0639 02627000
         EX    @06,@SM00629                                        0639 02628000
*                     GENERATE;                                    0640 02629000
         FREEMAIN RC,LV=(PRMREG5),A=(PRMREG4),SP=1                      02630000
*                     IF RTNCODE^=0 THEN/* TEST FOR ERROR            */ 02631000
         LTR   RTNCODE,RTNCODE                                     0641 02632000
         BZ    @RF00641                                            0641 02633000
*                       DO;                                        0642 02634000
*                         PRMREG4=RTNCODE;/* TRANSFER RTNCODE        */ 02635000
         LR    PRMREG4,RTNCODE                                     0643 02636000
*                         IOMSGPLT='00'X;/* CLEAR PARM LIST          */ 02637000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           0644 02638000
         MVI   IOMSGPLT,X'00'                                      0644 02639000
*                         TSTFLGS4(8)='0'B;/* TURN OFF VALIDITY BIT  */ 02640000
         NI    TSTFLGS4,B'11111110'                                0645 02641000
*                         GENERATE REFS(@IOVCON);                  0646 02642000
         IKJEGSIO SVCERR,SVC=120,RC=(4),ID=IO016,VCONBR=YES,           *02643000
               MF=(E,IOMSGPLT)                                          02644000
*                         IF RTNCODE<16 THEN/* TEST FOR ATTN         */ 02645000
         CH    RTNCODE,@CH00095                                    0647 02646000
         BNL   @RF00647                                            0647 02647000
*                           RTNCODE=4;/* INDICATE ERROR              */ 02648000
         LA    RTNCODE,4                                           0648 02649000
*                         TSTFLGS4(8)='1'B;/* TURN ON VALIDITY BIT   */ 02650000
@RF00647 OI    TSTFLGS4,B'00000001'                                0649 02651000
*                         GO TO EXITTERM;/* RETURN                   */ 02652000
         B     EXITTERM                                            0650 02653000
*                       END;                                       0651 02654000
*                   END;                                           0652 02655000
*               END;                                               0653 02656000
*           END;                                                   0654 02657000
*         ELSE                                                     0655 02658000
*           DO;                                                    0655 02659000
         B     @RC00619                                            0655 02660000
@RF00619 DS    0H                                                  0656 02661000
*             OLDPTR2=ADDR(ZEROOLD);/* SET UP POINTER TO SEC LEV     */ 02662000
         L     @14,IOPARMS                                         0656 02663000
         LA    @11,ZEROOLD(,@14)                                   0656 02664000
         ST    @11,OLDPTR2(,@14)                                   0656 02665000
*             OUTPUTPB=PUTMSG2;     /* MOVE LIST FORM PUTLINE TO PL  */ 02666000
         MVI   OUTPUTPB+12,C' '                                    0657 02667000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0657 02668000
         MVC   OUTPUTPB(12),PUTMSG2                                0657 02669000
*             ZEROOLD='00'X;        /* ZERO THE NEXT OLD PTR         */ 02670000
         SLR   @11,@11                                             0658 02671000
         ST    @11,ZEROOLD(,@14)                                   0658 02672000
*/********************************************************************/ 02673000
*/*                                                                  */ 02674000
*/*    ISSUE PUTLINE MACRO FOR TWO LEVEL MESSAGE                     */ 02675000
*/*                                                                  */ 02676000
*/********************************************************************/ 02677000
*                                                                  0659 02678000
*             GENERATE;                                            0659 02679000
         PUTLINE PARM=(5),OUTPUT=((4),TERM,MULTLVL,INFOR),MF=(E,(1))    02680000
*             IF RTNCODE^=0 THEN    /* SEE IF PROBLEMS OCCURRED      */ 02681000
         LTR   RTNCODE,RTNCODE                                     0660 02682000
         BZ    @RF00660                                            0660 02683000
*               CALL RCCHECK;       /* INTERPRET RETURN CODE         */ 02684000
         BAL   @14,RCCHECK                                         0661 02685000
*           END;                                                   0662 02686000
*       ELSE                                                       0663 02687000
*         IF LEV=3 THEN             /* SEE IF SINGLE LEV MESSAGE     */ 02688000
         B     @RC00618                                            0663 02689000
@RF00618 CLI   LEV,3                                               0663 02690000
         BNE   @RF00663                                            0663 02691000
*           DO;                                                    0664 02692000
*             OUTPUTPB=PUTGETIT;    /* MOVE LIST FORM PUTLINE TO PL  */ 02693000
         MVC   OUTPUTPB(16),PUTGETIT                               0665 02694000
*             OLD=ADDR(SIONUMI1);   /* SET UP ADDR OF PTGT OLD       */ 02695000
         L     OLD,IOPARMS                                         0666 02696000
         LA    OLD,SIONUMI1(,OLD)                                  0666 02697000
*/********************************************************************/ 02698000
*/*                                                                  */ 02699000
*/*    ISSUE PUTGET MACRO TO PROMPT THE USER FOR A RESPONSE          */ 02700000
*/*                                                                  */ 02701000
*/********************************************************************/ 02702000
*                                                                  0667 02703000
*             GENERATE;                                            0667 02704000
         USING ECT,DSECT10             SET UP ADDRESSABLITY TO ECT      02705000
         PUTGET PARM=(5),OUTPUT=((4),SINGLE,MODE),MF=(E,(1)) ISSUE CALL 02706000
*             IF RTNCODE=12 THEN    /* TEST FOR NEED TO FLUSH 2 LEV  */ 02707000
         CH    RTNCODE,@CH00058                                    0668 02708000
         BNE   @RF00668                                            0668 02709000
*               DO;                                                0669 02710000
*                 OLD=ADDR(SIONUMI1);/* SET UP ADDR OF PTGT OLD      */ 02711000
         L     OLD,IOPARMS                                         0670 02712000
         LA    OLD,SIONUMI1(,OLD)                                  0670 02713000
*                 DSECT10=TSTECT;   /* GET ADDR OF ECT IN DSECT REG  */ 02714000
         L     DSECT10,TSTECT                                      0671 02715000
*                 ECTMSGF(1)='1'B;  /* TURN ON THE FLUSH 2 LEV BIT   */ 02716000
         OI    ECTMSGF,B'10000000'                                 0672 02717000
*/********************************************************************/ 02718000
*/*                                                                  */ 02719000
*/*    ISSUE PUTGET MACRO TO PROMPT THE USER FOR A RESPONSE          */ 02720000
*/*                                                                  */ 02721000
*/********************************************************************/ 02722000
*                                                                  0673 02723000
*                 GENERATE;                                        0673 02724000
         PUTGET PARM=(5),OUTPUT=((4),SINGLE,MODE),MF=(E,(1)) REISSUE    02725000
*                 CALL RCCHECK;     /* ALTER RC TO MY RC'S           */ 02726000
         BAL   @14,RCCHECK                                         0674 02727000
*                 IF RTNCODE^=0 THEN/* IF CONVERTED RC NOT OK EXIT   */ 02728000
         LTR   RTNCODE,RTNCODE                                     0675 02729000
         BNZ   @RT00675                                            0675 02730000
*                   GO TO EXITTERM; /* BRANCH TO END OF ROUTINE      */ 02731000
*               END;                                               0677 02732000
*             ELSE                                                 0678 02733000
*               DO;                                                0678 02734000
         B     @RC00668                                            0678 02735000
@RF00668 DS    0H                                                  0679 02736000
*                 CALL RCCHECK;     /* CALL RTN CODE ANALYZER        */ 02737000
         BAL   @14,RCCHECK                                         0679 02738000
*                 IF RTNCODE^=0 THEN/* IF ANALYZER SET NON-ZERO      */ 02739000
         LTR   RTNCODE,RTNCODE                                     0680 02740000
         BNZ   @RT00680                                            0680 02741000
*                   GO TO EXITTERM; /* BRANCH TO END OF ROUTINE      */ 02742000
*               END;                                               0682 02743000
*             INBUF=INBUFPTR;       /* MOVE ADDR RTN'D LINE TO TCOM  */ 02744000
@RC00668 MVC   INBUF(4),INBUFPTR(IOPBREG)                          0683 02745000
*           END;                                                   0684 02746000
*         ELSE                                                     0685 02747000
*           RTNCODE=4;              /* IF LEV NUM NO MATCHED ERROR   */ 02748000
         B     @RC00663                                            0685 02749000
@RF00663 LA    RTNCODE,4                                           0685 02750000
*/********************************************************************/ 02751000
*/*                                                                  */ 02752000
*/*                R  RETURN TO CALLING ROUTINE                      */ 02753000
*/*                                                                  */ 02754000
*/********************************************************************/ 02755000
*                                                                  0686 02756000
*EXITTERM:                          /* LABEL USED TO BRANCH TO EXIT  */ 02757000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLING ROUTINE     */ 02758000
@RC00663 DS    0H                                                  0686 02759000
@RC00618 DS    0H                                                  0686 02760000
@RC00610 DS    0H                                                  0686 02761000
@RC00594 DS    0H                                                  0686 02762000
EXITTERM L     @14,@SA00016                                        0686 02763000
         LM    @00,@12,@SA00016+8                                  0686 02764000
         BR    @14                                                 0686 02765000
*   RFY                                                            0687 02766000
*    (DSECT10,                                                     0687 02767000
*     IOPLREG,                                                     0687 02768000
*     IOPBREG,                                                     0687 02769000
*     OLD) UNRSTD;                  /* ALLOW REGS TO BE USED         */ 02770000
*   END TERMOUT;                    /* END OF PROCEDURE              */ 02771000
*                                                                  0689 02772000
*/********************************************************************/ 02773000
*/*                                                                  */ 02774000
*/*    THE FOLLOWING PROCEDURE IS THE RETURN CODE ANALYZER ROUTINE   */ 02775000
*/*    IT WILL BE INVOKED TO ANALYZE THE PUTLINE RETURN CODES        */ 02776000
*/*    THE PRIMARY FUNCTIONS ARE:                                    */ 02777000
*/*                                                                  */ 02778000
*/*        1.  DETERMINE IF AN ERROR OCCURRED                        */ 02779000
*/*        2.  CONVERT THE RETURN CODE TO TSO-TEST RETURN CODES      */ 02780000
*/*                                                                  */ 02781000
*/********************************************************************/ 02782000
*/********************************************************************/ 02783000
*/*                                                                  */ 02784000
*/*RCCHECK:        E  RTN CODE ANALYZER                              */ 02785000
*/*                                                                  */ 02786000
*/********************************************************************/ 02787000
*                                                                  0689 02788000
*RCCHECK:                                                          0689 02789000
*   PROCEDURE;                                                     0689 02790000
*                                                                  0689 02791000
RCCHECK  STM   @14,@12,12(@13)                                     0689 02792000
*/********************************************************************/ 02793000
*/*                                                                  */ 02794000
*/*                P  DETERMINE WHICH IO MAC WAS USED PUTLINE ETC.   */ 02795000
*/*                P  BASED ON TYPE MACRO ADJUST RTN CODE TO MY RC'S */ 02796000
*/*                                                                  */ 02797000
*/********************************************************************/ 02798000
*                                                                  0690 02799000
*   IF LEV=0|LEV=1|LEV=2 THEN       /* ALL PUTLINE MACROS ARE ALIKE  */ 02800000
         CLI   LEV,0                                               0690 02801000
         BE    @RT00690                                            0690 02802000
         CLI   LEV,1                                               0690 02803000
         BE    @RT00690                                            0690 02804000
         CLI   LEV,2                                               0690 02805000
         BNE   @RF00690                                            0690 02806000
@RT00690 DS    0H                                                  0691 02807000
*     IF RTNCODE=4 THEN             /* CHECK FOR ATTN IN PROCESS     */ 02808000
         CH    RTNCODE,@CH00146                                    0691 02809000
         BNE   @RF00691                                            0691 02810000
*       RTNCODE=16;                 /* IF SO ADJUST TO OUR RTN CODE  */ 02811000
         LA    RTNCODE,16                                          0692 02812000
*     ELSE                                                         0693 02813000
*       IF RTNCODE=8 THEN           /* CHECK FOR NOWAIT BY USER      */ 02814000
         B     @RC00691                                            0693 02815000
@RF00691 CH    RTNCODE,@CH00034                                    0693 02816000
         BNE   @RF00693                                            0693 02817000
*         RTNCODE=0;                /* USER DID NOT WANT MSG OK      */ 02818000
         SLR   RTNCODE,RTNCODE                                     0694 02819000
*       ELSE                                                       0695 02820000
*         RTNCODE=4;                /* ALL OTHER RTN CODES MEAN ERR  */ 02821000
         B     @RC00693                                            0695 02822000
@RF00693 LA    RTNCODE,4                                           0695 02823000
*   ELSE                                                           0696 02824000
*     IF LEV=3 THEN                 /* ONLY ONE LEFT IS PUTGET       */ 02825000
         B     @RC00690                                            0696 02826000
@RF00690 CLI   LEV,3                                               0696 02827000
         BNE   @RF00696                                            0696 02828000
*       IF RTNCODE=0 THEN           /* IF RTN CODE IS ZERO NO ADJ'T  */ 02829000
         LTR   RTNCODE,RTNCODE                                     0697 02830000
         BNZ   @RF00697                                            0697 02831000
*         TSTFLGS4(1)='1'B;         /* INDICATE TO MAINL'E NOT ST'K  */ 02832000
         OI    TSTFLGS4,B'10000000'                                0698 02833000
*       ELSE                                                       0699 02834000
*         IF RTNCODE=4 THEN         /* RTN MESSAGE IN CHAIN          */ 02835000
         B     @RC00697                                            0699 02836000
@RF00697 CH    RTNCODE,@CH00146                                    0699 02837000
         BNE   @RF00699                                            0699 02838000
*           RTNCODE=0;              /* OK TO CONTINUE                */ 02839000
         SLR   RTNCODE,RTNCODE                                     0700 02840000
*         ELSE                                                     0701 02841000
*           IF RTNCODE=8 THEN       /* SEE IF ATTN IN PROCESS        */ 02842000
         B     @RC00699                                            0701 02843000
@RF00699 CH    RTNCODE,@CH00034                                    0701 02844000
         BNE   @RF00701                                            0701 02845000
*             RTNCODE=16;           /* IF SO CHANGE TO OUR CODE      */ 02846000
         LA    RTNCODE,16                                          0702 02847000
*           ELSE                                                   0703 02848000
*             RTNCODE=4;            /* ALL OTHER RTN CODES MEAM ERR  */ 02849000
         B     @RC00701                                            0703 02850000
@RF00701 LA    RTNCODE,4                                           0703 02851000
*     ELSE                                                         0704 02852000
*       RTNCODE=4;                  /* NO MATCH IN LEV # MEANS ERR   */ 02853000
         B     @RC00696                                            0704 02854000
@RF00696 LA    RTNCODE,4                                           0704 02855000
*/********************************************************************/ 02856000
*/*                                                                  */ 02857000
*/*EXITRCCK:       R  RETURN TO PROCESSING                           */ 02858000
*/*                                                                  */ 02859000
*/********************************************************************/ 02860000
*                                                                  0705 02861000
*EXITRCCK:                          /* LABEL USED TO EXIT ROUTINE    */ 02862000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLING ROUTINE     */ 02863000
@RC00696 DS    0H                                                  0705 02864000
@RC00690 DS    0H                                                  0705 02865000
EXITRCCK L     @14,12(,@13)                                        0705 02866000
         LM    @00,@12,20(@13)                                     0705 02867000
         BR    @14                                                 0705 02868000
*   END RCCHECK;                    /* END OF RTN CODE ANALYZER      */ 02869000
*                                                                  0707 02870000
*/********************************************************************/ 02871000
*/*                                                                  */ 02872000
*/*    THE FOLLOWING PROCEDURE IS THE ATTENTION CHECKING ROUTINE     */ 02873000
*/*    IT WILL BE INVOKED TO TEST FOR ATTENTIONS IN PROCESS          */ 02874000
*/*    THE PRIMARY FUNCTIONS ARE:                                    */ 02875000
*/*                                                                  */ 02876000
*/*        1.  DETERMINE IF AN ATTENTION OR LOGOFF HAS BEEN REQUESTED*/ 02877000
*/*        2.  CONVERT THE RETURN CODE TO TSO-TEST RETURN CODE 16    */ 02878000
*/*                                                                  */ 02879000
*/********************************************************************/ 02880000
*/********************************************************************/ 02881000
*/*                                                                  */ 02882000
*/*ATTNCHK:        E  ATTENTION CHECK ROUTINE                        */ 02883000
*/*                D  (NO,,YES,%RTN2)                              0707 02884000
*/*                   IS THE LOGON ECB POSTED ?                      */ 02885000
*/*                D  (YES,,NO,EXITATTN)                           0707 02886000
*/*                   IS THE ATTENTION ECB POSTED ?                  */ 02887000
*/*%RTN2:          P  SET THE RETURN CODE TO 16 (ATTN/LOGOFF)        */ 02888000
*/*                                                                  */ 02889000
*/********************************************************************/ 02890000
*                                                                  0707 02891000
*ATTNCK:                                                           0707 02892000
*   PROCEDURE;                                                     0707 02893000
ATTNCK   STM   @14,@12,12(@13)                                     0707 02894000
*   DCL                                                            0708 02895000
*     ECBLOG PTR(31) GEND;          /* DEFINE LOGON LOGOFF ECB PTR   */ 02896000
*   DCL                                                            0709 02897000
*     ECBTMPA PTR(31) GEND;         /* DEFINE ATTENTION ECB PTR      */ 02898000
*   DCL                                                            0710 02899000
*     LOGONOFF BIT(8) BASED(ECBLOG);/* DEFINE ECB HIGH ORDER BYTE    */ 02900000
*   DCL                                                            0711 02901000
*     ATTNHIT BIT(8) BASED(ECBTMPA);/* DEFINE ECB HIGH ORDER BYTE    */ 02902000
*   IF LOGONOFF(2)='1'B|ATTNHIT(2)='1'B THEN/* TEST BIT BEING ON     */ 02903000
         L     @14,ECBLOG                                          0712 02904000
         TM    LOGONOFF(@14),B'01000000'                           0712 02905000
         BO    @RT00712                                            0712 02906000
         L     @14,ECBTMPA                                         0712 02907000
         TM    ATTNHIT(@14),B'01000000'                            0712 02908000
         BNO   @RF00712                                            0712 02909000
@RT00712 DS    0H                                                  0713 02910000
*     RTNCODE=16;                   /* IF EITHER BIT IS ON SET RC16  */ 02911000
         LA    RTNCODE,16                                          0713 02912000
*/********************************************************************/ 02913000
*/*                                                                  */ 02914000
*/*EXITATTN:       R  RETURN TO PROCESSING                           */ 02915000
*/*                                                                  */ 02916000
*/********************************************************************/ 02917000
*                                                                  0714 02918000
*EXITATTN:                          /* LABEL TO INDICATE END ROUT'E  */ 02919000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLING ROUTINE     */ 02920000
@RF00712 DS    0H                                                  0714 02921000
EXITATTN L     @14,12(,@13)                                        0714 02922000
         LM    @00,@12,20(@13)                                     0714 02923000
         BR    @14                                                 0714 02924000
*   END ATTNCK;                     /* END OF ROUTINE                */ 02925000
*                                                                  0716 02926000
*/********************************************************************/ 02927000
*/*                                                                  */ 02928000
*/*    THE FOLLOWING PROCEDURE IS THE BAD INPUT PARMS MESSAGE ROUTINE*/ 02929000
*/*    IT WILL BE INVOKED TO ISSUE A MESSAGE TO USER OF LOST OUTPUT  */ 02930000
*/*    THE PRIMARY FUNCTION IS:                                      */ 02931000
*/*                                                                  */ 02932000
*/*        1.  ISSUE THE ERROR MESSAGE AND SET THE RTN CODE TO 12    */ 02933000
*/*                                                                  */ 02934000
*/********************************************************************/ 02935000
*/********************************************************************/ 02936000
*/*                                                                  */ 02937000
*/*BADPARM:        E  BADPARM ROUTINE-ISSUE ERROR MESSAGE DATA LOST  */ 02938000
*/*                S  CALL I/O: ISSUE ERROR MESSAGE DATA LOST        */ 02939000
*/*                                                                  */ 02940000
*/********************************************************************/ 02941000
*                                                                  0716 02942000
*BADPARM:                                                          0716 02943000
*   PROCEDURE;                                                     0716 02944000
BADPARM  STM   @14,@12,@SA00019                                    0716 02945000
*   IOMSGPLT='00'X;                 /* ZERO OUT PARM LIST            */ 02946000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           0717 02947000
         MVI   IOMSGPLT,X'00'                                      0717 02948000
*   GENERATE;                                                      0718 02949000
*           REFS(@IOVCON);                                              02950000
         IKJEGSIO MSG,FIRST=M0042,ID=I0016,VCONBR=YES,MF=(E,IOMSGPLT)   02951000
*   RTNCODE=12;                     /* SET RETURN CODE TO BAD PARM   */ 02952000
         LA    RTNCODE,12                                          0719 02953000
*/********************************************************************/ 02954000
*/*                                                                  */ 02955000
*/*EXITBPRM:       R  RETURN TO PROCESSING                           */ 02956000
*/*                                                                  */ 02957000
*/********************************************************************/ 02958000
*                                                                  0720 02959000
*EXITBPRM:                          /* LABEL USED TO EXIT ROUTINE    */ 02960000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLING ROUTINE     */ 02961000
EXITBPRM L     @14,@SA00019                                        0720 02962000
         LM    @00,@12,@SA00019+8                                  0720 02963000
         BR    @14                                                 0720 02964000
*   END BADPARM;                    /* END OF RTN CODE ANALYZER      */ 02965000
*                                                                  0722 02966000
*/********************************************************************/ 02967000
*/*                                                                  */ 02968000
*/*DATAROUT:       E  DATA REQUEST ROUTINE                           */ 02969000
*/*                D  (YES,,NO,%CONT4)                             0722 02970000
*/*                   IS THIS REQUEST TO A DATA SET ?                */ 02971000
*/*                S  (,%RTN3)                                     0722 02972000
*/*                   CALL D.S. ROUT.:  PUT DATA INTO DATA SET       */ 02973000
*/*%CONT4:         S  CALL TERM ROUT.:  PUT DATA OUT TO TERMINAL     */ 02974000
*/*%RTN3:          R  RETURN TO I/O CONTROLLER                       */ 02975000
*/*                                                                  */ 02976000
*/********************************************************************/ 02977000
*                                                                  0722 02978000
*DATA:                                                             0722 02979000
*   PROCEDURE;                                                     0722 02980000
DATA     STM   @14,@12,@SA00020                                    0722 02981000
*   DCL                                                            0723 02982000
*     TSTFLGS1 BIT(8) GEND;         /* DEFINE FLG WHERE TSTPRINT SW  */ 02983000
*   RTNCODE=0;                      /* INITIALIZE RTNCODE TO ZERO    */ 02984000
         SLR   RTNCODE,RTNCODE                                     0724 02985000
*   IF TSTFLGS1(3)='1'B THEN        /* SEE IF DATA GOES TO DATA SET  */ 02986000
         TM    TSTFLGS1,B'00100000'                                0725 02987000
         BNO   @RF00725                                            0725 02988000
*     CALL DATASET;                 /* IF SO CALL ROUTINE FOR D.S.   */ 02989000
         BAL   @14,DATASET                                         0726 02990000
*   ELSE                                                           0727 02991000
*     DO;                                                          0727 02992000
         B     @RC00725                                            0727 02993000
@RF00725 DS    0H                                                  0728 02994000
*       LEV=0;                      /* INDICATE DATA NOT MESSAGE     */ 02995000
         MVI   LEV,X'00'                                           0728 02996000
*       CALL TERMOUT;               /* HAVE DATA SENT TO TERMINAL    */ 02997000
         BAL   @14,TERMOUT                                         0729 02998000
*     END;                                                         0730 02999000
*   RETURN CODE(RTNCODE);           /* RETURN TO DRIVER WITH CODE    */ 03000000
@RC00725 L     @14,@SA00020                                        0731 03001000
         LM    @00,@12,@SA00020+8                                  0731 03002000
         BR    @14                                                 0731 03003000
*   END DATA;                                                      0732 03004000
*                                                                  0733 03005000
*/********************************************************************/ 03006000
*/*                                                                  */ 03007000
*/*DATASET:        E  DATA SET PROCESSOR                             */ 03008000
*/*                                                                  */ 03009000
*/********************************************************************/ 03010000
*                                                                  0733 03011000
*DATASET:                                                          0733 03012000
*   PROCEDURE;                                                     0733 03013000
DATASET  STM   @14,@12,@SA00021                                    0733 03014000
*   RESPECIFY                                                      0734 03015000
*     DSECT10 RSTD;                 /* TELL PLS NOT TO USE REG HERE  */ 03016000
*   DCL                                                            0735 03017000
*     TSTIODCB PTR(31) GEND;        /* ADDRESS TO OPEN DCB IN TCOM   */ 03018000
*   DCL                                                            0736 03019000
*     LISTDCB CHAR(*) GEND;         /* ADDRESS OF LIST MAC OF DCB    */ 03020000
*   DCL                                                            0737 03021000
*     LISTOPEN CHAR(*) GEND;        /* ADDRESS OF LIST MAC OF OPEN   */ 03022000
*   DCL                                                            0738 03023000
*     CLFORM CHAR(4) GEND;          /* DEFINE LIST FORM OF CLOSE     */ 03024000
*   DCL                                                            0739 03025000
*     DSECT4 REGISTER(4) RSTD;      /* REG USED FOR ADDR OF DSECT    */ 03026000
*   DCL                                                            0740 03027000
*     DSECT11 REGISTER(11) RSTD;    /* REG USED FOR ADDR OF DSECT    */ 03028000
*   DCL                                                            0741 03029000
*     1 DSNAMPDE BDY(WORD) BASED(SIODSN),/* STRUTURE USED DAIR       */ 03030000
*      2 STRNGPTR PTR(31),          /* POINTER TO DSNAME             */ 03031000
*      2 DSL FIXED(15),             /* LENGTH OF DSNAME              */ 03032000
*      2 FLAGRES1 BIT(15),          /* FLAG BYTE                     */ 03033000
*      2 PTRMEMBR PTR(31),          /* POINTER TO MEMBER NAME        */ 03034000
*      2 LENMEMBR FIXED(15),        /* MEMBER NAME LENGTH            */ 03035000
*      2 FLAGRES2 BIT(15),          /* FLAG BYTE                     */ 03036000
*      2 PSWRDPTR PTR(31),          /* POINTER TO PASSWORD           */ 03037000
*      2 LENPSWRD FIXED(15),        /* LENGTH OF PASS WORD           */ 03038000
*      2 FLAGRES3 BIT(15);          /* FLAG BYTES                    */ 03039000
*   DCL                                                            0742 03040000
*     IOTSTWK PTR(31);              /* VARIABLE TO STORE WK ADDR     */ 03041000
*   DCL                                                            0743 03042000
*     1 TESTIOWK BASED(IOTSTWK) BDY(WORD),/* OVERLAY OF WK AREA      */ 03043000
*      2 DCB CHAR(96),              /* WHEN OPENING AND USING A DCB  */ 03044000
*      2 CLOSE CHAR(4),             /* WHEN CLOSING AN OPEN DCB      */ 03045000
*      2 OPEN CHAR(4),              /* WHEN OPENING THE DCB          */ 03046000
*      2 CURDCBDN,                  /* CURRENT DCB BEING USED        */ 03047000
*       3 LENDSN FIXED(15),         /* LENGTH OF CURRENT DCB NAME    */ 03048000
*       3 NAME CHAR(44);            /* ACTUAL NAME OF CURRENT DS     */ 03049000
*   DCL                                                            0744 03050000
*     MACROWK CHAR(12);             /* THREE WORDS FOR GETMAIN       */ 03051000
*   DCL                                                            0745 03052000
*     TEMPDDN CHAR(8);              /* HOLD AREA OF DD NAME GOTTEN   */ 03053000
*   DCL                                                            0746 03054000
*     1 DSNDAIR,                    /* LENGTH OF DSNAME USED /DAIR   */ 03055000
*      2 DSLNGTH FIXED(15),         /* LENGTH OF DSNAME USED /DAIR   */ 03056000
*      2 DSNAME CHAR(44);           /* ACTUAL DSNAME                 */ 03057000
*   DCL                                                            0747 03058000
*     DSN CHAR(44) BASED(STRNGPTR); /* DEFINE DATA SET NAME          */ 03059000
*   DCL                                                            0748 03060000
*     TSTCPECB PTR(31) GEND;        /* POINTER TO ECB                */ 03061000
*   DCL                                                            0749 03062000
*     TSTUPT PTR(31) GEND;          /* POINTER TO UPT                */ 03063000
*   DCL                                                            0750 03064000
*     DAPLUPT PTR(31) GEND;         /* POINTER TO DAIR PRM LST UPT   */ 03065000
*   DCL                                                            0751 03066000
*     DAPLECT PTR(31) GEND;         /* POINTER TO DAIR PRM LST ECT   */ 03067000
*   DCL                                                            0752 03068000
*     DAPLECB PTR(31) GEND;         /* POINTER TO DAIR PRM LST ECB   */ 03069000
*   DCL                                                            0753 03070000
*     DAPB08 CHAR(84) GEND BDY(WORD);/* POINTER TO DAIR PRM BLOCK    */ 03071000
*   DCL                                                            0754 03072000
*     DA08LEN FIXED(15) GEND;       /* LENGTH                        */ 03073000
*   DCL                                                            0755 03074000
*     DA08DDN CHAR(8) GEND;         /* DAIR DD NAME                  */ 03075000
*   DCL                                                            0756 03076000
*     DA08UNIT CHAR(8) GEND;        /* DAIR UNIT - DEVICE            */ 03077000
*   DCL                                                            0757 03078000
*     DA08SER CHAR(8) GEND;         /* VOL SER NUMBER                */ 03079000
*   DCL                                                            0758 03080000
*     DA08MNM CHAR(8) GEND;         /* MEMBER NAME                   */ 03081000
*   DCL                                                            0759 03082000
*     DA08PSWD CHAR(8) GEND;        /* FOR DAIR PASS WORD            */ 03083000
*   DCL                                                            0760 03084000
*     DA08CD CHAR(2) GEND;          /* DAIR ENTRY CODE               */ 03085000
*   DCL                                                            0761 03086000
*     DA08DSP1 CHAR(1) GEND;        /* DATA SET STATUS FLAG          */ 03087000
*   DCL                                                            0762 03088000
*     DA08DPS2 CHAR(1) GEND;        /* DATA SET DISPOSTION           */ 03089000
*   DCL                                                            0763 03090000
*     DA08DPS3 CHAR(1) GEND;        /* DATA SET CONDITIONAL DISP     */ 03091000
*   DCL                                                            0764 03092000
*     DFPBCNTL CHAR(1) GEND;        /* DEFAULT CONTROL               */ 03093000
*   DCL                                                            0765 03094000
*     DFPBCODE CHAR(1) GEND;        /* DEFAULT ENTRY CODE            */ 03095000
*   DCL                                                            0766 03096000
*     PASSWORD CHAR(8) BASED(PSWRDPTR);/* PASSWORD                   */ 03097000
*   DCL                                                            0767 03098000
*     DFPBQUAL PTR(31) GEND;        /* POINTER TO DEFAULT QUALIFY    */ 03099000
*   DCL                                                            0768 03100000
*     DA08PDSN PTR(31) GEND;        /* POINTER DSN TO BE SRCH DSE    */ 03101000
*   DCL                                                            0769 03102000
*     DFPBDSN PTR(31) GEND;         /* POINTER DSN TO BE SRCH DSE    */ 03103000
*   DCL                                                            0770 03104000
*     DFPBPSCB PTR(31) GEND;        /* POINTER TO DEFAULT CONT BK    */ 03105000
*   DCL                                                            0771 03106000
*     DAPLPSCB PTR(31) GEND;        /* POINTER TO DAIR CONT BLOCK    */ 03107000
*   DCL                                                            0772 03108000
*     TPLPSCB PTR(31) GEND;         /* POINTER TO TMP CONT BLOCK     */ 03109000
*   DCL                                                            0773 03110000
*     DAPL CHAR(*) GEND;            /* DEFINE LABEL OF DIAR PARM L   */ 03111000
*   DCL                                                            0774 03112000
*     DFPB CHAR(*) GEND;            /* DEFINE LABEL OF DIAR PARM B   */ 03113000
*   DCL                                                            0775 03114000
*     TESTLIST CHAR(8) INIT('TESTLIST') STATIC;/* NAME USED DFLT N.  */ 03115000
*   DCL                                                            0776 03116000
*     DAPLDAPB PTR(31) GEND;        /* POINTER TO PRM BLOCK          */ 03117000
*   DCL                                                            0777 03118000
*     DA08DSO BIT(8) GEND;          /* DATA SET ORG                  */ 03119000
*   DCL                                                            0778 03120000
*     TSTFLGS3 BIT(8) GEND;         /* DEFINE FLAG BYTE              */ 03121000
*   DCL                                                            0779 03122000
*     TPLPTR PTR(31) GEND;          /* DEFINE THE TCOM POINTER/TPL   */ 03123000
*   DCL                                                            0780 03124000
*     TEMPTPL PTR(31);              /* DEFINE TEMP POINTER           */ 03125000
*   DCL                                                            0781 03126000
*     DAPB08WK CHAR(100) BDY(WORD); /* DEFINE DAIR PARM AREA         */ 03127000
*   DCL                                                            0782 03128000
*     DAPLWK CHAR(20) BDY(WORD);    /* DEFINE DAIR PARM LIST         */ 03129000
*   DCL                                                            0783 03130000
*     DFPBWK CHAR(20) BDY(WORD);    /* DEFINE DEFAULT PARM LIST      */ 03131000
*   DCL                                                            0784 03132000
*     TSTIODSN PTR(31) GEND;        /* IDENT DSN POINTER IN TCOM     */ 03133000
*   DCL                                                            0785 03134000
*     DSNQUEUE FIXED(15);           /* VALUE USED TO LOOP THRU QUEU  */ 03135000
*   DCL                                                            0786 03136000
*     1 DSNQUEU BASED(PRMREG4) BDY(WORD),/* OVERLAY OF MY DSN CHAIN  */ 03137000
*      2 DSNCHAIN PTR(31),          /* BACKPTR TO PREVIOUS DSN CH    */ 03138000
*      2 LENGTHDN FIXED(15),        /* LENGTH DSN IN CHAIN MEMBER    */ 03139000
*      2 DN CHAR(44);               /* ACTUAL DSN OF MEMBER          */ 03140000
*   GENERATE;                                                      0787 03141000
         DROP  DSECT10                                                  03142000
         USING DAPB08,DSECT10                                           03143000
         USING DAPL,DSECT4                                              03144000
         USING TPL,DSECT11                                              03145000
*   RTNCODE=0;                      /* INITIALIZE THE RTNCODE OK     */ 03146000
         SLR   RTNCODE,RTNCODE                                     0788 03147000
*/********************************************************************/ 03148000
*/*                                                                  */ 03149000
*/*                D  (NO,,YES,DATAOUT)                            0789 03150000
*/*                   IS THE DATA SET OPEN FROM REPEAT ?             */ 03151000
*/*                                                                  */ 03152000
*/********************************************************************/ 03153000
*                                                                  0789 03154000
*   IOTSTWK=TSTIODCB;               /* ESTAB ADDR WORKAREA   @YM06400*/ 03155000
         L     @14,TSTIODCB                                        0789 03156000
         ST    @14,IOTSTWK                                         0789 03157000
*   IF SIODSN^=0 THEN               /* TEST TO SEE IF NOT A REPEAT   */ 03158000
         SLR   @06,@06                                             0790 03159000
         L     @05,IOPARMS                                         0790 03160000
         L     @05,SIODSN(,@05)                                    0790 03161000
         CR    @05,@06                                             0790 03162000
         BE    @RF00790                                            0790 03163000
*/********************************************************************/ 03164000
*/*                                                                  */ 03165000
*/*%CONT5:         D  (YES,,NO,%CONT6)                             0791 03166000
*/*                   IS ANOTHER DATA SET OPEN ?                     */ 03167000
*/*                                                                  */ 03168000
*/********************************************************************/ 03169000
*                                                                  0791 03170000
*     DO;                                                          0791 03171000
*       IF TSTIODCB^=0 THEN         /* TEST FOR DATA SET BEING OPEN  */ 03172000
         CR    @14,@06                                             0792 03173000
         BE    @RF00792                                            0792 03174000
*/********************************************************************/ 03175000
*/*                                                                  */ 03176000
*/*                D  (NO,,YES,DATAOUT)                            0793 03177000
*/*                   IS THE OPEN DATA SET THE CORRECT D.S. ?        */ 03178000
*/*                                                                  */ 03179000
*/********************************************************************/ 03180000
*                                                                  0793 03181000
*         DO;                                                      0793 03182000
*           IOTSTWK=TSTIODCB;       /* ESTAB ADDR TO WORKAREA        */ 03183000
         ST    @14,IOTSTWK                                         0794 03184000
*           IF LENDSN=DSL THEN      /* SEE IF LENGTHS ARE EQUAL      */ 03185000
         LH    @06,LENDSN(,@14)                                    0795 03186000
         CH    @06,DSL(,@05)                                       0795 03187000
         BNE   @RF00795                                            0795 03188000
*             IF NAME(1:LENDSN)=DSN(1:LENDSN) THEN/* TEST SAME       */ 03189000
         L     @05,STRNGPTR(,@05)                                  0796 03190000
         BCTR  @06,0                                               0796 03191000
         EX    @06,@SC00634                                        0796 03192000
         BNE   @RF00796                                            0796 03193000
*               DO;                                                0797 03194000
*                 CALL PUT;         /* HAVE THE DATA SENT OUT        */ 03195000
         BAL   @14,PUT                                             0798 03196000
*                 GO TO EXITDS;     /* RETURN TO CALLER              */ 03197000
         B     EXITDS                                              0799 03198000
*               END;                                               0800 03199000
*         END;                                                     0801 03200000
@RF00796 DS    0H                                                  0801 03201000
@RF00795 DS    0H                                                  0802 03202000
*       GENERATE;                                                  0802 03203000
@RF00792 DS    0H                                                  0802 03204000
         GETMAIN RC,LV=TLEN,SP=1       GET CORE FOR NEW DCB             03205000
*       IF RTNCODE^=0 THEN          /* TEST FOR SUCESSFUL GETMAIN    */ 03206000
         LTR   RTNCODE,RTNCODE                                     0803 03207000
         BZ    @RF00803                                            0803 03208000
*         DO;                                                      0804 03209000
*           PRMREG4=RTNCODE;        /* TRANSFER RETURN CODE          */ 03210000
         LR    PRMREG4,RTNCODE                                     0805 03211000
*           GENERATE REFS(@IOVCON);                                0806 03212000
      IKJEGSIO SVCERR,SVC=10,RC=(4),ID=I0016,VCONBR=YES,MF=(E,IOMSGPLT) 03213000
*           IF RTNCODE<16 THEN      /* SEE IF ATTN OR RETRY          */ 03214000
         CH    RTNCODE,@CH00095                                    0807 03215000
         BNL   @RF00807                                            0807 03216000
*             RTNCODE=4;            /* SET THE RETURN CODE TO ERROR  */ 03217000
         LA    RTNCODE,4                                           0808 03218000
*           GO TO EXITDS;           /* RETURN TO CALLER              */ 03219000
         B     EXITDS                                              0809 03220000
*         END;                                                     0810 03221000
*       IOTSTWK=PRMREG1;            /* SAVE ADDRESS OF CORE          */ 03222000
@RF00803 ST    PRMREG1,IOTSTWK                                     0811 03223000
*       DSECT10=ADDR(DAPB08WK);     /* ESTABLISH ADDR TO PARM AREA   */ 03224000
         LA    DSECT10,DAPB08WK                                    0812 03225000
*       DSECT4=ADDR(DAPLWK);        /* ESTABLISH ADDR TO PARM AREA   */ 03226000
         LA    DSECT4,DAPLWK                                       0813 03227000
*       DSECT11=TPLPTR;             /* ESTABLISH ADDR TO PARM AREA   */ 03228000
         L     DSECT11,TPLPTR                                      0814 03229000
*       TEMPTPL=TPLPSCB;            /* SAVE TPLPSCB POINTER          */ 03230000
         L     @14,TPLPSCB                                         0815 03231000
         ST    @14,TEMPTPL                                         0815 03232000
*       DAPLWK='00'X;               /* CLEAR PARM AREA               */ 03233000
         XC    DAPLWK+1(19),DAPLWK+1                               0816 03234000
         MVI   DAPLWK,X'00'                                        0816 03235000
*       DAPB08WK='00'X;             /* CLEAR PARM AREA               */ 03236000
         XC    DAPB08WK+1(99),DAPB08WK+1                           0817 03237000
         MVI   DAPB08WK,X'00'                                      0817 03238000
*       DAPLUPT=TSTUPT;             /* MOVE UPT FROM TCOM            */ 03239000
         MVC   DAPLUPT(4),TSTUPT                                   0818 03240000
*       DAPLECT=TSTECT;             /* MOVE ECT FROM TCOM            */ 03241000
         MVC   DAPLECT(4),TSTECT                                   0819 03242000
*       DAPLECB=TSTCPECB;           /* MOVE ECB FROM TCOM            */ 03243000
         MVC   DAPLECB(4),TSTCPECB                                 0820 03244000
*       DAPLPSCB=TPLPSCB;           /* MOVE SCB TO DAIR CB           */ 03245000
         ST    @14,DAPLPSCB                                        0821 03246000
*       DAPLDAPB=ADDR(DAPB08);      /* MOVE ADDR OF DIAR PB          */ 03247000
         LA    @14,DAPB08                                          0822 03248000
         ST    @14,DAPLDAPB                                        0822 03249000
*       DAPB08='00'X;               /* ZERO OUT DAPB08               */ 03250000
         XC    DAPB08+1(83),DAPB08+1                               0823 03251000
         MVI   DAPB08,X'00'                                        0823 03252000
*       DA08DDN=' ';                /* SET THE DDNAME TO BLANKS      */ 03253000
         MVI   DA08DDN+1,C' '                                      0824 03254000
         MVC   DA08DDN+2(6),DA08DDN+1                              0824 03255000
         MVI   DA08DDN,C' '                                        0824 03256000
*       DA08UNIT=' ';               /* SET THE UNIT FILD TO BLANKS   */ 03257000
         MVI   DA08UNIT+1,C' '                                     0825 03258000
         MVC   DA08UNIT+2(6),DA08UNIT+1                            0825 03259000
         MVI   DA08UNIT,C' '                                       0825 03260000
*       DA08SER=' ';                /* SET SER NUMBER TO BLANKS      */ 03261000
         MVI   DA08SER+1,C' '                                      0826 03262000
         MVC   DA08SER+2(6),DA08SER+1                              0826 03263000
         MVI   DA08SER,C' '                                        0826 03264000
*       DA08MNM=' ';                /* SET MEMBER NAME TO BLANKS     */ 03265000
         MVI   DA08MNM+1,C' '                                      0827 03266000
         MVC   DA08MNM+2(6),DA08MNM+1                              0827 03267000
         MVI   DA08MNM,C' '                                        0827 03268000
*       DA08PSWD=' ';               /* SET PASSWD NAME TO BLANKS     */ 03269000
         MVI   DA08PSWD+1,C' '                                     0828 03270000
         MVC   DA08PSWD+2(6),DA08PSWD+1                            0828 03271000
         MVI   DA08PSWD,C' '                                       0828 03272000
*       DA08UNIT='';                /* INDICATE DEVICE       @ZA06224*/ 03273000
         MVI   DA08UNIT,C' '                                       0829 03274000
         MVC   DA08UNIT+1(7),DA08UNIT                              0829 03275000
*       DA08CD(2)='08'X;            /* SET UP                        */ 03276000
         MVI   DA08CD+1,X'08'                                      0830 03277000
*       DA08DSP1='01'X;             /* SET DPS BYTE TO 01            */ 03278000
         MVI   DA08DSP1,X'01'                                      0831 03279000
*       DA08DPS2='08'X;             /* SET DPS2 BYTE TO 08           */ 03280000
         MVI   DA08DPS2,X'08'                                      0832 03281000
*       DA08DPS3='08'X;             /* SET THE DPS3 BYTE TO 08       */ 03282000
         MVI   DA08DPS3,X'08'                                      0833 03283000
*       NAME='';                    /* BLANK OUT THE DSNAME FIELD    */ 03284000
         L     @14,IOTSTWK                                         0834 03285000
         MVI   NAME(@14),C' '                                      0834 03286000
         MVC   NAME+1(43,@14),NAME(@14)                            0834 03287000
*       DA08PDSN=ADDR(DSNDAIR);     /* MOVE ADDRESS OF PARM LIST     */ 03288000
         LA    @14,DSNDAIR                                         0835 03289000
         ST    @14,DA08PDSN                                        0835 03290000
*       IF FLAGRES3(1)='1'B THEN    /* TEST FOR PASS WORD DATA SET   */ 03291000
         L     @14,IOPARMS                                         0836 03292000
         L     @14,SIODSN(,@14)                                    0836 03293000
         TM    FLAGRES3(@14),B'10000000'                           0836 03294000
         BNO   @RF00836                                            0836 03295000
*         DA08PSWD(1:LENPSWRD)=PASSWORD;/* IF SO MOVE IN             */ 03296000
         LH    @06,LENPSWRD(,@14)                                  0837 03297000
         BCTR  @06,0                                               0837 03298000
         L     @14,PSWRDPTR(,@14)                                  0837 03299000
         EX    @06,@SM00636                                        0837 03300000
*       DSNAME(1:DSL)=DSN;          /* MOVE DSNAME TO PARM LIST      */ 03301000
@RF00836 L     @14,IOPARMS                                         0838 03302000
         L     @14,SIODSN(,@14)                                    0838 03303000
         LH    @06,DSL(,@14)                                       0838 03304000
         LR    @05,@06                                             0838 03305000
         BCTR  @05,0                                               0838 03306000
         L     @14,STRNGPTR(,@14)                                  0838 03307000
         EX    @05,@SM00638                                        0838 03308000
*       DSLNGTH=DSL;                /* MOVE DATA SET NAME LENGTH IN  */ 03309000
         STH   @06,DSLNGTH                                         0839 03310000
*       CURDCBDN=DSNDAIR;           /* TRANSFER DSN TO CUR. DCB      */ 03311000
         L     @14,IOTSTWK                                         0840 03312000
         MVC   CURDCBDN(46,@14),DSNDAIR                            0840 03313000
*/********************************************************************/ 03314000
*/*                                                                  */ 03315000
*/*%CONT7:         P  CLOSE DATA SET                                 */ 03316000
*/*%CONT6:         D  (NO,,YES,%CONT8)                             0841 03317000
*/*                   IS THE DATA SET FULLY QUALIFIED ?              */ 03318000
*/*                                                                  */ 03319000
*/********************************************************************/ 03320000
*                                                                  0841 03321000
*       IF FLAGRES1(2)^='1'B THEN   /* TEST FOR QUOTE MEANS QUAL     */ 03322000
         L     @14,IOPARMS                                         0841 03323000
         L     @14,SIODSN(,@14)                                    0841 03324000
         TM    FLAGRES1(@14),B'01000000'                           0841 03325000
         BO    @RF00841                                            0841 03326000
*         DO;                                                      0842 03327000
*                                                                  0842 03328000
*/********************************************************************/ 03329000
*/*                                                                  */ 03330000
*/*                P  PREPARE PARM LIST FOR IKJDFLT TO QUALIFY NAME  */ 03331000
*/*                                                                  */ 03332000
*/********************************************************************/ 03333000
*                                                                  0843 03334000
*           GENERATE(DROP DSECT11); /* DISCONTINUE DSECT REGISTER    */ 03335000
         DROP DSECT11                                                   03336000
*           GENERATE(USING DFPB,DSECT11);/* ESTAB DSECT REG          */ 03337000
         USING DFPB,DSECT11                                             03338000
*           DSECT11=ADDR(DFPBWK);   /* PICK UP POINTER               */ 03339000
         LA    DSECT11,DFPBWK                                      0845 03340000
*           DFPBWK='00'X;           /* CLEAR PARM FIELDS             */ 03341000
         XC    DFPBWK+1(19),DFPBWK+1                               0846 03342000
         MVI   DFPBWK,X'00'                                        0846 03343000
*           DFPBPSCB=DAPLPSCB;      /* MOVE PSCB FROM DAIR PL        */ 03344000
         MVC   DFPBPSCB(4),DAPLPSCB                                0847 03345000
*           DFPBDSN=DA08PDSN;       /* MOVE DATA SET NAME FROM DAIR  */ 03346000
         MVC   DFPBDSN(4),DA08PDSN                                 0848 03347000
*           DFPBQUAL=ADDR(TESTLIST);/* INDICATE DEFLT NAME FOR US    */ 03348000
         LA    @14,TESTLIST                                        0849 03349000
         ST    @14,DFPBQUAL                                        0849 03350000
*           DFPBCODE='00'X;         /* ENTRY CODE                    */ 03351000
         MVI   DFPBCODE,X'00'                                      0850 03352000
*           DFPBCNTL='20'X;         /* INDICATE TO USE USERS ID PRE  */ 03353000
         MVI   DFPBCNTL,X'20'                                      0851 03354000
*           PRMREG1=ADDR(DAPL);     /* SET ADDR IN R1 OF DA PRM LST  */ 03355000
         LA    PRMREG1,DAPL                                        0852 03356000
*           DAPLPSCB=ADDR(DFPB);    /* SET ADDR OF PRM BLOCK         */ 03357000
         LA    @14,DFPB                                            0853 03358000
         ST    @14,DAPLPSCB                                        0853 03359000
*/********************************************************************/ 03360000
*/*                                                                  */ 03361000
*/*                P  ISSUE LINK MACRO TO IKJDFLT TO QUALIFY NAME    */ 03362000
*/*                S  CALL CKDSNAME: CHECK DATA SET NAME             */ 03363000
*/*                                                                  */ 03364000
*/********************************************************************/ 03365000
*                                                                  0854 03366000
*           GENERATE;                                              0854 03367000
         LINK EP=IKJDFLT               LINK TO DEFAULT FOR QUAL NAME    03368000
*           IF RTNCODE=24 THEN      /* SEE IF IT MEANS ATTN HIT      */ 03369000
         CH    RTNCODE,@CH00082                                    0855 03370000
         BNE   @RF00855                                            0855 03371000
*             DO;                                                  0856 03372000
*               RTNCODE=16;         /* IF SO CHANGE TO OUT CODE      */ 03373000
         LA    RTNCODE,16                                          0857 03374000
*               GO TO EXITDS;       /* GO TO EXIT OF ROUTINE         */ 03375000
         B     EXITDS                                              0858 03376000
*             END;                                                 0859 03377000
*           IF RTNCODE=8            /* IF DSN TOO LONG       @ZA06223*/ 03378000
*             THEN                  /* GET CORRECTED DSN     @ZA06223*/ 03379000
@RF00855 CH    RTNCODE,@CH00034                                    0860 03380000
         BNE   @RF00860                                            0860 03381000
*             CALL GETDSN;          /* PROMPT FOR DSNAME     @ZA06223*/ 03382000
         BAL   @14,GETDSN                                          0861 03383000
*           IF RTNCODE=0 THEN       /* TEST RETURN CODE FROM DFLT    */ 03384000
@RF00860 LTR   RTNCODE,RTNCODE                                     0862 03385000
         BNZ   @RF00862                                            0862 03386000
*             DAPLPSCB=TEMPTPL;     /* RESTORE TPL POINTER           */ 03387000
         MVC   DAPLPSCB(4),TEMPTPL                                 0863 03388000
*           RTNCODE=0;              /* REINITIALIZE RTNCODE TO ZERO  */ 03389000
@RF00862 SLR   RTNCODE,RTNCODE                                     0864 03390000
*         END;                                                     0865 03391000
*       CALL CKDSNAME;              /* CALL TO CHECK IF MATCH OF DS  */ 03392000
@RF00841 BAL   @14,CKDSNAME                                        0866 03393000
*       IF RTNCODE^=0 THEN          /* CHECK FOR ERROR RTNCODE       */ 03394000
         LTR   RTNCODE,RTNCODE                                     0867 03395000
         BNZ   @RT00867                                            0867 03396000
*         GO TO EXITDS;             /* IF SO BRANCH TO THE EXIT      */ 03397000
*                                                                  0869 03398000
*/********************************************************************/ 03399000
*/*                                                                  */ 03400000
*/*%CONT8:         P  ISSUE LINK MACRO TO IKJDAIR TO ALLOCATE D.S.   */ 03401000
*/*                                                                  */ 03402000
*/********************************************************************/ 03403000
*                                                                  0869 03404000
*TODAIR:                                                           0869 03405000
*       IF FLAGRES2(1)='1'B THEN    /* SEE IF PHYSICAL SEQUENTIAL    */ 03406000
TODAIR   L     @14,IOPARMS                                         0869 03407000
         L     @14,SIODSN(,@14)                                    0869 03408000
         TM    FLAGRES2(@14),B'10000000'                           0869 03409000
         BNO   @RF00869                                            0869 03410000
*         DO;                                                      0870 03411000
*           CALL BADDS;             /* HAVE MESSAGE PUT OUT          */ 03412000
         BAL   @14,BADDS                                           0871 03413000
*           GO TO EXITDS;           /* BRANCH TO EXIT                */ 03414000
         B     EXITDS                                              0872 03415000
*         END;                                                     0873 03416000
*       IF TSTFLGS3(5)='1'B THEN    /* TEST FOUND A PRIOR DS   SWITCH*/ 03417000
@RF00869 TM    TSTFLGS3,B'00001000'                                0874 03418000
         BNO   @RF00874                                            0874 03419000
*         DO;                                                      0875 03420000
*           TSTFLGS3(5)='0'B;       /* TURN OFF SWITCH FOR NEXT TIM  */ 03421000
         NI    TSTFLGS3,B'11110111'                                0876 03422000
*           DA08DSP1='02'X;         /* IDICATE MOD ON DISP TO DAIR   */ 03423000
         MVI   DA08DSP1,X'02'                                      0877 03424000
*         END;                                                     0878 03425000
*       PRMREG1=ADDR(DAPL);         /* SET UP ADDRESS FOR DAIR       */ 03426000
@RF00874 LA    PRMREG1,DAPL                                        0879 03427000
*       GENERATE;                                                  0880 03428000
*                                                                  0880 03429000
         LINK EP=IKJDAIR               LINK TO DAIR FOR DD CARD         03430000
*/********************************************************************/ 03431000
*/*                                                                  */ 03432000
*/*                D  (YES,,NO,DATAOUT)                            0881 03433000
*/*                   IS THE DAIR RTN CODE NON-ZERO ?                */ 03434000
*/*                S  CALL CKDARC:  ANALYZE RETURN CODE              */ 03435000
*/*                                                                  */ 03436000
*/********************************************************************/ 03437000
*                                                                  0881 03438000
*       IF RTNCODE^=0 THEN          /* SEE IF DAIR FAILED            */ 03439000
         LTR   RTNCODE,RTNCODE                                     0881 03440000
         BZ    @RF00881                                            0881 03441000
*         DO;                                                      0882 03442000
*           CALL CKDARC;            /* CALL ROUTINE TO ANALYZE CODE  */ 03443000
         BAL   @14,CKDARC                                          0883 03444000
*           IF RTNCODE^=0 THEN      /* SEE IF I CAN CONTINUE         */ 03445000
         LTR   RTNCODE,RTNCODE                                     0884 03446000
         BNZ   @RT00884                                            0884 03447000
*             GO TO EXITDS;         /* IF NOT QUITE                  */ 03448000
*         END;                                                     0886 03449000
*       IF DA08DSO^='00000000'B THEN/* SEE IF THE DS IS NEW          */ 03450000
@RF00881 CLI   DA08DSO,B'00000000'                                 0887 03451000
         BE    @RF00887                                            0887 03452000
*         IF DA08DSO(2)^='1'B THEN  /* SEE IF THE DS IS PHY. SEQ.    */ 03453000
         TM    DA08DSO,B'01000000'                                 0888 03454000
         BO    @RF00888                                            0888 03455000
*           DO;                                                    0889 03456000
*             CALL BADDS;           /* HAVE ERROR MESSAGE SENT       */ 03457000
         BAL   @14,BADDS                                           0890 03458000
*             GO TO EXITDS;         /* GO TO EXIT OF ROUTINE         */ 03459000
         B     EXITDS                                              0891 03460000
*           END;                                                   0892 03461000
*                                                                  0892 03462000
*/********************************************************************/ 03463000
*/*                                                                  */ 03464000
*/*DATAOUT:        S  CALL PUT:  MOVE DATA TO D.S.                   */ 03465000
*/*                R  RETURN TO MAIN DATA ROUTINE                    */ 03466000
*/*                                                                  */ 03467000
*/********************************************************************/ 03468000
*                                                                  0893 03469000
*       TEMPDDN=DA08DDN;            /* STORE DDNAME IN MY WORK AREA  */ 03470000
@RF00888 DS    0H                                                  0893 03471000
@RF00887 MVC   TEMPDDN(8),DA08DDN                                  0893 03472000
*       CALL OPENDS;                /* CALL THE OPEN NEW DCB ROUT    */ 03473000
         BAL   @14,OPENDS                                          0894 03474000
*       IF RTNCODE^=0 THEN          /* CHECK ON SUCCESS OF OPEN      */ 03475000
         LTR   RTNCODE,RTNCODE                                     0895 03476000
         BNZ   @RT00895                                            0895 03477000
*         GO TO EXITDS;             /* BRANCH TO EXIT IF NOT         */ 03478000
*     END;                                                         0897 03479000
*   TSTIODCB=ADDR(DCB);             /* MOVE THE ADDRESS OF DCB TCOM  */ 03480000
@RF00790 MVC   TSTIODCB(4),IOTSTWK                                 0898 03481000
*   CALL PUT;                       /* GO TO ISSUE PUT MACRO         */ 03482000
         BAL   @14,PUT                                             0899 03483000
*EXITDS:                            /* LABEL USED TO BRANCH TO EXIT  */ 03484000
*   RETURN CODE(RTNCODE);           /* RETURN TO THE CALLER          */ 03485000
EXITDS   L     @14,@SA00021                                        0900 03486000
         LM    @00,@12,@SA00021+8                                  0900 03487000
         BR    @14                                                 0900 03488000
*                                                                  0901 03489000
*/* *********************************************************@ZA06223*/ 03490000
*/*                                                          @ZA06223*/ 03491000
*/*  GETDSN - PROMPT FOR VALID DSNAME FOR PRINT DATASET      @ZA06223*/ 03492000
*/*      WHEN RETURN FROM THIS ROUTINE DSNAME WILL BE FULLY  @ZA06223*/ 03493000
*/*      QUALIFIED AND VALIDITY CHECKED.                     @ZA06223*/ 03494000
*/*                                                          @ZA06223*/ 03495000
*/* *********************************************************@ZA06223*/ 03496000
*                                                                  0901 03497000
*GETDSN:                                                           0901 03498000
*   PROC;                           /*                       @ZA06223*/ 03499000
GETDSN   STM   @14,@12,@SA00022                                    0901 03500000
*   DCL                             /*                       @ZA06223*/ 03501000
*     DUMBUF CHAR(5) INIT('0005000040'X),/* DUMMY CMD BUFFER @ZA06223*/ 03502000
*     1 DSN2LONG STATIC,            /* DSN TOO LONG MSG      @ZA06223*/ 03503000
*      2 MSGLENTH FIXED(15) INIT(67),/* LENGTH               @ZA06223*/ 03504000
*      2 * FIXED(15),               /* RESERVED              @ZA06223*/ 03505000
*      2 TXTOFMSG CHAR(63) INIT(    /* MESSAGE TEXT          @ZA06223*/ 03506000
*'IKJ57613I DSNAME WHEN FULLY QUALIFIED WILL EXCEED 44 CHARACTERS');    03507000
*   GEN DATA DEFS(PRMTPCL);                                        0903 03508000
*   RFY                                                            0904 03509000
*    (IOPLREG,                                                     0904 03510000
*     IOPBREG,                                                     0904 03511000
*     OLD) RSTD;                    /* REGS MAY NOT BE USED  @ZA06223*/ 03512000
*   IOPLREG=ADDR(USERIOPL);         /* INIT IOPL PTR         @ZA06223*/ 03513000
         LA    IOPLREG,USERIOPL                                    0905 03514000
*   IOPBREG=ADDR(OUTPUTPB);         /* INIT IOPL             @ZA06223*/ 03515000
         LA    IOPBREG,OUTPUTPB                                    0906 03516000
*   USERIOPL=PARMLIST;              /* INIT REST OF IOPL     @ZA06223*/ 03517000
         MVI   USERIOPL+12,C' '                                    0907 03518000
         MVC   USERIOPL+13(3),USERIOPL+12                          0907 03519000
         MVC   USERIOPL(12),PARMLIST                               0907 03520000
*   OUTPUTPB=PUTMSG;                /* INIT PUTL PARMS       @ZA06223*/ 03521000
         MVI   OUTPUTPB+12,C' '                                    0908 03522000
         MVC   OUTPUTPB+13(3),OUTPUTPB+12                          0908 03523000
         MVC   OUTPUTPB(12),PUTMSG                                 0908 03524000
*   OLD=ADDR(SIONUMI1);             /* INIT OLD PTR          @ZA06223*/ 03525000
         L     @14,IOPARMS                                         0909 03526000
         LA    OLD,SIONUMI1(,@14)                                  0909 03527000
*   SIONUMI1=1;                     /* INIT OLD COUNT        @ZA06223*/ 03528000
         MVC   SIONUMI1(4,@14),@CF00115                            0910 03529000
*   SIO1STMS=ADDR(DSN2LONG);        /* INIT MSG ADDR         @ZA06223*/ 03530000
         LA    @06,DSN2LONG                                        0911 03531000
         ST    @06,SIO1STMS(,@14)                                  0911 03532000
*   GENERATE;                                                      0912 03533000
*                                  /*                        @ZA06223*/ 03534000
       PUTLINE PARM=(5),OUTPUT=((4),TERM,SINGLE,INFOR),MF=(E,(1))       03535000
*   RFY                                                            0913 03536000
*    (IOPBREG,                                                     0913 03537000
*     OLD);                         /* OK TO USE REGS AGAIN  @ZA06223*/ 03538000
*   IF RTNCODE^=0                   /* PUTLINE OK?           @ZA06223*/ 03539000
*     THEN                          /* NO-DIAGNOSE ERROR     @ZA06223*/ 03540000
         LTR   RTNCODE,RTNCODE                                     0914 03541000
         BZ    @RF00914                                            0914 03542000
*     IF RTNCODE=8                  /* WAS ATTN HIT?         @ZA06223*/ 03543000
*       THEN                                                       0915 03544000
         CH    RTNCODE,@CH00034                                    0915 03545000
         BNE   @RF00915                                            0915 03546000
*       DO;                         /* IF IT WAS SET         @ZA06223*/ 03547000
*         RTNCODE=16;               /* SET ATTN RC           @ZA06223*/ 03548000
         LA    RTNCODE,16                                          0917 03549000
*         RETURN TO ENDIO;          /* AND QUIT              @ZA06223*/ 03550000
         LA    @14,ENDIO                                           0918 03551000
         LM    @15,@12,@SA00022+4                                  0918 03552000
         BR    @14                                                 0918 03553000
*       END;                        /*                       @ZA06223*/ 03554000
*     ELSE                                                         0920 03555000
*       IF RTNCODE=8                /* IF NOWAIT WAS SPEC    @ZA06223*/ 03556000
*         THEN                                                     0920 03557000
@RF00915 CH    RTNCODE,@CH00034                                    0920 03558000
         BNE   @RF00920                                            0920 03559000
*         RTNCODE=0;                /* ACCEPT AS VALID       @ZA06223*/ 03560000
         SLR   RTNCODE,RTNCODE                                     0921 03561000
*       ELSE                                                       0922 03562000
*         DO;                       /* ALL OTHERS ARE ERRORS @ZA06223*/ 03563000
         B     @RC00920                                            0922 03564000
@RF00920 DS    0H                                                  0923 03565000
*           RTNCODE=4;              /* SET ERROR RETURN CODE @ZA06223*/ 03566000
         LA    RTNCODE,4                                           0923 03567000
*           RETURN TO ENDIO;        /* AND GET OUT           @ZA06223*/ 03568000
         LA    @14,ENDIO                                           0924 03569000
         LM    @15,@12,@SA00022+4                                  0924 03570000
         BR    @14                                                 0924 03571000
*         END;                      /*                       @ZA06223*/ 03572000
*   USERCBUF=DUMBUF;                /* SET UP DUMMY CMD BFR  @ZA06223*/ 03573000
@RC00920 DS    0H                                                  0926 03574000
@RF00914 MVC   USERCBUF(5),DUMBUF                                  0926 03575000
*   PPLPTR=ADDR(USERPPL);           /* POINT TO PPL          @ZA06223*/ 03576000
         LA    @14,USERPPL                                         0927 03577000
         ST    @14,PPLPTR                                          0927 03578000
*   USERPPL=PARMLIST;               /* INIT PARSE PARMS      @ZA06223*/ 03579000
         MVI   USERPPL+12,C' '                                     0928 03580000
         MVC   USERPPL+13(15),USERPPL+12                           0928 03581000
         MVC   USERPPL(12),PARMLIST                                0928 03582000
*   PPLPCL=PCLADDR;                 /* POINT TO PCL          @ZA06223*/ 03583000
         MVC   PPLPCL(4,@14),PCLADDR                               0929 03584000
*   PPLANS=ADDR(PDLPTR);            /* PROVIDE ANSWER AREA   @ZA06223*/ 03585000
         LA    @06,PDLPTR                                          0930 03586000
         ST    @06,PPLANS(,@14)                                    0930 03587000
*   PPLCBUF=ADDR(USERCBUF);         /* POINT TO PHONY BFR    @ZA06223*/ 03588000
         LA    @06,USERCBUF                                        0931 03589000
         ST    @06,PPLCBUF(,@14)                                   0931 03590000
*   PPLUWA=IOPLREG;                 /* PASS IOPL TO VALIDCK  @ZA06223*/ 03591000
         ST    IOPLREG,PPLUWA(,@14)                                0932 03592000
*   IOPLREG=PPLPTR;                 /* POINT TO PARSE PARMS  @ZA06223*/ 03593000
         LR    IOPLREG,@14                                         0933 03594000
*   GEN( LINK EP=IKJPARS);          /* CALL PARSE            @ZA06223*/ 03595000
          LINK EP=IKJPARS                                               03596000
*   IF RTNCODE^=0                   /* IF PARSE RC NOT ZERO  @ZA06223*/ 03597000
*     THEN                          /* ATTEMPT TO DIAGNOSE   @ZA06223*/ 03598000
         LTR   RTNCODE,RTNCODE                                     0935 03599000
         BZ    @RF00935                                            0935 03600000
*     IF RTNCODE=8                  /* POSSIBLY ATTN?        @ZA06223*/ 03601000
*       THEN                                                       0936 03602000
         CH    RTNCODE,@CH00034                                    0936 03603000
         BNE   @RF00936                                            0936 03604000
*       DO;                         /* YES-                  @ZA06223*/ 03605000
*         RTNCODE=16;               /* SET ATTN RETURN CODE  @ZA06223*/ 03606000
         LA    RTNCODE,16                                          0938 03607000
*         RETURN TO ENDIO;          /* PROCESS ATTN          @ZA06223*/ 03608000
         LA    @14,ENDIO                                           0939 03609000
         LM    @15,@12,@SA00022+4                                  0939 03610000
         BR    @14                                                 0939 03611000
*       END;                        /*                       @ZA06223*/ 03612000
*     ELSE                                                         0941 03613000
*       DO;                         /* REAL ERROR?           @ZA06223*/ 03614000
@RF00936 DS    0H                                                  0942 03615000
*         RTNCODE=4;                /* SET ERROR RETURN CODE @ZA06223*/ 03616000
         LA    RTNCODE,4                                           0942 03617000
*         RETURN TO ENDIO;          /* GET THE H--- OUT      @ZA06223*/ 03618000
         LA    @14,ENDIO                                           0943 03619000
         LM    @15,@12,@SA00022+4                                  0943 03620000
         BR    @14                                                 0943 03621000
*       END;                        /*                       @ZA06223*/ 03622000
*   SIODSN=PDLPTR+8;                /* INCR TO PDE           @ZA06223*/ 03623000
@RF00935 LA    @14,8                                               0945 03624000
         AL    @14,PDLPTR                                          0945 03625000
         L     @06,IOPARMS                                         0945 03626000
         ST    @14,SIODSN(,@06)                                    0945 03627000
*   IF FLAGRES3(1)='1'B             /* IF PASSWORD SUPPLIED  @ZA06223*/ 03628000
*     THEN                          /* MOVE IT TO PASSWORD   @ZA06223*/ 03629000
         TM    FLAGRES3(@14),B'10000000'                           0946 03630000
         BNO   @RF00946                                            0946 03631000
*     DA08PSWD(1:LENPSWRD)=PASSWORD;/* TO DAIR PSWD AREA     @ZA06223*/ 03632000
         LH    @06,LENPSWRD(,@14)                                  0947 03633000
         BCTR  @06,0                                               0947 03634000
         L     @14,PSWRDPTR(,@14)                                  0947 03635000
         EX    @06,@SM00636                                        0947 03636000
*   DSNAME(1:DSL)=DSN;              /* SAVE DSNAME           @ZA06223*/ 03637000
@RF00946 L     @14,IOPARMS                                         0948 03638000
         L     @14,SIODSN(,@14)                                    0948 03639000
         LH    @06,DSL(,@14)                                       0948 03640000
         LR    @05,@06                                             0948 03641000
         BCTR  @05,0                                               0948 03642000
         L     @14,STRNGPTR(,@14)                                  0948 03643000
         EX    @05,@SM00638                                        0948 03644000
*   DSLNGTH=DSL;                    /* AND DSN LENGTH        @ZA06223*/ 03645000
         STH   @06,DSLNGTH                                         0949 03646000
*   CURDCBDN=DSNDAIR;               /* ASSOC. DSN W/ DCB     @ZA06223*/ 03647000
         L     @14,IOTSTWK                                         0950 03648000
         MVC   CURDCBDN(46,@14),DSNDAIR                            0950 03649000
*   IF FLAGRES1(2)^='1'B            /* IF DSN NOT FULLY      @ZA06223*/ 03650000
*     THEN                                                         0951 03651000
         L     @14,IOPARMS                                         0951 03652000
         L     @14,SIODSN(,@14)                                    0951 03653000
         TM    FLAGRES1(@14),B'01000000'                           0951 03654000
         BO    @RF00951                                            0951 03655000
*     DO;                           /* QUALIFIED             @ZA06223*/ 03656000
*       DFPBCNTL=''B;               /* SET CONTROL FLAGS     @ZA06223*/ 03657000
         MVI   DFPBCNTL,X'00'                                      0953 03658000
*       PRMREG1=ADDR(DAPL);         /* POINT TO PARMS        @ZA06223*/ 03659000
         LA    PRMREG1,DAPL                                        0954 03660000
*       DAPLPSCB=ADDR(DFPB);        /* POINT TO PARM LIST    @ZA06223*/ 03661000
         LA    @14,DFPB                                            0955 03662000
         ST    @14,DAPLPSCB                                        0955 03663000
*       GEN( LINK EP=IKJDFLT);      /* QUALIFY DSN           @ZA06223*/ 03664000
          LINK EP=IKJDFLT                                               03665000
*       IF RTNCODE=24               /* SEE IF ATTN           @ZA06223*/ 03666000
*         THEN                                                     0957 03667000
         CH    RTNCODE,@CH00082                                    0957 03668000
         BNE   @RF00957                                            0957 03669000
*         DO;                       /* YES-                  @ZA06223*/ 03670000
*           RTNCODE=16;             /* SET ATTN RETCODE      @ZA06223*/ 03671000
         LA    RTNCODE,16                                          0959 03672000
*           RETURN TO ENDIO;        /* GET OUT               @ZA06223*/ 03673000
         LA    @14,ENDIO                                           0960 03674000
         LM    @15,@12,@SA00022+4                                  0960 03675000
         BR    @14                                                 0960 03676000
*         END;                      /*                       @ZA06223*/ 03677000
*       IF RTNCODE=0                /* IF NO ERROR           @ZA06223*/ 03678000
*         THEN                      /* RESTORE PSCB PTR      @ZA06223*/ 03679000
@RF00957 LTR   RTNCODE,RTNCODE                                     0962 03680000
         BNZ   @RF00962                                            0962 03681000
*         DAPLPSCB=TEMPTPL;         /* RESTORE PTR           @ZA06223*/ 03682000
         MVC   DAPLPSCB(4),TEMPTPL                                 0963 03683000
*     END;                          /*                       @ZA06223*/ 03684000
@RF00962 DS    0H                                                  0965 03685000
*   RTNCODE=0;                      /* SET RC = 0            @ZA06223*/ 03686000
@RF00951 SLR   RTNCODE,RTNCODE                                     0965 03687000
*   END GETDSN;                     /*                       @ZA06223*/ 03688000
@EL00022 DS    0H                                                  0966 03689000
@EF00022 DS    0H                                                  0966 03690000
@ER00022 LM    @14,@12,@SA00022                                    0966 03691000
         BR    @14                                                 0966 03692000
*                                                                  0967 03693000
*/********************************************************************/ 03694000
*/*                                                                  */ 03695000
*/*                E  CKDARC ROUTINE - ANALYZE DAIR RTN CODE         */ 03696000
*/*                S  CALL ATTN CHECK: CHECK FOR ATTN OR LOGOFF      */ 03697000
*/*                P  ISSUE LINK MACRO (IKJEFF18) ANALYZE RTN CD   0967 03698000
*/*                   & PRINT ERR MSG                                */ 03699000
*/*                P  SET RETURN CODE TO 4                           */ 03700000
*/*                                                                  */ 03701000
*/********************************************************************/ 03702000
*                                                                  0967 03703000
*CKDARC:                                                           0967 03704000
*   PROCEDURE;                                                     0967 03705000
CKDARC   STM   @14,@12,@SA00023                                    0967 03706000
*   DCL                                                            0968 03707000
*     DA08DARC FIXED(15) BDY(HWORD) GEND;                          0968 03708000
*   DCL                                                            0969 03709000
*     DA08CTL BIT(8) GEND;                                         0969 03710000
*   DCL                                                            0970 03711000
*     DA08PQTY CHAR(4) GEND;                                       0970 03712000
*   DCL                                                            0971 03713000
*     DA08SQTY CHAR(4) GEND;                                       0971 03714000
*   DCL                                                            0972 03715000
*     1 EFF18PL,                    /* IKJEFF18 PARM LIST            */ 03716000
*      2 F18DAPL PTR(31),           /* POINTER TO DAIR PARM LIST     */ 03717000
*      2 F18DAPRC PTR(31),          /* POINTER TO DAIR RTN CODE      */ 03718000
*      2 F18MSGPT PTR(31),          /* POINTER TO FULL WORD ZEROS    */ 03719000
*      2 F18IDNUM PTR(31),          /* POINTER TO ID NUMBER          */ 03720000
*      2 F18FILL FIXED(31);         /* FILLER TO BE RESERVED         */ 03721000
*   DCL                                                            0973 03722000
*     DAPLRC FIXED(31);             /* FULLWORD TO CONTAIN RTN CODE  */ 03723000
*   DCL                                                            0974 03724000
*     F18ID FIXED(15) INIT(1) STATIC;/* I.D. NUMBER                  */ 03725000
*   DCL                                                            0975 03726000
*     F18MSG FIXED(31) INIT(0) STATIC;/* INDICATE NO MSG PTR - ZERO  */ 03727000
*   IF RTNCODE=8 THEN               /* SEE IF POSSIBLE CAT. ERROR    */ 03728000
         CH    RTNCODE,@CH00034                                    0976 03729000
         BNE   @RF00976                                            0976 03730000
*     IF DA08DARC='1708'X THEN      /* SEE IF CODE IS CATG ERROR     */ 03731000
         CLC   DA08DARC(2),@CH00557                                0977 03732000
         BNE   @RF00977                                            0977 03733000
*       DO;                                                        0978 03734000
*         DA08CTL='40'X;            /* INDICATE WE WANT BLOCKS       */ 03735000
         MVI   DA08CTL,X'40'                                       0979 03736000
*         DA08DSP1='04'X;           /* NDICATE DS IS NEW             */ 03737000
         MVI   DA08DSP1,X'04'                                      0980 03738000
*         DA08DPS2='02'X;           /* INDICATE WANT DS CATLG        */ 03739000
         MVI   DA08DPS2,X'02'                                      0981 03740000
*         DA08DPS3='02'X;           /* INDICATE CONDITIONAL DIS      */ 03741000
         MVI   DA08DPS3,X'02'                                      0982 03742000
*         DA08PQTY=1;               /* MOVE SPACE INTO SPQTY         */ 03743000
         MVC   DA08PQTY(4),@CF00115                                0983 03744000
*         DA08SQTY=100;             /* EQU(BLK,(1,100))              */ 03745000
         MVC   DA08SQTY(4),@CF00256                                0984 03746000
*         RTNCODE=0;                /* RESET THE RETURN CODE         */ 03747000
         SLR   RTNCODE,RTNCODE                                     0985 03748000
*         RETURN TO TODAIR;         /* GO BACK AND TRY AGAIN         */ 03749000
         LA    @14,TODAIR                                          0986 03750000
         LM    @15,@12,@SA00023+4                                  0986 03751000
         BR    @14                                                 0986 03752000
*       END;                                                       0987 03753000
*   F18DAPL=ADDR(DAPL);             /* POINT TO DAPL LIST            */ 03754000
@RF00977 DS    0H                                                  0988 03755000
@RF00976 LA    @14,DAPL                                            0988 03756000
         ST    @14,F18DAPL                                         0988 03757000
*   DAPLRC=RTNCODE;                 /* STORE RETURN CODE             */ 03758000
         ST    RTNCODE,DAPLRC                                      0989 03759000
*   F18DAPRC=ADDR(DAPLRC);          /* POINT TO RETURN CODE          */ 03760000
         LA    @14,DAPLRC                                          0990 03761000
         ST    @14,F18DAPRC                                        0990 03762000
*   F18MSGPT=ADDR(F18MSG);          /* POINT TO ZERO POINTER         */ 03763000
         LA    @14,F18MSG                                          0991 03764000
         ST    @14,F18MSGPT                                        0991 03765000
*   F18IDNUM=ADDR(F18ID);           /* POINT TO DAIR ALLOC ID NUM    */ 03766000
         LA    @14,F18ID                                           0992 03767000
         ST    @14,F18IDNUM                                        0992 03768000
*   RTNCODE=0;                      /* RESET RETURN CODE             */ 03769000
         SLR   RTNCODE,RTNCODE                                     0993 03770000
*   CALL ATTNCK;                    /* TEST FOR ATTN OR LOGOFF       */ 03771000
         BAL   @14,ATTNCK                                          0994 03772000
*   IF RTNCODE^=0 THEN              /* IF ONE IS IN PROCESS GO OUT   */ 03773000
         LTR   RTNCODE,RTNCODE                                     0995 03774000
         BNZ   @RT00995                                            0995 03775000
*     GO TO EXITRCDR;               /* BRANCH TO THE EXIT            */ 03776000
*   PRMREG1=ADDR(EFF18PL);          /* POINT TO PARM LIST            */ 03777000
         LA    PRMREG1,EFF18PL                                     0997 03778000
*   GENERATE;                                                      0998 03779000
       LINK  EP=IKJEFF18               LINK TO MSG FOR DAIR             03780000
*   RTNCODE=4;                      /* SET UP ERROR RETURN CODE      */ 03781000
         LA    RTNCODE,4                                           0999 03782000
*/********************************************************************/ 03783000
*/*                                                                  */ 03784000
*/*                R  RETURN TO CALLER                               */ 03785000
*/*                                                                  */ 03786000
*/********************************************************************/ 03787000
*                                                                  1000 03788000
*EXITRCDR:                          /* LABEL TO EXIT OUT OF ROUTINE  */ 03789000
*   RETURN CODE(RTNCODE);                                          1000 03790000
EXITRCDR L     @14,@SA00023                                        1000 03791000
         LM    @00,@12,@SA00023+8                                  1000 03792000
         BR    @14                                                 1000 03793000
*   END CKDARC;                                                    1001 03794000
*                                                                  1002 03795000
*/********************************************************************/ 03796000
*/*                                                                  */ 03797000
*/*    THE FOLLOWING PROCEDURE IS THE I/O SYNAD MESSAGE ROUTINE      */ 03798000
*/*    THE PRIMARY FUNCTION IS:                                      */ 03799000
*/*                                                                  */ 03800000
*/*        1.  PREPARE SYNAD ERROR MESAGE AND SET RTN CODE TO 4      */ 03801000
*/*                                                                  */ 03802000
*/********************************************************************/ 03803000
*/********************************************************************/ 03804000
*/*                                                                  */ 03805000
*/*                E  A7SYNAD ROUTINE                                */ 03806000
*/*                P  PREPARE I/O SYNAD ERROR MSG                    */ 03807000
*/*                S  CALL I/O: ISSUE MESSAGE                        */ 03808000
*/*                P  SET RETURN CODE TO 4                           */ 03809000
*/*                                                                  */ 03810000
*/********************************************************************/ 03811000
*                                                                  1002 03812000
*A7SYNAD:                                                          1002 03813000
*   PROCEDURE;                                                     1002 03814000
A7SYNAD  STM   @14,@12,@SA00024                                    1002 03815000
*   DCL                                                            1003 03816000
*     1 ERRORMSG BASED(PRMREG1+50), /* DEFINE SYNAD INSERT TEXT      */ 03817000
*      2 PART1 CHAR(34),            /* TOO BIG FOR ONE INSERT P1     */ 03818000
*      2 PART2 CHAR(44);            /* PART 2 OF TEXT                */ 03819000
*   DCL                                                            1004 03820000
*     PRMREG11 REGISTER(11) RSTD;   /* DEFINE PARM REG 11 FOR USE    */ 03821000
*   GENERATE;                                                      1005 03822000
         SYNADAF ACSMETH=QSAM          ISSUE SYNAD MACRO                03823000
*   LENINST1(1)=38;                 /* ESTABLISH LENGTH INSERT 1     */ 03824000
         MVC   LENINST1(2),@CH00570                                1006 03825000
*   LENINST1(2)=48;                 /* ESTABLISH LENGTH INSERT 2     */ 03826000
         MVC   LENINST1+56(2),@CH00571                             1007 03827000
*   INSTTXT1(1)=PART1;              /* MOVE FIRST HALF TEXT IN       */ 03828000
         MVI   INSTTXT1+34,C' '                                    1008 03829000
         MVC   INSTTXT1+35(17),INSTTXT1+34                         1008 03830000
         LA    @14,50                                              1008 03831000
         ALR   @14,PRMREG1                                         1008 03832000
         MVC   INSTTXT1(34),PART1(@14)                             1008 03833000
*   INSTTXT1(2)=PART2;              /* MOVE SECOND HALF TEXT IN      */ 03834000
         MVI   INSTTXT1+100,C' '                                   1009 03835000
         MVC   INSTTXT1+101(7),INSTTXT1+100                        1009 03836000
         MVC   INSTTXT1+56(44),PART2(@14)                          1009 03837000
*   PRMREG4=ADDR(MSGINST1(1));      /* SET UP PARM REG 4             */ 03838000
         LA    PRMREG4,MSGINST1                                    1010 03839000
*   PRMREG11=ADDR(MSGINST1(2));     /* SET UP PARM REG 11            */ 03840000
         LA    PRMREG11,MSGINST1+56                                1011 03841000
*   IOMSGPLT='00'X;                 /* CLEAR PARM LIST               */ 03842000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1012 03843000
         MVI   IOMSGPLT,X'00'                                      1012 03844000
*   GENERATE REFS(@IOVCON);                                        1013 03845000
         IKJEGSIO MSG,FIRST=M0051,INST21=(ADDR,(4)),INST22=(ADDR,(11)),*03846000
               SECOND=M0202,ID=IO016,VCONBR=YES,MF=(E,IOMSGPLT)         03847000
*   IF RTNCODE>=16 THEN             /* TEST FOR ATTN                 */ 03848000
         CH    RTNCODE,@CH00095                                    1014 03849000
         BNL   @RT01014                                            1014 03850000
*     GO TO EXITSYND;               /* RETURN                        */ 03851000
*   GENERATE;                                                      1016 03852000
         SYNADRLS                      ISSUE SYNAD RELEASE MACRO        03853000
*   RTNCODE=4;                      /* SET RTN CODE TO ERROR         */ 03854000
         LA    RTNCODE,4                                           1017 03855000
*/********************************************************************/ 03856000
*/*                                                                  */ 03857000
*/*                R  RETURN TO CALLER                               */ 03858000
*/*                                                                  */ 03859000
*/********************************************************************/ 03860000
*                                                                  1018 03861000
*EXITSYND:                          /* LABEL AT EXIT OF ROUTINE      */ 03862000
*   RETURN TO EXITDS CODE(RTNCODE); /* RETURN TO EXIT                */ 03863000
EXITSYND LA    @14,EXITDS                                          1018 03864000
         LM    @00,@12,@SA00024+8                                  1018 03865000
         BR    @14                                                 1018 03866000
*   END A7SYNAD;                                                   1019 03867000
*                                                                  1020 03868000
*/********************************************************************/ 03869000
*/*                                                                  */ 03870000
*/*    THE FOLLOWING PROCEDURE IS THE BAD DATA SET ERROR ROUTINE     */ 03871000
*/*    THE PRIMARY FUNCTION IS:                                      */ 03872000
*/*                                                                  */ 03873000
*/*        1. PREPARE ERROR MESSAGE AND SET ERROR CODE TO 4          */ 03874000
*/*                                                                  */ 03875000
*/********************************************************************/ 03876000
*/********************************************************************/ 03877000
*/*                                                                  */ 03878000
*/*                E  BADDS ROUTINE                                  */ 03879000
*/*                S  CALL I/O: ISSUE MESSAGE                        */ 03880000
*/*                P  SET RETURN CODE TO 4                           */ 03881000
*/*                                                                  */ 03882000
*/********************************************************************/ 03883000
*                                                                  1020 03884000
*BADDS:                                                            1020 03885000
*   PROCEDURE;                                                     1020 03886000
BADDS    STM   @14,@12,@SA00025                                    1020 03887000
*   RESPECIFY                                                      1021 03888000
*     PRMREG4 RSTD;                 /* TELL PLS NOT TO USE REG HERE  */ 03889000
*   PRMREG4=TSTIODSN;               /* PICK UP PTR TO CORE           */ 03890000
         L     PRMREG4,TSTIODSN                                    1022 03891000
*   TSTIODSN=DSNCHAIN;              /* REMOVE FROM CHAIN             */ 03892000
         MVC   TSTIODSN(4),DSNCHAIN(PRMREG4)                       1023 03893000
*   GENERATE;                                                      1024 03894000
         FREEMAIN RC,LV=50,A=(4),SP=1  FREE CORE                        03895000
*   IF RTNCODE^=0 THEN              /* TEST FOR ERROR                */ 03896000
         LTR   RTNCODE,RTNCODE                                     1025 03897000
         BZ    @RF01025                                            1025 03898000
*     DO;                                                          1026 03899000
*       PRMREG4=RTNCODE;            /* TRANSFER RTNCODE              */ 03900000
         LR    PRMREG4,RTNCODE                                     1027 03901000
*       IOMSGPLT='00'X;             /* CLEAR PARM LIST               */ 03902000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1028 03903000
         MVI   IOMSGPLT,X'00'                                      1028 03904000
*       GENERATE REFS(@IOVCON);                                    1029 03905000
     IKJEGSIO SVCERR,SVC=120,RC=(4),ID=IO016,VCONBR=YES,MF=(E,IOMSGPLT) 03906000
*       IF RTNCODE<16 THEN          /* TEST FOR ATTN                 */ 03907000
         CH    RTNCODE,@CH00095                                    1030 03908000
         BNL   @RF01030                                            1030 03909000
*         RTNCODE=4;                /* INDICATE ERROR                */ 03910000
         LA    RTNCODE,4                                           1031 03911000
*       GO TO EXITBADD;             /* RETURN                        */ 03912000
         B     EXITBADD                                            1032 03913000
*     END;                                                         1033 03914000
*   LENINST2(1)=DSL+4;              /* STORE INSERT LENGTH           */ 03915000
@RF01025 L     @14,IOPARMS                                         1034 03916000
         L     @14,SIODSN(,@14)                                    1034 03917000
         LA    @06,4                                               1034 03918000
         AH    @06,DSL(,@14)                                       1034 03919000
         STH   @06,LENINST2                                        1034 03920000
*   INSTTXT2(1)=DSN;                /* MOVE IN TEXT OF INSERT        */ 03921000
         MVI   INSTTXT2+44,C' '                                    1035 03922000
         MVC   INSTTXT2+45(7),INSTTXT2+44                          1035 03923000
         L     @14,STRNGPTR(,@14)                                  1035 03924000
         MVC   INSTTXT2(44),DSN(@14)                               1035 03925000
*   PRMREG4=ADDR(MSGINST2(1));      /* POINT TO INSERT               */ 03926000
         LA    PRMREG4,MSGINST2                                    1036 03927000
*   IOMSGPLT='00'X;                 /* ZERO OUT PARM LIST            */ 03928000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1037 03929000
         MVI   IOMSGPLT,X'00'                                      1037 03930000
*   GENERATE REFS(@IOVCON);                                        1038 03931000
         IKJEGSIO MSG,FIRST=M0054,INST11=(ADDR,(4)),SECOND=M0255,      *03932000
               ID=I0016,VCONBR=YES,MF=(E,IOMSGPLT)                      03933000
*   IF RTNCODE<16 THEN              /* TEST FOR ATTN                 */ 03934000
         CH    RTNCODE,@CH00095                                    1039 03935000
         BNL   @RF01039                                            1039 03936000
*     RTNCODE=4;                    /* INDICATE ERROR TO CALLER      */ 03937000
         LA    RTNCODE,4                                           1040 03938000
*/********************************************************************/ 03939000
*/*                                                                  */ 03940000
*/*                R  RETURN TO CALLER                               */ 03941000
*/*                                                                  */ 03942000
*/********************************************************************/ 03943000
*                                                                  1041 03944000
*EXITBADD:                          /* LABEL FOR EXIT OF ROUTINE     */ 03945000
*   RETURN CODE(RTNCODE);                                          1041 03946000
@RF01039 DS    0H                                                  1041 03947000
EXITBADD L     @14,@SA00025                                        1041 03948000
         LM    @00,@12,@SA00025+8                                  1041 03949000
         BR    @14                                                 1041 03950000
*   END BADDS;                                                     1042 03951000
*                                                                  1043 03952000
*/********************************************************************/ 03953000
*/*                                                                  */ 03954000
*/*    THE FOLLOWING PROCEDURE IS THE CHECK DATA SET ALLOCATED ROUT. */ 03955000
*/*    THE PRIMARY FUNCTIONS ARE:                                    */ 03956000
*/*                                                                  */ 03957000
*/*        1.  PREPARE AND MAINTAIN DSN QUEUE                        */ 03958000
*/*        2.  CLOSE THE CURRENT DCB IF NOT CORRECT DS               */ 03959000
*/*                                                                  */ 03960000
*/********************************************************************/ 03961000
*/********************************************************************/ 03962000
*/*                                                                  */ 03963000
*/*                E  CDSNAME ROUTINE                                */ 03964000
*/*                D  (YES,,NO,%CONT19)                            1043 03965000
*/*                   IS DSN PREVIOUS USED                           */ 03966000
*/*                S  (,ENDCKD)                                    1043 03967000
*/*                   CALL PUT:  SEND DATA TO D.S.                   */ 03968000
*/*%CONT19:        P  CLOSE DCB                                      */ 03969000
*/*                P  FREE DCB CORE                                  */ 03970000
*/*                P  FREE QSAM BUFFERS                              */ 03971000
*/*                                                                  */ 03972000
*/********************************************************************/ 03973000
*                                                                  1043 03974000
*CKDSNAME:                                                         1043 03975000
*   PROCEDURE;                                                     1043 03976000
CKDSNAME STM   @14,@12,@SA00026                                    1043 03977000
*   RESPECIFY                                                      1044 03978000
*     PRMREG4 RSTD;                 /* INDICATE RESTRICTED HERE      */ 03979000
*   PRMREG4=TSTIODSN;               /* GET ADDR OF OPEN DCB IN REG   */ 03980000
         L     PRMREG4,TSTIODSN                                    1045 03981000
*   IF TSTIODCB^=0 THEN             /* MAKE SURE THERE IS A DCB      */ 03982000
         L     @14,TSTIODCB                                        1046 03983000
         LTR   @14,@14                                             1046 03984000
         BZ    @RF01046                                            1046 03985000
*     DO;                                                          1047 03986000
*       DCBPTR=IOTSTWK;             /* SAVE DCB POINTER              */ 03987000
         L     @06,IOTSTWK                                         1048 03988000
         ST    @06,DCBPTR                                          1048 03989000
*       IOTSTWK=TSTIODCB;           /* PICK UP LAST POINTER          */ 03990000
         ST    @14,IOTSTWK                                         1049 03991000
*       IF LENGTHDN=DSLNGTH THEN    /* SEE IF THE LENGTHS ARE EQ     */ 03992000
         LH    @14,DSLNGTH                                         1050 03993000
         CH    @14,LENGTHDN(,PRMREG4)                              1050 03994000
         BNE   @RF01050                                            1050 03995000
*         IF DN(1:DSLNGTH)=DSNAME(1:DSLNGTH) THEN/* SEE IF SAME      */ 03996000
         BCTR  @14,0                                               1051 03997000
         EX    @14,@SC00640                                        1051 03998000
         BNE   @RF01051                                            1051 03999000
*           DO;                                                    1052 04000000
*             PRMREG4=DCBPTR;       /* SET UP ADDRESSABILITY         */ 04001000
         LR    PRMREG4,@06                                         1053 04002000
*             GENERATE;                                            1054 04003000
         FREEMAIN RC,LV=TLEN,A=(4),SP=1 FREE UP CORE                    04004000
*             IF RTNCODE^=0 THEN    /* TEST FOR PROBLEMS             */ 04005000
         LTR   RTNCODE,RTNCODE                                     1055 04006000
         BZ    @RF01055                                            1055 04007000
*               DO;                                                1056 04008000
*                 PRMREG4=RTNCODE;  /* TRANSFER RETURN CODE          */ 04009000
         LR    PRMREG4,RTNCODE                                     1057 04010000
*                 IOMSGPLT='00'X;   /* CLEAR PARM LIST               */ 04011000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1058 04012000
         MVI   IOMSGPLT,X'00'                                      1058 04013000
*                 GENERATE REFS(@IOVCON);                          1059 04014000
     IKJEGSIO SVCERR,SVC=120,RC=(4),ID=I0016,VCONBR=YES,MF=(E,IOMSGPLT) 04015000
*                 IF RTNCODE<16 THEN/* TEST FOR ATTN                 */ 04016000
         CH    RTNCODE,@CH00095                                    1060 04017000
         BNL   @RF01060                                            1060 04018000
*                   RTNCODE=4;      /* INDICATE PROBLEMS TO CALLER   */ 04019000
         LA    RTNCODE,4                                           1061 04020000
*                 GO TO EXITCKDN;   /* RETURN                        */ 04021000
         B     EXITCKDN                                            1062 04022000
*               END;                                               1063 04023000
*             CALL PUT;             /* HAVE LINE PUT INTO DS         */ 04024000
@RF01055 BAL   @14,PUT                                             1064 04025000
*             RETURN TO EXITDS;     /* RETURN TO CALLER              */ 04026000
         LA    @14,EXITDS                                          1065 04027000
         LM    @15,@12,@SA00026+4                                  1065 04028000
         BR    @14                                                 1065 04029000
*           END;                                                   1066 04030000
*       IOTSTWK=DCBPTR;             /* RESTORE DCBPTR                */ 04031000
@RF01051 DS    0H                                                  1067 04032000
@RF01050 MVC   IOTSTWK(4),DCBPTR                                   1067 04033000
*     END;                                                         1068 04034000
*   IF TSTIODSN^=0 THEN             /* SEE IF THERE IS A DCB OPEN    */ 04035000
@RF01046 ICM   @14,15,TSTIODSN                                     1069 04036000
         BZ    @RF01069                                            1069 04037000
*     DO DSNQUEUE=1 BY 1 TO 256;    /* LOOP THRU DSN QUEUE           */ 04038000
         LA    @14,1                                               1070 04039000
         STH   @14,DSNQUEUE                                        1070 04040000
@DL01070 DS    0H                                                  1071 04041000
*       IF LENGTHDN=DSLNGTH THEN    /* IF THE NAME IS IN THE QUEUE   */ 04042000
         LH    @14,DSLNGTH                                         1071 04043000
         CH    @14,LENGTHDN(,PRMREG4)                              1071 04044000
         BNE   @RF01071                                            1071 04045000
*         IF DN(1:DSLNGTH)=DSNAME(1:DSLNGTH) THEN/* COMPARE          */ 04046000
         BCTR  @14,0                                               1072 04047000
         EX    @14,@SC00640                                        1072 04048000
         BNE   @RF01072                                            1072 04049000
*           DO;                                                    1073 04050000
*             TSTFLGS3(5)='1'B;     /* TURN ON THE DUPLICATE NAME    */ 04051000
         OI    TSTFLGS3,B'00001000'                                1074 04052000
*             GO TO NEWDSN;         /* NO MORE PROCESSING REQ'D      */ 04053000
         B     NEWDSN                                              1075 04054000
*           END;                                                   1076 04055000
*       PRMREG4=DSNCHAIN;           /* MOVE TO NEXT ELEMENT IN CH'N  */ 04056000
@RF01072 DS    0H                                                  1077 04057000
@RF01071 L     PRMREG4,DSNCHAIN(,PRMREG4)                          1077 04058000
*       IF PRMREG4=0 THEN           /* MAKE SURE MORE TO COMPARE     */ 04059000
         LTR   PRMREG4,PRMREG4                                     1078 04060000
         BZ    @RT01078                                            1078 04061000
*         GO TO NEWDSN;             /* IF NOT STOP SEARCHING         */ 04062000
*     END;                                                         1080 04063000
         LA    @14,1                                               1080 04064000
         AH    @14,DSNQUEUE                                        1080 04065000
         STH   @14,DSNQUEUE                                        1080 04066000
         CH    @14,@CH00393                                        1080 04067000
         BNH   @DL01070                                            1080 04068000
*NEWDSN:                                                           1081 04069000
*   GENERATE;                                                      1081 04070000
@RF01069 DS    0H                                                  1081 04071000
NEWDSN   DS    0H                                                  1081 04072000
         GETMAIN RC,LV=50,SP=1                                          04073000
*   IF RTNCODE^=0 THEN              /* SEE IF GETMAIN FAILED         */ 04074000
         LTR   RTNCODE,RTNCODE                                     1082 04075000
         BZ    @RF01082                                            1082 04076000
*     DO;                                                          1083 04077000
*       PRMREG4=RTNCODE;            /* TRANSFER RETURN CODE          */ 04078000
         LR    PRMREG4,RTNCODE                                     1084 04079000
*       IOMSGPLT='00'X;             /* ZERO OUT PARM LIST FOR IO     */ 04080000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1085 04081000
         MVI   IOMSGPLT,X'00'                                      1085 04082000
*       GENERATE REFS(@IOVCON);                                    1086 04083000
     IKJEGSIO SVCERR,SVC=10,RC=(4),ID=I0016,VCONBR=YES,MF=(E,IOMSGPLT)  04084000
*       IF RTNCODE<16 THEN          /* MAKE SURE AN ATTN NOT   SCHE'D*/ 04085000
         CH    RTNCODE,@CH00095                                    1087 04086000
         BNL   @RF01087                                            1087 04087000
*         RTNCODE=4;                /* SET THE RETURN CODE TO ERROR  */ 04088000
         LA    RTNCODE,4                                           1088 04089000
*       GO TO EXITCKDN;             /* BRANCH TO EXIT OF ROUTINE     */ 04090000
         B     EXITCKDN                                            1089 04091000
*     END;                                                         1090 04092000
*   PRMREG4=PRMREG1;                /* TRANSFER GETMAIN ADDRESS      */ 04093000
@RF01082 LR    PRMREG4,PRMREG1                                     1091 04094000
*   DSNCHAIN=TSTIODSN;              /* MOVE NEW NAME INTO DSN CHAIN  */ 04095000
         MVC   DSNCHAIN(4,PRMREG4),TSTIODSN                        1092 04096000
*   TSTIODSN=PRMREG4;               /* STORE ADD OF NEW DCB TCOMTAB  */ 04097000
         ST    PRMREG4,TSTIODSN                                    1093 04098000
*   LENGTHDN=DSLNGTH;               /* STORE LENGTH IN CHAIN         */ 04099000
         LH    @14,DSLNGTH                                         1094 04100000
         STH   @14,LENGTHDN(,PRMREG4)                              1094 04101000
*   DN(1:DSLNGTH)=DSNAME(1:DSLNGTH);/* STORE NAME IN CHAIN           */ 04102000
         BCTR  @14,0                                               1095 04103000
         EX    @14,@SM00643                                        1095 04104000
*CLOSEDCB:                                                         1096 04105000
*   IF TSTIODCB^=0 THEN             /* MAKE SURE THERE IS OPEN DCB   */ 04106000
CLOSEDCB ICM   @14,15,TSTIODCB                                     1096 04107000
         BZ    @RF01096                                            1096 04108000
*     DO;                                                          1097 04109000
*       CALL ATTNCK;                /* CHECK FOR AN ATTN             */ 04110000
         BAL   @14,ATTNCK                                          1098 04111000
*       IF RTNCODE^=0 THEN          /* IF ONE GET OUT & RTN          */ 04112000
         LTR   RTNCODE,RTNCODE                                     1099 04113000
         BNZ   @RT01099                                            1099 04114000
*         GO TO EXITCKDN;                                          1100 04115000
*       PRMREG4=TSTIODCB;           /* ESTAB ADDRESS OF OLD DCB      */ 04116000
         L     PRMREG4,TSTIODCB                                    1101 04117000
*       PRMREG1=ADDR(CLOSE);        /* SET UP ADDR IN R1 - CLOSE PL  */ 04118000
         L     @14,IOTSTWK                                         1102 04119000
         LA    PRMREG1,CLOSE(,@14)                                 1102 04120000
*       CLOSE=CLFORM;               /* MOVE LIST FORM OF CLOSE MAC   */ 04121000
         MVC   CLOSE(4,@14),CLFORM                                 1103 04122000
*       GENERATE;                                                  1104 04123000
         CLOSE ((4)),MF=(E,(1))                                         04124000
         FREEPOOL (4)                  FREE QSAM BUFFERS                04125000
         FREEMAIN RC,LV=TLEN,SP=1,A=(4) FREE OLD DCB                    04126000
*       IF RTNCODE^=0 THEN          /* TEST FOR PROBLEMS             */ 04127000
         LTR   RTNCODE,RTNCODE                                     1105 04128000
         BZ    @RF01105                                            1105 04129000
*         DO;                                                      1106 04130000
*           PRMREG4=RTNCODE;        /* TRANSFER RETURN CODE          */ 04131000
         LR    PRMREG4,RTNCODE                                     1107 04132000
*           IOMSGPLT='00'X;         /* CLEAR PARM LIST               */ 04133000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1108 04134000
         MVI   IOMSGPLT,X'00'                                      1108 04135000
*           GENERATE REFS(@IOVCON);                                1109 04136000
     IKJEGSIO SVCERR,SVC=120,RC=(4),ID=IO016,VCONBR=YES,MF=(E,IOMSGPLT) 04137000
*           IF RTNCODE<16 THEN      /* TEST FOR AN ATTN              */ 04138000
         CH    RTNCODE,@CH00095                                    1110 04139000
         BNL   @RF01110                                            1110 04140000
*             RTNCODE=4;            /* INDICATE TO USER PROBLEMS     */ 04141000
         LA    RTNCODE,4                                           1111 04142000
*         END;                                                     1112 04143000
@RF01110 DS    0H                                                  1113 04144000
*       TSTIODCB='00'X;             /* ZERO OUT TSTIODCB IN TCOMTAB  */ 04145000
@RF01105 SLR   @14,@14                                             1113 04146000
         ST    @14,TSTIODCB                                        1113 04147000
*     END;                                                         1114 04148000
*                                                                  1114 04149000
*/********************************************************************/ 04150000
*/*                                                                  */ 04151000
*/*ENDCKD:         R  RETURN TO CALLER                               */ 04152000
*/*                                                                  */ 04153000
*/********************************************************************/ 04154000
*                                                                  1115 04155000
*EXITCKDN:                                                         1115 04156000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLER              */ 04157000
@RF01096 DS    0H                                                  1115 04158000
EXITCKDN L     @14,@SA00026                                        1115 04159000
         LM    @00,@12,@SA00026+8                                  1115 04160000
         BR    @14                                                 1115 04161000
*   END CKDSNAME;                                                  1116 04162000
*                                                                  1117 04163000
*/********************************************************************/ 04164000
*/*                                                                  */ 04165000
*/*                E  OPEN ROUTINE                                   */ 04166000
*/*                P  CREATE DCB AND OPEN DATA SET                   */ 04167000
*/*                                                                  */ 04168000
*/********************************************************************/ 04169000
*                                                                  1117 04170000
*OPENDS:                                                           1117 04171000
*   PROCEDURE;                                                     1117 04172000
OPENDS   STM   @14,@12,@SA00027                                    1117 04173000
*   RESPECIFY                                                      1118 04174000
*     PRMREG4 RSTD;                 /* TELL PLS TO NOT USE REG 4     */ 04175000
*   DCL                                                            1119 04176000
*     OPENREG REGISTER(11) RSTD;    /* DEFINE OPEN REGISTER FOR USE  */ 04177000
*   DCL                                                            1120 04178000
*     DCBOFLGS BIT(8) GEND;         /* FLAG BYTE TO CK FOR OK OPEN   */ 04179000
*   DCL                                                            1121 04180000
*     MYDCB CHAR(96) GEND;          /* DEFINE DCB LIST FORM          */ 04181000
*   DCL                                                            1122 04182000
*     LFORM CHAR(4) GEND;           /* DEFINE LIST FORM OF OPEN      */ 04183000
*   DCL                                                            1123 04184000
*     DCBDDNAM CHAR(8) GEND;        /* DEFINE DD NAME AREA IN DCB    */ 04185000
*   GENERATE;                                                      1124 04186000
         DROP  DSECT4                  RELEASE REG 4 FOR USE            04187000
         USING IHADCB,DSECT4           ESTAB REG 4 FOR DSECT            04188000
*   PRMREG4=IOTSTWK;                /* ESTAB ADDRESS OF DCB          */ 04189000
         L     @14,IOTSTWK                                         1125 04190000
         LR    PRMREG4,@14                                         1125 04191000
*   OPEN=LFORM;                     /* MOVE LIST FORM OF OPEN MACRO  */ 04192000
         MVC   OPEN(4,@14),LFORM                                   1126 04193000
*   DCB=MYDCB;                      /* MOVE LIST FORM OF DCB MACRO   */ 04194000
         MVC   DCB(96,@14),MYDCB                                   1127 04195000
*   DCBDDNAM=TEMPDDN;               /* MOVE DD NAME TO DCBDD NAME    */ 04196000
         MVC   DCBDDNAM(8),TEMPDDN                                 1128 04197000
*   CALL ATTNCK;                    /* SEE IF ATTN OR LOGOFF IN PRO  */ 04198000
         BAL   @14,ATTNCK                                          1129 04199000
*   IF RTNCODE^=0 THEN              /* TEST RESULTS                  */ 04200000
         LTR   RTNCODE,RTNCODE                                     1130 04201000
         BNZ   @RT01130                                            1130 04202000
*     GO TO EXITOPEN;               /* BRANCH TO THE EXIT            */ 04203000
*   OPENREG=ADDR(OPEN);             /* SET UP OPEN PARM REG          */ 04204000
         L     OPENREG,IOTSTWK                                     1132 04205000
         LA    OPENREG,OPEN(,OPENREG)                              1132 04206000
*   GENERATE;                                                      1133 04207000
         OPEN ((4)),MF=(E,(11))                                         04208000
*   RTNCODE=0;                      /* MAKE SURE RTNCODE ZERO        */ 04209000
         SLR   RTNCODE,RTNCODE                                     1134 04210000
*   IF DCBOFLGS(4)^='1'B THEN       /* SEE WE WERE ABLE GET IT OPEN  */ 04211000
         TM    DCBOFLGS,B'00010000'                                1135 04212000
         BO    @RF01135                                            1135 04213000
*     DO;                                                          1136 04214000
*       IOMSGPLT='00'X;             /* CLEAR PARM LIST               */ 04215000
         XC    IOMSGPLT+1(83),IOMSGPLT+1                           1137 04216000
         MVI   IOMSGPLT,X'00'                                      1137 04217000
*       GENERATE REFS(@IOVCON);                                    1138 04218000
* ISSUE THE COULD NOT OPEN DATA SET MESSAGE                             04219000
         IKJEGSIO MSG,FIRST=M0052,ID=IO016,VCONBR=YES,MF=(E,IOMSGPLT)   04220000
*       IF RTNCODE<16 THEN          /* MAKE SURE AN ATTN NOT SCHE    */ 04221000
         CH    RTNCODE,@CH00095                                    1139 04222000
         BNL   @RF01139                                            1139 04223000
*         RTNCODE=4;                /* INDICATE TROUBLE WITH 4 RC    */ 04224000
         LA    RTNCODE,4                                           1140 04225000
*     END;                                                         1141 04226000
*                                                                  1141 04227000
@RF01139 DS    0H                                                  1142 04228000
*/********************************************************************/ 04229000
*/*                                                                  */ 04230000
*/*                R  RETURN TO CALLER                               */ 04231000
*/*                                                                  */ 04232000
*/********************************************************************/ 04233000
*                                                                  1142 04234000
*EXITOPEN:                          /* LABEL USED TO BRANCH TO END   */ 04235000
*   RETURN CODE(RTNCODE);           /* RETURN TO DATA SET ROUTINE    */ 04236000
@RF01135 DS    0H                                                  1142 04237000
EXITOPEN L     @14,@SA00027                                        1142 04238000
         LM    @00,@12,@SA00027+8                                  1142 04239000
         BR    @14                                                 1142 04240000
*   END OPENDS;                                                    1143 04241000
*                                                                  1144 04242000
*/********************************************************************/ 04243000
*/*                                                                  */ 04244000
*/*    THE FOLLOWING PROCEDURE IS THE PUT ROUTINE                    */ 04245000
*/*    THE PRIMARY FUNCTION IS:                                      */ 04246000
*/*                                                                  */ 04247000
*/*        1.   ISSUE PUT MACRO TO PUT OUT DATA TO D.S.              */ 04248000
*/*                                                                  */ 04249000
*/********************************************************************/ 04250000
*/********************************************************************/ 04251000
*/*                                                                  */ 04252000
*/*                E  PUT ROUTINE                                    */ 04253000
*/*                S  CALL ATTN CHECK: CHECK FOR ATTN OR LOGOFF      */ 04254000
*/*                P  ISSUE PUT MACRO TO PUT DATA LINE IN DATA SET   */ 04255000
*/*                R  RETURN TO CALLING ROUTINE                      */ 04256000
*/*                                                                  */ 04257000
*/********************************************************************/ 04258000
*                                                                  1144 04259000
*PUT:                                                              1144 04260000
*   PROCEDURE;                                                     1144 04261000
PUT      STM   @14,@12,@SA00028                                    1144 04262000
*   CALL ATTNCK;                    /* SEE IF ATTENTION WAS SCHE'D   */ 04263000
         BAL   @14,ATTNCK                                          1145 04264000
*   IF RTNCODE^=0 THEN              /* SHOULD THE PROCESSING STOP ?  */ 04265000
         SLR   @14,@14                                             1146 04266000
         CR    RTNCODE,@14                                         1146 04267000
         BNE   @RT01146                                            1146 04268000
*     GO TO EXITPUT;                /* IF SO RETURN                  */ 04269000
*   IF SKIPLINE=0 THEN              /* IF NULL LINE REQ      @ZA15369*/ 04270000
         L     @06,IOPARMS                                         1148 04271000
         L     @06,SIODATA(,@06)                                   1148 04272000
         CH    @14,SKIPLINE(,@06)                                  1148 04273000
         BNE   @RF01148                                            1148 04274000
*     SKIPLINE=NULLINE(1:2);        /* SET LL TO 05          @ZA15369*/ 04275000
         MVC   SKIPLINE(2,@06),NULLINE                             1149 04276000
*   PRMREG1=TSTIODCB;               /* SET UP ADDR OF DCB FOR PUT    */ 04277000
@RF01148 L     PRMREG1,TSTIODCB                                    1150 04278000
*   PRMREG0=SIODATA;                /* SET UP ADDR TO DATA LINE      */ 04279000
         L     @14,IOPARMS                                         1151 04280000
         L     PRMREG0,SIODATA(,@14)                               1151 04281000
*   GENERATE(PUT (1),(0));          /* ISSUE PUT ASSEM MACRO         */ 04282000
         PUT (1),(0)                                                    04283000
*   RTNCODE=0;                      /* INITIALIZE RTNCODE TO ZERO    */ 04284000
         SLR   RTNCODE,RTNCODE                                     1153 04285000
*EXITPUT:                                                          1154 04286000
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLER WITH CODE    */ 04287000
EXITPUT  L     @14,@SA00028                                        1154 04288000
         LM    @00,@12,@SA00028+8                                  1154 04289000
         BR    @14                                                 1154 04290000
*   END PUT;                                                       1155 04291000
*                                                                  1156 04292000
*/********************************************************************/ 04293000
*/*                                                                  */ 04294000
*/*    THE FOLLOWING PROCEDURE IS THE OPEN EXIT ROUTINE CALL BY OPEN */ 04295000
*/*    THE PRIMARY FUNCTION IS:                                      */ 04296000
*/*                                                                  */ 04297000
*/*        1.  ADJUST DCB DURING THE OPENING OF DATA SET             */ 04298000
*/*                                                                  */ 04299000
*/********************************************************************/ 04300000
*/********************************************************************/ 04301000
*/*                                                                  */ 04302000
*/*                E  EXIT ROUTINE                                   */ 04303000
*/*                P  ADJUST REC AND BLK SIZES IF NOT COMPATIBLE     */ 04304000
*/*                R  RETURN TO CALLING ROUTINE                      */ 04305000
*/*                                                                  */ 04306000
*/********************************************************************/ 04307000
*                                                                  1156 04308000
*EXIT:                                                             1156 04309000
*   PROCEDURE;                                                     1156 04310000
EXIT     STM   @14,@12,12(@13)                                     1156 04311000
*   DCL                                                            1157 04312000
*     DCBRECFM BIT(8) GEND;         /* DEFINE DCB FIELDS TO PLS      */ 04313000
*   DCL                                                            1158 04314000
*     DCBLRECL FIXED(15) GEND;      /* DEFINE DCB FIELDS TO PLS      */ 04315000
*   DCL                                                            1159 04316000
*     DCBBLKSI FIXED(15) GEND;      /* DEFINE DCB FIELDS TO PLS      */ 04317000
*   IF DCBRECFM(2)^='1'B|DCBRECFM(1:2)='11'B THEN/* TEST FMT         */ 04318000
         TM    DCBRECFM,B'01000000'                                1160 04319000
         BNO   @RT01160                                            1160 04320000
         TM    DCBRECFM,B'11000000'                                1160 04321000
         BNO   @RF01160                                            1160 04322000
@RT01160 DS    0H                                                  1161 04323000
*     DO;                                                          1161 04324000
*       DCBRECFM='50'X;             /* SET IN THE DEFAULT SIZE       */ 04325000
         MVI   DCBRECFM,X'50'                                      1162 04326000
*       DCBLRECL=125;               /* SET IN THE DEFAULT SIZE       */ 04327000
         MVC   DCBLRECL(2),@CH00611                                1163 04328000
*       DCBBLKSI=1629;              /* SET IN THE DEFAULT SIZE       */ 04329000
         MVC   DCBBLKSI(2),@CH00612                                1164 04330000
*       GO TO EXITEXIT;             /* RETURN TO OPEN                */ 04331000
         B     EXITEXIT                                            1165 04332000
*     END;                                                         1166 04333000
*   IF DCBLRECL>125 THEN            /* TEST FOR SIZE GT THAN 124     */ 04334000
@RF01160 LA    @14,125                                             1167 04335000
         CH    @14,DCBLRECL                                        1167 04336000
         BNL   @RF01167                                            1167 04337000
*     DCBLRECL=125;                 /* RESET TO TEST LIMITS          */ 04338000
         STH   @14,DCBLRECL                                        1168 04339000
*   IF DCBBLKSI<129 THEN            /* TEST FOR MIMIMUM SIZE         */ 04340000
@RF01167 LA    @14,129                                             1169 04341000
         CH    @14,DCBBLKSI                                        1169 04342000
         BNH   @RF01169                                            1169 04343000
*     DCBBLKSI=129;                 /* RESET TO TEST LIMITS          */ 04344000
         STH   @14,DCBBLKSI                                        1170 04345000
*EXITEXIT:                          /* LABEL TO BRANCH TO EXIT OF R  */ 04346000
*   RETURN;                                                        1171 04347000
@EL00029 DS    0H                                                  1171 04348000
@EF00029 DS    0H                                                  1171 04349000
@ER00029 LM    @14,@12,12(@13)                                     1171 04350000
         BR    @14                                                 1171 04351000
*   END EXIT;                                                      1172 04352000
         B     @EL00029                                            1172 04353000
*   END DATASET;                                                   1173 04354000
*                                                                  1174 04355000
*/********************************************************************/ 04356000
*/*                                                                  */ 04357000
*/* THE FOLLOWING GENERATE SECTION WILL EXPAND ALL ASSEMBLER MACROS  */ 04358000
*/*                                                                  */ 04359000
*/********************************************************************/ 04360000
*                                                                  1174 04361000
*   GENERATE DATA;                                                 1174 04362000
*   END IKJEGIO                                                    1175 04363000
*                                                                  1175 04364000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 04365000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                       */ 04366000
*                                                                  1175 04367000
*       ;                                                          1175 04368000
@EL00001 L     @13,4(,@13)                                         1175 04369000
@EF00001 L     @00,@SIZDATD                                        1175 04370000
         LR    @01,@12                                             1175 04371000
         FREEMAIN R,LV=(0),A=(1)                                        04372000
@ER00001 LM    @14,@12,12(@13)                                     1175 04373000
         BR    @14                                                 1175 04374000
@DATA    DS    0H                                                       04375000
@CH00235 DC    H'0'                                                     04376000
@CH00146 DC    H'4'                                                     04377000
@CH00129 DC    H'6'                                                     04378000
@CH00033 DC    H'7'                                                     04379000
@CH00034 DC    H'8'                                                     04380000
@CH00058 DC    H'12'                                                    04381000
@CH00095 DC    H'16'                                                    04382000
@CH00251 DC    H'20'                                                    04383000
@CH00082 DC    H'24'                                                    04384000
@CH00570 DC    H'38'                                                    04385000
@CH00571 DC    H'48'                                                    04386000
@CH00617 DC    H'56'                                                    04387000
@CH00259 DC    H'99'                                                    04388000
@CH00611 DC    H'125'                                                   04389000
@CH00263 DC    H'199'                                                   04390000
@CH00258 DC    H'200'                                                   04391000
@CH00393 DC    H'256'                                                   04392000
@CH00612 DC    H'1629'                                                  04393000
@CH00557 DC    XL2'1708'                                                04394000
@SM00623 MVC   0(0,@10),VPDETXT(@05)                                    04395000
@SM00625 MVC   0(0,@11),MSGINST(@10)                                    04396000
@SM00629 MVC   PARSEMSG(0,@14),FMTMSG(@11)                              04397000
@SC00634 CLC   NAME(0,@14),DSN(@05)                                     04398000
@SM00636 MVC   DA08PSWD(0),PASSWORD(@14)                                04399000
@SM00638 MVC   DSNAME(0),DSN(@14)                                       04400000
@SC00640 CLC   DN(0,PRMREG4),DSNAME                                     04401000
@SM00643 MVC   DN(0,PRMREG4),DSNAME                                     04402000
@DATD    DSECT                                                          04403000
         DS    0F                                                       04404000
@SA00001 DS    18F                                                      04405000
@SA00020 DS    15F                                                      04406000
@SA00015 DS    15F                                                      04407000
@SA00003 DS    15F                                                      04408000
@SA00012 DS    15F                                                      04409000
@SA00019 DS    15F                                                      04410000
@SA00004 DS    15F                                                      04411000
@SA00016 DS    15F                                                      04412000
@SA00007 DS    15F                                                      04413000
@SA00005 DS    15F                                                      04414000
@SA00011 DS    15F                                                      04415000
@SA00009 DS    15F                                                      04416000
@SA00010 DS    15F                                                      04417000
@SA00013 DS    15F                                                      04418000
@SA00014 DS    15F                                                      04419000
@SA00021 DS    15F                                                      04420000
@SA00028 DS    15F                                                      04421000
@SA00022 DS    15F                                                      04422000
@SA00026 DS    15F                                                      04423000
@SA00025 DS    15F                                                      04424000
@SA00023 DS    15F                                                      04425000
@SA00027 DS    15F                                                      04426000
@SA00024 DS    15F                                                      04427000
IKJEGIO  CSECT                                                          04428000
         DS    0F                                                       04429000
@CF00115 DC    F'1'                                                     04430000
@CH00115 EQU   @CF00115+2                                               04431000
@CF00119 DC    F'2'                                                     04432000
@CH00119 EQU   @CF00119+2                                               04433000
@CF00032 DC    F'3'                                                     04434000
@CF00256 DC    F'100'                                                   04435000
@CH00256 EQU   @CF00256+2                                               04436000
@CF00628 DC    F'-12'                                                   04437000
@CF00627 DC    F'-8'                                                    04438000
@CF00622 DC    F'-4'                                                    04439000
@DATD    DSECT                                                          04440000
         DS    0D                                                       04441000
MSGPTR   DS    A                                                        04442000
INSTPTR  DS    A                                                        04443000
DCBPTR   DS    A                                                        04444000
IOPARMS  DS    A                                                        04445000
INSTCTR  DS    F                                                        04446000
SIOTYPPT DS    A                                                        04447000
SIOINTPT DS    A                                                        04448000
PPLPTR   DS    A                                                        04449000
PDLPTR   DS    A                                                        04450000
INDXTAB  DS    A                                                        04451000
REGPTR   DS    A                                                        04452000
ZEROCTR  DS    F                                                        04453000
SVCTABPR DS    A                                                        04454000
SVCINDX  DS    F                                                        04455000
ABENDINX DS    F                                                        04456000
RCODEINX DS    F                                                        04457000
IOTSTWK  DS    A                                                        04458000
TEMPTPL  DS    A                                                        04459000
DAPLRC   DS    F                                                        04460000
INTBUFPT DS    A                                                        04461000
MSGBUFPT DS    A                                                        04462000
DSNQUEUE DS    H                                                        04463000
LEV      DS    FL1                                                      04464000
TYPEINST DS    FL1                                                      04465000
LENGTH   DS    FL1                                                      04466000
         DS    CL3                                                      04467000
IOMSGPLT DS    CL84                                                     04468000
ESTAEPRM DS    CL16                                                     04469000
USERPPL  DS    CL28                                                     04470000
USERCBUF DS    CL5                                                      04471000
         DS    CL3                                                      04472000
MSGBUF   DS    CL932                                                    04473000
         ORG   MSGBUF                                                   04474000
MESSAGE  DS    CL104                                                    04475000
         ORG   MESSAGE+0                                                04476000
LENMSG   DS    FL2                                                      04477000
@NM00004 DS    FL2                                                      04478000
MSGTEXT  DS    CL100                                                    04479000
         ORG   MSGTEXT+0                                                04480000
WKMSGID  DS    CL9                                                      04481000
WKMSGTXT DS    CL91                                                     04482000
         ORG   MSGBUF+208                                               04483000
MSGINST1 DS    CL56                                                     04484000
         ORG   MSGINST1+0                                               04485000
LENINST1 DS    FL2                                                      04486000
DISPIN1  DS    FL2                                                      04487000
INSTTXT1 DS    CL52                                                     04488000
         ORG   MSGBUF+544                                               04489000
MSGINST2 DS    CL56                                                     04490000
         ORG   MSGINST2+0                                               04491000
LENINST2 DS    FL2                                                      04492000
DISPIN2  DS    FL2                                                      04493000
INSTTXT2 DS    CL52                                                     04494000
         ORG   MSGBUF+880                                               04495000
USERIOPL DS    CL16                                                     04496000
USERPGB  DS    CL12                                                     04497000
         ORG   USERPGB                                                  04498000
@NM00005 DS    CL8                                                      04499000
MRTNADDR DS    AL4                                                      04500000
         ORG   MSGBUF+908                                               04501000
OUTPUTPB DS    CL16                                                     04502000
         ORG   OUTPUTPB                                                 04503000
@NM00006 DS    CL8                                                      04504000
FMATMSG  DS    AL4                                                      04505000
@NM00007 DS    CL4                                                      04506000
         ORG   MSGBUF+924                                               04507000
VPDE     DS    CL8                                                      04508000
         ORG   VPDE                                                     04509000
VPDEPT   DS    AL4                                                      04510000
VPDEL    DS    FL2                                                      04511000
VDEFLG   DS    FL1                                                      04512000
VPDET    DS    FL1                                                      04513000
         ORG   MSGBUF+932                                               04514000
TEMPDDN  DS    CL8                                                      04515000
DSNDAIR  DS    CL46                                                     04516000
         ORG   DSNDAIR                                                  04517000
DSLNGTH  DS    FL2                                                      04518000
DSNAME   DS    CL44                                                     04519000
         ORG   DSNDAIR+46                                               04520000
         DS    CL2                                                      04521000
DAPB08WK DS    CL100                                                    04522000
DAPLWK   DS    CL20                                                     04523000
DFPBWK   DS    CL20                                                     04524000
EFF18PL  DS    CL20                                                     04525000
         ORG   EFF18PL                                                  04526000
F18DAPL  DS    AL4                                                      04527000
F18DAPRC DS    AL4                                                      04528000
F18MSGPT DS    AL4                                                      04529000
F18IDNUM DS    AL4                                                      04530000
F18FILL  DS    FL4                                                      04531000
         ORG   EFF18PL+20                                               04532000
MACROWK  DS    CL12                                                     04533000
IKJEGIO  CSECT                                                          04534000
         DS    0F                                                       04535000
@SIZDATD DC    AL1(78)                                                  04536000
         DC    AL3(@ENDDATD-@DATD)                                      04537000
@CA00152 DC    A(ATTACHIO)                                              04538000
         DS    0D                                                       04539000
PUTOUT   DC    XL4'0'                                                   04540000
F18MSG   DC    F'0'                                                     04541000
F18ID    DC    H'1'                                                     04542000
         DS    CL2                                                      04543000
LIST     DS    CL4                                                      04544000
         ORG   LIST                                                     04545000
@NM00001 DC    XL1'85'                                                  04546000
@NM00002 DC    AL3(EXIT)                                                04547000
         ORG   LIST+4                                                   04548000
SUPERZAP DS    CL50                                                     04549000
         ORG   SUPERZAP                                                 04550000
@NM00003 DC    50CL1'Z'                                                 04551000
         ORG   SUPERZAP+50                                              04552000
         DS    CL2                                                      04553000
NULLINE  DS    CL5                                                      04554000
         ORG   NULLINE                                                  04555000
@NM00020 DC    H'5'                                                     04556000
@NM00021 DC    H'0'                                                     04557000
@NM00022 DC    CL1' '                                                   04558000
         ORG   NULLINE+5                                                04559000
TESTLIST DC    CL8'TESTLIST'                                            04560000
DUMBUF   DC    X'0005000040'                                            04561000
DSN2LONG DS    CL67                                                     04562000
         ORG   DSN2LONG                                                 04563000
MSGLENTH DC    H'67'                                                    04564000
@NM00025 DS    FL2                                                      04565000
TXTOFMSG DC    CL63'IKJ57613I DSNAME WHEN FULLY QUALIFIED WILL EXCEED 4C04566000
               4 CHARACTERS'                                            04567000
         ORG   DSN2LONG+67                                              04568000
IKJEGIO  CSECT                                                          04569000
*                                      /* VCON FOR SIO MACRO  ZZZZZZZZ* 04570000
@IOVCON  DC    V(IKJEGIO)                                               04571000
@DATD    DSECT                                                          04572000
*                                       /* PCL AND VALIDCK   @ZA06223*/ 04573000
IKJEGIO  CSECT    ,           PUSHING THE ASSEMBLER AROUND   @ZA06223   04574000
PCLADDR  DC       A(PRMTPCL)  PCL ADDRESS IN HERE            @ZA06223   04575000
PRMTPCL  IKJPARM  DSECT=PDLMAP                                          04576000
PRMTDSN  IKJPOSIT DSNAME,USID,VALIDCK=CHKDSNM,               @ZA06223  X04577000
               PROMPT='OUTPUT DATA SET NAME'                 @ZA06223   04578000
         IKJENDP                                                        04579000
CHKDSNM  CSECT                                               @ZA06223   04580000
         STM   14,12,12(13)   SAVE PARSE REGS                @ZA06223   04581000
         BALR  12,0           GET ADDRESSABILITY             @ZA06223   04582000
         USING *,12           FOR CSECT                      @ZA06223   04583000
         LR    2,1            SAVE PARAMETERS                @ZA06223   04584000
         GETMAIN R,LV=72      GET A SAVE AREA                @ZA06223   04585000
         ST    1,8(13)        AND CHAIN IT UP                @ZA06223   04586000
         ST    13,4(1)        FOREWARD AND BACK              @ZA06223   04587000
         LR    13,1           POINT TO MY SAVE AREA          @ZA06223   04588000
         L     3,0(0,2)       LOAD PDE ADDR                  @ZA06623   04589000
         TM    6(3),X'20'     SEE IF DSN FULLY QUALIFIED     @ZA06223   04590000
         BO    GOODDSN        YES - BYPASS ALL FURTHER TESTS @ZA06223   04591000
         LH    4,4(0,3)       NO-SEE IF TOO LONG             @ZA06223   04592000
         LA    5,35(0,0)      LOAD DSN LEN AND LIMIT         @ZA06223   04593000
         CR    4,5            SEE IF TOO LONG                @ZA06223   04594000
         BNH   GOODDSN        NO-GET OUT NORMALLY            @ZA06223   04595000
         L     1,4(0,2)       LOAD PTR TO IOPL               @ZA06223   04596000
         PUTLINE MF=(E,(1))   ISSUE ERROR MSG                @ZA06223   04597000
         LR    1,13           SAVE W/A PTR                   @ZA06223   04598000
         L     13,4(13)       LOAD CALLERS S/A PTR           @ZA06223   04599000
         FREEMAIN R,LV=72,A=(1) FREE MY S/A                  @ZA06223   04600000
         LM    14,12,12(13)   LOAD CALLERS REGS              @ZA06223   04601000
         LA    15,8(0,0)      SET RC = 8                     @ZA06223   04602000
         BR    14             RETURN TO PARSE                @ZA06223   04603000
GOODDSN  LR    1,13           SAVE MY S/A PTR                @ZA06223   04604000
         L     13,4(13)       LOAD CALLERS S/A PTR           @ZA06223   04605000
         FREEMAIN R,LV=72,A=(1) FREE MY S/A                  @ZA06223   04606000
         LM    14,12,12(13)   RELOAD CALLERS REGS            @ZA06223   04607000
         SLR   15,15          SET RC = ZERO                  @ZA06223   04608000
         BR    14             RETURN TO PARSE                @ZA06223   04609000
         DROP  12                                            @ZA06223   04610000
IKJEGIO  CSECT ,                                             @ZA06223   04611000
@DATD    DSECT                                                          04612000
         DS    0D  NULL LINE                                            04613000
IKJEGIO  CSECT                                                          04614000
IKJEGSPL IKJEGSPL RTRY=RETRY,ABNTB=IOABLST,MODNM=IKJEGIO,TNM=TEST-I/O   04615000
IOABLST  DS    0F            ABEND TABLE                                04616000
         DC    X'FF'         TABLE STOPPER                              04617000
MYDCB    DCB   MACRF=(PM),DSORG=PS,EXLST=LIST,SYNAD=A7SYNAD             04618000
LENDCB   EQU   *-MYDCB       LENGTH OF YMDCB                            04619000
CLFORM   CLOSE (CLFORM),MF=L  LIST FORM OF CLOSE                        04620000
LENCLF   EQU   *-CLFORM      LENGTH OF CLOSE MACRO                      04621000
LFORM    OPEN  (,(OUTPUT)),MF=L  LIST FORM OF OPEN                      04622000
LENOLF   EQU   *-LFORM       LENGTH OF OPEN MACRO                       04623000
************************************************************            04624000
**                                                        **            04625000
**                   PUTLINE LIST MACRO EXPANSIONS        **            04626000
**                                                        **            04627000
************************************************************            04628000
PUTDATA PUTLINE OUTPUT=(PUTOUT,TERM,SINGLE,DATA),MF=L                   04629000
PUTDATA1 EQU   *-PUTDATA     THIS INSTRUCTION OBTAINS THE LENGTH        04630000
PUTMSG   PUTLINE OUTPUT=(PUTOUT,TERM,SINGLE,INFOR),MF=L                 04631000
PUTMSG1  EQU   *-PUTMSG      THIS GETS THE LENGHT OF THE PARM FLD       04632000
PUTMSG2  PUTLINE OUTPUT=(PUTOUT,TERM,MULTLVL,INFOR),MF=L                04633000
PUTMSG3  EQU   *-PUTMSG2     OBTAIN LENGTH OF PARM LIST                 04634000
GETLINE  EQU   *                                                        04635000
SERVICE  EQU   *                                                        04636000
PUTGETIT PUTGET  OUTPUT=(PUTOUT,SINGLE,MODE),MF=L                       04637000
PUTGETSZ EQU   *-PUTGETIT                                               04638000
PUTGETML PUTGET OUTPUT=(PUTOUT,MULTLVL),MF=L                            04639000
PUTGETLN EQU   *-PUTGETML    FIND CORRECT LENGTH OF LIST                04640000
PUTSPACE PUTLINE OUTPUT=(PUTOUT,DATA),TERMPUT=(EDIT),MF=L               04641000
SPACESZ  EQU   *-PUTSPACE    SIZE OF LIST                               04642000
TCOMTAB  TCOMTAB                                                        04643000
         TSTCWORK                                                       04644000
         IKJTPL                                                         04645000
         IKJECT                                                         04646000
         IKJDAP08                                                       04647000
         IKJIOPL                                                        04648000
         IKJPTPB                                                        04649000
         IKJPGPB                                                        04650000
         IKJDFPL                                                        04651000
         IKJDFPB                                                        04652000
         IKJDAPL                                                        04653000
CVTDSECT DSECT                                                          04654000
         CVT                                                            04655000
         IKJTCB                                                         04656000
         DCBD  DSORG=PS                                                 04657000
DSNLEN   EQU   46                    LENGTH OF DATA SET NAME            04658000
PASSDCB  EQU   LENDCB+LENCLF+LENOLF  ADDRESS FOR DSNAME DSECT           04659000
TLEN     EQU   LENDCB+LENCLF+LENOLF+DSNLEN  LENGTH OF GETMAIN AREA      04660000
@DATD    DSECT                                                          04661000
@DATD    DSECT                                                          04662000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                04663000
@ENDDATD EQU   *                                                        04664000
IKJEGIO  CSECT                                                          04665000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       04666000
@01      EQU   01                                                       04667000
@02      EQU   02                                                       04668000
@03      EQU   03                                                       04669000
@04      EQU   04                                                       04670000
@05      EQU   05                                                       04671000
@06      EQU   06                                                       04672000
@07      EQU   07                                                       04673000
@08      EQU   08                                                       04674000
@09      EQU   09                                                       04675000
@10      EQU   10                                                       04676000
@11      EQU   11                                                       04677000
@12      EQU   12                                                       04678000
@13      EQU   13                                                       04679000
@14      EQU   14                                                       04680000
@15      EQU   15                                                       04681000
PRMREG1  EQU   @01                                                      04682000
PRMREG0  EQU   @00                                                      04683000
SIORETCD EQU   @15                                                      04684000
RTNCODE  EQU   @15                                                      04685000
DCBREG   EQU   @01                                                      04686000
IOPLREG  EQU   @01                                                      04687000
IOPBREG  EQU   @05                                                      04688000
OLD      EQU   @04                                                      04689000
TCOMPTR  EQU   @09                                                      04690000
MSGCSECT EQU   @02                                                      04691000
ESTAEADD EQU   @02                                                      04692000
RTNSAVE  EQU   @02                                                      04693000
DSECT10  EQU   @10                                                      04694000
PRMREG4  EQU   @04                                                      04695000
PDEREG   EQU   @00                                                      04696000
PDELEN   EQU   @00                                                      04697000
INSERTRG EQU   @01                                                      04698000
PRMREG5  EQU   @05                                                      04699000
DSECT4   EQU   @04                                                      04700000
DSECT11  EQU   @11                                                      04701000
PRMREG11 EQU   @11                                                      04702000
OPENREG  EQU   @11                                                      04703000
         EXTRN ATTACHIO                                                 04704000
TYP      EQU   0                                                        04705000
INTPLPTR EQU   0                                                        04706000
CONVROUT EQU   0                                                        04707000
CONDATA  EQU   0                                                        04708000
CONLEN   EQU   CONDATA                                                  04709000
CONTXT   EQU   CONDATA+1                                                04710000
PDECONVR EQU   0                                                        04711000
PPL      EQU   0                                                        04712000
PPLPCL   EQU   PPL+12                                                   04713000
PPLANS   EQU   PPL+16                                                   04714000
PPLCBUF  EQU   PPL+20                                                   04715000
PPLUWA   EQU   PPL+24                                                   04716000
PARMTAB  EQU   0                                                        04717000
MSG99PTR EQU   PARMTAB                                                  04718000
MSG199PT EQU   PARMTAB+4                                                04719000
SECONDPT EQU   PARMTAB+8                                                04720000
INSERTPT EQU   PARMTAB+12                                               04721000
SVCTBP   EQU   PARMTAB+16                                               04722000
SVCTBRCP EQU   PARMTAB+20                                               04723000
MSGPARMS EQU   0                                                        04724000
SIOTYPE  EQU   MSGPARMS                                                 04725000
SIOMODID EQU   MSGPARMS+1                                               04726000
SIOTYP11 EQU   MSGPARMS+2                                               04727000
SIONUMI1 EQU   MSGPARMS+12                                              04728000
SIO1STMS EQU   MSGPARMS+16                                              04729000
SIO11PTR EQU   MSGPARMS+20                                              04730000
SIO13PTR EQU   MSGPARMS+28                                              04731000
SIOTYP21 EQU   MSGPARMS+46                                              04732000
SIONUMI2 EQU   MSGPARMS+52                                              04733000
SIO2NDMS EQU   MSGPARMS+56                                              04734000
SIO21PTR EQU   MSGPARMS+60                                              04735000
SVCPRMS  EQU   0                                                        04736000
SIOABREG EQU   SVCPRMS+4                                                04737000
SIORCREG EQU   SVCPRMS+8                                                04738000
SIOSVCMG EQU   SVCPRMS+16                                               04739000
DATAPRMS EQU   0                                                        04740000
SIODATA  EQU   DATAPRMS+4                                               04741000
SIODSN   EQU   DATAPRMS+8                                               04742000
REDEFPL  EQU   0                                                        04743000
OLDPTR2  EQU   REDEFPL+8                                                04744000
ZEROOLD  EQU   REDEFPL+48                                               04745000
@NM00016 EQU   0                                                        04746000
AMTINDX  EQU   @NM00016                                                 04747000
INDXPTR  EQU   @NM00016+4                                               04748000
MG       EQU   0                                                        04749000
INDISP   EQU   MG                                                       04750000
LOCALMSG EQU   MG+6                                                     04751000
LENLOCAL EQU   LOCALMSG                                                 04752000
TEXTMSG  EQU   LOCALMSG+4                                               04753000
MSGINST  EQU   0                                                        04754000
INSTLEN  EQU   MSGINST                                                  04755000
INSTPDE  EQU   0                                                        04756000
VPDETXT  EQU   0                                                        04757000
ZEROTEST EQU   0                                                        04758000
SVCTB1   EQU   0                                                        04759000
AB2NDLV1 EQU   SVCTB1                                                   04760000
ABCDTB1  EQU   SVCTB1+4                                                 04761000
SVCNUM1  EQU   ABCDTB1                                                  04762000
ABTABPT1 EQU   ABCDTB1+4                                                04763000
SVCINST1 EQU   ABCDTB1+8                                                04764000
ABTAB1   EQU   0                                                        04765000
ABCODE1  EQU   ABTAB1                                                   04766000
RCTABPT1 EQU   ABTAB1+4                                                 04767000
ABCDINST EQU   ABTAB1+8                                                 04768000
RCTAB1   EQU   0                                                        04769000
SVC1STM1 EQU   RCTAB1                                                   04770000
RCSVC    EQU   RCTAB1+4                                                 04771000
SVCRC1   EQU   RCSVC                                                    04772000
RCINST1  EQU   RCSVC+4                                                  04773000
SVCTBRC2 EQU   0                                                        04774000
RC2NDLV2 EQU   SVCTBRC2                                                 04775000
SVCRCT2  EQU   SVCTBRC2+4                                               04776000
SVCNUM2  EQU   SVCRCT2                                                  04777000
SVCRCTB2 EQU   SVCRCT2+4                                                04778000
RCTAB2   EQU   0                                                        04779000
SVCRC2   EQU   RCTAB2                                                   04780000
SVC1STM2 EQU   RCTAB2+4                                                 04781000
SVCRCIN2 EQU   RCTAB2+8                                                 04782000
SKIPLINE EQU   0                                                        04783000
PUTGETDS EQU   0                                                        04784000
INBUFPTR EQU   PUTGETDS+12                                              04785000
PARSEMSG EQU   0                                                        04786000
FMTMSG   EQU   0                                                        04787000
FMTMSGLN EQU   FMTMSG                                                   04788000
LOGONOFF EQU   0                                                        04789000
ATTNHIT  EQU   0                                                        04790000
DSNAMPDE EQU   0                                                        04791000
STRNGPTR EQU   DSNAMPDE                                                 04792000
DSL      EQU   DSNAMPDE+4                                               04793000
FLAGRES1 EQU   DSNAMPDE+6                                               04794000
FLAGRES2 EQU   DSNAMPDE+14                                              04795000
PSWRDPTR EQU   DSNAMPDE+16                                              04796000
LENPSWRD EQU   DSNAMPDE+20                                              04797000
FLAGRES3 EQU   DSNAMPDE+22                                              04798000
TESTIOWK EQU   0                                                        04799000
DCB      EQU   TESTIOWK                                                 04800000
CLOSE    EQU   TESTIOWK+96                                              04801000
OPEN     EQU   TESTIOWK+100                                             04802000
CURDCBDN EQU   TESTIOWK+104                                             04803000
LENDSN   EQU   CURDCBDN                                                 04804000
NAME     EQU   CURDCBDN+2                                               04805000
DSN      EQU   0                                                        04806000
PASSWORD EQU   0                                                        04807000
DSNQUEU  EQU   0                                                        04808000
DSNCHAIN EQU   DSNQUEU                                                  04809000
LENGTHDN EQU   DSNQUEU+4                                                04810000
DN       EQU   DSNQUEU+6                                                04811000
ERRORMSG EQU   0                                                        04812000
PART1    EQU   ERRORMSG                                                 04813000
PART2    EQU   ERRORMSG+34                                              04814000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    04815000
LENMEMBR EQU   DSNAMPDE+12                                              04816000
PTRMEMBR EQU   DSNAMPDE+8                                               04817000
@NM00024 EQU   FMTMSG+4                                                 04818000
@NM00023 EQU   FMTMSG+2                                                 04819000
@NM00019 EQU   PUTGETDS                                                 04820000
@NM00018 EQU   MSGINST+2                                                04821000
@NM00017 EQU   LOCALMSG+2                                               04822000
SECONDPR EQU   REDEFPL+56                                               04823000
INSTNUM2 EQU   REDEFPL+52                                               04824000
@NM00015 EQU   REDEFPL+20                                               04825000
FIRSTPTR EQU   REDEFPL+16                                               04826000
INSTAMT1 EQU   REDEFPL+12                                               04827000
@NM00014 EQU   REDEFPL                                                  04828000
@NM00013 EQU   DATAPRMS                                                 04829000
SIOINPTR EQU   SVCPRMS+60                                               04830000
@NM00012 EQU   SVCPRMS+47                                               04831000
SIOINTYP EQU   SVCPRMS+46                                               04832000
@NM00011 EQU   SVCPRMS+20                                               04833000
@NM00010 EQU   SVCPRMS+12                                               04834000
@NM00009 EQU   SVCPRMS                                                  04835000
SIO26PTR EQU   MSGPARMS+80                                              04836000
SIO25PTR EQU   MSGPARMS+76                                              04837000
SIO24PTR EQU   MSGPARMS+72                                              04838000
SIO23PTR EQU   MSGPARMS+68                                              04839000
SIO22PTR EQU   MSGPARMS+64                                              04840000
SIOTYP26 EQU   MSGPARMS+51                                              04841000
SIOTYP25 EQU   MSGPARMS+50                                              04842000
SIOTYP24 EQU   MSGPARMS+49                                              04843000
SIOTYP23 EQU   MSGPARMS+48                                              04844000
SIOTYP22 EQU   MSGPARMS+47                                              04845000
@NM00008 EQU   MSGPARMS+44                                              04846000
SIO16PTR EQU   MSGPARMS+40                                              04847000
SIO15PTR EQU   MSGPARMS+36                                              04848000
SIO14PTR EQU   MSGPARMS+32                                              04849000
SIO12PTR EQU   MSGPARMS+24                                              04850000
SIOSCPTR EQU   MSGPARMS+8                                               04851000
SIOTYP16 EQU   MSGPARMS+7                                               04852000
SIOTYP15 EQU   MSGPARMS+6                                               04853000
SIOTYP14 EQU   MSGPARMS+5                                               04854000
SIOTYP13 EQU   MSGPARMS+4                                               04855000
SIOTYP12 EQU   MSGPARMS+3                                               04856000
PPLECB   EQU   PPL+8                                                    04857000
PPLECT   EQU   PPL+4                                                    04858000
PPLUPT   EQU   PPL                                                      04859000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04860000
@RT00074 EQU   NOESTAE                                                  04861000
@RF00114 EQU   @RC00111                                                 04862000
@RT00146 EQU   EXITMSG                                                  04863000
@RT00173 EQU   EXITMSG                                                  04864000
@RT00191 EQU   EXITINST                                                 04865000
@RT00194 EQU   EXITINST                                                 04866000
@RT00333 EQU   EXITADDX                                                 04867000
@RT00364 EQU   EXITADDD                                                 04868000
@RT00399 EQU   EXITREG                                                  04869000
@RT00452 EQU   EXITABSH                                                 04870000
@RT00470 EQU   EXITABSH                                                 04871000
@PB00013 EQU   @PB00014                                                 04872000
@RT00592 EQU   EXITTERM                                                 04873000
@RF00607 EQU   @RC00594                                                 04874000
@RF00615 EQU   @RC00610                                                 04875000
@RC00619 EQU   @RC00618                                                 04876000
@RF00660 EQU   @RC00618                                                 04877000
@RT00675 EQU   EXITTERM                                                 04878000
@RT00680 EQU   EXITTERM                                                 04879000
@RC00693 EQU   @RC00690                                                 04880000
@RC00691 EQU   @RC00690                                                 04881000
@RC00701 EQU   @RC00696                                                 04882000
@RC00699 EQU   @RC00696                                                 04883000
@RC00697 EQU   @RC00696                                                 04884000
@RF00807 EQU   EXITDS                                                   04885000
@RT00867 EQU   EXITDS                                                   04886000
@RT00884 EQU   EXITDS                                                   04887000
@RT00895 EQU   EXITDS                                                   04888000
@RT00995 EQU   EXITRCDR                                                 04889000
@RT01014 EQU   EXITSYND                                                 04890000
@RF01030 EQU   EXITBADD                                                 04891000
@RF01060 EQU   EXITCKDN                                                 04892000
@RT01078 EQU   NEWDSN                                                   04893000
@RF01087 EQU   EXITCKDN                                                 04894000
@RT01099 EQU   EXITCKDN                                                 04895000
@RT01130 EQU   EXITOPEN                                                 04896000
@RT01146 EQU   EXITPUT                                                  04897000
@RF01169 EQU   @EL00029                                                 04898000
EXITEXIT EQU   @EL00029                                                 04899000
@RF00431 EQU   @PB00013                                                 04900000
@RF00626 EQU   @RC00619                                                 04901000
@RF00633 EQU   @RC00619                                                 04902000
@RF00641 EQU   @RC00619                                                 04903000
@ENDDATA EQU   *                                                        04904000
         END   IKJEGIO,(C'PLS0741',0701,78174)                          04905000
