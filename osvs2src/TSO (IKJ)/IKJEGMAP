MAP      TITLE 'IKJEGMAP, LISTMAP FUNCTION OF TEST COMMAND'             00202002
         COPY  IKJEGSIO                                                 00210002
         EJECT                                                          00220002
IKJEGMAP CSECT                                                          00260002
*C187500                                                    @YM07131    00310002
*C256500                                                    @ZA00816    00370000
*C258000                                                    @ZA00816    00430000
*C190500                                                   @ZA04819     00440000
*A208100-208300                                               @ZA06657  00450000
*C199000                                                      @ZA06657  00460000
*********************************************************************   00500002
* STATUS   CHANGE LEVEL 00, VERSION NUMBER 02, OS/VS2  (05/17/73)   *   00550002
*                                                                   *   00600002
* FUNCTION/OPERATION                                                *   00650002
*    THE TASK OF THIS COMMAND IS TO DISPLAY A COMPLETE STORAGE MAP  *   00700002
*    OF THE REGION IN WHICH THE USER'S PROGRAM IS BEING TESTED.     *   00750002
*    THE MAP SHOWS THE LOCATION AND EXTENT OF EACH PROGRAM IN THE   *   00800002
*    REGION, AND THE LOCATION AND EXTENT OF EACH AREA OF GOTTEN     *   00850002
*    STORAGE BY TASK FOR EACH TASK BELOW THE TEST TASK.             *   00900002
*                                                                   *   00950002
* ENTRY POINTS                                                      *   01000002
*         IKJEGMAP-ENTERED AS A RESULT OF A LINK FROM IKJEGMNL      *   01050002
*                                                                   *   01100002
* INPUT                                                             *   01150002
*    ONE LINE OF INPUT FROM THE TERMINAL CONTAINING THE COMMAND     *   01200002
*    PARAMETERS.                                                    *   01250002
*                                                                   *   01300002
* OUTPUT                                                            *   01350002
*    LINES OF OUTPUT TO THE TERMINAL OR SPECIFIED DATA SET CONTAIN  *   01400002
*    THE FOLLOWING DATA.                                            *   01450002
*    1.   EXTENT OF THE REGION IN WHICH THE PROGRAM IS RUNNING.     *   01500002
*    2.   NAME AND EXTENTS OF PROGRAMS ON JOB PACK Q.               *   01550002
*    3.   DISPLAY THE ELEMENTS OF GOTTEN STORAGE FOR EACH SUBPOOL   *   01600002
*    *    OF EACH TASK RUNNING IN THE SAME REGION AS TEST.          *   01650002
*                                                                   *   01700002
* EXTERNAL REFERENCES                                               *   01750002
*         IKJPARS  - TO SCAN THE INPUT BUFFER FOR PRINT KEYWORD.    *   01800002
*         IKJEGIO  - TO OUTPUT DATA TO TERMINAL OR DATA SET         *   01850002
*                                                                   *   01900002
* EXITS,NORMAL                                                      *   01950002
*         IKJEGMNL-RETURN VIA REGISTER 14 WITH ONE OF THE FOLLOWING *   02000002
*    RETURN CODES-                                                  *   02050002
*    0  - NORMAL RETURN                                             *   02100002
*    16 - INDICATING AN ATTENTION INTERRUPT WAS ENCOUNTERED         *   02150002
*                                                                   *   02200002
* EXITS,ERROR                                                       *   02250002
*         IKJEGMNL-VIA REGISTER 14 WITH REGISTER 15 CONTAINING      *   02300002
*    A RETURN CODE OF 20 TO INDICATE THE STAE RETRY ROUTINE WAS     *   02350002
*    ENTERED, AND RETURN CODE OF 24 INDICATING UNABLE TO ISSUE      *   02400002
*    THE ESTAE FOR IKJEGMAP.                                        *   02420002
*                                                                   *   02450002
* TABLES/WORK AREAS                                                 *   02500002
*    TCOMTAB-DSECT CONTAINING THE ADDRESS OF THE OUTPUT BUFFER, THE *   02550002
*    COMMAND BUFFER, AND LISTMAP'S SAVEAREA.                        *   02600002
*                                                                   *   02650002
* ATTRIBUTES                                                        *   02700002
*    REENTRANT AND REFRESHABLE                                      *   02750002
*                                                                   *   02800002
* CHARACTER CODE DEPENDENCY                                         *   02850002
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL          *   02900002
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS          *   02950002
*    EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS   *   03000002
*    BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER CONSTANTS, BY  *   03050002
*    REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *   03100002
*    DEFINITION.                                                    *   03150002
*                                                                   *   03200002
* NOTES                                                             *   03250002
*    ALL LABELS ARE NUMBERED IN SEQUENTIAL FASHION FOR QUICKER      *   03300002
*    IDENTIFICATION.                                                *   03350002
*    COMMENTS ON STAEMENTS BEGIN IN COLUMN 30.                      *   03400002
*    RETRY IS THE ENTRY POINT FOR THE STAE RETRY ROUTINE.  THIS     *   03450002
*    ROUTINE IS ENTERED FROM IKJEGSTA.                              *   03500002
*********************************************************************   03550002
         EJECT                                                          03600002
***********************************************************             03650002
*                                                         *             03700002
*             THIS SECTION CONTAINS ALL EQUATES           *             03750002
*                                                         *             03800002
***********************************************************             03850002
R0       EQU   0             REGISTER 0                                 03900002
R1       EQU   1             REGISTER 1                                 03950002
R2       EQU   2             REGISTER 2                                 04000002
R3       EQU   3             REGISTER 3                                 04050002
R4       EQU   4             REGISTER 4                                 04100002
R5       EQU   5             REGISTER 5                                 04150002
R6       EQU   6             REGISTER 6                                 04200002
R7       EQU   7             REGISTER 7                                 04250002
R8       EQU   8             REGISTER 8                                 04300002
R9       EQU   9             TCOMTAB BASE                               04350002
R10      EQU   10            REGISTER 10                                04400002
R11      EQU   11            REGISTER 11                                04450002
R12      EQU   12            BASE REGISTER                              04500002
R13      EQU   13            REGISTER 13                                04550002
R14      EQU   14            REGISTER 14                                04600002
R15      EQU   15            REGISTER 15                                04650002
N12      EQU   12            LENGTH OR DISPLACEMTN OF 12                04700002
N9       EQU   9             LENGTH OR DISPLACEMENT OF 9                04750002
N112     EQU   112           LENGTH OR DISPLACEMENT OF 112              04800002
N17      EQU   17            LENGTH OR DISPLACEMENT OF 17               04850002
N16      EQU   16            LENGTH OR DISPLACEMENT OF 16               04900002
N0       EQU   0             LENGTH OR DISPLACEMENT OF 0                04950002
N8       EQU   8             LENGTH OR DISPLACEMENT OF 8                05000002
N4       EQU   4             LENGTH OF DISPLACEMENT OF 4                05050002
N24      EQU   24            LENGTH OR DISPLACEMENT OF 24               05100002
N20      EQU   20            LENGTH OR DISPLACEMENT OF 20               05150002
N80      EQU   80            LENGTH OR DISPLACEMENT OF 80               05200002
N33      EQU   33            LENGTH OR DISPLACEMENT OF 33               05250002
N1       EQU   1             LENGTH OR DISPLACEMENT OF 1                05300002
FOUR     EQU   4             NUMBER OF BITS TO SHIFT TO CONVERT TO HEX  05350002
N13      EQU   13            LENGTH OR DISPLACEMENT OF 13               05400002
F0       EQU   X'F0'         USED TO CONVERT TO HEXADECIMAL             05450002
B7       EQU   X'B7'         USED TO CONVERT TO HEXADECIMAL             05500002
HEX01    EQU   X'01'         USED TO TEST FOR KEYWORD                   05550002
HEX04    EQU   X'04'         USED TO TEST FOR AN ALIAS                  05600002
HEXC0    EQU   X'C0'         INDICATES PRB                              05650002
HEX40    EQU   X'40'         INDICATES LAST SPQE                        05700002
HEX80    EQU   X'80'         INDICATES SHARED SUBPOOL                   05750002
N6       EQU   6             LENGTH OR DISPLACEMENT OF 6                05800002
N10      EQU   10            LENGTH OR DISPLACEMENT OF 10               05850002
N27      EQU   27            LENGTH OR DISPLACEMENT OF 27               05900002
HEXFF    EQU   X'FF'         USED TO SET PRINT SW                       05950002
N2       EQU   2             LENGTH OR DISPLACEMENT OF 2                06000002
N3       EQU   3             LENGTH OR DISPLACEMENT OF 3                06050002
N19      EQU   19            LENGTH OR DISPLACEMENT OF 19               06100002
LLFINIS  EQU   B'00000100'   USED TO TURN ON LOAD LIST SW DONE          06150002
N41      EQU   41            LENGTH OR DISPLACEMENT OF 41               06200002
N31      EQU   31            LENGTH OR DISPLACEMENT OF 31               06250002
N32      EQU   32            LENGTH OR DISPLACEMENT OF 32               06300002
N22      EQU   22            LENGTH OR DISPLACEMENT OF 22               06350002
TTCBPKF  EQU   28            SW INDICATING TASK IS IN TEST REGION       06400002
TCBADR   EQU   4             ADDR OF CURRENT TCB                        06450002
N68      EQU   68            LENGTH OR DISPLACEMENT OF 68               06500002
MYBASE   EQU   68            REGISTER 12 IN SAVEAREA                    06550002
SVC61    EQU   61            TEST SVC NUMBER                            06600002
SVC97    EQU   97            TEST SVC NUMBER                            06650002
**********************************************************************  06660002
*        MESSAGE CONSTANTS                                              06662002
**********************************************************************  06670002
MSG050   EQU   50             MAP COMPLETE MESSAGE                      06680002
MSG103   EQU   103            NO CORE MESSAGE (NO SECOND LEVEL)         06682002
MSG104   EQU   104            LISTMAP FAILED----                        06690002
MSG277   EQU   277            PARSE RETURN CODE 12                      06692002
INST17   EQU   17             LISTMAP INSERT NO. (FIXED)                06694002
         EJECT                                                          06700002
         SAVE  (14,12),,*     REGISTERS ARE SAVED BY USING              06750002
*******************************************************                 06800002
** THE FOLLOWING INSTRUCTIONS DO-                    **                 06850002
**                                                   **                 06900002
**   1. ESTABLISH TCOMTAB (TEST COMMUNICATION TABLE) **                 06950002
**      ADDRESSABILITY BY THE USING STATEMENT.       **                 07000002
**   2. FOLLOWS STANDARD IBM LINKAGE CONVENTIONS BY  **                 07050002
**      FORWARD AND BACKWARD CHAIN SAVE AREAS AND    **                 07100002
**      PLACING THE ADDRESS OF MY SAVE AREA INTO R13.**                 07150002
*******************************************************                 07200002
         USING TCOMTAB,R9     ESTABLISH COMMUNICATION                   07250002
*                             REGION ADDRESSABILITY                     07300002
         LR    R12,R15        ESTABLISH A BASE REGISTER                 07350002
         USING IKJEGMAP,R12                                             07400002
         L     R4,REGSAVE2    PLACE ADDR OF MY SAVE AREA INTO REG 4     07450002
         ST    R4,N8(R13)     PLACE INTO CALLER'S SAVEAREA              07500002
*                             AS FORWARD POINTER                        07550002
         ST    R13,N4(N0,R4)  PLACE INTO MY SAVE AREA AS                07600002
*                             BACKWARD CHAIN                            07650002
         LR    R13,R4         PLACE ADDR OF MY SAVEAREA INTO REG 13     07700002
         STM   R14,R12,N12(R13)   SAVE OUR REGISTERS IN SAVEAREA        07750002
         L     R2,WORKAREA    PLACE POINTER TO WORKAREA INTO REG 2      07950002
         USING TSTCWORK,R2    ESTABLISH ADDRESSABILITY TO IT            08000002
         LA    R1,CWORKCMD    SKIP OVER IKJEGCVT'S WORKAREA             08050002
         DROP  R2             DROP ADDRESSABILITY TO ENTIRE WORKAREA    08100002
         XC    N0(N16,R1),N0(R1)  CLEAR THE ESTAE WORKAREA              08150002
         LR    R2,R1          R2= ADDR OF CWORKCMD                      08200002
         ST    R12,N68(R13)   PLACE MY ENTRY POINT INTO MY SAVEAREA     08300002
         L     R3,TSTSTAE     R3= ADDR OF IKJEGSTA                      08310002
         ESTAE (R3),CT,PARAM=MAPSPL,RECORD=YES,MF=(E,(R2))              08350002
         LTR   R15,R15        TEST RETURN CODE FROM STAE                08400002
SMTSTAE  DS    0H             SMT LABEL FOR TEST CASE TMAP1800          08450002
         BZ    A0020          IF ALL OK CONTINUE                        08500002
         STC   R15,TSTESTRC   SAVE THE RETRUN CODE FOR MNL              08510002
         LA    R15,N24        R15= 24 ESTAE MACRO FAILURE               08520002
         B     A00412         EXIT TO MNL                               08530002
************************************************************            08800002
** PROGRAM ADDRESSABILITY IS ESTABLISHED USING REG 12     **            08850002
** AS A BASE REG. SINCE IKJPARS WILL BE USED FOR KEYWORD  **            08900002
** CHECKING, THE ADDRESS OF A WORKAREA IS OBTAINED FROM   **            08950002
** TCOMTAB AND PLACED INTO REG 5. THE UPT, ECT, AND CPECB **            09000002
** POINTERS ARE OBTAINED FROM TCOMTAB AND ARE MOVED INTO  **            09050002
** THE PARAMETER LIST FOR IKJPARS LOCATED IN THE WORKAREA.**            09100002
** THE PCL (PARAMETER CONTROL ENTRIES) IS ALSO  PLACED    **            09150002
** INTO THE PARAMETER LIST. THE PROGRAM THEN LINKS TO     **            09200002
** IKJPARS.                                               **            09250002
************************************************************            09300002
A0020    DS    0H                                                       09350002
         TM    TSTFLGS3,NOPARMS   SEE IF PRINT KEYWORD WAS ENTERED      09400002
         BO    A0030         IF IT WAS NOT THEN GO TO BEGIN PROCESSING  09450002
         L     R4,WORKAREA   OBTAIN ADDR OF WORKAREA FROM TCOMTAB       09500002
         USING TSTCWORK,R4   ESTABLISH ADDRESSABILITY TO IT             09550002
         LA    R5,CWORKCMD   SKIP OVER IKJEGCVT'S WORKAREA              09600002
         USING PPL,R5        ESTABLISH ADDRESSABILITY TO PARSE          09650002
*                            PARAMETER LIST                             09700002
         DROP  R4            DROP ADDRESSABILITY TO ENTIRE              09750002
*                            WORKAREA                                   09800002
         MVC   PPLUPT(N12),PARMLIST  MOVE UPT, ECT, ECB TO PARSE        09810002
         MVC   PPLPCL(N4),PARSEFLD PUT ADDR PCL INTO PARAMETER LIST     10000002
         LA    R4,TSTANSPL   GET ADDRESS OF ANSWER PLACE                10050002
         ST    R4,PPLANS     PUT IT INTO PARAMETER LIST FOR IKJPARS     10100002
         MVC   PPLCBUF(N4),INBUF  PUT ADDR OF COMMAND BUFFER INTO LIST  10150002
         LR    R1,R5         REG 1 POINTS TO PARAMETER LIST             10200002
         LINK  EP=IKJPARS,ERRET=LINKFAIL  LINK TO PARSE TO              10250002
BLOWUP1  DS    0H             LABEL USED BY STAE RETRY ROUTINE          10300002
SMTPARS  DS    0H            SMT LABEL FOR TEST CASE TMAP1800           10350002
         L     R8,PARSERC(R15) PLACE CORRECT ADCON INTO REG 8           10400002
         BR    R8            BRANCH TO PROPER HANDLER                   10450002
A0025    DS    0H             EQUATE LABEL TO THIS ADDRESS              10500002
************************************************************            10550002
** ON RETURN FROM IKJPARS, THE PARAMETER DESCRIPTOR LIST  **            10600002
** (PDL) IS TESTED TO SEE IF THE PRINT KEYWORD HAD BEEN   **            10650002
** SPECIFIED.  A RETURN OF ZERO INDICATES THAT IT WAS NOT.**            10700002
** IF IT HAS BEEN SPECIFIED THE PRINT SWITCH IS SET IN    **            10750002
** TCOMTAB FOR USE BY IKJEGIO.(I/O ROUTINE)               **            10800002
************************************************************            10850002
         L     R2,TSTANSPL   PLACE ADDRESS OF PDE INTO REG 2            10900002
         USING IKJPARMD,R2   USE REG 2 TO ADDRESS PDE DSECT             10950002
         TM    PRINT+N1,HEX01 TEST TO SEE IF KEYWORD WAS ENTERED        11000002
         BNO   A0030         IF NOT SPECIFIED WE PRINT TO TERMINAL      11050002
         OI    TSTFLGS1,TSTPRINT TURN ON PRINT SW IN TCOMTAB            11100002
         LA    R0,DSN        PLACE POINTER TO DSNAME PDE IN REG 0       11150002
A0030    DS    0H                                                       11200002
         L     R4,TSTTCB     OBTAIN TCB ADDRESS OF TEST'S TCB           11250002
         USING TCB,R4        USE TCB DSECT FOR ADDRESSING               11300002
         L     R5,TCBPQE     PLACE DUMMY PQE ADDRESS IN REG 5           11350002
************************************************************            11400002
** TEST TCB ADDRESS IS OBTAINED FROM TCOMTAB. FROM THE    **            11450002
** TCB THE PQE ADDRESS IS OBTAINED. 8 BYTES ARE ADDED TO  **            11500002
** THE PQE TO OBTAIN THE CORRECT ADDRESS. THE PQE IS USED **            11550002
** TO OBTAIN THE REGION SIZE WHICH IS PRINTED OUT TO THE  **            11600002
** TERMINAL. FROM THE TCB THE ADDRESS OF THE CONTENTS     **            11650002
** DIRECTORY QUEUE IS OBTAINED. THE PROGRAM NAME IS       **            11700002
** OBTAINED FROM THE CDE AND PRINTED OUT. THE EXTENT      **            11750002
** ADDRESS IS GOTTEN FROM THE CDE AND USED TO OBTAIN CSECT**            11800002
** INFORMATION. ALL CSECT INFO IS PRINTED OUT. TEST ARE   **            11850002
** MADE TO DETERMINE WHEN THE EXTENT IS EMPTY.            **            11900002
** IF THERE ARE ANY MORE CDES THEY ARE ACCESSED ALSO      **            11950002
** OTHERWISE CONTINUE ON                                  **            12000002
************************************************************            12050002
         LA    R6,N8         BECAUSE  DUMMY PQE ADDRESS IS              12100002
         AR    R5,R6         MINUS 8 BYTES, ADD 8 BYTES TO              12150002
*                            PQE ADDRESS                                12200002
         L     R6,N0(R5)     LOAD FIRST PQE'S ADDRESS INTO              12250002
*                            REG 6                                      12300002
         USING PQESECT,R6    USE PQE DSECT FOR ADDRESSING               12350002
         L     R10,PQESIZE   PLACE REGION SIZE FROM PQE INTO REG 10     12400002
         BAL   R14,A3000     BRANCH TO HAVE CONVERT CHANGE IT           12450002
*                            TO PRINTABLE HEX                           12500002
         MVC   N24(N8,R1),N0(R2) MOVE REGION SIZE TO OUTPUT             12550002
         LA    R2,HDR001     PLACE ADDRESS OF SIZE HDR IN REG 2         12600002
         MVC   N8(N16,R1),N0(R2) MOVE HDR TO OUTPUT AREA                12650002
         BAL   R14,A0100     BRANCH TO PRINT ROUTINE                    12700002
         DROP  R4            DROP REG 4 FOR ADDR TCB DSECT              12750002
         USING TCB,R5        USE REG 5 TO ADDRESS TCB DSECT             12800002
         BAL   R14,CLEARALL  BRANCH TO CLEAR OUT OUTPUT AREA            12850002
***********************************************************             12900002
** THE CVT IS ACCESSED TO OBTAIN THE ADDRESS OF THE TCB  **             12950002
** QUEUE. THIS QUEUE IS FOLLOWED TO ITS END.  THE        **             13000002
** PARENT'S TASK ADDRESS OF EACH TCB IS COMPARED AGAINST **             13050002
** TEST'S TCB ADDRESS.  IF THEY COMPARE EQUAL THE TASK   **             13100002
** IS THEN PROCESSED PUTTING OUT ALL PROGRAMS UNDER THE  **             13150002
** LOAD LIST AND RB CHAINS PLUS ALL SUBPOOL INFORMATION. **             13200002
***********************************************************             13250002
         L     R6,TSTTCB     PLACE TEST TCB ADDR INTO REG 6             13300002
A00411   DS    0H             DAUGHTER                                  13350002
         L     R5,D(R6)      GET ADDR OF LAST DAUGHTER TASK             13400002
         LTR   R5,R5         IS THERE A DAUGHTER TASK                   13450002
         BNZ   IKJEGTSK      YES, START PROCESSING                      13500002
A00411A  DS    0H             SISTER                                    13550002
         L     R5,S(R6)      NO, GET ADDRESS OF NEXT SISTER TCB         13600002
         LTR   R5,R5         WAS THERE A SISTER                         13650002
         BNZ   IKJEGTSK      YES, START PROCESSING                      13700002
*        NOW WORK ON  MOTHER TCB                                        13750002
         L     R6,M(R6)      NO, GET ADDRESS OF MOTHER TASK             13800002
         LA    R6,N0(R6)     CLEAR HIGH ORDER BYTE                      13850002
         L     R5,TSTTCB     GET ADDRESS OF TEST TCB                    13900002
         LA    R5,N0(R5)     CLEAR HIGH ORDER BYTE                      13950002
         CR    R5,R6         DOES MOTHER TASK = TEST TASK               14000002
         BNE   A00411A       NO, GO CHECK FOR A SISTER TASK             14050002
         NI    TSTFLGS1,HEXFF-TSTPRINT TURN OFF PRINT SW IF IT IS ON    14100002
         LA    R2,MSG050     PLACE POINTER TO COMPLETED MSG IN REG 2    14150002
         BAL   R14,A0200     GO TO PUT MSG OUT TO TERMINAL              14200002
         B     A004123       RETURN TO IKJEGMNL                         14250002
RETCODE  DS    0H                                                       14300002
         B     A004123       RETURN TO IKJEGMNL WITH A 0                14350002
         B     A004123       RETURN TO IKJEGMNL WITH A 0                14400002
         B     A004123       RETURN TO IKJEGMNL WITH A 0                14450002
         B     A004123       RETURN TO IKJEGMNL WITH A 0                14500002
         B     A00412        RETURN TO IKJEGMNL WITH A 16               14550002
         B     A00412        RETURN TO IKJEGMNL WITH A 20               14600002
         B     A00412        RETURN TO IKJEGMNL WITH A 24               14610002
NOROOM   DS    0H              EQUATE LABEL TO THIS ADDRESS             14630002
         LA    R2,MSG103      R15= RETURN CODE 24 TO MNL                14640002
         B     A0200          BRANCH TO RETURN                          14642002
A004121  DS    0H                                                       14650002
         LA    R15,N16       INDICATE ATTENTION INTERRUPT               14700002
         B     A00412        RETURN TO IKJEGMNL                         14750002
A004122  DS    0H                                                       14800002
         LA    R15,N20       INDICATE STAE EXIT TAKEN                   14850002
         B     A00412        RETURN TO IKJEGMNL                         14900002
A004123A DS    0H                                                       14950002
         OI    TSTFLGS4,TSTFLUSH INDICATE TO IKJEGMNL TO FLUSH STACK    15000002
A004123  DS    0H                                                       15050002
         XR    R15,R15       NORMAL RETURN CODE TO IKJEGMNL             15100002
A00412   DS    0H             EQUATE LABEL TO THIS ADDRESS              15150002
*-*-*    ISSUE ESTAE 0 AND TURN OFF TSTRERTN SWITCH                     15160002
         LR    R2,R15        SAVE THE RETURN CODE                       15162002
         ESTAE 0             REMOVE THE ESTAE                           15170002
         NI    TSTFLGS4,HEXFF-TSTRERTN  TURN OFF RETRY SWITCH           15180002
         LR    R15,R2        RESTORE THE RETURN CODE                    15190002
         L     R13,N4(R13)   PLACE CALLERS SAVE AREA ADDR INTO REG 13   15200002
         RETURN (14,12),RC=(15)    RETURN TO IKJEGMNL                   15250002
IKJEGTSK EQU  *              EQUATE LABEL TO THIS ADDRESS               15300002
         LR    R10,R5        PLACE TCB ADDR TO BE CVTED IN REG 10       15350002
         BAL   R14,A3000     BRANCH TO CVT TO PRINT HEX                 15400002
         MVC   N27(N6,R1),N2(R2) MOVE CVTED TCB ADDR TO OUTPUT          15450002
         LA    R2,HDR005     PLACE 'UNDER TCB' HDR IN REG 2             15500002
         MVC   N8(N19,R1),N0(R2) MOVE HDR TO OUTPUT AREA                15550002
         BAL   R14,A0100     BRANCH TO PUT HDR OUT TO TERMINAL          15600002
         BAL   R14,CLEARALL  BRANCH TO CLEAR OUT OUTPUT AREA            15650002
         EJECT                                                          15660002
**********************************************************************  15700002
** BECAUSE IKJEGMAP IS DEPENDENT UPON THE CONTENTS OF THE VARIOUS   **  15750002
** CONTROL BLOCKS - THE LLES, THE CDES ETC - THE FOLLOWING CHECKS   **  15800002
** HAVE BEEN PUT IN TO AVOID PROGRAM CHECKS.  IF THE TASK IKJEGMAP  **  15850002
** IS TRYING TO PROCESS IS ACTIVE THE CONTENTS OF THESE CONTROL     **  15900002
** CONTROL BLOCKS MAY BE CHANGING WHILE IKJEGMAP IS PROCESSING. IE. **  15950002
** ABEND MAY BE ACTIVE FOR THIS TASK AND COULD BE FREEING UP THESE  **  16000002
** CONTROL BLOCKS.  WHEN IKJEGMAP IS GIVEN CONTROL, IKJEGMNL HAS    **  16050002
** ISSUED A STATUS SYNCH ON ALL TASKS IN THE TEST REGION.           **  16100002
** THIS WILL STOP ALL TASKS THE TCBSTPP FLAG OF THE TCB IS ON       **  16150002
** IF THE TASK WAS STOPPED BY THE ISSUANCE OF A STATUS STOP.  WHEN  **  16250002
** A TASK HAS TERMINATED THE LLES, CDES, ETC HAVE BEEN REMOVED SO   **  16300002
** IKJEGMAP WILL CONTINUE ON TO PROCESS THE NEXT TASK.  IF THE SVRB **  16350002
** IS A TEST SVC (IE. SVC 61 OR 97) THEN THE TASK IS IN A WAIT STATE**  16400002
** AND IKJEGMAP WILL PROCESS THE TASK.                              **  16450002
**********************************************************************  16500002
         TM    TCBNDSP2,TCBSTPP  STATUS STOP ISSUED AGAINST THIS        16550002
*                            TASK                                       16600002
         BO    A0031C        YES, PROCESS THIS TASK                     16650002
         TM    TCBFLGS5,TCBFC    NO, HAS THIS TASK TERMINATED           16700002
         BZ    A0031A        NO, CHECK FOR A SVRB OFF OF THE TCB        16750002
         LA    R3,HDR007      YES, PREPARE TO WRITE OUT MESSAGE         16800002
         BAL   R14,PUTMSG    PUT MESSAGE OUT                            16900002
         LR    R6,R5         FIND NEXT TCB UNDER TEST                   16950002
         B     A00411        GO GET NEXT TASK                           17000002
A0031A   DS    0H                                                       17050002
         L     R7,TCBRBP     OBTAIN ADDRESS OF SVRB                     17100002
         LA    R3,RBSECT-RBPREFIX  LENGTH OF PREFIX                     17160002
         SR    R7,R3          ADDRESS OF BEGINNING OF PREFIX            17170002
         USING RBPREFIX,R7    MAKE RBPREFIX ADDRESSABLE                 17180002
         CLI   RBINTCOD+N1,SVC61   IS THIS ONE OF THE TEST SVCS WAITING 17200002
         BE    A0031C        YES, PROCESS THIS TASK                     17250002
         CLI   RBINTCOD+N1,SVC97   NO, TEST FOR OTHER TEST SVC          17300002
         BE    A0031C        YES, PROCESS THIS TASK                     17350002
         LA    R3,HDR008     NO, ASSUME TASK IS ACTIVE AND              17400002
         BAL   R14,PUTMSG    GO PUT OUT MESSAGE                         17450002
         LR    R6,R5         FIND NEXT TCB UNDER TEST                   17500002
         B     A00411        GO GET NEXT TASK                           17550002
A0031C   DS    0H                                                       17600002
         USING LLE,R7        USE REG 7 TO ADDR LOAD LIST                17650002
         L     R7,TCBLLS     PLACE ADDRESS OF LOAD LIST INTO REG 7      17700002
         LA    R3,HDR002     PLACE HEADER INTO REG 1                    17750002
         BAL   R14,PUTMSG    BRANCH TO PUT HDR OUT TO TERMINAL          17800002
A0031    DS    0H             EQUATE LABEL TO THIS ADDRESS              17850002
         LA    R7,N0(R7)     ZERO OUT HIGH ORDER DATA                   17900002
         LTR   R7,R7         SEE IF ANY MORE LOAD LIST ELEMENTS EXIST   17950002
         BNZ   A00301        IF MORE EXIST THEN GO PROCESS MORE CDE     18000002
         OI    TSTFLGS2,LLFINIS OTHERWISE TURN ON LOAD LIST DONE SW     18050002
         B     A0038         AND GO TO PROCESS RB QUEUE                 18100002
GETCDE   DS    0H             EQUATE LABEL TO THIS ADDRESS              18150002
         USING CDENTRY,R8    USE REG 8 TO ADDRESS CDE WITH              18200002
         L     R8,CDXLMJP    PLACE ADDRESS OF NEXT CDE INTO REG 8       18250002
         LA    R8,N0(R8)      ZERO THE HIGH ORDER BYTE OF R8            18300002
         B     A00312        GO CHECK THIS BEING A MINOR CDE            18350002
A00301   DS    0H             EQUATE LABEL TO THIS ADDRESS              18400002
         L     R8,LLECDPT    PLACE ADDRESS OF CDE INTO REG 8            18450002
************************************************************            18500002
**  PROGRAM NAME AS CONTAINED WITHIN THE CDE IS PLACED    **            18550002
**  IN THE OUTPUT AREA AND PASSED TO THE PRINTOUT ROUTINE **            18600002
************************************************************            18650002
A00312   DS    0H             EQUATE LABEL TO THIS ADDRESS              18700002
         TM    CDATTR,CDMIN  SEE IF THIS IS AN ALIAS           @YM07131 18750002
         BO    GETCDE        IF IT IS THEN GO TO GET MAJOR CDE          18800002
         L     R1,OUTBUF     PLACE POINTER TO OUTPUT IN REG 1           18850002
         USING XTLST,R6      USE REG 6 TO ADDRESS EXTENT Q              18900002
         MVC   N17(N8,R1),CDNAME   MOVE PROGRAM NAME FROM CDE           18950002
         L     R6,CDXLMJP    PLACE POINTER TO EXTENT IN REG 6           19000002
         L     R3,XTLNRFAC   NUMBER OF RELOCATION FACTORS      @ZA04819 19050000
         XR    R4,R4         ZERO OUT REG 4 FOR INDEX REG               19200002
A00311   DS    0H             EQUATE LABEL TO THIS ADDRESS              19250002
         LTR   R3,R3         SEE IF ANY CSECTS LEFT                     19300002
         BNH   A0035         IF NO MORE THAN BRANCH FOR NEXT CDE        19350002
         L     R10,XTLMSBAA(R4) OTHERWISE PLACE CSECT LOC IN REG 10     19400002
         BAL   R14,A3000     BRANCH TO HAVE THIS CONVERTED TO HEX       19450002
         MVC   N41(N6,R1),N2(R2) MOVE CONVERTED HEX TO OUTPUT           19500002
         L     R10,XTLMSBLA(R4) PLACE LENGTH OF CSECT IN REG 10         19550002
         LA    R10,N0(R10)   ZERO FLAG (80) HIGH ORDER BYTE             19560002
         BAL   R14,A3000     BRANCH TO CONVERT TO PRINT HEX             19600002
         MVC   N31(N6,R1),N2(R2) MOVE PRINTABLE TO OUTPUT               19650002
         MVC   N8(N4,R1),LNSIZE MOVE LENGTH OF LINE INTO OUTPUT         19700002
         BAL   R14,A0100     BRANCH TO PUT INFOR OUT TO TERM            19750002
         BAL   R14,CLEARALL  BRANCH TO CLEAR OUT OUTPUT AREA            19800002
         BCTR  R3,N0         DECREMENT REG 3 BY 1                       19850002
         LA    R4,N8(R4)     ADD 8 TO REG 4                    @ZA06657 19900000
         B     A00311        BRANCH TO PROCESS NEXT CSECT IF ANY        20000002
A0038    DS    0H             EQUATE LABEL TO THIS ADDRESS              20050002
         L     R7,TCBRBP     PLACE POINTER TO FIRST RB INTO REG 7       20100002
         USING RBSECT,R7     USE REG 7 TO ADDRESS RB                    20150002
         LA    R7,N0(R7)     ZERO OUT HIGH ORDER BYTE                   20200002
         LTR   R7,R7         DO WE HAVE A ZERO                          20250002
         BZ    A00413        BRANCH TO PROCESS REST OF RB               20300002
ALABEL   TM    RBSTAB1,RBFTSVRB SEE IF THIS IS AN PRB                   20350002
         BZ    A0037         YES, BRANCH                                20400002
A0036    DS    0H             EQUATE LABEL TO THIS ADDRESS              20450002
         L     R7,RBLINK     PLACE ADDR OF NEXT RB INTO REG 7           20500002
         LA    R7,N0(R7)     ZERO OUT ANY HIGH ORDER DATA               20550002
         CR    R7,R5         SEE IF WE ARE AT THE END OF THE CHAIN      20600002
         BE    A00413        BRANCH TO PROCESS NEXT TCB                 20650002
         B     ALABEL        CONTINUE TO END OF CHAIN                   20700002
A0037    DS    0H                                                       20750002
         L     R8,RBCDE      PLACE NEXT CDE INTO REG 8                  20800002
         LA    R8,0(R8)      ZERO HI BYTE                     @ZA06657  20810000
         LTR   R8,R8         IS THE CDE PTR ZERO ???          @ZA06657  20820000
         BZ    A0036         YES, GET NEXT RB                 @ZA06657  20830000
         B     A00312        BRANCH TO PROCESS THIS CDE                 20850002
A0035    EQU     *           EQUATE LABEL TO THIS ADDRESS               20900002
         TM    TSTFLGS2,LLFINIS SEE IF WE ARE IN THE LL CHAIN           20950002
         BO    A0036         IF WE ARE NOT THEN GO TO PROCESS RB QUEUE  21000002
         USING LLE,R7        USE REG 7 TO ADDRESS LOADLIST              21050002
         L     R7,LLECHN     GET ADDR OF NEXT LOAD LIST                 21100002
         B     A0031         BRANCH TO PROCESS THIS LOAD LIST           21150002
A00413   DS    0H                                                       21200002
         NI    TSTFLGS2,HEXFF-LLFINIS TURN OFF LOAD LIST FINIS SW       21250002
         L     R4,WORKAREA   PLACE WORKAREA ADDR INTO REG 4             21300002
         STM   R0,R15,N112(R4) SAVE ENTERING REGS                       21350002
         LR    R4,R5         SAVE TCB ADDR IN REG 4                     21400002
         LA    R3,HDR003     PLACE 'ACTIVE RB' HDR INTO REG 1           21450002
         BAL   R14,PUTMSG    BRANCH TO PUT HDR OUT                      21500002
         L     R7,TCBRBP     LOAD RB ADDRESS FROM TCB INTO REG 7        21550002
         USING RBSECT,R7     USE REG 7 TO ADDR THE RB DSECT             21600002
************************************************************            21650002
** THE RBS ARE ACCESSED,THE TYPE OF RB IS DETERMINED AND  **            21700002
** THE CDE CONNECTED WITH THE RB ACCESSED TO GET THE      **            21750002
** PROGRAM ID                                             **            21800002
************************************************************            21850002
         LA    R7,N0(R7)     ZERO OUT HIGH ORDER BYTE OF REG 7          21900002
         LTR   R7,R7         ARE THERE ANY RBS                          21950002
         BZ    A0050         IF NOT THEN BRANCH                         22000002
A0042    DS    0H                                                       22050002
         L     R8,RBCDE      LOAD CDE ADDR INTO REG 8                   22100002
         USING CDENTRY,R8    USE REG 8 TO ADDR THE CDE DSECT            22150002
         LA    R8,N0(R8)     ZERO OUT HIGH ORDER BYTE OF REG 8          22200002
         LTR   R8,R8         TEST THAT WE HAVE AN ADDRESS               22250002
         BZ    A0047         IF WE DO NOT THEN BRANCH                   22300002
         TM    RBSTAB1,HEXC0 TEST RB TYPE FOR PRB                       22350002
         BZ    A0043         IF A PRB THEN BRANCH                       22400002
         TM    RBSTAB1,RBFTIRB DO WE HAVE AN IRB                        22450002
         BO    A0044         IF A MATCH THEN BRANCH                     22500002
         TM    RBSTAB1,RBFTSIRB DO WE HAVE AN SIRB                      22550002
         BO    A0045         IF SO THEN BRANCH                          22600002
         LA    R4,N12        PLACE 12 INTO INDEX REG                    22650002
A0046    DS    0H             MAKE LABEL EQUAL TO THIS ADDR             22700002
         L     R1,OUTBUF     PLACE POINTER TO OUTPUT BUFFER INTO REG 1  22750002
         L     R3,TYPE(R4)   LOAD PROPER TYPE INTO REG 3                22800002
         ST    R3,N24(R1)    STORE IN OUTPUT AREA                       22850002
         TM    RBSTAB1,HEXC0 DO WE HAVE A SVC RB OR AN IRB              22900002
         BZ    A00461        IF NOT THEN BRANCH TO MOVE IN NAME         22950002
         MVC   N8(N4,R1),SIZERB2 MOVE IRB MSG SIZE INTO OUTPUT          23000002
         B     A00462        BRANCH TO PROCESS THIS IRB                 23050002
A00461   DS    0H             EQUATE LABEL TO THIS ADDR                 23100002
         MVC   N33(N8,R1),CDNAME   MOVE PROGRAM NAME INTO OUTPUT        23150002
         MVC   N8(N4,R1),SIZERB MOVE SIZE OF LINE TO OUTPUT             23200002
A00462   DS    0H             EQUATE LABEL TO THIS ADDRESS              23250002
         BAL   R14,A0100     BRANCH TO PUT INFOR OUT ROUTINE            23300002
         BAL   R14,CLEARALL  BRANCH TO CLEAR OUT OUTPUT AREA            23350002
A0047    DS    0H             EQUATE LABEL TO THIS ADDRESS              23400002
         L     R7,RBLINK     PLACE ADDR OF NEXT RB INTO REG 7           23450002
         LA    R7,N0(R7)     ZERO OUT ANY HIGH ORDER DATA               23500002
         CR    R5,R7         IS THIS THE LAST RB OF THE CHAIN           23550002
         BE    A0050         IF RBLINK POINTS BACK TO TCB THEN BRANCH   23600002
         B     A0042         BRANCH TO PROCESS THE NEXT RB              23650002
A0043    DS    0H             MAKE LABEL EQUAL TO THIS ADDR             23700002
         XR    R4,R4         ZERO OUT INDEX REG                         23750002
         B     A0046         BRANCH TO GENERALIZED ROUTINE              23800002
A0044    DS    0H             TO PLACE TYPE INTO OUTPUT AREA            23850002
         LA    R4,N4         PLACE A 4 INTO INDEX REGISTER              23900002
         B     A0046         BRANCH TO PUT TYPE INTO OUTPUT             23950002
A0045    DS    0H             MAKE LABEL EQUAL TO THIS ADDR             24000002
         LA    R4,N8         PLACE 8 IN INDEX REG                       24050002
         B     A0046         BRANCH TO PUT TYPE INTO OUTPUT             24100002
A0050    DS    0H             LET LABEL EQUAL THIS ADDRESS              24150002
         LA    R3,HDR004     PLACE SUBPOOL HDR INTO REG 1               24200002
         BAL   R14,PUTMSG    BRANCH TO PUT HDR OUT TO TERMINAL          24250002
         LA    R3,HDR006     PLACE SUBPOOL HEADER IN REG 1              24300002
         BAL   R14,PUTMSG    GO TO PUT HEADING OUT TO TERMINAL          24350002
         XR    R6,R6         ZERO OUT REG 6 FOR AN INDICATOR            24400002
         L     R4,TCBMSS     PLACE SPQE ADDRESS INTO REG 4              24450002
         USING SPQESECT,R4   USE REG 4 TO ADDRESS SPQE                  24500002
************************************************************            24550002
**  THE SPQE ADDRESS IS OBTAINED FROM THE TCB. FROM THE   **            24600002
**  SPQE THE DQE IS OBTAINED. THE DQE IS ASSOCIATED WITH  **            24650002
**  ONE OR MORE 2K BLOCKS OF MAIN STORAGE SET ASIDE AS A  **            24700002
**  RESULT OF GETMAIN MACRO INSTRUCTION. EACH DQE ALSO    **            24750002
**  CONTAINS POINTERS TO FQE (FREE QUEUE). THESE SUBPOOLS **            24800002
**  ARE PUT OUT TO THE TERMINAL IN THE FORM-BLOCKSIZE     **            24850002
**  AND BLOCK LOCATION                                    **            24900002
************************************************************            24950002
         L     R1,OUTBUF     PLACE POINTER TO OUTPUT IN REG 1           25000002
         LA    R4,N0(R4)     ZERO OUT HIGH ORDER BYTE OF REG 4          25050002
         LTR   R4,R4         ARE THERE ANY SPQES PRESENT                25100002
         BZ    A0060         IF NOT THEN BRANCH                         25150002
A00511   DS    0H             EQUATE LABEL TO THIS ADDRESS              25200002
         TM    SPQEFLGS,SPSHARE SEE IF THIS IS OWNED OR SHARED          25250002
         BO    A0054         IF SHARED THE 2 WORD IS THE SPQ ADDR       25300002
         L     R8,SPDQEPTR   GET ADDR OF DQE FROM SPQE                  25350002
         USING DQESECT,R8    USING DQEDSECT FOR ADDRESSING              25400002
A0052    DS    0H             TEST FOR MORE DQES                        25450002
         LA    R8,0(R8)      ZERO OUT HIGH ORDER BYTE OF REG 8          25500002
         LTR   R8,R8         ARE THERE MORE DQES                        25550002
         BZ    A0053         IF NO DQE THEN BRANCH                      25600002
         TM    SPQEID,HEX80  CHECK THE SUBPOOL NUMBER         @ZA00816  25650000
         BO    A0053         IF GREATER THAN 127 THEN BRANCH            25700002
         XR    R0,R0         CLEAR OUT REG 0                            25750002
         IC    R0,SPQEID     PLACE SUBPOOL NUMBER INTO REG 0  @ZA00816  25800000
         L     R5,WORKAREA   PLACE POINTER TO WORKAREA INTO REG 5       25850002
         CVD   R0,N0(R5)     PLACE DECIMAL NUMBER INTO WORKAREA         25900002
         MVC   N8(N4,R5),PATTERN MOVE EDIT PATTERN INTO WORKAREA        25950002
         ED    N8(N4,R5),N6(R5) EDIT PACKED FIELD IN WORKAREA           26000002
         MVC   N13(N3,R1),N9(R5) MOVE SUBPOOL NUMBER TO OUTPUT          26050002
         L     R10,DQELNTH   PLACE BLOCKSIZE INTO REG 10                26100002
         BAL   R14,A3000     BRANCH TO CONVERT TO PRINTABLE HEX         26150002
         MVC   N32(N6,R1),N2(R2) MOVE PRINTABLE QUANTITY TO OUTPUT      26200002
         L     R10,DQEBLKAD  LOAD BLOCK LOCATION INTO REG 10            26250002
         BAL   R14,A3000     BRANCH TO CONVERT TO PRINTABLE HEX         26300002
         MVC   N22(N6,R1),N2(R2) MOVE PRINTABLE TO OUTPUT               26350002
         MVC   N8(N4,R1),SIZESPQ  MOVE LENGTH OF LINE INTO OUTPUT       26400002
         XR    R0,R0         ZERO OUT REG 0 FOR IO MODULE               26450002
         BAL   R14,A0100     GO PUT OUT INFORMATION                     26500002
         BAL   R14,CLEARALL  BRANCH TO CLEAR OUT OUTPUT                 26550002
         L     R8,DQEPTR     LOAD NEXT DQE ADDR INTO REG 8              26600002
         B     A0052         RETURN TO PROCESS NEXT DQE.                26650002
A0053    DS    0H                                                       26700002
         LTR   R6,R6         DOES REG 6 HAVE A SPQ ADDR IN IT           26750002
         BZ    A0055         IF IT DOES NOT THEN BRANCH AROUND CODE     26800002
         LR    R4,R6         OTHERWISE PLACE SPQ ADDR INTO REG 4        26850002
         TM    SPQEFLGS,LASTSPQE SEE IF THIS IS THE LAST SPQ            26900002
         BO    A0060         IF IT IS THEN BRANCH TO CLEAN UP           26950002
         L     R4,N0(R4)     PLACE POINTER TO SPQ INTO REG 4            27000002
         XR    R6,R6         ZERO OUT REG 6 AS AN INDICATOR             27050002
         B     A00511        BRANCH TO PROCESS THIS SPQ                 27100002
A0055    DS    0H             EQUATE LABEL TO THIS ADDRESS              27150002
         TM    SPQEFLGS,LASTSPQE IS THIS THE LAST SPQ                   27200002
         BO    A0060         IF IT IS THEN BRANCH TO RETURN             27250002
         L     R4,SPQEAD     PLACE ADDRESS OF NEXT SPQE INTO REG 4      27300002
         B     A00511        BRANCH TO PROCESS NEXT SPQE                27350002
A0054    DS    0H             EQUATE LABEL TO THIS ADDRESS              27400002
         LR    R6,R4         PLACE NEXT SPQ ADDR IN REG 6               27450002
         L     R4,SPDQEPTR   PLACE 2ND WORD INTO REG 4                  27500002
         L     R8,SPDQEPTR   PLACE NEXT DQE ADDR INTO REG 8             27550002
         B     A0052         BRANCH TO PROCESS THIS DQE                 27600002
A0060    DS    0H                                                       27650002
         L     R4,WORKAREA   PLACE ADDRESS OF WORKAREA INTO REG 4       27700002
         LA    R4,N112(R4)   PLACE ADDR FROM WITHIN WORKAREA IN REG 4   27750002
         LM    R0,R15,N0(R4) RESTORE REG TO ENTERING VALUE              27800002
         LR    R6,R5         FIND NEXT TCB UNDER TEST                   27850002
         B     A00411        RETURN TO MAINLINE LISTMAP                 27900002
         EJECT                                                          27910002
A3000    DS    0H             EQUATE LABEL TO THIS ADDRESS              27950002
** THE FOLLOWING CODE CONVERTS THE DATA TO BE OUTPUTTED TO          **  28000002
** HEXADECIMAL.                                                     **  28050002
         L     R2,WORKAREA   PLACE WORKAREA ADDR INTO REG 2             28100002
         STM   R0,R15,N20(R2) SAVE MY REGISTERS TO FREE SOME UP         28150002
         XR    R5,R5         ZERO OUT REG 5 TO USE IT AS COUNTER        28200002
         LA    R15,N8        WE NEED AN 8 FOR LATER COMPARISON          28250002
         LR    R11,R10       PLACE ADDRESS TO BE CONVERTED INTO REG 11  28300002
A30001   DS    0H             EQUATE LABEL TO THIS ADDRESS              28350002
         XR    R10,R10       ZERO OUT REG 10                            28400002
         SLDL  R10,FOUR      MOVE 4 BITS FROM REG 11 INTO REG 10        28450002
         CL    R10,NINE      SEE IF REG 10 CONTAINS A 9 OR LESS         28500002
         BH    A30005        IF IT DOESNT THEN BRANCH                   28550002
         LA    R10,F0(R10)   OTHERWISE ADD A X'F0' TO REG 10            28600002
A30002   DS    0H             EQUATE LABEL TO THIS ADDRESS              28650002
         STC   R10,N0(R2)    PLACE CONTENTS OF REG 10 INTO WORKAREA     28700002
         LA    R2,N1(R2)     ADDRESS NEXT BYTE IN WORKAREA              28750002
         LA    R5,N1(R5)     ADD 1 TO COUNTER                           28800002
         CR    R5,R15        SEE IF REG 5 CONTAINS AN 8 YET             28850002
         BNE   A30001        IF IT DOES THEN BRANCH                     28900002
         L     R2,WORKAREA   PLACE ADDRESS OF WORKAREA INTO REG 2       28950002
         LM    R0,R15,N20(R2) RESTORE ENTERING REGISTERS                29000002
OUTSETUP L     R1,OUTBUF     PLACE POINTER OUTPUT AREA INTO R 1         29050002
         LA    R2,N8(R1)     PLACE ADDRESS OF OF ACTUAL MSG INTO REG 2  29100002
         ST    R2,N0(R1)     PLACE POINTER TO MSG INTO PARM LIST        29150002
         XR    R2,R2         ZERO REGISTER 2                            29200002
         ST    R2,N4(R1)     PLACE ZEROES INTO 2 WORD OF POINTER        29250002
         L     R2,WORKAREA   PLACE ADDRESS OF WORKAREA INTO REG 2       29300002
         BR    R14           BRANCH TO NEXT INSTRUCTION                 29350002
A30005   DS    0H             EQUATE LABEL TO THIS ADDRESS              29400002
         LA    R10,B7(R10)   ADD A X'B7' TO REG 10                      29450002
         B     A30002        BRANCH TO CONTINUE PROCESSING              29500002
A0100    DS    0H             EQUATE LABEL TO THIS ADDRESS              29550002
         LR    R11,R14       SAVE RETURN ADDRESS IN REG 11              29600002
         L     R2,OUTBUF      R2= ADDR OF THE DATA TO BE PRINTED        29650002
         L     R2,N0(R2)      R2= ADDR OF THE OUTPUT                    29660002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM AREA        29710002
         IKJEGSIO DATA,DATAPTR=(R2),DSNAME=(R0),ID=MAP21,              *29720002
               MF=(E,TSTIOPRM)    CALL IKJEGIO FOR DATA                 29730002
         LTR   R15,R15       TEST RETURN CODE FOR ZERO                  29750002
         BZ    A0103         YES, THEN BRANCH                           29800002
         B     RETCODE(R15)  GO TO BRANCH TABLE INDEXED BY CONTENTS OF  29850002
*                            REGISTER 15                                29900002
A0103    DS    0H             EQUATE LABEL TO THIS ADDRESS              29950002
         TM    TSTFLGS1,TSTPRINT SEE IF THE PRINT SWITCH IS ON          30000002
         BNO   A0104         IF IT IS NOT THEN BRANCH                   30050002
         XR    R0,R0         OTHERWISE ZERO OUT REG O                   30100002
A0104    DS    0H             EQUATE LABEL TO THIS ADDRESS              30150002
         LR    R14,R11       RESTORE RETURN ADDRESS IN REG 14           30200002
         BR    R14           BRANCH TO RETURN TO NEXT INSTRUCTION       30250002
         SPACE                                                          30260002
A0200    DS    0H                                                       30300002
** THE FOLLOWING CODE SETS UP AND PUTS OUT THE MESSAGE FOR LISTMAP   ** 30350002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM AREA        30450002
         IKJEGSIO MSG,FIRST=(R2),ID=MAP21,MF=(E,TSTIOPRM) CALL IKJEGIO  30500002
         B     RETCODE(R15)  NO, GO HANDLE RETURN CODE                  30750002
         SPACE                                                          30760002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *         30800002
* THE FOLLOWING SECTION OF CODE OUTPUT MESSAGES BY PLACING THEM         30850002
* OUTPUT BUFFER.     NOTE OUTSETUP SETS R1 TO OUTBUF                    30900002
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *         30950002
PUTMSG   L     R2,WORKAREA   GET SPACE TO SAVE RETURN ADDR              31000002
         ST    R14,N0(R2)    SAVE THE RETURN ADDRESS                    31050002
         BAL   R14,OUTSETUP  SETUP THE OUTPUT BUFFER                    31100002
         LH    R2,N0(R3)     GET LENGTH OF THE MESSAGE                  31200002
         BCTR  R2,N0         DECREMENT THE LENGTH BY ONE                31250002
         EX    R2,MOVEMSG    MOVE THE MESSAGE TO THE OUTBUFFER          31300002
         BAL   R14,A0100     LINK TO OUTPUT THE MESSAGE                 31350002
         L     R2,WORKAREA   GET ADDR OF WHERE RETURN IS.               31400002
         L     R14,N0(R2)    RESTORE THE RETURN ADDRESS                 31450002
* THE FOLLOWING CODE CLEARS THE OUTPUT BUFFER IN PREPARATION FOR THE *  31500002
* NEXT LINE OF OUTPUT.                                               *  31550002
CLEARALL DS    0H             EQUATE LABEL TO THIS ADDRESS              31600002
         L     R1,OUTBUF      R1= ADDR OF THE OUTPUT BUFFER             31610002
         MVI   N9(R1),HEX40  MOVE A BLANK INTO FIRST BYTE OF OUTPUT     31650002
         MVC   N10(N80,R1),N9(R1) SPREAD THIS BYTE THRU OUTPUT          31700002
         BR    R14           BRANCH TO RETURN TO NEXT INSTRUCTION       31750002
*  THIS MOVE CHARACTERS IS EXECUTED TO MOVE OUTPUT TO OUTBUF            31800002
MOVEMSG  MVC   N8(N0,R1),N0(R3)                                         31850002
A5006    DS    0H                                                       31900002
         LA    R2,MSG104     PUT MSG ADDR INTO REG 2 (FIRST LEVEL)      31950002
         LA    R4,INST17     R4= INSERT NO. 17 (LISTMAP)                31952002
         LA    R3,MSG277     PUT MSG ADDR INTO REG 3 (SECOND)           31960002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR PARM AREA           31970002
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(NUM,(R4)),        *32010002
               ID=MAP21,MF=(E,TSTIOPRM)  CALL IKJEGIO                   32020002
         B     RETCODE(R15)   BRANCH AS PER RETURN CODE                 32030002
         SPACE                                                          32032002
LINKFAIL DS    0H                  LINK FAILURE                         32034002
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM AREA        32036002
         LR    R2,R15              R2= RETURN CODE                      32038002
         LR    R3,R1               R3= ABEND CODE                       32038402
         IKJEGSIO SVCERR,SVC=6,RC=(R2),ABENDRG=(R3),                   *32038802
               ID=MAP21,MF=(E,TSTIOPRM)                                 32039202
         B     RETCODE(R15)   BRANCH AS PER RETURN CODE                 32040002
         EJECT                                                          32050002
*********************************************************************** 32052002
*        CONSTANTS AND OTHER INFO. SUPERZAP = ZAP AREA                  32052402
*********************************************************************** 32054002
SUPERZAP DC    50CL1'Z'      SUPERZAP AREA OF MAP                       32060002
         DS    0F            TABLE OF RB TYPES                          32100002
TYPE     DC    C' PRB'       PROGRAM REQUEST BLOCK                      32150002
         DC    C' IRB'       INTERRUPT REQUEST BLOCK                    32200002
         DC    C'SIRB'       SYSTEM INTERRUPT REQUEST BLOCK             32250002
         DC    C'SVRB'       SUPERVISOR REQUEST BLOCK                   32300002
NINE     DC    X'00000009'   USED FOR COMPARISON                        32350002
LNSIZE   DC    X'00400000'   LENGTH FOR OUTPUT MSG                      32400002
SIZERB   DC    X'00280000'   LENGTH FOR OUTPUT MSG                      32450002
SIZESPQ  DC    X'00200000'   LENGTH FOR OUTPUT MSG                      32500002
SIZERB2  DC    X'001C0000'   LENGTH FOR OUTPUT MSG                      32550002
PATTERN  DC    X'40202120'   PATTERN FOR EDIT COMMAND                   32600002
PARSERC  DS    0H                                                       32650002
         DC    A(A0025)      RETURN CODE OF 0 FROM IKJPARS              32700002
         DC    A(A004123A)   RETURN CODE OF 4 FROM IKJPARS              32750002
         DC    A(A004121)    RETURN CODE OF 8 FROM IKJPARS              32800002
         DC    A(A5006)      RETURN CODE OF 12 FROM IKJPARS             32850002
         DC    A(NOROOM)     RETURN CODE OF 16 FROM IKJPARS             32900002
         EJECT                                                          33500002
*********************************************************************** 33510002
*        THE FOLLOWING ARE ALL THE POSSIBLE HEADERS PUTOUT FROM LISTMAP 33520002
*********************************************************************** 33530002
HDR001   DS    0H                                                       33540002
         DC    AL2(ENDHDR1-HDR001)               LENGTH OF HEADING      33542002
         DC    AL2(0)                            TWO BYTES OF ZERO      33544002
         DC    C'REGION SIZE         '           HEADER                 33546002
ENDHDR1  DS    0H                                END                    33548002
HDR002   DS    0H                                                       33548402
         DC    AL2(ENDHDR2-HDR002)               LENGTH OF HEADING      33548802
         DC    AL2(0)                            TWO BYTES OF ZERO      33549202
         DC    C'     PROGRAM NAME  LENGTH   LOCATION'    HEADER        33549602
ENDHDR2  DS    0H                                END                    33549702
HDR003   DS    0H                                                       33549802
         DC    AL2(ENDHDR3-HDR003)               LENGTH OF HEADING      33549902
         DC    AL2(0)                            TWO BYTES OF ZERO      33566602
         DC    C'ACTIVE RBS:  TYPE   PROGRAM-ID' HEADER                 33576602
ENDHDR3  DS    0H                                END                    33578602
HDR004   DS    0H                                                       33580602
         DC    AL2(ENDHDR4-HDR004)               LENGTH OF HEADING      33582602
         DC    AL2(0)                            TWO BYTES OF ZERO      33583002
         DC    C'SUBPOOL INFORMATION:'           HEADER                 33583102
ENDHDR4  DS    0H                                                       33583202
HDR005   DS    0H                                                       33588802
         DC    AL2(ENDHDR5-HDR005)               LENGTH OF HEADING      33590802
         DC    AL2(0)                            TWO BYTES OF ZERO      33592802
         DC    C'UNDER TCB AT         '          HEADER                 33593202
ENDHDR5  DS    0H                                END                    33593602
HDR006   DS    0H                                                       33594002
         DC    AL2(ENDHDR6-HDR006)               LENGTH OF HEADING      33594102
         DC    AL2(0)                            TWO BYTES OF ZERO      33594202
         DC    C'NUMBER   LOCATION   LENGTH'     HEADER                 33594302
ENDHDR6  DS    0H                                END                    33608202
HDR007   DS    0H                                                       33618202
         DC    AL2(ENDHDR7-HDR007)               LENGTH OF MESSAGE      33620202
         DC    AL2(0)                            TWO BYTES OF ZERO      33620602
         DC    C'TASK HAS TERMINATED'            MESSAGE TEXT           33621002
ENDHDR7  DS    0H                                END                    33621402
HDR008   DS    0H                                                       33621802
         DC    AL2(ENDHDR8-HDR008)               LENGTH OF MESSAGE      33621902
         DC    AL2(0)                            TWO BYTES OF ZERO      33622002
         DC    C'TASK IS ACTIVE'                 MESSAGE TEXT           33622102
ENDHDR8  DS    0H                                END                    33626702
         EJECT                                                          33628702
IKJEGPCL IKJPARM                                                        33631502
PRINT    IKJKEYWD                                                       33636102
         IKJNAME  'PRINT',SUBFLD=DSNAME                                 33650002
DSNAME   IKJSUBF                                                        33700002
DSN      IKJPOSIT  DSNAME,PROMPT='DSNAME'                               33750002
         IKJENDP                                                        33800002
         EJECT                                                          33850002
PARSEFLD DC    V(IKJEGPCL)   POINTER TO PARSE PCL                       33900002
************************************************************            33950002
**             STAE RETRY CODE AND CONSTANTS              **            34000002
************************************************************            34050002
MAPSPL   IKJEGSPL RTRY=RETRY,ABNTB=STAETAB,MODNM=IKJEGMAP,TNM=LISTMAP   34100002
STAETAB  DS    0F             EQUATE LABEL TO THIS ADDRESS              34250002
         DC    AL1(99)       POINTER TO CORRECT MSG                     34300002
         DC    AL3(BLOWUP1)  POINTER TO INST AFTER LINK TO IKJPARS      34350002
         DC    X'FF'         END OF TABLE                               34400002
         DS    0H            GET US ON A HALF WORD BOUNDARY             34450002
RETRY    DS    0H             BEGINNING OF RETRY ROUTINE                34500002
         L     R4,CVTPTR     PLACE ADDRESS OF CVT INTO REG 4            34550002
         USING CVT,R4        SET UP ADDRESSABILITY TO CVT DSECT         34600002
         L     R4,CVTTCBP    GET ADDRESS OF CURRENT TCB                 34650002
         L     R4,TCBADR(N0,R4) FROM CVT                                34700002
         DROP  R4                                                       34750002
         DROP  R5            BANISH REG 5 AS AN ADDRESSING REGISTER     34800002
         USING TCB,R4        USE REG 4 TO ADDRESS TCB DSECT             34850002
         L     R9,TCBTRN     PLACE TCOMTAB ADDR INTO REG 9              34900002
         L     R13,REGSAVE2  RESTORE MY SAVE REGISTER                   34950002
         L     R12,MYBASE(R13) RESTORE MY BASE REGISTER                 35000002
         B     A004122       RETURN TO MAINLINE                         35250002
         EJECT                                                          35300002
***********************************************************             41100002
*                                                         *             41150002
*              TCOMTAB DSECT                              *             41200002
*                                                         *             41250002
***********************************************************             41300002
COMDSECT TCOMTAB              MACRO WHICH GENERATES TCOMTAB DSECT       41350002
         EJECT                                                          41400002
         TSTCWORK                                                       41450002
         EJECT                                                          41500002
         IKJPPL                                                         41550002
         EJECT                                                          41600002
************************************************************            41650002
*                                                          *            41700002
*                       PARSE PDE DSECT                    *            41750002
*                                                          *            41800002
************************************************************            41850002
PARSEPDE DSECT               DSECT TO ACCESS PDE CREATED BY PARSE       41900002
PRINTFLG DS    CL1           TWO BYTE FIELD USED TO INDICATE PRESENCE   41950002
PRINTBIT DS    CL1           SWITCH TO TELL IF PRINT WAS ENTERED        42000002
NOTUSED  DS    CL2           EMPTY FIELD                                42050002
PTRDSNME DS    A             POINTER TO DSNAME                          42100002
LENGTH1  DS    CL2           LENGTH OF DSNAME UP TO 44 BYTES            42150002
FLAGS    DS    CL1           FLAGS                                      42200002
RESERVE1 DS    CL1           RESERVED                                   42250002
         EJECT                                                          42300002
************************************************************            42350002
** THIS SECTION CONTAINS ALL DSECTS ACCESSED BY IKJEGMAP  **            42400002
************************************************************            42450002
*                                                          *            42500002
*              TCB  TASK CONTROL BLOCK DSECT               *            42550002
*                                                          *            42600002
************************************************************            42650002
TCBDSECT IKJTCB                                                         42700002
M        EQU   TCBOTC-TCB    MOTHER TASK                                42750002
S        EQU   TCBNTC-TCB    SISTER TASK                                42800002
D        EQU   TCBLTC-TCB    DAUGHTER TASK                              42850002
         EJECT                                                          42900002
*********************************************************************   42950002
*        CDE DSECT                                                      43000002
*********************************************************************   43050002
         IHACDE                                                         43100002
         EJECT                                                          43150002
*********************************************************************   43200002
*        EXTENT LIST DSECT                                              43250002
*********************************************************************   43300002
         IHAXTLST                                                       43350002
         EJECT                                                          43400002
*********************************************************************   43450002
*        LOAD LIST DSECT                                                43500002
*********************************************************************   43550002
         IHALLE                                                         43600002
         EJECT                                                          43650002
CVT      DSECT                                                          43700002
         CVT                                                            43750002
         EJECT                                                          43760002
         IKJRB                                                          43800002
         EJECT                                                          43850002
***********************************************************             43900002
*                                                         *             43950002
*              SPQE  SUBPOOL QUEUE DSECT                  *             44000002
*                                                         *             44050002
***********************************************************             44100002
         IHASPQE                                                        44150002
         EJECT                                                          44200002
***********************************************************             44250002
*                                                         *             44300002
*              DQE   DESCRIPTOR QUEUE ELEMENT DSECT       *             44350002
*                                                         *             44400002
***********************************************************             44450002
         IHADQE                                                         44500002
         EJECT                                                          44550002
***********************************************************             44600002
*                                                         *             44650002
*              PQE    DSECT                               *             44700002
*                                                         *             44750002
***********************************************************             44800002
         IHAPQE                                                         44850002
         END                                                            44900002
