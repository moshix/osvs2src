         TITLE 'IKJEHMEM, PDS MEMBER LISTING MODULE, PROCESS SECTION'   00100020
IKJEHMEM  CSECT                                                         00200020
*A 500500                                                        YM0369 00202001
*D 497000                                                        YM0369 00204001
*A 144500,180500                                                 A46784 00210001
*C 505000                                              A49888 AND M2386 00250001
*********************************************************************** 00300020
*                                                                     * 00400020
*                                                                     * 00600020
* STATUS -- CHANGE LEVEL 00                                     M2386 * 00700001
*                                                                     * 00800020
* FUNCTION --                                                         * 00900020
*    THIS MODULE WILL READ A PDS DIRECTORY, ISOLATE THE ALIAS         * 01000020
*    MEMBER NAMES, AND RETURN, ONE AT A TIME, THE MEMBER NAMES        * 01100020
*    TO THE CALLING PROGRAM.  ALIAS NAMES WILL BE PLACED FOLLOW-      * 01200020
*    ING THE TRUE NAMES THEY CORRESPOND TO.  THIS MODULE IS USED      * 01300020
*    BY LISTALC, LISTCAT, AND LISTDS TO LIST MEMBERS WHEN THE         * 01400020
*    MEMBERS KEYWORD IS SPECIFIED.  A JFCB IS SET TO PREVENT WRITE    * 01500020
*    BACK AND BACKWARD MERGE THEN THE DATA SET IS OPENED TO THE       * 01650020
*    DIRECTORY USING OPEN TYPE=J.  ALL MEMBER NAMES ARE READ          * 01700020
*    INTO CORE AND ARRANGED IN TABLES ACCORDING TO WHETHER THEY       * 01800020
*    ARE TRUE OR ALIAS.  TRUE NAMES ARE KEPT IN COLLATING SEQUENCE    * 01900001
*    AND ALIAS NAMES IN ORDER BY TTR (BY COLLATING ORDER FOR          * 02000001
*    NAMES WITH IDENTICAL TTR'S)WHEN READING IS COMPLETE, OUT-        * 02100001
*    PUT BEGINS.  THE TTR OF EACH TRUE NAME IS COMPARED TO THE        * 02200001
*    TTR OF EACH ALIAS AND ANY EQUALS ARE IDENTIFIED AS ALIAS         * 02300001
*    NAMES FOR THIS TRUE NAME.                                        * 02400020
*                                                                     * 02500020
* ENTRY POINTS --                                                     * 02600020
*         IKJEHMEM - ONLY ONE ENTRY POINT                             * 02700020
*                                                                     * 02800020
* INPUT --                                                            * 02900020
*    A PARM LIST POINTED TO BY REG 1 AND CONTAINING---                * 03000020
*              1  ADR OF COMMUNICATIONS DSECT 'OBTWAD'                * 03100020
*              2  ADR OF LISTFORM OF GETMAIN MACRO                    * 03200020
*              3  ADR OF A BUFFER TO PLACE THE NAMES IN FOR OUTPUT    * 03300020
*              4  ADR OF THE OUTPUT ROUTINE                           * 03400020
*              5  ADR OF LIST FORM OF FREEMAIN MACRO                  * 03500020
*              --ALL POINTERS ARE FULLWORDS                           * 03600020
*                                                                     * 03700020
*    THE DIRECTORY OF THE PDS POINTED TO BY THE OBTDCB                * 03800020
*                                                                     * 03900020
* OUTPUT --                                                           * 04000020
*    A LIST OF PDS MEMBER NAMES AND ASSOCIATED ALIAS                  * 04100020
*                                                                     * 04200020
* EXTERNAL REFERENCES --                                              * 04300020
*    1. LISTALC, MOD IKJEHAL1                                         * 04400020
*    2. LISTCAT, MOD IKJEHCT1                                         * 04500020
*    3. LISTDS, MOD IKJEHDS1                                          * 04600020
*                                                                     * 04700020
* EXITS, NORMAL --                                                    * 04800020
*              A BR 14 TO THE CALLING PROGRAM                         * 05000020
*                                                                     * 05100020
* EXITS, ERROR --                                                     * 05150020
*              A BR 14 TO THE CALLING PROGRAM                         * 05200001
* TABLES/WORK AREAS --                                                * 05250001
*    OBTWAD  THE COMMON COMMUNICATIONS REGION. GOTTEN BY CALLER.      * 05300020
*    IT CONTAINS THE DCB, JFCB, PRIMARY ALIAS TABLE, AND POINTERS     * 05400020
*                                                                     * 05500020
*                                                                     * 05600020
*    TRUE  NAME TABLE                                                 * 05700020
*              ONE OR MORE BLOCKS OF CORE CHAINED TOGETHER AND USED   * 05800020
*              TO CONTAIN THE TRUE NAMES. THE FORMAT IS---            * 05900020
*                                  ***********************            * 06000020
*                             0    *PTR TO NXT CORE BLOCK*            * 06100020
*                             4    *COUNTER              *            * 06200020
*                             8    *PTR TO NXT TRUE BLOCK*            * 06300020
*                             12   *SPARE                *            * 06400020
*                                  --BEGIN NAME ELEMENTS--            * 06500020
*                             16   *FIRST TRUE NAME ELE- *            * 06600020
*                             20   *MENT, NAME IS 8 BYTES*            * 06700020
*                             24   *TTR IS 3 BYTES       *            * 06800020
*                                  *                     *            * 06900020
*                                  *EACH NAME ENTRY IS 11*            * 07000020
*                                  *BYTE LONG. TRUE NAME *            * 07100020
*                                  *ELEMENT LENGTH IS DE-*            * 07200020
*                                  *FINED BY 'TEL'.      *            * 07300020
*                                  *                     *            * 07400020
*                                  *TABLE BLOCK LENGTH IS*            * 07500020
*                                  *DEFINED BY 'BLKLEN'. *            * 07600020
*                                                                     * 07700020
*    ALIAS NAME TABLE                                                 * 07800020
*              THE FIRST ALIAS NAME TABLE IS AN AREA OF DSECT OBTWAD. * 07900020
*              IF ADDITIONAL BLOCKS ARE NECESSARY, CORE BLOCKS THE    * 08000020
*              SAME SIZE AS THOSE FOR THE TRUE NAME TABLE ARE GOTTEN. * 08100020
*              THE FORMAT OF THE ALIAS NAME TABLE IS.                 * 08200020
*                                                                     * 08300020
*                                  *******************                * 08400020
*                             0    *NXT CORE BLK PTR *                * 08500020
*                             4    *UNUSED           *                * 08600020
*                             8    *NXT ALIAS BLK PTR*                * 08700020
*                             12   *SPARE            *                * 08800020
*                                  --BEGIN NAME BLKS--                * 08900020
*                             16   *PTR TO NXT NAME  *                * 09000020
*                             20   *NAME (NAME FIELD *                * 09100020
*                             24   * IS 8 BYTES).    *                * 09200020
*                             28   *TTRC FOR ALIAS   *                * 09300020
*                             32   *NXT ALIAS NAME   *                * 09400020
*                                  *ENTRY            *                * 09500020
*                                  *                 *                * 09600020
*                                  *EACH ALIAS BLK IS*                * 09700020
*                                  *16 BYTES LONG.   *                * 09800020
*                                  *THE LENGTH IS DE-*                * 09900020
*                                  *FINED BY 'AEL'.  *                * 10000020
*                                                                     * 10100020
*                                                                     * 10200020
*                                                                     * 10300020
* ATTRIBUTES --                                                       * 10400020
*    REENTRANT, READ ONLY, AND REFRESHABLE.                           * 10500020
*                                                                     * 10600020
* CHARACTER CODE DEPENDENCY --                                        * 10750001
*    THIS CSECT MUST BE REASSEMBLED FOR A CHANGE OF CHARACTER CODE.   * 10800020
*                                                                     * 11000020
* NOTES --                                                            * 11050001
*    N/A                                                              * 11060001
*                                                                     * 11070001
*********************************************************************** 11100020
R0       EQU   0                   REGISTER 0                           11200001
R1       EQU   1                   REGISTER 1                           11300001
R2       EQU   2                   REGISTER 2                           11400001
R3       EQU   3                   REGISTER 3                           11500001
R4       EQU   4                   REGISTER 4                           11600001
R5       EQU   5                   REGISTER 5                           11700001
R6       EQU   6                   REGISTER 6                           11800001
R7       EQU   7                   REGISTER 7                           11900001
R8       EQU   8                   RETURN REG FOR SUBROUTINE LINKAGE    12000020
R9       EQU   9                   REGISTER 9                           12100001
R10      EQU   10                  SPARE REGISTER                       12200020
R11      EQU   11                  BASE REG FOR THIS MODULE             12300020
R12      EQU   12                  BASE REG FOR OBTWAD DSECT            12400020
R13      EQU   13                  REGISTER 13                          12500001
R14      EQU   14                  REGISTER 14                          12600001
R15      EQU   15                  REGISTER 15                          12700001
BSP      EQU   1                   SUBPOOL NUMBER FOR TABLE BLOCKS      12800020
SSP      EQU   1                   SAVE AREA SUBPOOL                    12900020
FTSW     EQU   X'01'               FOR SETTING AND TESTING FIRST ENTRY  13000020
OPENOK   EQU   X'10'               USED TO TEST FOR SUCCESSFUL OPENS.   13100020
ALIASBIT EQU   X'80'               TO TEST FOR ALIAS NAMES              13200020
CODE1    EQU   4                   GETMAIN FAILED                       13300020
CODE2    EQU   8                   I/O ERROR READING DIRECTORY          13400020
CODE3    EQU   12                  DIRECTORY ERROR                      13500020
AEL      EQU   16                  SYMBOLIC FOR LENGTH OF ALAIAS ELEMEN 13600020
TEL      EQU   11                  SYM FOR LNGTH OF TRUE NAME TBL ELE   13700020
BLKLEN   EQU   2048                LENGTH OF GETMAIN CORE FOR A BLK     13800020
BLANK    EQU   C' '                SYMBOLIC FOR A BLANK                 13900020
COMMA    EQU   C','                SYMBOLIC FOR A COMMA                 14000020
RPAREND  EQU   C')'                SYMBOLIC FOR A RIGHT PAREND          14100020
         IEZBITS                                                        14150001
RECFMFIX EQU   X'80'               DCB RECFM FIXED               A46784 14450001
****EQUATES FOR OFFSETS AND SHORT LENGTHS*****                          14500020
D0       EQU  0                    ZERO                                 14600001
D1       EQU   1                   ONE                                  14700001
D2       EQU   2                   TWO                                  14800001
D3       EQU   3                   THREE                                14900001
D4       EQU   4                   FOUR                                 15000001
D5       EQU   5                   FIVE                                 15100001
D6       EQU   6                   SIX                                  15200001
D7       EQU   7                   SEVEN                                15300001
D8       EQU   8                   EIGHT                                15400001
D9       EQU   9                   NINE                                 15500001
D10      EQU   10                  TEN                                  15600001
D11      EQU   11                  ELEVEN                               15700001
D12      EQU   12                  TWELVE                               15800001
D16      EQU   16                  SIXTEEN                              15900001
USERMSK  EQU   31                  MASK FOR USER DATA CNT FIELD         16000001
HEXFF     EQU   X'FF'              FOXES FOR END OF POINTERS            16100001
SAVELEN  EQU   112                 LENGTH OF SAVE AREA IN GOTTEN CORE   16200001
D15       EQU   15                               LENGTH OF FIFTEEN      16300001
         EJECT                                                          16400020
MEM01    SAVE  (14,12),,*                                               16500020
         LR    R11,R15             PICK UP ENTRY POINT FOR BASE REG     16600020
         USING MEM01,R11                                                16700020
         USING OBTWAD,R12                                               16800020
         LTR   R6,R1               CHECK FOR AND SAVE PARM PTR          16900020
         BZ    MEM96               IF PARM REG 0, RETURN TO CALLER      17000020
         GETMAIN R,LV=SAVELEN,SP=SSP                                    17100020
         ST    R13,D4(R1)           BACK CHAIN SAVE AREA                17200020
         ST    R1,D8(R13)           FORWARD CHAIN SAVE AREAS            17300020
         LR    R13,R1              NEW SAVE AREA ESTABLISHED            17400020
         L     R12,D0(R6)           SET UP DSECT PTR.                   17500020
         ST    R6,PCL              SAVE A PTR TO PARM LIST              17600020
         XC   RETCODE,RETCODE      CLEAR RETURN CODE                    17700001
         SPACE 2                                                        17800020
         LA    R2,OBTDCB           PTR TO DCB IN DSECT                  17900020
         USING IHADCB,R2                                                18000020
         MVI   DCBRECFM,RECFMFIX   SET RECFM TO FIXED            A46784 18050001
         SPACE 2                                                        18100020
         OI    JFCBTSDM,BIT4+BIT6  TURN ON THE DON'T MERGE BITS IN JFCB 18200020
         NI    JFCBIND1,HEXFF-BIT7  TURN OFF MEMBER BIT IN THE JFCB.    18300020
         LA    R15,IOERR           ADR OF SYNAD ROUTINE                 18400020
         ST    R15,DCBSYNAD        SET UP SYNAD EXIT.                   18500020
         XC    RETCODE,RETCODE     CLEAR CODE WORD                      18600020
         LA    R15,EOFDIR          ADR OF END OF FILE ROUTINE           18700020
         ST    R15,DCBEODAD        SET UP EOF ROUTINE EXIT              18800020
         LA    R1,RDJL             PTR TO MACRO LIST FORM               18900020
         SPACE 2                                                        19000020
         OPEN  ((R2)),TYPE=J,MF=(E,(1))                                 19100020
         SPACE 2                                                        19200020
         LA    R3,MEMBUF           GET INPUT AREA ADDR                  19300020
         SPACE                                                          19400020
*  GET A READ INITIATED TO OVERLAP THE INITIALIZATION ROUTINE.          19500020
         SPACE                                                          19600020
         READ  RDECB,SF,(R2),(R3),,,,MF=E                               19700020
*********************************************************************** 19720020
*** INITIALIZE THE ALIAS AND TRUE NAME TABLES                         * 19740020
*                                                                     * 19760020
*                                                                     * 19780020
         SPACE 2                                                        19800020
         XC    PBOB(D4),PBOB        CLEAR PTR TO BEGINNING OF BLKS      19900020
         BAL   R8,MEMGETM          GO GET FIRST BLK FOR NAME TABLE      20000020
         SPACE                                                          20100020
         LR    R5,R14              GET PTR TO FIRST TRUE BLK            20200020
         LA    R14,BLKLEN-TEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   20300020
         ST    R14,PECTB           SET UP END OF BLK ADDR               20400020
         LA    R7,D16(R5)           CALCULATE ADR OF 1ST TRUE ELEMENT   20500020
         ST    R7,PSTNQ            SAVE IT IN THE PTR TO 1ST T NAME     20600020
         SPACE 2                                                        20700020
         LA    R6,MEMATBL          ADDR OF FIRST ALIAS TABLE            20800020
          XC    D0(D16,R6),D0(R6)  CLEAR CONTROL AREA                   20900020
         LA    R14,MEMATBL+MEMATBLL-AEL  COMPUTE ALIAS END OF TBL ADR   21000020
         ST    R14,PECAB           SET UP END OF TABLE ADDR             21100020
         SPACE 2                                                        21200020
         ST    R5,PCTB             SAVE ADDR OF CUR T-NAME BLK          21300020
         ST    R6,PCAB             SAVE ADDR OF CUR A-NAME BLK          21400020
         LA    R6,D16(R6)           UPDATE PTR FOR NEW ALIAS MEMBER     21500020
          XC    D0(D4,R6),D0(R6)   CLEAR FORWARD PTR OF STOP ELMNT      21600001
         MVC   D4(D8,R6),HEXFFF      SET UP STOPPER FOR NAMES           21700020
         MVC   D12(D3,R6),HEXFFF     SET UP STOPPERS FOR TTRS           21800020
          XC    D15(D1,R6),D0(R6)   MAKE C BYTE ZERO                    21900020
         ST    R6,PSANQ            SET PTR TO START OF A-NAME QUEUE     22000020
         LA    R6,AEL(R6)          INCRE PTR TO NXT EMPTY ALIAS SLOT    22100020
         SPACE 3                                                        22200020
*********************************************************************** 22300020
*                                                                     * 22400020
*  SETUP IS NOW COMPLETE, BEGIN PROCESSING BY CHECKING READ OF FIRST  * 22500020
*  DIRECTORY BLOCK WHICH WAS ISSUED AFTER OPEN                        * 22600020
*                                                                     * 22700020
*  REGISTER USAGE IN THE PROCESS SECTION BETWEEN 'MEM16' AND 'MEM50'  * 22800020
*        R0    SPACE                                                  * 22900020
*        R1    USED BY THE READ AND CHECK MACROS                      * 23000020
*        R2    POINTS TO THE DCB FOR THE DIRECTORY                    * 23100020
*        R3    POINTS TO THE END OF THE CURRENT DIRECTORY BLOCK       * 23200020
*        R4    SPACE REGISTER IN THIS SECTION                         * 23300020
*        R5    POINTS TO BEGINNING OF CURRENT TRUE NAME TABLE BLOCK   * 23400020
*        R6    POINTS TO THE CURRENT POSITION IN THE ALIAS NAME TABLE * 23500020
*        R7    POINTS TO CURRENT POSITION IN THE TRUE NAME TABLE BLOCK* 23600020
*        R8    USED AS A RETURN REGISTER IN SUBROUTINE LINKAGE        * 23700020
*        R9    POINTS TO THE CURRENT POSITION IN INPUT DIRECTORY BLOCK* 23800020
*                                                                     * 23900020
*********************************************************************** 24000020
MEM16    EQU   *                                                        24100020
         CHECK RDECB                                                    24200020
         LH    R15,MEMDATA         GET THE DIRECTORY BLK BYTE COUNT     24300020
         CH    R15,DIRMIN          IS THE COUNT AT LEAST 14 BYTES       24400020
         BL    DIRSERR             IF NOT, BRANCH TO DIR SIZE ERROR     24500020
         CH    R15,DIRMAX          IS THE COUNT     HIGHER THAN 256     24600020
         BH    DIRSERR             IF SO, BRANCH TO DIR SIZE ERROR      24700020
         LA    R3,MEMDATA(R15)     COMPUTE ADR OF END OF CUR DIR BLK    24800020
         LA    R9,MEMDATA+D2        UP PTR TO FIRST DIRECTORY ENTRY     24900020
         SPACE 2                                                        25000020
MEM20    CLC   D0(D8,R9),HEXFFF      IS THIS NAME THE END OF DIRECOTRY  25100020
         BE    MEM50               IF SO, GO WRITE OUT NAMES            25200020
         TM    TEL(R9),ALIASBIT     IS THIS NAME TRUE OR ALIAS          25300020
         BO    A02                 IF ALIAS, BRANCH                     25400020
         C     R7,PECTB            IS THIS PAST THE BLOCK               25500020
         BL    T06                 IF NOT, SKIP GETMAIN                 25600020
         BAL   R8,MEMGETM          GO GET ANOTHER BLOCK                 25700020
         ST    R14,D8(R5)           CHAIN NEW BLOCK INTO TRUE BLK CHAIN 25800020
         LR    R5,R14              POINT TO NEW TRUE BLK                25900020
         LA    R14,BLKLEN-TEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   26000020
         ST    R14,PECTB           SAVE IT TO COMPARE AGAINST           26100020
         LA    R7,D16(R5)           RESET NEW ELEMENT PTR               26200020
         ST    R5,PCTB             SAVE ADR OF NEW CUR TRUE BLK         26300020
         SPACE 2                                                        26400020
T06      EQU   *                                                        26500020
          MVC   D0(TEL,R7),D0(R9)     MOVE NAME AND TTR TO TRUE NAME    26600020
         L     R14,D4(R5)          LOAD COUNTER VALUE FROM CUR TRUE TBL 26700001
         LA    R14,D1(R14)          INCREMENT                           26800020
         ST    R14,D4(R5)           SAVE UPDATED COUNTER VALUE          26900020
         LA    R7,TEL(R7)          INCREMENT PTR TO NXT SLOT FOR T-NAME 27000020
         SPACE 2                                                        27100020
MEM30    LA    R14,USERMSK           SET UP MASK TO PICK UP USER DATA   27200020
         EX    R14,ANDI            TURN OFF ALIAS AND TTRN COUNT        27300020
         IC    R14,D11(R9)          GET HALFWORD COUNT OF USER DATA     27400020
         SLL   R14,D1               DOUBLE IT TO GET BYTES              27500020
         LA    R9,D12(R14,R9)       COMPUTE BYTES USED OF CUR DIR BLK   27600020
         CR    R9,R3               HAS CUR DIRECTORY BLK BEEN EXAUSTED  27700020
         BL    MEM20               IF NOT GET NXT NAME                  27800020
         BH    DIRLERR             IF HIGH, LENGTH IS IN ERROR, BRANCH  27900020
         SPACE                                                          28000020
*  FALL THRU TO READ THE NXT BLK IF THE END OF THIS BLK IS REACHED      28100020
         SPACE                                                          28200020
         LA    R3,MEMBUF           SET UP INPUT AREA ADR FOR READ       28300020
         READ  RDECB,SF,(R2),(R3),,,,MF=E                               28400020
         B     MEM16               GO CHECK THE READ                    28500020
         SPACE 2                                                        28600020
A02      EQU   *                                                        28700020
         C     R6,PECAB            COMPARE NEW ELEMENT ADR TO EOB ADR   28800020
         BNH   A10                 IF ENTRY WILL FIT, SKIP GETMAIN      28900020
         BAL   R8,MEMGETM          GO GET ANOTHER BLOCK OF STORAGE      29000020
         L     R15,PCAB            PTR TO CURRENT ALIAS BLK             29100020
         ST    R14,D8(R15)          SET PTR TO NEXT ALIAS BLK           29200020
         ST    R14,PCAB            UPDATE PTR TO CURRENT ALIAS BLOCK    29300020
         LA    R6,D16(R14)          UPDATE NEW ELEMENT PTR              29400020
         LA    R14,BLKLEN-AEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   29500020
         ST    R14,PECAB           SAVE TO COMPARE AGAINST              29600020
         SPACE                                                          29700020
A10      EQU   *                                                        29800020
         MVC   D4(D12,R6),D0(R9)      MOVE NAME AND TTRC TO NEXT ENTRY  29900020
         LA    R14,PSANQ           GET ADR OF START OF ALIAS NAME Q.    30000020
         SPACE                                                          30100020
A14      L     R15,D0(R14)          ADR OF NEXT ALIAS NAME ENTRY        30200020
          CLC   D12(D3,R6),D12(R15) COMPARE TTRS OF NEW ELE TO OLD      30300020
         BL    A20                 IF LOW, INSERT NEW ELE HERE          30400020
         LR    R14,R15             UPDATE PTR TO NEXT ELE               30500020
         B     A14                 GO BACK AND CHECK THIS ELE           30600020
         SPACE                                                          30700020
A20      EQU   *                                                        30800020
         ST    R15,D0(R6)           STORE FORWARD PTR IN NEW ELEMENT    30900020
         ST    R6,D0(R14)           UPDATE FORWARD PTR OF PREV ELE      31000020
         LA    R6,AEL(R6)          INCRE PTR TO NXT EMPTY ALIAS SLOT    31100020
         B     MEM30               GO PROCESS NEXT NAME.                31200020
*                                                                       31220020
*** SYNAD ROUTINE WILL PASS ERROR INFORMATION BACK TO CALLER         ** 31240020
*                                                                       31260020
         SPACE 2                                                        31300020
IOERR    EQU   *                                                        31400020
         LR    R3,R13              SAVE REG13 IF RLSE DOESNT WORK       31500001
         LA    R2,SYNMSG1          IN MEM DSECT AND CALLING RTN         31600001
         SYNADAF  ACSMETH=BSAM     R0 AND R1 SAME AS ENTRY              31700001
         MVC   D0(L'SYNMSG1,R2),SYNOFF(R1)  PUT INTO BUFF               31800020
         MVI   SYNMSG,SYNLEN       TEXT LENGTH IS SIXTY                 31900001
         SYNADRLS                  RELEASE CORE FOR SYNADAF             32000001
         LR    R13,R3              RESTORE REG 13                       32100001
         LA    R2,CODE2            SET CODE FOR I/O ERROR               32200001
         ST    R2,RETCODE          SAVE IT FOR CALLER                   32300020
         B     MEM50               PROCESS NAMES READ AND EXIT          32400001
         SPACE 2                                                        32500020
DIRLERR  EQU    *                                                       32600020
DIRSERR  EQU    *                                                       32700020
EOFDIR   EQU   *                                                        32800020
         LA    R2,CODE3            SET CODE FOR DIRECTORY ERROR         32900001
         ST    R2,RETCODE          SAVE CODE FOR CALLER                 33000020
         LA    R8,MEM90            SET UP RETURN ADR                    33100020
         B     MEM50               PROCESS THOSE NAMES THAT WERE READ.  33200020
         SPACE 2                                                        33300020
         EJECT                                                          33400020
*********************************************************************** 33500020
*                                                                     * 33600020
*  THIS ROUTINE PROCESSES THE TRUE AND ALIAS BLOCKS PREPARED BY THE   * 33700020
*  READ ROUTINE.  THE FOLLOWING ACTIONS TAKE PLACE.                   * 33800020
*    1. THE NEXT NAME FROM A TRUE BLOCK IS PICKED UP AND MOVED TO THE * 33900020
*       OUTPUT BUFFER.                                                * 34000020
*    2. THE TTR OF THE TRUE NAME IS COMPARED WITH ALL ALIAS TTR LOWER * 34100020
*       OR EQUAL IN NUMERIC VALUE AND ANY EQUALS ARE MOVED TO THE     * 34200020
*       BUFFER WITH THE QUALIFIER 'ALIAS('.                           * 34300020
*    3. CONTROL IS PASSED TO THE CALLING PROGRAMS OUTPUT ROUTINE TO   * 34400020
*       WRITE OUT THE BUFFER.                                         * 34500020
*    4. WHEN THE TRUE NAMES ARE EXAUSTED, ANY ALIAS NAMES REMAINING   * 34600020
*       ARE GROUPED BY TTR AND WRITTEN OUT WITH A MESSAGE THAT NO     * 34700020
*       TRUE NAME EXIST FOR THEM.                                     * 34800020
*                                                                     * 34900020
*  REGISTER USAGE IN THE PROCESS SECTION BETWEEN 'MEM50' AND 'MEM90'  * 35000020
*        R0    SPARE                                                  * 35100020
*        R1    SPARE                                                  * 35200020
*        R2    USED AS CTR FOR NUMBER OF ALIAS THAT CAN GO INTO BUF   * 35300020
*        R3    PTS TO PREV ALIAS ENTRY OR START OF ALIAS QUEUE PTR    * 35400020
*        R4    HOLDS COUNT OF REMAINING NAMES IN CUR TRUE TABLE BLOCK * 35500020
*        R5    POINTS TO THE CURRENT ALIAS ENTRY                      * 35600020
*        R6    POINTS TO THE CURRENT TRUE ENTRY                       * 35700020
*        R7    POINTS TO THE CURRENT POSITION IN THE OUTPUT BUFFER    * 35800020
*        R8    RETURN REGISTER FOR SUBROUTINE CALLS                   * 35900020
*        R9    POINTS TO ENTRY POINT FOR THE OUTPUT ROUTINE           * 36000020
*                                                                     * 36100020
*********************************************************************** 36200020
         SPACE                                                          36300020
MEM50    EQU   *                                                        36400020
         SPACE                                                          36500020
*  INITIALIZE FOR THE OUTPUT ROUTINE.                                   36600020
         SPACE                                                          36700020
         L     R7,POUTBUF          SET UP PTR TO OUTPUT BUFFER          36800020
         L     R9,PWRITE           SET UP ADR OF OUTPUT ROUTINE         36900020
         L     R6,PBOB             PTR TO BEGINNING OF BLOCKS           37000020
         L     R4,D4(R6)            GET COUNT OF NAMES IN 1ST TRUE BLK  37100020
         ST    R6,PCTB             SAVE PTR TO THIS BLOCK               37200020
         LTR   R4,R4               TEST FOR A PDS WITH NO MEMBERS       37300020
         BNP   MEM86               IF NO TRUE NAMES, GO CHECK ALIAS     37400020
         LA    R6,AEL-TEL(R6)       ADR OF START OF NAMES -1 ELEMENT    37500020
         SPACE 2                                                        37600020
MEM54    EQU   *                                                        37700020
         LA    R6,TEL(R6)          UPDATE THE TRUE NAME PTR             37800020
         LA    R5,PSANQ            ADR OF PTR TO START OF ALIAS NAME Q  37900020
         MVC   D2(D8,R7),D0(R6)    MOVE TRUE NAME TO BUFF               38000001
         LA    R14,D8               LOAD MAXIMUM MEMBER NAME LENGTH     38100020
         LA    R15,D9(R7)           SET UP PTR TO END OF NAME           38200020
         SPACE 2                                                        38300020
MEM60    EQU   *                                                        38400020
         CLI   D0(R15),BLANK        SEARCH NAME RIGHT TO LEFT FOR BLANK 38500020
         BNE   MEM64               BRANCH OUT OF LOOF ON FIRST NONBLANK 38600020
         BCTR  R15,D0               BACK UP TEMP BUF PTR ONE CHAR.      38700020
         BCT   R14,MEM60           REDUCE REMAINING CHAR COUNT, RECHECK 38800020
         SPACE 2                                                        38900020
*  AT THIS POINT, EITHER A NON-BLANK CHAR HAS BEEN FOUND AND REG 14     39000020
*  HOLDS THE LENGTH OF THE NONBLANK NAME OR ALL 8 CHAR WERE ZERO AND    39100020
*  REG 14 HAS ZERO.                                                     39200020
         SPACE                                                          39300020
MEM64    EQU   *                                                        39400020
         LA    R7,D2(R14,R7)        ADD SPACER LENGTH AND NAME LENGTH   39500020
         SPACE                                                          39600020
*  NEXT CHECK FOR POSSIBLE ALIAS NAMES FOR THIS MEMBER                  39700020
MEM66    EQU   *                                                        39800020
         SPACE                                                          39900020
         LR    R3,R5               SAVE ADR OF PREVIOUS PTR FIELD IN R2 40000001
         L     R5,D0(R5)            GET PTR TO NEXT ALIAS NAME          40100020
          CLC   D8(D3,R6),D12(R5)  COMPARE TRUE TTR TO ALIAS TTR        40200001
         BL    MEM80               IF LOW, SKIP REMAINING ALIAS NAMES   40300020
         BH    MEM66               IF HIGH CONTINUE SEARCH              40400020
*   FALL THROUGH ON EQUAL, THIS IS A FIND                               40500020
         SPACE 3                                                        40600020
MEM70    EQU   *                                                        40700020
         LA    R2,D5                SET UP COUNTER FOR BUFFER FULL TEST 40800020
         MVC   D2(L'AHDR,R7),AHDR   MOVE PREFIX FOR ALIAS NAMES TO BUF  40900020
         LA    R7,D2+L'AHDR(R7)     INCREMENT BUF PAST LEFT PAREND      41000020
         SPACE 2                                                        41100020
*  NEXT MOVE IN ALIAS NAME AND ELIMINATE TRAILING BLANKS                41200020
         SPACE                                                          41300020
MEM72    EQU   *                                                        41400020
         MVC   D0(D8,R7),D4(R5)       MOVE ALIAS NAME TO BUF            41500020
         LA    R15,D7(R7)           SET PTR TO LAST CHAR OF NAME        41600020
         LA    R14,D8               SET UP NON-BLANK CHAR COUNTER       41700020
         SPACE 2                                                        41800020
MEM74    EQU   *                                                        41900020
         CLI   D0(R15),BLANK        IS THIS CHAR A BLANK                42000020
         BNE   MEM76               IF NOT, WE HAVE A FIND, BRANCH       42100020
         BCTR  R15,D0               BACK UP NAME PTR ONE CHAR           42200020
         BCT   R14,MEM74           LOOP FOR 8 CHAR, THEN FALL THRU      42300020
         SPACE 2                                                        42400020
*  CHECK TO SEE IF THIS TRUE NAME HAS MORE ALIAS NAMES.                 42500020
         SPACE                                                          42600020
MEM76    EQU   *                                                        42700020
         L     R5,D0(R5)            GET ADR OF NEXT ALIAS ENTRY         42800020
         LA    R7,D0(R14,R7)        INCREMENT BUF PTR PAST ALIAS NAME   42900020
         CLC   D8(D3,R6),D12(R5)    COMPARE TRUE TTR TO NXT ALIAS TTR   43000020
         BNE   MEM78               BRANCH IF NO MORE ALIAS FOR THIS TRU 43100020
         MVI   D0(R7),COMMA        ANOTHER ALIAS WAS FOUND, SEPARATE IT 43200001
         LA    R7,D1(R7)            UPDATE BUF PTR PAST COMMA           43300020
         BCT   R2,MEM72            IF THE BUFFER ISN'T FULL, BRANCH     43400020
         SPACE 2                                                        43500020
*  IF THERE IS NO ROOM IN THE BUFFER FOR THE NEXT ALIAS NAME, GO TO THE 43600020
*  OUTPUT ROUTINE TO WRITE THE BUFFER.                                  43700020
         SPACE                                                          43800020
         LR    R14,R7              CUR BUF POSITION PTR TO R14 FOR WRIT 43900020
         L     R7,POUTBUF          PTR TO OUTPUT BUFFER                 44000020
         BALR  R8,R9               GO TO THE OUTPUT WRITER ROUTINE      44100020
         LA    R7,D11(R7)           INDENT INTO BUFFER FOR CONT.        44200020
         LA    R2,D7                RESET BUFFER FULL TEST COUNTER      44300020
         B     MEM72               GO MOVE ALIAS INTO BUFFER            44400020
         SPACE 2                                                        44500020
*  WHEN ALL ALIAS NAMES FOR THIS TRUE NAME ARE FOUND, CLOSE PAREND,     44600020
*  DEQUEUE ALL ALIAS NAMES USED, AND WRITE THE BUFFER.                  44700020
         SPACE                                                          44800020
MEM78    EQU   *                                                        44900020
         MVI   D0(R7),RPAREND       CLOSE PARENTHISIS                   45000020
         LA    R7,D1(R7)            INCREMENT PTR PAST PAREND           45100020
         ST    R5,D0(R3)           THIS EFFECTIVELY DEQUEUS THE ALIAS'S 45200001
         SPACE                                                          45300020
*  NEXT OUTPUT THE BUF AND CHECK FOR MORE NAMES TO PROCESS              45400020
         SPACE                                                          45500020
MEM80    EQU   *                                                        45600020
         LR    R14,R7              CUR BUF POSITION PTR TO R14 FOR WRIT 45700020
         L     R7,POUTBUF          PTR TO OUTPUT BUFFER                 45800020
         BALR  R8,R9               GO TO OUTPUT ROUTINE                 45900020
         BCT   R4,MEM54            IF MORE NAMES IN THIS BLOCK, PROCESS 46000020
         L     R14,PCTB            GET ADR OF CUR TRUE NAME BLOCK       46100020
         L     R15,D8(R14)          GET FORWARD TRUE BLOCK PTR          46200020
         LTR   R15,R15             TEST FOR PTR BEING ZERO              46300020
         BZ    MEM86               IF ZERO, BRANCH, LOOK FOR ORPHAN AL  46400020
         L     R4,D4(R15)           OTHERWISE GET CTR FROM NEXT BLOCK   46500020
         LA    R6,AEL-TEL(R15)     SET PTR ONE BEFORE FIRST NAME ENTRY  46600001
         ST    R15,PCTB                                                 46700020
         B     MEM54               GO PROCESS NAMES THIS BLOCK          46800020
         SPACE 2                                                        46900020
MEM86    EQU   *                                                        47000020
         LA    R3,PSANQ            SET UP TO DEQUEUE ALIAS NAMES        47100020
         L     R5,PSANQ            RESET PTR TO FIRST A LIAS ENTRY      47200020
         CLC   D4(D8,R5),HEXFFF      TEST IF ONLY ENTRY IS THE STOPPER  47300020
         BE    MEM90               IF SO, REQUEST COMPLETE, BRANCH      47400020
         TM    MEMATBL+D4,FTSW      IS THIS THE FIRST TIME THRU.        47500020
         BO    MEM88               IF NOT, BRANCH AROUND INITIALIZATION 47600020
         L     R7,POUTBUF          POINT TO BUFFER AREA                 47700020
         LR    R14,R7              INDICATE NO DATA TO PRINT            47800020
         L     R9,PWRITE           ADDRESS OF WRITE ROUTINE             47900001
         BALR  R8,R9               GO SKIP A LINE                       48000020
         LA    R15,L'MMSG01        LENGTH OF MESSAGE TO WRITE           48100020
         LA    R14,MMSG01          ADDRESS OF MESSAGE                   48200020
         BCTR  R15,R0              DEREMENT FOR MVC                     48300020
         EX   R15,MSGMV            MOVE MESSAGE                         48400020
         LA    R14,D1(R15,R7)      CURRENT BUFFER POINTER               48500001
         BALR  R8,R9               GO WRITE THE MESSAGE                 48600001
         OI    MEMATBL+D4,FTSW      TURN ON FIRST TIME SW               48700020
         SPACE 2                                                        48800020
*  SET UP REGS TO CAUSE ALIAS TO BE PRINTED WHEN NO TRUE NAME EXIST.    48900020
         SPACE                                                          49000020
MEM88    EQU   *                                                        49100020
         LA    R4,D1                SET TRUE NAME CTR TO SHOW COMPLETE  49200020
         LA    R6,D4(R5)            POINT R6 AT ALIAS NAME AND TTR      49300020
         B     MEM70               GO PROCESS REMAINING ALIAS NAMES     49400020
         SPACE 3                                                        49500020
MEM90    EQU   *                                                        49600020
         LA    R5,PBOB             SET UP PTR TO CORE BLKS              49800020
         SPACE                                                          49900020
MEM92    EQU   *                                                        50000020
         L     R1,PFREEML          ADR OF FREEMAIN MACRO LIST    YM0369 50050001
         L     R6,PBOB             GET ADR OF A BLK TO BE FREED         50100020
         LTR   R6,R6               CHECK WHETHER ANY BLKS TO FREE       50200020
         BZ    MEM94               IF ZERO, NO MORE BLKS TO FREE        50300020
         L     R7,D0(R6)            GET PTR TO NEXT BLK BEFOR FREEING   50400020
         FREEMAIN E,A=(R5),LV=BLKLEN,SP=BSP,MF=(E,(1))            M2386 50500001
         ST    R7,PBOB             STORE PTR TO NEXT BLOCK              50600020
         B     MEM92               FREE MORE BLOCKS                     50700020
         SPACE                                                          50800020
MEM94    EQU   *                                                        50900020
         LA    R1,CLOSEL           PTR TO LIST FORM OF CLOSE MACRO      51000020
         LA    R2,OBTDCB           PTR TO DCB IN DSECT                  51100020
         CLOSE ((R2)),MF=(E,(1))                                        51200020
         SPACE 2                                                        51300020
MEM95    EQU   *                                                        51400020
         LR    R1,R13              SET UP TO FREE SAVE AREA             51500020
         L     R13,D4(R13)          RESTORE PTR TO CALLERS SAVE AREA    51600020
         FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP                             51700020
         SPACE 2                                                        51800020
MEM96    L     R15,RETCODE         PICK UP PROPER RETURN CODE           51900020
         RETURN (14,12),T,RC=(15)                                       52000020
         EJECT                                                          52100020
*********************************************************************** 52200020
*                                                                     * 52300020
*  MEMGETM  THIS SUBROUTINE ISSUES THE CONDITIONAL GETMAINS FOR NAME  * 52400020
*  TABLE CORE.                                                        * 52500020
*        ENTRY BY A BAL  R8,MEMGETM                                   * 52600020
*        ADDRESS OF CORE GOTTEN IS RETURNED IN REG 14 IF GETMAIN OK   * 52700020
*        ERROR (INSUFFICIENT CORE AVAILABLE) EXIT IS TO GETMERR       * 52800020
*        REGS OTHER THAN R14 ARE PRESERVED ON NORMAL EXIT             * 52900020
*                                                                     * 53000020
*********************************************************************** 53100020
         SPACE                                                          53200020
MEMGETM  EQU   *                                                        53300020
         STM   R15,R2,GETMSAV      SAVE REGS BEFORE USE                 53400020
         LA    R2,PBOB             GET PTR TO BEGINNING OF BLKS         53500020
MGM10    EQU   *                                                        53600020
         L     R15,D0(R2)           GET CONTENTS OF PTR FIELD           53700020
         LTR   R15,R15             IS THE PTR FIELD ZERO                53800020
         BZ    MGM20               IF ZERO, BRANCH, END OF CHAIN FOUND  53900020
         LR    R2,R15              NOT ZERO, SET UP FOR NXT BLK PTR FLD 54000020
         B     MGM10               LOOP BACK TO CHECK NEXT FIELD        54100020
MGM20    EQU   *                                                        54200020
         L     R1,PGETML           ADR OF LIST FORM OF GETMAIN MACRO    54300020
         GETMAIN A=(R2),SP=BSP,LV=BLKLEN,MF=(E,(R1))                    54400020
         B     CHECKMGM(R15)       GO ANALYZE GETMAIN RETURN CODE       54500020
CHECKMGM B     MGMOK               RETURN CODE EQ ZERO                  54600020
         B     MGMERR              RETURN CODE EQ FOUR                  54700020
MGMOK    EQU   *                                                        54800020
         L     R14,D0(R2)           ADR OF GOTTEN CORE CHAINED TO LAST  54900020
         LM    R15,R2,GETMSAV      RESTORE REGS                         55000020
          XC    D0(D16,R14),D0(R14)  CLEAR PTR AREA OF BLOCK            55100020
         BR    R8                  RETURN TO CALLER                     55200020
         SPACE                                                          55300020
MGMERR   EQU   *                                                        55400020
*  IF A GETMAIN ERROR OCCURS, THE FOLLOWING ROUTINE IS USED.            55500020
*                                                                     * 55600020
         LA    R2,CODE1            MSG CODE FOR INSUFFIENT CORE         55700020
         ST    R2,RETCODE            SAVE CODE FOR RETURN TO CALLER     55800020
         B     MEM90               GO TERMINATE NORMALLY.               55900001
*********************************************************************** 56000020
*                                                                     * 56100020
* CONSTANTS AND INSTRUCTIONS EXECUTED BY AN EXECUTE INSTRUCTION       * 56200020
*                                                                     * 56300020
*********************************************************************** 56400020
         SPACE                                                          56500020
ANDI     NI    D11(R9),D0          USED TO ISOLATE THE USER DATA COUNT  56600001
MSGMV    MVC   D0(D0,R7),D0(R14)   USED TO MOVE VARY LLENGTH MSG TO BUF 56700001
         SPACE 2                                                        56800020
HEXFFF   DC    X'FFFFFFFFFFFFFFFF' USED TO TEST FOR DIRECTORY END       56900020
DIRMIN   DC    H'14'               MINIMUM DIRECTORY BLOCK LENGTH       57000020
DIRMAX   DC    H'256'              MAXIMUM DIRECTORY BLOCK LENGTH       57100020
AHDR     DC    C'ALIAS('           PREFIX FOR ALIAS NAMES               57200020
MMSG01   DC    C'  THE FOLLOWING ALIAS NAMES EXIST WITHOUT TRUE NAMES'  57300020
*                  THE ABOVE MESSAGE IS USED IN THE MEM OPTION          57400020
      IKJEHCOM                                                          57500020
        DCBD   DSORG=PS                                                 57600020
        END                                                             57700020
