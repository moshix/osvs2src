         TITLE 'IKTCAS20 - VTAM INTERFACE DRIVER                       *00001000
                        '                                               00002000
IKTCAS20 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKTCAS20  77.319'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EJECT                                                          00018000
*/********************************************************************/ 00019000
*/*                                                                  */ 00020000
*/*        THIS ROUTINE MANIPULATES THE QUEUES  ACCORDING TO         */ 00021000
*/*        THE PRIORITY OF THE QUEUES :                              */ 00022000
*/*            SYNCHRONOUS QUEUE                                     */ 00023000
*/*            TPEND QUEUE                                           */ 00024000
*/*            TERMINAL HANDLING QUEUE - GLOBAL                      */ 00025000
*/*            TERMINAL HANDLING QUEUE - LOCAL                       */ 00026000
*/*                                                                  */ 00027000
*/********************************************************************/ 00028000
*    /*                                                              */ 00029000
*    /*      ESTABLISH TCAS WORK AREA ADDRESSIBILITY AND SET         */ 00030000
*    /*      FOOTPRINT FOR ESTAI EXIT ROUTINE BY STORE DRIVER        */ 00031000
*    /*      FUNCTION CODE WITHOUT RETRY ADDRESS. THAT MEANS         */ 00032000
*    /*      ESTAI EXIT WILL ABEND THE TASK WITHOUT RETRY.           */ 00033000
*    /*                                                              */ 00034000
*      TWAPTR=R1 ;                     /* LOAD TWA ADDR PASSED IN R1 */ 00035000
         LR    TWAPTR,R1                                           0017 00036000
*      IKTWAPTR=TWAPTR ;               /* STORE TWA PTR              */ 00037000
         ST    TWAPTR,IKTWAPTR                                     0018 00038000
*      TCASTPTR=TWATCAST ;             /* TCAST POINTER              */ 00039000
         L     TCASTPTR,TWATCAST(,TWAPTR)                          0019 00040000
*      TWAVEIFC(1)=FCVIDI ;            /* SET FOOTPRINT FOR ESTAI    */ 00041000
         MVI   TWAVEIFC(TWAPTR),X'01'                              0020 00042000
*      TCASTTQH=0 ;                    /* INITIALIZE TO ZERO         */ 00043000
         SLR   @07,@07                                             0021 00044000
         ST    @07,TCASTTQH(,TCASTPTR)                             0021 00045000
*      SWITCH='00'X ;                  /* INITIALIZE SWITCH          */ 00046000
         MVI   SWITCH,X'00'                                        0022 00047000
*      DO WHILE (SWWAIT='0'B) ;        /* LOOP UNTIL BYPASS WAIT     */ 00048000
         B     @DE00023                                            0023 00049000
@DL00023 DS    0H                                                  0024 00050000
*      DO WHILE (SWPRQS='0'B) ;        /* LOOP UNTIL BYPASS PROCESS  */ 00051000
         B     @DE00024                                            0024 00052000
@DL00024 DS    0H                                                  0025 00053000
*                                      /* THE QUEUES                 */ 00054000
*      DO WHILE (SWPRTPEQ='0'B);       /* LOOP UNTIL BYPASS PROCESS  */ 00055000
         B     @DE00025                                            0025 00056000
@DL00025 DS    0H                                                  0026 00057000
*                                      /* THE TPEND QUEUE            */ 00058000
*      /*                                                            */ 00059000
*      /*    PROCESS  SYNCHRONOUS  QUEUE                             */ 00060000
*    /*                                                              */ 00061000
*      DO WHILE (TWASYNQH^=0 &         /* LOPP WHILE Q IS NOT EMPTY  */ 00062000
*                SWPRQS='0'B ) ;       /*   AND NOT TO BE BYPASSED   */ 00063000
         B     @DE00026                                            0026 00064000
@DL00026 DS    0H                                                  0027 00065000
*      RFY WESTD BASED(TWASYNQH);      /* BASED ON FIRST W.E. ON Q   */ 00066000
*      R10=TWASYNQH ;                  /* R10 PTR TO FIRST W.E.      */ 00067000
         L     @07,TWASYNQH(,TWAPTR)                               0028 00068000
         LR    R10,@07                                             0028 00069000
*      SWDEQ='0'B ;                    /* INITIALIZE DEQ BYPASS BIT  */ 00070000
         NI    SWDEQ,B'11101111'                                   0029 00071000
*      IF WECODE1T=TCVI                /* IS THIS W.E. FOR VI SUBTASK*/ 00072000
*         THEN DO ;                    /* YES, PROCESS               */ 00073000
         CLI   WECODE1T(@07),X'02'                                 0030 00074000
         BNE   @RF00030                                            0030 00075000
*        IF WECDMAF=FCVIACB            /* IS THIS ACB CONTROL FUNCT  */ 00076000
*            THEN DO ;                 /* YES, PROCESS               */ 00077000
         TM    WECDMAF(@07),B'00010000'                            0032 00078000
         BNO   @RF00032                                            0032 00079000
         TM    WECDMAF(@07),B'11100000'                            0032 00080000
         BNZ   @RF00032                                            0032 00081000
*            WA2=WECODE1  ;            /* RETAIN FUNCTION CODE       */ 00082000
         MVC   WA2(2),WECODE1(@07)                                 0034 00083000
*            CALL IKTCAS21 ;           /* CALL ACB CONTROL FUNCTION  */ 00084000
         L     @15,@CV00303                                        0035 00085000
         BALR  @14,@15                                             0035 00086000
*            IF WA2^=WECODE1           /* IF THE FUNCTION CODE CHANGE*/ 00087000
*               THEN SWDEQ='1'B ;      /* DONT DEQ,SET BYPASS BIT ON */ 00088000
         L     @07,TWASYNQH(,TWAPTR)                               0036 00089000
         CLC   WA2(2),WECODE1(@07)                                 0036 00090000
         BE    @RF00036                                            0036 00091000
         OI    SWDEQ,B'00010000'                                   0037 00092000
*            END;                                                  0038 00093000
*            ELSE                      /* NOT ACB CONTROL FUNCTION   */ 00094000
*              IF WECODE1F=FCVIDE      /* IS THIS EOT W.E.           */ 00095000
*                 THEN DO ;            /* YES                        */ 00096000
         B     @RC00032                                            0039 00097000
@RF00032 L     @07,TWASYNQH(,TWAPTR)                               0039 00098000
         CLI   WECODE1F(@07),X'03'                                 0039 00099000
         BNE   @RF00039                                            0039 00100000
*                 SWPRTPEQ='1'B ;      /* BYPASS PROCESS TPEND  Q    */ 00101000
*                 SWPRQS='1'B ;        /* BYPASS ALL THE QUEUES      */ 00102000
*                 SWWAIT='1'B;         /* BYPASS WAIT                */ 00103000
         OI    SWPRTPEQ,B'11100000'                                0043 00104000
*                 END ;                                            0044 00105000
*         END ;                                                    0045 00106000
*         ELSE                         /* W.E. IS FOR OTHER TASK     */ 00107000
*           IF WECODE1T=TCML           /* IS THIS W.E. FOR MAIN TASK */ 00108000
*              THEN DO ;               /* YES                        */ 00109000
         B     @RC00030                                            0046 00110000
@RF00030 L     @07,TWASYNQH(,TWAPTR)                               0046 00111000
         CLI   WECODE1T(@07),X'01'                                 0046 00112000
         BNE   @RF00046                                            0046 00113000
*              RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;  0048 00114000
*              R8=ADDR(TWAMECB);       /* MAIN TASK ECB ADDR         */ 00115000
         LA    R8,TWAMECB(,TWAPTR)                                 0049 00116000
*              GEN ;                                               0050 00117000
         POST  (R8)                   POST MAIN TASK                    00118000
*              RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;   0051 00119000
*              SWDEQ='1'B ;           /* BYPASS DEQ THE W.E.        */  00120000
*              SWPRTPEQ='1'B;          /* BYPASS PROCESS TPEND Q     */ 00121000
*              SWPRQS='1'B ;          /* BYPASS PROCESS ALL QS      */  00122000
         OI    SWDEQ,B'01110000'                                   0054 00123000
*              END;                                                0055 00124000
*              ELSE                    /* NOT MAIN TASK              */ 00125000
*                IF WECODE1T=TCUI      /* IS THIS USER INT SU@YM03216*/ 00126000
*                   THEN DO ;          /* YES                        */ 00127000
         B     @RC00046                                            0056 00128000
@RF00046 L     @07,TWASYNQH(,TWAPTR)                               0056 00129000
         CLI   WECODE1T(@07),X'03'                                 0056 00130000
         BNE   @RF00056                                            0056 00131000
*                   RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;  00132000
*                   R8=ADDR(TWAUECB) ; /* USER INT SUBTASK ECB ADDR  */ 00133000
         LA    R8,TWAUECB(,TWAPTR)                                 0059 00134000
*                   GEN ;                                          0060 00135000
         POST  (R8)                   POST USER INT SUBTASK             00136000
*                   RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;   00137000
*                   SWDEQ='1'B ;       /* BYPASS DEQ W.E.            */ 00138000
*                   SWPRTPEQ='1'B ;    /* BYPASS PROCESS TPEND Q     */ 00139000
*                   SWPRQS='1'B ;      /* BYPASS PROCESS ALL QS      */ 00140000
         OI    SWDEQ,B'01110000'                                   0064 00141000
*                   END ;                                          0065 00142000
*                   ELSE               /* NOT USER INT SUBTASK       */ 00143000
*                   IF WECODE1T=TCCI   /* IS THIS CON COMM SUBTASK   */ 00144000
*                      THEN DO ;       /* YES                        */ 00145000
         B     @RC00056                                            0066 00146000
@RF00056 L     @07,TWASYNQH(,TWAPTR)                               0066 00147000
         CLI   WECODE1T(@07),X'04'                                 0066 00148000
         BNE   @RF00066                                            0066 00149000
*                      RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ 00150000
*;                                                                 0068 00151000
*                      R8=ADDR(TWACECB); /* CON COMM SUBTASK ECB ADDR*/ 00152000
         LA    R8,TWACECB(,TWAPTR)                                 0069 00153000
*                      GEN ;                                       0070 00154000
         POST  (R8)                   POST CON COMM SUBTASK             00155000
*                      RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */  00156000
*                      SWDEQ='1'B ;    /* BYPASS DEQ W.E.            */ 00157000
*                      SWPRTPEQ='1'B ; /* BYPASS PROCESS TPEND Q     */ 00158000
*                      SWPRQS='1'B ;   /* BYPASS PROCESS ALL QS      */ 00159000
         OI    SWDEQ,B'01110000'                                   0074 00160000
*                      END ;                                       0075 00161000
*      IF SWDEQ='0'B                   /* IS DEQ W.E. NOT BYPASS     */ 00162000
*         THEN DO ;                    /* NO, GO AHEAD DEQ           */ 00163000
@RF00066 DS    0H                                                  0076 00164000
@RC00056 DS    0H                                                  0076 00165000
@RC00046 DS    0H                                                  0076 00166000
@RC00030 TM    SWDEQ,B'00010000'                                   0076 00167000
         BNZ   @RF00076                                            0076 00168000
*         R8=ADDR(TWASYNQH) ;          /* SYNCHRONOUS Q HEADER ADDR  */ 00169000
         LA    R8,TWASYNQH(,TWAPTR)                                0078 00170000
*         GEN SETS(TWASYNQH);          /* COMPARE SWAP TO DEQ        */ 00171000
         L     10,0(8)                LOAD ADDR OF FIRST W.E.           00172000
CSLOOP   L     9,4(10)                LOAD ADDR OF NEXT W.E.            00173000
         CS    10,9,0(8)              DEQ FIRST W.E.                    00174000
         BNE   CSLOOP                 LOOP IF NOT SUCCESSFUL            00175000
*         IF R9=0                      /* IS THIS LAST W.E. ON THE Q */ 00176000
*            THEN DO ;                 /* YES, POST ALL OTHER SUBTASK*/ 00177000
         LTR   R9,R9                                               0080 00178000
         BNZ   @RF00080                                            0080 00179000
*            R8=ADDR(TWAUECB) ;        /* ADDR OF USER INT ECB       */ 00180000
         LA    R8,TWAUECB(,TWAPTR)                                 0082 00181000
*            R9=ADDR(TWACECB) ;        /* ADDR OF CON COMM ECB       */ 00182000
         LA    R9,TWACECB(,TWAPTR)                                 0083 00183000
*            RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;    0084 00184000
*            GEN ;                                                 0085 00185000
         POST  (R8)                   POST USER INT SUBTASK             00186000
         POST  (R9)                   POST CON COMM SUBTASK             00187000
*            RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;     0086 00188000
*            END ;                                                 0087 00189000
*         END ;                                                    0088 00190000
@RF00080 DS    0H                                                  0089 00191000
*      END ;                           /* END OF SYNC Q PROCESS LOOP */ 00192000
@RF00076 DS    0H                                                  0089 00193000
@DE00026 L     @07,TWASYNQH(,TWAPTR)                               0089 00194000
         LTR   @07,@07                                             0089 00195000
         BZ    @DC00026                                            0089 00196000
         TM    SWPRQS,B'01000000'                                  0089 00197000
         BZ    @DL00026                                            0089 00198000
@DC00026 DS    0H                                                  0090 00199000
*    /*                                                              */ 00200000
*    /*      PROCESS  ASYNCHRONOUS  QUEUES                           */ 00201000
*    /*                                                              */ 00202000
*/*                                                                  */ 00203000
*/*            PROCESS  TPEND QUEUE                                  */ 00204000
*/*                                                                  */ 00205000
*      IF SWPRTPEQ='0'B                /* NOT TO BYPASS TPEND Q PROC */ 00206000
*         THEN DO ;                    /* NO, GO AHEAD PROCESS       */ 00207000
         TM    SWPRTPEQ,B'00100000'                                0090 00208000
         BNZ   @RF00090                                            0090 00209000
*         RFY R1 RSTD ;                /* R1 PTR TO THE Q HEADER TO  */ 00210000
*         R1=ADDR(TWAVTEQH) ;          /* BE DEQ WHEN DEQ ROUTINE    */ 00211000
         LA    R1,TWAVTEQH(,TWAPTR)                                0093 00212000
*         CALL DEQASYN ;               /* IS CALLED                  */ 00213000
         BAL   @14,DEQASYN                                         0094 00214000
*         IF R1 ^=0                    /* IF Q IS EMPTY,R1 IS ZERO   */ 00215000
*            THEN DO;                  /* NO, Q IS NOT EMPTY, AND W.E*/ 00216000
         LTR   R1,R1                                               0095 00217000
         BZ    @RF00095                                            0095 00218000
*            R10=R1 ;                  /*   ADDR IS RETURNED IN R1   */ 00219000
         LR    R10,R1                                              0097 00220000
*            R1=0 ;                    /* WHEN TPEND ROUTINE CALLED, */ 00221000
         SLR   R1,R1                                               0098 00222000
*                                      /*   R1=0 MEANS CALLED BY     */ 00223000
*                                      /*   DRIVER NOT VTAM          */ 00224000
*            CALL IKTCAS24 ;           /* CALL TPEND PROCESSING AND  */ 00225000
         L     @15,@CV00305                                        0099 00226000
         BALR  @14,@15                                             0099 00227000
*                                      /* R10 POINTS THE W.E.        */ 00228000
*            END ;                                                 0100 00229000
*            ELSE SWPRTPEQ='1'B;       /* Q IS EMPTY,BYPASS SET      */ 00230000
         B     @RC00095                                            0101 00231000
@RF00095 OI    SWPRTPEQ,B'00100000'                                0101 00232000
*         RFY R1 UNRSTD ;                                          0102 00233000
@RC00095 DS    0H                                                  0103 00234000
*         END ;                                                    0103 00235000
*      END ;                           /* END OF PROCESS TPEND Q LOOP*/ 00236000
@RF00090 DS    0H                                                  0104 00237000
@DE00025 TM    SWPRTPEQ,B'00100000'                                0104 00238000
         BZ    @DL00025                                            0104 00239000
*      SWPRTPEQ='0'B ;                 /* RESET TPEND BYPASS BIT     */ 00240000
         NI    SWPRTPEQ,B'11011111'                                0105 00241000
*      IF SWPRQS='0'B                  /* IF ALL OTHER QS NOT BYPASS */ 00242000
*         THEN DO ;                    /* PROCESS                    */ 00243000
         TM    SWPRQS,B'01000000'                                  0106 00244000
         BNZ   @RF00106                                            0106 00245000
*/*                                                                  */ 00246000
*/*          PROCESS  TERMINAL HANDLING  QUEUE - GLOBAL              */ 00247000
*/*            THE WORK ELEMENT IS THE REQUEST FROM TSO              */ 00248000
*/*            USER ADDRESS SPACE                                    */ 00249000
*/*                                                                  */ 00250000
*         RFY R1 RSTD ;                /* SET PARAMETER REG          */ 00251000
*         R1=ADDR(TCASTTQH) ;          /* R1 CONTAINS ADDR OF Q      */ 00252000
         LA    R1,TCASTTQH(,TCASTPTR)                              0109 00253000
*                                      /*   HEADER TO BE DEQED       */ 00254000
*         CALL DEQASYN ;               /* CALL DEQ ROUTINE           */ 00255000
         BAL   @14,DEQASYN                                         0110 00256000
*         IF R1^=0                     /* ON RETURN,R1=0 IF Q EMPTY  */ 00257000
*                                      /*   R1=ADDR OF WE IF NOT EMP */ 00258000
*            THEN DO ;                 /* Q IS NOT EMPTY             */ 00259000
         LTR   R1,R1                                               0111 00260000
         BZ    @RF00111                                            0111 00261000
*            RFY R5 RSTD;              /* RESTRICT REG 5    @ZA19531 */ 00262000
*            R10=R1 ;                  /* R10 POINTS TO THE W.E.     */ 00263000
         LR    R10,R1                                              0114 00264000
*            R5=0;                /* TELL TCAS22 TO FREE WE @ZA19531 */ 00265000
         SLR   R5,R5                                               0115 00266000
*            CALL IKTCAS22 ;           /* CALL TERMINAL HANDLING     */ 00267000
         L     @15,@CV00304                                        0116 00268000
         BALR  @14,@15                                             0116 00269000
*            RFY R5 UNRSTD;            /* FREE REGISTER 5   @ZA19531 */ 00270000
*            END ;                                                 0118 00271000
*/*                                                                  */ 00272000
*/*          PROCESS  TERMINAL  HANDLING  QUEUE - LOCAL              */ 00273000
*/*                                                                  */ 00274000
*         R1=ADDR(TWAVTHQH) ;          /* ADDR OF Q HEADER TO BE DEQ */ 00275000
@RF00111 LA    R1,TWAVTHQH(,TWAPTR)                                0119 00276000
*         CALL DEQASYN ;               /* CALL DEQ ROUTINE           */ 00277000
         BAL   @14,DEQASYN                                         0120 00278000
*         IF R1^=0                     /* ON RETURN,R1=0 IF Q EMPTY  */ 00279000
*                                      /*   R1=ADDR OF WE IF DEQED   */ 00280000
*            THEN DO ;                 /* NOT EMPTY                  */ 00281000
         LTR   R1,R1                                               0121 00282000
         BZ    @RF00121                                            0121 00283000
*            RFY R5 RSTD;              /* RESTRICT REG 5     @ZA19531*/ 00284000
*            R10=R1 ;                  /* R10 POINTS TO W.E.         */ 00285000
         LR    R10,R1                                              0124 00286000
*            R5='80000000'X;    /* TELL TCAS22 NOT TO FREE WE@ZA19531*/ 00287000
         L     R5,@CF00326                                         0125 00288000
*            CALL IKTCAS22 ;           /* CALL TERMINAL HANDLING     */ 00289000
         L     @15,@CV00304                                        0126 00290000
         BALR  @14,@15                                             0126 00291000
*            RFY R5 UNRSTD;            /* FREE REGISTER 5    @ZA19531*/ 00292000
*            END ;                                                 0128 00293000
*            ELSE                      /* IF Q IS EMPTY AND          */ 00294000
*              IF TCASTTQH=0           /* GLOBAL TERM Q IS EMPTY TOO */ 00295000
*                 THEN SWPRQS='1'B;    /* THEN TURN ON BYPASS ALL Q  */ 00296000
         B     @RC00121                                            0129 00297000
@RF00121 L     @07,TCASTTQH(,TCASTPTR)                             0129 00298000
         LTR   @07,@07                                             0129 00299000
         BNZ   @RF00129                                            0129 00300000
         OI    SWPRQS,B'01000000'                                  0130 00301000
*                                      /*   PROCESSING               */ 00302000
*         RFY R1 UNRSTD ;                                          0131 00303000
@RF00129 DS    0H                                                  0131 00304000
@RC00121 DS    0H                                                  0132 00305000
*         END ;                                                    0132 00306000
*      END ;                           /* END OF ALL Q PROCESS LOOP  */ 00307000
@RF00106 DS    0H                                                  0133 00308000
@DE00024 TM    SWPRQS,B'01000000'                                  0133 00309000
         BZ    @DL00024                                            0133 00310000
*    /*                                                              */ 00311000
*    /*        WAIT  FOR  WORK - WAIT ON AN ECB. IF POSTED,          */ 00312000
*    /*                          MEANS MORE WORK AND W.E. ARE QUEUED */ 00313000
*    /*                                                              */ 00314000
*      IF SWWAIT='0'B                  /* WAIT NOT TO BE BYPASSED    */ 00315000
*         THEN DO ;                    /* NO, GO WAIT                */ 00316000
         TM    SWWAIT,B'10000000'                                  0134 00317000
         BNZ   @RF00134                                            0134 00318000
*         RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;       0136 00319000
*         R8=ADDR(TWAVECB) ;           /* ECB ADDRESS                */ 00320000
         LA    R8,TWAVECB(,TWAPTR)                                 0137 00321000
*         GEN ;                                                    0138 00322000
         WAIT  ECB=(R8)               WAIT FOR MORE WORK                00323000
*         RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;        0139 00324000
*         TWAVECB=''B ;                /* ZERO ECB                   */ 00325000
         XC    TWAVECB(4,TWAPTR),TWAVECB(TWAPTR)                   0140 00326000
*         SWITCH='00'X ;               /* RESET SWITCHES             */ 00327000
         MVI   SWITCH,X'00'                                        0141 00328000
*         END ;                                                    0142 00329000
*      END ;                           /* END OF WAIT LOOP           */ 00330000
@RF00134 DS    0H                                                  0143 00331000
@DE00023 TM    SWWAIT,B'10000000'                                  0143 00332000
         BZ    @DL00023                                            0143 00333000
         EJECT                                                          00334000
*    /*                                                              */ 00335000
*    /*        ROUTINE TO DE-CHAIN THE LAST WE ON ASYCHRONOUS QUEUE  */ 00336000
*    /*                                                              */ 00337000
*    /*        INPUT: R1 ADDRESS OF ASY QUEUE                        */ 00338000
*    /*               R14 RETURN ADDR                                */ 00339000
*    /*               R13 A SAVE AREA CONTAINS AT LEAST 6 WORDS BUT  */ 00340000
*    /*                   ONLY LAST 4 WORDS TO BE USED               */ 00341000
*    /*                                                              */ 00342000
*    /*        OUTPUT: R1 ADDRESS OF THE WE DE-CHAINED OR ZERO       */ 00343000
*    /*                   IF ZERO, ASY QUEUE WAS EMPTY               */ 00344000
*    /*                                                              */ 00345000
*DEQASYN : PROC OPTIONS(SAVE(R14),NOSAVEAREA) ;                    0144 00346000
@EL00001 L     @13,4(,@13)                                         0144 00347000
@EF00001 DS    0H                                                  0144 00348000
@ER00001 LM    @14,@12,12(@13)                                     0144 00349000
         BR    @14                                                 0144 00350000
DEQASYN  ST    @14,12(,@13)                                        0144 00351000
*      RFY R1 RSTD ;                                               0145 00352000
*      R9=0  ;                         /* ZERO FOR COMPARE SWAP      */ 00353000
         SLR   R9,R9                                               0146 00354000
*                                      /* INSTRUCTION TO DEQ W.E.    */ 00355000
*      SW='1'B ;                       /* SET SWITCH                 */ 00356000
         OI    SW,B'00001000'                                      0147 00357000
*      DO WHILE (SW='1'B ) ;            /* LOOP UNTIL CS WORK        */ 00358000
         B     @DE00148                                            0148 00359000
@DL00148 DS    0H                                                  0149 00360000
*         R8=R1 ;                       /* ADDR OF QUEUE HEADER      */ 00361000
         LR    R8,R1                                               0149 00362000
*         R10=R8 -> WA1 ;               /* LOAD ADDR OF FIRST WE     */ 00363000
         L     R10,WA1(,R8)                                        0150 00364000
*         IF R10 ^=0                    /* IS Q EMPTY                */ 00365000
*            THEN DO ;                  /* NO                        */ 00366000
         LTR   R10,R10                                             0151 00367000
         BZ    @RF00151                                            0151 00368000
*            RFY WESTD BASED (R10) ;    /* WE BASE                   */ 00369000
*            DO WHILE (WENEXT ^=0 ) ;   /* FIND LAST WE              */ 00370000
         B     @DE00154                                            0154 00371000
@DL00154 DS    0H                                                  0155 00372000
*            R8=ADDR(WENEXT) ;          /* ADDR OF ADDR OF NEXT WE   */ 00373000
         LA    R8,WENEXT(,R10)                                     0155 00374000
*            R10=WENEXT ;               /* RELOAD POINTER            */ 00375000
         L     R10,WENEXT(,R10)                                    0156 00376000
*            END ;                      /* FOUND LAST ONE            */ 00377000
@DE00154 L     @07,WENEXT(,R10)                                    0157 00378000
         LTR   @07,@07                                             0157 00379000
         BNZ   @DL00154                                            0157 00380000
*            CS(R10,R9,R8->WA1) ;      /* DEQ THE W.E.               */ 00381000
         CS    R10,@09,WA1(R8)                                     0158 00382000
*            BC(8,DEQ1) ;               /* SUCCESSFUL BRANCH         */ 00383000
         BC    8,DEQ1                                              0159 00384000
*            END ;                                                 0160 00385000
*            ELSE SW='0'B ;             /* QUEUE EMPTY               */ 00386000
         B     @RC00151                                            0161 00387000
@RF00151 NI    SW,B'11110111'                                      0161 00388000
*      END ;                            /* LOOP AROUND               */ 00389000
@RC00151 DS    0H                                                  0162 00390000
@DE00148 TM    SW,B'00001000'                                      0162 00391000
         BO    @DL00148                                            0162 00392000
*DEQ1 :R1=R10  ;                        /* ADDR OF THE WE DEQ        */ 00393000
DEQ1     LR    R1,R10                                              0163 00394000
*      RFY R1 UNRSTD ;                                             0164 00395000
*      END DEQASYN ;                                               0165 00396000
@EL00002 DS    0H                                                  0165 00397000
@EF00002 DS    0H                                                  0165 00398000
@ER00002 L     @14,12(,@13)                                        0165 00399000
         BR    @14                                                 0165 00400000
*      END IKTCAS20                                                0166 00401000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00402000
*/*%INCLUDE SYSLIB  (IKTTCAST)                                        * 00403000
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        * 00404000
*;                                                                 0166 00405000
@DATA    DS    0H                                                       00406000
         DS    0F                                                       00407000
@SA00001 DS    18F                                                      00408000
         DS    0F                                                       00409000
@CF00326 DC    XL4'80000000'                                            00410000
@CV00303 DC    V(IKTCAS21)                                              00411000
@CV00304 DC    V(IKTCAS22)                                              00412000
@CV00305 DC    V(IKTCAS24)                                              00413000
         DS    0D                                                       00414000
IKTWAPTR DS    F                                                        00415000
WA2      DS    BL2                                                      00416000
SWITCH   DS    BL1                                                      00417000
         ORG   SWITCH                                                   00418000
SWWAIT   DS    BL1                                                      00419000
SWPRQS   EQU   SWITCH+0                                                 00420000
SWPRTPEQ EQU   SWITCH+0                                                 00421000
SWDEQ    EQU   SWITCH+0                                                 00422000
SW       EQU   SWITCH+0                                                 00423000
@NM00017 EQU   SWITCH+0                                                 00424000
         ORG   SWITCH+1                                                 00425000
         DS    CL1                                                      00426000
PATCH    DC    18F'0'                                                   00427000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00428000
@01      EQU   01                                                       00429000
@02      EQU   02                                                       00430000
@03      EQU   03                                                       00431000
@04      EQU   04                                                       00432000
@05      EQU   05                                                       00433000
@06      EQU   06                                                       00434000
@07      EQU   07                                                       00435000
@08      EQU   08                                                       00436000
@09      EQU   09                                                       00437000
@10      EQU   10                                                       00438000
@11      EQU   11                                                       00439000
@12      EQU   12                                                       00440000
@13      EQU   13                                                       00441000
@14      EQU   14                                                       00442000
@15      EQU   15                                                       00443000
TCASTPTR EQU   @06                                                      00444000
TWAPTR   EQU   @11                                                      00445000
R0       EQU   @00                                                      00446000
R1       EQU   @01                                                      00447000
R5       EQU   @05                                                      00448000
R8       EQU   @08                                                      00449000
R9       EQU   @09                                                      00450000
R10      EQU   @10                                                      00451000
R14      EQU   @14                                                      00452000
R15      EQU   @15                                                      00453000
R12      EQU   @12                                                      00454000
R13      EQU   @13                                                      00455000
         ENTRY IKTWAPTR                                                 00456000
TCAST    EQU   0                                                        00457000
TCASUSER EQU   TCAST+4                                                  00458000
TCASFLG1 EQU   TCAST+88                                                 00459000
TCASFLG2 EQU   TCAST+89                                                 00460000
TCASTTQH EQU   TCAST+104                                                00461000
TWAR     EQU   0                                                        00462000
TWASYNQH EQU   TWAR+4                                                   00463000
TWATCAST EQU   TWAR+20                                                  00464000
TWAMECB  EQU   TWAR+64                                                  00465000
TWAMFL   EQU   TWAR+80                                                  00466000
TWAVFL   EQU   TWAR+81                                                  00467000
TWAUFL   EQU   TWAR+82                                                  00468000
TWACFL   EQU   TWAR+83                                                  00469000
TWAM     EQU   TWAR+84                                                  00470000
TWAME    EQU   TWAM+68                                                  00471000
TWAMEI   EQU   TWAME                                                    00472000
TWAV     EQU   TWAR+184                                                 00473000
TWAVE    EQU   TWAV+68                                                  00474000
TWAVEI   EQU   TWAVE                                                    00475000
TWAVEIFC EQU   TWAVEI                                                   00476000
TWAVI    EQU   TWAR+284                                                 00477000
TWAVECB  EQU   TWAVI                                                    00478000
TWAVTEQH EQU   TWAVI+4                                                  00479000
TWAVTHQH EQU   TWAVI+8                                                  00480000
TWAU     EQU   TWAR+300                                                 00481000
TWAUE    EQU   TWAU+68                                                  00482000
TWAUEI   EQU   TWAUE                                                    00483000
TWAUI    EQU   TWAR+400                                                 00484000
TWAUECB  EQU   TWAUI                                                    00485000
TWAC     EQU   TWAR+408                                                 00486000
TWACE    EQU   TWAC+68                                                  00487000
TWACEI   EQU   TWACE                                                    00488000
TWACI    EQU   TWAR+508                                                 00489000
TWACECB  EQU   TWACI                                                    00490000
WESTD    EQU   0                                                        00491000
WECODE1  EQU   WESTD                                                    00492000
WECODE1T EQU   WECODE1                                                  00493000
WECODE1F EQU   WECODE1+1                                                00494000
WECDMAF  EQU   WECODE1F                                                 00495000
WECODE2  EQU   WESTD+2                                                  00496000
WECODE2F EQU   WECODE2+1                                                00497000
WENEXT   EQU   WESTD+4                                                  00498000
WERC     EQU   WESTD+8                                                  00499000
WELBUF   EQU   WESTD+12                                                 00500000
WEVNIB   EQU   WESTD+16                                                 00501000
WA1      EQU   0                                                        00502000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00503000
WEVRPL   EQU   WESTD+20                                                 00504000
WEUECB   EQU   WEVNIB                                                   00505000
WEUASCB  EQU   WELBUF                                                   00506000
WELEN    EQU   WESTD+10                                                 00507000
WERC2    EQU   WERC+1                                                   00508000
WERC1    EQU   WERC                                                     00509000
WECD2MIF EQU   WECODE2F                                                 00510000
WECD2MAF EQU   WECODE2F                                                 00511000
WECODE2T EQU   WECODE2                                                  00512000
WECDMIF  EQU   WECODE1F                                                 00513000
TWAEND   EQU   TWAR+536                                                 00514000
TWAWORKE EQU   TWAR+524                                                 00515000
@NM00016 EQU   TWACI+13                                                 00516000
TWACSKIP EQU   TWACI+12                                                 00517000
TWACMODQ EQU   TWACI+8                                                  00518000
TWACSTPQ EQU   TWACI+4                                                  00519000
TWACERRS EQU   TWACE+4                                                  00520000
TWACERA  EQU   TWACEI+1                                                 00521000
TWACEIFC EQU   TWACEI                                                   00522000
TWACRTFC EQU   TWAC+60                                                  00523000
TWACABFC EQU   TWAC+56                                                  00524000
TWACTWA  EQU   TWAC+52                                                  00525000
TWACEWA  EQU   TWAC+4                                                   00526000
TWACID   EQU   TWAC                                                     00527000
TWAUACQH EQU   TWAUI+4                                                  00528000
TWAUERRS EQU   TWAUE+4                                                  00529000
TWAUERA  EQU   TWAUEI+1                                                 00530000
TWAUEIFC EQU   TWAUEI                                                   00531000
TWAURTFC EQU   TWAU+60                                                  00532000
TWAUABFC EQU   TWAU+56                                                  00533000
TWAUTWA  EQU   TWAU+52                                                  00534000
TWAUEWA  EQU   TWAU+4                                                   00535000
TWAUID   EQU   TWAU                                                     00536000
TWAVACQH EQU   TWAVI+12                                                 00537000
TWAVERRS EQU   TWAVE+4                                                  00538000
TWAVERA  EQU   TWAVEI+1                                                 00539000
TWAVRTFC EQU   TWAV+60                                                  00540000
TWAVABFC EQU   TWAV+56                                                  00541000
TWAVTWA  EQU   TWAV+52                                                  00542000
TWAVEWA  EQU   TWAV+4                                                   00543000
TWAVID   EQU   TWAV                                                     00544000
TWAMERRS EQU   TWAME+4                                                  00545000
TWAMERA  EQU   TWAMEI+1                                                 00546000
TWAMEIFC EQU   TWAMEI                                                   00547000
TWAMRTFC EQU   TWAM+60                                                  00548000
TWAMABFC EQU   TWAM+56                                                  00549000
TWAMTWA  EQU   TWAM+52                                                  00550000
TWAMEWA  EQU   TWAM+4                                                   00551000
TWAMID   EQU   TWAM                                                     00552000
@NM00015 EQU   TWACFL                                                   00553000
TWACFL4  EQU   TWACFL                                                   00554000
TWACFL2  EQU   TWACFL                                                   00555000
TWACFL1  EQU   TWACFL                                                   00556000
@NM00014 EQU   TWAUFL                                                   00557000
TWAUFL4  EQU   TWAUFL                                                   00558000
TWAUFL3  EQU   TWAUFL                                                   00559000
TWAUFL2  EQU   TWAUFL                                                   00560000
TWAUFL1  EQU   TWAUFL                                                   00561000
@NM00013 EQU   TWAVFL                                                   00562000
TWAVFL6  EQU   TWAVFL                                                   00563000
TWAVFL5  EQU   TWAVFL                                                   00564000
TWAVFL4  EQU   TWAVFL                                                   00565000
TWAVFL3  EQU   TWAVFL                                                   00566000
TWAVFL2  EQU   TWAVFL                                                   00567000
TWAVFL1  EQU   TWAVFL                                                   00568000
@NM00012 EQU   TWAMFL                                                   00569000
TWAMFL1  EQU   TWAMFL                                                   00570000
TWACCOMP EQU   TWAR+76                                                  00571000
TWAUCOMP EQU   TWAR+72                                                  00572000
TWAVCOMP EQU   TWAR+68                                                  00573000
TWACTCB  EQU   TWAR+60                                                  00574000
TWAUTCB  EQU   TWAR+56                                                  00575000
TWAVTCB  EQU   TWAR+52                                                  00576000
TWAMSG   EQU   TWAR+48                                                  00577000
TWADEQAS EQU   TWAR+44                                                  00578000
TWAEESR  EQU   TWAR+40                                                  00579000
TWAPPSR  EQU   TWAR+36                                                  00580000
TWATCSR  EQU   TWAR+32                                                  00581000
TWATTSR  EQU   TWAR+28                                                  00582000
TWAINIT  EQU   TWAR+24                                                  00583000
TWACSCB  EQU   TWAR+16                                                  00584000
TWAASCB  EQU   TWAR+12                                                  00585000
TWAPASQH EQU   TWAR+8                                                   00586000
TWARSON  EQU   TWAR+2                                                   00587000
TWACOMP  EQU   TWAR                                                     00588000
TCASTEND EQU   TCAST+136                                                00589000
TCASDUMP EQU   TCAST+132                                                00590000
TCASSCHD EQU   TCAST+128                                                00591000
@NM00011 EQU   TCAST+124                                                00592000
TCASOMJR EQU   TCAST+120                                                00593000
@NM00010 EQU   TCAST+118                                                00594000
TCASBR14 EQU   TCAST+116                                                00595000
TCASATTN EQU   TCAST+112                                                00596000
TCASASCI EQU   TCAST+108                                                00597000
@NM00009 EQU   TCAST+102                                                00598000
@NM00008 EQU   TCAST+100                                                00599000
@NM00007 EQU   TCAST+98                                                 00600000
@NM00006 EQU   TCAST+96                                                 00601000
TCASASCB EQU   TCAST+92                                                 00602000
@NM00005 EQU   TCAST+90                                                 00603000
@NM00004 EQU   TCASFLG2                                                 00604000
@NM00003 EQU   TCASFLG1                                                 00605000
TCASNACT EQU   TCASFLG1                                                 00606000
@NM00002 EQU   TCASFLG1                                                 00607000
TCASABND EQU   TCASFLG1                                                 00608000
TCASMDSW EQU   TCASFLG1                                                 00609000
TCASBKMD EQU   TCASFLG1                                                 00610000
TCASLTE  EQU   TCAST+84                                                 00611000
TCASEXIT EQU   TCAST+80                                                 00612000
TCASOQM  EQU   TCAST+76                                                 00613000
TCASIQM  EQU   TCAST+72                                                 00614000
TCASTSB  EQU   TCAST+68                                                 00615000
TCASTTL  EQU   TCAST+64                                                 00616000
TCASWA   EQU   TCAST+60                                                 00617000
TCASFRR  EQU   TCAST+56                                                 00618000
TCASMSGS EQU   TCAST+52                                                 00619000
TCASDATO EQU   TCAST+48                                                 00620000
TCASDATI EQU   TCAST+44                                                 00621000
TCASXECB EQU   TCAST+40                                                 00622000
TCASTID  EQU   TCAST+32                                                 00623000
@NM00001 EQU   TCAST+31                                                 00624000
TCASCHNL EQU   TCAST+30                                                 00625000
TCASCRSZ EQU   TCAST+28                                                 00626000
TCASLBUF EQU   TCAST+24                                                 00627000
TCASHBUF EQU   TCAST+20                                                 00628000
TCASCLSZ EQU   TCAST+18                                                 00629000
TCASRCON EQU   TCAST+16                                                 00630000
TCASACBP EQU   TCAST+8                                                  00631000
TCASUMAX EQU   TCASUSER+2                                               00632000
TCASUSEC EQU   TCASUSER                                                 00633000
TCASID   EQU   TCAST                                                    00634000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00635000
@RF00039 EQU   @RC00030                                                 00636000
@RC00032 EQU   @RC00030                                                 00637000
@PB00002 EQU   @EL00001                                                 00638000
@RF00036 EQU   @RC00032                                                 00639000
@ENDDATA EQU   *                                                        00640000
         END   IKTCAS20,(C'PLS1844',0701,77319)                         00641000
