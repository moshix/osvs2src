         TITLE 'IKTCA30 -- USER INTERFACE DRIVER                       *00001000
                        '                                               00002000
IKTCAS30 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKTCAS30  77.238'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
*/********************************************************************/ 00018000
*/*                                                                  */ 00019000
*/*        THIS ROUTINE MANIPULATES THE QUEUES  ACCORDING TO         */ 00020000
*/*        THE PRIORITY OF THE QUEUES :                              */ 00021000
*/*            SYNCHRONOUS QUEUE                                     */ 00022000
*/*            ADDRESS SPACE CREATION QUEUE                          */ 00023000
*/*                                                                  */ 00024000
*/********************************************************************/ 00025000
*    /*                                                              */ 00026000
*    /*      ESTABLISH TCAS WORK AREA ADDRESSIBILITY AND SET         */ 00027000
*    /*      FOOTPRINT FOR ESTAI EXIT ROUTINE BY STORE DRIVER        */ 00028000
*    /*      FUNCTION CODE WITHOUT RETRY ADDRESS. THAT MEANS         */ 00029000
*    /*      ESTAI EXIT WILL ABEND THE TASK WITHOUT RETRY.           */ 00030000
*    /*                                                              */ 00031000
*      TWAPTR=R1 ;                     /* LOAD TWA ADDR PASSED IN R1 */ 00032000
         LR    TWAPTR,R1                                           0014 00033000
*      TWAUEIFC(1)=FCUIDI ;            /* SET FOOTPRINT FOR ESTAI    */ 00034000
         MVI   TWAUEIFC(TWAPTR),X'01'                              0015 00035000
*      SWITCH='00'X ;                  /* INIT SWITCH                */ 00036000
         MVI   SWITCH,X'00'                                        0016 00037000
*      DO WHILE (SWWAIT='0'B) ;        /* LOOP UNTIL BYPASS WAIT     */ 00038000
         B     @DE00017                                            0017 00039000
@DL00017 DS    0H                                                  0018 00040000
*      DO WHILE (SWPRQS='0'B) ;        /* LOOP UNTIL BYPASS PROCESS  */ 00041000
         B     @DE00018                                            0018 00042000
@DL00018 DS    0H                                                  0019 00043000
*                                      /* THE QUEUES                 */ 00044000
*    /*                                                              */ 00045000
*    /*      PROCESS  SYNCHRONOUS  QUEUE                             */ 00046000
*    /*                                                              */ 00047000
*      DO WHILE (TWASYNQH^=0 &         /* LOPP WHILE Q IS NOT EMPTY  */ 00048000
*                SWPRQS='0'B ) ;       /*   AND NOT TO BE BYPASSED   */ 00049000
         B     @DE00019                                            0019 00050000
@DL00019 DS    0H                                                  0020 00051000
*      RFY WESTD BASED(TWASYNQH);      /* BASED ON FIRST W.E. ON Q   */ 00052000
*      R10=TWASYNQH ;                  /* R10 PTR TO FIRST W.E.      */ 00053000
         L     @15,TWASYNQH(,TWAPTR)                               0021 00054000
         LR    R10,@15                                             0021 00055000
*      SWDEQ='0'B ;                    /* INITIALIZE DEQ BYPASS BIT  */ 00056000
         NI    SWDEQ,B'11011111'                                   0022 00057000
*      IF WECODE1T=TCUI                     /* IS IT FOR USER TASK   */ 00058000
*         THEN DO ;                         /* YES                   */ 00059000
         CLI   WECODE1T(@15),X'03'                                 0023 00060000
         BNE   @RF00023                                            0023 00061000
*         IF WECODE1F=FCUITC | WECODE1F=FCUITM /* IS A.S.TERM FUNC   */ 00062000
*            THEN  DO;                         /* YES                */ 00063000
         CLI   WECODE1F(@15),X'21'                                 0025 00064000
         BE    @RT00025                                            0025 00065000
         CLI   WECODE1F(@15),X'22'                                 0025 00066000
         BNE   @RF00025                                            0025 00067000
@RT00025 DS    0H                                                  0026 00068000
*            UIWA1=WECODE1F ;                  /* RETAIN FUNC CODE   */ 00069000
         L     @01,TWASYNQH(,TWAPTR)                               0027 00070000
         MVC   UIWA1(1),WECODE1F(@01)                              0027 00071000
*            CALL  IKTCAS32 ;               /* CALL A.S.TERM FUNCTION*/ 00072000
         L     @15,@CV00259                                        0028 00073000
         BALR  @14,@15                                             0028 00074000
*            IF UIWA1 ^= WECODE1F           /* HAS F C BEEN CHANGED  */ 00075000
*               THEN SWDEQ='1'B ;      /* DONT DEQ,SET BYPASS BIT ON */ 00076000
         L     @01,TWASYNQH(,TWAPTR)                               0029 00077000
         CLC   UIWA1(1),WECODE1F(@01)                              0029 00078000
         BE    @RF00029                                            0029 00079000
         OI    SWDEQ,B'00100000'                                   0030 00080000
*            END;                                                  0031 00081000
*            ELSE                      /* NOT A.S. CREATION          */ 00082000
*              IF WECODE1F=FCUIDE      /* IS THIS EOT W.E.           */ 00083000
*                 THEN DO ;            /* YES                        */ 00084000
         B     @RC00025                                            0032 00085000
@RF00025 L     @01,TWASYNQH(,TWAPTR)                               0032 00086000
         CLI   WECODE1F(@01),X'03'                                 0032 00087000
         BNE   @RF00032                                            0032 00088000
*                 SWPRQS='1'B ;        /* BYPASS ALL THE QUEUES      */ 00089000
*                 SWWAIT='1'B;         /* BYPASS WAIT                */ 00090000
         OI    SWPRQS,B'11000000'                                  0035 00091000
*                 END ;                                            0036 00092000
*         END ;                                                    0037 00093000
*         ELSE IF WECODE1T=TCML             /* IS IT FOR MAINLINE    */ 00094000
*              THEN DO;                     /* YES                   */ 00095000
         B     @RC00023                                            0038 00096000
@RF00023 L     @01,TWASYNQH(,TWAPTR)                               0038 00097000
         CLI   WECODE1T(@01),X'01'                                 0038 00098000
         BNE   @RF00038                                            0038 00099000
*               R8=ADDR(TWAMECB) ;          /* GET MAIN ECB ADDR     */ 00100000
         LA    R8,TWAMECB(,TWAPTR)                                 0040 00101000
*              RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/  ; 0041 00102000
*              GEN CODE ;                                          0042 00103000
         POST  (8)                     POST MAINLINE                    00104000
*              RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;   0043 00105000
*              SWDEQ='1'B ;           /* BYPASS DEQ THE W.E.        */  00106000
*              SWPRQS='1'B ;          /* BYPASS PROCESS ALL QS      */  00107000
         OI    SWDEQ,B'01100000'                                   0045 00108000
*              END;                                                0046 00109000
*              ELSE                         /* NOT MAINLINE          */ 00110000
*              IF WECODE1T=TCVI             /* IS IT FOR VTAM INT    */ 00111000
*                 THEN DO;                  /* YES                   */ 00112000
         B     @RC00038                                            0047 00113000
@RF00038 L     @01,TWASYNQH(,TWAPTR)                               0047 00114000
         CLI   WECODE1T(@01),X'02'                                 0047 00115000
         BNE   @RF00047                                            0047 00116000
*                  R8=ADDR(TWAVECB) ;       /* GET V I ECB ADDR      */ 00117000
         LA    R8,TWAVECB(,TWAPTR)                                 0049 00118000
*                 RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/  ;   00119000
*                 GEN CODE ;                                       0051 00120000
         POST  (8)                     POST VTAM INT                    00121000
*                 RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;     00122000
*                   SWDEQ='1'B ;       /* BYPASS DEQ W.E.            */ 00123000
*                   SWPRQS='1'B ;      /* BYPASS PROCESS ALL QS      */ 00124000
         OI    SWDEQ,B'01100000'                                   0054 00125000
*                 END ;                                            0055 00126000
*                 ELSE IF WECODE1T=TCCI     /* IS IT FOR CON COMM    */ 00127000
*                         THEN DO;          /* YES                   */ 00128000
         B     @RC00047                                            0056 00129000
@RF00047 L     @01,TWASYNQH(,TWAPTR)                               0056 00130000
         CLI   WECODE1T(@01),X'04'                                 0056 00131000
         BNE   @RF00056                                            0056 00132000
*                       R8=ADDR(TWACECB) ;  /* GET CON COMM ECB ADDR */ 00133000
         LA    R8,TWACECB(,TWAPTR)                                 0058 00134000
*                         RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA RE 00135000
**/ ;                                                              0059 00136000
*                         GEN CODE ;                               0060 00137000
         POST  (8)                     POST CON COMM INT                00138000
*                         RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R  00139000
*/ ;                                                               0061 00140000
*                      SWDEQ='1'B ;    /* BYPASS DEQ W.E.            */ 00141000
*                      SWPRQS='1'B ;   /* BYPASS PROCESS ALL QS      */ 00142000
         OI    SWDEQ,B'01100000'                                   0063 00143000
*                      END ;                                       0064 00144000
*      IF SWDEQ='0'B                   /* IS DEQ W.E. NOT BYPASS     */ 00145000
*         THEN DO ;                    /* NO, GO AHEAD DEQ           */ 00146000
@RF00056 DS    0H                                                  0065 00147000
@RC00047 DS    0H                                                  0065 00148000
@RC00038 DS    0H                                                  0065 00149000
@RC00023 TM    SWDEQ,B'00100000'                                   0065 00150000
         BNZ   @RF00065                                            0065 00151000
*      R8=ADDR(TWASYNQH);                   /* GET Q HEADER ADDR TO  */ 00152000
         LA    R8,TWASYNQH(,TWAPTR)                                0067 00153000
*                                           /* DEQUEU THE WE         */ 00154000
*         GEN SETS(TWASYNQH);          /* COMPARE SWAP TO DEQ        */ 00155000
         L     10,0(8)                 LOAD WE ADDR                     00156000
CSLOOP   L     9,4(10)                 LOAD NEXT WE ADDR                00157000
         CS    10,9,0(8)               SWAP                             00158000
         BNE   CSLOOP                  LOOP AROUND                      00159000
*      IF R9=0                              /* IF Q EMPTY            */ 00160000
*         THEN DO;                          /* POST ALL SUBTASK      */ 00161000
         LTR   R9,R9                                               0069 00162000
         BNZ   @RF00069                                            0069 00163000
*         R8=ADDR(TWAVECB) ;                /* GET VTAM ECB ADDR     */ 00164000
         LA    R8,TWAVECB(,TWAPTR)                                 0071 00165000
*         R9=ADDR(TWACECB) ;                /* GET CON COMM ECB ADDR */ 00166000
         LA    R9,TWACECB(,TWAPTR)                                 0072 00167000
*         RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;       0073 00168000
*         GEN  CODE ;                                              0074 00169000
         POST  (8)                     POST VTAM INT                    00170000
         POST  (9)                     POST C C  INT                    00171000
*         RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;        0075 00172000
*         END ;                                                    0076 00173000
*         END ;                                                    0077 00174000
@RF00069 DS    0H                                                  0078 00175000
*      END ;                                                       0078 00176000
@RF00065 DS    0H                                                  0078 00177000
@DE00019 L     @15,TWASYNQH(,TWAPTR)                               0078 00178000
         LTR   @15,@15                                             0078 00179000
         BZ    @DC00019                                            0078 00180000
         TM    SWPRQS,B'01000000'                                  0078 00181000
         BZ    @DL00019                                            0078 00182000
@DC00019 DS    0H                                                  0079 00183000
*    /*                                                              */ 00184000
*    /*      PROCESS   ASYNCHRONOUS  QUEUE                           */ 00185000
*    /*                                                              */ 00186000
*/*                                                                  */ 00187000
*/*          PROCESS  ADDRESS SPACE CREATION QUEUE                   */ 00188000
*/*                                                                  */ 00189000
*      IF SWPRQS='0'B                  /* IF ALL OTHER QS NOT BYPASS */ 00190000
*         THEN DO ;                    /* PROCESS                    */ 00191000
         TM    SWPRQS,B'01000000'                                  0079 00192000
         BNZ   @RF00079                                            0079 00193000
*         RFY  R1  RSTD ;                                          0081 00194000
*         R1=ADDR(TWAUACQH) ;               /* R1 ADDR OF Q HEADER   */ 00195000
         LA    R1,TWAUACQH(,TWAPTR)                                0082 00196000
*         CALL  DEQASYN ;                   /* CALL DEQ ROUTINE      */ 00197000
         BAL   @14,DEQASYN                                         0083 00198000
*         IF R1 ^=0                                                0084 00199000
*            THEN DO ;                      /* IF Q IS NOT EMPTY     */ 00200000
         LTR   R1,R1                                               0084 00201000
         BZ    @RF00084                                            0084 00202000
*            R10=R1 ;                  /* R10 POINTS TO THE W.E.     */ 00203000
         LR    R10,R1                                              0086 00204000
*            RFY  R1 UNRSTD ;                                      0087 00205000
*         CALL IKTCAS31 ;                   /* CALL A.S.CREATE       */ 00206000
         L     @15,@CV00258                                        0088 00207000
         BALR  @14,@15                                             0088 00208000
*         IF TWAUFL3='1'B                   /* IS POST BIT ON        */ 00209000
*            THEN DO ;                      /* YES                   */ 00210000
         TM    TWAUFL3(TWAPTR),B'00100000'                         0089 00211000
         BNO   @RF00089                                            0089 00212000
*            ECBPTR=ADDR(TWAVECB) ;         /* POINTS TO VTAM ECB    */ 00213000
         LA    @15,TWAVECB(,TWAPTR)                                0091 00214000
         LR    ECBPTR,@15                                          0091 00215000
*            IF ECBWAITB='1'B                /* IS VTAM TASK IN WAIT */ 00216000
*               THEN DO ;                   /* YES POST              */ 00217000
         TM    ECBWAITB(ECBPTR),B'10000000'                        0092 00218000
         BNO   @RF00092                                            0092 00219000
*               R8=ADDR(TWAVECB) ;          /* GET VTAM ECB ADDR     */ 00220000
         LR    R8,@15                                              0094 00221000
*               RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ; 0095 00222000
*               GEN CODE ;                                         0096 00223000
         POST  (8)                     POST VTAM INT TASK               00224000
*               RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;  0097 00225000
*               TWAUFL3='0'B ;              /* TURN OFF POST BIT     */ 00226000
         NI    TWAUFL3(TWAPTR),B'11011111'                         0098 00227000
*               END ;                                              0099 00228000
*            END ;                                                 0100 00229000
*         END ;                                                    0101 00230000
*         ELSE SWPRQS='1'B ;           /* ALL Q ARE EMPTY            */ 00231000
         B     @RC00084                                            0102 00232000
@RF00084 OI    SWPRQS,B'01000000'                                  0102 00233000
*      END ;                                                       0103 00234000
@RC00084 DS    0H                                                  0104 00235000
*      END ;                           /* END OF ALL Q PROCESS LOOP  */ 00236000
@RF00079 DS    0H                                                  0104 00237000
@DE00018 TM    SWPRQS,B'01000000'                                  0104 00238000
         BZ    @DL00018                                            0104 00239000
*          IF TWAUFL3='1'B                  /* IS POST NEEDED        */ 00240000
*             THEN DO ;                     /* YES                   */ 00241000
         TM    TWAUFL3(TWAPTR),B'00100000'                         0105 00242000
         BNO   @RF00105                                            0105 00243000
*            R8=ADDR(TWAVECB) ;             /* GET VTAM ECB ADDR     */ 00244000
         LA    R8,TWAVECB(,TWAPTR)                                 0107 00245000
*             RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;   0108 00246000
*             GEN CODE ;                                           0109 00247000
         POST  (8)                     POST VTAM INT TASK               00248000
*             RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;    0110 00249000
*      TWAUFL3='0'B ;                  /* RESET POST BIT             */ 00250000
         NI    TWAUFL3(TWAPTR),B'11011111'                         0111 00251000
*             END ;                                                0112 00252000
*    /*                                                              */ 00253000
*    /*        WAIT  FOR  WORK - WAIT ON AN ECB. IF POSTED,          */ 00254000
*    /*                          MEANS MORE WORK AND W.E. ARE QUEUED */ 00255000
*    /*                                                              */ 00256000
*      IF SWWAIT='0'B                  /* WAIT NOT TO BE BYPASSED    */ 00257000
*         THEN DO ;                    /* NO, GO WAIT                */ 00258000
@RF00105 TM    SWWAIT,B'10000000'                                  0113 00259000
         BNZ   @RF00113                                            0113 00260000
*      RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;          0115 00261000
*      R8=ADDR(TWAUECB);                    /* GET ECB ADDR          */ 00262000
         LA    R8,TWAUECB(,TWAPTR)                                 0116 00263000
*      GEN CODE ;                                                  0117 00264000
         WAIT  ECB=(8)                WAIT ON WORK                      00265000
*      TWAUECB='00'X ;                                             0118 00266000
         XC    TWAUECB+1(3,TWAPTR),TWAUECB+1(TWAPTR)               0118 00267000
         MVI   TWAUECB(TWAPTR),X'00'                               0118 00268000
*      RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;           0119 00269000
*         SWITCH='00'X ;               /* RESET SWITCHES             */ 00270000
         MVI   SWITCH,X'00'                                        0120 00271000
*      END ;                                                       0121 00272000
*      END ;                           /* END OF WAIT LOOP           */ 00273000
@RF00113 DS    0H                                                  0122 00274000
@DE00017 TM    SWWAIT,B'10000000'                                  0122 00275000
         BZ    @DL00017                                            0122 00276000
         EJECT                                                          00277000
*    /*                                                              */ 00278000
*    /*        ROUTINE TO DE-CHAIN THE LAST WE ON ASYCHRONOUS QUEUE  */ 00279000
*    /*                                                              */ 00280000
*    /*        INPUT: R1 ADDRESS OF ASY QUEUE                        */ 00281000
*    /*               R14 RETURN ADDR                                */ 00282000
*    /*                                                              */ 00283000
*    /*        OUTPUT: R1 ADDRESS OF THE WE DE-CHAINED OR ZERO       */ 00284000
*    /*                   IF ZERO, ASY QUEUE WAS EMPTY               */ 00285000
*    /*                                                              */ 00286000
*DEQASYN : PROC OPTIONS(SAVE(R14),NOSAVEAREA) ;                    0123 00287000
@EL00001 L     @13,4(,@13)                                         0123 00288000
@EF00001 DS    0H                                                  0123 00289000
@ER00001 LM    @14,@12,12(@13)                                     0123 00290000
         BR    @14                                                 0123 00291000
DEQASYN  ST    @14,12(,@13)                                        0123 00292000
*      RFY R1 RSTD ;                                               0124 00293000
*      R9=0  ;                         /* ZERO FOR COMPARE SWAP      */ 00294000
         SLR   R9,R9                                               0125 00295000
*                                      /* INSTRUCTION TO DEQ W.E.    */ 00296000
*      SW='1'B ;                       /* SET SWITCH                 */ 00297000
         OI    SW,B'00010000'                                      0126 00298000
*      DO WHILE (SW='1'B ) ;            /* LOOP UNTIL CS WORK        */ 00299000
         B     @DE00127                                            0127 00300000
@DL00127 DS    0H                                                  0128 00301000
*         R8=R1 ;                       /* ADDR OF QUEUE HEADER      */ 00302000
         LR    R8,R1                                               0128 00303000
*         R10=R8 -> WA1 ;               /* LOAD ADDR OF FIRST WE     */ 00304000
         L     R10,WA1(,R8)                                        0129 00305000
*         IF R10 ^=0                    /* IS Q EMPTY                */ 00306000
*            THEN DO ;                  /* NO                        */ 00307000
         LTR   R10,R10                                             0130 00308000
         BZ    @RF00130                                            0130 00309000
*            RFY WESTD BASED (R10) ;    /* WE BASE                   */ 00310000
*            DO WHILE (WENEXT ^=0 ) ;   /* FIND LAST WE              */ 00311000
         B     @DE00133                                            0133 00312000
@DL00133 DS    0H                                                  0134 00313000
*            R8=ADDR(WENEXT) ;          /* ADDR OF ADDR OF NEXT WE   */ 00314000
         LA    R8,WENEXT(,R10)                                     0134 00315000
*            R10=WENEXT ;               /* RELOAD POINTER            */ 00316000
         L     R10,WENEXT(,R10)                                    0135 00317000
*            END ;                      /* FOUND LAST ONE            */ 00318000
@DE00133 L     @00,WENEXT(,R10)                                    0136 00319000
         LTR   @00,@00                                             0136 00320000
         BNZ   @DL00133                                            0136 00321000
*            CS(R10,R9,R8->WA1) ;      /* DEQ THE W.E.               */ 00322000
         CS    R10,@09,WA1(R8)                                     0137 00323000
*            BC(8,DEQ1) ;               /* SUCCESSFUL BRANCH         */ 00324000
         BC    8,DEQ1                                              0138 00325000
*            END ;                                                 0139 00326000
*            ELSE SW='0'B ;             /* QUEUE EMPTY               */ 00327000
         B     @RC00130                                            0140 00328000
@RF00130 NI    SW,B'11101111'                                      0140 00329000
*      END ;                            /* LOOP AROUND               */ 00330000
@RC00130 DS    0H                                                  0141 00331000
@DE00127 TM    SW,B'00010000'                                      0141 00332000
         BO    @DL00127                                            0141 00333000
*DEQ1 :R1=R10  ;                        /* ADDR OF THE WE DEQ        */ 00334000
DEQ1     LR    R1,R10                                              0142 00335000
*      RFY R1 UNRSTD ;                                             0143 00336000
*      END DEQASYN ;                                               0144 00337000
@EL00002 DS    0H                                                  0144 00338000
@EF00002 DS    0H                                                  0144 00339000
@ER00002 L     @14,12(,@13)                                        0144 00340000
         BR    @14                                                 0144 00341000
*      END IKTCAS30                                                0145 00342000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00343000
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        * 00344000
*/*%INCLUDE SYSLIB  (IHAECB  )                                        * 00345000
*;                                                                 0145 00346000
@DATA    DS    0H                                                       00347000
         DS    0F                                                       00348000
@SA00001 DS    18F                                                      00349000
         DS    0F                                                       00350000
@CV00258 DC    V(IKTCAS31)                                              00351000
@CV00259 DC    V(IKTCAS32)                                              00352000
         DS    0D                                                       00353000
SWITCH   DS    BL1                                                      00354000
         ORG   SWITCH                                                   00355000
SWWAIT   DS    BL1                                                      00356000
SWPRQS   EQU   SWITCH+0                                                 00357000
SWDEQ    EQU   SWITCH+0                                                 00358000
SW       EQU   SWITCH+0                                                 00359000
@NM00007 EQU   SWITCH+0                                                 00360000
         ORG   SWITCH+1                                                 00361000
UIWA     DS    BL4                                                      00362000
         ORG   UIWA                                                     00363000
UIWA1    DS    BL1                                                      00364000
UIWA11   DS    BL3                                                      00365000
         ORG   UIWA+4                                                   00366000
         DS    CL3                                                      00367000
PATCH    DC    16F'0'                                                   00368000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00369000
@01      EQU   01                                                       00370000
@02      EQU   02                                                       00371000
@03      EQU   03                                                       00372000
@04      EQU   04                                                       00373000
@05      EQU   05                                                       00374000
@06      EQU   06                                                       00375000
@07      EQU   07                                                       00376000
@08      EQU   08                                                       00377000
@09      EQU   09                                                       00378000
@10      EQU   10                                                       00379000
@11      EQU   11                                                       00380000
@12      EQU   12                                                       00381000
@13      EQU   13                                                       00382000
@14      EQU   14                                                       00383000
@15      EQU   15                                                       00384000
ECBPTR   EQU   @02                                                      00385000
TWAPTR   EQU   @11                                                      00386000
R0       EQU   @00                                                      00387000
R1       EQU   @01                                                      00388000
R8       EQU   @08                                                      00389000
R9       EQU   @09                                                      00390000
R10      EQU   @10                                                      00391000
R14      EQU   @14                                                      00392000
R15      EQU   @15                                                      00393000
R12      EQU   @12                                                      00394000
R13      EQU   @13                                                      00395000
TWAR     EQU   0                                                        00396000
TWASYNQH EQU   TWAR+4                                                   00397000
TWAMECB  EQU   TWAR+64                                                  00398000
TWAMFL   EQU   TWAR+80                                                  00399000
TWAVFL   EQU   TWAR+81                                                  00400000
TWAUFL   EQU   TWAR+82                                                  00401000
TWAUFL3  EQU   TWAUFL                                                   00402000
TWACFL   EQU   TWAR+83                                                  00403000
TWAM     EQU   TWAR+84                                                  00404000
TWAME    EQU   TWAM+68                                                  00405000
TWAMEI   EQU   TWAME                                                    00406000
TWAV     EQU   TWAR+184                                                 00407000
TWAVE    EQU   TWAV+68                                                  00408000
TWAVEI   EQU   TWAVE                                                    00409000
TWAVI    EQU   TWAR+284                                                 00410000
TWAVECB  EQU   TWAVI                                                    00411000
TWAU     EQU   TWAR+300                                                 00412000
TWAUE    EQU   TWAU+68                                                  00413000
TWAUEI   EQU   TWAUE                                                    00414000
TWAUEIFC EQU   TWAUEI                                                   00415000
TWAUI    EQU   TWAR+400                                                 00416000
TWAUECB  EQU   TWAUI                                                    00417000
TWAUACQH EQU   TWAUI+4                                                  00418000
TWAC     EQU   TWAR+408                                                 00419000
TWACE    EQU   TWAC+68                                                  00420000
TWACEI   EQU   TWACE                                                    00421000
TWACI    EQU   TWAR+508                                                 00422000
TWACECB  EQU   TWACI                                                    00423000
ECB      EQU   0                                                        00424000
ECBRB    EQU   ECB                                                      00425000
ECBEVTB  EQU   ECBRB                                                    00426000
ECBCC    EQU   ECBEVTB                                                  00427000
ECBEVNT  EQU   ECBCC                                                    00428000
ECBWAITB EQU   ECBEVNT                                                  00429000
ECBCCCNT EQU   ECBEVTB+1                                                00430000
ECBRBA   EQU   ECBCCCNT                                                 00431000
WESTD    EQU   0                                                        00432000
WECODE1  EQU   WESTD                                                    00433000
WECODE1T EQU   WECODE1                                                  00434000
WECODE1F EQU   WECODE1+1                                                00435000
WECODE2  EQU   WESTD+2                                                  00436000
WECODE2F EQU   WECODE2+1                                                00437000
WENEXT   EQU   WESTD+4                                                  00438000
WERC     EQU   WESTD+8                                                  00439000
WA1      EQU   0                                                        00440000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00441000
WELEN    EQU   WESTD+10                                                 00442000
WERC2    EQU   WERC+1                                                   00443000
WERC1    EQU   WERC                                                     00444000
WECD2MIF EQU   WECODE2F                                                 00445000
WECD2MAF EQU   WECODE2F                                                 00446000
WECODE2T EQU   WECODE2                                                  00447000
WECDMIF  EQU   WECODE1F                                                 00448000
WECDMAF  EQU   WECODE1F                                                 00449000
ECBEVTBA EQU   ECBRBA                                                   00450000
@NM00006 EQU   ECBCC                                                    00451000
ECBPOSTB EQU   ECBEVNT                                                  00452000
TWAEND   EQU   TWAR+536                                                 00453000
TWAWORKE EQU   TWAR+524                                                 00454000
@NM00005 EQU   TWACI+13                                                 00455000
TWACSKIP EQU   TWACI+12                                                 00456000
TWACMODQ EQU   TWACI+8                                                  00457000
TWACSTPQ EQU   TWACI+4                                                  00458000
TWACERRS EQU   TWACE+4                                                  00459000
TWACERA  EQU   TWACEI+1                                                 00460000
TWACEIFC EQU   TWACEI                                                   00461000
TWACRTFC EQU   TWAC+60                                                  00462000
TWACABFC EQU   TWAC+56                                                  00463000
TWACTWA  EQU   TWAC+52                                                  00464000
TWACEWA  EQU   TWAC+4                                                   00465000
TWACID   EQU   TWAC                                                     00466000
TWAUERRS EQU   TWAUE+4                                                  00467000
TWAUERA  EQU   TWAUEI+1                                                 00468000
TWAURTFC EQU   TWAU+60                                                  00469000
TWAUABFC EQU   TWAU+56                                                  00470000
TWAUTWA  EQU   TWAU+52                                                  00471000
TWAUEWA  EQU   TWAU+4                                                   00472000
TWAUID   EQU   TWAU                                                     00473000
TWAVACQH EQU   TWAVI+12                                                 00474000
TWAVTHQH EQU   TWAVI+8                                                  00475000
TWAVTEQH EQU   TWAVI+4                                                  00476000
TWAVERRS EQU   TWAVE+4                                                  00477000
TWAVERA  EQU   TWAVEI+1                                                 00478000
TWAVEIFC EQU   TWAVEI                                                   00479000
TWAVRTFC EQU   TWAV+60                                                  00480000
TWAVABFC EQU   TWAV+56                                                  00481000
TWAVTWA  EQU   TWAV+52                                                  00482000
TWAVEWA  EQU   TWAV+4                                                   00483000
TWAVID   EQU   TWAV                                                     00484000
TWAMERRS EQU   TWAME+4                                                  00485000
TWAMERA  EQU   TWAMEI+1                                                 00486000
TWAMEIFC EQU   TWAMEI                                                   00487000
TWAMRTFC EQU   TWAM+60                                                  00488000
TWAMABFC EQU   TWAM+56                                                  00489000
TWAMTWA  EQU   TWAM+52                                                  00490000
TWAMEWA  EQU   TWAM+4                                                   00491000
TWAMID   EQU   TWAM                                                     00492000
@NM00004 EQU   TWACFL                                                   00493000
TWACFL4  EQU   TWACFL                                                   00494000
TWACFL2  EQU   TWACFL                                                   00495000
TWACFL1  EQU   TWACFL                                                   00496000
@NM00003 EQU   TWAUFL                                                   00497000
TWAUFL4  EQU   TWAUFL                                                   00498000
TWAUFL2  EQU   TWAUFL                                                   00499000
TWAUFL1  EQU   TWAUFL                                                   00500000
@NM00002 EQU   TWAVFL                                                   00501000
TWAVFL6  EQU   TWAVFL                                                   00502000
TWAVFL5  EQU   TWAVFL                                                   00503000
TWAVFL4  EQU   TWAVFL                                                   00504000
TWAVFL3  EQU   TWAVFL                                                   00505000
TWAVFL2  EQU   TWAVFL                                                   00506000
TWAVFL1  EQU   TWAVFL                                                   00507000
@NM00001 EQU   TWAMFL                                                   00508000
TWAMFL1  EQU   TWAMFL                                                   00509000
TWACCOMP EQU   TWAR+76                                                  00510000
TWAUCOMP EQU   TWAR+72                                                  00511000
TWAVCOMP EQU   TWAR+68                                                  00512000
TWACTCB  EQU   TWAR+60                                                  00513000
TWAUTCB  EQU   TWAR+56                                                  00514000
TWAVTCB  EQU   TWAR+52                                                  00515000
TWAMSG   EQU   TWAR+48                                                  00516000
TWADEQAS EQU   TWAR+44                                                  00517000
TWAEESR  EQU   TWAR+40                                                  00518000
TWAPPSR  EQU   TWAR+36                                                  00519000
TWATCSR  EQU   TWAR+32                                                  00520000
TWATTSR  EQU   TWAR+28                                                  00521000
TWAINIT  EQU   TWAR+24                                                  00522000
TWATCAST EQU   TWAR+20                                                  00523000
TWACSCB  EQU   TWAR+16                                                  00524000
TWAASCB  EQU   TWAR+12                                                  00525000
TWAPASQH EQU   TWAR+8                                                   00526000
TWARSON  EQU   TWAR+2                                                   00527000
TWACOMP  EQU   TWAR                                                     00528000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00529000
@RF00032 EQU   @RC00023                                                 00530000
@RC00025 EQU   @RC00023                                                 00531000
@RF00089 EQU   @RC00084                                                 00532000
@RF00092 EQU   @RC00084                                                 00533000
@PB00002 EQU   @EL00001                                                 00534000
@RF00029 EQU   @RC00025                                                 00535000
@ENDDATA EQU   *                                                        00536000
         END   IKTCAS30,(C'PLS0431',0701,77238)                         00537000
