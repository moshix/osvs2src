         TITLE '     IKTCAS40 - CONSOLE COMMUNICATION DRIVER           *00001000
                        '                                               00002000
IKTCAS40 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKTCAS40  77.238'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EJECT                                                          00018000
*  /******************************************************************/ 00019000
*  /*                                                                */ 00020000
*  /*  THIS PROGRAM IS ORGANIZED AS FOLLOWS:                         */ 00021000
*  /*                                                                */ 00022000
*  /*      A - HOUSEKEEPING                                          */ 00023000
*  /*                                                                */ 00024000
*  /*      B - MAINLINE, WHICH CONSISTS OF THE FOLLOWING:            */ 00025000
*  /*          1)  WAIT ON A LIST OF ECB'S                           */ 00026000
*  /*          2)  PROCESS AN OPERATOR COMMAND (IF ENTERED)          */ 00027000
*  /*          3)  PROCESS THE SYNCHRONOUS QUEUE                     */ 00028000
*  /*          4)  PROCESS MY STOP QUEUE (VIA IKTCAS41)              */ 00029000
*  /*          5)  PROCESS MY MODIFY QUEUE (VIA IKTCAS42)            */ 00030000
*  /*          6)  IF A STOP SUB-TASK COMMAND HAS NOT BEEN           */ 00031000
*  /*              GENERATED, GO BACK AND WAIT ON THE ECB'S          */ 00032000
*  /*                                                                */ 00033000
*  /*      C - CLEANUP AND RETURN                                    */ 00034000
*  /*                                                                */ 00035000
*  /******************************************************************/ 00036000
*  TWAPTR = R1;                            /*PICK UP WORK AREA PTR   */ 00037000
         LR    TWAPTR,R1                                           0039 00038000
*  RESPECIFY (R1) UNRESTRICTED;            /*FREE UP R1              */ 00039000
*  GOSW = '1'B;                            /*INITIALIZE GO SWITCH    */ 00040000
         OI    GOSW,B'10000000'                                    0041 00041000
*  TWACSKIP = 'N';                         /*INITIALIZE SKIP SWITCH  */ 00042000
         MVI   TWACSKIP(TWAPTR),C'N'                               0042 00043000
*  ECBADDR1 = CHECBP;                      /*SET UP                  */ 00044000
         L     @10,CSCBPTR(,TWAPTR)                                0043 00045000
         L     @15,CHECBP(,@10)                                    0043 00046000
         ST    @15,ECBADDR1                                        0043 00047000
*  ECBADDR2 = ADDR(TWACECB);               /* ECB                    */ 00048000
         LA    @15,TWACECB(,TWAPTR)                                0044 00049000
         ST    @15,ECBADDR2                                        0044 00050000
*  ECBEND = '80'X;                         /*  WAIT LIST             */ 00051000
         MVI   ECBEND,X'80'                                        0045 00052000
*  TWACEIFC(1) = 1;                        /*SET UP ESTAE            */ 00053000
         MVI   TWACEIFC(TWAPTR),X'01'                              0046 00054000
*  TWACERA(1) = 0;                         /* FOOTPRINTS             */ 00055000
         SLR   @15,@15                                             0047 00056000
         STCM  @15,7,TWACERA(TWAPTR)                               0047 00057000
*  TWACERRS(1) = 0;                        /*  LIST                  */ 00058000
         ST    @15,TWACERRS(,TWAPTR)                               0048 00059000
*  RFY R2 RSTD;                                                    0049 00060000
*  R2=ADDR(CHCIBP) ;                       /* LOAD CIB PTR           */ 00061000
         LA    R2,CHCIBP(,@10)                                     0050 00062000
*  GEN ;                                                           0051 00063000
  QEDIT  ORIGIN=(R2),CIBCTR=3                                           00064000
*  RFY R2 UNRSTD ;                                                 0052 00065000
*  DO WHILE (GOSW = '1'B);                 /*MAINLINE CODE           */ 00066000
         B     @DE00053                                            0053 00067000
@DL00053 DS    0H                                                  0054 00068000
*      CALL CHKECBS;                       /*CHK FOR OPERATOR CMND   */ 00069000
         BAL   @14,CHKECBS                                         0054 00070000
*      CALL CHKSYNCQ;                      /*PROCESS SYNC Q          */ 00071000
         BAL   @14,CHKSYNCQ                                        0055 00072000
*      CALL IKTCAS41;                      /*PROCESS STOP Q          */ 00073000
         L     @15,@CV00059                                        0056 00074000
         BALR  @14,@15                                             0056 00075000
*      CALL IKTCAS42;                      /*PROCESS MODIFY Q        */ 00076000
         L     @15,@CV00060                                        0057 00077000
         BALR  @14,@15                                             0057 00078000
*      TWACSKIP = 'N';                     /*TURN OFF SKIP SWITCH    */ 00079000
         MVI   TWACSKIP(TWAPTR),C'N'                               0058 00080000
*      IF GOSW='1'B                        /* IF CONT SW IS ON       */ 00081000
*         THEN DO ;                        /* YES,CONTINUE           */ 00082000
         TM    GOSW,B'10000000'                                    0059 00083000
         BNO   @RF00059                                            0059 00084000
*              GEN SETS(ECBLIST) ;                                 0061 00085000
         WAIT  ECBLIST=ECBLIST    WAIT ON ECB LIST FOR WORK             00086000
*              END ;                                               0062 00087000
*  END;                                    /*GO BACK TO SLEEP        */ 00088000
@RF00059 DS    0H                                                  0063 00089000
@DE00053 TM    GOSW,B'10000000'                                    0063 00090000
         BO    @DL00053                                            0063 00091000
*  TWACEIFC(1) = 0;                        /*CLEAR ESTAE FOOTPRINTS  */ 00092000
         MVI   TWACEIFC(TWAPTR),X'00'                              0064 00093000
*  RETURN CODE(0);                         /*FINISHED                */ 00094000
         SLR   @15,@15                                             0065 00095000
         L     @13,4(,@13)                                         0065 00096000
         L     @14,12(,@13)                                        0065 00097000
         LM    @00,@12,20(@13)                                     0065 00098000
         BR    @14                                                 0065 00099000
         EJECT                                                          00100000
*CHKECBS: PROC OPTIONS (SAVE (14));                                0066 00101000
@EL00001 L     @13,4(,@13)                                         0066 00102000
@EF00001 DS    0H                                                  0066 00103000
@ER00001 LM    @14,@12,12(@13)                                     0066 00104000
         BR    @14                                                 0066 00105000
CHKECBS  ST    @14,@SA00002                                        0066 00106000
*  /******************************************************************/ 00107000
*  /*                                                                */ 00108000
*  /*  THIS SUBROUTINE HANDLES THE COMMAND(S) ENTERED BY THE         */ 00109000
*  /*  OPERATOR (IF ANY).  THE MAIN PROCESSING IS AS FOLLOWS:        */ 00110000
*  /*                                                                */ 00111000
*  /*  -   ZERO OUT TWACECB (ECB USED BY OTHER TASKS TO POST ME)     */ 00112000
*  /*  -   IF OPERATOR COMMAND ECB NOT POSTED, EXIT                  */ 00113000
*  /*  -   ZERO OUT OPERATOR COMMAND ECB                             */ 00114000
*  /*  -   IF CIB Q IS EMPTY, EXIT                                   */ 00115000
*  /*  -   USING THE FIRST CIB IN THE Q, BUILD THE PROPER TYPE OF    */ 00116000
*  /*      W.E.                                                      */ 00117000
*  /*  -   PUT THE W.E. ON THE PROPER ASYNCHRONOUS Q                 */ 00118000
*  /*  -   DEQUEUE THE CIB USING THE QEDIT MACRO                     */ 00119000
*  /*  -   GO BACK UP AND SEE IF THE CIB Q IS NOW EMPTY              */ 00120000
*  /*                                                                */ 00121000
*  /******************************************************************/ 00122000
*  TWACECB = TWACECB && TWACECB;           /*CLEAR MY WAIT ECB       */ 00123000
         XC    TWACECB(4,TWAPTR),TWACECB(TWAPTR)                   0067 00124000
*      GEN (MODESET KEY=ZERO,MODE=SUP)                             0068 00125000
*          REFS(R0,R1,R14,R15);                                    0068 00126000
         MODESET KEY=ZERO,MODE=SUP                                      00127000
*      OPRTRECB = OPRTRECB && OPRTRECB;    /*CLEAR OPERATOR ECB      */ 00128000
         L     @10,CSCBPTR(,TWAPTR)                                0069 00129000
         L     @10,CHECBP(,@10)                                    0069 00130000
         XC    OPRTRECB(4,@10),OPRTRECB(@10)                       0069 00131000
*      GEN (MODESET KEY=NZERO,MODE=PROB)                           0070 00132000
*          REFS(R0,R1,R14,R15);                                    0070 00133000
         MODESET KEY=NZERO,MODE=PROB                                    00134000
*      DO WHILE (CIBPTR ^= 0);             /*PROCESS CIB Q           */ 00135000
         B     @DE00071                                            0071 00136000
@DL00071 DS    0H                                                  0072 00137000
*          IF CIBVERB = '40'X THEN         /*IS THIS A STOP CIB      */ 00138000
         L     @10,CSCBPTR(,TWAPTR)                                0072 00139000
         L     @10,CIBPTR(,@10)                                    0072 00140000
         CLI   CIBVERB(@10),X'40'                                  0072 00141000
         BNE   @RF00072                                            0072 00142000
*              CALL BLDSTPWE;              /*YES - BUILD STOP W.E.   */ 00143000
         BAL   @14,BLDSTPWE                                        0073 00144000
*          ELSE                            /*NO - TRY ANOTHER CODE   */ 00145000
*              IF CIBVERB = '44'X THEN     /*IS THIS A MODIFY CIB    */ 00146000
         B     @RC00072                                            0074 00147000
@RF00072 L     @10,CSCBPTR(,TWAPTR)                                0074 00148000
         L     @10,CIBPTR(,@10)                                    0074 00149000
         CLI   CIBVERB(@10),X'44'                                  0074 00150000
         BNE   @RF00074                                            0074 00151000
*                  CALL BLDMODWE;          /*YES - BUILD MODIFY W.E. */ 00152000
         BAL   @14,BLDMODWE                                        0075 00153000
*          RESPECIFY (R2,R3) RESTRICTED;   /*FREEZE FOR QEDIT MACRO  */ 00154000
@RF00074 DS    0H                                                  0076 00155000
@RC00072 DS    0H                                                  0077 00156000
*          R2 = ADDR(CHCIBP);              /*ADDR OF CIB PTR         */ 00157000
         L     @10,CSCBPTR(,TWAPTR)                                0077 00158000
         LA    R2,CHCIBP(,@10)                                     0077 00159000
*          R3 = CHCIBP;                    /*ADDR OF CIB TO BE FREED */ 00160000
         L     R3,CHCIBP(,@10)                                     0078 00161000
*          GEN (QEDIT ORIGIN=(R2),BLOCK=(R3)) /*FREE CIB             */ 00162000
*              REFS (R0,R1,R2,R3,R14,R15);                         0079 00163000
         QEDIT ORIGIN=(R2),BLOCK=(R3)                                   00164000
*          RESPECIFY (R2,R3) UNRESTRICTED;                         0080 00165000
*      END;                                                        0081 00166000
@DE00071 L     @10,CSCBPTR(,TWAPTR)                                0081 00167000
         L     @10,CIBPTR(,@10)                                    0081 00168000
         LTR   @10,@10                                             0081 00169000
         BNZ   @DL00071                                            0081 00170000
*END CHKECBS;                                                      0082 00171000
@EL00002 DS    0H                                                  0082 00172000
@EF00002 DS    0H                                                  0082 00173000
@ER00002 L     @14,@SA00002                                        0082 00174000
         BR    @14                                                 0082 00175000
         EJECT                                                          00176000
*BLDSTPWE: PROC OPTIONS (SAVE (14));                               0083 00177000
BLDSTPWE ST    @14,@SA00003                                        0083 00178000
*  /******************************************************************/ 00179000
*  /*                                                                */ 00180000
*  /*  THIS SUBROUTINE WILL GET THE SPACE FOR A STOP W.E., BUILD     */ 00181000
*  /*  IT, AND THEN Q IT ON THE STOP Q                               */ 00182000
*  /*                                                                */ 00183000
*  /******************************************************************/ 00184000
*  LENGTH = 16;                            /*LENGTH OF W.E.          */ 00185000
         LA    LENGTH,16                                           0084 00186000
*  SUBPL = 4;                              /*SUBPOOL NUMBER          */ 00187000
         LA    SUBPL,4                                             0085 00188000
*  CALL GETSPACE;                          /*GET SPACE               */ 00189000
         BAL   @14,GETSPACE                                        0086 00190000
*  WECODE1T = TCCONSLE;                    /*MY TASK                 */ 00191000
         L     @10,WEPTR                                           0087 00192000
         MVI   WECODE1T(@10),X'04'                                 0087 00193000
*  WECODE2T = TCCONSLE;                    /* CODE                   */ 00194000
         MVI   WECODE2T(@10),X'04'                                 0088 00195000
*  WECODE1F = FCCSTOP;                     /*STOP FUNCTION           */ 00196000
         MVI   WECODE1F(@10),X'11'                                 0089 00197000
*  WECODE2F = FCCSTOP;                     /* CODE                   */ 00198000
         MVI   WECODE2F(@10),X'11'                                 0090 00199000
*  WERC = 0;                               /*ZERO OUT                */ 00200000
         SLR   @05,@05                                             0091 00201000
         STH   @05,WERC(,@10)                                      0091 00202000
*  WELEN = LENGTH;                         /*LENGTH OF W.E.          */ 00203000
         STH   LENGTH,WELEN(,@10)                                  0092 00204000
*LOOP1:                                    /*COMPARE AND SWAP LOOP   */ 00205000
*  TEMPPTR = TWACSTPQ;                     /*CURRENT POINTER         */ 00206000
LOOP1    L     TEMPPTR,TWACSTPQ(,TWAPTR)                           0093 00207000
*  WENEXT = TEMPPTR;                       /*SET UP CHAIN FIELD      */ 00208000
         L     @10,WEPTR                                           0094 00209000
         ST    TEMPPTR,WENEXT(,@10)                                0094 00210000
*  CS(TEMPPTR,ADDRESS,TWACSTPQ);           /*TRY TO ADD ANOTHER W.E. */ 00211000
         L     @10,ADDRESS                                         0095 00212000
         CS    TEMPPTR,@10,TWACSTPQ(TWAPTR)                        0095 00213000
*  BC(7,LOOP1);                            /*DIDN'T WORK - TRY AGAIN */ 00214000
         BC    7,LOOP1                                             0096 00215000
*END BLDSTPWE;                                                     0097 00216000
@EL00003 DS    0H                                                  0097 00217000
@EF00003 DS    0H                                                  0097 00218000
@ER00003 L     @14,@SA00003                                        0097 00219000
         BR    @14                                                 0097 00220000
         EJECT                                                          00221000
*BLDMODWE: PROC OPTIONS (SAVE (14));                               0098 00222000
BLDMODWE ST    @14,@SA00004                                        0098 00223000
*  /******************************************************************/ 00224000
*  /*                                                                */ 00225000
*  /*  THIS SUBROUTINE WILL GET THE SPACE FOR A MODIFY W.E., BUILD   */ 00226000
*  /*  IT, AND THEN Q IT ON THE MODIFY Q                             */ 00227000
*  /*                                                                */ 00228000
*  /******************************************************************/ 00229000
*                                          /*CALCULATE THE SIZE OF   */ 00230000
*                                          /*THE W.E. BY ADDING 12   */ 00231000
*                                          /*(FOR THE SIZE OF THE    */ 00232000
*                                          /*FIXED PART), CIBDATLN+4 */ 00233000
*                                          /*(FOR THE SIZE OF THE    */ 00234000
*                                          /*VARIABLE PART) AND      */ 00235000
*                                          /*ROUNDING UP TO THE      */ 00236000
*                                          /*NEXT DOUBLEWORD         */ 00237000
*  LENGTH = ((12+CIBDATLN+4)+7)/8*8;                               0099 00238000
         L     @10,CSCBPTR(,TWAPTR)                                0099 00239000
         L     @10,CIBPTR(,@10)                                    0099 00240000
         LA    @00,23                                              0099 00241000
         AH    @00,CIBDATLN(,@10)                                  0099 00242000
         SRDA  @00,32                                              0099 00243000
         D     @00,@CF00065                                        0099 00244000
         SLA   @01,3                                               0099 00245000
         LR    LENGTH,@01                                          0099 00246000
*  SUBPL = 4;                              /*SUBPOOL NUMBER          */ 00247000
         LA    SUBPL,4                                             0100 00248000
*  CALL GETSPACE;                          /*GET SPACE               */ 00249000
         BAL   @14,GETSPACE                                        0101 00250000
*  WECODE1T = TCCONSLE;                    /*MY TASK                 */ 00251000
         L     @10,WEPTR                                           0102 00252000
         MVI   WECODE1T(@10),X'04'                                 0102 00253000
*  WECODE2T = TCCONSLE;                    /* CODE                   */ 00254000
         MVI   WECODE2T(@10),X'04'                                 0103 00255000
*  WECODE1F = FCCMODFY;                    /*MODIFY FUNCTION         */ 00256000
         MVI   WECODE1F(@10),X'21'                                 0104 00257000
*  WECODE2F = FCCMODFY;                    /* CODE                   */ 00258000
         MVI   WECODE2F(@10),X'21'                                 0105 00259000
*  WERC = 0;                               /*ZERO OUT                */ 00260000
         SLR   @05,@05                                             0106 00261000
         STH   @05,WERC(,@10)                                      0106 00262000
*  WELEN = LENGTH;                         /*LENGTH OF W.E.          */ 00263000
         STH   LENGTH,WELEN(,@10)                                  0107 00264000
*  WEDATA(1:CIBDATLN+4) = BLANKS;          /*SPACE OUT               */ 00265000
         L     @01,CSCBPTR(,TWAPTR)                                0108 00266000
         L     @04,CIBPTR(,@01)                                    0108 00267000
         LH    @15,CIBDATLN(,@04)                                  0108 00268000
         LA    @14,3                                               0108 00269000
         ALR   @14,@15                                             0108 00270000
         EX    @14,@SM00398                                        0108 00271000
*  IF CIBDATLN > 0 THEN                    /*IF PARMS ENTERED THEN   */ 00272000
         CR    @15,@05                                             0109 00273000
         BNH   @RF00109                                            0109 00274000
*     MVC(WEDATA(1:CIBDATLN),CIBDATA);     /*SAVE PARAMETERS FROM    */ 00275000
         L     @01,CSCBPTR(,TWAPTR)                                0110 00276000
         L     @01,CIBPTR(,@01)                                    0110 00277000
         LH    @05,CIBDATLN(,@01)                                  0110 00278000
         BCTR  @05,0                                               0110 00279000
         EX    @05,@SM00400                                        0110 00280000
*                                          /*MODIFY COMMAND          */ 00281000
*LOOP2:                                    /*COMPARE AND SWAP LOOP   */ 00282000
*  TEMPPTR = TWACMODQ;                     /*CURRENT POINTER         */ 00283000
@RF00109 DS    0H                                                  0111 00284000
LOOP2    L     TEMPPTR,TWACMODQ(,TWAPTR)                           0111 00285000
*  WENEXT = TEMPPTR;                       /*SET UP CHAIN FIELD      */ 00286000
         L     @10,WEPTR                                           0112 00287000
         ST    TEMPPTR,WENEXT(,@10)                                0112 00288000
*  CS(TEMPPTR,ADDRESS,TWACMODQ);           /*TRY TO ADD ANOTHER W.E. */ 00289000
         L     @10,ADDRESS                                         0113 00290000
         CS    TEMPPTR,@10,TWACMODQ(TWAPTR)                        0113 00291000
*  BC(7,LOOP2);                            /*DIDN'T WORK - TRY AGAIN */ 00292000
         BC    7,LOOP2                                             0114 00293000
*END BLDMODWE;                                                     0115 00294000
@EL00004 DS    0H                                                  0115 00295000
@EF00004 DS    0H                                                  0115 00296000
@ER00004 L     @14,@SA00004                                        0115 00297000
         BR    @14                                                 0115 00298000
         EJECT                                                          00299000
*CHKSYNCQ: PROC OPTIONS (SAVE (14));                               0116 00300000
CHKSYNCQ ST    @14,@SA00005                                        0116 00301000
*  /******************************************************************/ 00302000
*  /*                                                                */ 00303000
*  /*  THIS SUBROUTINE PROCESSES THE W.E.'S FOUND ON THE             */ 00304000
*  /*  SYNCHRONOUS QUEUE.  THE MAIN PROCESSING IS AS FOLLOWS:        */ 00305000
*  /*                                                                */ 00306000
*  /*  -   IF THE Q IS EMPTY, EXIT                                   */ 00307000
*  /*  -   IF THE FIRST W.E. IS NOT FOR ME, POST THE OWNER, EXIT,    */ 00308000
*  /*      AND GO BACK TO SLEEP                                      */ 00309000
*  /*  -   PROCESS THE W.E., AND DEQUEUE IT                          */ 00310000
*  /*  -   IF THE Q IS NOW EMPTY, POST ALL OF THE OTHER SUB-TASKS    */ 00311000
*  /*      AND EXIT                                                  */ 00312000
*  /*  -   IF THE TOP W.E. IS FOR ME, GO BACK UP TO THE PROCESS W.E. */ 00313000
*  /*      LINE AND LOOP BACK THRU                                   */ 00314000
*  /************************** ***************O********************* */ 00315000
*  RESPECIFY (WESTD) BASED (TWASYNQH);     /*SET UP NEW BASE FOR W.E */ 00316000
*  IF TWASYNQH ^= 0 THEN                   /*IS SYNC Q NON-EMPTY     */ 00317000
         L     @10,TWASYNQH(,TWAPTR)                               0118 00318000
         LTR   @10,@10                                             0118 00319000
         BZ    @RF00118                                            0118 00320000
*      DO;                                 /*YES-PROCESS AND DEQUEUE */ 00321000
*                                          /*W.E.'S WHILE Q NOT EMPTY*/ 00322000
*                                          /*AND TOP W.E. IS MINE    */ 00323000
*          DO WHILE (TWASYNQH ^= 0 & WECODE1T = TCCONSLE);         0120 00324000
         B     @DE00120                                            0120 00325000
@DL00120 DS    0H                                                  0121 00326000
*              ADDRESS = TWASYNQH;         /*SAVE FOR PRCSSYNE       */ 00327000
         L     @10,TWASYNQH(,TWAPTR)                               0121 00328000
         ST    @10,ADDRESS                                         0121 00329000
*              TEMPPTR = WENEXT;           /*PT TO NEXT W.E. ON CHAIN*/ 00330000
         L     TEMPPTR,WENEXT(,@10)                                0122 00331000
*              CS(TWASYNQH,TEMPPTR,TWASYNQH);  /*DEQUEUE TOP W.E.    */ 00332000
         L     @10,TWASYNQH(,TWAPTR)                               0123 00333000
         CS    @10,@02,TWASYNQH(TWAPTR)                            0123 00334000
         BZ    @BC00123                                            0123 00335000
         ST    @10,TWASYNQH(,TWAPTR)                               0123 00336000
@BC00123 DS    0H                                                  0124 00337000
*              CALL PRCSSYNE;              /*PROCESS JUST DEQUED W.E.*/ 00338000
         BAL   @14,PRCSSYNE                                        0124 00339000
*          END;                            /*LOOP BACK THRU          */ 00340000
@DE00120 L     @10,TWASYNQH(,TWAPTR)                               0125 00341000
         LTR   @10,@10                                             0125 00342000
         BZ    @DC00120                                            0125 00343000
         CLI   WECODE1T(@10),X'04'                                 0125 00344000
         BE    @DL00120                                            0125 00345000
@DC00120 DS    0H                                                  0126 00346000
*          IF TWASYNQH = 0 THEN            /*IS Q EMPTY              */ 00347000
         L     @10,TWASYNQH(,TWAPTR)                               0126 00348000
         LTR   @10,@10                                             0126 00349000
         BNZ   @RF00126                                            0126 00350000
*              DO;                         /*YES - POST EVERYBODY    */ 00351000
*              RESPECIFY (R1) RESTRICTED;  /*FREEZE FOR POSTS        */ 00352000
*              R1 = ADDR(TWAMECB);         /*ADDR OF ECB TO POST     */ 00353000
         LA    R1,TWAMECB(,TWAPTR)                                 0129 00354000
*              GEN (POST  (1))             /*POST MAIN TASK          */ 00355000
*                  REFS (R0,R1,R14,R15);                           0130 00356000
         POST  (1)                                                      00357000
*              R1 = ADDR(TWAVECB);         /*ADDR OF ECB TO POST     */ 00358000
         LA    R1,TWAVECB(,TWAPTR)                                 0131 00359000
*              GEN (POST  (1))             /*POST VTAM SUB-TASK      */ 00360000
*                  REFS (R0,R1,R14,R15);                           0132 00361000
         POST  (1)                                                      00362000
*              R1 = ADDR(TWAUECB);         /*ADDR OF ECB TO POST     */ 00363000
         LA    R1,TWAUECB(,TWAPTR)                                 0133 00364000
*              GEN (POST  (1))             /*POST USER SUB-TASK      */ 00365000
*                  REFS (R0,R1,R14,R15);                           0134 00366000
         POST  (1)                                                      00367000
*              RESPECIFY (R1) UNRESTRICTED; /*FREE UP R1             */ 00368000
*              END;                                                0136 00369000
*          ELSE                                                    0137 00370000
*              DO;                         /*NO                      */ 00371000
         B     @RC00126                                            0137 00372000
@RF00126 DS    0H                                                  0138 00373000
*              CALL POSTIT;                /*POST PROPER TASK        */ 00374000
         BAL   @14,POSTIT                                          0138 00375000
*              TWACSKIP = 'Y';             /* AND GO BACK TO SLEEP   */ 00376000
         MVI   TWACSKIP(TWAPTR),C'Y'                               0139 00377000
*              END;                                                0140 00378000
*      END;                                                        0141 00379000
*  RESPECIFY (WESTD);                      /*REVERT TO OLD BASE      */ 00380000
*END CHKSYNCQ;                                                     0143 00381000
@EL00005 DS    0H                                                  0143 00382000
@EF00005 DS    0H                                                  0143 00383000
@ER00005 L     @14,@SA00005                                        0143 00384000
         BR    @14                                                 0143 00385000
         EJECT                                                          00386000
*POSTIT: PROC OPTIONS (SAVE (14));                                 0144 00387000
POSTIT   ST    @14,@SA00006                                        0144 00388000
*  /******************************************************************/ 00389000
*  /*                                                                */ 00390000
*  /*  THIS SUBROUTINE WILL POST THE TASK WHOSE W.E. IS ON TOP OF    */ 00391000
*  /*  THE SYNC Q.                                                   */ 00392000
*  /*                                                                */ 00393000
*  /******************************************************************/ 00394000
*  RESPECIFY (WESTD) BASED (TWASYNQH);     /*SET UP NEW BASE FOR W.E.*/ 00395000
*  RESPECIFY (R1) RESTRICTED;              /*FREEZE FOR POSTS        */ 00396000
*  IF WECODE1T = TCMAIN THEN               /*W.E. FOR MAIN TASK      */ 00397000
         L     @10,TWASYNQH(,TWAPTR)                               0147 00398000
         CLI   WECODE1T(@10),X'01'                                 0147 00399000
         BNE   @RF00147                                            0147 00400000
*      DO;                                 /*YES                     */ 00401000
*      R1 = ADDR(TWAMECB);                 /*ADDR OF ECB TO POST     */ 00402000
         LA    R1,TWAMECB(,TWAPTR)                                 0149 00403000
*      GEN (POST  (1))                     /*POST HIM                */ 00404000
*          REFS (R0,R1,R14,R15);                                   0150 00405000
         POST  (1)                                                      00406000
*      END;                                                        0151 00407000
*  ELSE                                    /*NO                      */ 00408000
*      IF WECODE1T = TCVTAM THEN           /*W.E. FOR VTAM SUB-TASK  */ 00409000
         B     @RC00147                                            0152 00410000
@RF00147 L     @10,TWASYNQH(,TWAPTR)                               0152 00411000
         CLI   WECODE1T(@10),X'02'                                 0152 00412000
         BNE   @RF00152                                            0152 00413000
*          DO;                             /*YES                     */ 00414000
*          R1 = ADDR(TWAVECB);             /*ADDR OF ECB TO POST     */ 00415000
         LA    R1,TWAVECB(,TWAPTR)                                 0154 00416000
*          GEN (POST  (1))                 /*POST HIM                */ 00417000
*              REFS (R0,R1,R14,R15);                               0155 00418000
         POST  (1)                                                      00419000
*          END;                                                    0156 00420000
*      ELSE                                /*NO - FOR USER SUB-TASK  */ 00421000
*          DO;                                                     0157 00422000
         B     @RC00152                                            0157 00423000
@RF00152 DS    0H                                                  0158 00424000
*          R1 = ADDR(TWAUECB);             /*ADDR OF ECB TO POST     */ 00425000
         LA    R1,TWAUECB(,TWAPTR)                                 0158 00426000
*          GEN (POST  (1))                 /*POST HIM                */ 00427000
*              REFS (R0,R1,R14,R15);                               0159 00428000
         POST  (1)                                                      00429000
*          END;                                                    0160 00430000
*  RESPECIFY (WESTD);                      /*REVERT TO OLD BASE      */ 00431000
*  RESPECIFY (R1) UNRESTRICTED;            /*FREE UP                 */ 00432000
*END POSTIT;                                                       0163 00433000
@EL00006 DS    0H                                                  0163 00434000
@EF00006 DS    0H                                                  0163 00435000
@ER00006 L     @14,@SA00006                                        0163 00436000
         BR    @14                                                 0163 00437000
         EJECT                                                          00438000
*PRCSSYNE: PROC OPTIONS (SAVE (14));                               0164 00439000
PRCSSYNE ST    @14,@SA00007                                        0164 00440000
*  /******************************************************************/ 00441000
*  /*                                                                */ 00442000
*  /*  THE PURPOSE OF THIS SUBROUTINE IS TO PROCESS A W.E. FROM THE  */ 00443000
*  /*  SYNC Q.  THE MAIN PROCESSING IS AS FOLLOWS:                   */ 00444000
*  /*                                                                */ 00445000
*  /*  -   IF THE W.E. IS A NORMAL RETURN W.E., FREE UP THE SPACE    */ 00446000
*  /*      STARTING WITH THE ADDRESS OF THE W.E., USING THE LENGTH   */ 00447000
*  /*      FOUND IN 'WELEN', AND IN SUBPOOL 4.  IN ADDITION, IF THIS */ 00448000
*  /*      W.E. WAS PLACED HERE BY STOP PROCESSING, TURN 'GOSW' OFF  */ 00449000
*  /*      AND TURN ON 'TWACSKIP'.                                   */ 00450000
*  /*  -   IF THE W.E. IS AN END OF TASK W.E., TURN OFF 'GOSW' AND   */ 00451000
*  /*      TURN ON 'TWACSKIP'.                                       */ 00452000
*  /*  -   IF THE W.E. IS AN ABNORMAL RETURN MODIFY W.E., ISSUE AN   */ 00453000
*  /*      APPROPRIATE ERROR MESSAGE                                 */ 00454000
*  /*  -   EXIT                                                      */ 00455000
*  /*                                                                */ 00456000
*  /******************************************************************/ 00457000
*  IF WECODE1F = FCRETURN THEN             /*NORMAL RETURN W.E.      */ 00458000
         L     @10,WEPTR                                           0165 00459000
         CLI   WECODE1F(@10),X'FF'                                 0165 00460000
         BNE   @RF00165                                            0165 00461000
*      DO;                                 /*YES                     */ 00462000
*      IF WECODE2F = FCCSTOP THEN          /*SET UP BY STOP COMMAND  */ 00463000
         CLI   WECODE2F(@10),X'11'                                 0167 00464000
         BNE   @RF00167                                            0167 00465000
*          DO;                             /*YES                     */ 00466000
*          TWACSKIP = 'Y';                 /*TURN ON SKIP SW         */ 00467000
         MVI   TWACSKIP(TWAPTR),C'Y'                               0169 00468000
*          GOSW = '0'B;                    /*TURN OFF LOOP SW        */ 00469000
         NI    GOSW,B'01111111'                                    0170 00470000
*          END;                                                    0171 00471000
*      LENGTH = WELEN;                     /*LENGTH OF FREE SPACE    */ 00472000
@RF00167 L     @10,WEPTR                                           0172 00473000
         LH    LENGTH,WELEN(,@10)                                  0172 00474000
*      SUBPL = 4;                          /*SUBPOOL NUMBER          */ 00475000
         LA    SUBPL,4                                             0173 00476000
*      CALL FRESPACE;                      /*FREE THE SPACE          */ 00477000
         BAL   @14,FRESPACE                                        0174 00478000
*      RETURN;                             /*EXIT                    */ 00479000
@EL00007 DS    0H                                                  0175 00480000
@EF00007 DS    0H                                                  0175 00481000
@ER00007 L     @14,@SA00007                                        0175 00482000
         BR    @14                                                 0175 00483000
*      END;                                                        0176 00484000
*  IF WECODE1F = FCCEOT THEN               /*END OF TASK W.E.        */ 00485000
@RF00165 L     @10,WEPTR                                           0177 00486000
         CLI   WECODE1F(@10),X'03'                                 0177 00487000
         BNE   @RF00177                                            0177 00488000
*      DO;                                 /*YES                     */ 00489000
*      TWACSKIP = 'Y';                     /*TURN ON SKIP SW         */ 00490000
         MVI   TWACSKIP(TWAPTR),C'Y'                               0179 00491000
*      GOSW = '0'B;                        /*TURN OFF LOOP SW        */ 00492000
         NI    GOSW,B'01111111'                                    0180 00493000
*      END;                                                        0181 00494000
*  ELSE                                    /*NO                      */ 00495000
*      IF WECODE1F = FCCMODFY THEN         /*ABNRML RETURN MODFY W.E.*/ 00496000
         B     @RC00177                                            0182 00497000
@RF00177 L     @10,WEPTR                                           0182 00498000
         CLI   WECODE1F(@10),X'21'                                 0182 00499000
         BNE   @RF00182                                            0182 00500000
*          DO;                             /*YES                     */ 00501000
*          IF WECODE2T = TCVTAM THEN       /*REJECTED BY VTAM INTER  */ 00502000
         CLI   WECODE2T(@10),X'02'                                 0184 00503000
         BNE   @RF00184                                            0184 00504000
*              DO;                         /*YES                     */ 00505000
*              RESPECIFY (R1) RESTRICTED;                          0186 00506000
*              R1 = 11;                    /*MESSAGE NUMBER          */ 00507000
         LA    R1,11                                               0187 00508000
*              CALL MSGBLK;                /*ADDR OF LIST FORM OF MSG*/ 00509000
         L     @15,TWAMSG(,TWAPTR)                                 0188 00510000
         BALR  @14,@15                                             0188 00511000
*              MVC(IKT011I(1:MSGLNGTH),MSGDATA); /*MOVE LIST FORM    */ 00512000
         L     @10,MSGLNGTH(,R1)                                   0189 00513000
         BCTR  @10,0                                               0189 00514000
         EX    @10,@SM00403                                        0189 00515000
*              R1 = ADDR(IKT011I);         /*ADDR OF LIST FORM       */ 00516000
         LA    R1,IKT011I                                          0190 00517000
*              IF WECODE2F = FCVQUSCE THEN /*MOVE                    */ 00518000
         L     @10,WEPTR                                           0191 00519000
         CLI   WECODE2F(@10),X'13'                                 0191 00520000
         BNE   @RF00191                                            0191 00521000
*                  IKT011IA = 'QUIESCE';   /* IN                     */ 00522000
         MVC   IKT011IA(7),@CC00388                                0192 00523000
*              ELSE                        /*  PROPER                */ 00524000
*                  IKT011IA = 'START  ';   /*   IDENTIFIER           */ 00525000
         B     @RC00191                                            0193 00526000
@RF00191 MVC   IKT011IA(7),@CC00389                                0193 00527000
*              GEN (WTO   MF=(E,(1)))      /*ISSUE WTO               */ 00528000
*                  REFS (R0,R1,R14,R15);                           0194 00529000
@RC00191 DS    0H                                                  0194 00530000
         WTO   MF=(E,(1))                                               00531000
*              RESPECIFY (R1) UNRESTRICTED;                        0195 00532000
*              END;                                                0196 00533000
*          END;                                                    0197 00534000
*END PRCSSYNE;                                                     0198 00535000
         B     @EL00007                                            0198 00536000
         EJECT                                                          00537000
*FRESPACE: PROC OPTIONS (SAVE (14));                               0199 00538000
FRESPACE ST    @14,@SA00008                                        0199 00539000
*  /******************************************************************/ 00540000
*  /*                                                                */ 00541000
*  /*  THIS SUBROUTINE DOES A FREEMAIN FOR THE NUMBER OF BYTES       */ 00542000
*  /*  SPECIFIED IN 'LENGTH', USING THE ADDRESS FOUND IN 'ADDRESS'   */ 00543000
*  /*  AS A STARTING ADDRESS, AND USING THE VALUE FOUND IN 'SUBPL'   */ 00544000
*  /*  AS THE SUBPOOL NUMBER                                         */ 00545000
*  /*                                                                */ 00546000
*  /******************************************************************/ 00547000
*  RESPECIFY (R2,R3) RESTRICTED;                                   0200 00548000
*  R2 = LENGTH;                                                    0201 00549000
         LR    R2,LENGTH                                           0201 00550000
*  R3 = SUBPL;                                                     0202 00551000
         LR    R3,SUBPL                                            0202 00552000
*  GEN (FREEMAIN EU,LV=(R2),A=ADDRESS,SP=(R3))                     0203 00553000
*      REFS (ADDRESS,R0,R1,R2,R3,R14,R15);                         0203 00554000
         FREEMAIN EU,LV=(R2),A=ADDRESS,SP=(R3)                          00555000
*  RESPECIFY (R2,R3) UNRESTRICTED;                                 0204 00556000
*END FRESPACE;                                                     0205 00557000
@EL00008 DS    0H                                                  0205 00558000
@EF00008 DS    0H                                                  0205 00559000
@ER00008 L     @14,@SA00008                                        0205 00560000
         BR    @14                                                 0205 00561000
         EJECT                                                          00562000
*GETSPACE: PROC OPTIONS (SAVE (14));                               0206 00563000
GETSPACE ST    @14,@SA00009                                        0206 00564000
*  /******************************************************************/ 00565000
*  /*                                                                */ 00566000
*  /*  THIS SUBROUTINE DOES A GETMAIN FOR THE NUMBER OF BYTES        */ 00567000
*  /*  SPECIFIED IN 'LENGTH' (SHOULD BE A DOUBLEWORD MULTIPLE),      */ 00568000
*  /*  FROM THE SUBPOOL SPECIFIED IN 'SUBPL', AND THEN PLACES THE    */ 00569000
*  /*  STARTING ADDRESS OF THE GETMAIN'ED AREA IN 'ADDRESS'.         */ 00570000
*  /*                                                                */ 00571000
*  /******************************************************************/ 00572000
*  RESPECIFY (R2,R3) RESTRICTED;                                   0207 00573000
*  R2 = LENGTH;                                                    0208 00574000
         LR    R2,LENGTH                                           0208 00575000
*  R3 = SUBPL;                                                     0209 00576000
         LR    R3,SUBPL                                            0209 00577000
*  GEN (GETMAIN EU,LV=(R2),A=ADDRESS,SP=(R3))                      0210 00578000
*      REFS (ADDRESS,R0,R1,R2,R3,R14,R15);                         0210 00579000
         GETMAIN EU,LV=(R2),A=ADDRESS,SP=(R3)                           00580000
*  RESPECIFY (R2,R3) UNRESTRICTED;                                 0211 00581000
*END GETSPACE;                                                     0212 00582000
@EL00009 DS    0H                                                  0212 00583000
@EF00009 DS    0H                                                  0212 00584000
@ER00009 L     @14,@SA00009                                        0212 00585000
         BR    @14                                                 0212 00586000
         EJECT                                                          00587000
*END IKTCAS40                                                      0213 00588000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00589000
*/*%INCLUDE SYSLIB  (IEECHAIN)                                        * 00590000
*/*%INCLUDE SYSLIB  (IEZCIB  )                                        * 00591000
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        * 00592000
*;                                                                 0213 00593000
@DATA    DS    0H                                                       00594000
@SM00398 MVC   WEDATA(0,@10),BLANKS                                     00595000
@SM00400 MVC   WEDATA(0,@10),CIBDATA(@04)                               00596000
@SM00403 MVC   IKT011I(0),MSGDATA(R1)                                   00597000
         DS    0F                                                       00598000
@SA00001 DS    18F                                                      00599000
@SA00002 DS    1F                                                       00600000
@SA00005 DS    1F                                                       00601000
@SA00003 DS    1F                                                       00602000
@SA00004 DS    1F                                                       00603000
@SA00009 DS    1F                                                       00604000
@SA00007 DS    1F                                                       00605000
@SA00006 DS    1F                                                       00606000
@SA00008 DS    1F                                                       00607000
         DS    0F                                                       00608000
@CF00065 DC    F'8'                                                     00609000
@CV00059 DC    V(IKTCAS41)                                              00610000
@CV00060 DC    V(IKTCAS42)                                              00611000
         DS    0D                                                       00612000
ADDRESS  DS    A                                                        00613000
@CC00388 DC    C'QUIESCE'                                               00614000
@CC00389 DC    C'START  '                                               00615000
BLANKS   DC    CL48' '                                                  00616000
         DS    CL2                                                      00617000
ECBLIST  DS    CL8                                                      00618000
         ORG   ECBLIST                                                  00619000
ECBADDR1 DS    FL4                                                      00620000
ECBADDR2 DS    FL4                                                      00621000
         ORG   ECBADDR2                                                 00622000
ECBEND   DS    FL1                                                      00623000
@NM00001 DS    FL3                                                      00624000
         ORG   ECBLIST+8                                                00625000
SWITCHES DS    CL1                                                      00626000
         ORG   SWITCHES                                                 00627000
GOSW     DS    BL1                                                      00628000
@NM00002 EQU   SWITCHES+0                                               00629000
         ORG   SWITCHES+1                                               00630000
         DS    CL3                                                      00631000
IKT011I  DS    CL96                                                     00632000
         ORG   IKT011I                                                  00633000
@NM00004 DS    CL28                                                     00634000
IKT011IA DS    CL7                                                      00635000
@NM00005 DS    CL61                                                     00636000
         ORG   IKT011I+96                                               00637000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00638000
@01      EQU   01                                                       00639000
@02      EQU   02                                                       00640000
@03      EQU   03                                                       00641000
@04      EQU   04                                                       00642000
@05      EQU   05                                                       00643000
@06      EQU   06                                                       00644000
@07      EQU   07                                                       00645000
@08      EQU   08                                                       00646000
@09      EQU   09                                                       00647000
@10      EQU   10                                                       00648000
@11      EQU   11                                                       00649000
@12      EQU   12                                                       00650000
@13      EQU   13                                                       00651000
@14      EQU   14                                                       00652000
@15      EQU   15                                                       00653000
TEMPPTR  EQU   @02                                                      00654000
SUBPL    EQU   @05                                                      00655000
LENGTH   EQU   @04                                                      00656000
R0       EQU   @00                                                      00657000
R1       EQU   @01                                                      00658000
R2       EQU   @02                                                      00659000
R3       EQU   @03                                                      00660000
TWAPTR   EQU   @11                                                      00661000
R14      EQU   @14                                                      00662000
R15      EQU   @15                                                      00663000
OPRTRECB EQU   0                                                        00664000
MSGBLK   EQU   0                                                        00665000
@NM00003 EQU   0                                                        00666000
MSGLNGTH EQU   @NM00003                                                 00667000
MSGDATA  EQU   @NM00003+4                                               00668000
WESTD    EQU   0                                                        00669000
WECODE1T EQU   WESTD                                                    00670000
WECODE1F EQU   WESTD+1                                                  00671000
WECODE2T EQU   WESTD+2                                                  00672000
WECODE2F EQU   WESTD+3                                                  00673000
WENEXT   EQU   WESTD+4                                                  00674000
WERC     EQU   WESTD+8                                                  00675000
WELEN    EQU   WESTD+10                                                 00676000
WEDATA   EQU   WESTD+12                                                 00677000
CHAIN    EQU   0                                                        00678000
CHFLG    EQU   CHAIN+4                                                  00679000
CHSTS    EQU   CHFLG+2                                                  00680000
CHACT    EQU   CHFLG+3                                                  00681000
CHKEY    EQU   CHAIN+8                                                  00682000
CHPARM   EQU   CHKEY                                                    00683000
CHPKE    EQU   CHAIN+28                                                 00684000
CHTJID   EQU   CHAIN+30                                                 00685000
CHPROCSN EQU   CHAIN+32                                                 00686000
CHACT1   EQU   CHPROCSN+3                                               00687000
CHASM    EQU   CHAIN+40                                                 00688000
CHECBP   EQU   CHASM                                                    00689000
CHCIBP   EQU   CHASM+4                                                  00690000
CHRGNSZ  EQU   CHASM+8                                                  00691000
CHSTEP   EQU   CHASM+24                                                 00692000
CHSWT    EQU   CHSTEP                                                   00693000
CHSHORT  EQU   CHASM+32                                                 00694000
CIBNAME  EQU   0                                                        00695000
CIBVERB  EQU   CIBNAME+4                                                00696000
CIBASID  EQU   CIBNAME+10                                               00697000
CIBDATLN EQU   CIBNAME+14                                               00698000
CIBDATA  EQU   CIBNAME+16                                               00699000
TWAR     EQU   0                                                        00700000
TWASYNQH EQU   TWAR+4                                                   00701000
TWACSCB  EQU   TWAR+16                                                  00702000
TWAMSG   EQU   TWAR+48                                                  00703000
TWAMECB  EQU   TWAR+64                                                  00704000
TWAMFL   EQU   TWAR+80                                                  00705000
TWAVFL   EQU   TWAR+81                                                  00706000
TWAUFL   EQU   TWAR+82                                                  00707000
TWACFL   EQU   TWAR+83                                                  00708000
TWAM     EQU   TWAR+84                                                  00709000
TWAME    EQU   TWAM+68                                                  00710000
TWAMEI   EQU   TWAME                                                    00711000
TWAV     EQU   TWAR+184                                                 00712000
TWAVE    EQU   TWAV+68                                                  00713000
TWAVEI   EQU   TWAVE                                                    00714000
TWAVI    EQU   TWAR+284                                                 00715000
TWAVECB  EQU   TWAVI                                                    00716000
TWAU     EQU   TWAR+300                                                 00717000
TWAUE    EQU   TWAU+68                                                  00718000
TWAUEI   EQU   TWAUE                                                    00719000
TWAUI    EQU   TWAR+400                                                 00720000
TWAUECB  EQU   TWAUI                                                    00721000
TWAC     EQU   TWAR+408                                                 00722000
TWACE    EQU   TWAC+68                                                  00723000
TWACEI   EQU   TWACE                                                    00724000
TWACEIFC EQU   TWACEI                                                   00725000
TWACERA  EQU   TWACEI+1                                                 00726000
TWACERRS EQU   TWACE+4                                                  00727000
TWACI    EQU   TWAR+508                                                 00728000
TWACECB  EQU   TWACI                                                    00729000
TWACSTPQ EQU   TWACI+4                                                  00730000
TWACMODQ EQU   TWACI+8                                                  00731000
TWACSKIP EQU   TWACI+12                                                 00732000
CIBPTR   EQU   CHCIBP                                                   00733000
CSCBPTR  EQU   TWACSCB                                                  00734000
WEPTR    EQU   ADDRESS                                                  00735000
CHAINS01 EQU   CHASM                                                    00736000
CHTYPE   EQU   CHAINS01+124                                             00737000
CHTRSTAT EQU   CHAINS01+125                                             00738000
CHCSYSO  EQU   CHAINS01+134                                             00739000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00740000
CHLAST   EQU   CHAINS01+136                                             00741000
CHSPA    EQU   CHAINS01+135                                             00742000
CHUSERID EQU   CHCSYSO                                                  00743000
CHJB     EQU   CHCSYSO                                                  00744000
CHDUMP   EQU   CHCSYSO                                                  00745000
CHQUE    EQU   CHCSYSO                                                  00746000
CHHOLD   EQU   CHCSYSO                                                  00747000
CHOUT    EQU   CHCSYSO                                                  00748000
CHINN    EQU   CHCSYSO                                                  00749000
CHALL    EQU   CHCSYSO                                                  00750000
CHINC    EQU   CHAINS01+132                                             00751000
CHPEND   EQU   CHAINS01+128                                             00752000
CHARID   EQU   CHAINS01+127                                             00753000
CHCNID   EQU   CHAINS01+126                                             00754000
@NM00009 EQU   CHTRSTAT                                                 00755000
CHTSL    EQU   CHTRSTAT                                                 00756000
CHTS     EQU   CHTRSTAT                                                 00757000
CHINITL  EQU   CHTRSTAT                                                 00758000
CHINIT   EQU   CHTRSTAT                                                 00759000
CHJOBSL  EQU   CHTRSTAT                                                 00760000
CHJOBS   EQU   CHTRSTAT                                                 00761000
CHDEF    EQU   CHTYPE                                                   00762000
CHHIAR   EQU   CHTYPE                                                   00763000
CHARSV29 EQU   CHTYPE                                                   00764000
CHARSV28 EQU   CHTYPE                                                   00765000
CHARSV27 EQU   CHTYPE                                                   00766000
CHARSV26 EQU   CHTYPE                                                   00767000
CHARSV25 EQU   CHTYPE                                                   00768000
CHDSTAT  EQU   CHTYPE                                                   00769000
CHBUF    EQU   CHAINS01                                                 00770000
TWAEND   EQU   TWAR+536                                                 00771000
TWAWORKE EQU   TWAR+524                                                 00772000
@NM00016 EQU   TWACI+13                                                 00773000
TWACRTFC EQU   TWAC+60                                                  00774000
TWACABFC EQU   TWAC+56                                                  00775000
TWACTWA  EQU   TWAC+52                                                  00776000
TWACEWA  EQU   TWAC+4                                                   00777000
TWACID   EQU   TWAC                                                     00778000
TWAUACQH EQU   TWAUI+4                                                  00779000
TWAUERRS EQU   TWAUE+4                                                  00780000
TWAUERA  EQU   TWAUEI+1                                                 00781000
TWAUEIFC EQU   TWAUEI                                                   00782000
TWAURTFC EQU   TWAU+60                                                  00783000
TWAUABFC EQU   TWAU+56                                                  00784000
TWAUTWA  EQU   TWAU+52                                                  00785000
TWAUEWA  EQU   TWAU+4                                                   00786000
TWAUID   EQU   TWAU                                                     00787000
TWAVACQH EQU   TWAVI+12                                                 00788000
TWAVTHQH EQU   TWAVI+8                                                  00789000
TWAVTEQH EQU   TWAVI+4                                                  00790000
TWAVERRS EQU   TWAVE+4                                                  00791000
TWAVERA  EQU   TWAVEI+1                                                 00792000
TWAVEIFC EQU   TWAVEI                                                   00793000
TWAVRTFC EQU   TWAV+60                                                  00794000
TWAVABFC EQU   TWAV+56                                                  00795000
TWAVTWA  EQU   TWAV+52                                                  00796000
TWAVEWA  EQU   TWAV+4                                                   00797000
TWAVID   EQU   TWAV                                                     00798000
TWAMERRS EQU   TWAME+4                                                  00799000
TWAMERA  EQU   TWAMEI+1                                                 00800000
TWAMEIFC EQU   TWAMEI                                                   00801000
TWAMRTFC EQU   TWAM+60                                                  00802000
TWAMABFC EQU   TWAM+56                                                  00803000
TWAMTWA  EQU   TWAM+52                                                  00804000
TWAMEWA  EQU   TWAM+4                                                   00805000
TWAMID   EQU   TWAM                                                     00806000
@NM00015 EQU   TWACFL                                                   00807000
TWACFL4  EQU   TWACFL                                                   00808000
TWACFL2  EQU   TWACFL                                                   00809000
TWACFL1  EQU   TWACFL                                                   00810000
@NM00014 EQU   TWAUFL                                                   00811000
TWAUFL4  EQU   TWAUFL                                                   00812000
TWAUFL3  EQU   TWAUFL                                                   00813000
TWAUFL2  EQU   TWAUFL                                                   00814000
TWAUFL1  EQU   TWAUFL                                                   00815000
@NM00013 EQU   TWAVFL                                                   00816000
TWAVFL6  EQU   TWAVFL                                                   00817000
TWAVFL5  EQU   TWAVFL                                                   00818000
TWAVFL4  EQU   TWAVFL                                                   00819000
TWAVFL3  EQU   TWAVFL                                                   00820000
TWAVFL2  EQU   TWAVFL                                                   00821000
TWAVFL1  EQU   TWAVFL                                                   00822000
@NM00012 EQU   TWAMFL                                                   00823000
TWAMFL1  EQU   TWAMFL                                                   00824000
TWACCOMP EQU   TWAR+76                                                  00825000
TWAUCOMP EQU   TWAR+72                                                  00826000
TWAVCOMP EQU   TWAR+68                                                  00827000
TWACTCB  EQU   TWAR+60                                                  00828000
TWAUTCB  EQU   TWAR+56                                                  00829000
TWAVTCB  EQU   TWAR+52                                                  00830000
TWADEQAS EQU   TWAR+44                                                  00831000
TWAEESR  EQU   TWAR+40                                                  00832000
TWAPPSR  EQU   TWAR+36                                                  00833000
TWATCSR  EQU   TWAR+32                                                  00834000
TWATTSR  EQU   TWAR+28                                                  00835000
TWAINIT  EQU   TWAR+24                                                  00836000
TWATCAST EQU   TWAR+20                                                  00837000
TWAASCB  EQU   TWAR+12                                                  00838000
TWAPASQH EQU   TWAR+8                                                   00839000
TWARSON  EQU   TWAR+2                                                   00840000
TWACOMP  EQU   TWAR                                                     00841000
@NM00011 EQU   CIBNAME+13                                               00842000
CIBCONID EQU   CIBNAME+12                                               00843000
CIBTJID  EQU   CIBASID                                                  00844000
@NM00010 EQU   CIBNAME+6                                                00845000
CIBLEN   EQU   CIBNAME+5                                                00846000
CIBNEXT  EQU   CIBNAME                                                  00847000
CHARSV16 EQU   CHSHORT+100                                              00848000
CHARSV15 EQU   CHSHORT+96                                               00849000
CHJSCBVS EQU   CHSHORT+92                                               00850000
CHUSCVS  EQU   CHSHORT+88                                               00851000
@NM00008 EQU   CHSHORT+84                                               00852000
@NM00007 EQU   CHSHORT+80                                               00853000
CHSQA    EQU   CHSHORT+44                                               00854000
CHQPA    EQU   CHSHORT+8                                                00855000
CHJCL    EQU   CHSHORT+4                                                00856000
CHSPC    EQU   CHSHORT                                                  00857000
CHSPB    EQU   CHSTEP+4                                                 00858000
CHTCB    EQU   CHSTEP+1                                                 00859000
CHARSV23 EQU   CHSWT                                                    00860000
CHARSV22 EQU   CHSWT                                                    00861000
CHARSV21 EQU   CHSWT                                                    00862000
CHAC     EQU   CHSWT                                                    00863000
CHPSF    EQU   CHSWT                                                    00864000
CHPSD    EQU   CHSWT                                                    00865000
CHJCT    EQU   CHSWT                                                    00866000
CHARSV20 EQU   CHSWT                                                    00867000
CHCECB   EQU   CHASM+20                                                 00868000
CHECB    EQU   CHASM+16                                                 00869000
CHRGNAD  EQU   CHASM+12                                                 00870000
CHARSV18 EQU   CHRGNSZ+1                                                00871000
CHRPRTY  EQU   CHRGNSZ                                                  00872000
@NM00006 EQU   CHCIBP                                                   00873000
CHEND    EQU   CHCIBP                                                   00874000
CHDER    EQU   CHPROCSN+4                                               00875000
CHARSV10 EQU   CHACT1                                                   00876000
CHARSV09 EQU   CHACT1                                                   00877000
CHARSV08 EQU   CHACT1                                                   00878000
CHARSV07 EQU   CHACT1                                                   00879000
CHARSV06 EQU   CHACT1                                                   00880000
CHARSV05 EQU   CHACT1                                                   00881000
CHARSV04 EQU   CHACT1                                                   00882000
CHRDWTR  EQU   CHACT1                                                   00883000
CHARSV30 EQU   CHPROCSN+2                                               00884000
CHQID    EQU   CHPROCSN                                                 00885000
CHASID   EQU   CHTJID                                                   00886000
CHUCMP   EQU   CHAIN+29                                                 00887000
CHTRKID  EQU   CHPKE                                                    00888000
CHCIBCTR EQU   CHAIN+27                                                 00889000
CHUNIT   EQU   CHAIN+24                                                 00890000
CHCLS    EQU   CHAIN+16                                                 00891000
CHPCOI   EQU   CHPARM                                                   00892000
CHIFY    EQU   CHACT                                                    00893000
CHAIFX   EQU   CHACT                                                    00894000
CHCLD    EQU   CHACT                                                    00895000
CHCL     EQU   CHACT                                                    00896000
CHDSI    EQU   CHACT                                                    00897000
CHDISC   EQU   CHACT                                                    00898000
CHTERM   EQU   CHACT                                                    00899000
CHSWAP   EQU   CHACT                                                    00900000
CHABTERM EQU   CHSTS                                                    00901000
CHFC     EQU   CHSTS                                                    00902000
CHDL     EQU   CHSTS                                                    00903000
CHAD     EQU   CHSTS                                                    00904000
CHQSPC   EQU   CHSTS                                                    00905000
CHSOUT   EQU   CHSTS                                                    00906000
CHSYS    EQU   CHSTS                                                    00907000
CHAP     EQU   CHSTS                                                    00908000
CHSZE    EQU   CHFLG+1                                                  00909000
CHVCD    EQU   CHFLG                                                    00910000
CHPTR    EQU   CHAIN                                                    00911000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00912000
@RF00118 EQU   @EL00005                                                 00913000
@RC00126 EQU   @EL00005                                                 00914000
@RC00152 EQU   @EL00006                                                 00915000
@RC00147 EQU   @EL00006                                                 00916000
@RF00182 EQU   @EL00007                                                 00917000
@RC00177 EQU   @EL00007                                                 00918000
@RF00184 EQU   @EL00007                                                 00919000
@ENDDATA EQU   *                                                        00920000
         END   IKTCAS40,(C'PLS0445',0701,77238)                         00921000
