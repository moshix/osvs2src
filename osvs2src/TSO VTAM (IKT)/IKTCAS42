         TITLE '     IKTCAS42 - MODIFY Q PROCESSOR                     *00001000
                        '                                               00002000
IKTCAS42 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKTCAS42  77.319'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         EJECT                                                          00018000
*  /******************************************************************/ 00019000
*  /*                                                                */ 00020000
*  /*  THIS SUBROUTINE PROCESSES THE W.E.'S FOUND ON THE             */ 00021000
*  /*  ASYNCHRONOUS MODIFY QUEUE.  THE MAIN PROCESSING IS AS         */ 00022000
*  /*  FOLLOWS:                                                      */ 00023000
*  /*                                                                */ 00024000
*  /*  -   IF THE Q IS EMPTY, EXIT                                   */ 00025000
*  /*  -   FIND THE W.E. AT THE TOP OF THE Q                         */ 00026000
*  /*  -   CALL THE SUBROUTINE 'PRCSMODE'                            */ 00027000
*  /*  -   UPON RETURN FROM 'PRCSMODE', IF THE SUBROUTINE WAS        */ 00028000
*  /*      UNABLE TO HANDLE THE REQUEST, EXIT AND GO BACK TO SLEEP   */ 00029000
*  /*  -   OTHERWISE, DEQUEUE THE TOP W.E. AND EXIT                  */ 00030000
*  /*                                                                */ 00031000
*  /******************************************************************/ 00032000
*  TCASTPTR=TWATCAST ;                     /*ESTABLISH TCAST ADDRESS */ 00033000
         L     TCASTPTR,TWATCAST(,TWAPTR)                          0037 00034000
*  PARMERR = '0'B;                         /*INITIALIZE SWITCH       */ 00035000
         NI    PARMERR,B'01111111'                                 0038 00036000
*  RESPECIFY (WESTD) BASED (TEMPPTR);      /*SET UP NEW BASE FOR W.E.*/ 00037000
*  IF TWACSKIP = 'N' & TWACMODQ ^= 0 THEN  /*SHOULD WE PROCESS MOD Q */ 00038000
         CLI   TWACSKIP(TWAPTR),C'N'                               0040 00039000
         BNE   @RF00040                                            0040 00040000
         L     @10,TWACMODQ(,TWAPTR)                               0040 00041000
         LTR   @10,@10                                             0040 00042000
         BZ    @RF00040                                            0040 00043000
*      DO;                                 /*YES                     */ 00044000
*      TEMPPTR = TWACMODQ;                 /*GET BEGINNING POINTER   */ 00045000
         LR    TEMPPTR,@10                                         0042 00046000
*      DO WHILE (WENEXT ^= 0);             /*FIND                    */ 00047000
         B     @DE00043                                            0043 00048000
@DL00043 DS    0H                                                  0044 00049000
*          TEMPPTR = WENEXT;               /* LAST W.E.              */ 00050000
         L     TEMPPTR,WENEXT(,TEMPPTR)                            0044 00051000
*      END;                                /*  ON Q                  */ 00052000
@DE00043 L     @10,WENEXT(,TEMPPTR)                                0045 00053000
         LTR   @10,@10                                             0045 00054000
         BNZ   @DL00043                                            0045 00055000
*      CALL PRCSMODE;                      /*PROCESS THE W.E.        */ 00056000
         BAL   @14,PRCSMODE                                        0046 00057000
*      IF TWACSKIP = 'N' THEN              /*KEEP ON GOING           */ 00058000
         CLI   TWACSKIP(TWAPTR),C'N'                               0047 00059000
         BNE   @RF00047                                            0047 00060000
*          DO;                             /*YES                     */ 00061000
*LOOP1:                                    /*COMPARE AND SWAP LOOP   */ 00062000
*          TEMPPTR = TWACMODQ;             /*GET BEGINNING POINTER   */ 00063000
LOOP1    L     TEMPPTR,TWACMODQ(,TWAPTR)                           0049 00064000
*                                          /*MAKE TWACMODQ THE WENEXT*/ 00065000
*                                          /*FIELD OF A PSEUDO W.E.  */ 00066000
*          TEMPPTR2 = ADDR(TWACMODQ) - (ADDR(WENEXT) - ADDR(WESTD));    00067000
         LA    TEMPPTR2,TWACMODQ(,TWAPTR)                          0050 00068000
         SL    TEMPPTR2,@CF00118                                   0050 00069000
*          DO WHILE (WENEXT ^= 0);         /*FIND                    */ 00070000
         B     @DE00051                                            0051 00071000
@DL00051 DS    0H                                                  0052 00072000
*              TEMPPTR2 = TEMPPTR;         /* LAST                   */ 00073000
         LR    TEMPPTR2,TEMPPTR                                    0052 00074000
*              TEMPPTR = WENEXT;           /*  W.E.                  */ 00075000
         L     TEMPPTR,WENEXT(,TEMPPTR)                            0053 00076000
*          END;                            /*   ON Q                 */ 00077000
@DE00051 L     @10,WENEXT(,TEMPPTR)                                0054 00078000
         LTR   @10,@10                                             0054 00079000
         BNZ   @DL00051                                            0054 00080000
*                                          /*HAVE ANY W.E.'S BEEN    */ 00081000
*                                          /*INSERTED BETWEEN THE    */ 00082000
*                                          /*BOTTOM W.E. AND THE NEXT*/ 00083000
*                                          /*TO BOTTOM W.E.          */ 00084000
*          CS(TEMPPTR,WENEXT,TEMPPTR2 -> WENEXT);                  0055 00085000
         CS    TEMPPTR,@10,WENEXT(TEMPPTR2)                        0055 00086000
*          BC(7,LOOP1);                    /*YES - TRY AGAIN         */ 00087000
         BC    7,LOOP1                                             0056 00088000
*          LENGTH = WELEN;                 /*FREE                    */ 00089000
         LH    LENGTH,WELEN(,TEMPPTR)                              0057 00090000
*          SUBPL = WECODE2T;               /* THE                    */ 00091000
         SLR   SUBPL,SUBPL                                         0058 00092000
         IC    SUBPL,WECODE2T(,TEMPPTR)                            0058 00093000
*          ADDRESS = TEMPPTR;              /*  OLD                   */ 00094000
         ST    TEMPPTR,ADDRESS                                     0059 00095000
*          CALL FRESPACE;                  /*   W.E.                 */ 00096000
         BAL   @14,FRESPACE                                        0060 00097000
*          END;                                                    0061 00098000
*      END;                                                        0062 00099000
@RF00047 DS    0H                                                  0063 00100000
*  RESPECIFY (WESTD);                      /*REVERT TO OLD BASE      */ 00101000
@RF00040 DS    0H                                                  0064 00102000
*  RETURN CODE(0);                         /*FINISHED                */ 00103000
         SLR   @15,@15                                             0064 00104000
         L     @13,4(,@13)                                         0064 00105000
         L     @14,12(,@13)                                        0064 00106000
         LM    @00,@12,20(@13)                                     0064 00107000
         BR    @14                                                 0064 00108000
         EJECT                                                          00109000
*PRCSMODE: PROC OPTIONS (SAVE (14));                               0065 00110000
@EL00001 L     @13,4(,@13)                                         0065 00111000
@EF00001 DS    0H                                                  0065 00112000
@ER00001 LM    @14,@12,12(@13)                                     0065 00113000
         BR    @14                                                 0065 00114000
PRCSMODE ST    @14,@SA00002                                        0065 00115000
*  /******************************************************************/ 00116000
*  /*                                                                */ 00117000
*  /*  THE PURPOSE OF THIS SUBROUTINE IS TO PROCESS A W.E. FROM THE  */ 00118000
*  /*  MODIFY Q.  THE W.E. IS POINTED TO BY 'TEMPPTR'.  THE MAIN     */ 00119000
*  /*  PROCESSING IS AS FOLLOWS:                                     */ 00120000
*  /*                                                                */ 00121000
*  /*  -   TRY AND PUT A RETURN ELEMENT ON THE SYNC Q.  IF           */ 00122000
*  /*      UNSUCCESSFUL, EXIT AND GO BACK TO SLEEP.  NOTE THAT       */ 00123000
*  /*      PUTTING MY RETURN W.E. ON THE TOP OF THE SYNC Q HAS THE   */ 00124000
*  /*      EFFECT OF LOCKING OUT ALL OTHER TASKS WHICH PROCESS THE   */ 00125000
*  /*      SYNC Q.                                                   */ 00126000
*  /*  -   CALL PARAMETER PROCESSING TO EVALUATE THE PARAMETERS IN   */ 00127000
*  /*      WEDATA (FOR W.E.'S CAUSED BY AN OPERATOR COMMAND, THIS    */ 00128000
*  /*      WAS DONE BY 'BLDMODWE' IN IKTCAS40).                      */ 00129000
*  /*  -   BUILD W.E.'S (DEPENDING ON WHAT PARAMETERS WERE ENTERED)  */ 00130000
*  /*      AND PUT THEM ON THE Q                                     */ 00131000
*  /*  -   POST THE TASK WHOSE W.E. IS ON TOP OF THE SYNC Q          */ 00132000
*  /*  -   EXIT                                                      */ 00133000
*  /*                                                                */ 00134000
*  /******************************************************************/ 00135000
*  IF TWASYNQH ^= 0 THEN                   /*IS SYNC Q EMPTY         */ 00136000
         L     @10,TWASYNQH(,TWAPTR)                               0066 00137000
         LTR   @10,@10                                             0066 00138000
         BZ    @RF00066                                            0066 00139000
*      TWACSKIP = 'Y';                     /* NO - GO BACK TO SLEEP  */ 00140000
         MVI   TWACSKIP(TWAPTR),C'Y'                               0067 00141000
*  ELSE                                                            0068 00142000
*      DO;                                 /*YES                     */ 00143000
         B     @RC00066                                            0068 00144000
@RF00066 DS    0H                                                  0069 00145000
*      IF TCASUMAX=0                  /*IS USER COUNT ZERO           */ 00146000
*         THEN PMFL2MX='EF'X ;        /*SET MASK TO INDICATE ZERO    */ 00147000
         LH    @10,TCASUMAX(,TCASTPTR)                             0069 00148000
         LTR   @10,@10                                             0069 00149000
         BNZ   @RF00069                                            0069 00150000
         MVI   PMFL2MX,X'EF'                                       0070 00151000
*                                     /* USER COUNT                  */ 00152000
*         ELSE PMFL2MX='F7'X ;        /* SET MASK TO > ZERO USER C   */ 00153000
         B     @RC00069                                            0071 00154000
@RF00069 MVI   PMFL2MX,X'F7'                                       0071 00155000
*      CALL PARMSCAN;                      /*SCAN MODIFY PARAMETERS  */ 00156000
@RC00069 BAL   @14,PARMSCAN                                        0072 00157000
*      MLPMFL2=MLPMFL2 & PMFL2MX ;    /* MASK OUTPUT FLAG FROM SCAN  */ 00158000
         NC    MLPMFL2(1),PMFL2MX                                  0073 00159000
*      IF MLPMFL2 ^= '00'X            /* IS OUTPUT FLAG ON           */ 00160000
*      THEN DO ;                      /* YES, PROCESS IT             */ 00161000
         CLI   MLPMFL2,X'00'                                       0074 00162000
         BE    @RF00074                                            0074 00163000
*      IF PARMERR = '1'B THEN              /*WAS AN ERROR DISCOVERED */ 00164000
         TM    PARMERR,B'10000000'                                 0076 00165000
         BNO   @RF00076                                            0076 00166000
*          PARMERR = '0'B;                 /*YES                     */ 00167000
         NI    PARMERR,B'01111111'                                 0077 00168000
*      ELSE                                                        0078 00169000
*          DO;                             /*NO - KEEP GOING         */ 00170000
         B     @RC00076                                            0078 00171000
@RF00076 DS    0H                                                  0079 00172000
*                                          /*CALCULATE THE LENGTH OF */ 00173000
*                                          /*A RETURN W.E., VTAM     */ 00174000
*                                          /*W.E., AND USER W.E.     */ 00175000
*                                          /*ROUNDED UP TO A         */ 00176000
*                                          /*DOUBLEWORD              */ 00177000
*          LENGTH = ((12+12+12)+7)/8*8;                            0079 00178000
         LA    LENGTH,40                                           0079 00179000
*          SUBPL = 4;                      /*SUBPOOL NUMBER          */ 00180000
         LA    SUBPL,4                                             0080 00181000
*          CALL GETSPACE;                  /*GET SPACE               */ 00182000
         BAL   @14,GETSPACE                                        0081 00183000
*          SAVEADDR = ADDRESS;             /*SAVE FOR FUTURE USE     */ 00184000
         L     @10,ADDRESS                                         0082 00185000
         LR    SAVEADDR,@10                                        0082 00186000
*          WECODE1T = TCCONSLE;            /*MY TASK                 */ 00187000
         L     @07,WEPTR                                           0083 00188000
         MVI   WECODE1T(@07),X'04'                                 0083 00189000
*          WECODE2T = TCCONSLE;            /* CODE                   */ 00190000
         MVI   WECODE2T(@07),X'04'                                 0084 00191000
*          WECODE1F = FCRETURN;            /*RETURN FUNCTION CODE    */ 00192000
         MVI   WECODE1F(@07),X'FF'                                 0085 00193000
*          WECODE2F = FCCMODFY;            /*MODIFY FUNCTION CODE    */ 00194000
         MVI   WECODE2F(@07),X'21'                                 0086 00195000
*          WERC = 0;                       /*ZERO OUT                */ 00196000
         SLR   @02,@02                                             0087 00197000
         STH   @02,WERC(,@07)                                      0087 00198000
*          WENEXT = 0;                     /*ZERO OUT                */ 00199000
         ST    @02,WENEXT(,@07)                                    0088 00200000
*          WELEN = LENGTH;                 /*TOTAL LENGTH OF SPACE   */ 00201000
         STH   LENGTH,WELEN(,@07)                                  0089 00202000
*          TEMPPTR2 = 0;                   /*SEE IF SYNC Q           */ 00203000
         SLR   TEMPPTR2,TEMPPTR2                                   0090 00204000
*          CS(TEMPPTR2,ADDRESS,TWASYNQH);  /* IS STILL EMPTY         */ 00205000
         CS    TEMPPTR2,@10,TWASYNQH(TWAPTR)                       0091 00206000
*          BC(8,MODESKIP);                 /*YES                     */ 00207000
         BC    8,MODESKIP                                          0092 00208000
*          CALL FRESPACE;                  /*NO - FREE SPACE         */ 00209000
         BAL   @14,FRESPACE                                        0093 00210000
*          TWACSKIP = 'Y';                 /* AND GO BACK            */ 00211000
         MVI   TWACSKIP(TWAPTR),C'Y'                               0094 00212000
*          RETURN;                         /*  TO SLEEP              */ 00213000
@EL00002 DS    0H                                                  0095 00214000
@EF00002 DS    0H                                                  0095 00215000
@ER00002 L     @14,@SA00002                                        0095 00216000
         BR    @14                                                 0095 00217000
*      MODESKIP:                                                   0096 00218000
*          ADDRESS = ADDRESS + 12;         /*PT TO NEXT FREE W.E.    */ 00219000
MODESKIP LA    @10,12                                              0096 00220000
         AL    @10,ADDRESS                                         0096 00221000
         ST    @10,ADDRESS                                         0096 00222000
*          IF MLPMUZ = '1'B THEN           /*USERMAX=0 SPECIFIED     */ 00223000
         TM    MLPMUZ,B'00010000'                                  0097 00224000
         BNO   @RF00097                                            0097 00225000
*              DO;                         /*YES                     */ 00226000
*              WECODE1T = TCVTAM;          /*TELL VTAM               */ 00227000
         L     @10,WEPTR                                           0099 00228000
         MVI   WECODE1T(@10),X'02'                                 0099 00229000
*              WECODE1F = FCVQUSCE;        /* INTERFACE DRIVER       */ 00230000
         MVI   WECODE1F(@10),X'13'                                 0100 00231000
*              CALL ADDAWE;                /*  TO                    */ 00232000
         BAL   @14,ADDAWE                                          0101 00233000
*              END;                        /*   QUIESCE LOGON'S      */ 00234000
*          IF MLPMFS = '1'B THEN           /*USER=FSTOP SPECIFIED    */ 00235000
@RF00097 TM    MLPMFS,B'00000100'                                  0103 00236000
         BNO   @RF00103                                            0103 00237000
*              DO;                         /*YES                     */ 00238000
*              WECODE1T = TCUSER;          /*TELL USER               */ 00239000
         L     @10,WEPTR                                           0105 00240000
         MVI   WECODE1T(@10),X'03'                                 0105 00241000
*              WECODE1F = FCUFSTOP;        /* INTERFACE DRIVER TO    */ 00242000
         MVI   WECODE1F(@10),X'22'                                 0106 00243000
*              CALL ADDAWE;                /*  TERMINATE ADDRESS     */ 00244000
         BAL   @14,ADDAWE                                          0107 00245000
*              END;                        /*   SPACES FSTOP         */ 00246000
*          ELSE                                                    0109 00247000
*              IF MLPMSIC = '1'B THEN      /*USER=SIC SPECIFIED      */ 00248000
         B     @RC00103                                            0109 00249000
@RF00103 TM    MLPMSIC,B'00000010'                                 0109 00250000
         BNO   @RF00109                                            0109 00251000
*                  DO;                     /*YES                     */ 00252000
*                  WECODE1T = TCUSER;      /*TELL USER               */ 00253000
         L     @10,WEPTR                                           0111 00254000
         MVI   WECODE1T(@10),X'03'                                 0111 00255000
*                  WECODE1F = FCUSIC;      /* INTERFACE DRIVER TO    */ 00256000
         MVI   WECODE1F(@10),X'21'                                 0112 00257000
*                  CALL ADDAWE;            /*  TERMINATE ADDRESS     */ 00258000
         BAL   @14,ADDAWE                                          0113 00259000
*                  END;                    /*   SPACES SIC           */ 00260000
*          IF MLPMUNZ = '1'B THEN          /*USERMAX>0 SPECIFIED     */ 00261000
@RF00109 DS    0H                                                  0115 00262000
@RC00103 TM    MLPMUNZ,B'00001000'                                 0115 00263000
         BNO   @RF00115                                            0115 00264000
*              DO;                         /*YES                     */ 00265000
*              WECODE1T = TCVTAM;          /*TELL VTAM               */ 00266000
         L     @10,WEPTR                                           0117 00267000
         MVI   WECODE1T(@10),X'02'                                 0117 00268000
*              WECODE1F = FCVSTART;        /* INTERFACE DRIVER       */ 00269000
         MVI   WECODE1F(@10),X'14'                                 0118 00270000
*              CALL ADDAWE;                /*  TO                    */ 00271000
         BAL   @14,ADDAWE                                          0119 00272000
*              END;                        /*   START LOGON'S        */ 00273000
*          ADDRESS = ADDRESS - 12;         /*POINT LAST ADDED W.E. AT*/ 00274000
@RF00115 LA    @10,12                                              0121 00275000
         L     @04,ADDRESS                                         0121 00276000
         SLR   @04,@10                                             0121 00277000
         ST    @04,ADDRESS                                         0121 00278000
*          WENEXT = SAVEADDR;              /* RETURN W.E.            */ 00279000
         L     @04,WEPTR                                           0122 00280000
         ST    SAVEADDR,WENEXT(,@04)                               0122 00281000
*          SAVEADDR -> WENEXT = 0;         /*SHOW RETURN W.E. IS LAST*/ 00282000
         SLR   @04,@04                                             0123 00283000
         ST    @04,WENEXT(,SAVEADDR)                               0123 00284000
*                                          /*ONE ON Q                */ 00285000
*          ADDRESS = SAVEADDR + 12;        /*ADDR OF NEW FIRST W.E.  */ 00286000
         ALR   @10,SAVEADDR                                        0124 00287000
         ST    @10,ADDRESS                                         0124 00288000
*          CS(TWASYNQH,ADDRESS,TWASYNQH);  /*POINT Q HEAD AT NEW     */ 00289000
         L     @15,TWASYNQH(,TWAPTR)                               0125 00290000
         CS    @15,@10,TWASYNQH(TWAPTR)                            0125 00291000
         BZ    @BC00125                                            0125 00292000
         ST    @15,TWASYNQH(,TWAPTR)                               0125 00293000
@BC00125 DS    0H                                                  0126 00294000
*                                          /*FIRST W.E.              */ 00295000
*          RESPECIFY (R1) RESTRICTED;      /*FREEZE FOR POST         */ 00296000
*          IF WECODE1T = TCVTAM THEN       /*TOP W.E. FOR VTAM       */ 00297000
         L     @10,WEPTR                                           0127 00298000
         CLI   WECODE1T(@10),X'02'                                 0127 00299000
         BNE   @RF00127                                            0127 00300000
*              DO;                         /*YES                     */ 00301000
*              R1 = ADDR(TWAVECB);         /*ADDR OF ECB TO POST     */ 00302000
         LA    R1,TWAVECB(,TWAPTR)                                 0129 00303000
*              GEN (POST  (1))             /*POST VTAM SUB-TASK      */ 00304000
*                  REFS(R0,R1,R14,R15);                            0130 00305000
         POST  (1)                                                      00306000
*              END;                                                0131 00307000
*          ELSE                                                    0132 00308000
*              DO;                         /*NO                      */ 00309000
         B     @RC00127                                            0132 00310000
@RF00127 DS    0H                                                  0133 00311000
*              R1 = ADDR(TWAUECB);         /*ADDR OF ECB TO POST     */ 00312000
         LA    R1,TWAUECB(,TWAPTR)                                 0133 00313000
*              GEN (POST  (1))             /*POST USER SUB-TASK      */ 00314000
*                  REFS(R0,R1,R14,R15);                            0134 00315000
         POST  (1)                                                      00316000
*              END;                                                0135 00317000
*          RESPECIFY (R1) UNRESTRICTED;                            0136 00318000
@RC00127 DS    0H                                                  0137 00319000
*          END;                                                    0137 00320000
*        END ;                                                     0138 00321000
*      END;                                                        0139 00322000
*END PRCSMODE;                                                     0140 00323000
         B     @EL00002                                            0140 00324000
         EJECT                                                          00325000
*PARMSCAN: PROC OPTIONS (SAVE (14));                               0141 00326000
PARMSCAN ST    @14,@SA00003                                        0141 00327000
*  /******************************************************************/ 00328000
*  /*                                                                */ 00329000
*  /*  THIS SUBROUTINE PROCESSES THE PARAMETERS FOUND ON THE MODIFY  */ 00330000
*  /*  COMMAND.  THE MAIN PROCESSING IS AS FOLLOWS:                  */ 00331000
*  /*                                                                */ 00332000
*  /*  -   SET UP THE SCANNER'S PARAMETER LIST                       */ 00333000
*  /*  -   BRANCH TO THE SCANNER                                     */ 00334000
*  /*  -   IF ANY ERROR'S ARE DETECTED, ISSUE AN ERROR MESSAGE AND   */ 00335000
*  /*      SET AN ERROR SWITCH                                       */ 00336000
*  /*  -   EXIT                                                      */ 00337000
*  /*                                                                */ 00338000
*  /******************************************************************/ 00339000
*  RESPECIFY (WESTD) BASED (TEMPPTR);      /*SET UP NEW BASE FOR W.E.*/ 00340000
*  MLPMPML = MLPMPML && MLPMPML;           /*CLEAR PARM LIST         */ 00341000
         XC    MLPMPML(8),MLPMPML                                  0143 00342000
*  MLPMBUF = '1'B;                         /*SHOW WHERE SCAN DATA    */ 00343000
*                                          /*WILL COME FROM          */ 00344000
*  MLPMUPTB = '1'B;                        /*UPDATE TCAS TABLE       */ 00345000
         OI    MLPMBUF,B'00001010'                                 0145 00346000
*  MLPMSCA = ADDR(WEDATA);                 /*ADDR OF SCAN DATA       */ 00347000
         LA    @10,WEDATA(,TEMPPTR)                                0146 00348000
         ST    @10,MLPMSCA                                         0146 00349000
*  RESPECIFY (R9) RESTRICTED;                                      0147 00350000
*  R9 = ADDR(MLPMPML);                     /*ADDR OF PARM LIST       */ 00351000
         LA    R9,MLPMPML                                          0148 00352000
*  CALL SCANNER;                           /*BRANCH TO SCANNER       */ 00353000
         L     @15,TWAPPSR(,TWAPTR)                                0149 00354000
         BALR  @14,@15                                             0149 00355000
*  RESPECIFY (R9) UNRESTRICTED;                                    0150 00356000
*  IF MLPMINV = '1'B |                     /*CHECK FOR               */ 00357000
*     MLPMIGN = '1'B THEN                  /* ERRORS                 */ 00358000
         TM    MLPMINV,B'01000001'                                 0151 00359000
         BZ    @RF00151                                            0151 00360000
*      DO;                                 /*FOUND ONE               */ 00361000
*      PARMERR = '1'B;                     /*SET ERROR SW            */ 00362000
         OI    PARMERR,B'10000000'                                 0153 00363000
*      RESPECIFY (R1) RESTRICTED;                                  0154 00364000
*      R1 = 15;                            /*MESSAGE NUMBER          */ 00365000
         LA    R1,15                                               0155 00366000
*      CALL MSGBLK;                        /*ADDR OF LIST FORM OF MSG*/ 00367000
         L     @15,TWAMSG(,TWAPTR)                                 0156 00368000
         BALR  @14,@15                                             0156 00369000
*      R1 = ADDR(IKT015I);                 /*TELL THE                */ 00370000
         LA    @10,IKT015I(,R1)                                    0157 00371000
         LR    R1,@10                                              0157 00372000
*      GEN (WTO   MF=(E,(1)))              /* OPERATOR               */ 00373000
*          REFS (R0,R1,R14,R15);           /*  ABOUT                 */ 00374000
         WTO   MF=(E,(1))                                               00375000
*      RESPECIFY (R1) UNRESTRICTED;        /*   THE ERROR            */ 00376000
*      END;                                                        0160 00377000
*  RESPECIFY (WESTD);                      /*REVERT TO OLD BASE      */ 00378000
*END PARMSCAN;                                                     0162 00379000
@EL00003 DS    0H                                                  0162 00380000
@EF00003 DS    0H                                                  0162 00381000
@ER00003 L     @14,@SA00003                                        0162 00382000
         BR    @14                                                 0162 00383000
         EJECT                                                          00384000
*ADDAWE: PROC OPTIONS (SAVE (14));                                 0163 00385000
ADDAWE   ST    @14,12(,@13)                                        0163 00386000
*  /******************************************************************/ 00387000
*  /*                                                                */ 00388000
*  /*  THIS SUBROUTINE DOES THE FOLLOWING THINGS:                    */ 00389000
*  /*                                                                */ 00390000
*  /*  -   FILL IN THE COMMON MODIFY W.E. INFORMATION                */ 00391000
*  /*  -   FIND THE LAST W.E. ON THE SYNC Q                          */ 00392000
*  /*  -   ADD ON THE NEW W.E.                                       */ 00393000
*  /*  -   POINT AT THE NEXT FREE MODIFY W.E.                        */ 00394000
*  /*                                                                */ 00395000
*  /******************************************************************/ 00396000
*  WECODE2T = TCCONSLE;                    /*MY TASK CODE            */ 00397000
         L     @10,WEPTR                                           0164 00398000
         MVI   WECODE2T(@10),X'04'                                 0164 00399000
*  WECODE2F = FCCMODFY;                    /*MODIFY FUNCTION CODE    */ 00400000
         MVI   WECODE2F(@10),X'21'                                 0165 00401000
*  WENEXT = 0;                             /*ZERO OUT                */ 00402000
         SLR   @04,@04                                             0166 00403000
         ST    @04,WENEXT(,@10)                                    0166 00404000
*  WERC = 0;                               /*ZERO OUT                */ 00405000
         STH   @04,WERC(,@10)                                      0167 00406000
*  WELEN = 0;                              /*ZERO OUT                */ 00407000
         STH   @04,WELEN(,@10)                                     0168 00408000
*  RESPECIFY (WESTD) BASED (TEMPPTR);      /*SET UP NEW BASE FOR W.E.*/ 00409000
*  TEMPPTR = TWASYNQH;                     /*START SEARCH AT TOP     */ 00410000
         L     TEMPPTR,TWASYNQH(,TWAPTR)                           0170 00411000
*  DO WHILE (WENEXT ^= 0);                 /*FIND                    */ 00412000
         B     @DE00171                                            0171 00413000
@DL00171 DS    0H                                                  0172 00414000
*      TEMPPTR = WENEXT;                   /* LAST                   */ 00415000
         L     TEMPPTR,WENEXT(,TEMPPTR)                            0172 00416000
*  END;                                    /*  W.E.                  */ 00417000
@DE00171 L     @10,WENEXT(,TEMPPTR)                                0173 00418000
         LTR   @10,@10                                             0173 00419000
         BNZ   @DL00171                                            0173 00420000
*  WENEXT = ADDRESS;                       /*ADD ON NEW W.E.         */ 00421000
         L     @10,ADDRESS                                         0174 00422000
         ST    @10,WENEXT(,TEMPPTR)                                0174 00423000
*  RESPECIFY (WESTD);                      /*REVERT TO OLD BASE      */ 00424000
*  ADDRESS = ADDRESS + 12;                 /*PT AT NEXT FREE W.E.    */ 00425000
         AL    @10,@CF00273                                        0176 00426000
         ST    @10,ADDRESS                                         0176 00427000
*END ADDAWE;                                                       0177 00428000
@EL00004 DS    0H                                                  0177 00429000
@EF00004 DS    0H                                                  0177 00430000
@ER00004 L     @14,12(,@13)                                        0177 00431000
         BR    @14                                                 0177 00432000
         EJECT                                                          00433000
*FRESPACE: PROC OPTIONS (SAVE (14));                               0178 00434000
FRESPACE ST    @14,@SA00005                                        0178 00435000
*  /******************************************************************/ 00436000
*  /*                                                                */ 00437000
*  /*  THIS SUBROUTINE DOES A FREEMAIN FOR THE NUMBER OF BYTES       */ 00438000
*  /*  SPECIFIED IN 'LENGTH', USING THE ADDRESS FOUND IN 'ADDRESS'   */ 00439000
*  /*  AS A STARTING ADDRESS, AND USING THE VALUE FOUND IN 'SUBPL'   */ 00440000
*  /*  AS THE SUBPOOL NUMBER                                         */ 00441000
*  /*                                                                */ 00442000
*  /******************************************************************/ 00443000
*  RESPECIFY (R2,R3) RESTRICTED;                                   0179 00444000
*  R2 = LENGTH;                                                    0180 00445000
         LR    R2,LENGTH                                           0180 00446000
*  R3 = SUBPL;                                                     0181 00447000
         LR    R3,SUBPL                                            0181 00448000
*  GEN (FREEMAIN EU,LV=(R2),A=ADDRESS,SP=(R3))                     0182 00449000
*      REFS (ADDRESS,R0,R1,R2,R3,R14,R15);                         0182 00450000
         FREEMAIN EU,LV=(R2),A=ADDRESS,SP=(R3)                          00451000
*  RESPECIFY (R2,R3) UNRESTRICTED;                                 0183 00452000
*END FRESPACE;                                                     0184 00453000
@EL00005 DS    0H                                                  0184 00454000
@EF00005 DS    0H                                                  0184 00455000
@ER00005 L     @14,@SA00005                                        0184 00456000
         BR    @14                                                 0184 00457000
         EJECT                                                          00458000
*GETSPACE: PROC OPTIONS (SAVE (14));                               0185 00459000
GETSPACE ST    @14,@SA00006                                        0185 00460000
*  /******************************************************************/ 00461000
*  /*                                                                */ 00462000
*  /*  THIS SUBROUTINE DOES A GETMAIN FOR THE NUMBER OF BYTES        */ 00463000
*  /*  SPECIFIED IN 'LENGTH' (SHOULD BE A DOUBLEWORD MULTIPLE),      */ 00464000
*  /*  FROM THE SUBPOOL SPECIFIED IN 'SUBPL', AND THEN PLACES THE    */ 00465000
*  /*  STARTING ADDRESS OF THE GETMAIN'ED AREA IN 'ADDRESS'.         */ 00466000
*  /*                                                                */ 00467000
*  /******************************************************************/ 00468000
*  RESPECIFY (R2,R3) RESTRICTED;                                   0186 00469000
*  R2 = LENGTH;                                                    0187 00470000
         LR    R2,LENGTH                                           0187 00471000
*  R3 = SUBPL;                                                     0188 00472000
         LR    R3,SUBPL                                            0188 00473000
*  GEN (GETMAIN EU,LV=(R2),A=ADDRESS,SP=(R3))                      0189 00474000
*      REFS (ADDRESS,R0,R1,R2,R3,R14,R15);                         0189 00475000
         GETMAIN EU,LV=(R2),A=ADDRESS,SP=(R3)                           00476000
*  RESPECIFY (R2,R3) UNRESTRICTED;                                 0190 00477000
*END GETSPACE;                                                     0191 00478000
@EL00006 DS    0H                                                  0191 00479000
@EF00006 DS    0H                                                  0191 00480000
@ER00006 L     @14,@SA00006                                        0191 00481000
         BR    @14                                                 0191 00482000
         EJECT                                                          00483000
*END IKTCAS42                                                      0192 00484000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00485000
*/*%INCLUDE SYSLIB  (IKTTCAST)                                        * 00486000
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        * 00487000
*;                                                                 0192 00488000
@DATA    DS    0H                                                       00489000
         DS    0F                                                       00490000
@SA00001 DS    18F                                                      00491000
@SA00002 DS    1F                                                       00492000
@SA00005 DS    1F                                                       00493000
@SA00003 DS    1F                                                       00494000
@SA00006 DS    1F                                                       00495000
         DS    0F                                                       00496000
@CF00118 DC    F'4'                                                     00497000
@CF00273 DC    F'12'                                                    00498000
         DS    0D                                                       00499000
ADDRESS  DS    A                                                        00500000
SWITCHES DS    CL1                                                      00501000
         ORG   SWITCHES                                                 00502000
PARMERR  DS    BL1                                                      00503000
@NM00001 EQU   SWITCHES+0                                               00504000
         ORG   SWITCHES+1                                               00505000
         DS    CL3                                                      00506000
MLPMPML  DS    CL8                                                      00507000
         ORG   MLPMPML                                                  00508000
MLPMFL1  DS    BL1                                                      00509000
         ORG   MLPMFL1                                                  00510000
@NM00003 DS    BL1                                                      00511000
MLPMSTRT EQU   MLPMFL1+0                                                00512000
MLPMWPM  EQU   MLPMFL1+0                                                00513000
MLPMUPTB EQU   MLPMFL1+0                                                00514000
MLPMRLIB EQU   MLPMFL1+0                                                00515000
MLPMBUF  EQU   MLPMFL1+0                                                00516000
MLPMCIB  EQU   MLPMFL1+0                                                00517000
         ORG   MLPMPML+1                                                00518000
MLPMFL2  DS    BL1                                                      00519000
         ORG   MLPMFL2                                                  00520000
@NM00004 DS    BL1                                                      00521000
MLPMINV  EQU   MLPMFL2+0                                                00522000
MLPMERR  EQU   MLPMFL2+0                                                00523000
MLPMUZ   EQU   MLPMFL2+0                                                00524000
MLPMUNZ  EQU   MLPMFL2+0                                                00525000
MLPMFS   EQU   MLPMFL2+0                                                00526000
MLPMSIC  EQU   MLPMFL2+0                                                00527000
MLPMIGN  EQU   MLPMFL2+0                                                00528000
         ORG   MLPMPML+2                                                00529000
@NM00005 DS    BL2                                                      00530000
MLPMSCA  DS    AL4                                                      00531000
         ORG   MLPMPML+8                                                00532000
PMFL2MX  DC    X'FF'                                                    00533000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00534000
@01      EQU   01                                                       00535000
@02      EQU   02                                                       00536000
@03      EQU   03                                                       00537000
@04      EQU   04                                                       00538000
@05      EQU   05                                                       00539000
@06      EQU   06                                                       00540000
@07      EQU   07                                                       00541000
@08      EQU   08                                                       00542000
@09      EQU   09                                                       00543000
@10      EQU   10                                                       00544000
@11      EQU   11                                                       00545000
@12      EQU   12                                                       00546000
@13      EQU   13                                                       00547000
@14      EQU   14                                                       00548000
@15      EQU   15                                                       00549000
TCASTPTR EQU   @03                                                      00550000
TEMPPTR2 EQU   @03                                                      00551000
TEMPPTR  EQU   @02                                                      00552000
SUBPL    EQU   @06                                                      00553000
LENGTH   EQU   @04                                                      00554000
SAVEADDR EQU   @05                                                      00555000
R0       EQU   @00                                                      00556000
R1       EQU   @01                                                      00557000
R2       EQU   @02                                                      00558000
R3       EQU   @03                                                      00559000
R9       EQU   @09                                                      00560000
TWAPTR   EQU   @11                                                      00561000
R14      EQU   @14                                                      00562000
R15      EQU   @15                                                      00563000
SCANNER  EQU   0                                                        00564000
MSGBLK   EQU   0                                                        00565000
@NM00002 EQU   0                                                        00566000
MSGDATA  EQU   @NM00002+4                                               00567000
WESTD    EQU   0                                                        00568000
WECODE1T EQU   WESTD                                                    00569000
WECODE1F EQU   WESTD+1                                                  00570000
WECODE2T EQU   WESTD+2                                                  00571000
WECODE2F EQU   WESTD+3                                                  00572000
WENEXT   EQU   WESTD+4                                                  00573000
WERC     EQU   WESTD+8                                                  00574000
WELEN    EQU   WESTD+10                                                 00575000
WEDATA   EQU   WESTD+12                                                 00576000
TCAST    EQU   0                                                        00577000
TCASUSER EQU   TCAST+4                                                  00578000
TCASUMAX EQU   TCASUSER+2                                               00579000
TCASFLG1 EQU   TCAST+88                                                 00580000
TCASFLG2 EQU   TCAST+89                                                 00581000
TWAR     EQU   0                                                        00582000
TWASYNQH EQU   TWAR+4                                                   00583000
TWATCAST EQU   TWAR+20                                                  00584000
TWAPPSR  EQU   TWAR+36                                                  00585000
TWAMSG   EQU   TWAR+48                                                  00586000
TWAMFL   EQU   TWAR+80                                                  00587000
TWAVFL   EQU   TWAR+81                                                  00588000
TWAUFL   EQU   TWAR+82                                                  00589000
TWACFL   EQU   TWAR+83                                                  00590000
TWAM     EQU   TWAR+84                                                  00591000
TWAME    EQU   TWAM+68                                                  00592000
TWAMEI   EQU   TWAME                                                    00593000
TWAV     EQU   TWAR+184                                                 00594000
TWAVE    EQU   TWAV+68                                                  00595000
TWAVEI   EQU   TWAVE                                                    00596000
TWAVI    EQU   TWAR+284                                                 00597000
TWAVECB  EQU   TWAVI                                                    00598000
TWAU     EQU   TWAR+300                                                 00599000
TWAUE    EQU   TWAU+68                                                  00600000
TWAUEI   EQU   TWAUE                                                    00601000
TWAUI    EQU   TWAR+400                                                 00602000
TWAUECB  EQU   TWAUI                                                    00603000
TWAC     EQU   TWAR+408                                                 00604000
TWACE    EQU   TWAC+68                                                  00605000
TWACEI   EQU   TWACE                                                    00606000
TWACI    EQU   TWAR+508                                                 00607000
TWACMODQ EQU   TWACI+8                                                  00608000
TWACSKIP EQU   TWACI+12                                                 00609000
WEPTR    EQU   ADDRESS                                                  00610000
IKT015I  EQU   MSGDATA                                                  00611000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00612000
TWAEND   EQU   TWAR+536                                                 00613000
TWAWORKE EQU   TWAR+524                                                 00614000
@NM00021 EQU   TWACI+13                                                 00615000
TWACSTPQ EQU   TWACI+4                                                  00616000
TWACECB  EQU   TWACI                                                    00617000
TWACERRS EQU   TWACE+4                                                  00618000
TWACERA  EQU   TWACEI+1                                                 00619000
TWACEIFC EQU   TWACEI                                                   00620000
TWACRTFC EQU   TWAC+60                                                  00621000
TWACABFC EQU   TWAC+56                                                  00622000
TWACTWA  EQU   TWAC+52                                                  00623000
TWACEWA  EQU   TWAC+4                                                   00624000
TWACID   EQU   TWAC                                                     00625000
TWAUACQH EQU   TWAUI+4                                                  00626000
TWAUERRS EQU   TWAUE+4                                                  00627000
TWAUERA  EQU   TWAUEI+1                                                 00628000
TWAUEIFC EQU   TWAUEI                                                   00629000
TWAURTFC EQU   TWAU+60                                                  00630000
TWAUABFC EQU   TWAU+56                                                  00631000
TWAUTWA  EQU   TWAU+52                                                  00632000
TWAUEWA  EQU   TWAU+4                                                   00633000
TWAUID   EQU   TWAU                                                     00634000
TWAVACQH EQU   TWAVI+12                                                 00635000
TWAVTHQH EQU   TWAVI+8                                                  00636000
TWAVTEQH EQU   TWAVI+4                                                  00637000
TWAVERRS EQU   TWAVE+4                                                  00638000
TWAVERA  EQU   TWAVEI+1                                                 00639000
TWAVEIFC EQU   TWAVEI                                                   00640000
TWAVRTFC EQU   TWAV+60                                                  00641000
TWAVABFC EQU   TWAV+56                                                  00642000
TWAVTWA  EQU   TWAV+52                                                  00643000
TWAVEWA  EQU   TWAV+4                                                   00644000
TWAVID   EQU   TWAV                                                     00645000
TWAMERRS EQU   TWAME+4                                                  00646000
TWAMERA  EQU   TWAMEI+1                                                 00647000
TWAMEIFC EQU   TWAMEI                                                   00648000
TWAMRTFC EQU   TWAM+60                                                  00649000
TWAMABFC EQU   TWAM+56                                                  00650000
TWAMTWA  EQU   TWAM+52                                                  00651000
TWAMEWA  EQU   TWAM+4                                                   00652000
TWAMID   EQU   TWAM                                                     00653000
@NM00020 EQU   TWACFL                                                   00654000
TWACFL4  EQU   TWACFL                                                   00655000
TWACFL2  EQU   TWACFL                                                   00656000
TWACFL1  EQU   TWACFL                                                   00657000
@NM00019 EQU   TWAUFL                                                   00658000
TWAUFL4  EQU   TWAUFL                                                   00659000
TWAUFL3  EQU   TWAUFL                                                   00660000
TWAUFL2  EQU   TWAUFL                                                   00661000
TWAUFL1  EQU   TWAUFL                                                   00662000
@NM00018 EQU   TWAVFL                                                   00663000
TWAVFL6  EQU   TWAVFL                                                   00664000
TWAVFL5  EQU   TWAVFL                                                   00665000
TWAVFL4  EQU   TWAVFL                                                   00666000
TWAVFL3  EQU   TWAVFL                                                   00667000
TWAVFL2  EQU   TWAVFL                                                   00668000
TWAVFL1  EQU   TWAVFL                                                   00669000
@NM00017 EQU   TWAMFL                                                   00670000
TWAMFL1  EQU   TWAMFL                                                   00671000
TWACCOMP EQU   TWAR+76                                                  00672000
TWAUCOMP EQU   TWAR+72                                                  00673000
TWAVCOMP EQU   TWAR+68                                                  00674000
TWAMECB  EQU   TWAR+64                                                  00675000
TWACTCB  EQU   TWAR+60                                                  00676000
TWAUTCB  EQU   TWAR+56                                                  00677000
TWAVTCB  EQU   TWAR+52                                                  00678000
TWADEQAS EQU   TWAR+44                                                  00679000
TWAEESR  EQU   TWAR+40                                                  00680000
TWATCSR  EQU   TWAR+32                                                  00681000
TWATTSR  EQU   TWAR+28                                                  00682000
TWAINIT  EQU   TWAR+24                                                  00683000
TWACSCB  EQU   TWAR+16                                                  00684000
TWAASCB  EQU   TWAR+12                                                  00685000
TWAPASQH EQU   TWAR+8                                                   00686000
TWARSON  EQU   TWAR+2                                                   00687000
TWACOMP  EQU   TWAR                                                     00688000
TCASTEND EQU   TCAST+136                                                00689000
TCASDUMP EQU   TCAST+132                                                00690000
TCASSCHD EQU   TCAST+128                                                00691000
@NM00016 EQU   TCAST+124                                                00692000
TCASOMJR EQU   TCAST+120                                                00693000
@NM00015 EQU   TCAST+118                                                00694000
TCASBR14 EQU   TCAST+116                                                00695000
TCASATTN EQU   TCAST+112                                                00696000
TCASASCI EQU   TCAST+108                                                00697000
TCASTTQH EQU   TCAST+104                                                00698000
@NM00014 EQU   TCAST+102                                                00699000
@NM00013 EQU   TCAST+100                                                00700000
@NM00012 EQU   TCAST+98                                                 00701000
@NM00011 EQU   TCAST+96                                                 00702000
TCASASCB EQU   TCAST+92                                                 00703000
@NM00010 EQU   TCAST+90                                                 00704000
@NM00009 EQU   TCASFLG2                                                 00705000
@NM00008 EQU   TCASFLG1                                                 00706000
TCASNACT EQU   TCASFLG1                                                 00707000
@NM00007 EQU   TCASFLG1                                                 00708000
TCASABND EQU   TCASFLG1                                                 00709000
TCASMDSW EQU   TCASFLG1                                                 00710000
TCASBKMD EQU   TCASFLG1                                                 00711000
TCASLTE  EQU   TCAST+84                                                 00712000
TCASEXIT EQU   TCAST+80                                                 00713000
TCASOQM  EQU   TCAST+76                                                 00714000
TCASIQM  EQU   TCAST+72                                                 00715000
TCASTSB  EQU   TCAST+68                                                 00716000
TCASTTL  EQU   TCAST+64                                                 00717000
TCASWA   EQU   TCAST+60                                                 00718000
TCASFRR  EQU   TCAST+56                                                 00719000
TCASMSGS EQU   TCAST+52                                                 00720000
TCASDATO EQU   TCAST+48                                                 00721000
TCASDATI EQU   TCAST+44                                                 00722000
TCASXECB EQU   TCAST+40                                                 00723000
TCASTID  EQU   TCAST+32                                                 00724000
@NM00006 EQU   TCAST+31                                                 00725000
TCASCHNL EQU   TCAST+30                                                 00726000
TCASCRSZ EQU   TCAST+28                                                 00727000
TCASLBUF EQU   TCAST+24                                                 00728000
TCASHBUF EQU   TCAST+20                                                 00729000
TCASCLSZ EQU   TCAST+18                                                 00730000
TCASRCON EQU   TCAST+16                                                 00731000
TCASACBP EQU   TCAST+8                                                  00732000
TCASUSEC EQU   TCASUSER                                                 00733000
TCASID   EQU   TCAST                                                    00734000
MSGLNGTH EQU   @NM00002                                                 00735000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00736000
@RC00066 EQU   @EL00002                                                 00737000
@RF00074 EQU   @EL00002                                                 00738000
@RC00076 EQU   @EL00002                                                 00739000
@RF00151 EQU   @EL00003                                                 00740000
@ENDDATA EQU   *                                                        00741000
         END   IKTCAS42,(C'PLS1909',0701,77319)                         00742000
