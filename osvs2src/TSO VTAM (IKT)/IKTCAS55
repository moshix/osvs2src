         TITLE 'IKTCAS55-- ESTAE EXIT ROUTINE                          *00001000
                        '                                               00002000
IKTCAS55 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKTCAS55  77.238'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  DS    0H                                                  0002 00010000
         BALR  R15,0                                                    00011000
         USING *,R15                                                    00012000
         C     R0,INDSDWA            TEST IS THERE SDWA                 00013000
         BNE   YSDWA                 BR IF YES -R0 NOT 12               00014000
         B     START                 BR AROUND NO SDWA                  00015000
INDSDWA  DC    F'12'                 CODE 12 MEANS NO SDWA              00016000
YSDWA    STM   R14,R12,12(R13)       SAVE REGS IN SDWA                  00017000
         L     R2,0(R1)              R1 PTR ADDR OF PARAMETER           00018000
START    BALR  R12,0                 R12 BASE REG                       00019000
         USING *,R12                                                    00020000
         USING @DATD-4,R2             R2 PTR PARAMETR PASSED FROM       00021000
*                                     TASK AND R2+4 IS WORK AREA FOR    00022000
*                                     ESTAE WHICH MAY BE USED FOR       00023000
*                                     AUTO DATA                         00024000
*      ETWAWA=''B ;                    /* CLEAR THE WORK AREA        */ 00025000
         XC    ETWAWA(48,R2),ETWAWA(R2)                            0036 00026000
*      STM(R0,R2,SAVE) ;               /* SAVE REGISTERS 0,1,2       */ 00027000
         STM   R0,R2,SAVE                                          0037 00028000
*      SAVER(4)=R14  ;                 /* SAVE RETURN REG            */ 00029000
         ST    R14,SAVER+12                                        0038 00030000
*      TWAPTR=ETWATWA ;                /* TWA ADDRESSIBILITY         */ 00031000
         L     TWAPTR,ETWATWA(,R2)                                 0039 00032000
*/*                                                                  */ 00033000
*/*      VALIDITY CHECK THE ID OF TASK PASSED IN PARAMETER           */ 00034000
*/*                                                                  */ 00035000
*      IF ETWAID^='MAIN'               /* IF IT IS NOT MAIN TASK     */ 00036000
*         THEN IF ETWAID^='VTAM'       /* IF IT IS NOT VTAM INT TASK */ 00037000
         CLC   ETWAID(4,R2),@CC00302                               0040 00038000
         BE    @RF00040                                            0040 00039000
*           THEN IF ETWAID^='USER'     /* IF IT IS NOT USER INT TASK */ 00040000
         CLC   ETWAID(4,R2),@CC00303                               0041 00041000
         BE    @RF00041                                            0041 00042000
*             THEN IF ETWAID^='COMM'   /* IF IT IS NOT CON COMM TASK */ 00043000
         CLC   ETWAID(4,R2),@CC00304                               0042 00044000
         BE    @RF00042                                            0042 00045000
*               THEN DO ;              /* THEN ABEND                 */ 00046000
         CLC   ETWAID(4,R2),@CC00305                               0043 00047000
         BE    @RF00043                                            0043 00048000
*                 R1=RCABEND ;         /* SET ABEND INDICATOR        */ 00049000
         SLR   R1,R1                                               0045 00050000
*                 CALL RTNR;           /* THE ROUTINE PROCESS RETURN */ 00051000
         BAL   @14,RTNR                                            0046 00052000
*                 END ;                                            0047 00053000
*    /*                                                              */ 00054000
*    /*        CHECK AND ESTABLISH RETRY CRITERIOR THAT IS:          */ 00055000
*    /*          1 RETRY ADDR SPECIFIED IN FOOTPRINTS                */ 00056000
*    /*          2 NO PREVIOUS RETRY RECORDS FOR THIS ROUTINE        */ 00057000
*    /*                                                              */ 00058000
*      DO INDEX=4 TO 2 BY -1           /* PIN POINT THE LAST FTPRINT */ 00059000
*         WHILE(ETWAEIFC(INDEX)=0);    /* WHICH CONTAIN THE FUNCTION */ 00060000
@RF00043 DS    0H                                                  0048 00061000
@RF00042 DS    0H                                                  0048 00062000
@RF00041 DS    0H                                                  0048 00063000
@RF00040 LA    INDEX,4                                             0048 00064000
@DL00048 LR    @06,INDEX                                           0048 00065000
         SLA   @06,3                                               0048 00066000
         SLR   @03,@03                                             0048 00067000
         IC    @03,ETWAEIFC-8(@06,R2)                              0048 00068000
         C     @03,@CF00150                                        0048 00069000
         BNE   @DC00048                                            0048 00070000
*      END ;                           /* CODE                       */ 00071000
         BCTR  INDEX,0                                             0049 00072000
         C     INDEX,@CF00073                                      0049 00073000
         BNL   @DL00048                                            0049 00074000
@DC00048 DS    0H                                                  0050 00075000
*      IF ETWAEIFC(INDEX)^=0           /* IF THERE IS FUNCTION CODE  */ 00076000
*         THEN DO ;                    /* THEN FURTHER CHECKING      */ 00077000
         SLR   @06,@06                                             0050 00078000
         LR    @03,INDEX                                           0050 00079000
         SLA   @03,3                                               0050 00080000
         SLR   @15,@15                                             0050 00081000
         IC    @15,ETWAEIFC-8(@03,R2)                              0050 00082000
         CR    @06,@15                                             0050 00083000
         BE    @RF00050                                            0050 00084000
*         IF ETWAERA(INDEX)^=0         /* IF RETRY ADDR SPECIFIED    */ 00085000
*            THEN DO ;                 /* FURTHER CHECKING           */ 00086000
         L     @15,ETWAERA-9(@03,R2)                               0052 00087000
         LA    @15,0(,@15)                                         0052 00088000
         LTR   @15,@15                                             0052 00089000
         BZ    @RF00052                                            0052 00090000
*             IF ETWAERRS(INDEX)^=0    /* IF REG SAVE AREA ADDR VALID*/ 00091000
*                THEN DO ;             /* FURTHER CHECKING           */ 00092000
         C     @06,ETWAERRS-8(@03,R2)                              0054 00093000
         BE    @RF00054                                            0054 00094000
*                DO R8=1 TO 7              /* CHECK RETRY RECORD AREA*/ 00095000
*                   WHILE(ETWARTFC(R8) /*     IF THERE IS A MATCH,   */ 00096000
*                    ^= ETWAEIFC(INDEX)) ; /* MEANS RETRIED BEFORE   */ 00097000
         LA    R8,1                                                0056 00098000
@DL00056 LR    @06,INDEX                                           0056 00099000
         SLA   @06,3                                               0056 00100000
         SLR   @03,@03                                             0056 00101000
         IC    @03,ETWARTFC-1(R8,R2)                               0056 00102000
         SLR   @15,@15                                             0056 00103000
         IC    @15,ETWAEIFC-8(@06,R2)                              0056 00104000
         CR    @03,@15                                             0056 00105000
         BE    @DC00056                                            0056 00106000
*                END ;                                             0057 00107000
         AL    R8,@CF00062                                         0057 00108000
         C     R8,@CF00064                                         0057 00109000
         BNH   @DL00056                                            0057 00110000
@DC00056 DS    0H                                                  0058 00111000
*                IF R8>= 8             /* IF NO MATCH                */ 00112000
*                   THEN DO ;          /* PROCESS RETRY              */ 00113000
         C     R8,@CF00060                                         0058 00114000
         BL    @RF00058                                            0058 00115000
*                   DO R8=1 TO 7             /* FIND AN AVAILABLE    */ 00116000
*                     WHILE(ETWARTFC(R8)     /* SLOT IN RETRY RECORD */ 00117000
*                           ^=0);            /* AREA                 */ 00118000
         LA    R8,1                                                0060 00119000
@DL00060 SLR   @06,@06                                             0060 00120000
         IC    @06,ETWARTFC-1(R8,R2)                               0060 00121000
         C     @06,@CF00150                                        0060 00122000
         BE    @DC00060                                            0060 00123000
*                   END ;                                          0061 00124000
         AL    R8,@CF00062                                         0061 00125000
         C     R8,@CF00064                                         0061 00126000
         BNH   @DL00060                                            0061 00127000
@DC00060 DS    0H                                                  0062 00128000
*                ETWARTFC(R8)=ETWAEIFC(INDEX) ;/* RECORD RETRY       */ 00129000
         LR    @06,INDEX                                           0062 00130000
         SLA   @06,3                                               0062 00131000
         SLR   @03,@03                                             0062 00132000
         IC    @03,ETWAEIFC-8(@06,R2)                              0062 00133000
         STC   @03,ETWARTFC-1(R8,R2)                               0062 00134000
*                R1=RCRETRY ;          /* RETRY INDICATOR            */ 00135000
         LA    R1,4                                                0063 00136000
*                CALL RTNR  ;          /* TO PROCESS RETURN          */ 00137000
         BAL   @14,RTNR                                            0064 00138000
*                   END ;                                          0065 00139000
*                END ;                                             0066 00140000
*            END ;                                                 0067 00141000
*         END ;                                                    0068 00142000
*         ELSE ETWAEIFC(INDEX)=DUMMYFC;/* NO FUNCTION CODE IN FTPRINT*/ 00143000
         B     @RC00050                                            0069 00144000
@RF00050 LR    @06,INDEX                                           0069 00145000
         SLA   @06,3                                               0069 00146000
         LA    @03,255                                             0069 00147000
         STC   @03,ETWAEIFC-8(@06,R2)                              0069 00148000
*                                      /* SUPPLY A DUMMY CODE        */ 00149000
*    /*                                                              */ 00150000
*    /*        FAIL RETRY CRITERIOR - TASK WILL BE ABENDED.          */ 00151000
*    /*                                                              */ 00152000
*    /*          IF THE SUBTASK HAS NO PREVIOUS ABEND RECORD,        */ 00153000
*    /*          A RE-ATTACH W.E. IS BUILT AND QUEUE ON SYNCHRONOUS  */ 00154000
*    /*          TO RE-ATTACH THE SUBTASK.                           */ 00155000
*    /*                                                              */ 00156000
*    /*          IF MAIN TASK OR  PREVIOUS ABENDED SUBTASK, NO       */ 00157000
*    /*             RE-ATTACH DONE AND TCAS WILL TERMINATE.          */ 00158000
*    /*             IN THAT CASE, TWO W.E.S ARE BUILT- CALL TCAS     */ 00159000
*    /*             TERMINATION AND TERMINATE MAIN TASK.             */ 00160000
*    /*                                                              */ 00161000
*      DO R8= 1 TO 3 WHILE             /* FIND AVAILABLE SLOT IN     */ 00162000
*         ETWAABFC(R8)^=0  ;           /* ABEND RECORD AREA          */ 00163000
@RC00050 LA    R8,1                                                0070 00164000
@DL00070 SLR   @06,@06                                             0070 00165000
         IC    @06,ETWAABFC-1(R8,R2)                               0070 00166000
         C     @06,@CF00150                                        0070 00167000
         BE    @DC00070                                            0070 00168000
*      END ;                                                       0071 00169000
         AL    R8,@CF00062                                         0071 00170000
         C     R8,@CF00146                                         0071 00171000
         BNH   @DL00070                                            0071 00172000
@DC00070 DS    0H                                                  0072 00173000
*      ETWAABFC(R8)  =  ETWAEIFC(INDEX); /* SET RECORD               */ 00174000
         LR    @06,INDEX                                           0072 00175000
         SLA   @06,3                                               0072 00176000
         SLR   @03,@03                                             0072 00177000
         IC    @03,ETWAEIFC-8(@06,R2)                              0072 00178000
         STC   @03,ETWAABFC-1(R8,R2)                               0072 00179000
*      CALL TERM ;                     /* TO DO SOME TERMINATION WORK*/ 00180000
         BAL   @14,TERM                                            0073 00181000
*      IF ETWAID='MAIN'                /* IS MAIN TASK ABEND         */ 00182000
*         THEN DO ;                    /* YES                        */ 00183000
         CLC   ETWAID(4,R2),@CC00302                               0074 00184000
         BNE   @RF00074                                            0074 00185000
*         R1=RCABEND ;                 /* SET ABEND INDICATOR        */ 00186000
         SLR   R1,R1                                               0076 00187000
*         CALL RTNR ;                  /* TO PROCESS RETURN          */ 00188000
         BAL   @14,RTNR                                            0077 00189000
*         END ;                                                    0078 00190000
*         RFY WESTD BASED(ADDR(BUILDWE)); /* BUILD FIRST W.E. AREA   */ 00191000
@RF00074 DS    0H                                                  0080 00192000
*         WECODE1T=TCML ;              /* ASSIGN TASK CODE MAIN TASK */ 00193000
         LA    @06,BUILDWE                                         0080 00194000
         MVI   WECODE1T(@06),X'01'                                 0080 00195000
*         WECODE2T=TCML ;              /* SECONDARY T.C. MAIN TASK   */ 00196000
         MVI   WECODE2T(@06),X'01'                                 0081 00197000
*         WECODE2F=FCMLAT ;            /* SECONDARY F.C. ABEND MAIN  */ 00198000
         MVI   WECODE2F(@06),X'92'                                 0082 00199000
*         WELEN=12 ;                   /* W.E. LENGTH                */ 00200000
         MVC   WELEN(2,@06),@CH00148                               0083 00201000
*      BUILDWE1=BUILDWE ;              /* INIT SECOND W.E.           */ 00202000
         MVC   BUILDWE1(12),BUILDWE                                0084 00203000
*      WERC=TTECDT+TTECFR ;            /* DETACH SUBTASK AND FREE    */ 00204000
         MVC   WERC(2,@06),@CH00343                                0085 00205000
*                                      /* X MEMORY REQUEST ENTRY CODE*/ 00206000
*      RFY  WESTD BASED (ADDR(BUILDWE1));                          0086 00207000
*      WECODE1F=FCMLET ;               /* END OF MAIN TASK F.C.      */ 00208000
         LA    @03,BUILDWE1                                        0087 00209000
         MVI   WECODE1F(@03),X'91'                                 0087 00210000
*         RFY WESTD BASED(ADDR(BUILDWE)); /* BUILD FIRST W.E. AREA   */ 00211000
*         IF ETWAID='VTAM'             /* IS THIS VTAM INT           */ 00212000
*            THEN DO ;                 /* YES                        */ 00213000
         CLC   ETWAID(4,R2),@CC00303                               0089 00214000
         BNE   @RF00089                                            0089 00215000
*            IF ETWAABFC(2)^=0         /* PREVIOUS ABEND RECORD EXIST*/ 00216000
*               THEN DO ;              /* YES                        */ 00217000
         CLI   ETWAABFC+1(R2),0                                    0091 00218000
         BE    @RF00091                                            0091 00219000
*               WECODE1F=FCMLTT ;      /* TCAS TERMINATION F.C.      */ 00220000
         MVI   WECODE1F(@06),X'80'                                 0093 00221000
*               WENEXT=ADDR(BUILDWE1) ; /* CHAIN NEXT W.E.           */ 00222000
         ST    @03,WENEXT(,@06)                                    0094 00223000
*               ADDR(BUILDWE1)->WERC=RCVABE ;  /* SET ABEND REASON   */ 00224000
         MVC   WERC(2,@03),@CH00032                                0095 00225000
*                                      /* VTAM INT SUBTASK ABEND     */ 00226000
*               END ;                                              0096 00227000
*               ELSE DO ;                                          0097 00228000
         B     @RC00091                                            0097 00229000
@RF00091 DS    0H                                                  0098 00230000
*            WECODE1F=FCMLAV ;         /* SET F.C. ATTACH VTAM INT   */ 00231000
         LA    @06,BUILDWE                                         0098 00232000
         MVI   WECODE1F(@06),X'50'                                 0098 00233000
*            WENEXT=ADDR(BUILDWE1) ;   /* SET CHAIN TO NEXT WE       */ 00234000
         LA    @03,BUILDWE1                                        0099 00235000
         ST    @03,WENEXT(,@06)                                    0099 00236000
*            RFY WESTD BASED (ADDR(BUILDWE1));                     0100 00237000
*            WECODE1T=TCVI ;           /* VTAM INT SUBTASK           */ 00238000
         MVI   WECODE1T(@03),X'02'                                 0101 00239000
*            WECODE1F=FCVIAS ;         /* TO START LOGON AGAIN       */ 00240000
         MVI   WECODE1F(@03),X'14'                                 0102 00241000
*            WECODE2F=FCMLSC ;         /* 2ND DESTINATION IF FAIL    */ 00242000
         MVI   WECODE2F(@03),X'10'                                 0103 00243000
*            WENEXT=ADDR(BUILDWE2);    /* PTR TO RETURN WE   @ZA19856*/ 00244000
         LA    @06,BUILDWE2(,TWAPTR)                               0104 00245000
         ST    @06,WENEXT(,@03)                                    0104 00246000
*            RFY WESTD BASED(ADDR(BUILDWE2)); /*RETURN WE PTR@ZA19856*/ 00247000
*            WECODE1T=TCML;            /* MAIN TASK ID       @ZA19856*/ 00248000
         LA    @06,524                                             0106 00249000
         ALR   @06,TWAPTR                                          0106 00250000
         MVI   WECODE1T(@06),X'01'                                 0106 00251000
*            WECODE1F=FCMLSC;          /* START COMM PROC    @ZA19856*/ 00252000
         MVI   WECODE1F(@06),X'10'                                 0107 00253000
*            WECODE2F=FCRTN;           /* RETURN             @ZA19856*/ 00254000
         MVI   WECODE2F(@06),X'FF'                                 0108 00255000
*            RFY WESTD BASED (ADDR(BUILDWE)) ;                     0109 00256000
*            TWAVFL5='0'B ;            /* RESET ACB OPEN BIT         */ 00257000
*            TWAVFL6='0'B ;            /* RESET START LOGON BIT      */ 00258000
         NI    TWAVFL5(TWAPTR),B'11110011'                         0111 00259000
*            END ;                                                 0112 00260000
*            R9=0 ;                    /* ZERO FOR COMPARE SWAP      */ 00261000
@RC00091 SLR   R9,R9                                               0113 00262000
*            R10=ADDR(BUILDWE) ;       /* ADDR OF 1ST W.E. TO BE QED */ 00263000
         LA    R10,BUILDWE                                         0114 00264000
*            TWAVFL2='1'B ;            /* SET ABEND BIT              */ 00265000
         OI    TWAVFL2(TWAPTR),B'01000000'                         0115 00266000
*            CS(R9,R10,TWASYNQH) ;     /* QUEUE W.E. ON SYNC Q       */ 00267000
         CS    R9,@10,TWASYNQH(TWAPTR)                             0116 00268000
*            IF R9=0                   /* IF SUCCESSFUL              */ 00269000
*               THEN TWAVFL4='1'B ;    /* SET ESTAE COMPLETION BIT   */ 00270000
         LTR   R9,R9                                               0117 00271000
         BNZ   @RF00117                                            0117 00272000
         OI    TWAVFL4(TWAPTR),B'00010000'                         0118 00273000
*            END ;                                                 0119 00274000
*            ELSE                      /* NOT VTAM                   */ 00275000
*            IF ETWAID='USER'          /* IS THIS USER INT           */ 00276000
*               THEN DO ;              /* YES                        */ 00277000
         B     @RC00089                                            0120 00278000
@RF00089 CLC   ETWAID(4,R2),@CC00304                               0120 00279000
         BNE   @RF00120                                            0120 00280000
*         IF ETWAEIFC(INDEX)=FCUICR    /* IS IT A.S. CREATION F.C.   */ 00281000
*            THEN CALL CLEANUP ;       /* YES, BR TO CLEAN UP ROUTINE*/ 00282000
         LR    @06,INDEX                                           0122 00283000
         SLA   @06,3                                               0122 00284000
         SLR   @03,@03                                             0122 00285000
         IC    @03,ETWAEIFC-8(@06,R2)                              0122 00286000
         C     @03,@CF00196                                        0122 00287000
         BNE   @RF00122                                            0122 00288000
         BAL   @14,CLEANUP                                         0123 00289000
*            IF ETWAABFC(2)^=0         /* PREVIOUS ABEND RECORD EXIST*/ 00290000
*               THEN DO ;              /* YES                        */ 00291000
@RF00122 CLI   ETWAABFC+1(R2),0                                    0124 00292000
         BE    @RF00124                                            0124 00293000
*               WECODE1F=FCMLTT ;      /* TCAS TERMINATION F.C.      */ 00294000
         LA    @06,BUILDWE                                         0126 00295000
         MVI   WECODE1F(@06),X'80'                                 0126 00296000
*               WENEXT=ADDR(BUILDWE1) ; /* CHAIN NEXT W.E.           */ 00297000
         LA    @03,BUILDWE1                                        0127 00298000
         ST    @03,WENEXT(,@06)                                    0127 00299000
*               ADDR(BUILDWE1)->WERC=RCUABE ;  /* SET ABEND REASON   */ 00300000
         MVC   WERC(2,@03),@CH00237                                0128 00301000
*                                      /* USER INT SUBTASK ABEND     */ 00302000
*               END ;                                              0129 00303000
*               ELSE                                               0130 00304000
*               WECODE1F=FCMLAU ;      /* F.C. ATTACH USER INT       */ 00305000
         B     @RC00124                                            0130 00306000
@RF00124 LA    @06,BUILDWE                                         0130 00307000
         MVI   WECODE1F(@06),X'60'                                 0130 00308000
*               TWAUFL2='1'B ;         /* SET ABEND BIT              */ 00309000
@RC00124 OI    TWAUFL2(TWAPTR),B'01000000'                         0131 00310000
*               R9=0 ;                 /* ZERO FOR COMPARE SWAP      */ 00311000
         SLR   R9,R9                                               0132 00312000
*               R10=ADDR(BUILDWE) ;    /* R10 PTR 1ST WE TO BE QED   */ 00313000
         LA    R10,BUILDWE                                         0133 00314000
*               CS(R9,R10,TWASYNQH);   /* QUEUE W.E. ON SYNC Q       */ 00315000
         CS    R9,@10,TWASYNQH(TWAPTR)                             0134 00316000
*               IF R9=0                /* IF SUCCESSFUL              */ 00317000
*                  THEN TWAUFL4='1'B ; /* SET ESTAE COMPLETION BIT   */ 00318000
         LTR   R9,R9                                               0135 00319000
         BNZ   @RF00135                                            0135 00320000
         OI    TWAUFL4(TWAPTR),B'00010000'                         0136 00321000
*               END ;                                              0137 00322000
*            ELSE                      /* NOT USER                   */ 00323000
*            IF ETWAID='COMM'          /* IS THIS CON COMM INT       */ 00324000
*               THEN DO ;              /* YES                        */ 00325000
         B     @RC00120                                            0138 00326000
@RF00120 CLC   ETWAID(4,R2),@CC00305                               0138 00327000
         BNE   @RF00138                                            0138 00328000
*            IF ETWAABFC(2)^=0         /* PREVIOUS ABEND RECORD EXIST*/ 00329000
*               THEN DO ;              /* YES                        */ 00330000
         CLI   ETWAABFC+1(R2),0                                    0140 00331000
         BE    @RF00140                                            0140 00332000
*               WECODE1F=FCMLTT ;      /* TCAS TERMINATION F.C.      */ 00333000
         LA    @06,BUILDWE                                         0142 00334000
         MVI   WECODE1F(@06),X'80'                                 0142 00335000
*               WENEXT=ADDR(BUILDWE1) ; /* CHAIN NEXT W.E.           */ 00336000
         LA    @03,BUILDWE1                                        0143 00337000
         ST    @03,WENEXT(,@06)                                    0143 00338000
*               ADDR(BUILDWE1)->WERC=RCCABE ;  /* SET ABEND REASON   */ 00339000
         MVC   WERC(2,@03),@CH00239                                0144 00340000
*                                      /* CON COMM SUBTASK ABEND     */ 00341000
*               END ;                                              0145 00342000
*               ELSE                                               0146 00343000
*               WECODE1F=FCMLAC ;      /* F.C. ATTACH CON COMM INT   */ 00344000
         B     @RC00140                                            0146 00345000
@RF00140 LA    @06,BUILDWE                                         0146 00346000
         MVI   WECODE1F(@06),X'70'                                 0146 00347000
*               TWACFL2='1'B ;         /* SET ABEND BIT              */ 00348000
@RC00140 OI    TWACFL2(TWAPTR),B'01000000'                         0147 00349000
*               R9=0 ;                 /* ZERO FOR COMPARE SWAP      */ 00350000
         SLR   R9,R9                                               0148 00351000
*               R10=ADDR(BUILDWE) ;    /* 1ST W.E. ADDR TO BE QUEUED */ 00352000
         LA    R10,BUILDWE                                         0149 00353000
*               CS(R9,R10,TWASYNQH);   /* QUEUE W.E. ON SYNC Q       */ 00354000
         CS    R9,@10,TWASYNQH(TWAPTR)                             0150 00355000
*               IF R9=0                /* IF SUCCESSFUL              */ 00356000
*                  THEN TWACFL4='1'B ; /* SET ESTAE COMPLETION BIT   */ 00357000
         LTR   R9,R9                                               0151 00358000
         BNZ   @RF00151                                            0151 00359000
         OI    TWACFL4(TWAPTR),B'00100000'                         0152 00360000
*               END ;                                              0153 00361000
@RF00151 DS    0H                                                  0154 00362000
*      R1=RCABEND ;                    /* ABEND INDICATOR            */ 00363000
@RF00138 DS    0H                                                  0154 00364000
@RC00120 DS    0H                                                  0154 00365000
@RC00089 SLR   R1,R1                                               0154 00366000
*      CALL RTNR ;                     /* TO PROCESS EXIT            */ 00367000
         BAL   @14,RTNR                                            0155 00368000
         EJECT                                                          00369000
*    /*                                                              */ 00370000
*    /*        THE FOLLOWING ROUTINE IS AN INTERFACE TO THE          */ 00371000
*    /*        ABEND ROUTINE FOR CLEAN UP WORK TO BE PERFORMED       */ 00372000
*    /*        IN THE ABEND ROUTINE. THE LINKAGE IS ESTABLISHED      */ 00373000
*    /*        TO BRANCH AND LINK TO THE ABEND ROUTINE.              */ 00374000
*    /*                                                              */ 00375000
*CLEANUP : PROC OPTIONS(NOSAVE,NOSAVEAREA) ;                       0156 00376000
         B     @PB00002                                            0156 00377000
CLEANUP  DS    0H                                                  0157 00378000
*      R8=R14 ;                        /* SAVE RETURN REG            */ 00379000
         LR    R8,R14                                              0157 00380000
*      R9=R13 ;                        /* SAVE R13                   */ 00381000
         LR    R9,R13                                              0158 00382000
*      R13=ETWAERRS(INDEX) ;           /* LOAD SAVE AREA ADDR IN R13 */ 00383000
         LR    @06,INDEX                                           0159 00384000
         SLA   @06,3                                               0159 00385000
         L     R13,ETWAERRS-8(@06,R2)                              0159 00386000
*      R15=R13->EEWA4 ;                /* LOAD ENTRY ADDR            */ 00387000
         L     R15,EEWA4(,R13)                                     0160 00388000
*      GEN ;                                                       0161 00389000
         BALR  14,15                  BR BACK TO ABEND ROUTINE          00390000
*      R13=R9 ;                        /* RESTORE R13                */ 00391000
         LR    R13,R9                                              0162 00392000
*      R14=R8 ;                        /* RESTORE RETURN REG         */ 00393000
         LR    R14,R8                                              0163 00394000
*      END  CLEANUP ;                                              0164 00395000
@EL00002 DS    0H                                                  0164 00396000
@EF00002 DS    0H                                                  0164 00397000
@ER00002 BR    @14                                                 0164 00398000
         EJECT                                                          00399000
*    /*                                                              */ 00400000
*    /*        FOLLOWING ROUTINE CALLS MESSAGE ROUTINE TO GET        */ 00401000
*    /*        TERMINATING MESSAGE AND ISSUE THE MESSAGE.            */ 00402000
*    /*                                                              */ 00403000
*    /*        CALL TCAS TERMINATION ROUTINE  FOR DUMP SERVICE.      */ 00404000
*    /*                                                              */ 00405000
*    /*        A GETMAIN AREA IS OBTAINED FOR SAVE AREA AND MESSAGE  */ 00406000
*    /*        ISSUING AREA. AFTER IT IS DONE, THE AREA IS FREED.    */ 00407000
*    /*                                                              */ 00408000
*TERM : PROC OPTIONS (NOSAVE,NOSAVEAREA) ;                         0165 00409000
TERM     DS    0H                                                  0166 00410000
*      R8=R14 ;                        /* SAVE RETURN REG            */ 00411000
         LR    R8,R14                                              0166 00412000
*      GEN ;                                                       0167 00413000
         GETMAIN R,LV=GSTLEN          GETMAIN FOR WORK STORAGE          00414000
*      R10=R13 ;                       /* SAVE ORIGINAL R13 CONTENT  */ 00415000
         LR    R10,R13                                             0168 00416000
*      R13=R1  ;                       /* NEWLY OBTAINED SAVE AREA   */ 00417000
         LR    R13,R1                                              0169 00418000
*      IF ETWAID='MAIN'|ETWAABFC(2)^=0 /* IS IT MAIN TASK OR 2ND     */ 00419000
*         THEN DO ;                    /* ABEND, YES DO              */ 00420000
         CLC   ETWAID(4,R2),@CC00302                               0170 00421000
         BE    @RT00170                                            0170 00422000
         CLI   ETWAABFC+1(R2),0                                    0170 00423000
         BE    @RF00170                                            0170 00424000
@RT00170 DS    0H                                                  0171 00425000
*      R1=2 ;                          /* MSG 2 - TERMINATING MSG    */ 00426000
         LA    R1,2                                                0172 00427000
*      CALL IKTCAS56 ;                 /* GET MSG 2 SPECIFIED IN R1  */ 00428000
         L     @15,TWAMSG(,TWAPTR)                                 0173 00429000
         BALR  @14,@15                                             0173 00430000
*      R9=R1->EEWA3 ;                  /*R1 PTR LENGTH AND MSG       */ 00431000
         L     R9,EEWA3(,R1)                                       0174 00432000
*                                      /* GET LENGTH OUT FOR MOVING  */ 00433000
*      R1=R1+4 ;                       /* POINTS TO THE MSG          */ 00434000
         AL    R1,@CF00080                                         0175 00435000
*      R13->AREA(1:R9)=R1->AREA(1:R9); /* MOVE MSG INTO WORK AREA    */ 00436000
         LR    @06,R9                                              0176 00437000
         BCTR  @06,0                                               0176 00438000
         EX    @06,@SM00349                                        0176 00439000
*                                      /* WHICH IS POINTED TO BY R13 */ 00440000
*      IF ETWAID='MAIN'                /* IF MAIN TASK ABEND         */ 00441000
*         THEN R13->EEWA5=RSMABE ;     /* INSERT REASON CODE         */ 00442000
         CLC   ETWAID(4,R2),@CC00302                               0177 00443000
         BNE   @RF00177                                            0177 00444000
         MVC   EEWA5(4,R13),@CC00241                               0178 00445000
*         ELSE                         /* NOT MAIN TASK              */ 00446000
*         IF ETWAID='VTAM'             /*IF VTAM INT SUBTASK ABEND   */ 00447000
*          THEN R13->EEWA5=RSVABE ;    /* INSERT REASON CODE         */ 00448000
         B     @RC00177                                            0179 00449000
@RF00177 CLC   ETWAID(4,R2),@CC00303                               0179 00450000
         BNE   @RF00179                                            0179 00451000
         MVC   EEWA5(4,R13),@CC00243                               0180 00452000
*          ELSE                        /* NOT VTAM                   */ 00453000
*          IF ETWAID='USER'            /* IF USER INT SUBTASK ABEND  */ 00454000
*           THEN R13->EEWA5=RSUABE ;   /* INSERT REASON CODE         */ 00455000
         B     @RC00179                                            0181 00456000
@RF00179 CLC   ETWAID(4,R2),@CC00304                               0181 00457000
         BNE   @RF00181                                            0181 00458000
         MVC   EEWA5(4,R13),@CC00245                               0182 00459000
*           ELSE                       /* NOT USER                   */ 00460000
*            IF ETWAID='COMM'          /* IF CON COMM SUBTASK ABEND  */ 00461000
*             THEN R13->EEWA5=RSCABE ; /* INSERT REASON CODE         */ 00462000
         B     @RC00181                                            0183 00463000
@RF00181 CLC   ETWAID(4,R2),@CC00305                               0183 00464000
         BNE   @RF00183                                            0183 00465000
         MVC   EEWA5(4,R13),@CC00247                               0184 00466000
*      R1=R13 ;                        /* R1 PTR TO THE MSG          */ 00467000
@RF00183 DS    0H                                                  0185 00468000
@RC00181 DS    0H                                                  0185 00469000
@RC00179 DS    0H                                                  0185 00470000
@RC00177 LR    R1,R13                                              0185 00471000
*      GEN ;                                                       0186 00472000
         WTO   MF=(E,(1))             ISSUE TERMINATINE MSG             00473000
*      IF ETWAID='MAIN'                /* IS MAIN TASK ABEND         */ 00474000
*         THEN R1=TTECDM+TTECFR ;      /* SET ENTRY CODE DUMP SERVICE*/ 00475000
         CLC   ETWAID(4,R2),@CC00302                               0187 00476000
         BNE   @RF00187                                            0187 00477000
         LA    R1,5                                                0188 00478000
*                                      /* AND FREE X MEMORY REQUEST  */ 00479000
*         ELSE R1=TTECDM ;             /* IF NOT MAIN TASK - ONLY    */ 00480000
         B     @RC00187                                            0189 00481000
@RF00187 LA    R1,1                                                0189 00482000
*                                      /* REQUEST DUMP SERVICE       */ 00483000
*      CALL IKTCAS52 ;                 /*   TCAS TERMINATION ROUTINE */ 00484000
@RC00187 L     @15,TWATTSR(,TWAPTR)                                0190 00485000
         BALR  @14,@15                                             0190 00486000
*      END ;                                                       0191 00487000
*      ELSE DO ;                       /* NOT TERMINATE TCAS         */ 00488000
         B     @RC00170                                            0192 00489000
@RF00170 DS    0H                                                  0193 00490000
*      R1=20 ;                         /* GET MSG 20- RECOVERY MSG   */ 00491000
         LA    R1,20                                               0193 00492000
*      CALL IKTCAS56 ;                 /* MSG MODULE                 */ 00493000
         L     @15,TWAMSG(,TWAPTR)                                 0194 00494000
         BALR  @14,@15                                             0194 00495000
*      R9=R1->EEWA3 ;                  /* GET MSG LENGTH             */ 00496000
         L     R9,EEWA3(,R1)                                       0195 00497000
*      R1=R1+4 ;                       /* R1 PTR TO MSG TEXT         */ 00498000
         AL    R1,@CF00080                                         0196 00499000
*      R13->AREA(1:R9)=R1->AREA(1:R9); /* MOVE MSG OUT FOR INSERTION */ 00500000
         LR    @06,R9                                              0197 00501000
         BCTR  @06,0                                               0197 00502000
         EX    @06,@SM00349                                        0197 00503000
*      IF ETWAID='VTAM'                /* IF VTAM SUBTASK ABEND      */ 00504000
*         THEN R13->EEWA6=' VTAM INTERFACE      '; /* INSERT WORDS   */ 00505000
         CLC   ETWAID(4,R2),@CC00303                               0198 00506000
         BNE   @RF00198                                            0198 00507000
         MVC   EEWA6(21,R13),@CC00332                              0199 00508000
*         ELSE IF ETWAID='USER'        /* IF USER SUBTASK ABEND      */ 00509000
*         THEN R13->EEWA6=' USER INTERFACE      '; /* INSERT WORDS   */ 00510000
         B     @RC00198                                            0200 00511000
@RF00198 CLC   ETWAID(4,R2),@CC00304                               0200 00512000
         BNE   @RF00200                                            0200 00513000
         MVC   EEWA6(21,R13),@CC00334                              0201 00514000
*      R1=R13 ;                         /* R1 PTR TO THE MSG         */ 00515000
@RF00200 DS    0H                                                  0202 00516000
@RC00198 LR    R1,R13                                              0202 00517000
*      GEN ;                                                       0203 00518000
         WTO   MF=(E,(1))      ISSUE RECOVERY IN PROGRESS MSG           00519000
*      END ;                                                       0204 00520000
*      R9=R13 ;                        /* WORK AREA ADDR IN R9       */ 00521000
@RC00170 LR    R9,R13                                              0205 00522000
*      GEN ;                                                       0206 00523000
         FREEMAIN R,LV=GSTLEN,A=(R9)     FREEMAIN THE WORK AREA         00524000
*      R13=R10 ;                       /* RESTORE R13                */ 00525000
         LR    R13,R10                                             0207 00526000
*      R14=R8 ;                        /* RESTORE RETURN REG         */ 00527000
         LR    R14,R8                                              0208 00528000
*      END TERM ;                                                  0209 00529000
@EL00003 DS    0H                                                  0209 00530000
@EF00003 DS    0H                                                  0209 00531000
@ER00003 BR    @14                                                 0209 00532000
         EJECT                                                          00533000
*    /*                                                              */ 00534000
*    /*      THIS ROUTINE PROCESS THE RETURN OF CONTROL TO RTM       */ 00535000
*    /*        THERE ARE 2 WAYS OF RETURN:                           */ 00536000
*    /*        BR14 IF NO SDWA IS PROVIDED                           */ 00537000
*    /*        VIA SETRP MACRO IF SDWA IS PROVIDED                   */ 00538000
*    /*                                                              */ 00539000
*RTNR  : PROC OPTIONS(NOSAVE,NOSAVEAREA) ;                         0210 00540000
RTNR     DS    0H                                                  0211 00541000
*      RFY (R14,R15) RSTD ;                                        0211 00542000
*      R15=R1 ;                        /* R15 SHOULD CONTAIN RETURN  */ 00543000
         LR    R15,R1                                              0212 00544000
*                                      /* CODE WHICH WAS IN R1       */ 00545000
*      LM(R0,R2,SAVE) ;                /* RESTORE PARAMETER REGS     */ 00546000
         LM    R0,R2,SAVE                                          0213 00547000
*      R14=SAVER(4) ;                  /* RESTORE R14                */ 00548000
         L     R14,SAVER+12                                        0214 00549000
*      IF R0=NOSDWA                    /* IS THERE SDWA              */ 00550000
*         THEN DO ;                    /* NO, NO SDWA PROVIDED       */ 00551000
         C     R0,@CF00148                                         0215 00552000
         BNE   @RF00215                                            0215 00553000
*         R0=ADDR(RETRY) ;             /* R0 CONTAINS RETRY ADDR     */ 00554000
         LA    R0,RETRY                                            0217 00555000
*         GEN ;                                                    0218 00556000
         BR    R14                    BACK TO CALLER                    00557000
*         END ;                                                    0219 00558000
*         ELSE DO ;                                                0220 00559000
         B     @RC00215                                            0220 00560000
@RF00215 DS    0H                                                  0221 00561000
*        IF R15=RCRETRY                /* IF RETRY SPECIFIED         */ 00562000
*            THEN DO ;                 /* YES                        */ 00563000
         C     R15,@CF00080                                        0221 00564000
         BNE   @RF00221                                            0221 00565000
*            GEN REFS(RETRY) ;                                     0223 00566000
         SETRP REGS=(14,12),RC=4,RETADDR=RETRY,FRESDWA=YES              00567000
*            END ;                                                 0224 00568000
*            ELSE DO ;                 /* NOT RETRY SPECIFIED        */ 00569000
         B     @RC00221                                            0225 00570000
@RF00221 DS    0H                                                  0226 00571000
*            GEN ;                                                 0226 00572000
         SETRP REGS=(14,12),RC=0                                        00573000
*            END;                                                  0227 00574000
*            END ;                                                 0228 00575000
*      END  RTNR ;                                                 0229 00576000
@EL00004 DS    0H                                                  0229 00577000
@EF00004 DS    0H                                                  0229 00578000
@ER00004 BR    @14                                                 0229 00579000
@PB00004 DS    0H                                                  0229 00580000
         EJECT                                                          00581000
*    /*                                                              */ 00582000
*    /*        THE FOLLOWING ROUTINE IS AN INTERFACE TO THE          */ 00583000
*    /*        ABEND ROUTINE FOR  RETRY. LINKAGE IS ESTABLISHED TO   */ 00584000
*    /*        BRANCH BACK TO THE ABEND ROUTINE.                     */ 00585000
*    /*        AT ENTRY R1 CONTAINS THE ADDR OF PARAMETER PASSED     */ 00586000
*    /*        FROM ESTAE MACRO.                                     */ 00587000
*    /*                                                              */ 00588000
*RETRY  :                                                          0230 00589000
*      GEN ;                                                       0230 00590000
RETRY    DS    0H                                                  0230 00591000
         BALR  R12,0                  R12 IS BASE REG                   00592000
         USING *,R12                  ADDRESSIBILITY                    00593000
         USING @DATD-4,R1             R1 PTR PARAMETR PASSED FROM       00594000
*                                     TASK AND R1+4 IS WORK AREA FOR    00595000
*                                     ESTAE WHICH MAY BE USED FOR       00596000
*                                     AUTO DATA                         00597000
*      RFY ETWA BASED(R1) ;            /* PARAMETER ADDRESSIBILITY   */ 00598000
*      DO INDEX=4 TO 2 BY -1           /* PIN POINT THE LAST FTPRINT */ 00599000
*         WHILE(ETWAEIFC(INDEX)=0);    /* WHICH CONTAIN THE FUNCTION */ 00600000
         LA    INDEX,4                                             0232 00601000
@DL00232 LR    @06,INDEX                                           0232 00602000
         SLA   @06,3                                               0232 00603000
         SLR   @03,@03                                             0232 00604000
         IC    @03,ETWAEIFC-8(@06,R1)                              0232 00605000
         C     @03,@CF00150                                        0232 00606000
         BNE   @DC00232                                            0232 00607000
*      END ;                           /* CODE, RETRY ADDR, AND SAVE */ 00608000
         BCTR  INDEX,0                                             0233 00609000
         C     INDEX,@CF00073                                      0233 00610000
         BNL   @DL00232                                            0233 00611000
@DC00232 DS    0H                                                  0234 00612000
*                                      /* AREA ADDR                  */ 00613000
*      R13=ETWAERRS(INDEX) ;           /* LOAD SAVE AREA ADDR        */ 00614000
         LR    @06,INDEX                                           0234 00615000
         SLA   @06,3                                               0234 00616000
         L     R13,ETWAERRS-8(@06,R1)                              0234 00617000
*      R15=ETWAERA(INDEX) ;            /* LOAD RETRY ADDR            */ 00618000
         L     R15,ETWAERA-9(@06,R1)                               0235 00619000
         LA    R15,0(,R15)                                         0235 00620000
*      GEN ;                                                       0236 00621000
         LM    R0,R12,20(R13)         RESTORE REGS FROM SAVE AREA       00622000
         LM    R13,R14,8(R13)         RESTORE R13 AND R14               00623000
         BR    R15                    BRANCH TO RETRY ROUTINE           00624000
GSTLEN   EQU   80                                                       00625000
         IHASDWA                                                        00626000
IKTCAS55 CSECT                                                          00627000
*      END  IKTCAS55                                               0237 00628000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00629000
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        * 00630000
*;                                                                 0237 00631000
@DATA    DS    0H                                                       00632000
@CH00343 DC    H'6'                                                     00633000
@CH00032 DC    H'48'                                                    00634000
@CH00237 DC    H'52'                                                    00635000
@CH00239 DC    H'56'                                                    00636000
@SM00349 MVC   AREA(0,R13),AREA(R1)                                     00637000
@DATD    DSECT                                                          00638000
         DS    0F                                                       00639000
IKTCAS55 CSECT                                                          00640000
         DS    0F                                                       00641000
@CF00150 DC    F'0'                                                     00642000
@CF00062 DC    F'1'                                                     00643000
@CF00073 DC    F'2'                                                     00644000
@CF00146 DC    F'3'                                                     00645000
@CF00080 DC    F'4'                                                     00646000
@CF00064 DC    F'7'                                                     00647000
@CF00060 DC    F'8'                                                     00648000
@CF00148 DC    F'12'                                                    00649000
@CH00148 EQU   @CF00148+2                                               00650000
@CF00196 DC    XL4'11'                                                  00651000
@DATD    DSECT                                                          00652000
         DS    0D                                                       00653000
BUILDWE  DS    CL12                                                     00654000
BUILDWE1 DS    CL12                                                     00655000
SAVER    DS    4A                                                       00656000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00657000
@ENDDATD EQU   *                                                        00658000
IKTCAS55 CSECT                                                          00659000
         NOPR  ((@ENDDATD-@DATD)/49*16)                                 00660000
         DS    0F                                                       00661000
@SIZDATD DC    AL1(0)                                                   00662000
         DC    AL3(@ENDDATD-@DATD)                                      00663000
         DS    0D                                                       00664000
@CC00332 DC    C' VTAM INTERFACE      '                                 00665000
@CC00334 DC    C' USER INTERFACE      '                                 00666000
@CC00241 DC    C'  32'                                                  00667000
@CC00243 DC    C'  48'                                                  00668000
@CC00245 DC    C'  52'                                                  00669000
@CC00247 DC    C'  56'                                                  00670000
@CC00302 DC    C'MAIN'                                                  00671000
@CC00303 DC    C'VTAM'                                                  00672000
@CC00304 DC    C'USER'                                                  00673000
@CC00305 DC    C'COMM'                                                  00674000
         DS    CL2                                                      00675000
PATCH    DC    25F'0'                                                   00676000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00677000
@01      EQU   01                                                       00678000
@02      EQU   02                                                       00679000
@03      EQU   03                                                       00680000
@04      EQU   04                                                       00681000
@05      EQU   05                                                       00682000
@06      EQU   06                                                       00683000
@07      EQU   07                                                       00684000
@08      EQU   08                                                       00685000
@09      EQU   09                                                       00686000
@10      EQU   10                                                       00687000
@11      EQU   11                                                       00688000
@12      EQU   12                                                       00689000
@13      EQU   13                                                       00690000
@14      EQU   14                                                       00691000
@15      EQU   15                                                       00692000
TWAPTR   EQU   @11                                                      00693000
R0       EQU   @00                                                      00694000
R1       EQU   @01                                                      00695000
R2       EQU   @02                                                      00696000
INDEX    EQU   @07                                                      00697000
R8       EQU   @08                                                      00698000
R9       EQU   @09                                                      00699000
R10      EQU   @10                                                      00700000
R12      EQU   @12                                                      00701000
R13      EQU   @13                                                      00702000
R14      EQU   @14                                                      00703000
R15      EQU   @15                                                      00704000
TWAR     EQU   0                                                        00705000
TWASYNQH EQU   TWAR+4                                                   00706000
TWATTSR  EQU   TWAR+28                                                  00707000
TWAMSG   EQU   TWAR+48                                                  00708000
TWAMFL   EQU   TWAR+80                                                  00709000
TWAVFL   EQU   TWAR+81                                                  00710000
TWAVFL2  EQU   TWAVFL                                                   00711000
TWAVFL4  EQU   TWAVFL                                                   00712000
TWAVFL5  EQU   TWAVFL                                                   00713000
TWAVFL6  EQU   TWAVFL                                                   00714000
TWAUFL   EQU   TWAR+82                                                  00715000
TWAUFL2  EQU   TWAUFL                                                   00716000
TWAUFL4  EQU   TWAUFL                                                   00717000
TWACFL   EQU   TWAR+83                                                  00718000
TWACFL2  EQU   TWACFL                                                   00719000
TWACFL4  EQU   TWACFL                                                   00720000
TWAM     EQU   TWAR+84                                                  00721000
TWAME    EQU   TWAM+68                                                  00722000
TWAMEI   EQU   TWAME                                                    00723000
TWAV     EQU   TWAR+184                                                 00724000
TWAVE    EQU   TWAV+68                                                  00725000
TWAVEI   EQU   TWAVE                                                    00726000
TWAVI    EQU   TWAR+284                                                 00727000
TWAU     EQU   TWAR+300                                                 00728000
TWAUE    EQU   TWAU+68                                                  00729000
TWAUEI   EQU   TWAUE                                                    00730000
TWAUI    EQU   TWAR+400                                                 00731000
TWAC     EQU   TWAR+408                                                 00732000
TWACE    EQU   TWAC+68                                                  00733000
TWACEI   EQU   TWACE                                                    00734000
TWACI    EQU   TWAR+508                                                 00735000
TWAWORKE EQU   TWAR+524                                                 00736000
WESTD    EQU   0                                                        00737000
WECODE1  EQU   WESTD                                                    00738000
WECODE1T EQU   WECODE1                                                  00739000
WECODE1F EQU   WECODE1+1                                                00740000
WECODE2  EQU   WESTD+2                                                  00741000
WECODE2T EQU   WECODE2                                                  00742000
WECODE2F EQU   WECODE2+1                                                00743000
WENEXT   EQU   WESTD+4                                                  00744000
WERC     EQU   WESTD+8                                                  00745000
WELEN    EQU   WESTD+10                                                 00746000
IKTCAS52 EQU   0                                                        00747000
IKTCAS56 EQU   0                                                        00748000
EEWA3    EQU   0                                                        00749000
EEWA4    EQU   16                                                       00750000
EEWA5    EQU   45                                                       00751000
EEWA6    EQU   17                                                       00752000
AREA     EQU   0                                                        00753000
ETWA     EQU   0                                                        00754000
ETWAID   EQU   ETWA                                                     00755000
ETWAWA   EQU   ETWA+4                                                   00756000
ETWATWA  EQU   ETWA+52                                                  00757000
ETWAABFC EQU   ETWA+56                                                  00758000
ETWARTFC EQU   ETWA+60                                                  00759000
ETWAE    EQU   ETWA+68                                                  00760000
ETWAEI   EQU   ETWAE                                                    00761000
ETWAEIFC EQU   ETWAEI                                                   00762000
ETWAERA  EQU   ETWAEI+1                                                 00763000
ETWAERRS EQU   ETWAE+4                                                  00764000
SAVE     EQU   SAVER                                                    00765000
BUILDWE2 EQU   TWAWORKE                                                 00766000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00767000
WERC2    EQU   WERC+1                                                   00768000
WERC1    EQU   WERC                                                     00769000
WECD2MIF EQU   WECODE2F                                                 00770000
WECD2MAF EQU   WECODE2F                                                 00771000
WECDMIF  EQU   WECODE1F                                                 00772000
WECDMAF  EQU   WECODE1F                                                 00773000
TWAEND   EQU   TWAR+536                                                 00774000
@NM00005 EQU   TWACI+13                                                 00775000
TWACSKIP EQU   TWACI+12                                                 00776000
TWACMODQ EQU   TWACI+8                                                  00777000
TWACSTPQ EQU   TWACI+4                                                  00778000
TWACECB  EQU   TWACI                                                    00779000
TWACERRS EQU   TWACE+4                                                  00780000
TWACERA  EQU   TWACEI+1                                                 00781000
TWACEIFC EQU   TWACEI                                                   00782000
TWACRTFC EQU   TWAC+60                                                  00783000
TWACABFC EQU   TWAC+56                                                  00784000
TWACTWA  EQU   TWAC+52                                                  00785000
TWACEWA  EQU   TWAC+4                                                   00786000
TWACID   EQU   TWAC                                                     00787000
TWAUACQH EQU   TWAUI+4                                                  00788000
TWAUECB  EQU   TWAUI                                                    00789000
TWAUERRS EQU   TWAUE+4                                                  00790000
TWAUERA  EQU   TWAUEI+1                                                 00791000
TWAUEIFC EQU   TWAUEI                                                   00792000
TWAURTFC EQU   TWAU+60                                                  00793000
TWAUABFC EQU   TWAU+56                                                  00794000
TWAUTWA  EQU   TWAU+52                                                  00795000
TWAUEWA  EQU   TWAU+4                                                   00796000
TWAUID   EQU   TWAU                                                     00797000
TWAVACQH EQU   TWAVI+12                                                 00798000
TWAVTHQH EQU   TWAVI+8                                                  00799000
TWAVTEQH EQU   TWAVI+4                                                  00800000
TWAVECB  EQU   TWAVI                                                    00801000
TWAVERRS EQU   TWAVE+4                                                  00802000
TWAVERA  EQU   TWAVEI+1                                                 00803000
TWAVEIFC EQU   TWAVEI                                                   00804000
TWAVRTFC EQU   TWAV+60                                                  00805000
TWAVABFC EQU   TWAV+56                                                  00806000
TWAVTWA  EQU   TWAV+52                                                  00807000
TWAVEWA  EQU   TWAV+4                                                   00808000
TWAVID   EQU   TWAV                                                     00809000
TWAMERRS EQU   TWAME+4                                                  00810000
TWAMERA  EQU   TWAMEI+1                                                 00811000
TWAMEIFC EQU   TWAMEI                                                   00812000
TWAMRTFC EQU   TWAM+60                                                  00813000
TWAMABFC EQU   TWAM+56                                                  00814000
TWAMTWA  EQU   TWAM+52                                                  00815000
TWAMEWA  EQU   TWAM+4                                                   00816000
TWAMID   EQU   TWAM                                                     00817000
@NM00004 EQU   TWACFL                                                   00818000
TWACFL1  EQU   TWACFL                                                   00819000
@NM00003 EQU   TWAUFL                                                   00820000
TWAUFL3  EQU   TWAUFL                                                   00821000
TWAUFL1  EQU   TWAUFL                                                   00822000
@NM00002 EQU   TWAVFL                                                   00823000
TWAVFL3  EQU   TWAVFL                                                   00824000
TWAVFL1  EQU   TWAVFL                                                   00825000
@NM00001 EQU   TWAMFL                                                   00826000
TWAMFL1  EQU   TWAMFL                                                   00827000
TWACCOMP EQU   TWAR+76                                                  00828000
TWAUCOMP EQU   TWAR+72                                                  00829000
TWAVCOMP EQU   TWAR+68                                                  00830000
TWAMECB  EQU   TWAR+64                                                  00831000
TWACTCB  EQU   TWAR+60                                                  00832000
TWAUTCB  EQU   TWAR+56                                                  00833000
TWAVTCB  EQU   TWAR+52                                                  00834000
TWADEQAS EQU   TWAR+44                                                  00835000
TWAEESR  EQU   TWAR+40                                                  00836000
TWAPPSR  EQU   TWAR+36                                                  00837000
TWATCSR  EQU   TWAR+32                                                  00838000
TWAINIT  EQU   TWAR+24                                                  00839000
TWATCAST EQU   TWAR+20                                                  00840000
TWACSCB  EQU   TWAR+16                                                  00841000
TWAASCB  EQU   TWAR+12                                                  00842000
TWAPASQH EQU   TWAR+8                                                   00843000
TWARSON  EQU   TWAR+2                                                   00844000
TWACOMP  EQU   TWAR                                                     00845000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00846000
@RF00052 EQU   @RC00050                                                 00847000
@RF00054 EQU   @RC00050                                                 00848000
@RF00058 EQU   @RC00050                                                 00849000
@RF00117 EQU   @RC00089                                                 00850000
@RF00135 EQU   @RC00120                                                 00851000
@PB00003 EQU   @PB00004                                                 00852000
@RC00215 EQU   @EL00004                                                 00853000
@RC00221 EQU   @EL00004                                                 00854000
@PB00002 EQU   @PB00003                                                 00855000
@ENDDATA EQU   *                                                        00856000
         END   IKTCAS55,(C'PLS0502',0701,77238)                         00857000
