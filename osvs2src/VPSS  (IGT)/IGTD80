TD80     TITLE 'IGTD80 --- DUMP COMMAND PROCESSING                     *00001000
                        '                                               00002000
IGTD80   CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IGTD80    77.230'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @07,0                                            01S0001 00011000
@PSTART  LA    @08,4095(,@07)                                   01S0001 00012000
         LA    @05,4095(,@08)                                   01S0001 00013000
         USING @PSTART,@07                                      01S0001 00014000
         USING @PSTART+4095,@08                                 01S0001 00015000
         USING @PSTART+8190,@05                                 01S0001 00016000
         L     @00,@SIZDATD                                     01S0001 00017000
         IGTYGSV  R,LV=(0)                                              00018000
         LR    @06,@01                                          01S0001 00019000
         USING @DATD,@06                                        01S0001 00020000
         ST    @13,@SA00001+4                                   01S0001 00021000
         LM    @00,@01,20(@13)                                  01S0001 00022000
         ST    @06,8(,@13)                                      01S0001 00023000
         LR    @13,@06                                          01S0001 00024000
*        BITFLAGS = 0;                  /* INITIALIZE FLAGS. @ZA25361*/ 00025000
         SLR   @11,@11                                          02S0161 00026000
         ST    @11,BITFLAGS                                     02S0161 00027000
*        DUMPISGO = TRUE;           /* TURNED OFF IF ERRORS. @ZA25361*/ 00028000
         OI    DUMPISGO,B'00010000'                             02S0162 00029000
*        PAGENMBR = 1;                 /* PAGE NUMBER.       @ZA25361*/ 00030000
         MVC   PAGENMBR(4),@CF00079                             02S0163 00031000
*        DCBPTR = ADDR(DCBTEMPA); /* ADDRESS OF THE FIRST DCB.     */   00032000
         LA    @11,DCBTEMPA                                     02S0164 00033000
         ST    @11,DCBPTR                                       02S0164 00034000
*        DCBOFOPN = FALSE; /* INIT OPENED INDICATOR FOR STAE @ZA25361*/ 00035000
         LA    @04,40                                           02S0165 00036000
         ALR   @11,@04                                          02S0165 00037000
         NI    DCBOFOPN(@11),B'11101111'                        02S0165 00038000
*        DCBPTR = ADDR(DCB3838A); /* ADDRESS OF SECOND DCB.  @ZA25361*/ 00039000
         LA    @11,DCB3838A                                     02S0166 00040000
         ST    @11,DCBPTR                                       02S0166 00041000
*        DCBOFOPN = FALSE; /* INIT OPENED INDICATOR FOR STAE @ZA25361*/ 00042000
         ALR   @11,@04                                          02S0167 00043000
         NI    DCBOFOPN(@11),B'11101111'                        02S0167 00044000
*    IF APCQPLEN<3 THEN             /* 3 CHAR'S REQUIRED FOR UNIT NO.*/ 00045000
         LH    @11,APCQPLEN(,APCQPTR)                           02S0168 00046000
         C     @11,@CF00117                                     02S0168 00047000
         BNL   @RF00168                                         02S0168 00048000
*      DO;                                                      02S0169 00049000
*        CMNDERR = TRUE;            /* COMMAND ERROR IDENTIFIED      */ 00050000
         OI    CMNDERR,B'00010000'                              02S0170 00051000
*      END;                                                     02S0171 00052000
*    ELSE                           /* OTHERWISE, 3 OR MORE CHAR'S   */ 00053000
*      DO;                                                      02S0172 00054000
         B     @RC00168                                         02S0172 00055000
@RF00168 DS    0H                                               02S0173 00056000
*        UNITADDR = APCQCMND(APCQPSTR:APCQPSTR+2);/*ISOLATE UNIT ADDR*/ 00057000
         LH    @11,APCQPSTR(,APCQPTR)                           02S0173 00058000
         ALR   @11,APCQPTR                                      02S0173 00059000
         MVC   UNITADDR(3),APCQCMND-1(@11)                      02S0173 00060000
*        IF APCQIINF^=APCQUDMP & UNITADDR(3:3)^='0' THEN        02S0174 00061000
         CLC   APCQIINF(4,APCQPTR),@CF00182                     02S0174 00062000
         BE    @RF00174                                         02S0174 00063000
         CLI   UNITADDR+2,C'0'                                  02S0174 00064000
         BE    @RF00174                                         02S0174 00065000
*          CMNDERR = TRUE;          /* NON-UDUMP UNIT MUST BE PORT 0 */ 00066000
         OI    CMNDERR,B'00010000'                              02S0175 00067000
*        ELSE                                                   02S0176 00068000
*         DO;                       /* CONTINUE COMMAND PROCESSING.  */ 00069000
         B     @RC00174                                         02S0176 00070000
@RF00174 DS    0H                                               02S0177 00071000
*           IF UNITADDR(3:3) ^= '0' THEN /* IF PORT DUMP THEN        */ 00072000
         CLI   UNITADDR+2,C'0'                                  02S0177 00073000
         BE    @RF00177                                         02S0177 00074000
*             RESETUJA = TRUE;      /* MUST CALL IGTUJA.             */ 00075000
         OI    RESETUJA,B'00000010'                             02S0178 00076000
*           ELSE;                   /* NO ELSE PROCESSING REQUIRED.  */ 00077000
@RF00177 DS    0H                                               02S0180 00078000
*         IF APCQPLEN=3 THEN;       /* IT IS VALID TO GIVE ONLY UNIT#*/ 00079000
         CLC   APCQPLEN(2,APCQPTR),@CH00117                     02S0180 00080000
         BE    @RT00180                                         02S0180 00081000
*         ELSE                      /* PARM FIELD HAS MORE THAN 3 CHR*/ 00082000
*                        /* EXAMINE PARAMETERS IN COMMAND            */ 00083000
*          DO;                                                  02S0182 00084000
*            CMNDPSTR = APCQPSTR + 3; /* POINT BEYOND UNIT NUMBER    */ 00085000
         LA    @04,3                                            02S0183 00086000
         LH    CMNDPSTR,APCQPSTR(,APCQPTR)                      02S0183 00087000
         ALR   CMNDPSTR,@04                                     02S0183 00088000
*            PLENLEFT = APCQPLEN - 3; /* REDUCE COUNT OF CHAR'S LEFT */ 00089000
         LCR   @04,@04                                          02S0184 00090000
         AH    @04,APCQPLEN(,APCQPTR)                           02S0184 00091000
         STH   @04,PLENLEFT                                     02S0184 00092000
*            DO WHILE(PLENLEFT>0 & CMNDERR=FALSE);/* LOOK AT 'EM ALL */ 00093000
         B     @DE00185                                         02S0185 00094000
@DL00185 DS    0H                                               02S0186 00095000
*              IF APCQCMND(CMNDPSTR:CMNDPSTR+2)=',CP' THEN      02S0186 00096000
         LR    @04,APCQPTR                                      02S0186 00097000
         ALR   @04,CMNDPSTR                                     02S0186 00098000
         CLC   APCQCMND-1(3,@04),@CC03231                       02S0186 00099000
         BNE   @RF00186                                         02S0186 00100000
*                DO;                /* MATCH FOUND FOR CP PARM       */ 00101000
*                  DUMPCP = TRUE;   /* COMMAND SPECIFIES DUMP OF CP  */ 00102000
         OI    DUMPCP,B'00000001'                               02S0188 00103000
*                  PLENGTH = 3;     /* ADD ON LENGTH OF PARM         */ 00104000
         LA    PLENGTH,3                                        02S0189 00105000
*                END;                                           02S0190 00106000
*              ELSE                                             02S0191 00107000
*                IF APCQCMND(CMNDPSTR:CMNDPSTR+5)=',FORCE' THEN 02S0191 00108000
         B     @RC00186                                         02S0191 00109000
@RF00186 LR    @04,APCQPTR                                      02S0191 00110000
         ALR   @04,CMNDPSTR                                     02S0191 00111000
         CLC   APCQCMND-1(6,@04),@CC03232                       02S0191 00112000
         BNE   @RF00191                                         02S0191 00113000
*                  DO;              /* MATCH FOUND FOR FORCE PARM    */ 00114000
*                    DUMPFORC = TRUE; /* COMMAND SPECIFIES S.A. DUMP */ 00115000
         OI    DUMPFORC,B'10000000'                             02S0193 00116000
*                    PLENGTH = 6;   /* NOTE LENGTH OF PARM           */ 00117000
         LA    PLENGTH,6                                        02S0194 00118000
*                  END;                                         02S0195 00119000
*                ELSE                                           02S0196 00120000
*                  IF APCQCMND(CMNDPSTR:CMNDPSTR+7)=',STORAGE' THEN     00121000
         B     @RC00191                                         02S0196 00122000
@RF00191 LR    @04,APCQPTR                                      02S0196 00123000
         ALR   @04,CMNDPSTR                                     02S0196 00124000
         CLC   APCQCMND-1(8,@04),@CC03233                       02S0196 00125000
         BNE   @RF00196                                         02S0196 00126000
*                    DO;            /* MATCH FOUND FOR STORAGE PARM  */ 00127000
*                      DUMPBS  = TRUE; /* COMMAND SPECIFIES BS DUMP  */ 00128000
         OI    DUMPBS,B'00000100'                               02S0198 00129000
*                      PLENGTH = 8; /* NOTE LENGTH OF PARM           */ 00130000
         LA    PLENGTH,8                                        02S0199 00131000
*                                /* SEE IF STORAGE LIMITS PROVIDED   */ 00132000
*                      IF APCQCMND(CMNDPSTR+8:CMNDPSTR+9)='=(' THEN     00133000
         LR    @04,APCQPTR                                      02S0200 00134000
         ALR   @04,CMNDPSTR                                     02S0200 00135000
         CLC   APCQCMND+7(2,@04),@CC03234                       02S0200 00136000
         BNE   @RF00200                                         02S0200 00137000
*                        DO;        /* PICKUP & EXAMINE LIMIT ADDR'S */ 00138000
*                          PLENGTH = 10; /* INCREASE PARM LENGTH     */ 00139000
         LA    PLENGTH,10                                       02S0202 00140000
*  RFY (R3F,R4F) RSTD;              /* USE REGS FOR FORMING BIN. ADDR*/ 00141000
*  DUMPBSAA = TRUE;                 /* B.S. DUMP ADDRESS BOUNDS GIVEN*/ 00142000
         OI    DUMPBSAA,B'00000010'                             03S0204 00143000
*  DO DLMINDEX=1 TO 2;              /* SCAN FOR 2 SUCCESSIVE DELMTRS */ 00144000
         LA    @15,1                                            03S0205 00145000
         STH   @15,DLMINDEX                                     03S0205 00146000
@DL00205 DS    0H                                               03S0206 00147000
*    DIGITCNT = ZERO;               /* INITIALIZE COUNT OF DIGITS    */ 00148000
         SLR   @15,@15                                          03S0206 00149000
         STH   @15,DIGITCNT                                     03S0206 00150000
*    DLMFOUND = FALSE;              /* INITILIZE MATCH INDICATOR     */ 00151000
         NI    DLMFOUND,B'11110111'                             03S0207 00152000
*    R4F = ZERO;                    /* REG IN WHICH ADDR WILL FORM   */ 00153000
         SLR   R4F,R4F                                          03S0208 00154000
*    R3F = ZERO;                    /* REG FOR INTERMEDIATE DIGIT USE*/ 00155000
         SLR   R3F,R3F                                          03S0209 00156000
*    DO DIGTINDX=1 TO 6 BY 1 WHILE(CMNDERR=FALSE & DLMFOUND=FALSE);     00157000
         LA    @15,1                                            03S0210 00158000
         STH   @15,DIGTINDX                                     03S0210 00159000
@DL00210 TM    CMNDERR,B'00011000'                              03S0210 00160000
         BNZ   @DC00210                                         03S0210 00161000
*          /* SCAN UP TO 6 DIGITS WHILE LOOKING FOR , OR ) DELIMITER */ 00162000
*      IF APCQCMND(CMNDPSTR+PLENGTH+DIGTINDX-1:CMNDPSTR+PLENGTH+        00163000
*          DIGTINDX-1)=DELMTR(DLMINDEX) THEN                    03S0211 00164000
         LR    @14,CMNDPSTR                                     03S0211 00165000
         ALR   @14,PLENGTH                                      03S0211 00166000
         ALR   @14,@15                                          03S0211 00167000
         LH    @01,DLMINDEX                                     03S0211 00168000
         ALR   @14,APCQPTR                                      03S0211 00169000
         LA    @15,DELMTR-1(@01)                                03S0211 00170000
         CLC   APCQCMND-2(1,@14),0(@15)                         03S0211 00171000
         BNE   @RF00211                                         03S0211 00172000
*        DO;                        /* DELIMITER HAS BEEN FOUND      */ 00173000
*          DLMFOUND = TRUE;         /* SET INDICATOR                 */ 00174000
         OI    DLMFOUND,B'00001000'                             03S0213 00175000
*          IF DIGTINDX=1 THEN       /* IF 1ST CHAR IS DELIMITER, THEN*/ 00176000
         LH    @15,DIGTINDX                                     03S0214 00177000
         C     @15,@CF00079                                     03S0214 00178000
         BNE   @RF00214                                         03S0214 00179000
*            CMNDERR = TRUE;        /* 1ST ADDR MISSING => ERROR     */ 00180000
         OI    CMNDERR,B'00010000'                              03S0215 00181000
*        END;                                                   03S0216 00182000
*      ELSE                         /* DELIMITER NOT FOUND           */ 00183000
*        DO;                        /* SEE IF CHAR IS VALID HEX DIGIT*/ 00184000
         B     @RC00211                                         03S0217 00185000
@RF00211 DS    0H                                               03S0218 00186000
*                                   /* AND IF SO, SAVE HEX. DIGIT    */ 00187000
*          DIGITCNT = DIGTINDX;     /* DIGTINDX DIGITS NOW FOUND     */ 00188000
         LH    @15,DIGTINDX                                     03S0218 00189000
         STH   @15,DIGITCNT                                     03S0218 00190000
*          IF (APCQCMND(CMNDPSTR+PLENGTH+DIGTINDX-1:CMNDPSTR+PLENGTH    00191000
*              +DIGTINDX-1)>='F0'X & APCQCMND(CMNDPSTR+PLENGTH  03S0219 00192000
*              +DIGTINDX-1:CMNDPSTR+PLENGTH+DIGTINDX-1)<='F9'X) THEN    00193000
         LR    @14,CMNDPSTR                                     03S0219 00194000
         ALR   @14,PLENGTH                                      03S0219 00195000
         ALR   @14,@15                                          03S0219 00196000
         ST    @14,@TF00001                                     03S0219 00197000
         ALR   @14,APCQPTR                                      03S0219 00198000
         CLI   APCQCMND-2(@14),X'F0'                            03S0219 00199000
         BL    @RF00219                                         03S0219 00200000
         LR    @01,APCQPTR                                      03S0219 00201000
         AL    @01,@TF00001                                     03S0219 00202000
         CLI   APCQCMND-2(@01),X'F9'                            03S0219 00203000
         BH    @RF00219                                         03S0219 00204000
*            DO;                    /* DIGIT IS IN RANGE 0 THRU 9    */ 00205000
*              R3F = APCQCMND(CMNDPSTR+PLENGTH+DIGTINDX-1:CMNDPSTR      00206000
*                  +PLENGTH+DIGTINDX-1) & '0F'X;/* STRIP ZONE BITS   */ 00207000
         LA    R3F,15                                           03S0221 00208000
         L     @01,@TF00001                                     03S0221 00209000
         SLR   @00,@00                                          03S0221 00210000
         IC    @00,APCQCMND-2(@01,APCQPTR)                      03S0221 00211000
         NR    R3F,@00                                          03S0221 00212000
*              SLL(R4F,4);          /* MAKE ROOM FOR THIS 4BIT DIGIT */ 00213000
         SLL   R4F,4                                            03S0222 00214000
*                                   /* IN CASE OTHERS ALREADY IN R4F */ 00215000
*              R4F = R4F | R3F;     /* OR IN THAT HEX DIGIT          */ 00216000
         OR    R4F,R3F                                          03S0223 00217000
*            END;                                               03S0224 00218000
*          ELSE                     /* DIGIT NOT IN RANGE 0 THRU 9   */ 00219000
*            IF (APCQCMND(CMNDPSTR+PLENGTH+DIGTINDX-1:CMNDPSTR+PLENGTH  00220000
*                +DIGTINDX-1)>='C1'X & APCQCMND(CMNDPSTR+PLENGTH        00221000
*                +DIGTINDX-1:CMNDPSTR+PLENGTH+DIGTINDX-1)<='C6'X) THEN  00222000
         B     @RC00219                                         03S0225 00223000
@RF00219 LR    @15,CMNDPSTR                                     03S0225 00224000
         ALR   @15,PLENGTH                                      03S0225 00225000
         AH    @15,DIGTINDX                                     03S0225 00226000
         ST    @15,@TF00001                                     03S0225 00227000
         ALR   @15,APCQPTR                                      03S0225 00228000
         CLI   APCQCMND-2(@15),X'C1'                            03S0225 00229000
         BL    @RF00225                                         03S0225 00230000
         LR    @01,APCQPTR                                      03S0225 00231000
         AL    @01,@TF00001                                     03S0225 00232000
         CLI   APCQCMND-2(@01),X'C6'                            03S0225 00233000
         BH    @RF00225                                         03S0225 00234000
*              DO;                  /* DIGIT IS IN RANGE A THRU F    */ 00235000
*                R3F = (APCQCMND(CMNDPSTR+PLENGTH+DIGTINDX-1:CMNDPSTR   00236000
*                    +PLENGTH+DIGTINDX-1) & '0F'X) + 9;/*AND OUT ZONE*/ 00237000
         LA    R3F,15                                           03S0227 00238000
         L     @01,@TF00001                                     03S0227 00239000
         SLR   @00,@00                                          03S0227 00240000
         IC    @00,APCQCMND-2(@01,APCQPTR)                      03S0227 00241000
         NR    R3F,@00                                          03S0227 00242000
         AL    R3F,@CF00663                                     03S0227 00243000
*                                   /* BITS THEN ADD NINE FOR HEX #  */ 00244000
*                SLL(R4F,4);        /* MAKE ROOM FOR THIS 4BIT DIGIT */ 00245000
         SLL   R4F,4                                            03S0228 00246000
*                                   /* IN CASE OTHERS ALREADY IN R4F */ 00247000
*                R4F = R4F | R3F;   /* OR IN THAT HEX DIGIT          */ 00248000
         OR    R4F,R3F                                          03S0229 00249000
*              END;                                             03S0230 00250000
*            ELSE                   /* CHARACTER IS NOT A VALID HEX. */ 00251000
*              DO;                                              03S0231 00252000
         B     @RC00225                                         03S0231 00253000
@RF00225 DS    0H                                               03S0232 00254000
*                CMNDERR = TRUE;    /* INVALID DIGIT => INVALID CMND */ 00255000
         OI    CMNDERR,B'00010000'                              03S0232 00256000
*              END;                                             03S0233 00257000
*        END;                                                   03S0234 00258000
@RC00225 DS    0H                                               03S0234 00259000
@RC00219 DS    0H                                               03S0235 00260000
*    END;                                                       03S0235 00261000
@RC00211 LA    @15,1                                            03S0235 00262000
         AH    @15,DIGTINDX                                     03S0235 00263000
         STH   @15,DIGTINDX                                     03S0235 00264000
         C     @15,@CF00119                                     03S0235 00265000
         BNH   @DL00210                                         03S0235 00266000
@DC00210 DS    0H                                               03S0236 00267000
*          /* NOW INCREASE COUNT OF CHARACTERS PROCESSED             */ 00268000
*          /* WITHOUT ERROR, AND IF ALL SIX DIGITS APPEARD THEN      */ 00269000
*          /* LOOK FOR A DELIMITER BEHIND THEM.                      */ 00270000
*    IF CMNDERR=FALSE THEN          /* IF STILL IN BUSINESS THEN     */ 00271000
         TM    CMNDERR,B'00010000'                              03S0236 00272000
         BNZ   @RF00236                                         03S0236 00273000
*      DO;                          /* ADVANCE COUNT OF CHAR'S SEEN  */ 00274000
*        PLENGTH = PLENGTH + DIGITCNT;   /* ADD IN NO. OF DIGITS     */ 00275000
         AH    PLENGTH,DIGITCNT                                 03S0238 00276000
*        IF DLMFOUND=TRUE THEN      /* IF DELIMITER ALREADY FOUND    */ 00277000
         TM    DLMFOUND,B'00001000'                             03S0239 00278000
         BNO   @RF00239                                         03S0239 00279000
*          PLENGTH = PLENGTH + 1;   /* THEN ADD ONE MORE CHARACTER   */ 00280000
         AL    PLENGTH,@CF00079                                 03S0240 00281000
*        ELSE                       /* OTHERWISE ALL SIX CHARACTERS  */ 00282000
*                                   /* MUST HAVE BEEN DIGITS, SO LOOK*/ 00283000
*                                   /* FOR A DELIMITER IN NEXT POSIT.*/ 00284000
*          IF APCQCMND(CMNDPSTR+PLENGTH:CMNDPSTR+PLENGTH)       03S0241 00285000
*              =DELMTR(DLMINDEX) THEN     /* IF IT IS THERE, THEN    */ 00286000
         B     @RC00239                                         03S0241 00287000
@RF00239 LR    @15,CMNDPSTR                                     03S0241 00288000
         ALR   @15,PLENGTH                                      03S0241 00289000
         LH    @01,DLMINDEX                                     03S0241 00290000
         ALR   @15,APCQPTR                                      03S0241 00291000
         LA    @14,DELMTR-1(@01)                                03S0241 00292000
         CLC   APCQCMND-1(1,@15),0(@14)                         03S0241 00293000
         BNE   @RF00241                                         03S0241 00294000
*            DO;                                                03S0242 00295000
*              PLENGTH = PLENGTH + 1;   /* NOW ADD ONE MORE          */ 00296000
         AL    PLENGTH,@CF00079                                 03S0243 00297000
*              DLMFOUND = TRUE;         /* IS THIS STATEMENT NEEDED? */ 00298000
         OI    DLMFOUND,B'00001000'                             03S0244 00299000
*            END;                                               03S0245 00300000
*          ELSE                     /* DELIMITER IS NOT THERE: ERROR */ 00301000
*            CMNDERR = TRUE;        /* SET INDICATION OF ERROR       */ 00302000
         B     @RC00241                                         03S0246 00303000
@RF00241 OI    CMNDERR,B'00010000'                              03S0246 00304000
*      END;                                                     03S0247 00305000
*    ELSE;                          /* AN ERROR WAS ALREADY FOUND    */ 00306000
@RF00236 DS    0H                                               03S0249 00307000
*            /* IF STILL NO ERRORS EXIST, THEN SAVE THE ADDRESS      */ 00308000
*    IF CMNDERR=FALSE THEN                                      03S0249 00309000
@RC00236 TM    CMNDERR,B'00010000'                              03S0249 00310000
         BNZ   @RF00249                                         03S0249 00311000
*      DO;                                                      03S0250 00312000
*        TEMPADDR(DLMINDEX) = R4F;  /* SAVE VALID ADDRESS IN BINARY  */ 00313000
         LH    @15,DLMINDEX                                     03S0251 00314000
         SLA   @15,2                                            03S0251 00315000
         ST    R4F,TEMPADDR-4(@15)                              03S0251 00316000
*      END;                                                     03S0252 00317000
*    ELSE;                          /* ERROR ALREADY FOUND           */ 00318000
@RF00249 DS    0H                                               03S0254 00319000
*  END;                             /* END OF PROCESSING FOR 2 ADDR'S*/ 00320000
         LA    @15,1                                            03S0254 00321000
         AH    @15,DLMINDEX                                     03S0254 00322000
         STH   @15,DLMINDEX                                     03S0254 00323000
         C     @15,@CF00073                                     03S0254 00324000
         BNH   @DL00205                                         03S0254 00325000
*  RFY (R3F,R4F) UNRSTD;            /* GIVE BACK REGS 3 & 4          */ 00326000
*        /* IF VALID ADDRESSES OBTAINED, ENSURE CORRECT ORDERING     */ 00327000
*  IF CMNDERR=FALSE THEN                                        03S0256 00328000
         TM    CMNDERR,B'00010000'                              03S0256 00329000
         BNZ   @RF00256                                         03S0256 00330000
*    IF TEMPADDR(1)<TEMPADDR(2) THEN                            03S0257 00331000
         L     @04,TEMPADDR                                     03S0257 00332000
         L     @03,TEMPADDR+4                                   03S0257 00333000
         CR    @04,@03                                          03S0257 00334000
         BNL   @RF00257                                         03S0257 00335000
*      DO;                          /* ADDRESSES ALREADY IN ORDER    */ 00336000
*        BSLLIMIT = TEMPADDR(1);    /* LOWER BULK STG. ADDRESS       */ 00337000
         ST    @04,BSLLIMIT                                     03S0259 00338000
*        BSHLIMIT = TEMPADDR(2);    /* HIGHER BULK STG. ADDRESS      */ 00339000
         ST    @03,BSHLIMIT                                     03S0260 00340000
*      END;                                                     03S0261 00341000
*    ELSE                                                       03S0262 00342000
*      DO;                          /* ADDRESSES REVERSED            */ 00343000
         B     @RC00257                                         03S0262 00344000
@RF00257 DS    0H                                               03S0263 00345000
*        BSLLIMIT = TEMPADDR(2);    /* LOWER BULK STG. ADDRESS       */ 00346000
         L     @04,TEMPADDR+4                                   03S0263 00347000
         ST    @04,BSLLIMIT                                     03S0263 00348000
*        BSHLIMIT = TEMPADDR(1);    /* HIGHER BULK STG. ADDRESS      */ 00349000
         L     @04,TEMPADDR                                     03S0264 00350000
         ST    @04,BSHLIMIT                                     03S0264 00351000
*      END;                                                     03S0265 00352000
*  ELSE;                            /* NO NEED TO FOOL WITH ADDR'S   */ 00353000
@RF00256 DS    0H                                               03S0267 00354000
*                        END;                                   02S0267 00355000
*                      ELSE;        /* NO ADDRESS LIMITS PROVIDED    */ 00356000
@RF00200 DS    0H                                               02S0269 00357000
*                    END;                                       02S0269 00358000
*                  ELSE             /* NO MATCH FOUND AGAINST PARMS  */ 00359000
*                    DO;            /* COMMAND IS IN ERROR           */ 00360000
         B     @RC00196                                         02S0270 00361000
@RF00196 DS    0H                                               02S0271 00362000
*                      CMNDERR = TRUE;  /* SET ERROR INDICATOR       */ 00363000
         OI    CMNDERR,B'00010000'                              02S0271 00364000
*                    END;                                       02S0272 00365000
*              IF CMNDERR=FALSE THEN /* IF STILL IN BUSUNESS THEN    */ 00366000
@RC00196 DS    0H                                               02S0273 00367000
@RC00191 DS    0H                                               02S0273 00368000
@RC00186 TM    CMNDERR,B'00010000'                              02S0273 00369000
         BNZ   @RF00273                                         02S0273 00370000
*                DO;                /* RESET LOOP CONTROL VARIABLES  */ 00371000
*                  CMNDPSTR = CMNDPSTR + PLENGTH; /* ADVANCE POINTER */ 00372000
         ALR   CMNDPSTR,PLENGTH                                 02S0275 00373000
*                  PLENLEFT = PLENLEFT - PLENGTH; /* THAT MANY DONE  */ 00374000
         LH    @04,PLENLEFT                                     02S0276 00375000
         SLR   @04,PLENGTH                                      02S0276 00376000
         STH   @04,PLENLEFT                                     02S0276 00377000
*                  PLENGTH = ZERO;  /* RESET COUNTER OF LEN OF PARM  */ 00378000
         SLR   PLENGTH,PLENGTH                                  02S0277 00379000
*                END;                                           02S0278 00380000
*              ELSE;                /* OTHERWISE, ITS ALL OVER ANYWAY*/ 00381000
@RF00273 DS    0H                                               02S0280 00382000
*            END;                   /* END OF PARAMETER SCANNING     */ 00383000
@DE00185 LH    @04,PLENLEFT                                     02S0280 00384000
         LTR   @04,@04                                          02S0280 00385000
         BNP   @DC00185                                         02S0280 00386000
         TM    CMNDERR,B'00010000'                              02S0280 00387000
         BZ    @DL00185                                         02S0280 00388000
@DC00185 DS    0H                                               02S0281 00389000
*          END;                     /* END OF EXAMINATION OF COMMAND */ 00390000
*        IF CMNDERR=FALSE THEN      /* IF COMMAND HAS SURVIVED SCAN  */ 00391000
@RT00180 TM    CMNDERR,B'00010000'                              02S0282 00392000
         BNZ   @RF00282                                         02S0282 00393000
*          DO;                      /* SET CERTAIN INDICATORS        */ 00394000
*            IF DUMPCP=FALSE & DUMPBS=FALSE THEN/*IF NEITHR SPECIFIED*/ 00395000
         TM    DUMPCP,B'00000101'                               02S0284 00396000
         BNZ   @RF00284                                         02S0284 00397000
*              DO;                  /* THEN BOTH WILL BE DUMPED      */ 00398000
*                DUMPCP = TRUE;     /* SPECIFY DUMP OF CP STORAGE    */ 00399000
*                DUMPBS  = TRUE;    /* SPECIFY DUMP OF BULK STORAGE  */ 00400000
         OI    DUMPCP,B'00000101'                               02S0287 00401000
*              END;                                             02S0288 00402000
*            ELSE;                                              02S0289 00403000
@RF00284 DS    0H                                               02S0290 00404000
*            IF APCQIINF=APCQFDMP THEN/*IF FORCE DUMP ASKED INTERNALY*/ 00405000
         CLC   APCQIINF(4,APCQPTR),@CF00195                     02S0290 00406000
         BNE   @RF00290                                         02S0290 00407000
*              DO;                                              02S0291 00408000
*                DUMPFORC = TRUE;   /* THEN SET FORCE DUMP INDICATOR */ 00409000
         OI    DUMPFORC,B'10000000'                             02S0292 00410000
*              END;                                             02S0293 00411000
*            ELSE;                                              02S0294 00412000
@RF00290 DS    0H                                               02S0295 00413000
*          END;                     /* END OF INDICATOR SETTING      */ 00414000
*        ELSE;                                                  02S0296 00415000
@RF00282 DS    0H                                               02S0297 00416000
*      END;                         /* END PROCESS FOR >=3 PARM CHR  */ 00417000
*         END;                      /* END OF COMMAND PROCESSING.    */ 00418000
@RC00174 DS    0H                                               02S0299 00419000
*  APUBPTR = APCTAPUB;       /* POINT TO FIRST MASTER APUB   @ZA25361*/ 00420000
@RC00168 L     APUBPTR,APCTAPUB(,APCTPTR)                       01S0299 00421000
*  UCBPTR = APUBUCB;         /* POINT TO CORRESPONDING UCB   @ZA25361*/ 00422000
         L     UCBPTR,APUBUCB(,APUBPTR)                         01S0300 00423000
*    DO WHILE (APUBPTR^=ZERO &   /* SCAN MASTER APUB UCB'S   @ZA25361*/ 00424000
*      APCQCMND(APCQPSTR:APCQPSTR+1)^=UCBNAME(1:2));       /*@ZA25361*/ 00425000
         B     @DE00301                                         01S0301 00426000
@DL00301 DS    0H                                               01S0302 00427000
*    APUBPTR = APUBMSTR;    /* ADVANCE TO NEXT MASTER APUB   @ZA25361*/ 00428000
         L     APUBPTR,APUBMSTR(,APUBPTR)                       01S0302 00429000
*    UCBPTR = APUBUCB;     /* ADVANCE TO CORRESPONDING UCB   @ZA25361*/ 00430000
         L     UCBPTR,APUBUCB(,APUBPTR)                         01S0303 00431000
*  END;                                                    /*@ZA25361*/ 00432000
@DE00301 LTR   APUBPTR,APUBPTR                                  01S0304 00433000
         BZ    @DC00301                                         01S0304 00434000
         LH    @11,APCQPSTR(,APCQPTR)                           01S0304 00435000
         ALR   @11,APCQPTR                                      01S0304 00436000
         CLC   APCQCMND-1(2,@11),UCBNAME(UCBPTR)                01S0304 00437000
         BNE   @DL00301                                         01S0304 00438000
@DC00301 DS    0H                                               01S0305 00439000
*  OFFSET#1 = 14;                   /* SYBSYS POSITION FOR MESSAGES. */ 00440000
         MVC   OFFSET#1(4),@CF02376                             01S0305 00441000
*  APES(1:APESLN-LENGTH(APESSDWA)) = ''X; /* CLEAR OUT ALL OF APES   */ 00442000
         XC    APES(136),APES                                   02S0306 00443000
*  APESID = APESIDC;                /* INDICATE STAE EXIT CASE       */ 00444000
         MVC   APESID(4),@CC03028                               02S0307 00445000
*  APESADDR = ADDR(APES);           /* SET ADDR OF APES IN POSITION  */ 00446000
         LA    @11,APES                                         02S0308 00447000
         ST    @11,APESADDR                                     02S0308 00448000
*  APESAPMV = ADDR(STAEMSGS);       /* LOCATE THE ARRAY OF MESSAGES  */ 00449000
         LA    @11,STAEMSGS                                     02S0309 00450000
         ST    @11,APESAPMV                                     02S0309 00451000
*  APESFLG0 = '60'X;                /* SET BITS                      */ 00452000
         MVI   APESFLG0,X'60'                                   02S0310 00453000
*  APESCODE = CERRN99;              /* MESSAGE CODE                  */ 00454000
         MVI   APESCODE,X'01'                                   02S0311 00455000
*  APESMXCD = CERRN99;              /* MSG ARRAY ENTRY TO BE USED    */ 00456000
         MVI   APESMXCD,X'01'                                   02S0312 00457000
*  APESREGP = ADDR(APESREGZ);       /* SET IT UP                     */ 00458000
         LA    @11,APESREGZ                                     02S0313 00459000
         ST    @11,APESREGP                                     02S0313 00460000
*  APESMOD = 'IGTD80  ';            /* ROUTINE TO BE SERVICED        */ 00461000
         MVC   APESMOD(8),@CC03246                              02S0314 00462000
*  APESPROC = 'IGTD80  ';           /* PROCEDURE NAME OF SAME        */ 00463000
         MVC   APESPROC(8),@CC03246                             02S0315 00464000
*  RFY (R14P,R15P) RSTD;            /* SECURE PARAMETER REGISTERS    */ 00465000
*  R14P = ADDR(RETURN42);           /* POINT TO ADDR OF NORMAL RTRN  */ 00466000
         LA    R14P,RETURN42                                    02S0317 00467000
*  R15P = ADDR(STAERTRY);           /* POINT TO ADDR OF ENTRYPOINT   */ 00468000
         LA    R15P,STAERTRY                                    02S0318 00469000
*  STM(R0P,R15P,APESREGZ);          /* SAVE EVERY ONE OF THEM        */ 00470000
         STM   R0P,R15P,APESREGZ                                02S0319 00471000
*  RFY (R14P,R15P) UNRSTD;          /* GIVE BACK THE ALTERED REGS    */ 00472000
*  RFY (R3P,R4P) RSTD;              /* SECURE REGS FOR STAE MACRO    */ 00473000
*  R3P = APCTZUKA;                  /* EXIT ROUTINE IS IGTUKA        */ 00474000
         L     R3P,APCTZUKA(,APCTPTR)                           02S0322 00475000
*  R4P = ADDR(APESADDR);            /* PASS ON ADDR OF APES          */ 00476000
         LA    R4P,APESADDR                                     02S0323 00477000
*  GENERATE  CODE                   /* ESTABLISH ERROR RECOVERY MODE */ 00478000
*      REFS(D80STAEE,D80STAES,R3P,R4P)                          02S0324 00479000
*      SETS(D80STAEA)                                           02S0324 00480000
*      FLOWS(RETURN42);             /*                          02S0324 00481000
     MVC    D80STAEA(D80STAEE),D80STAES                                 00482000
     IGTYSTAE   (3),CT,PARAM=(4),PURGE=NONE,MF=(E,D80STAEA)             00483000
*  RFY (R3P,R4P) UNRSTD;            /* GIVE BACK THE TWO TURKEYS     */ 00484000
*  GEN(SPACE 1)                                                 02S0326 00485000
*     NOREFS NOSETS SEQFLOW FLOWS(STAERTRY); /* SHOW ESTAE FLOW      */ 00486000
         SPACE 1                                                        00487000
*  CALL APCVZDEQ;                   /* ENQUEUE ON THE APUB CHAIN     */ 00488000
         L     @15,APCTZDEQ(,APCTPTR)                           01S0327 00489000
         BALR  @14,@15                                          01S0327 00490000
*  ENQDAPUB = TRUE;                 /* NOW ENQUEUED ON APUB CHAIN    */ 00491000
         OI    ENQDAPUB,B'00000010'                             01S0328 00492000
*  IF APCTHALT=TRUE THEN                                        01S0329 00493000
         TM    APCTHALT(APCTPTR),B'00010000'                    01S0329 00494000
         BNO   @RF00329                                         01S0329 00495000
*    DO;                            /* NOTIFY OPER. VPSS IS HALTING  */ 00496000
*      CALL APCVZDWT(IGT210I,OFFSET#1,APCTSSID,LENGTH(APCTSSID));       00497000
         LA    @11,@CF02266                                     01S0331 00498000
         ST    @11,@AL00001                                     01S0331 00499000
         LA    @11,OFFSET#1                                     01S0331 00500000
         ST    @11,@AL00001+4                                   01S0331 00501000
         LA    @11,APCTSSID(,APCTPTR)                           01S0331 00502000
         ST    @11,@AL00001+8                                   01S0331 00503000
         LA    @11,@CF00106                                     01S0331 00504000
         ST    @11,@AL00001+12                                  01S0331 00505000
         MVI   @AL00001+12,X'80'                                01S0331 00506000
         L     @15,APCTZDWT(,APCTPTR)                           01S0331 00507000
         LA    @01,@AL00001                                     01S0331 00508000
         BALR  @14,@15                                          01S0331 00509000
*                                   /* WTO THE ERROR MESSAGE         */ 00510000
*    END;                                                       01S0332 00511000
*  ELSE                             /* NOT HALTING                   */ 00512000
*    DO;                            /* CODE FOR VPSS NOT HALTING     */ 00513000
         B     @RC00329                                         01S0333 00514000
@RF00329 DS    0H                                               01S0334 00515000
*                 /* EXAMINE DUMP COMMAND FOR CORRECT SYNTAX & LOGIC */ 00516000
*                      /* IF COMMAND IS IN ERROR, NOTIFY OPERATOR    */ 00517000
*      IF CMNDERR=TRUE THEN                                     01S0334 00518000
         TM    CMNDERR,B'00010000'                              01S0334 00519000
         BNO   @RF00334                                         01S0334 00520000
*        DO;                                                    01S0335 00521000
*          CMNDCODE = '20';         /* SET ERROR REASON CODE         */ 00522000
         MVC   CMNDCODE(2),@CC03255                             01S0336 00523000
*          OFFSET#2 = 41;           /* POINT TO COMMAND CODE POSITION*/ 00524000
         MVC   OFFSET#2(4),@CF02259                             01S0337 00525000
*          OFFSET#3 = 66;           /* POINT TO TEXT OF COMMAND POSIT*/ 00526000
         MVC   OFFSET#3(4),@CF02306                             01S0338 00527000
*          CALL APCVZDWT(IGT213I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),    00528000
*              OFFSET#2,CMNDCODE,LENGTH(CMNDCODE),              01S0339 00529000
*              OFFSET#3,APCQCMND,APCQTXLN);      /* WTO MESSAGE      */ 00530000
         LA    @11,@CF02289                                     01S0339 00531000
         ST    @11,@AL00001                                     01S0339 00532000
         LA    @11,OFFSET#1                                     01S0339 00533000
         ST    @11,@AL00001+4                                   01S0339 00534000
         LA    @11,APCTSSID(,APCTPTR)                           01S0339 00535000
         ST    @11,@AL00001+8                                   01S0339 00536000
         LA    @11,@CF00106                                     01S0339 00537000
         ST    @11,@AL00001+12                                  01S0339 00538000
         LA    @11,OFFSET#2                                     01S0339 00539000
         ST    @11,@AL00001+16                                  01S0339 00540000
         LA    @11,CMNDCODE                                     01S0339 00541000
         ST    @11,@AL00001+20                                  01S0339 00542000
         LA    @11,@CF00073                                     01S0339 00543000
         ST    @11,@AL00001+24                                  01S0339 00544000
         LA    @11,OFFSET#3                                     01S0339 00545000
         ST    @11,@AL00001+28                                  01S0339 00546000
         LA    @11,APCQCMND(,APCQPTR)                           01S0339 00547000
         ST    @11,@AL00001+32                                  01S0339 00548000
         LA    @11,APCQTXLN(,APCQPTR)                           01S0339 00549000
         ST    @11,@AL00001+36                                  01S0339 00550000
         MVI   @AL00001+36,X'80'                                01S0339 00551000
         L     @15,APCTZDWT(,APCTPTR)                           01S0339 00552000
         LA    @01,@AL00001                                     01S0339 00553000
         BALR  @14,@15                                          01S0339 00554000
*        END;                                                   01S0340 00555000
*      ELSE                         /* NO COMMAND ERROR DETECTED     */ 00556000
*        DO;                        /* CODE FOR CORRECT DUMP COMMAND */ 00557000
         B     @RC00334                                         01S0341 00558000
@RF00334 DS    0H                                               01S0342 00559000
*                      /* IF DUMP IS OPERATOR-FORCE, CONFIRM 'FORCE' */ 00560000
*          IF DUMPFORC=TRUE & APCQINT=FALSE THEN /* IF OPERATORFORCE */ 00561000
         TM    DUMPFORC,B'10000000'                             01S0342 00562000
         BNO   @RF00342                                         01S0342 00563000
         TM    APCQINT(APCQPTR),B'10000000'                     01S0342 00564000
         BNZ   @RF00342                                         01S0342 00565000
*            DO;                                                01S0343 00566000
*  IDIOTBIT = TRUE;                 /* LOOP UNTIL A LEGAL REPLY COMES*/ 00567000
         OI    IDIOTBIT,B'00000001'                             02S0344 00568000
*  DO WHILE(IDIOTBIT=TRUE);         /* SEEK A REPLY OF YES OR U OR NO*/ 00569000
         B     @DE00345                                         02S0345 00570000
@DL00345 DS    0H                                               02S0346 00571000
*    WTORECB = '00000000'X;         /* CLEAR OUT THE ECB FOR THE WTOR*/ 00572000
         MVC   WTORECB(4),@CB03256                              02S0346 00573000
*    GENERATE  CODE                                             02S0347 00574000
*        REFS(WTOR290A,WTOR290S,REPLY290,WTORECB,APCTSSID,APCTPTR)      00575000
*        SETS(WTOR290A,REPLY290,WTORECB); /*                    02S0347 00576000
*                                                               02S0347 00577000
*                                                               02S0347 00578000
       MVC   WTOR290A(WTOR290E),WTOR290S                                00579000
       MVC   WTOR290A+20(4),APCTSSID(APCTPTR)                           00580000
       WTOR  ,REPLY290,L'REPLY290,WTORECB,MF=(E,WTOR290A)               00581000
*      DO; /*IGTYWAIT ECB(WTORECB)LONG(YES)*/                   02S0348 00582000
*      RFY (GPR00F,GPR01P) RSTD; /* REGISTERS USED */           02S0349 00583000
*      DCL BIT0013X BIT(8) BASED(ADDR(WTORECB)); /* OVERLAY BYTE-0 OF E 00584000
*B */                                                           02S0350 00585000
*      IF BIT0013X(2) = '0'B THEN /* IF ECB NOT ALREADY POSTED */       00586000
         LA    @11,WTORECB                                      02S0351 00587000
         TM    BIT0013X(@11),B'01000000'                        02S0351 00588000
         BNZ   @RF00351                                         02S0351 00589000
*      DO; /* THEN ISSUE WAIT SVC */                            02S0352 00590000
*      GPR01P = ADDR(WTORECB); /* POINT TO ECB */               02S0353 00591000
         LR    GPR01P,@11                                       02S0353 00592000
*      GPR00F = 1|'80000000'X; /* WAIT COUNT */                 02S0354 00593000
         L     GPR00F,@CF03488                                  02S0354 00594000
*      SVC(1); /* WAIT FOR ECB POSTING */                       02S0355 00595000
         SVC   1                                                02S0355 00596000
*      END; /* ECB WAIT COMPLETE */                             02S0356 00597000
*      RFY (GPR00F,GPR01P) UNRSTD; /* FINISHED WITH REGISTERS */        00598000
@RF00351 DS    0H                                               02S0358 00599000
*      END; /* ECB WAIT COMPLETE *//* WAIT FOR WTOR TO COMPLETE */      00600000
*    IF REPLY290='YES' | REPLY290(1:1)='U' THEN /* IF GOOD REPLY     */ 00601000
         CLC   REPLY290(3),@CC03262                             02S0359 00602000
         BE    @RT00359                                         02S0359 00603000
         CLI   REPLY290,C'U'                                    02S0359 00604000
         BNE   @RF00359                                         02S0359 00605000
@RT00359 DS    0H                                               02S0360 00606000
*      DO;                                                      02S0360 00607000
*        IDIOTBIT = FALSE;          /* DUMPFORC SET - OPR NOT IDIOT  */ 00608000
         NI    IDIOTBIT,B'11111110'                             02S0361 00609000
*      END;                                                     02S0362 00610000
*    ELSE                                                       02S0363 00611000
*      IF REPLY290(1:2)='NO' THEN   /* IF OPR WISHES TO RESCIND FORCE*/ 00612000
         B     @RC00359                                         02S0363 00613000
@RF00359 CLC   REPLY290(2),@CC03264                             02S0363 00614000
         BNE   @RF00363                                         02S0363 00615000
*        DO;                                                    02S0364 00616000
*          DUMPFORC = FALSE;        /* RESET FORCE DUMP INDICATOR    */ 00617000
*          IDIOTBIT = FALSE;        /* OPERATOR NOT AN IDIOT HERE    */ 00618000
         NI    DUMPFORC,B'01111110'                             02S0366 00619000
*        END;                                                   02S0367 00620000
*      ELSE                         /* OTHERWISE, AN INVALID REPLY   */ 00621000
*        DO;                        /* SO HE GETS ANOTHER TRY        */ 00622000
         B     @RC00363                                         02S0368 00623000
@RF00363 DS    0H                                               02S0369 00624000
*          CALL APCVZDWT(IGT289I,OFFSET#1,APCTSSID,LENGTH(APCTSSID));   00625000
         LA    @11,@CF03084                                     02S0369 00626000
         ST    @11,@AL00001                                     02S0369 00627000
         LA    @11,OFFSET#1                                     02S0369 00628000
         ST    @11,@AL00001+4                                   02S0369 00629000
         LA    @11,APCTSSID(,APCTPTR)                           02S0369 00630000
         ST    @11,@AL00001+8                                   02S0369 00631000
         LA    @11,@CF00106                                     02S0369 00632000
         ST    @11,@AL00001+12                                  02S0369 00633000
         MVI   @AL00001+12,X'80'                                02S0369 00634000
         L     @15,APCTZDWT(,APCTPTR)                           02S0369 00635000
         LA    @01,@AL00001                                     02S0369 00636000
         BALR  @14,@15                                          02S0369 00637000
*        END;                                                   02S0370 00638000
*  END;                             /* END DOWHILE IDIOTBIT = TRUE   */ 00639000
@RC00363 DS    0H                                               02S0371 00640000
@RC00359 DS    0H                                               02S0371 00641000
@DE00345 TM    IDIOTBIT,B'00000001'                             02S0371 00642000
         BO    @DL00345                                         02S0371 00643000
*            END;                                               01S0372 00644000
*          ELSE;                    /* NOT OPERATOR-FORCE            */ 00645000
@RF00342 DS    0H                                               01S0374 00646000
*                   /* GIVE DUMP COMMAND ACKNOWLEDGEMENT TO OPERATOR */ 00647000
*               /* PREPARE DUMP ACKNOWLEDGEMENT MESSAGE TO OPERATOR  */ 00648000
*  IF APCQINT=TRUE THEN             /* IF COMMAND INTERNALLY GENERATD*/ 00649000
         TM    APCQINT(APCQPTR),B'10000000'                     02S0374 00650000
         BNO   @RF00374                                         02S0374 00651000
*    DO;                                                        02S0375 00652000
*      AMSGPAR1 = 'INTERNALLY';     /* SAY SO                        */ 00653000
         MVC   AMSGPAR1(10),@CC03265                            02S0376 00654000
*    END;                                                       02S0377 00655000
*  ELSE                             /* OTHERWISE, OPERATOR GENERATED */ 00656000
*    DO;                                                        02S0378 00657000
         B     @RC00374                                         02S0378 00658000
@RF00374 DS    0H                                               02S0379 00659000
*      AMSGPAR1 = ' OPERATOR ';     /* SO SAY SO                     */ 00660000
         MVC   AMSGPAR1(10),@CC03267                            02S0379 00661000
*    END;                                                       02S0380 00662000
*  IF DUMPFORC=TRUE THEN            /* IF STANDALONE DUMP REQUESTED  */ 00663000
@RC00374 TM    DUMPFORC,B'10000000'                             02S0381 00664000
         BNO   @RF00381                                         02S0381 00665000
*    DO;                                                        02S0382 00666000
*      AMSGPAR2 = ' FORCE ';        /* SAY SO                        */ 00667000
         MVC   AMSGPAR2(7),@CC03269                             02S0383 00668000
*    END;                                                       02S0384 00669000
*  ELSE                             /* OTHERWISE, DYNAMIC DUMP       */ 00670000
*    DO;                                                        02S0385 00671000
         B     @RC00381                                         02S0385 00672000
@RF00381 DS    0H                                               02S0386 00673000
*      AMSGPAR2 = 'DYNAMIC';        /* SO SAY SO                     */ 00674000
         MVC   AMSGPAR2(7),@CC03270                             02S0386 00675000
*    END;                                                       02S0387 00676000
*  OFFSET#2 = 23;                   /* POINT TO SECOND MSG PARAMETER */ 00677000
@RC00381 MVC   OFFSET#2(4),@CF02354                             02S0388 00678000
*  OFFSET#3 = 44;                   /* POINT TO THIRD MGG PARAMETER  */ 00679000
         MVC   OFFSET#3(4),@CF02266                             02S0389 00680000
*  OFFSET#4 = 84;                   /* POINT TO FOURTH MSG PARAMETER */ 00681000
         MVC   OFFSET#4(4),@CF00193                             02S0390 00682000
*  CALL APCVZDWT(IGT291I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),    02S0391 00683000
*      OFFSET#2,AMSGPAR1,LENGTH(AMSGPAR1),OFFSET#3,AMSGPAR2,    02S0391 00684000
*      LENGTH(AMSGPAR2),OFFSET#4,UNITADDR,LENGTH(UNITADDR));/*WTO MSG*/ 00685000
         LA    @11,@CF03076                                     02S0391 00686000
         ST    @11,@AL00001                                     02S0391 00687000
         LA    @11,OFFSET#1                                     02S0391 00688000
         ST    @11,@AL00001+4                                   02S0391 00689000
         LA    @11,APCTSSID(,APCTPTR)                           02S0391 00690000
         ST    @11,@AL00001+8                                   02S0391 00691000
         LA    @11,@CF00106                                     02S0391 00692000
         ST    @11,@AL00001+12                                  02S0391 00693000
         LA    @11,OFFSET#2                                     02S0391 00694000
         ST    @11,@AL00001+16                                  02S0391 00695000
         LA    @11,AMSGPAR1                                     02S0391 00696000
         ST    @11,@AL00001+20                                  02S0391 00697000
         LA    @11,@CF00130                                     02S0391 00698000
         ST    @11,@AL00001+24                                  02S0391 00699000
         LA    @11,OFFSET#3                                     02S0391 00700000
         ST    @11,@AL00001+28                                  02S0391 00701000
         LA    @11,AMSGPAR2                                     02S0391 00702000
         ST    @11,@AL00001+32                                  02S0391 00703000
         LA    @11,@CF00110                                     02S0391 00704000
         ST    @11,@AL00001+36                                  02S0391 00705000
         LA    @11,OFFSET#4                                     02S0391 00706000
         ST    @11,@AL00001+40                                  02S0391 00707000
         LA    @11,UNITADDR                                     02S0391 00708000
         ST    @11,@AL00001+44                                  02S0391 00709000
         LA    @11,@CF00117                                     02S0391 00710000
         ST    @11,@AL00001+48                                  02S0391 00711000
         MVI   @AL00001+48,X'80'                                02S0391 00712000
         L     @15,APCTZDWT(,APCTPTR)                           02S0391 00713000
         LA    @01,@AL00001                                     02S0391 00714000
         BALR  @14,@15                                          02S0391 00715000
*                      /* NOTIFY OPERATOR, IN EVENT 3838 UNLOADED    */ 00716000
*          IF APUBPTR=ZERO THEN     /* NEVER FOUND A UNIT NO. MATCH  */ 00717000
         LTR   APUBPTR,APUBPTR                                  01S0392 00718000
         BNZ   @RF00392                                         01S0392 00719000
*            DO;                    /* NOTIFY OPERATOR OF INVALID NO.*/ 00720000
*              OFFSET#2 = 41;       /* POINT TO COMMAND CODE POSITION*/ 00721000
         MVC   OFFSET#2(4),@CF02259                             01S0394 00722000
*              OFFSET#3 = 66;       /* POINT TO TEXT OF COMMAND POSIT*/ 00723000
         MVC   OFFSET#3(4),@CF02306                             01S0395 00724000
*              CMNDCODE = '04';     /* SAYS DEVICE DOES NOT EXIST    */ 00725000
         MVC   CMNDCODE(2),@CC03271                             01S0396 00726000
*              CALL APCVZDWT(IGT213I,OFFSET#1,APCTSSID,         01S0397 00727000
*                  LENGTH(APCTSSID),OFFSET#2,CMNDCODE,LENGTH(CMNDCODE), 00728000
*                  OFFSET#3,APCQCMND,APCQTXLN);       /* WTO MESSAGE */ 00729000
         LA    @11,@CF02289                                     01S0397 00730000
         ST    @11,@AL00001                                     01S0397 00731000
         LA    @11,OFFSET#1                                     01S0397 00732000
         ST    @11,@AL00001+4                                   01S0397 00733000
         LA    @11,APCTSSID(,APCTPTR)                           01S0397 00734000
         ST    @11,@AL00001+8                                   01S0397 00735000
         LA    @11,@CF00106                                     01S0397 00736000
         ST    @11,@AL00001+12                                  01S0397 00737000
         LA    @11,OFFSET#2                                     01S0397 00738000
         ST    @11,@AL00001+16                                  01S0397 00739000
         LA    @11,CMNDCODE                                     01S0397 00740000
         ST    @11,@AL00001+20                                  01S0397 00741000
         LA    @11,@CF00073                                     01S0397 00742000
         ST    @11,@AL00001+24                                  01S0397 00743000
         LA    @11,OFFSET#3                                     01S0397 00744000
         ST    @11,@AL00001+28                                  01S0397 00745000
         LA    @11,APCQCMND(,APCQPTR)                           01S0397 00746000
         ST    @11,@AL00001+32                                  01S0397 00747000
         LA    @11,APCQTXLN(,APCQPTR)                           01S0397 00748000
         ST    @11,@AL00001+36                                  01S0397 00749000
         MVI   @AL00001+36,X'80'                                01S0397 00750000
         L     @15,APCTZDWT(,APCTPTR)                           01S0397 00751000
         LA    @01,@AL00001                                     01S0397 00752000
         BALR  @14,@15                                          01S0397 00753000
*            END;                                               01S0398 00754000
*          ELSE                                                 01S0399 00755000
*            IF APUBIDWN =  TRUE     /* 3838 IS IN FACT UNLOADED     */ 00756000
*             | APUBRIPL = TRUE THEN /* A REIPL IS ABOUT TO HAPPEN.  */ 00757000
         B     @RC00392                                         01S0399 00758000
@RF00392 TM    APUBIDWN(APUBPTR),B'10000000'                    01S0399 00759000
         BO    @RT00399                                         01S0399 00760000
         TM    APUBRIPL(APUBPTR),B'10000000'                    01S0399 00761000
         BNO   @RF00399                                         01S0399 00762000
@RT00399 DS    0H                                               01S0400 00763000
*              DO;                  /* NO DUMP CAN BE PROVIDED       */ 00764000
*                OFFSET#2 = 69;     /* POINT TO COMMAND CODE POSITION*/ 00765000
         MVC   OFFSET#2(4),@CF02312                             01S0401 00766000
*                CMNDCODE = '04';   /* DENOTES 3838 WAS UNLOADED     */ 00767000
         MVC   CMNDCODE(2),@CC03271                             01S0402 00768000
*                CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,       01S0403 00769000
*                    LENGTH(APCTSSID),OFFSET#2,CMNDCODE,        01S0403 00770000
*                    LENGTH(CMNDCODE)); /* WTO THE ERROR MESSAGE     */ 00771000
         LA    @11,@CF00673                                     01S0403 00772000
         ST    @11,@AL00001                                     01S0403 00773000
         LA    @11,OFFSET#1                                     01S0403 00774000
         ST    @11,@AL00001+4                                   01S0403 00775000
         LA    @11,APCTSSID(,APCTPTR)                           01S0403 00776000
         ST    @11,@AL00001+8                                   01S0403 00777000
         LA    @11,@CF00106                                     01S0403 00778000
         ST    @11,@AL00001+12                                  01S0403 00779000
         LA    @11,OFFSET#2                                     01S0403 00780000
         ST    @11,@AL00001+16                                  01S0403 00781000
         LA    @11,CMNDCODE                                     01S0403 00782000
         ST    @11,@AL00001+20                                  01S0403 00783000
         LA    @11,@CF00073                                     01S0403 00784000
         ST    @11,@AL00001+24                                  01S0403 00785000
         MVI   @AL00001+24,X'80'                                01S0403 00786000
         L     @15,APCTZDWT(,APCTPTR)                           01S0403 00787000
         LA    @01,@AL00001                                     01S0403 00788000
         BALR  @14,@15                                          01S0403 00789000
*              END;                                             01S0404 00790000
*            ELSE                   /* 3838 IS NOT UNLOADED          */ 00791000
*             DO;                   /* CODE FOR 3838 NOT UNLOADED    */ 00792000
         B     @RC00399                                         01S0405 00793000
@RF00399 DS    0H                                               01S0406 00794000
*                       /* PREPARE TO OPEN DATASETS & OBTAIN DUMP    */ 00795000
*              OFFSET#2 = 69;       /* IN CASE OF ERROR, CMNDCODE LOC*/ 00796000
         MVC   OFFSET#2(4),@CF02312                             01S0406 00797000
*              IF DUMPFORC=TRUE THEN                     /* IF DUMP  */ 00798000
         TM    DUMPFORC,B'10000000'                             01S0407 00799000
         BNO   @RF00407                                         01S0407 00800000
*                DO;                /* IS FORCE, THEN LOAD STANDALONE*/ 00801000
*                                   /* PROGRAM & SET FOR LATER REIPL */ 00802000
*                  APUBRIPL = TRUE; /* RE-IPL REQUIRED               */ 00803000
         L     @11,APUBRIPL(,APUBPTR)                           02S0409 00804000
@GL00009 LR    @04,@11                                          02S0409 00805000
         O     @04,@CF03524                                     02S0409 00806000
         CS    @11,@04,APUBRIPL(APUBPTR)                        02S0409 00807000
         BNE   @GL00009                                         02S0409 00808000
*                  APUBIIPL = TRUE; /* RE-IPL PENDING                */ 00809000
         L     @11,APUBIIPL-1(,APUBPTR)                         02S0410 00810000
@GL00010 LR    @04,@11                                          02S0410 00811000
         O     @04,@CF03527                                     02S0410 00812000
         CS    @11,@04,APUBIIPL-1(APUBPTR)                      02S0410 00813000
         BNE   @GL00010                                         02S0410 00814000
*                  APUBIRIP = TRUE; /* BULK STORE TO BE INVALIDATED  */ 00815000
         L     @11,APUBIRIP-3(,APUBPTR)                         02S0411 00816000
@GL00011 LR    @04,@11                                          02S0411 00817000
         O     @04,@CF03530                                     02S0411 00818000
         CS    @11,@04,APUBIRIP-3(APUBPTR)                      02S0411 00819000
         BNE   @GL00011                                         02S0411 00820000
*                  REIPL = TRUE;    /* SET NON-APUB REIPL INDICATOR  */ 00821000
         OI    REIPL,B'00100000'                                02S0412 00822000
*                  SADPGMNM(1:4) = 'DUMP'; /* NAME OF STANDALONE PGM */ 00823000
         MVC   SADPGMNM(4),@CC03272                             02S0413 00824000
*                  SADPGMNM(5:6) = UNITADDR(1:2); /* DUMP PROGRAM    */ 00825000
         MVC   SADPGMNM+4(2),UNITADDR                           02S0414 00826000
*                  SADPGMNM(7:8) = APUBIPL; /* TO BE LOADED          */ 00827000
         MVC   SADPGMNM+6(2),APUBIPL(APUBPTR)                   02S0415 00828000
*                  RFY R15F RSTD;   /* SECURE RETURN CODE REGISTER   */ 00829000
*                  R15F = ZERO;     /* INITIALIZE TO ZERO            */ 00830000
         SLR   R15F,R15F                                        02S0417 00831000
*                  CALL APCVZDIO(SADPGMNM);/* CAUSE PGM TO BE LOADED */ 00832000
         LA    @14,SADPGMNM                                     02S0418 00833000
         ST    @14,@AL00001                                     02S0418 00834000
         MVI   @AL00001,X'80'                                   02S0418 00835000
         L     @15,APCTZDIO(,APCTPTR)                           02S0418 00836000
         LA    @01,@AL00001                                     02S0418 00837000
         BALR  @14,@15                                          02S0418 00838000
*                  IF R15F^=ZERO THEN /* IF AN ERROR OCCURRED THEN   */ 00839000
         LTR   R15F,R15F                                        02S0419 00840000
         BZ    @RF00419                                         02S0419 00841000
*                    DO;              /* NOTIFY OPERATOR OF ERROR    */ 00842000
*                  RFY R15F UNRSTD; /* GIVE BACK RETURN CODE REG     */ 00843000
*                      OFFSET#2 = 69; /* POINT TO CMND CODE POSITION */ 00844000
         MVC   OFFSET#2(4),@CF02312                             02S0422 00845000
*                      CMNDCODE = '08'; /* REASON CODE FOR ERROR     */ 00846000
         MVC   CMNDCODE(2),@CC03274                             02S0423 00847000
*                      CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID, 02S0424 00848000
*                          LENGTH(APCTSSID),OFFSET#2,CMNDCODE,  02S0424 00849000
*                          LENGTH(CMNDCODE));  /* WTO THE MESSAGE    */ 00850000
         LA    @11,@CF00673                                     02S0424 00851000
         ST    @11,@AL00001                                     02S0424 00852000
         LA    @11,OFFSET#1                                     02S0424 00853000
         ST    @11,@AL00001+4                                   02S0424 00854000
         LA    @11,APCTSSID(,APCTPTR)                           02S0424 00855000
         ST    @11,@AL00001+8                                   02S0424 00856000
         LA    @11,@CF00106                                     02S0424 00857000
         ST    @11,@AL00001+12                                  02S0424 00858000
         LA    @11,OFFSET#2                                     02S0424 00859000
         ST    @11,@AL00001+16                                  02S0424 00860000
         LA    @11,CMNDCODE                                     02S0424 00861000
         ST    @11,@AL00001+20                                  02S0424 00862000
         LA    @11,@CF00073                                     02S0424 00863000
         ST    @11,@AL00001+24                                  02S0424 00864000
         MVI   @AL00001+24,X'80'                                02S0424 00865000
         L     @15,APCTZDWT(,APCTPTR)                           02S0424 00866000
         LA    @01,@AL00001                                     02S0424 00867000
         BALR  @14,@15                                          02S0424 00868000
*                      DUMPISGO = FALSE; /* DUMP EXECUTION ENDING    */ 00869000
         NI    DUMPISGO,B'11101111'                             02S0425 00870000
*                    END;                                       02S0426 00871000
*                  ELSE;            /* NO ERROR DURING SAD PGM LOAD  */ 00872000
@RF00419 DS    0H                                               02S0428 00873000
*                END;               /* END OF FORCE DUMP PGM LOAD    */ 00874000
*              ELSE;                /* NOT A FORCE DUMP              */ 00875000
@RF00407 DS    0H                                               01S0430 00876000
*              A3838DCB = APUBDCB; /* PRESERVE DCB ADDR BEFORE DEQUE */ 00877000
         L     A3838DCB,APUBDCB(,APUBPTR)                       01S0430 00878000
*           /* ASCBPTR = APUBAPDS->APDSASCB    SAVE ASCBPTR BEFORE DQ*/ 00879000
*              IF DUMPISGO=TRUE THEN /* CONTINUE IF SAD PGM NOT LOST */ 00880000
         TM    DUMPISGO,B'00010000'                             01S0431 00881000
         BNO   @RF00431                                         01S0431 00882000
*               DO;                                             01S0432 00883000
*                  /* TRY AN OPEN OF INTERMEDIATE (DUMPTEMP) DATASET */ 00884000
*  GENERATE  CODE                   /* ATTEMPT AN OPEN               */ 00885000
*      REFS(DCBTEMPA,OPNTEMPS)                                  02S0433 00886000
*      SETS(DCBTEMPA,OPNTEMPA);     /*                          02S0433 00887000
     MVC   DCBTEMPA(DCBTEMPE),DCBTEMPS                                  00888000
     MVC   OPNTEMPA(OPNTEMPE),OPNTEMPS                                  00889000
     OPEN  (DCBTEMPA,(OUTPUT)),MF=(E,OPNTEMPA)                          00890000
*                DCBPTR = ADDR(DCBTEMPA); /* POINT TO DUMPTEMP DCB   */ 00891000
         LA    @11,DCBTEMPA                                     01S0434 00892000
         ST    @11,DCBPTR                                       01S0434 00893000
*                IF DCBOFOPN=FALSE THEN     /* OPEN FAILED           */ 00894000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0435 00895000
         BNZ   @RF00435                                         01S0435 00896000
*                  DO;                      /* NOTIFY OPERATOR       */ 00897000
*                    CMNDCODE = '12'; /* REASON CODE FOR ERROR       */ 00898000
         MVC   CMNDCODE(2),@CC03275                             01S0437 00899000
*                    CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,   01S0438 00900000
*                        LENGTH(APCTSSID),OFFSET#2,CMNDCODE,    01S0438 00901000
*                        LENGTH(CMNDCODE)); /* WTO THE ERROR MESSAGE */ 00902000
         LA    @11,@CF00673                                     01S0438 00903000
         ST    @11,@AL00001                                     01S0438 00904000
         LA    @11,OFFSET#1                                     01S0438 00905000
         ST    @11,@AL00001+4                                   01S0438 00906000
         LA    @11,APCTSSID(,APCTPTR)                           01S0438 00907000
         ST    @11,@AL00001+8                                   01S0438 00908000
         LA    @11,@CF00106                                     01S0438 00909000
         ST    @11,@AL00001+12                                  01S0438 00910000
         LA    @11,OFFSET#2                                     01S0438 00911000
         ST    @11,@AL00001+16                                  01S0438 00912000
         LA    @11,CMNDCODE                                     01S0438 00913000
         ST    @11,@AL00001+20                                  01S0438 00914000
         LA    @11,@CF00073                                     01S0438 00915000
         ST    @11,@AL00001+24                                  01S0438 00916000
         MVI   @AL00001+24,X'80'                                01S0438 00917000
         L     @15,APCTZDWT(,APCTPTR)                           01S0438 00918000
         LA    @01,@AL00001                                     01S0438 00919000
         BALR  @14,@15                                          01S0438 00920000
*                  END;                                         01S0439 00921000
*                ELSE               /* OPEN OF DUMPTEMP WAS SUCCESSF.*/ 00922000
*                  DO;              /* BEGIN DUMPTEMP PROCESSING     */ 00923000
         B     @RC00435                                         01S0440 00924000
@RF00435 DS    0H                                               01S0441 00925000
*                            /* PREPARE TO TRANSFER DUMP TO DUMPTEMP */ 00926000
*                    RFY R1P RSTD;  /* BUFFER ADDR TO BE RETURNED    */ 00927000
*                    GENERATE  CODE /* PUT AN LREC TO THE DUMPTEMP   */ 00928000
*                        REFS(DCBTEMPA)                         02S0442 00929000
*                        SETS(R1P,DCBTEMPA);  /*                02S0442 00930000
                       PUT  DCBTEMPA                                    00931000
*                    BUFFPTR = R1P; /* SECURE ADDRESS OF NEXT BUFFER */ 00932000
         LR    BUFFPTR,R1P                                      02S0443 00933000
*                    RFY R1P UNRSTD; /* RETURN REG1                  */ 00934000
*                    /* NOW ACTUALLY TRANSMIT THE DATA               */ 00935000
*                   /* INITIALIZE IOB AND ECB FOR READS OF 3838 DATA */ 00936000
*  DCBPTR = A3838DCB;               /* TAKE DCB ADDR PREVIOUSLY SAVED*/ 00937000
         ST    A3838DCB,DCBPTR                                  02S0445 00938000
*  IOBSTPTR = DCBIOBAD;             /* PICKUP ADDR OF IOB FROM DCB   */ 00939000
         L     @11,DCBPTR                                       02S0446 00940000
         L     @11,DCBIOBAD+16(,@11)                            02S0446 00941000
         ST    @11,IOBSTPTR                                     02S0446 00942000
*  IOBFLAG1 = '42'X;                /* CMND CHAINING & NOT RELTD REQ */ 00943000
         MVI   IOBFLAG1(@11),X'42'                              02S0447 00944000
*  IOBFLAG2 = '20'X;                /* TYPE 3 RELATED REQUEST        */ 00945000
         MVI   IOBFLAG2(@11),X'20'                              02S0448 00946000
*  IOBSENS0 = '00'X;                /* CLEAR 1ST SENSE BYTE          */ 00947000
         MVI   IOBSENS0(@11),X'00'                              02S0449 00948000
*  IOBSENS1 = '00'X;                /* CLEAR 2ND SENSE BYTE          */ 00949000
         MVI   IOBSENS1(@11),X'00'                              02S0450 00950000
*  IOBSTART = ADDR(CCWCHAIN);       /* POINT TO CCW CHAIN            */ 00951000
         LA    @15,CCWCHAIN                                     02S0451 00952000
         ST    @15,IOBSTART(,@11)                               02S0451 00953000
*  IOBINCAM = '00'X;                /* THIS IS NOT A TAPE DRIVE, FANS*/ 00954000
         SLR   @15,@15                                          02S0452 00955000
         STH   @15,IOBINCAM(,@11)                               02S0452 00956000
*  ECBPTR = IOBECBPT;               /* TAKE ECB ADDR FROM IOB        */ 00957000
         L     @11,IOBECBPT(,@11)                               02S0453 00958000
         ST    @11,ECBPTR                                       02S0453 00959000
*  ECBRB = ZERO;                    /* CLEAR ECB BEFORE USE          */ 00960000
         SLR   @15,@15                                          02S0454 00961000
         ST    @15,ECBRB(,@11)                                  02S0454 00962000
*                   /* SETUP 3838 PROCESS COMMAND FOR START OF DUMP  */ 00963000
*  IF APCQIINF=APCQUDMP THEN        /* IF A PORT DUMP IS INDICATED   */ 00964000
         CLC   APCQIINF(4,APCQPTR),@CF00182                     02S0455 00965000
         BNE   @RF00455                                         02S0455 00966000
*                                   /*(OPERATOR CANNOT GET PORT DUMP)*/ 00967000
*    PICMD = 2;                     /* SPECIFY PORT DUMP TO 3838     */ 00968000
         MVC   PICMD(2),@CH00073                                02S0456 00969000
*  ELSE                             /* OTHERWISE                     */ 00970000
*    PICMD = 1;                     /* SPECIFY A 3838 FULL DUMP      */ 00971000
         B     @RC00455                                         02S0457 00972000
@RF00455 MVC   PICMD(2),@CH00079                                02S0457 00973000
*  PIPRT = UNITADDR(2:3) & '000F'X; /* PROVIDE PORT NO. IN LOW BITS  */ 00974000
@RC00455 MVC   PIPRT(2),UNITADDR+1                              02S0458 00975000
         NC    PIPRT(2),@CB00393                                02S0458 00976000
*                                   /* OF HALFWORD                   */ 00977000
*                   /* INITIALIZE CCW CHAIN FOR FIRST READ OF DATA   */ 00978000
*  CMDCODE1 = '0F'X;                /* INDICATE A PROCESS COMMAND    */ 00979000
         MVI   CMDCODE1,X'0F'                                   02S0459 00980000
*  DATADDR1 = ADDR(CMND3838);       /* WRITE IS FROM PROCESS CMD ADDR*/ 00981000
         LA    @11,CMND3838                                     02S0460 00982000
         STCM  @11,7,DATADDR1                                   02S0460 00983000
*  CCWFLAG1 = '60'X;                /* CMND CHAINED & SUPR. LEN INDIC*/ 00984000
         MVI   CCWFLAG1,X'60'                                   02S0461 00985000
*  UNUSED1 = '00'X;                 /* CLEAR OUT UNUSED BYTE         */ 00986000
         MVI   UNUSED1,X'00'                                    02S0462 00987000
*  COUNT1 = 8;                      /* PASS 8 BYTES DURING WRITE     */ 00988000
         LA    @11,8                                            02S0463 00989000
         STH   @11,COUNT1                                       02S0463 00990000
*  CMDCODE2 = '02'X;                /* INDICATE READ FOR PROCESS CMD */ 00991000
         MVI   CMDCODE2,X'02'                                   02S0464 00992000
*  DATADDR2 = BUFFPTR;              /* READ INTO BUFFER USED FOR PUT */ 00993000
         STCM  BUFFPTR,7,DATADDR2                               02S0465 00994000
*  CCWFLAG2 = '60'X;                /* CMND CHAINED & SUPR. LEN INDIC*/ 00995000
         MVI   CCWFLAG2,X'60'                                   02S0466 00996000
*  UNUSED2 = '00'X;                 /* CLEAR OUT UNUSED BYTE         */ 00997000
         MVI   UNUSED2,X'00'                                    02S0467 00998000
*  COUNT2 = 16392;                  /* READ INTO FULL DUMP BUFFER    */ 00999000
         MVC   COUNT2(2),@CH03280                               02S0468 01000000
*  CMDCODE3 = '03'X;                /* A NOP FOR DEVICE END UCB RESET*/ 01001000
         MVI   CMDCODE3,X'03'                                   02S0469 01002000
*  DATADDR3 = ZERO;                 /* NO DATA TO BE TRANSFERRED     */ 01003000
         SLR   @15,@15                                          02S0470 01004000
         STCM  @15,7,DATADDR3                                   02S0470 01005000
*  CCWFLAG3 = '20'X;                /* NO CMND CHAINING, SUPR LEN IND*/ 01006000
         MVI   CCWFLAG3,X'20'                                   02S0471 01007000
*  UNUSED3 = '00'X;                 /* CLEAR OUT UNUSED BYTE         */ 01008000
         MVI   UNUSED3,X'00'                                    02S0472 01009000
*  COUNT3 = 8;                      /* AT LEAST EIGHT BYTES SHOWN    */ 01010000
         STH   @11,COUNT3                                       02S0473 01011000
*                   /* PASS 1ST PROCESS CMND & PERFORM 1ST DUMP READ */ 01012000
*  CALL EXCP3838;                   /* PERFORM FIRST EXCP            */ 01013000
         BAL   @14,EXCP3838                                     02S0474 01014000
*  QIES3838 = TRUE;                 /* STOP DUMP CMND WILL BE NEEDED */ 01015000
         OI    QIES3838,B'01000000'                             02S0475 01016000
*  IF ECBCC^='7F'X THEN             /* IF COMPL.CODE SHOWS ERROR     */ 01017000
         L     @11,ECBPTR                                       02S0476 01018000
         CLI   ECBCC(@11),X'7F'                                 02S0476 01019000
         BE    @RF00476                                         02S0476 01020000
*    DO;                            /* NOTIFY OPERATOR               */ 01021000
*      DUMPISGO = FALSE;            /* END OF SUCCESSFUL EXECUTION   */ 01022000
         NI    DUMPISGO,B'11101111'                             02S0478 01023000
*      CMNDCODE = '36';             /* REASON CODE FOR TERMINATION   */ 01024000
         MVC   CMNDCODE(2),@CC03283                             02S0479 01025000
*      CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),        01026000
*          OFFSET#2,CMNDCODE,LENGTH(CMNDCODE)); /* WTO ERROR MESSAGE */ 01027000
         LA    @11,@CF00673                                     02S0480 01028000
         ST    @11,@AL00001                                     02S0480 01029000
         LA    @11,OFFSET#1                                     02S0480 01030000
         ST    @11,@AL00001+4                                   02S0480 01031000
         LA    @11,APCTSSID(,APCTPTR)                           02S0480 01032000
         ST    @11,@AL00001+8                                   02S0480 01033000
         LA    @11,@CF00106                                     02S0480 01034000
         ST    @11,@AL00001+12                                  02S0480 01035000
         LA    @11,OFFSET#2                                     02S0480 01036000
         ST    @11,@AL00001+16                                  02S0480 01037000
         LA    @11,CMNDCODE                                     02S0480 01038000
         ST    @11,@AL00001+20                                  02S0480 01039000
         LA    @11,@CF00073                                     02S0480 01040000
         ST    @11,@AL00001+24                                  02S0480 01041000
         MVI   @AL00001+24,X'80'                                02S0480 01042000
         L     @15,APCTZDWT(,APCTPTR)                           02S0480 01043000
         LA    @01,@AL00001                                     02S0480 01044000
         BALR  @14,@15                                          02S0480 01045000
*    END;                                                       02S0481 01046000
*  ELSE                             /* NO ERROR DURING EXCP          */ 01047000
*    DO;                                                        02S0482 01048000
         B     @RC00476                                         02S0482 01049000
@RF00476 DS    0H                                               02S0483 01050000
*      ENDREADS = FALSE;            /* DENOTES READS ARE TO CEASE    */ 01051000
         NI    ENDREADS,B'11110111'                             02S0483 01052000
*      PICMD = 3;                   /* SET CMND FOR CONTINUE DUMP    */ 01053000
         MVC   PICMD(2),@CH00117                                02S0484 01054000
*      DO WHILE ENDREADS=FALSE;     /* READ UNTIL DONE READING       */ 01055000
         B     @DE00485                                         02S0485 01056000
@DL00485 DS    0H                                               02S0486 01057000
*        RFY DRHEADER BASED(BUFFPTR);/* PLACE HEADER ON REC JUST READ*/ 01058000
*        IF ENDOFSTG=TRUE THEN       /* IF END OF ASSOCIATED STORE   */ 01059000
         TM    ENDOFSTG(BUFFPTR),B'00000100'                    02S0487 01060000
         BNO   @RF00487                                         02S0487 01061000
*          DO;                                                  02S0488 01062000
*            ENDSTORE = TRUE;        /* SET END OF STORE INDICATOR   */ 01063000
         OI    ENDSTORE,B'00000100'                             02S0489 01064000
*          END;                                                 02S0490 01065000
*        ELSE                                                   02S0491 01066000
*          ENDSTORE = FALSE;        /* NOT END OF ASSOCIATED STORE   */ 01067000
         B     @RC00487                                         02S0491 01068000
@RF00487 NI    ENDSTORE,B'11111011'                             02S0491 01069000
*        IF CPGMSTG=TRUE THEN       /* IF RECORD JUST READ IS CPS    */ 01070000
@RC00487 TM    CPGMSTG(BUFFPTR),B'00000001'                     02S0492 01071000
         BNO   @RF00492                                         02S0492 01072000
*          DO;                      /* SET APPROPRIATE INDICATORS    */ 01073000
*            DUMPISCP = TRUE;       /* INDICATE WITHIN CP PHASE      */ 01074000
*            DUMPISBS = FALSE;      /* INDICATE NOT WITHIN BS PHASE  */ 01075000
         OI    DUMPISCP,B'00100000'                             02S0495 01076000
         NI    DUMPISBS,B'10111111'                             02S0495 01077000
*          END;                                                 02S0496 01078000
*        ELSE                       /* IT'S NOT CP DUMP COMING OVER  */ 01079000
*          IF BULKSTG=TRUE THEN     /* IF RECORD JUST READ IS BS     */ 01080000
         B     @RC00492                                         02S0497 01081000
@RF00492 TM    BULKSTG(BUFFPTR),B'00000010'                     02S0497 01082000
         BNO   @RF00497                                         02S0497 01083000
*            DO;                    /* SET APPROPRIATE INDICATORS    */ 01084000
*              DUMPISCP = FALSE;    /* INDICATE NOT WITHIN CP PHASE  */ 01085000
*              DUMPISBS = TRUE;     /* INDICATE WITHIN BS PHASE      */ 01086000
         OI    DUMPISBS,B'01000000'                             02S0500 01087000
         NI    DUMPISCP,B'11011111'                             02S0500 01088000
*            END;                                               02S0501 01089000
*          ELSE                     /* RECORD JUST READ IS UNKNOWN   */ 01090000
*            DO;                    /* SO SET APPROPRIATE INDICATORS */ 01091000
         B     @RC00497                                         02S0502 01092000
@RF00497 DS    0H                                               02S0503 01093000
*              DUMPISCP = FALSE;    /* INDICATE NOT WITHIN CP PHASE  */ 01094000
*              DUMPISBS = FALSE;    /* INDICATE NOT WITHIN BS PHASE  */ 01095000
         NI    DUMPISCP,B'10011111'                             02S0504 01096000
*              CMNDCODE = '48';     /* SIGNAL UNIDENTIFIED DUMP REC. */ 01097000
         MVC   CMNDCODE(2),@CC03285                             02S0505 01098000
*              CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,         02S0506 01099000
*                  LENGTH(APCTSSID),OFFSET#2,CMNDCODE,          02S0506 01100000
*                  LENGTH(CMNDCODE)); /* NOTIFY THE OPERATOR ####### */ 01101000
         LA    @11,@CF00673                                     02S0506 01102000
         ST    @11,@AL00001                                     02S0506 01103000
         LA    @11,OFFSET#1                                     02S0506 01104000
         ST    @11,@AL00001+4                                   02S0506 01105000
         LA    @11,APCTSSID(,APCTPTR)                           02S0506 01106000
         ST    @11,@AL00001+8                                   02S0506 01107000
         LA    @11,@CF00106                                     02S0506 01108000
         ST    @11,@AL00001+12                                  02S0506 01109000
         LA    @11,OFFSET#2                                     02S0506 01110000
         ST    @11,@AL00001+16                                  02S0506 01111000
         LA    @11,CMNDCODE                                     02S0506 01112000
         ST    @11,@AL00001+20                                  02S0506 01113000
         LA    @11,@CF00073                                     02S0506 01114000
         ST    @11,@AL00001+24                                  02S0506 01115000
         MVI   @AL00001+24,X'80'                                02S0506 01116000
         L     @15,APCTZDWT(,APCTPTR)                           02S0506 01117000
         LA    @01,@AL00001                                     02S0506 01118000
         BALR  @14,@15                                          02S0506 01119000
*            END;                                               02S0507 01120000
*              /* IF RECORD IS DESIRED THEN SAVE IT ON DUMPTEMP      */ 01121000
*        IF DUMPISCP=TRUE&DUMPCP=TRUE | DUMPISCP=FALSE&(DUMPBS =TRUE    01122000
*            & (DUMPBSAA=FALSE |                                02S0508 01123000
*            DUMPBSAA=TRUE&(^(DRBSA+DRLTH/4<BSLLIMIT|DRBSA>BSHLIMIT)))) 01124000
*            THEN                   /* (ADDR. ASSUMED TO BE FULLWORD)*/ 01125000
@RC00497 DS    0H                                               02S0508 01126000
@RC00492 TM    DUMPISCP,B'00100000'                             02S0508 01127000
         BNO   @GL00012                                         02S0508 01128000
         TM    DUMPCP,B'00000001'                               02S0508 01129000
         BO    @RT00508                                         02S0508 01130000
@GL00012 TM    DUMPISCP,B'00100000'                             02S0508 01131000
         BNZ   @RF00508                                         02S0508 01132000
         TM    DUMPBS,B'00000100'                               02S0508 01133000
         BNO   @RF00508                                         02S0508 01134000
         TM    DUMPBSAA,B'00000010'                             02S0508 01135000
         BZ    @RT00508                                         02S0508 01136000
         TM    DUMPBSAA,B'00000010'                             02S0508 01137000
         BNO   @RF00508                                         02S0508 01138000
         L     @11,DRBSA(,BUFFPTR)                              02S0508 01139000
         LH    @00,DRLTH(,BUFFPTR)                              02S0508 01140000
         SRDA  @00,32                                           02S0508 01141000
         D     @00,@CF00106                                     02S0508 01142000
         ALR   @01,@11                                          02S0508 01143000
         C     @01,BSLLIMIT                                     02S0508 01144000
         BL    @RF00508                                         02S0508 01145000
         C     @11,BSHLIMIT                                     02S0508 01146000
         BH    @RF00508                                         02S0508 01147000
@RT00508 DS    0H                                               02S0509 01148000
*                                   /* IF CP IS BEING DUMPED AND IS  */ 01149000
*                                   /* CALLED FOR, OR BS IS BEING    */ 01150000
*                                   /* DUMPED AND THE SECTION JUST   */ 01151000
*                                   /* READ IS CALLED FOR, THEN PUT  */ 01152000
*                                   /* THE RECORD OUT TO DUMPTEMP.   */ 01153000
*          DO;                                                  02S0509 01154000
*                    RFY R1P RSTD;  /* BUFFER ADDR TO BE RETURNED    */ 01155000
*                    GENERATE  CODE /* PUT AN LREC TO THE DUMPTEMP   */ 01156000
*                        REFS(DCBTEMPA)                         03S0511 01157000
*                        SETS(R1P,DCBTEMPA);  /*                03S0511 01158000
                       PUT  DCBTEMPA                                    01159000
*                    BUFFPTR = R1P; /* SECURE ADDRESS OF NEXT BUFFER */ 01160000
         LR    BUFFPTR,R1P                                      03S0512 01161000
*                    RFY R1P UNRSTD; /* RETURN REG1                  */ 01162000
*          END;                                                 02S0514 01163000
*        ELSE;                      /* OTHERWISE, BYPASS UNWANTED REC*/ 01164000
@RF00508 DS    0H                                               02S0516 01165000
*              /* DETERMINE  IF DUMPREADING IS TO CONTINUE           */ 01166000
*        IF ENDSTORE=TRUE THEN      /* IF END OF CP OR BS WAS FOUND  */ 01167000
         TM    ENDSTORE,B'00000100'                             02S0516 01168000
         BNO   @RF00516                                         02S0516 01169000
*          IF DUMPISCP=TRUE THEN     /* AND IT WAS CP THAT ENDED     */ 01170000
         TM    DUMPISCP,B'00100000'                             02S0517 01171000
         BNO   @RF00517                                         02S0517 01172000
*            IF DUMPBS =FALSE THEN     /* AND BS DUMP NOT REQUESTED  */ 01173000
         TM    DUMPBS,B'00000100'                               02S0518 01174000
         BNZ   @RF00518                                         02S0518 01175000
*              ENDREADS = TRUE;     /* THEN NO MORE DUMPING NEEDED   */ 01176000
         OI    ENDREADS,B'00001000'                             02S0519 01177000
*            ELSE                                               02S0520 01178000
*              DO;                  /* PROCEED TO DUMP BULK STORAGE  */ 01179000
         B     @RC00518                                         02S0520 01180000
@RF00518 DS    0H                                               02S0521 01181000
*                DUMPISCP = FALSE;     /* NO MORE CP DUMPING         */ 01182000
*                ENDSTORE = FALSE;     /* RESET END OF STG INDICATOR */ 01183000
         NI    DUMPISCP,B'11011011'                             02S0522 01184000
*              END;                                             02S0523 01185000
*          ELSE                                                 02S0524 01186000
*            ENDREADS = TRUE;       /* END OF BS DUMP ENCOUNTERED    */ 01187000
         B     @RC00517                                         02S0524 01188000
@RF00517 OI    ENDREADS,B'00001000'                             02S0524 01189000
*        ELSE;                      /* NOT END OF STORAGE            */ 01190000
@RF00516 DS    0H                                               02S0526 01191000
*          /* IF READING IS TO CONTINUE, THEN READ NEXT RECORD       */ 01192000
*        IF ENDREADS=FALSE THEN     /* IF NOT DONE, CONTINUE READS   */ 01193000
@RC00516 TM    ENDREADS,B'00001000'                             02S0526 01194000
         BNZ   @RF00526                                         02S0526 01195000
*          DO;                      /* 3838 CONTINUE CMND SET ABOVE  */ 01196000
*            DATADDR2 = BUFFPTR;    /* BUFFER ADDR ONLY CHANGE IN CCW*/ 01197000
         STCM  BUFFPTR,7,DATADDR2                               02S0528 01198000
*            CALL EXCP3838;         /* PERFORM NEXT EXCP             */ 01199000
         BAL   @14,EXCP3838                                     02S0529 01200000
*            IF ECBCC^='7F'X THEN     /* IF COMPL.CODE SHOWS ERROR   */ 01201000
         L     @11,ECBPTR                                       02S0530 01202000
         CLI   ECBCC(@11),X'7F'                                 02S0530 01203000
         BE    @RF00530                                         02S0530 01204000
*              DO;                    /* SET INDICATORS & NOTIFY OPER*/ 01205000
*                DUMPISGO = FALSE;     /* END OF SUCCESSFUL EXECUTION*/ 01206000
*                ENDREADS = TRUE;      /* NO MORE READING TO BE DONE */ 01207000
         OI    ENDREADS,B'00001000'                             02S0533 01208000
         NI    DUMPISGO,B'11101111'                             02S0533 01209000
*                CMNDCODE = '36';      /* REASON CODE FOR TERMINATION*/ 01210000
         MVC   CMNDCODE(2),@CC03283                             02S0534 01211000
*                CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,       02S0535 01212000
*                    LENGTH(APCTSSID),OFFSET#2,CMNDCODE,        02S0535 01213000
*                    LENGTH(CMNDCODE)); /* WTO THE MESSAGE           */ 01214000
         LA    @11,@CF00673                                     02S0535 01215000
         ST    @11,@AL00001                                     02S0535 01216000
         LA    @11,OFFSET#1                                     02S0535 01217000
         ST    @11,@AL00001+4                                   02S0535 01218000
         LA    @11,APCTSSID(,APCTPTR)                           02S0535 01219000
         ST    @11,@AL00001+8                                   02S0535 01220000
         LA    @11,@CF00106                                     02S0535 01221000
         ST    @11,@AL00001+12                                  02S0535 01222000
         LA    @11,OFFSET#2                                     02S0535 01223000
         ST    @11,@AL00001+16                                  02S0535 01224000
         LA    @11,CMNDCODE                                     02S0535 01225000
         ST    @11,@AL00001+20                                  02S0535 01226000
         LA    @11,@CF00073                                     02S0535 01227000
         ST    @11,@AL00001+24                                  02S0535 01228000
         MVI   @AL00001+24,X'80'                                02S0535 01229000
         L     @15,APCTZDWT(,APCTPTR)                           02S0535 01230000
         LA    @01,@AL00001                                     02S0535 01231000
         BALR  @14,@15                                          02S0535 01232000
*              END;                                             02S0536 01233000
*            ELSE                   /* NO ERROR DURING EXCP          */ 01234000
*              IF DUMPISCP=FALSE & DUMPBS=TRUE & DUMPBSAA=TRUE &        01235000
*                  DRBSA>BSHLIMIT THEN /* NO NEED FOR ADDITIONAL BS  */ 01236000
         B     @RC00530                                         02S0537 01237000
@RF00530 TM    DUMPISCP,B'00100000'                             02S0537 01238000
         BNZ   @RF00537                                         02S0537 01239000
         TM    DUMPBS,B'00000110'                               02S0537 01240000
         BNO   @RF00537                                         02S0537 01241000
         L     @11,DRBSA(,BUFFPTR)                              02S0537 01242000
         C     @11,BSHLIMIT                                     02S0537 01243000
         BNH   @RF00537                                         02S0537 01244000
*                                   /* TO BE DUMPED, STOP READING.   */ 01245000
*                ENDREADS = TRUE;     /* SET END OF READING INDICATOR*/ 01246000
         OI    ENDREADS,B'00001000'                             02S0538 01247000
*              ELSE;                                            02S0539 01248000
@RF00537 DS    0H                                               02S0540 01249000
*          END;                                                 02S0540 01250000
*        ELSE;                                                  02S0541 01251000
@RF00526 DS    0H                                               02S0542 01252000
*      END;                         /* END DOWHILE FOR GETS & PUTS   */ 01253000
@RC00526 DS    0H                                               02S0542 01254000
@DE00485 TM    ENDREADS,B'00001000'                             02S0542 01255000
         BZ    @DL00485                                         02S0542 01256000
*                  /* NOW PREPARE TO SEND STOP DUMP COMMAND          */ 01257000
*      IF REIPL=FALSE THEN          /* NO NEED TO SEND IF TO REIPL   */ 01258000
         TM    REIPL,B'00100000'                                02S0543 01259000
         BNZ   @RF00543                                         02S0543 01260000
*        DO;                                                    02S0544 01261000
*          PICMD = 4;               /* SET 3838 CMND TO STOP DUMP    */ 01262000
         MVC   PICMD(2),@CH00106                                02S0545 01263000
*          CCW2 = CCW3;             /* MOVE NOP UP TO 2ND CCW POSIT. */ 01264000
         MVC   CCW2(8),CCW3                                     02S0546 01265000
*          CALL EXCP3838;           /* PERFORM FINAL EXCP            */ 01266000
         BAL   @14,EXCP3838                                     02S0547 01267000
*          QIES3838 = FALSE;        /* THAT WAS THE STOP DUMP CMND   */ 01268000
         NI    QIES3838,B'10111111'                             02S0548 01269000
*        END;                                                   02S0549 01270000
*      ELSE;                        /* NO NEED OF STOP IF TO REIPL   */ 01271000
@RF00543 DS    0H                                               02S0551 01272000
*    END;                                                       02S0551 01273000
*          IF UNITADDR(3:3)^='0'      /* IF THIS WAS A PORT DUMP     */ 01274000
*             & RESETUJA = TRUE THEN  /* AND UJA IS NEEDED           */ 01275000
@RC00476 CLI   UNITADDR+2,C'0'                                  02S0552 01276000
         BE    @RF00552                                         02S0552 01277000
         TM    RESETUJA,B'00000010'                             02S0552 01278000
         BNO   @RF00552                                         02S0552 01279000
*            DO;                                                02S0553 01280000
*              RFY APUBPTR RSTD;                                02S0554 01281000
*              APUBPTR = APUBAPUB;  /* MOVE DOWN LIST OF APUB PTR'S  */ 01282000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       02S0555 01283000
*              RFY UCBOB BASED(APUBUCB);                        02S0556 01284000
*              DO WHILE(APUBPTR^=ZERO & UCBNAME(3:3)^=UNITADDR(3:3));   01285000
         B     @DE00557                                         02S0557 01286000
@DL00557 DS    0H                                               02S0558 01287000
*                APUBPTR = APUBAPUB;/* MOVE TO NEXT APUB UNTIL MATCH */ 01288000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       02S0558 01289000
*              END;                 /* SO WE HAVE APUBPTR OF DUMPPORT*/ 01290000
@DE00557 LTR   APUBPTR,APUBPTR                                  02S0559 01291000
         BZ    @DC00557                                         02S0559 01292000
         L     @11,APUBUCB(,APUBPTR)                            02S0559 01293000
         CLC   UCBNAME+2(1,@11),UNITADDR+2                      02S0559 01294000
         BNE   @DL00557                                         02S0559 01295000
@DC00557 DS    0H                                               02S0560 01296000
*              RFY R1P RSTD;        /* SECURE REG 1                  */ 01297000
*              R1P = 1;             /* SET RECOVERY INDICATOR        */ 01298000
         LA    R1P,1                                            02S0561 01299000
*              CALL APCVZUJA;       /* CALL THE BITSETTER ROUTINE    */ 01300000
         L     @15,APCTZUJA(,APCTPTR)                           02S0562 01301000
         BALR  @14,@15                                          02S0562 01302000
*              RESETUJA = FALSE;    /* INDICATE UJA HAS BEEN CALLED. */ 01303000
         NI    RESETUJA,B'11111101'                             02S0563 01304000
*              RFY R1P UNRSTD;      /* RELEASE REG 1                 */ 01305000
*              RFY UCBOB BASED(UCBPTR);                         02S0565 01306000
*            END;                                               02S0566 01307000
*          ELSE;                                                02S0567 01308000
@RF00552 DS    0H                                               02S0568 01309000
*                   CALL APCVZDDQ;  /* DEQUEUE FROM THE APUBS        */ 01310000
         L     @15,APCTZDDQ(,APCTPTR)                           01S0568 01311000
         BALR  @14,@15                                          01S0568 01312000
*                   ENQDAPUB = FALSE; /* INDICATE THAT APUBS ARE DEQ */ 01313000
         NI    ENQDAPUB,B'11111101'                             01S0569 01314000
*                   IF DUMPISGO=TRUE THEN /* IF GRABDUMP SURVIVED    */ 01315000
         TM    DUMPISGO,B'00010000'                             01S0570 01316000
         BNO   @RF00570                                         01S0570 01317000
*                    DO;                                        01S0571 01318000
*                     /* NOW CLOSE DUMPTEMP FOR OUTPUT               */ 01319000
*                    ABNDCLST = TRUE; /* LEFT ON IF CLOSE ABENDS     */ 01320000
         OI    ABNDCLST,B'10000000'                             02S0572 01321000
*                    GENERATE  CODE /* ATTEMPT A CLOSE               */ 01322000
*                        REFS(DCBTEMPA,CLSTEMPS)                02S0573 01323000
*                        SETS(DCBTEMPA,CLSTEMPA);  /*           02S0573 01324000
                       MVC    CLSTEMPA(CLSTEMPE),CLSTEMPS               01325000
                       CLOSE  (DCBTEMPA),MF=(E,CLSTEMPA)                01326000
*                    ABNDCLST = FALSE; /* RESET IF NO CLOSE ABEND    */ 01327000
         NI    ABNDCLST,B'01111111'                             02S0574 01328000
*                     DCBPTR = ADDR(DCBTEMPA);                  01S0575 01329000
         LA    @11,DCBTEMPA                                     01S0575 01330000
         ST    @11,DCBPTR                                       01S0575 01331000
*                     IF DCBOFOPN=TRUE THEN  /* CLOSE FAILED         */ 01332000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0576 01333000
         BNO   @RF00576                                         01S0576 01334000
*                      DO;          /* NOTIFY OPERATOR               */ 01335000
*                        CMNDCODE = '16'; /* REASON CODE FOR ERROR   */ 01336000
         MVC   CMNDCODE(2),@CC03288                             01S0578 01337000
*                        CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,       01338000
*                            LENGTH(APCTSSID),OFFSET#2,CMNDCODE,        01339000
*                            LENGTH(CMNDCODE)); /* WTO THE MESSAGE   */ 01340000
         LA    @11,@CF00673                                     01S0579 01341000
         ST    @11,@AL00001                                     01S0579 01342000
         LA    @11,OFFSET#1                                     01S0579 01343000
         ST    @11,@AL00001+4                                   01S0579 01344000
         LA    @11,APCTSSID(,APCTPTR)                           01S0579 01345000
         ST    @11,@AL00001+8                                   01S0579 01346000
         LA    @11,@CF00106                                     01S0579 01347000
         ST    @11,@AL00001+12                                  01S0579 01348000
         LA    @11,OFFSET#2                                     01S0579 01349000
         ST    @11,@AL00001+16                                  01S0579 01350000
         LA    @11,CMNDCODE                                     01S0579 01351000
         ST    @11,@AL00001+20                                  01S0579 01352000
         LA    @11,@CF00073                                     01S0579 01353000
         ST    @11,@AL00001+24                                  01S0579 01354000
         MVI   @AL00001+24,X'80'                                01S0579 01355000
         L     @15,APCTZDWT(,APCTPTR)                           01S0579 01356000
         LA    @01,@AL00001                                     01S0579 01357000
         BALR  @14,@15                                          01S0579 01358000
*                      END;                                     01S0580 01359000
*                     ELSE          /* CLOSE WAS SUCCESSFUL          */ 01360000
*                      DO;          /* BEGIN DUMP3838 PROCESSING     */ 01361000
         B     @RC00576                                         01S0581 01362000
@RF00576 DS    0H                                               01S0582 01363000
*                        /* OPEN DUMP3838 DATASET FOR OUTPUT OF DUMP */ 01364000
*                          /* FOR MVS, FIRST DYNAM ALLOCATE DUMP3838 */ 01365000
*                   /* ATTEMPT DYNAMIC ALLOCATION OF SYSOUT          */ 01366000
*  RFY S99RBPTR BASED(ADDR(RQBLKPTR));/* SET PTR ON FRONT OF WORKAREA*/ 01367000
*  RFY S99RB BASED(ADDR(RQBLK));    /* SET S99RB RIGHT BEHIND IT     */ 01368000
*  S99RBPTR = ADDR(S99RB);          /* INIT. PTR. TO REQUEST BLOCK   */ 01369000
         LA    @11,RQBLKPTR                                     02S0584 01370000
         LA    @04,RQBLK                                        02S0584 01371000
         ST    @04,S99RBPTR(,@11)                               02S0584 01372000
*  S99RBPND = TRUE;                 /* SET HI-ORDER BIT ON RB PTR    */ 01373000
         OI    S99RBPND(@11),B'10000000'                        02S0585 01374000
*  RFY S99TUPL BASED(ADDR(TUPTRS)); /* TEXT UNIT PTRS. BEHIND RQBLK  */ 01375000
*                         /* INITIALIZE THE REQUEST BLOCK ITSELF     */ 01376000
*  S99RBLN = 20;                    /* RB LENGTH IS CONSTANT 20 BYTES*/ 01377000
         MVI   S99RBLN(@04),X'14'                               02S0587 01378000
*  S99VERB = S99VRBAL;              /* VERB CODE IS FOR DSNAME ALLOC.*/ 01379000
         MVI   S99VERB(@04),X'01'                               02S0588 01380000
*  S99FLAG1 = RQBFLAG1;             /* FLAGS1 SETUP GIVEN IN RQBFLAG1*/ 01381000
         MVC   S99FLAG1(2,@04),RQBFLAG1                         02S0589 01382000
*  S99ERROR = ZERO;                 /* ERROR REASON INITIALLY ZERO   */ 01383000
         SLR   @11,@11                                          02S0590 01384000
         STH   @11,S99ERROR(,@04)                               02S0590 01385000
*  S99INFO = ZERO;                  /* INFO. REASON INITIALLY ZERO   */ 01386000
         STH   @11,S99INFO(,@04)                                02S0591 01387000
*  S99TXTPP = ADDR(TUPTRS);         /* SECURE ADDR. OF TEXT POINTERS */ 01388000
         LA    @15,TUPTRS                                       02S0592 01389000
         ST    @15,S99TXTPP(,@04)                               02S0592 01390000
*  S99RSV01 = ZERO;                 /* FULLWORD OF ZEROS IN RSVRDWD. */ 01391000
         ST    @11,S99RSV01(,@04)                               02S0593 01392000
*  S99FLAG2 = RQBFLAG2;             /* FLAGS2 SETUP GIVEN IN RQBFLAG1*/ 01393000
         MVC   S99FLAG2(4,@04),RQBFLAG2                         02S0594 01394000
*                                   /*                               */ 01395000
*                                   /* NOW BUILD PTRS & TEXT UNITS   */ 01396000
*                             /* 1ST TEXT UNIT IS FOR DDNAME         */ 01397000
*  S99TUPTR(1) = ADDR(TXTUNITS);    /* SET 1ST PTR IN T.U. PTR LIST  */ 01398000
         LA    @04,TXTUNITS                                     02S0595 01399000
         ST    @04,S99TUPTR(,@15)                               02S0595 01400000
*  S99TUPLN(1) = BITZERO;           /* THIS PTR NOT LAST IN PTR LIST */ 01401000
         NI    S99TUPLN(@15),B'01111111'                        02S0596 01402000
*  RFY S99TUNIT BASED(S99TUPTR(1)); /* USE 1ST PTR IN T.U. PTR LIST  */ 01403000
*  S99TUKEY = DALDDNAM;             /* KEY FOR DDNAME PARAMETER      */ 01404000
         L     @04,S99TUPTR(,@15)                               02S0598 01405000
         MVC   S99TUKEY(2,@04),@CB00365                         02S0598 01406000
*  S99TUNUM = 1;                    /* ONE PARM FOR THIS TEXT UNIT   */ 01407000
         LA    @14,1                                            02S0599 01408000
         STCM  @14,3,S99TUNUM(@04)                              02S0599 01409000
*  S99TULNG = LENGTH(D38DDNAM);     /* LENGTH OF DDNAME              */ 01410000
         MVC   S99TULNG(2,@04),@CH00104                         02S0600 01411000
*  S99TUPAR(1:LENGTH(D38DDNAM)) = D38DDNAM; /* MOVE IN DDNAME ITSELF */ 01412000
         MVC   S99TUPAR(8,@04),@CC00224                         02S0601 01413000
*                             /* 2ND TEXT UNIT IS FOR SYSOUT IDENT.  */ 01414000
*  S99TUPTR(2) = S99TUPTR(1) + LENGTH(S99TUKEY) + LENGTH(S99TUNUM)      01415000
*      + LENGTH(S99TULNG) + LENGTH(D38DDNAM); /* 2ND BLK FOLLOWS 1ST */ 01416000
         AL    @04,@CF02376                                     02S0602 01417000
         ST    @04,S99TUPTR+4(,@15)                             02S0602 01418000
*  S99TUPLN(2) = BITZERO;           /* THIS PTR NOT LAST IN PTR LIST */ 01419000
         NI    S99TUPLN+4(@15),B'01111111'                      02S0603 01420000
*  RFY S99TUNIT BASED(S99TUPTR(2)); /* USE 2ND PTR IN T.U. PTR LIST  */ 01421000
*  S99TUKEY = DALSYSOU;             /* KEY FOR A SYSOUT DATASET      */ 01422000
         L     @04,S99TUPTR+4(,@15)                             02S0605 01423000
         MVC   S99TUKEY(2,@04),@CB00411                         02S0605 01424000
*  S99TUNUM = 1;                    /* ONE PARM FOR SYSOUT CLASS     */ 01425000
         STCM  @14,3,S99TUNUM(@04)                              02S0606 01426000
*  S99TULNG = 1;                    /* SYSOUT CLASS IS ONE BYTE LONG.*/ 01427000
         STCM  @14,3,S99TULNG(@04)                              02S0607 01428000
*  S99TUPAR(1) = APCTSOUT;          /* GET SYSOUT CLASS FROM APCT.   */ 01429000
         MVC   S99TUPAR(1,@04),APCTSOUT(APCTPTR)                02S0608 01430000
*                             /* 3RD TEXT UNIT IS FOR FREE AT CLOSE  */ 01431000
*  S99TUPTR(3) = S99TUPTR(2) + LENGTH(S99TUKEY) + LENGTH(S99TUNUM)      01432000
*                + LENGTH(S99TULEN) + 1;                        02S0609 01433000
         AL    @04,@CF00110                                     02S0609 01434000
         ST    @04,S99TUPTR+8(,@15)                             02S0609 01435000
*                                   /* 3RD BLOCK FOLLOWS 2ND         */ 01436000
*  S99TUPLN(3) = BITZERO;           /* THIS PTR NOT LAST IN PTR LIST */ 01437000
         NI    S99TUPLN+8(@15),B'01111111'                      02S0610 01438000
*  RFY S99TUNIT BASED(S99TUPTR(3)); /* USE 3RD PTR IN T.U. PTR LIST  */ 01439000
*  S99TUKEY = DALCLOSE;             /* KEY FOR UNALLOCATE AT CLOSE   */ 01440000
         L     @04,S99TUPTR+8(,@15)                             02S0612 01441000
         MVC   S99TUKEY(2,@04),@CB00419                         02S0612 01442000
*  S99TUNUM = ZERO;                 /* NO PARMS FOR FREE AT CLOSE    */ 01443000
         STCM  @11,3,S99TUNUM(@04)                              02S0613 01444000
*                             /* 4TH TEXT UNIT IS FOR DCB BLKSIZE    */ 01445000
*  S99TUPTR(4) = S99TUPTR(3) + LENGTH(S99TUKEY) + LENGTH(S99TUNUM);     01446000
         AL    @04,@CF00106                                     02S0614 01447000
         ST    @04,S99TUPTR+12(,@15)                            02S0614 01448000
*                                   /* 4TH BLOCK FOLLOWS 3RD         */ 01449000
*  S99TUPLN(4) = BITZERO;           /* THIS PTR NOT LAST IN PTR LIST */ 01450000
         NI    S99TUPLN+12(@15),B'01111111'                     02S0615 01451000
*  RFY S99TUNIT BASED(S99TUPTR(4)); /* USE 4TH PTR IN T.U. PTR LIST  */ 01452000
*  S99TUKEY = DALBLKSZ;             /* KEY FOR DCB BLKSIZE PARAMETER */ 01453000
         L     @11,S99TUPTR+12(,@15)                            02S0617 01454000
         MVC   S99TUKEY(2,@11),@CB00459                         02S0617 01455000
*  S99TUNUM = 1;                    /* ONE PARM FOR THIS TEXT UNIT   */ 01456000
         STCM  @14,3,S99TUNUM(@11)                              02S0618 01457000
*  S99TULNG = 2;                    /* TWO BYTES PROVIDED FOR BLKSIZE*/ 01458000
         LA    @04,2                                            02S0619 01459000
         STCM  @04,3,S99TULNG(@11)                              02S0619 01460000
*  S99TUPAR(1:S99TULNG) = '0974'X;  /* BLKSIZE SET TO 2420 BYTES     */ 01461000
         LR    @03,@04                                          02S0620 01462000
         BCTR  @03,0                                            02S0620 01463000
         EX    @03,@SM03539                                     02S0620 01464000
*                             /* 5TH TEXT UNIT IS FOR DCB LRECL      */ 01465000
*  S99TUPTR(5) = S99TUPTR(4) + LENGTH(S99TUKEY) + LENGTH(S99TUNUM)      01466000
*      + LENGTH(S99TULNG) + S99TULNG; /* 5TH BLOCK FOLLOWS 4TH       */ 01467000
         LA    @03,6                                            02S0621 01468000
         ALR   @11,@03                                          02S0621 01469000
         ALR   @11,@04                                          02S0621 01470000
         ST    @11,S99TUPTR+16(,@15)                            02S0621 01471000
*  S99TUPLN(5) = BITZERO;           /* THIS PTR NOT LAST IN PTR LIST */ 01472000
         NI    S99TUPLN+16(@15),B'01111111'                     02S0622 01473000
*  RFY S99TUNIT BASED(S99TUPTR(5)); /* USE 5TH PTR IN T.U. PTR LIST  */ 01474000
*  S99TUKEY = DALLRECL;             /* KEY FOR DCB LRECL PARAMETER   */ 01475000
         L     @11,S99TUPTR+16(,@15)                            02S0624 01476000
         MVC   S99TUKEY(2,@11),@CB00495                         02S0624 01477000
*  S99TUNUM = 1;                    /* ONE PARM FOR THIS TEXT UNIT   */ 01478000
         STCM  @14,3,S99TUNUM(@11)                              02S0625 01479000
*  S99TULNG = 2;                    /* TWO BYTES PROVIDED FOR LRECL  */ 01480000
         STCM  @04,3,S99TULNG(@11)                              02S0626 01481000
*  S99TUPAR(1:S99TULNG) = '0079'X;  /* LRECL SET TO 121 BYTES        */ 01482000
         LR    @02,@04                                          02S0627 01483000
         BCTR  @02,0                                            02S0627 01484000
         EX    @02,@SM03541                                     02S0627 01485000
*                             /* 6TH TEXT UNIT IS FOR DCB RECFM      */ 01486000
*  S99TUPTR(6) = S99TUPTR(5) + LENGTH(S99TUKEY) + LENGTH(S99TUNUM)      01487000
*      + LENGTH(S99TULNG) + S99TULNG; /* 6TH BLOCK FOLLOWS 5TH       */ 01488000
         ALR   @11,@03                                          02S0628 01489000
         ALR   @11,@04                                          02S0628 01490000
         ST    @11,S99TUPTR+20(,@15)                            02S0628 01491000
*  S99TUPLN(5) = BITONE;            /* THIS PTR IS LAST IN PTR LIST  */ 01492000
         OI    S99TUPLN+16(@15),B'10000000'                     02S0629 01493000
*  RFY S99TUNIT BASED(S99TUPTR(6)); /* USE 6TH PTR IN T.U. PTR LIST  */ 01494000
*  S99TUKEY = DALRECFM;             /* KEY FOR DCB RECFM PARAMETER   */ 01495000
         L     @11,S99TUPTR+20(,@15)                            02S0631 01496000
         MVC   S99TUKEY(2,@11),@CB00509                         02S0631 01497000
*  S99TUNUM = 1;                    /* ONE PARM FOR THIS TEXT UNIT   */ 01498000
         STCM  @14,3,S99TUNUM(@11)                              02S0632 01499000
*  S99TULNG = 1;                    /* ONE BYTE PROVIDED FOR RECFM   */ 01500000
         STCM  @14,3,S99TULNG(@11)                              02S0633 01501000
*  S99TUPAR(1:1) = '94'X;           /* RECFM SET TO FIXED-BLK (FBA)  */ 01502000
         MVI   S99TUPAR(@11),X'94'                              02S0634 01503000
*                        /* NOW ISSUE DYNALLOC FOR DUMP3838 DATASET  */ 01504000
*  RFY (R1P,R15F) RSTD;             /* PTR IN REG 1 , RCDE IN REG 15 */ 01505000
*  R1P = ADDR(S99RBPTR);            /* SET REG1 (=ADDR(RQBLKPTR))    */ 01506000
         LA    R1P,RQBLKPTR                                     02S0636 01507000
*  GENERATE(DYNALLOC)               /* INVOKE THE DYNALLOC           */ 01508000
*      REFS(R1P)                                                02S0637 01509000
*      SETS(R15F);                                              02S0637 01510000
         DYNALLOC                                                       01511000
*  IF R15F^=ZERO THEN               /* IF DYNALLOC WAS UNSUCCESSFUL  */ 01512000
         LTR   R15F,R15F                                        02S0638 01513000
         BZ    @RF00638                                         02S0638 01514000
*    DO;                            /* THEN STOP THE MUSIC           */ 01515000
*  GENERATE  CODE                   /* ATTEMPT A FREEPOOL OF BUFFERS */ 01516000
*      REFS(DCBTEMPA)                                           03S0640 01517000
*      SETS(DCBTEMPA);              /*                          03S0640 01518000
     FREEPOOL   DCBTEMPA                                                01519000
*      DUMPISGO = FALSE;            /* NO LONGER GOOD EXECUTION      */ 01520000
         NI    DUMPISGO,B'11101111'                             02S0641 01521000
*      DYNARTRN = R15F;             /* SAVE DYNALLOC ERROR CODE      */ 01522000
         STCM  R15F,15,DYNARTRN                                 02S0642 01523000
*  RFY (R1P,R15F) UNRSTD;           /* RELEASE THE REGISTERS         */ 01524000
*      FULLWORD(1:2) = S99ERROR;    /* MOVE S99ERROR IN FOR CONVERSON*/ 01525000
         LA    @11,RQBLK                                        02S0644 01526000
         MVC   FULLWORD(2),S99ERROR(@11)                        02S0644 01527000
*      FULLWORD(3:4) = S99INFO;     /* MOVE S99INFO IN FOR CONVERSION*/ 01528000
         MVC   FULLWORD+2(2),S99INFO(@11)                       02S0645 01529000
*      RFY R3F RSTD;                /* REGISTER USED FOR CONVERSION  */ 01530000
*      DO INDEX=1 TO 4 BY 1;        /* CONVERT ALL FOUR BYTES PRINTBL*/ 01531000
         LA    @11,1                                            02S0647 01532000
         STH   @11,INDEX                                        02S0647 01533000
@DL00647 DS    0H                                               02S0648 01534000
*        R3F = ZERO;                /* CLEAR HIBYTES BEFORE IC INSTR */ 01535000
         SLR   R3F,R3F                                          02S0648 01536000
*        R3F = FULLWORD(INDEX:INDEX);/*REACH FOR NEXT INPUT CHARACTER*/ 01537000
         SLR   R3F,R3F                                          02S0649 01538000
         IC    R3F,FULLWORD-1(@11)                              02S0649 01539000
*        SRA(R3F,4);                /* SHIFT OUT LOW ORDER FOUR BITS */ 01540000
         SRA   R3F,4                                            02S0650 01541000
*        IF R3F>9 THEN              /* IF BITS SHOW NON-DECIMAL      */ 01542000
         LA    @11,9                                            02S0651 01543000
         CR    R3F,@11                                          02S0651 01544000
         BNH   @RF00651                                         02S0651 01545000
*          R3F = (R3F - 9) | '000000C0'X;/*CONVERT TO EBCDIC CHAR A-F*/ 01546000
         LCR   @11,@11                                          02S0652 01547000
         ALR   @11,R3F                                          02S0652 01548000
         O     @11,@CF03311                                     02S0652 01549000
         LR    R3F,@11                                          02S0652 01550000
*        ELSE                       /* OTHERWISE IT IS DECIMAL DIGIT */ 01551000
*          R3F = R3F | '000000F0'X; /* CONVERT TO EBCDIC CHAR 0-9    */ 01552000
         B     @RC00651                                         02S0653 01553000
@RF00651 O     R3F,@CF03312                                     02S0653 01554000
*        DYNACODE(INDEX*2-1:INDEX*2-1) =R3F;/*HI ORDER BITS CONVERTED*/ 01555000
@RC00651 LH    @11,INDEX                                        02S0654 01556000
         LR    @04,@11                                          02S0654 01557000
         ALR   @04,@04                                          02S0654 01558000
         STC   R3F,DYNACODE-2(@04)                              02S0654 01559000
*        R3F = FULLWORD(INDEX:INDEX)&'0F'X;/*REACH FOUR LO ORDER BITS*/ 01560000
         LA    R3F,15                                           02S0655 01561000
         SLR   @04,@04                                          02S0655 01562000
         IC    @04,FULLWORD-1(@11)                              02S0655 01563000
         NR    R3F,@04                                          02S0655 01564000
*        IF R3F>9 THEN              /* IF BITS SHOW NON-DECIMAL      */ 01565000
         LA    @11,9                                            02S0656 01566000
         CR    R3F,@11                                          02S0656 01567000
         BNH   @RF00656                                         02S0656 01568000
*          R3F = (R3F - 9) | '000000C0'X;/*CONVERT TO EBCDIC CHAR A-F*/ 01569000
         LCR   @11,@11                                          02S0657 01570000
         ALR   @11,R3F                                          02S0657 01571000
         O     @11,@CF03311                                     02S0657 01572000
         LR    R3F,@11                                          02S0657 01573000
*        ELSE                       /* OTHERWISE IT IS DECIMAL DIGIT */ 01574000
*          R3F = R3F | '000000F0'X; /* CONVERT TO EBCDIC CHAR 0-9    */ 01575000
         B     @RC00656                                         02S0658 01576000
@RF00656 O     R3F,@CF03312                                     02S0658 01577000
*        DYNACODE(INDEX*2:INDEX*2) = R3F;/* LOW 4 BITS CONVERTED     */ 01578000
@RC00656 LH    @11,INDEX                                        02S0659 01579000
         LR    @04,@11                                          02S0659 01580000
         ALR   @04,@04                                          02S0659 01581000
         STC   R3F,DYNACODE-1(@04)                              02S0659 01582000
*      END;                         /* END OF ONE BYTE CONVERSION    */ 01583000
         AL    @11,@CF00079                                     02S0660 01584000
         STH   @11,INDEX                                        02S0660 01585000
         C     @11,@CF00106                                     02S0660 01586000
         BNH   @DL00647                                         02S0660 01587000
*      RFY R3F UNRSTD;              /* GIVE BACK REGISTER 3          */ 01588000
*    END;                                                       02S0662 01589000
*  ELSE;                                                        02S0663 01590000
@RF00638 DS    0H                                               02S0664 01591000
*                        IF DUMPISGO=FALSE THEN /* IF ERROR FOUND    */ 01592000
         TM    DUMPISGO,B'00010000'                             01S0664 01593000
         BNZ   @RF00664                                         01S0664 01594000
*                         DO;       /* NOTIFY OPERATOR               */ 01595000
*                          CMNDCODE = '24'; /* SET ERROR REASON CODE */ 01596000
         MVC   CMNDCODE(2),@CC03313                             01S0666 01597000
*                          CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,     01598000
*                              LENGTH(APCTSSID),OFFSET#2,CMNDCODE,      01599000
*                              LENGTH(CMNDCODE)); /* WTO THE MESSAGE */ 01600000
         LA    @11,@CF00673                                     01S0667 01601000
         ST    @11,@AL00001                                     01S0667 01602000
         LA    @11,OFFSET#1                                     01S0667 01603000
         ST    @11,@AL00001+4                                   01S0667 01604000
         LA    @11,APCTSSID(,APCTPTR)                           01S0667 01605000
         ST    @11,@AL00001+8                                   01S0667 01606000
         LA    @11,@CF00106                                     01S0667 01607000
         ST    @11,@AL00001+12                                  01S0667 01608000
         LA    @11,OFFSET#2                                     01S0667 01609000
         ST    @11,@AL00001+16                                  01S0667 01610000
         LA    @11,CMNDCODE                                     01S0667 01611000
         ST    @11,@AL00001+20                                  01S0667 01612000
         LA    @11,@CF00073                                     01S0667 01613000
         ST    @11,@AL00001+24                                  01S0667 01614000
         MVI   @AL00001+24,X'80'                                01S0667 01615000
         L     @15,APCTZDWT(,APCTPTR)                           01S0667 01616000
         LA    @01,@AL00001                                     01S0667 01617000
         BALR  @14,@15                                          01S0667 01618000
*                          OFFSET#2 = 40; /* SET FOR ERROR REASON    */ 01619000
         MVC   OFFSET#2(4),@CF01631                             01S0668 01620000
*                          OFFSET#3 = 65; /* SET FOR INFO REASON     */ 01621000
         MVC   OFFSET#3(4),@CF02304                             01S0669 01622000
*                          CALL APCVZDWT(IGT281I,OFFSET#1,APCTSSID,     01623000
*                              LENGTH(APCTSSID),OFFSET#2,DYNAERRR,      01624000
*                              LENGTH(DYNAERRR),OFFSET#3,DYNAINFO,      01625000
*                              LENGTH(DYNAINFO)); /* WTO THE MESSAGE */ 01626000
         LA    @11,@CF02473                                     01S0670 01627000
         ST    @11,@AL00001                                     01S0670 01628000
         LA    @11,OFFSET#1                                     01S0670 01629000
         ST    @11,@AL00001+4                                   01S0670 01630000
         LA    @11,APCTSSID(,APCTPTR)                           01S0670 01631000
         ST    @11,@AL00001+8                                   01S0670 01632000
         LA    @11,@CF00106                                     01S0670 01633000
         ST    @11,@AL00001+12                                  01S0670 01634000
         LA    @11,OFFSET#2                                     01S0670 01635000
         ST    @11,@AL00001+16                                  01S0670 01636000
         LA    @11,DYNAERRR                                     01S0670 01637000
         ST    @11,@AL00001+20                                  01S0670 01638000
         LA    @11,@CF00106                                     01S0670 01639000
         ST    @11,@AL00001+24                                  01S0670 01640000
         LA    @11,OFFSET#3                                     01S0670 01641000
         ST    @11,@AL00001+28                                  01S0670 01642000
         LA    @11,DYNAINFO                                     01S0670 01643000
         ST    @11,@AL00001+32                                  01S0670 01644000
         LA    @11,@CF00106                                     01S0670 01645000
         ST    @11,@AL00001+36                                  01S0670 01646000
         MVI   @AL00001+36,X'80'                                01S0670 01647000
         L     @15,APCTZDWT(,APCTPTR)                           01S0670 01648000
         LA    @01,@AL00001                                     01S0670 01649000
         BALR  @14,@15                                          01S0670 01650000
*                         END;                                  01S0671 01651000
*                        ELSE                                   01S0672 01652000
*                          /* FOR VS1 DUMP3838 IS ALLOCATED FROM JCL */ 01653000
*                         DO;       /* PROCEED WITH ATTEMPT TO OPEN  */ 01654000
         B     @RC00664                                         01S0672 01655000
@RF00664 DS    0H                                               01S0673 01656000
*                    /* THIS CODE SERVES TO OPEN THE DUMP3838 DATASET * 01657000
*                                   /*                               */ 01658000
*  GENERATE CODE                    /* ATTEMPT AN OPEN OF DUMP3838   */ 01659000
*      REFS(DCB3838A,OPN3838S)                                  02S0673 01660000
*      SETS(DCB3838A,OPN3838A);   /*                            02S0673 01661000
     MVC    DCB3838A(DCB3838E),DCB3838S                                 01662000
     MVC    OPN3838A(OPN3838E),OPN3838S                                 01663000
     OPEN   (DCB3838A,(OUTPUT)),MF=(E,OPN3838A)                         01664000
*                          DCBPTR = ADDR(DCB3838A); /* DUMP3838 DCB  */ 01665000
         LA    @11,DCB3838A                                     01S0674 01666000
         ST    @11,DCBPTR                                       01S0674 01667000
*                          IF DCBOFOPN=FALSE THEN /* IF OPEN FAILED  */ 01668000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0675 01669000
         BNZ   @RF00675                                         01S0675 01670000
*                           DO;     /* NOTIFY OPERATOR               */ 01671000
*                            CMNDCODE = '28'; /* SET ERROR REASON CD */ 01672000
         MVC   CMNDCODE(2),@CC03314                             01S0677 01673000
*                            CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,   01674000
*                                LENGTH(APCTSSID),OFFSET#2,CMNDCODE,    01675000
*                                LENGTH(CMNDCODE)); /* WTO THE MESSAG*/ 01676000
         LA    @11,@CF00673                                     01S0678 01677000
         ST    @11,@AL00001                                     01S0678 01678000
         LA    @11,OFFSET#1                                     01S0678 01679000
         ST    @11,@AL00001+4                                   01S0678 01680000
         LA    @11,APCTSSID(,APCTPTR)                           01S0678 01681000
         ST    @11,@AL00001+8                                   01S0678 01682000
         LA    @11,@CF00106                                     01S0678 01683000
         ST    @11,@AL00001+12                                  01S0678 01684000
         LA    @11,OFFSET#2                                     01S0678 01685000
         ST    @11,@AL00001+16                                  01S0678 01686000
         LA    @11,CMNDCODE                                     01S0678 01687000
         ST    @11,@AL00001+20                                  01S0678 01688000
         LA    @11,@CF00073                                     01S0678 01689000
         ST    @11,@AL00001+24                                  01S0678 01690000
         MVI   @AL00001+24,X'80'                                01S0678 01691000
         L     @15,APCTZDWT(,APCTPTR)                           01S0678 01692000
         LA    @01,@AL00001                                     01S0678 01693000
         BALR  @14,@15                                          01S0678 01694000
*                                   /* ATTEMPT TO UNALLOCATE DATASET */ 01695000
*                   /* RESET REQUEST BLOCK FOR DYNAMIC UNALLOCATION  */ 01696000
*  S99VERB = S99VRBUN;              /* SET RB VERB CODE FOR UNALLOC  */ 01697000
         LA    @11,RQBLK                                        02S0679 01698000
         MVI   S99VERB(@11),X'02'                               02S0679 01699000
*  S99FLAG1 = '0000'X;              /* CLEAR OUT FLAG1               */ 01700000
         MVC   S99FLAG1(2,@11),@CB03315                         02S0680 01701000
*  S99ERROR = ZERO;                 /* IN CASE ERROR CODE PROVIDED   */ 01702000
         SLR   @04,@04                                          02S0681 01703000
         STH   @04,S99ERROR(,@11)                               02S0681 01704000
*  S99INFO = ZERO;                  /* IN CASE INFO. CODE PROVIDED   */ 01705000
         STH   @04,S99INFO(,@11)                                02S0682 01706000
*  S99FLAG2 = '00000000'X;          /* CLEAR OUT FLAG2               */ 01707000
         MVC   S99FLAG2(4,@11),@CB03256                         02S0683 01708000
*                   /* INITIALIZE THE ONLY TEXT UNIT FOR UNALLOCATE  */ 01709000
*  S99TUPLN(1) = BITONE;            /* THIS IS LAST TEXT UNIT IN LIST*/ 01710000
         LA    @11,TUPTRS                                       02S0684 01711000
         OI    S99TUPLN(@11),B'10000000'                        02S0684 01712000
*  S99TUKEY = DUNDDNAM;             /* DENOTES DSNAME UNALLOCATION   */ 01713000
         L     @11,S99TUPTR+20(,@11)                            02S0685 01714000
         MVC   S99TUKEY(2,@11),@CB00365                         02S0685 01715000
*                   /* NOW ACTUALLY COMMIT THE UNALLOCATION          */ 01716000
*  RFY (R1P,R15F) RSTD;             /* PTR IN REG 1 , RCDE IN REG 15 */ 01717000
*  R1P = ADDR(S99RBPTR);            /* INSERT CORRECT ADDRESS INTO R1*/ 01718000
         LA    R1P,RQBLKPTR                                     02S0687 01719000
*  GENERATE (DYNALLOC)              /* INVOKE THE SVC 99             */ 01720000
*      REFS(R1P)                                                02S0688 01721000
*      SETS(R15F);                                              02S0688 01722000
         DYNALLOC                                                       01723000
*  RFY (R1P,R15F) UNRSTD;           /* GIVE BACK THE REGISTERS       */ 01724000
*                           END;                                01S0690 01725000
*                          ELSE     /* OTHERWISE, OPEN SUCCEEDED     */ 01726000
*                           DO;                                 01S0691 01727000
         B     @RC00675                                         01S0691 01728000
@RF00675 DS    0H                                               01S0692 01729000
*                                 /* ATTEMPT A REOPEN OF DUMP TEMP   */ 01730000
*  GENERATE  CODE                   /* ATTEMPT A REOPEN              */ 01731000
*      REFS(DCBTEMPA,ROPTEMPS)                                  02S0692 01732000
*      SETS(DCBTEMPA,ROPTEMPA);     /*                          02S0692 01733000
     MVC   ROPTEMPA(ROPTEMPE),ROPTEMPS                                  01734000
     OPEN  (DCBTEMPA,(INPUT)),MF=(E,ROPTEMPA)                           01735000
*                            DCBPTR = ADDR(DCBTEMPA);/* DUMPTEMP DCB */ 01736000
         LA    @11,DCBTEMPA                                     01S0693 01737000
         ST    @11,DCBPTR                                       01S0693 01738000
*                            IF DCBOFOPN=FALSE THEN /* OPEN FAILED   */ 01739000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0694 01740000
         BNZ   @RF00694                                         01S0694 01741000
*                              DO;                              01S0695 01742000
*                                CMNDCODE = '20'; /* SET REASON CODE */ 01743000
         MVC   CMNDCODE(2),@CC03255                             01S0696 01744000
*                                CALL APCVZDWT(IGT280I,OFFSET#1,        01745000
*                                    APCTSSID,LENGTH(APCTSSID), 01S0697 01746000
*                                    OFFSET#2,CMNDCODE,         01S0697 01747000
*                                    LENGTH(CMNDCODE)); /* WTO MSG.  */ 01748000
         LA    @11,@CF00673                                     01S0697 01749000
         ST    @11,@AL00001                                     01S0697 01750000
         LA    @11,OFFSET#1                                     01S0697 01751000
         ST    @11,@AL00001+4                                   01S0697 01752000
         LA    @11,APCTSSID(,APCTPTR)                           01S0697 01753000
         ST    @11,@AL00001+8                                   01S0697 01754000
         LA    @11,@CF00106                                     01S0697 01755000
         ST    @11,@AL00001+12                                  01S0697 01756000
         LA    @11,OFFSET#2                                     01S0697 01757000
         ST    @11,@AL00001+16                                  01S0697 01758000
         LA    @11,CMNDCODE                                     01S0697 01759000
         ST    @11,@AL00001+20                                  01S0697 01760000
         LA    @11,@CF00073                                     01S0697 01761000
         ST    @11,@AL00001+24                                  01S0697 01762000
         MVI   @AL00001+24,X'80'                                01S0697 01763000
         L     @15,APCTZDWT(,APCTPTR)                           01S0697 01764000
         LA    @01,@AL00001                                     01S0697 01765000
         BALR  @14,@15                                          01S0697 01766000
*                              END;                             01S0698 01767000
*                            ELSE   /* REOPEN WAS SUCCESSFUL         */ 01768000
*                              DO;                              01S0699 01769000
         B     @RC00694                                         01S0699 01770000
@RF00694 DS    0H                                               01S0700 01771000
*                                REOPENED = TRUE;/*NOTE REOPN SUCCESS*/ 01772000
         OI    REOPENED,B'00001000'                             01S0700 01773000
*                                  /* THE DUMPTEMP AND DUMP3838      */ 01774000
*                                  /* DATASETS NOW BEING OPEN,       */ 01775000
*                                  /* REFORMAT AND OUTPUT THE DUMP.  */ 01776000
*                   /* ISSUE FIRST PUT TO OBTAIN FIRST OUTPUT BUFFER */ 01777000
*  CALL PUT3838;                                                02S0701 01778000
         BAL   @14,PUT3838                                      02S0701 01779000
*  CALL SEPPAGE;                   /* GENERATE THE SEPARATOR PAGE.   */ 01780000
         BAL   @14,SEPPAGE                                      02S0702 01781000
*  LINCOUNT = ZERO;                 /* THAT PUT DOESN'T COUNT        */ 01782000
         SLR   @11,@11                                          02S0703 01783000
         STH   @11,LINCOUNT                                     02S0703 01784000
*                   /* SETUP HEADER FOR DUMP OUTPUT.                 */ 01785000
*                   /* OBTAIN DATE & TIME FOR DUMP IDENTIFICATION    */ 01786000
*  YEARDATE = '';                   /* INITIALIZE YEAR-DATE FIELD    */ 01787000
         MVI   YEARDATE,C' '                                    03S0704 01788000
         MVC   YEARDATE+1(4),YEARDATE                           03S0704 01789000
*  HRMINSEC = '';                   /* INITIALIZE HOUR-MIN-SEC FIELD */ 01790000
         MVI   HRMINSEC,C' '                                    03S0705 01791000
         MVC   HRMINSEC+1(6),HRMINSEC                           03S0705 01792000
*  RFY (R0F,R1F,R15F) RSTD;         /* ALL REGISTERS USED BY MACRO   */ 01793000
*  GENERATE   CODE                                              03S0707 01794000
*      SETS(R0F,R1F,R15F)                                       03S0707 01795000
*      FLOWS(TIMERROR);             /*                          03S0707 01796000
     TIME   DEC,ERRET=TIMERROR                                          01797000
*  FULLWORD = R1F;                  /* STORE YEAR & DATE FOR SS INSTR*/ 01798000
         ST    R1F,FULLWORD                                     03S0708 01799000
*  UNPK(YEARDATE,FULLWORD);         /* UNPACK YEAR & DATE            */ 01800000
         UNPK  YEARDATE(5),FULLWORD(4)                          03S0709 01801000
*  FULLWORD = R0F | '0000000F'X;    /* SET EBCDIC ZONE IN LOW 4 BITS */ 01802000
         LR    @14,R0F                                          03S0710 01803000
         O     @14,@CF03323                                     03S0710 01804000
         ST    @14,FULLWORD                                     03S0710 01805000
*  UNPK(HRMINSEC,FULLWORD);         /* UNPACK TIME FROM FULLWORD     */ 01806000
         UNPK  HRMINSEC(7),FULLWORD(4)                          03S0711 01807000
*  RFY (R0F,R1F,R15F) UNRSTD;       /* GIVE BACK REG'S 0 AND 1 AND 15*/ 01808000
*TIMERROR: ;                        /* PRECEDING UNPACK'S ARE BYPASSD*/ 01809000
TIMERROR DS    0H                                               03S0714 01810000
*                                   /* IN THE EVENT CLOCKS ARE DOWN  */ 01811000
*                   /* NOW SET UP HEADER LINE OF DUMP OUTPUT         */ 01812000
*  RFY PRNTLINE BASED(BUFFPTR2);    /* PRNTLINE IS DUMP LINE IMAGE   */ 01813000
*  PRNTLINE(1:121) = '1';           /* CLEAR LINE FOR NEW PAGE SKIP  */ 01814000
         MVI   PRNTLINE+1(BUFFPTR2),C' '                        03S0715 01815000
         MVC   PRNTLINE+2(119,BUFFPTR2),PRNTLINE+1(BUFFPTR2)    03S0715 01816000
         MVI   PRNTLINE(BUFFPTR2),C'1'                          03S0715 01817000
*  PRNTLINE(11:14) = APCTSSID;      /* INSERT SUBSYSTEM ID           */ 01818000
         MVC   PRNTLINE+10(4,BUFFPTR2),APCTSSID(APCTPTR)        03S0716 01819000
*  IF APCQINT=TRUE THEN             /* IF INTERNAL DUMP COMMAND      */ 01820000
         TM    APCQINT(APCQPTR),B'10000000'                     03S0717 01821000
         BNO   @RF00717                                         03S0717 01822000
*    IF DUMPFORC=TRUE THEN          /* AND FORCE DUMP                */ 01823000
         TM    DUMPFORC,B'10000000'                             03S0718 01824000
         BNO   @RF00718                                         03S0718 01825000
*      PRNTLINE(16:31) = ' INTERNAL FORCE ';/* SET TYPE IN HEADER    */ 01826000
         MVC   PRNTLINE+15(16,BUFFPTR2),@CC03327                03S0719 01827000
*    ELSE                           /* PORT DUMP                     */ 01828000
*      PRNTLINE(16:31) = 'INTERNAL DYNAMIC';/* SET TYPE IN HEADER    */ 01829000
         B     @RC00718                                         03S0720 01830000
@RF00718 MVC   PRNTLINE+15(16,BUFFPTR2),@CC03329                03S0720 01831000
*  ELSE                             /* OPERATOR DUMP COMMAND         */ 01832000
*    IF DUMPFORC=TRUE THEN          /* IF FORCE DUMP                 */ 01833000
         B     @RC00717                                         03S0721 01834000
@RF00717 TM    DUMPFORC,B'10000000'                             03S0721 01835000
         BNO   @RF00721                                         03S0721 01836000
*      PRNTLINE(16:31) = ' OPERATOR FORCE ';/* SET TYPE IN HEADER    */ 01837000
         MVC   PRNTLINE+15(16,BUFFPTR2),@CC03331                03S0722 01838000
*    ELSE                           /* DYNAMIC DUMP                  */ 01839000
*      PRNTLINE(16:31) = 'OPERATOR DYNAMIC';/* SET TYPE IN HEADER    */ 01840000
         B     @RC00721                                         03S0723 01841000
@RF00721 MVC   PRNTLINE+15(16,BUFFPTR2),@CC03333                03S0723 01842000
*  PRNTLINE(33:49) = 'DUMP GENERATED ON';/* CONTINUE HEADER          */ 01843000
@RC00721 DS    0H                                               03S0724 01844000
@RC00717 MVC   PRNTLINE+32(17,BUFFPTR2),@CC03335                03S0724 01845000
*  PRNTLINE(51:52) = '19';          /* GIVE CENTURY                  */ 01846000
         MVC   PRNTLINE+50(2,BUFFPTR2),@CC03337                 03S0725 01847000
*  PRNTLINE(53:54) = YEARDATE(1:2); /* GIVE YEAR                     */ 01848000
         MVC   PRNTLINE+52(2,BUFFPTR2),YEARDATE                 03S0726 01849000
*  PRNTLINE(55:55) = '.';           /* PERIOD                        */ 01850000
         MVI   PRNTLINE+54(BUFFPTR2),C'.'                       03S0727 01851000
*  PRNTLINE(56:58) = YEARDATE(3:5); /* GIVE DAY                      */ 01852000
         MVC   PRNTLINE+55(3,BUFFPTR2),YEARDATE+2               03S0728 01853000
*  PRNTLINE(60:61) = 'AT';          /* AT                            */ 01854000
         MVC   PRNTLINE+59(2,BUFFPTR2),@CC03339                 03S0729 01855000
*  PRNTLINE(63:64) = HRMINSEC(1:2); /* SHOW HOUR                     */ 01856000
         MVC   PRNTLINE+62(2,BUFFPTR2),HRMINSEC                 03S0730 01857000
*  PRNTLINE(65:65) = ':';           /* SEPARATOR                     */ 01858000
         MVI   PRNTLINE+64(BUFFPTR2),C':'                       03S0731 01859000
*  PRNTLINE(66:67) = HRMINSEC(3:4); /* SHOW MINUTES                  */ 01860000
         MVC   PRNTLINE+65(2,BUFFPTR2),HRMINSEC+2               03S0732 01861000
*  PRNTLINE(68:68) = ':';           /* SEPARATOR                     */ 01862000
         MVI   PRNTLINE+67(BUFFPTR2),C':'                       03S0733 01863000
*  PRNTLINE(69:70) = HRMINSEC(5:6); /* SHOW SECONDS                  */ 01864000
         MVC   PRNTLINE+68(2,BUFFPTR2),HRMINSEC+4               03S0734 01865000
*  PRNTLINE(72:79) = 'FOR UNIT';    /* TO IDENTIFY UNIT BEING DUMPED */ 01866000
         MVC   PRNTLINE+71(8,BUFFPTR2),@CC03342                 03S0735 01867000
*  PRNTLINE(81:81+LENGTH(UNITADDR)-1) = UNITADDR; /*SLIP IN UNIT ADDR*/ 01868000
         MVC   PRNTLINE+80(3,BUFFPTR2),UNITADDR                 03S0736 01869000
*  IF UNITADDR(3:3)^='0' THEN       /* IF IT IS A PORT DUMP          */ 01870000
         CLI   UNITADDR+2,C'0'                                  03S0737 01871000
         BE    @RF00737                                         03S0737 01872000
*    DO;                                                        03S0738 01873000
*      JBNMPTR = APUBPTR;           /* BEGIN WITH MASTER PORT APUB   */ 01874000
         ST    APUBPTR,JBNMPTR                                  03S0739 01875000
*      DO WHILE(UNITADDR(3:3)^=JBNMPTR->APUBUCB->UCBNAME(3:3) & 03S0740 01876000
*          JBNMPTR^=ZERO);          /* SEARCH FOR DUMPED PORT'S APUB */ 01877000
         B     @DE00740                                         03S0740 01878000
@DL00740 DS    0H                                               03S0741 01879000
*        JBNMPTR = JBNMPTR->APUBAPUB; /* ADVANCE TO NEXT USER APUB   */ 01880000
         L     @11,JBNMPTR                                      03S0741 01881000
         L     @11,APUBAPUB(,@11)                               03S0741 01882000
         ST    @11,JBNMPTR                                      03S0741 01883000
*      END;                                                     03S0742 01884000
@DE00740 L     @11,JBNMPTR                                      03S0742 01885000
         L     @04,APUBUCB(,@11)                                03S0742 01886000
         CLC   UNITADDR+2(1),UCBNAME+2(@04)                     03S0742 01887000
         BE    @DC00740                                         03S0742 01888000
         LTR   @11,@11                                          03S0742 01889000
         BNZ   @DL00740                                         03S0742 01890000
@DC00740 DS    0H                                               03S0743 01891000
*      PRNTLINE(90:99) = 'JOBNAME = '; /* SET TO IDENTIFY DUMP OWNER */ 01892000
         MVC   PRNTLINE+89(10,BUFFPTR2),@CC03346                03S0743 01893000
*      PRNTLINE(100:100+LENGTH(APUBJBNM)-1) = JBNMPTR->APUBJBNM; /*  */ 01894000
         L     @11,JBNMPTR                                      03S0744 01895000
         MVC   PRNTLINE+99(8,BUFFPTR2),APUBJBNM(@11)            03S0744 01896000
*                                               /* GET JOBNAME       */ 01897000
*    END;                                                       03S0745 01898000
*  ELSE;                                                        03S0746 01899000
@RF00737 DS    0H                                               03S0747 01900000
*  PRNTLINE(121-8:121) = 'PAGE 0001';           /* INSERT PAGE NUM.  */ 01901000
         MVC   PRNTLINE+112(9,BUFFPTR2),@CC03348                03S0747 01902000
*                   /* OUTPUT THE DUMP HEADER                        */ 01903000
*  CALL PUT3838;                    /* PRINT IDENTIFYING HEADER LINE */ 01904000
         BAL   @14,PUT3838                                      02S0748 01905000
*  PRNTLINE(1:121) = '';            /* CLEAR NEWEST PRINT LINE       */ 01906000
         MVI   PRNTLINE(BUFFPTR2),C' '                          02S0749 01907000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      02S0749 01908000
*  PREVLINE = PRNTLINE;             /* INITIALIZE PREV.LINE IMAGE    */ 01909000
         MVC   PREVLINE(121),PRNTLINE(BUFFPTR2)                 02S0750 01910000
*  CALL PUT3838;                    /* PRINT ONE LINE OF BLANKS      */ 01911000
         BAL   @14,PUT3838                                      02S0751 01912000
*                                   /* PRINT DUMP COMMAND FOR REFERNC*/ 01913000
*  PRNTLINE(2:1+LENGTH(CMDINTRO)) = CMDINTRO;   /* PREP FOR COMMAND  */ 01914000
         MVC   PRNTLINE+1(25,BUFFPTR2),CMDINTRO                 02S0752 01915000
*  PRNTLINE(LENGTH(CMDINTRO)+2:121) = APCQCMND(1:APCQTXLN);     02S0753 01916000
         MVI   PRNTLINE+27(BUFFPTR2),C' '                       02S0753 01917000
         MVC   PRNTLINE+28(93,BUFFPTR2),PRNTLINE+27(BUFFPTR2)   02S0753 01918000
         LH    @11,APCQTXLN(,APCQPTR)                           02S0753 01919000
         BCTR  @11,0                                            02S0753 01920000
         EX    @11,@SM03543                                     02S0753 01921000
*  CALL PUT3838;                    /* PRINT THE OPERATOR'S COMMAND  */ 01922000
         BAL   @14,PUT3838                                      02S0754 01923000
*  PRNTLINE(1:121) = '';            /* FORM A BLANK LINE             */ 01924000
         MVI   PRNTLINE(BUFFPTR2),C' '                          02S0755 01925000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      02S0755 01926000
*  CALL PUT3838;                    /* PRINT BLANK LINE              */ 01927000
         BAL   @14,PUT3838                                      02S0756 01928000
*                   /* INITIALIZE VALUES & GET FIRST DUMP RECORD     */ 01929000
*  DUMPISCP = FALSE;                /* INITIALIZE DUMPISCP           */ 01930000
*  DUMPISBS = FALSE;                /* INITIALIZE DUMPISBS           */ 01931000
         NI    DUMPISCP,B'10011111'                             03S0758 01932000
*  IF DUMPCP=TRUE THEN              /* IF DUMP OF CP IS REQUESTED    */ 01933000
         TM    DUMPCP,B'00000001'                               03S0759 01934000
         BNO   @RF00759                                         03S0759 01935000
*    DUMPISCP = TRUE;               /* THEN IT IS 1ST PARTITION OUT  */ 01936000
         OI    DUMPISCP,B'00100000'                             03S0760 01937000
*  ELSE                             /* OTHERWISE                     */ 01938000
*    IF DUMPBS=TRUE THEN            /* IF DUMP OF BS IS REQUESTED    */ 01939000
         B     @RC00759                                         03S0761 01940000
@RF00759 TM    DUMPBS,B'00000100'                               03S0761 01941000
         BNO   @RF00761                                         03S0761 01942000
*      DUMPISBS = TRUE;             /* THEN IT COMES OUT NOW         */ 01943000
         OI    DUMPISBS,B'01000000'                             03S0762 01944000
*    ELSE;                          /* OTHERWISE, NOTHING            */ 01945000
@RF00761 DS    0H                                               03S0764 01946000
*  ISBSCRPT = 1;                    /* BEGINNING OF INPUT RECORD     */ 01947000
@RC00759 LA    @03,1                                            03S0764 01948000
         STH   @03,ISBSCRPT                                     03S0764 01949000
*  OSBSCRPT = 1;                    /* BEGINNING OF OUTPUT RECORD    */ 01950000
         LR    OSBSCRPT,@03                                     03S0765 01951000
*  PRINTING = TRUE;                 /* INDICATE PRINTING IN PROGRESS */ 01952000
         OI    PRINTING,B'10000000'                             03S0766 01953000
*  CALL GETTEMP;                    /* GET FIRST DUMP RECORD         */ 01954000
         BAL   @14,GETTEMP                                      02S0767 01955000
*                   /* NOW GRIND OUT A REFORMATTED PRINTED DUMP,     */ 01956000
*                   /* WITH CP STG FIRST FOLLOWED BY BULK STG.       */ 01957000
*  IF DUMPCP=TRUE & DUMPISCP=TRUE & PRINTING=TRUE THEN          03S0768 01958000
         TM    DUMPCP,B'00000001'                               03S0768 01959000
         BNO   @RF00768                                         03S0768 01960000
         TM    DUMPISCP,B'00100000'                             03S0768 01961000
         BNO   @RF00768                                         03S0768 01962000
         TM    PRINTING,B'10000000'                             03S0768 01963000
         BNO   @RF00768                                         03S0768 01964000
*                   /* CONTROL PROGRAM STORAGE IS FIRST TO BE DUMPED */ 01965000
*   DO WHILE (DUMPISCP=TRUE & PRINTING=TRUE);/* DO FOR ALL OF CP DUMP*/ 01966000
         B     @DE00769                                         03S0769 01967000
@DL00769 DS    0H                                               03S0770 01968000
*              /* CONVERT CHARACTERS UNTIL A BUFFER END IS REACHED   */ 01969000
*    CALL CHRCNVRT;                                             03S0770 01970000
         BAL   @14,CHRCNVRT                                     03S0770 01971000
*              /* LOGIC FOLLOWS FOR END OF BUFFER(S) ENCOUNTERED     */ 01972000
*    IF OSBSCRPT>121 THEN                                       03S0771 01973000
         C     OSBSCRPT,@CF00114                                03S0771 01974000
         BNH   @RF00771                                         03S0771 01975000
*      DO;                          /* END OF OUTPUT BUFFER REACHED  */ 01976000
*        CALL LNREPEAT;             /* SEE IF LINE REPEATS & OUTPUT  */ 01977000
         BAL   @14,LNREPEAT                                     03S0773 01978000
*        OSBSCRPT = 1;              /* SET FOR NEW OUTPUT BUFFER     */ 01979000
         LA    OSBSCRPT,1                                       03S0774 01980000
*      END;                                                     03S0775 01981000
*    ELSE;                          /* NOT END OF OUTPUT BUFFER      */ 01982000
@RF00771 DS    0H                                               03S0777 01983000
*                             /* PROCESS FOR END OF INPUT BUFFER     */ 01984000
*    IF ISBSCRPT>DRLTH & PRINTING=TRUE THEN /* IF END OF INPUT BUFFER*/ 01985000
         LH    @03,ISBSCRPT                                     03S0777 01986000
         CH    @03,DRLTH(,BUFFPTR)                              03S0777 01987000
         BNH   @RF00777                                         03S0777 01988000
         TM    PRINTING,B'10000000'                             03S0777 01989000
         BNO   @RF00777                                         03S0777 01990000
*      DO;                                                      03S0778 01991000
*        IF ENDOFSTG=TRUE THEN      /* AND END OF CP DUMP INPUT      */ 01992000
         TM    ENDOFSTG(BUFFPTR),B'00000100'                    03S0779 01993000
         BNO   @RF00779                                         03S0779 01994000
*          DO;                                                  03S0780 01995000
*            IF OSBSCRPT>11 & OSBSCRPT<=121 THEN      /*LINE NOT FULL*/ 01996000
         C     OSBSCRPT,@CF02133                                03S0781 01997000
         BNH   @RF00781                                         03S0781 01998000
         C     OSBSCRPT,@CF00114                                03S0781 01999000
         BH    @RF00781                                         03S0781 02000000
*              DO;                  /* PAD (LAST CP) LINE WITH BLANKS*/ 02001000
*                CALL PADBLANX;     /* INSERT THE PADDING BLANKS     */ 02002000
         BAL   @14,PADBLANX                                     03S0783 02003000
*                CALL LNREPEAT;     /* CAUSE LINE TO BE PRINTED      */ 02004000
         BAL   @14,LNREPEAT                                     03S0784 02005000
*                OSBSCRPT = 1;      /* RESET IN CASE BS TO BE DUMPED */ 02006000
         LA    OSBSCRPT,1                                       03S0785 02007000
*              END;                                             03S0786 02008000
*            ELSE;                  /* OUTPUT BUFFER WAS FILLED ALSO */ 02009000
@RF00781 DS    0H                                               03S0788 02010000
*            DUMPISCP = FALSE;      /* END OF CP DUMPING             */ 02011000
*            DUMPISBS = TRUE;       /* IF ANY DATA REMAINS, IT IS BS */ 02012000
         OI    DUMPISBS,B'01000000'                             03S0789 02013000
         NI    DUMPISCP,B'11011111'                             03S0789 02014000
*          END;                                                 03S0790 02015000
*        ELSE;                      /* MERELY RECORD END, NOT CP END */ 02016000
@RF00779 DS    0H                                               03S0792 02017000
*        IF DUMPCP=TRUE & DUMPISCP=TRUE | DUMPBS=TRUE & DUMPISBS=TRUE   02018000
*            THEN                   /* IF DUMPING IS TO CONTINUE THEN*/ 02019000
         TM    DUMPCP,B'00000001'                               03S0792 02020000
         BNO   @GL00028                                         03S0792 02021000
         TM    DUMPISCP,B'00100000'                             03S0792 02022000
         BO    @RT00792                                         03S0792 02023000
@GL00028 TM    DUMPBS,B'00000100'                               03S0792 02024000
         BNO   @RF00792                                         03S0792 02025000
         TM    DUMPISBS,B'01000000'                             03S0792 02026000
         BNO   @RF00792                                         03S0792 02027000
@RT00792 DS    0H                                               03S0793 02028000
*          DO;                      /* OBTAIN NEXT DUMP RECORD       */ 02029000
*            CALL GETTEMP;          /* OBTAIN THE RECORD             */ 02030000
         BAL   @14,GETTEMP                                      03S0794 02031000
*            ISBSCRPT = 1;          /* RESET INPUT RECORD INDEX      */ 02032000
         MVC   ISBSCRPT(2),@CH00079                             03S0795 02033000
*          END;                                                 03S0796 02034000
*        ELSE                       /* OTHERWISE, NO MORE DUMP OUTPUT*/ 02035000
*          PRINTING = FALSE;        /* INDICATE NO MORE DUMP OUTPUT  */ 02036000
         B     @RC00792                                         03S0797 02037000
@RF00792 NI    PRINTING,B'01111111'                             03S0797 02038000
*      END;                                                     03S0798 02039000
*    ELSE;                          /* NOT END OF INPUT BUFFER       */ 02040000
@RF00777 DS    0H                                               03S0800 02041000
*   END;                            /* END DOWHILE DUMPISCP=TRUE     */ 02042000
@RC00777 DS    0H                                               03S0800 02043000
@DE00769 TM    DUMPISCP,B'00100000'                             03S0800 02044000
         BNO   @DC00769                                         03S0800 02045000
         TM    PRINTING,B'10000000'                             03S0800 02046000
         BO    @DL00769                                         03S0800 02047000
@DC00769 DS    0H                                               03S0801 02048000
*  ELSE;                            /* CP STORAGE NOT TO BE OUTPUT   */ 02049000
@RF00768 DS    0H                                               03S0802 02050000
*  IF REPEATNG=TRUE THEN            /* IF LAST CP LINE WAS A REPEAT  */ 02051000
         TM    REPEATNG,B'00000100'                             03S0802 02052000
         BNO   @RF00802                                         03S0802 02053000
*    DO;                            /* REPEAT MSG MUST BE OUTPUT     */ 02054000
*      PRNTLINE = REPETMSG;         /* MOVE IN SKELETON OF MESSAGE   */ 02055000
         MVC   PRNTLINE(121,BUFFPTR2),REPETMSG                  03S0804 02056000
*                             /* INSERT TWO ADDRESSES INTO MESSAGE   */ 02057000
*      PRNTLINE(16:21) = RPTADDR1;    /* MOVE IN LOW ADDR OF RANGE   */ 02058000
         MVC   PRNTLINE+15(6,BUFFPTR2),RPTADDR1                 03S0805 02059000
*      PRNTLINE(31:36) = RPTADDR2;    /* MOVE IN HIGH ADDR OF RANGE  */ 02060000
         MVC   PRNTLINE+30(6,BUFFPTR2),RPTADDR2                 03S0806 02061000
*      IF LINCOUNT=APCTLINE THEN    /* IF BOTTOM OF PAGE NOW REACHED */ 02062000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S0807 02063000
         BNE   @RF00807                                         03S0807 02064000
*        CALL TOPOFPAG;             /* THEN HAVE PAGE HEADER PRINTED */ 02065000
         BAL   @14,TOPOFPAG                                     03S0808 02066000
*      ELSE;                        /* ELSE PRINT NEXT DUMP LINE NOW */ 02067000
@RF00807 DS    0H                                               03S0810 02068000
*      CALL PUT3838;                /* OUT GOES THE REPEAT MESSAGE   */ 02069000
         BAL   @14,PUT3838                                      03S0810 02070000
*      REPEATNG = FALSE;            /* REPEATING NO LONGER PREVAILS  */ 02071000
         NI    REPEATNG,B'11111011'                             03S0811 02072000
*    END;                                                       03S0812 02073000
*  ELSE;                            /* NO REPEAT FOR LAST CP LINE    */ 02074000
@RF00802 DS    0H                                               03S0814 02075000
*  IF DUMPBS=TRUE & DUMPCP=TRUE THEN/* IF BS GOING OUT & CP GONE     */ 02076000
         TM    DUMPBS,B'00000101'                               03S0814 02077000
         BNO   @RF00814                                         03S0814 02078000
*    DO;                            /* SKIP TO A NEW PAGE            */ 02079000
*      LINCOUNT = APCTLINE;         /* INDICATE A FULL PAGE OUTPUT   */ 02080000
         LH    @03,APCTLINE(,APCTPTR)                           03S0816 02081000
         STH   @03,LINCOUNT                                     03S0816 02082000
*      CALL TOPOFPAG;               /* SKIP TO NEW PAGE WITH LABEL   */ 02083000
         BAL   @14,TOPOFPAG                                     03S0817 02084000
*    END;                                                       03S0818 02085000
*  ELSE;                                                        03S0819 02086000
@RF00814 DS    0H                                               03S0820 02087000
*  IF DUMPBS=TRUE & DUMPISBS=TRUE & PRINTING=TRUE THEN /* IF DUMP BS */ 02088000
         TM    DUMPBS,B'00000100'                               03S0820 02089000
         BNO   @RF00820                                         03S0820 02090000
         TM    DUMPISBS,B'01000000'                             03S0820 02091000
         BNO   @RF00820                                         03S0820 02092000
         TM    PRINTING,B'10000000'                             03S0820 02093000
         BNO   @RF00820                                         03S0820 02094000
*    DO;                                                        03S0821 02095000
*                             /* BULK STORAGE IS SECOND TO BE DUMPED.*/ 02096000
*      IF DUMPCP=TRUE THEN          /* IF CP STORAGE WAS DUMPED      */ 02097000
         TM    DUMPCP,B'00000001'                               03S0822 02098000
         BNO   @RF00822                                         03S0822 02099000
*        PREVLINE(1:121) = '';      /* THEN CLEAR OUT PREVLINE       */ 02100000
         MVI   PREVLINE,C' '                                    03S0823 02101000
         MVC   PREVLINE+1(120),PREVLINE                         03S0823 02102000
*                   /* IF DUMP LIMIT ADDRESSES HAVE BEEN SPECIFIED   */ 02103000
*                   /* THEN ADVANCE TO LOWER LIMIT LINE IN INPUT REC */ 02104000
*      IF DUMPBSAA=TRUE THEN        /* SEE IF LIMITS HAVE BEEN GIVEN */ 02105000
@RF00822 TM    DUMPBSAA,B'00000010'                             03S0824 02106000
         BNO   @RF00824                                         03S0824 02107000
*        DO;                                                    03S0825 02108000
*          DO WHILE((DRBSA + (ISBSCRPT-1)/4 + 12 -1) < BSLLIMIT);       02109000
         B     @DE00826                                         03S0826 02110000
@DL00826 DS    0H                                               03S0827 02111000
*                                   /* ADDRESSES IN FULLWORDS. SO,   */ 02112000
*                                   /* ADVANCE UNTIL WITHIN AN OUTPUT*/ 02113000
*                                   /* LINE OF LOWER LIMIT WORD      */ 02114000
*            ISBSCRPT = ISBSCRPT + 12*4;      /* ADVANCE BY # BYTES  */ 02115000
         LH    @03,ISBSCRPT                                     03S0827 02116000
         LA    @03,48(,@03)                                     03S0827 02117000
         STH   @03,ISBSCRPT                                     03S0827 02118000
*          END;                     /* END DOWHILE                   */ 02119000
@DE00826 LH    @00,ISBSCRPT                                     03S0828 02120000
         BCTR  @00,0                                            03S0828 02121000
         SRDA  @00,32                                           03S0828 02122000
         D     @00,@CF00106                                     03S0828 02123000
         AL    @01,DRBSA(,BUFFPTR)                              03S0828 02124000
         SL    @01,@CF03494                                     03S0828 02125000
         C     @01,BSLLIMIT                                     03S0828 02126000
         BL    @DL00826                                         03S0828 02127000
*        END;                                                   03S0829 02128000
*      ELSE;                        /* OTHERWISE NO DUMP LIMITS GIVEN*/ 02129000
@RF00824 DS    0H                                               03S0831 02130000
*      DO WHILE DUMPISBS=TRUE & PRINTING=TRUE;                  03S0831 02131000
         B     @DE00831                                         03S0831 02132000
@DL00831 DS    0H                                               03S0832 02133000
*              /* CONVERT CHARACTERS UNTIL A BUFFER END IS REACHED   */ 02134000
*        CALL CHRCNVRT;                                         03S0832 02135000
         BAL   @14,CHRCNVRT                                     03S0832 02136000
*                   /* IF DUMP LIMIT ADDRESSES HAVE BEEN SPECIFIED   */ 02137000
*                   /* THEN SEE IF UPPER LIMIT HAS BEEN REACHED      */ 02138000
*        IF DUMPBSAA=TRUE & BSHLIMIT<(DRBSA + (ISBSCRPT+3)/4) THEN      02139000
         TM    DUMPBSAA,B'00000010'                             03S0833 02140000
         BNO   @RF00833                                         03S0833 02141000
         LA    @00,3                                            03S0833 02142000
         AH    @00,ISBSCRPT                                     03S0833 02143000
         SRDA  @00,32                                           03S0833 02144000
         D     @00,@CF00106                                     03S0833 02145000
         AL    @01,DRBSA(,BUFFPTR)                              03S0833 02146000
         C     @01,BSHLIMIT                                     03S0833 02147000
         BNH   @RF00833                                         03S0833 02148000
*          PRINTING = FALSE;        /* IF LIMIT REACHED THEN END DUMP*/ 02149000
         NI    PRINTING,B'01111111'                             03S0834 02150000
*        ELSE;                                                  03S0835 02151000
@RF00833 DS    0H                                               03S0836 02152000
*              /* LOGIC FOLLOWS FOR END OF BUFFER(S) ENCOUNTERED     */ 02153000
*        IF OSBSCRPT>121 THEN                                   03S0836 02154000
         C     OSBSCRPT,@CF00114                                03S0836 02155000
         BNH   @RF00836                                         03S0836 02156000
*          DO;                      /* END OF OUTPUT BUFFER REACHED  */ 02157000
*            CALL LNREPEAT;         /* SEE IF LINE REPEATS & OUTPUT  */ 02158000
         BAL   @14,LNREPEAT                                     03S0838 02159000
*            OSBSCRPT = 1;          /* RESET FOR NEW OUTPUT BUFFER   */ 02160000
         LA    OSBSCRPT,1                                       03S0839 02161000
*          END;                                                 03S0840 02162000
*        ELSE                                                   03S0841 02163000
*          IF PRINTING=FALSE THEN   /* IF UPPER ADDR LIMIT REACHED   */ 02164000
         B     @RC00836                                         03S0841 02165000
@RF00836 TM    PRINTING,B'10000000'                             03S0841 02166000
         BNZ   @RF00841                                         03S0841 02167000
*            DO;                    /* FILL INCOMPLETE BUFFER & OUTPT*/ 02168000
*              CALL PADBLANX;       /* INSERT THE PADDING BLANKS     */ 02169000
         BAL   @14,PADBLANX                                     03S0843 02170000
*              CALL LNREPEAT;       /* CAUSE LINE(S) TO BE PRINTED   */ 02171000
         BAL   @14,LNREPEAT                                     03S0844 02172000
*            END;                                               03S0845 02173000
*          ELSE;                    /* NEITHER BUFFER END OR ADDR END*/ 02174000
@RF00841 DS    0H                                               03S0847 02175000
*                             /* PROCESS FOR END OF INPUT BUFFER     */ 02176000
*          IF ISBSCRPT>DRLTH & PRINTING=TRUE THEN /* IF BUFFER END   */ 02177000
@RC00836 LH    @00,ISBSCRPT                                     03S0847 02178000
         CH    @00,DRLTH(,BUFFPTR)                              03S0847 02179000
         BNH   @RF00847                                         03S0847 02180000
         TM    PRINTING,B'10000000'                             03S0847 02181000
         BNO   @RF00847                                         03S0847 02182000
*            DO;                                                03S0848 02183000
*              IF ENDOFSTG=TRUE THEN/*  AN END OF BS DUMP INPUT      */ 02184000
         TM    ENDOFSTG(BUFFPTR),B'00000100'                    03S0849 02185000
         BNO   @RF00849                                         03S0849 02186000
*                DO;                                            03S0850 02187000
*                  IF OSBSCRPT>11 & OSBSCRPT<=121 THEN          03S0851 02188000
         C     OSBSCRPT,@CF02133                                03S0851 02189000
         BNH   @RF00851                                         03S0851 02190000
         C     OSBSCRPT,@CF00114                                03S0851 02191000
         BH    @RF00851                                         03S0851 02192000
*                    DO;            /* PAD (LAST BS) LINE WITH BLANKS*/ 02193000
*                      CALL PADBLANX;/* INSERT THE PADDING BLANKS    */ 02194000
         BAL   @14,PADBLANX                                     03S0853 02195000
*                      CALL LNREPEAT;/* CAUSE LINE(S) TO BE PRINTED  */ 02196000
         BAL   @14,LNREPEAT                                     03S0854 02197000
*                    END;                                       03S0855 02198000
*                  ELSE;            /*  LINE NOT IN NEED OF PADDING  */ 02199000
@RF00851 DS    0H                                               03S0857 02200000
*                  DUMPISBS = FALSE;/*  SIGNAL END OF BS DUMP PRINT  */ 02201000
         NI    DUMPISBS,B'10111111'                             03S0857 02202000
*                END;                                           03S0858 02203000
*              ELSE;                /* MERELY RECORD END, NOT BS END */ 02204000
@RF00849 DS    0H                                               03S0860 02205000
*              IF DUMPISBS=TRUE THEN /* ANOTHER INPUT RECORD NEEDED  */ 02206000
         TM    DUMPISBS,B'01000000'                             03S0860 02207000
         BNO   @RF00860                                         03S0860 02208000
*                DO;                                            03S0861 02209000
*                  CALL GETTEMP;                                03S0862 02210000
         BAL   @14,GETTEMP                                      03S0862 02211000
*                  ISBSCRPT = 1;    /* RESET INPUT RECORD INDEX      */ 02212000
         MVC   ISBSCRPT(2),@CH00079                             03S0863 02213000
*                END;                                           03S0864 02214000
*              ELSE                 /* OTHERWISE, NO MORE DUMP OUTPUT*/ 02215000
*                PRINTING = FALSE;  /* INDICATE NO MORE DUMP OUTPUT  */ 02216000
         B     @RC00860                                         03S0865 02217000
@RF00860 NI    PRINTING,B'01111111'                             03S0865 02218000
*            END;                   /* END OF END INPUT BUFFER CODE  */ 02219000
*          ELSE;                    /* NOT END OF INPUT BUFFER       */ 02220000
@RF00847 DS    0H                                               03S0868 02221000
*      END;                         /* END OF DO WHILE DUMPISBS=TRUE */ 02222000
@RC00847 DS    0H                                               03S0868 02223000
@DE00831 TM    DUMPISBS,B'01000000'                             03S0868 02224000
         BNO   @DC00831                                         03S0868 02225000
         TM    PRINTING,B'10000000'                             03S0868 02226000
         BO    @DL00831                                         03S0868 02227000
@DC00831 DS    0H                                               03S0869 02228000
*    END;                                                       03S0869 02229000
*  ELSE;                            /* NO BS DUMP TO BE OUTPUT       */ 02230000
@RF00820 DS    0H                                               03S0871 02231000
*  IF REPEATNG=TRUE THEN            /* IF LAST BS LINE WAS A REPEAT  */ 02232000
         TM    REPEATNG,B'00000100'                             03S0871 02233000
         BNO   @RF00871                                         03S0871 02234000
*    DO;                            /* REPEAT MSG MUST BE OUTPUT     */ 02235000
*      PRNTLINE = REPETMSG;         /* MOVE IN SKELETON OF MESSAGE   */ 02236000
         MVC   PRNTLINE(121,BUFFPTR2),REPETMSG                  03S0873 02237000
*                             /* INSERT TWO ADDRESSES INTO MESSAGE   */ 02238000
*      PRNTLINE(16:21) = RPTADDR1;    /* MOVE IN LOW ADDR OF RANGE   */ 02239000
         MVC   PRNTLINE+15(6,BUFFPTR2),RPTADDR1                 03S0874 02240000
*      PRNTLINE(31:36) = RPTADDR2;    /* MOVE IN HIGH ADDR OF RANGE  */ 02241000
         MVC   PRNTLINE+30(6,BUFFPTR2),RPTADDR2                 03S0875 02242000
*      IF LINCOUNT=APCTLINE THEN    /* IF BOTTOM OF PAGE NOW REACHED */ 02243000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S0876 02244000
         BNE   @RF00876                                         03S0876 02245000
*        CALL TOPOFPAG;             /* THEN HAVE PAGE HEADER PRINTED */ 02246000
         BAL   @14,TOPOFPAG                                     03S0877 02247000
*      ELSE;                        /* ELSE PRINT NEXT DUMP LINE NOW */ 02248000
@RF00876 DS    0H                                               03S0879 02249000
*      CALL PUT3838;                /* OUT GOES THE REPEAT MESSAGE   */ 02250000
         BAL   @14,PUT3838                                      03S0879 02251000
*      REPEATNG = FALSE;            /* REPEATING NO LONGER PREVAILS  */ 02252000
         NI    REPEATNG,B'11111011'                             03S0880 02253000
*    END;                                                       03S0881 02254000
*  ELSE;                            /* NO REPEAT FOR LAST BS LINE    */ 02255000
@RF00871 DS    0H                                               03S0883 02256000
*  PRNTLINE(1:121) = '';            /*                               */ 02257000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S0883 02258000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S0883 02259000
*  IF LINCOUNT=APCTLINE THEN        /* IF BOTTOM OF PAGE NOW REACHED */ 02260000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S0884 02261000
         BNE   @RF00884                                         03S0884 02262000
*    CALL TOPOFPAG;                 /* THEN HAVE PAGE HEADER PRINTED */ 02263000
         BAL   @14,TOPOFPAG                                     03S0885 02264000
*  ELSE;                            /* ELSE PRINT NEXT DUMP LINE NOW */ 02265000
@RF00884 DS    0H                                               03S0887 02266000
*  CALL PUT3838;                    /*                               */ 02267000
         BAL   @14,PUT3838                                      03S0887 02268000
*  PRNTLINE(1:57) = '';             /*                               */ 02269000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S0888 02270000
         MVC   PRNTLINE+1(56,BUFFPTR2),PRNTLINE(BUFFPTR2)       03S0888 02271000
*  PRNTLINE(58:121) = 'END OF XXXX DUMP';      /*                    */ 02272000
         MVI   PRNTLINE+73(BUFFPTR2),C' '                       03S0889 02273000
         MVC   PRNTLINE+74(47,BUFFPTR2),PRNTLINE+73(BUFFPTR2)   03S0889 02274000
         MVC   PRNTLINE+57(16,BUFFPTR2),@CC03355                03S0889 02275000
*  PRNTLINE(65:68) = APCTSSID;      /*                               */ 02276000
         MVC   PRNTLINE+64(4,BUFFPTR2),APCTSSID(APCTPTR)        03S0890 02277000
*  IF LINCOUNT=APCTLINE THEN        /* IF BOTTOM OF PAGE NOW REACHED */ 02278000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S0891 02279000
         BNE   @RF00891                                         03S0891 02280000
*    CALL TOPOFPAG;                 /* THEN HAVE PAGE HEADER PRINTED */ 02281000
         BAL   @14,TOPOFPAG                                     03S0892 02282000
*  ELSE;                            /* ELSE PRINT NEXT DUMP LINE NOW */ 02283000
@RF00891 DS    0H                                               03S0894 02284000
*  CALL PUT3838;                    /*                               */ 02285000
         BAL   @14,PUT3838                                      03S0894 02286000
*  PRNTLINE(1:121) = '';            /*                               */ 02287000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S0895 02288000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S0895 02289000
*  IF LINCOUNT=APCTLINE THEN        /* IF BOTTOM OF PAGE NOW REACHED */ 02290000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S0896 02291000
         BNE   @RF00896                                         03S0896 02292000
*    CALL TOPOFPAG;                 /* THEN HAVE PAGE HEADER PRINTED */ 02293000
         BAL   @14,TOPOFPAG                                     03S0897 02294000
*  ELSE;                            /* ELSE PRINT NEXT DUMP LINE NOW */ 02295000
@RF00896 DS    0H                                               03S0899 02296000
*  CALL PUT3838;                    /*                               */ 02297000
         BAL   @14,PUT3838                                      03S0899 02298000
*  CALL SEPPAGE;                   /* GENERATE THE SEPARATOR PAGE.   */ 02299000
         BAL   @14,SEPPAGE                                      02S0900 02300000
*                   /* TRY A CLOSE OF DUMP3838 DATASET               */ 02301000
*  ABNDCLS8 = TRUE;                 /* LEFT ON IF CLOSE ABENDS       */ 02302000
         OI    ABNDCLS8,B'00100000'                             03S0901 02303000
*  GENERATE  CODE                   /* TRY A CLOSE OF DUMP3838       */ 02304000
*      REFS(DCB3838A,CLS3838S)                                  03S0902 02305000
*      SETS(DCB3838A,CLS3838A);     /*                          03S0902 02306000
     MVC   CLS3838A(CLS3838E),CLS3838S                                  02307000
     CLOSE (DCB3838A),MF=(E,CLS3838A)                                   02308000
*  ABNDCLS8 = FALSE;                /* OFF IF NO CLOSE ABEND         */ 02309000
         NI    ABNDCLS8,B'11011111'                             03S0903 02310000
*  DCBPTR = ADDR(DCB3838A);         /* POINT TO DUMP3838 DCB         */ 02311000
         LA    @11,DCB3838A                                     02S0904 02312000
         ST    @11,DCBPTR                                       02S0904 02313000
*  IF DCBOFOPN=TRUE THEN            /* IF DUMP3838 WOULDN'T CLOSE    */ 02314000
         TM    DCBOFOPN+40(@11),B'00010000'                     02S0905 02315000
         BNO   @RF00905                                         02S0905 02316000
*    DO;                            /* NOTIFY OPERATOR               */ 02317000
*      CMNDCODE = '32';             /* SET REASON CODE               */ 02318000
         MVC   CMNDCODE(2),@CC03357                             02S0907 02319000
*      CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),        02320000
*          OFFSET#2,CMNDCODE,LENGTH(CMNDCODE));/* WTO THE MESSAGE    */ 02321000
         LA    @11,@CF00673                                     02S0908 02322000
         ST    @11,@AL00001                                     02S0908 02323000
         LA    @11,OFFSET#1                                     02S0908 02324000
         ST    @11,@AL00001+4                                   02S0908 02325000
         LA    @11,APCTSSID(,APCTPTR)                           02S0908 02326000
         ST    @11,@AL00001+8                                   02S0908 02327000
         LA    @11,@CF00106                                     02S0908 02328000
         ST    @11,@AL00001+12                                  02S0908 02329000
         LA    @11,OFFSET#2                                     02S0908 02330000
         ST    @11,@AL00001+16                                  02S0908 02331000
         LA    @11,CMNDCODE                                     02S0908 02332000
         ST    @11,@AL00001+20                                  02S0908 02333000
         LA    @11,@CF00073                                     02S0908 02334000
         ST    @11,@AL00001+24                                  02S0908 02335000
         MVI   @AL00001+24,X'80'                                02S0908 02336000
         L     @15,APCTZDWT(,APCTPTR)                           02S0908 02337000
         LA    @01,@AL00001                                     02S0908 02338000
         BALR  @14,@15                                          02S0908 02339000
*                   /* RESET REQUEST BLOCK FOR DYNAMIC UNALLOCATION  */ 02340000
*  S99VERB = S99VRBUN;              /* SET RB VERB CODE FOR UNALLOC  */ 02341000
         LA    @11,RQBLK                                        03S0909 02342000
         MVI   S99VERB(@11),X'02'                               03S0909 02343000
*  S99FLAG1 = '0000'X;              /* CLEAR OUT FLAG1               */ 02344000
         MVC   S99FLAG1(2,@11),@CB03315                         03S0910 02345000
*  S99ERROR = ZERO;                 /* IN CASE ERROR CODE PROVIDED   */ 02346000
         SLR   @04,@04                                          03S0911 02347000
         STH   @04,S99ERROR(,@11)                               03S0911 02348000
*  S99INFO = ZERO;                  /* IN CASE INFO. CODE PROVIDED   */ 02349000
         STH   @04,S99INFO(,@11)                                03S0912 02350000
*  S99FLAG2 = '00000000'X;          /* CLEAR OUT FLAG2               */ 02351000
         MVC   S99FLAG2(4,@11),@CB03256                         03S0913 02352000
*                   /* INITIALIZE THE ONLY TEXT UNIT FOR UNALLOCATE  */ 02353000
*  S99TUPLN(1) = BITONE;            /* THIS IS LAST TEXT UNIT IN LIST*/ 02354000
         LA    @11,TUPTRS                                       03S0914 02355000
         OI    S99TUPLN(@11),B'10000000'                        03S0914 02356000
*  S99TUKEY = DUNDDNAM;             /* DENOTES DSNAME UNALLOCATION   */ 02357000
         L     @11,S99TUPTR+20(,@11)                            03S0915 02358000
         MVC   S99TUKEY(2,@11),@CB00365                         03S0915 02359000
*                   /* NOW ACTUALLY COMMIT THE UNALLOCATION          */ 02360000
*  RFY (R1P,R15F) RSTD;             /* PTR IN REG 1 , RCDE IN REG 15 */ 02361000
*  R1P = ADDR(S99RBPTR);            /* INSERT CORRECT ADDRESS INTO R1*/ 02362000
         LA    R1P,RQBLKPTR                                     03S0917 02363000
*  GENERATE (DYNALLOC)              /* INVOKE THE SVC 99             */ 02364000
*      REFS(R1P)                                                03S0918 02365000
*      SETS(R15F);                                              03S0918 02366000
         DYNALLOC                                                       02367000
*  RFY (R1P,R15F) UNRSTD;           /* GIVE BACK THE REGISTERS       */ 02368000
*    END;                                                       02S0920 02369000
*  ELSE                             /* CLOSE WAS SUCCESSFUL          */ 02370000
*    DO;                                                        02S0921 02371000
         B     @RC00905                                         02S0921 02372000
@RF00905 DS    0H                                               02S0922 02373000
*      OFFSET#2 = 24;               /* SET 2ND PARM FOR WTO          */ 02374000
         MVC   OFFSET#2(4),@CF00133                             02S0922 02375000
*      OFFSET#3 = 55;               /* SET 3RD PARM FOR WTO          */ 02376000
         MVC   OFFSET#3(4),@CF02287                             02S0923 02377000
*      CALL APCVZDWT(IGT299I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),        02378000
*          OFFSET#2,AMSGPAR2,LENGTH(AMSGPAR2), /* SEND THE DUDE A MSG*/ 02379000
*          OFFSET#3,UNITADDR,LENGTH(UNITADDR)); /* OF CONGRATULATIONS*/ 02380000
         LA    @11,@CF03080                                     02S0924 02381000
         ST    @11,@AL00001                                     02S0924 02382000
         LA    @11,OFFSET#1                                     02S0924 02383000
         ST    @11,@AL00001+4                                   02S0924 02384000
         LA    @11,APCTSSID(,APCTPTR)                           02S0924 02385000
         ST    @11,@AL00001+8                                   02S0924 02386000
         LA    @11,@CF00106                                     02S0924 02387000
         ST    @11,@AL00001+12                                  02S0924 02388000
         LA    @11,OFFSET#2                                     02S0924 02389000
         ST    @11,@AL00001+16                                  02S0924 02390000
         LA    @11,AMSGPAR2                                     02S0924 02391000
         ST    @11,@AL00001+20                                  02S0924 02392000
         LA    @11,@CF00110                                     02S0924 02393000
         ST    @11,@AL00001+24                                  02S0924 02394000
         LA    @11,OFFSET#3                                     02S0924 02395000
         ST    @11,@AL00001+28                                  02S0924 02396000
         LA    @11,UNITADDR                                     02S0924 02397000
         ST    @11,@AL00001+32                                  02S0924 02398000
         LA    @11,@CF00117                                     02S0924 02399000
         ST    @11,@AL00001+36                                  02S0924 02400000
         MVI   @AL00001+36,X'80'                                02S0924 02401000
         L     @15,APCTZDWT(,APCTPTR)                           02S0924 02402000
         LA    @01,@AL00001                                     02S0924 02403000
         BALR  @14,@15                                          02S0924 02404000
*  GENERATE  CODE                                               03S0925 02405000
*      REFS(DCB3838A)                                           03S0925 02406000
*      SETS(DCB3838A);                                          03S0925 02407000
     FREEPOOL   DCB3838A                                                02408000
*                                   /* IF MVS, THEN DUMP3838 CLOSE   */ 02409000
*                                   /* CAUSES PRINTING & UNALLOCATION*/ 02410000
*    END;                                                       02S0926 02411000
*                                   /* OUTPUTIT INCLUDES CLOSE 3838  */ 02412000
*                                DCBPTR = ADDR(DCBTEMPA);/*SET DCBPTR*/ 02413000
@RC00905 LA    @11,DCBTEMPA                                     01S0927 02414000
         ST    @11,DCBPTR                                       01S0927 02415000
*    ABNDRCLT = TRUE;               /* LEFT ON IF RECLOSE ABENDS     */ 02416000
         OI    ABNDRCLT,B'01000000'                             02S0928 02417000
*    GENERATE  CODE                 /* ATTEMPT A RECLOSE             */ 02418000
*        REFS(DCBTEMPA,RCLTEMPS)                                02S0929 02419000
*        SETS(DCBTEMPA,RCLTEMPA);  /*                           02S0929 02420000
       MVC    RCLTEMPA(RCLTEMPE),RCLTEMPS                               02421000
       CLOSE  (DCBTEMPA),MF=(E,RCLTEMPA)                                02422000
*    ABNDRCLT = FALSE;              /* OFF IF NO RECLOSE ABEND       */ 02423000
         NI    ABNDRCLT,B'10111111'                             02S0930 02424000
*                                IF DCBOFOPN=FALSE THEN /*IF RECLOSED*/ 02425000
         L     @11,DCBPTR                                       01S0931 02426000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0931 02427000
         BNZ   @RF00931                                         01S0931 02428000
*                                  DO;                          01S0932 02429000
*  GENERATE  CODE                   /* ATTEMPT A FREEPOOL OF BUFFERS */ 02430000
*      REFS(DCBTEMPA)                                           02S0933 02431000
*      SETS(DCBTEMPA);              /*                          02S0933 02432000
     FREEPOOL   DCBTEMPA                                                02433000
*                                  END;                         01S0934 02434000
*                                ELSE;                          01S0935 02435000
@RF00931 DS    0H                                               01S0936 02436000
*                              END;                             01S0936 02437000
*                            DCBPTR = ADDR(DCB3838A);/* LOCATE DCB   */ 02438000
@RC00694 LA    @11,DCB3838A                                     01S0937 02439000
         ST    @11,DCBPTR                                       01S0937 02440000
*                            IF DCBOFOPN=TRUE THEN /* IF STILL OPEN  */ 02441000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0938 02442000
         BNO   @RF00938                                         01S0938 02443000
*                              DO;  /*(BECAUSE DUMPTEMP NOT REOPENED)*/ 02444000
*  ABNDCLS8 = TRUE;                 /* LEFT ON IF CLOSE ABENDS       */ 02445000
         OI    ABNDCLS8,B'00100000'                             02S0940 02446000
*  GENERATE  CODE                   /* TRY A CLOSE OF DUMP3838       */ 02447000
*      REFS(DCB3838A,CLS3838S)                                  02S0941 02448000
*      SETS(DCB3838A,CLS3838A);     /*                          02S0941 02449000
     MVC   CLS3838A(CLS3838E),CLS3838S                                  02450000
     CLOSE (DCB3838A),MF=(E,CLS3838A)                                   02451000
*  ABNDCLS8 = FALSE;                /* OFF IF NO CLOSE ABEND         */ 02452000
         NI    ABNDCLS8,B'11011111'                             02S0942 02453000
*                                IF DCBOFOPN=FALSE THEN /* IF CLOSED */ 02454000
         L     @11,DCBPTR                                       01S0943 02455000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0943 02456000
         BNZ   @RF00943                                         01S0943 02457000
*                                  DO;                          01S0944 02458000
*  GENERATE  CODE                                               02S0945 02459000
*      REFS(DCB3838A)                                           02S0945 02460000
*      SETS(DCB3838A);                                          02S0945 02461000
     FREEPOOL   DCB3838A                                                02462000
*                                  END;                         01S0946 02463000
*                                ELSE;                          01S0947 02464000
@RF00943 DS    0H                                               01S0948 02465000
*                              END;                             01S0948 02466000
*                            ELSE;  /*BOTH DATASETS PREVIOUSLY CLOSED*/ 02467000
@RF00938 DS    0H                                               01S0950 02468000
*                           END;    /* END OF SUCCESSFUL DUMP3838 OPN*/ 02469000
*                         END;      /* END OF %INCLUDE OPEN3838 DO   */ 02470000
@RC00675 DS    0H                                               01S0952 02471000
*                      END;         /* END OF DUMP3838 PROCESSING    */ 02472000
@RC00664 DS    0H                                               01S0953 02473000
*                    END;                                       01S0953 02474000
@RC00576 DS    0H                                               01S0954 02475000
*                      /* IF DUMPTEMP IS STILL OPEN, TRY TO CLOSE IT */ 02476000
*                   DCBPTR = ADDR(DCBTEMPA); /* POINT TO DUMPTEMP DCB*/ 02477000
@RF00570 LA    @11,DCBTEMPA                                     01S0954 02478000
         ST    @11,DCBPTR                                       01S0954 02479000
*                   IF DCBOFOPN=TRUE THEN /* IF DUMPTEMP IS OPEN     */ 02480000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0955 02481000
         BNO   @RF00955                                         01S0955 02482000
*                     DO;                                       01S0956 02483000
*                    ABNDCLST = TRUE; /* LEFT ON IF CLOSE ABENDS     */ 02484000
         OI    ABNDCLST,B'10000000'                             02S0957 02485000
*                    GENERATE  CODE /* ATTEMPT A CLOSE               */ 02486000
*                        REFS(DCBTEMPA,CLSTEMPS)                02S0958 02487000
*                        SETS(DCBTEMPA,CLSTEMPA);  /*           02S0958 02488000
                       MVC    CLSTEMPA(CLSTEMPE),CLSTEMPS               02489000
                       CLOSE  (DCBTEMPA),MF=(E,CLSTEMPA)                02490000
*                    ABNDCLST = FALSE; /* RESET IF NO CLOSE ABEND    */ 02491000
         NI    ABNDCLST,B'01111111'                             02S0959 02492000
*                       IF DCBOFOPN=FALSE THEN /* IF CLOSE SUCCEEDED */ 02493000
         L     @11,DCBPTR                                       01S0960 02494000
         TM    DCBOFOPN+40(@11),B'00010000'                     01S0960 02495000
         BNZ   @RF00960                                         01S0960 02496000
*                         DO;                                   01S0961 02497000
*  GENERATE  CODE                   /* ATTEMPT A FREEPOOL OF BUFFERS */ 02498000
*      REFS(DCBTEMPA)                                           02S0962 02499000
*      SETS(DCBTEMPA);              /*                          02S0962 02500000
     FREEPOOL   DCBTEMPA                                                02501000
*                         END;                                  01S0963 02502000
*                       ELSE;                                   01S0964 02503000
@RF00960 DS    0H                                               01S0965 02504000
*                     END;                                      01S0965 02505000
*                   ELSE;                                       01S0966 02506000
@RF00955 DS    0H                                               01S0967 02507000
*                  END;             /* END OF DUMPTEMP PROCESSING    */ 02508000
*               END;                /* END OF LOADED SAD PGM DO      */ 02509000
*              ELSE;                /* SAD PGM DID NOT GET LOADED    */ 02510000
@RF00431 DS    0H                                               01S0970 02511000
*                     /* IF RE-IPL IS NECESSARY, PREPARE A COMMAND   */ 02512000
*                IF REIPL=TRUE THEN                             01S0970 02513000
@RC00431 TM    REIPL,B'00100000'                                01S0970 02514000
         BNO   @RF00970                                         01S0970 02515000
*                  DO;            /* PREPARE THE COMMAND             */ 02516000
*                   /* CONSTRUCT & ENQUEUE A RE-IPL COMMAND          */ 02517000
*   SAVEPTR = APCQPTR;              /* SAVE PTR TO CURRENT COMMAND   */ 02518000
         LR    SAVEPTR,APCQPTR                                  02S0972 02519000
*   CALL APCVZDX1;                  /* OBTAIN A NEW EMPTY COMMAND    */ 02520000
         L     @15,APCTZDX1(,APCTPTR)                           02S0973 02521000
         BALR  @14,@15                                          02S0973 02522000
*                                   /* SETUP NEW REIPL COMMAND       */ 02523000
*   APCQIINF = APCQRIPL;            /* INDICATE A REIPL IS REQUIRED  */ 02524000
         MVC   APCQIINF(4,APCQPTR),@CF02376                     02S0974 02525000
*   APCQINT = TRUE;                 /* COMMAND IS INTERNALLY GEN'ED  */ 02526000
         OI    APCQINT(APCQPTR),B'10000000'                     02S0975 02527000
*   APCQTXLN = ZERO;                /* NO TEXT PROVIDED              */ 02528000
         SLR   @11,@11                                          02S0976 02529000
         STH   @11,APCQTXLN(,APCQPTR)                           02S0976 02530000
*   APCQPLEN = ZERO;                /* NO PARAMETERS EITHER          */ 02531000
         STH   @11,APCQPLEN(,APCQPTR)                           02S0977 02532000
*                                   /*                               */ 02533000
*   CALL APCVZDX2;                  /* NOW QUEUE IT UP               */ 02534000
         L     @15,APCTZDX2(,APCTPTR)                           02S0978 02535000
         BALR  @14,@15                                          02S0978 02536000
*   APCQPTR = SAVEPTR;              /* RESTORE PREVIOUS COMMAND PTR  */ 02537000
         LR    APCQPTR,SAVEPTR                                  02S0979 02538000
*   REIPLED = TRUE;                 /*INDICATE THAT COMMAND NOW GIVEN*/ 02539000
         OI    REIPLED,B'00010000'                              02S0980 02540000
*                  END;                                         01S0981 02541000
*                ELSE;                                          01S0982 02542000
@RF00970 DS    0H                                               01S0983 02543000
*             END;                  /* END OF 3838 NOT UNLOADED CODE */ 02544000
*        END;                       /* END OF CODE FOR CORRECT CMND. */ 02545000
@RC00399 DS    0H                                               01S0984 02546000
@RC00392 DS    0H                                               01S0985 02547000
*    END;                           /* END OF CODE FOR NOT HALTING   */ 02548000
@RC00334 DS    0H                                               01S0986 02549000
*          IF UNITADDR(3:3)^='0'      /* IF THIS WAS A PORT DUMP     */ 02550000
*             & RESETUJA = TRUE THEN  /* AND UJA IS NEEDED           */ 02551000
@RC00329 CLI   UNITADDR+2,C'0'                                  02S0986 02552000
         BE    @RF00986                                         02S0986 02553000
         TM    RESETUJA,B'00000010'                             02S0986 02554000
         BNO   @RF00986                                         02S0986 02555000
*            DO;                                                02S0987 02556000
*              RFY APUBPTR RSTD;                                02S0988 02557000
*              APUBPTR = APUBAPUB;  /* MOVE DOWN LIST OF APUB PTR'S  */ 02558000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       02S0989 02559000
*              RFY UCBOB BASED(APUBUCB);                        02S0990 02560000
*              DO WHILE(APUBPTR^=ZERO & UCBNAME(3:3)^=UNITADDR(3:3));   02561000
         B     @DE00991                                         02S0991 02562000
@DL00991 DS    0H                                               02S0992 02563000
*                APUBPTR = APUBAPUB;/* MOVE TO NEXT APUB UNTIL MATCH */ 02564000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       02S0992 02565000
*              END;                 /* SO WE HAVE APUBPTR OF DUMPPORT*/ 02566000
@DE00991 LTR   APUBPTR,APUBPTR                                  02S0993 02567000
         BZ    @DC00991                                         02S0993 02568000
         L     @11,APUBUCB(,APUBPTR)                            02S0993 02569000
         CLC   UCBNAME+2(1,@11),UNITADDR+2                      02S0993 02570000
         BNE   @DL00991                                         02S0993 02571000
@DC00991 DS    0H                                               02S0994 02572000
*              RFY R1P RSTD;        /* SECURE REG 1                  */ 02573000
*              R1P = 1;             /* SET RECOVERY INDICATOR        */ 02574000
         LA    R1P,1                                            02S0995 02575000
*              CALL APCVZUJA;       /* CALL THE BITSETTER ROUTINE    */ 02576000
         L     @15,APCTZUJA(,APCTPTR)                           02S0996 02577000
         BALR  @14,@15                                          02S0996 02578000
*              RESETUJA = FALSE;    /* INDICATE UJA HAS BEEN CALLED. */ 02579000
         NI    RESETUJA,B'11111101'                             02S0997 02580000
*              RFY R1P UNRSTD;      /* RELEASE REG 1                 */ 02581000
*              RFY UCBOB BASED(UCBPTR);                         02S0999 02582000
*            END;                                               02S1000 02583000
*          ELSE;                                                02S1001 02584000
@RF00986 DS    0H                                               02S1002 02585000
*  IF  ENQDAPUB = TRUE THEN         /* SEE IF THE APUBS ARE STILL ENQ*/ 02586000
         TM    ENQDAPUB,B'00000010'                             01S1002 02587000
         BNO   @RF01002                                         01S1002 02588000
*    DO;                            /* IF SO DEQUEUE FROM THEM.      */ 02589000
*      CALL APCVZDDQ;               /* DEQUEUE FROM THE APUBS.       */ 02590000
         L     @15,APCTZDDQ(,APCTPTR)                           01S1004 02591000
         BALR  @14,@15                                          01S1004 02592000
*      ENQDAPUB = FALSE;            /* INDICATE APUBS ARE DEQUEUED.  */ 02593000
         NI    ENQDAPUB,B'11111101'                             01S1005 02594000
*    END;                           /* END OF DEQUEUE PROCESSING.    */ 02595000
*  ELSE;                            /* NULL FOR NOT ENQUEUED.        */ 02596000
@RF01002 DS    0H                                               01S1008 02597000
*  RFY APUBPTR UNRSTD;              /* RELEASE THE APUBPTR           */ 02598000
*  RFY APCQPTR UNRSTD;              /* RELEASE THE APCQPTR           */ 02599000
*            /* DISENGAGE (E)STAE, AND RETURN TO CALLING PROGRAM     */ 02600000
*    GENERATE  CODE                                             02S1010 02601000
*        REFS(D80STAEA)                                         02S1010 02602000
*        SETS(D80STAEA); /*            RESCIND OUTSTANDING IGTD80 STAE  02603000
       IGTYSTAE  0,MF=(E,D80STAEA)                                      02604000
*RETURN42:                                                      01S1011 02605000
*  RFY (R0P,R1P,R2P,R3P,R4P,R5P,R6P,R7P,R8P,R9P,                01S1011 02606000
*       R10P,R11P,R12P,R13P,R14P,R15P) RSTD;                    01S1011 02607000
RETURN42 DS    0H                                               01S1012 02608000
*  GENERATE CODE(NOP 0);            /* TO KEEP THE COMPILER HONEST   */ 02609000
         NOP 0                                                          02610000
*  RFY (R0P,R1P,R2P,R3P,R4P,R5P,R6P,R7P,R8P,R9P,                01S1013 02611000
*       R10P,R11P,R12P,R13P,R14P,R15P) UNRSTD;                  01S1013 02612000
*  RETURN;                          /* NORMAL RETURN TO CALLING PGM. */ 02613000
@EL00001 L     @13,4(,@13)                                      01S1014 02614000
@EF00001 L     @00,@SIZDATD                                     01S1014 02615000
         LR    @01,@06                                          01S1014 02616000
         IGTYFSV  R,LV=(0),A=(1)                                        02617000
@ER00001 LM    @14,@12,12(@13)                                  01S1014 02618000
         BR    @14                                              01S1014 02619000
*                                   /*                               */ 02620000
*                                   /*                               */ 02621000
*CHRCNVRT:                                                      03S1015 02622000
* PROCEDURE;                                                    03S1015 02623000
CHRCNVRT STM   @14,@10,12(@13)                                  03S1015 02624000
         ST    @12,68(,@13)                                     03S1015 02625000
*  DO WHILE (ISBSCRPT<=DRLTH & OSBSCRPT<=121 & PRINTING=TRUE);  03S1016 02626000
         B     @DE01016                                         03S1016 02627000
@DL01016 DS    0H                                               03S1017 02628000
*                                   /* DO UNTIL EITHER THE INPUT     */ 02629000
*                                   /* BUFFER OR OUTPUT BUFFER OR    */ 02630000
*                                   /* BOTH IS EXHAUSTED.            */ 02631000
*    IF OSBSCRPT=1 THEN             /* IF THIS IS START OF A NEW LINE*/ 02632000
         C     OSBSCRPT,@CF00079                                03S1017 02633000
         BNE   @RF01017                                         03S1017 02634000
*      DO;                          /* THEN PREPARE FOR NEW LINE.    */ 02635000
*        PRNTLINE(1:1) = ' ';       /* CLEAR CARRIAGE CONTROL CHAR   */ 02636000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S1019 02637000
*        IF DUMPISCP=TRUE THEN      /* LINE ADDR COMPUTED IN HWORDS  */ 02638000
         TM    DUMPISCP,B'00100000'                             03S1020 02639000
         BNO   @RF01020                                         03S1020 02640000
*          LADDRESS = DRBSA + (ISBSCRPT-1)/2; /* ADDR IN HWORDS      */ 02641000
         LH    @00,ISBSCRPT                                     03S1021 02642000
         BCTR  @00,0                                            03S1021 02643000
         SRDA  @00,32                                           03S1021 02644000
         D     @00,@CF00073                                     03S1021 02645000
         AL    @01,DRBSA(,BUFFPTR)                              03S1021 02646000
         ST    @01,LADDRESS                                     03S1021 02647000
*        ELSE                       /* LINE ADDR COMPUTED IN FWORDS  */ 02648000
*          LADDRESS = DRBSA + (ISBSCRPT-1)/4; /* ADDR IN FWORDS      */ 02649000
         B     @RC01020                                         03S1022 02650000
@RF01020 LH    @00,ISBSCRPT                                     03S1022 02651000
         BCTR  @00,0                                            03S1022 02652000
         SRDA  @00,32                                           03S1022 02653000
         D     @00,@CF00106                                     03S1022 02654000
         AL    @01,DRBSA(,BUFFPTR)                              03S1022 02655000
         ST    @01,LADDRESS                                     03S1022 02656000
*        RFY R3F RSTD;              /* SECURE REG 3 FOR CONVERSION   */ 02657000
@RC01020 DS    0H                                               03S1024 02658000
*        DO INDEX=2 TO 4 BY 1;      /* LAST 3 BYTES OF BINARY ADDR   */ 02659000
         LA    @09,2                                            03S1024 02660000
         STH   @09,INDEX                                        03S1024 02661000
@DL01024 DS    0H                                               03S1025 02662000
*          R3F = ZERO;              /* INITIALLY, CLEAR ALL REGBYTES */ 02663000
         SLR   R3F,R3F                                          03S1025 02664000
*          R3F = HADDRESS(INDEX:INDEX); /* INSERT 1ST/NEXT BYTE      */ 02665000
         SLR   R3F,R3F                                          03S1026 02666000
         IC    R3F,HADDRESS-1(@09)                              03S1026 02667000
*          SRA(R3F,4);              /* SHIFT OUT LOW ORDER FOUR BITS */ 02668000
         SRA   R3F,4                                            03S1027 02669000
*          IF R3F>9 THEN            /* IF BITS SHOW NON-DECIMAL      */ 02670000
         LA    @09,9                                            03S1028 02671000
         CR    R3F,@09                                          03S1028 02672000
         BNH   @RF01028                                         03S1028 02673000
*            R3F = (R3F - 9)|'000000C0'X;/*CONVERT TO EBCDIC CHAR A-F*/ 02674000
         LCR   @09,@09                                          03S1029 02675000
         ALR   @09,R3F                                          03S1029 02676000
         O     @09,@CF03311                                     03S1029 02677000
         LR    R3F,@09                                          03S1029 02678000
*          ELSE                     /* OTHERWISE IT IS DECIMAL DIGIT */ 02679000
*            R3F = R3F | '000000F0'X;  /* CONVERT TO EBCDIC CHAR 0-9 */ 02680000
         B     @RC01028                                         03S1030 02681000
@RF01028 O     R3F,@CF03312                                     03S1030 02682000
*          OSBSCRPT = (INDEX-1)*2;  /* COMPUTE PRNTLINE POSITION     */ 02683000
@RC01028 LH    @09,INDEX                                        03S1031 02684000
         LR    OSBSCRPT,@09                                     03S1031 02685000
         BCTR  OSBSCRPT,0                                       03S1031 02686000
         ALR   OSBSCRPT,OSBSCRPT                                03S1031 02687000
*          PRNTLINE(OSBSCRPT:OSBSCRPT) = R3F;/* HIGH ORDER BITS CONVD*/ 02688000
         LR    @10,BUFFPTR2                                     03S1032 02689000
         BCTR  @10,0                                            03S1032 02690000
         STC   R3F,PRNTLINE(OSBSCRPT,@10)                       03S1032 02691000
*          R3F = HADDRESS(INDEX:INDEX) & '0F'X; /*GET 4 LOW ORDR BITS*/ 02692000
         LA    R3F,15                                           03S1033 02693000
         SLR   @10,@10                                          03S1033 02694000
         IC    @10,HADDRESS-1(@09)                              03S1033 02695000
         NR    R3F,@10                                          03S1033 02696000
*          IF R3F>9 THEN            /* IF BITS SHOW NON-DECIMAL      */ 02697000
         LA    @10,9                                            03S1034 02698000
         CR    R3F,@10                                          03S1034 02699000
         BNH   @RF01034                                         03S1034 02700000
*            R3F = (R3F - 9)|'000000C0'X;/*CONVERT TO EBCDIC CHAR A-F*/ 02701000
         LCR   @10,@10                                          03S1035 02702000
         ALR   @10,R3F                                          03S1035 02703000
         O     @10,@CF03311                                     03S1035 02704000
         LR    R3F,@10                                          03S1035 02705000
*          ELSE                     /* OTHERWISE IT IS DECIMAL DIGIT */ 02706000
*            R3F = R3F | '000000F0'X;  /* CONVERT TO EBCDIC CHAR 0-9 */ 02707000
         B     @RC01034                                         03S1036 02708000
@RF01034 O     R3F,@CF03312                                     03S1036 02709000
*          PRNTLINE(OSBSCRPT+1:OSBSCRPT+1) = R3F;/* LOW 4 BITS CONVD */ 02710000
@RC01034 STC   R3F,PRNTLINE(OSBSCRPT,BUFFPTR2)                  03S1037 02711000
*        END;                                                   03S1038 02712000
         LA    @09,1                                            03S1038 02713000
         AH    @09,INDEX                                        03S1038 02714000
         STH   @09,INDEX                                        03S1038 02715000
         C     @09,@CF00106                                     03S1038 02716000
         BNH   @DL01024                                         03S1038 02717000
*        RFY R3F UNRSTD;                                        03S1039 02718000
*        PRNTLINE(8:9) = '  ';      /* INSERT A COUPLE OF BLANKS     */ 02719000
         MVC   PRNTLINE+7(2,BUFFPTR2),@CC03375                  03S1040 02720000
*        OSBSCRPT = 10;             /* OUTPUT POINTER SET FOR CHAR'S */ 02721000
         LA    OSBSCRPT,10                                      03S1041 02722000
*        OSPACER = ZERO;            /* SPACE FOR BEGINNING OF DATA   */ 02723000
         SLR   @10,@10                                          03S1042 02724000
         STH   @10,OSPACER                                      03S1042 02725000
*      END;                                                     03S1043 02726000
*    ELSE;                          /* NOT AT NEW LINE BEGINNING     */ 02727000
@RF01017 DS    0H                                               03S1045 02728000
*    IF OSPACER<4 THEN              /*IF LESS THAN A QUARTET OF WORDS*/ 02729000
         LH    @10,OSPACER                                      03S1045 02730000
         C     @10,@CF00106                                     03S1045 02731000
         BNL   @RF01045                                         03S1045 02732000
*      DO;                                                      03S1046 02733000
*        PRNTLINE(OSBSCRPT:OSBSCRPT) = ' ';/* A BLANK BETWEEN WORDS  */ 02734000
         LR    @09,BUFFPTR2                                     03S1047 02735000
         ALR   @09,OSBSCRPT                                     03S1047 02736000
         BCTR  @09,0                                            03S1047 02737000
         MVI   PRNTLINE(@09),C' '                               03S1047 02738000
*        OSBSCRPT = OSBSCRPT + 1;   /* ADVANCE OUTPUT BUFFER INDEX   */ 02739000
         LA    @09,1                                            03S1048 02740000
         ALR   OSBSCRPT,@09                                     03S1048 02741000
*        OSPACER = OSPACER + 1;     /* INCREMENT QUARTET INDICATOR   */ 02742000
         ALR   @10,@09                                          03S1049 02743000
         STH   @10,OSPACER                                      03S1049 02744000
*      END;                                                     03S1050 02745000
*    ELSE                           /* END OF QUARTET - NOW 3 BLANKS */ 02746000
*      DO;                                                      03S1051 02747000
         B     @RC01045                                         03S1051 02748000
@RF01045 DS    0H                                               03S1052 02749000
*        PRNTLINE(OSBSCRPT:OSBSCRPT+2) = '   ';/* 3 BLANKS INSERTED  */ 02750000
         LR    @10,BUFFPTR2                                     03S1052 02751000
         ALR   @10,OSBSCRPT                                     03S1052 02752000
         BCTR  @10,0                                            03S1052 02753000
         MVC   PRNTLINE(3,@10),@CC03376                         03S1052 02754000
*        OSBSCRPT = OSBSCRPT + 3;   /* ADVANCE OUTPUT BUFFER INDEX   */ 02755000
         AL    OSBSCRPT,@CF00117                                03S1053 02756000
*        OSPACER = 1;               /* RESET WORD QUARTET INDICATOR  */ 02757000
         MVC   OSPACER(2),@CH00079                              03S1054 02758000
*      END;                                                     03S1055 02759000
*                        /* NOW CONVERT THE NEXT WORD OF DUMP DATA   */ 02760000
*      RFY R3F RSTD;                /* REGISTER USED FOR CONVERSION  */ 02761000
@RC01045 DS    0H                                               03S1057 02762000
*    DO INDEX=0 TO 3 BY 1 WHILE(ISBSCRPT<=DRLTH & OSBSCRPT<=121);       02763000
         SLR   @10,@10                                          03S1057 02764000
         STH   @10,INDEX                                        03S1057 02765000
@DL01057 LH    @10,ISBSCRPT                                     03S1057 02766000
         CH    @10,DRLTH(,BUFFPTR)                              03S1057 02767000
         BH    @DC01057                                         03S1057 02768000
         C     OSBSCRPT,@CF00114                                03S1057 02769000
         BH    @DC01057                                         03S1057 02770000
*                                   /* CONVERT FOUR WORDS OF INPUT   */ 02771000
*                                   /* DATA OR UNTIL A BUFFER END IS */ 02772000
*                                   /* ENCOUNTERED, 1 BYTE AT A TIME.*/ 02773000
*      R3F = ZERO;                  /* CLEAR HIBYTES BEFORE IC INSTR */ 02774000
         SLR   R3F,R3F                                          03S1058 02775000
*      R3F = INRECORD(ISBSCRPT);    /* REACH FOR NEXT INPUT CHARACTER*/ 02776000
         L     @09,BUFFPTR1                                     03S1059 02777000
         BCTR  @09,0                                            03S1059 02778000
         SLR   R3F,R3F                                          03S1059 02779000
         IC    R3F,INRECORD(@10,@09)                            03S1059 02780000
*      SRA(R3F,4);                  /* SHIFT OUT LOW ORDER FOUR BITS */ 02781000
         SRA   R3F,4                                            03S1060 02782000
*      IF R3F>9 THEN                /* IF BITS SHOW NON-DECIMAL      */ 02783000
         LA    @10,9                                            03S1061 02784000
         CR    R3F,@10                                          03S1061 02785000
         BNH   @RF01061                                         03S1061 02786000
*        R3F = (R3F - 9) | '000000C0'X;/* CONVERT TO EBCDIC CHAR A-F */ 02787000
         LCR   @10,@10                                          03S1062 02788000
         ALR   @10,R3F                                          03S1062 02789000
         O     @10,@CF03311                                     03S1062 02790000
         LR    R3F,@10                                          03S1062 02791000
*      ELSE                         /* OTHERWISE IT IS DECIMAL DIGIT */ 02792000
*        R3F = R3F | '000000F0'X;   /* CONVERT TO EBCDIC CHAR 0-9    */ 02793000
         B     @RC01061                                         03S1063 02794000
@RF01061 O     R3F,@CF03312                                     03S1063 02795000
*      PRNTLINE(OSBSCRPT:OSBSCRPT) = R3F;/* HIGH ORDER BITS CONVERTED*/ 02796000
@RC01061 LR    @10,BUFFPTR2                                     03S1064 02797000
         BCTR  @10,0                                            03S1064 02798000
         STC   R3F,PRNTLINE(OSBSCRPT,@10)                       03S1064 02799000
*      R3F = INRECORD(ISBSCRPT) & '0F'X;/* REACH FOR 4 LOW ORDER BITS*/ 02800000
         LH    @10,ISBSCRPT                                     03S1065 02801000
         LA    R3F,15                                           03S1065 02802000
         L     @09,BUFFPTR1                                     03S1065 02803000
         BCTR  @09,0                                            03S1065 02804000
         SLR   @15,@15                                          03S1065 02805000
         IC    @15,INRECORD(@10,@09)                            03S1065 02806000
         NR    R3F,@15                                          03S1065 02807000
*      IF R3F>9 THEN                /* IF BITS SHOW NON-DECIMAL      */ 02808000
         LA    @10,9                                            03S1066 02809000
         CR    R3F,@10                                          03S1066 02810000
         BNH   @RF01066                                         03S1066 02811000
*        R3F = (R3F - 9) | '000000C0'X;/* CONVERT TO EBCDIC CHAR A-F */ 02812000
         LCR   @10,@10                                          03S1067 02813000
         ALR   @10,R3F                                          03S1067 02814000
         O     @10,@CF03311                                     03S1067 02815000
         LR    R3F,@10                                          03S1067 02816000
*      ELSE                         /* OTHERWISE IT IS DECIMAL DIGIT */ 02817000
*        R3F = R3F | '000000F0'X;   /* CONVERT TO EBCDIC CHAR 0-9    */ 02818000
         B     @RC01066                                         03S1068 02819000
@RF01066 O     R3F,@CF03312                                     03S1068 02820000
*      PRNTLINE(OSBSCRPT+1:OSBSCRPT+1) = R3F;/* LOW 4 BITS CONVERTED */ 02821000
@RC01066 STC   R3F,PRNTLINE(OSBSCRPT,BUFFPTR2)                  03S1069 02822000
*      ISBSCRPT = ISBSCRPT + 1;     /* ADVANCE TO NEXT INPUT CHAR    */ 02823000
         LH    @10,ISBSCRPT                                     03S1070 02824000
         LA    @10,1(,@10)                                      03S1070 02825000
         STH   @10,ISBSCRPT                                     03S1070 02826000
*      OSBSCRPT = OSBSCRPT + 2;     /* ADVANCE TO NEXT OUT POSITIONS */ 02827000
         AL    OSBSCRPT,@CF00073                                03S1071 02828000
*    END;                           /* END OF ONE WORD CONVERSION    */ 02829000
         LA    @10,1                                            03S1072 02830000
         AH    @10,INDEX                                        03S1072 02831000
         STH   @10,INDEX                                        03S1072 02832000
         C     @10,@CF00117                                     03S1072 02833000
         BNH   @DL01057                                         03S1072 02834000
@DC01057 DS    0H                                               03S1073 02835000
*    RFY R3F UNRSTD;                /* GIVE BACK REGISTER 3          */ 02836000
*  END;                             /* END OF ONE OR BOTH BUFFERS    */ 02837000
@DE01016 LH    @10,ISBSCRPT                                     03S1074 02838000
         CH    @10,DRLTH(,BUFFPTR)                              03S1074 02839000
         BH    @DC01016                                         03S1074 02840000
         C     OSBSCRPT,@CF00114                                03S1074 02841000
         BH    @DC01016                                         03S1074 02842000
         TM    PRINTING,B'10000000'                             03S1074 02843000
         BO    @DL01016                                         03S1074 02844000
@DC01016 DS    0H                                               03S1075 02845000
* END CHRCNVRT;                                                 03S1075 02846000
@EL00002 DS    0H                                               03S1075 02847000
@EF00002 DS    0H                                               03S1075 02848000
@ER00002 LM    @14,@10,12(@13)                                  03S1075 02849000
         L     @12,68(,@13)                                     03S1075 02850000
         BR    @14                                              03S1075 02851000
*                                   /*                               */ 02852000
*EXCP3838:                                                      03S1076 02853000
* PROCEDURE;                                                    03S1076 02854000
EXCP3838 STM   @14,@12,@SA00003                                 03S1076 02855000
*  EXCPECB = '00000000'X;           /* CLEAR ECB TO BE USED FOR WAIT */ 02856000
         L     @09,ECBPTR                                       03S1077 02857000
         MVC   EXCPECB(4,@09),@CB03256                          03S1077 02858000
*  RFY R2P RSTD;                    /* EXCP RETRY LOOP COUNTER       */ 02859000
*  DO R2P = 10 TO 1 BY -1           /* RETRY EXCP UNTIL SUCCESSFUL   */ 02860000
*     WHILE(EXCPECB(1:1) ^= '7F'X); /* OR UNTIL RETRY EXHAUSTED.     */ 02861000
         LA    R2P,10                                           03S1079 02862000
@DL01079 L     @09,ECBPTR                                       03S1079 02863000
         CLI   EXCPECB(@09),X'7F'                               03S1079 02864000
         BE    @DC01079                                         03S1079 02865000
*  RFY R1P RSTD;                    /* SECURE REG 1 FOR EXCP         */ 02866000
*  R1P = IOBSTPTR;                  /* INSERT IOB ADDR IN REG 1      */ 02867000
         L     R1P,IOBSTPTR                                     03S1081 02868000
*  EXCPECB = '00000000'X;           /* CLEAR ECB TO BE USED FOR WAIT */ 02869000
         MVC   EXCPECB(4,@09),@CB03256                          03S1082 02870000
*  GENERATE   CODE                                              03S1083 02871000
*      REFS(IOBSTDRD,CCWCHAIN,R1P)                              03S1083 02872000
*      SETS(IOBSTDRD,EXCPECB);      /*                          03S1083 02873000
     EXCP   (1)                                                         02874000
*  RFY R1P UNRSTD;                  /* RELEASE REG 1 FROM EXCP       */ 02875000
*                                                               03S1084 02876000
*                                                               03S1084 02877000
*    DO; /*IGTYWAIT ECB(EXCPECB)LONG(NO)*/                      03S1085 02878000
*    RFY (GPR00F,GPR01P) RSTD; /* REGISTERS USED */             03S1086 02879000
*    DCL BIT0015X BIT(8) BASED(ADDR(EXCPECB)); /* OVERLAY BYTE-0 OF ECB 02880000
**/                                                             03S1087 02881000
*    IF BIT0015X(2) = '0'B THEN /* IF ECB NOT ALREADY POSTED */ 03S1088 02882000
         L     @09,ECBPTR                                       03S1088 02883000
         TM    BIT0015X(@09),B'01000000'                        03S1088 02884000
         BNZ   @RF01088                                         03S1088 02885000
*    DO; /* THEN ISSUE WAIT SVC */                              03S1089 02886000
*    GPR01P = ADDR(EXCPECB); /* POINT TO ECB */                 03S1090 02887000
         LR    GPR01P,@09                                       03S1090 02888000
*    GPR00F = 1; /* WAIT COUNT */                               03S1091 02889000
         LA    GPR00F,1                                         03S1091 02890000
*    SVC(1); /* WAIT FOR ECB POSTING */                         03S1092 02891000
         SVC   1                                                03S1092 02892000
*    END; /* ECB WAIT COMPLETE */                               03S1093 02893000
*    RFY (GPR00F,GPR01P) UNRSTD; /* FINISHED WITH REGISTERS */  03S1094 02894000
@RF01088 DS    0H                                               03S1095 02895000
*    END; /* ECB WAIT COMPLETE */ /* ISSUE WAIT ON EXCP         */      02896000
*  IF EXCPECB(1) ^= '7F'X           /* SEE IF I/O IS OK      @ZA25361*/ 02897000
*     & PICMD = 3 THEN              /* IF NOT AND WE ARE READING THE    02898000
*                                      DUMP DATA, THEN WE MUST TRY TO   02899000
*                                      READ THE SAME BLOCK OVER AGAIN   02900000
*                                      (UP TO 10 TIMES).  SO SET THE    02901000
*                                      DUMP COMMAND CODE TO THE RETRY   02902000
*                                      VALUE.                @ZA25361*/ 02903000
         L     @09,ECBPTR                                       03S1096 02904000
         CLI   EXCPECB(@09),X'7F'                               03S1096 02905000
         BE    @RF01096                                         03S1096 02906000
         CLC   PICMD(2),@CH00117                                03S1096 02907000
         BNE   @RF01096                                         03S1096 02908000
*    PICMD = 5;                     /* RETRY VALUE.          @ZA25361*/ 02909000
         MVC   PICMD(2),@CH00126                                03S1097 02910000
*  END;                             /* I/O ISSUED TO 3838            */ 02911000
@RF01096 BCTR  R2P,0                                            03S1098 02912000
         LTR   R2P,R2P                                          03S1098 02913000
         BP    @DL01079                                         03S1098 02914000
@DC01079 DS    0H                                               03S1099 02915000
*  IF PICMD = 5 THEN                /* IF WE CHANGED THE CODE        */ 02916000
         CLC   PICMD(2),@CH00126                                03S1099 02917000
         BNE   @RF01099                                         03S1099 02918000
*    PICMD = 3;                     /* CHANGE IT BACK.       @ZA25361*/ 02919000
         MVC   PICMD(2),@CH00117                                03S1100 02920000
*  RFY R2P UNRSTD;                  /* DONE WITH LOPP CONTROL        */ 02921000
* END EXCP3838;                                                 03S1102 02922000
@EL00003 DS    0H                                               03S1102 02923000
@EF00003 DS    0H                                               03S1102 02924000
@ER00003 LM    @14,@12,@SA00003                                 03S1102 02925000
         BR    @14                                              03S1102 02926000
*                                   /*                               */ 02927000
*GETTEMP:                                                       03S1103 02928000
* PROCEDURE;                                                    03S1103 02929000
GETTEMP  STM   @14,@03,@SA00004                                 03S1103 02930000
         STM   @05,@12,@SA00004+24                              03S1103 02931000
*  RFY R1P RSTD;                    /* BUFFER ADDRESS GIVEN IN REG 1 */ 02932000
*  GENERATE  CODE                                               03S1105 02933000
*      REFS(DCBTEMPA)                                           03S1105 02934000
*      SETS(R1P,DCBTEMPA);          /*                          03S1105 02935000
     GET   DCBTEMPA                                                     02936000
*  BUFFPTR = R1P;                   /* GRAB THE INPUT BUFFER ADDRESS */ 02937000
         LR    BUFFPTR,R1P                                      03S1106 02938000
*  RFY R1P UNRSTD;                  /* GIVE BACK REG 1               */ 02939000
*  BUFFPTR1 = BUFFPTR + LENGTH(DRHEADER);/* INRECORD FOLLOWS DRHEADER*/ 02940000
         LA    @09,8                                            03S1108 02941000
         ALR   @09,BUFFPTR                                      03S1108 02942000
         ST    @09,BUFFPTR1                                     03S1108 02943000
* END GETTEMP;                                                  03S1109 02944000
@EL00004 DS    0H                                               03S1109 02945000
@EF00004 DS    0H                                               03S1109 02946000
@ER00004 LM    @14,@03,@SA00004                                 03S1109 02947000
         LM    @05,@12,@SA00004+24                              03S1109 02948000
         BR    @14                                              03S1109 02949000
*                                   /*                               */ 02950000
*LNREPEAT:                                                      03S1110 02951000
*  PROCEDURE;                                                   03S1110 02952000
LNREPEAT STM   @14,@01,@SA00005                                 03S1110 02953000
         STM   @03,@12,@SA00005+16                              03S1110 02954000
*  IF PRNTLINE(11:121)=PREVLINE(11:121) THEN           /* IF REPEATER*/ 02955000
         CLC   PRNTLINE+10(111,BUFFPTR2),PREVLINE+10            03S1111 02956000
         BNE   @RF01111                                         03S1111 02957000
*    DO;                                                        03S1112 02958000
*      IF REPEATNG=TRUE THEN        /* AND IF OTHERS ALREADY REPEAT  */ 02959000
         TM    REPEATNG,B'00000100'                             03S1113 02960000
         BNO   @RF01113                                         03S1113 02961000
*        DO;                                                    03S1114 02962000
*          RPTADDR2 = PRNTLINE(2:7);/* SAVE ADDR AS LATEST LINE ADDR */ 02963000
         MVC   RPTADDR2(6),PRNTLINE+1(BUFFPTR2)                 03S1115 02964000
*        END;                                                   03S1116 02965000
*      ELSE                         /* OTHERWISE, THIS IS 1ST REPEAT */ 02966000
*        DO;                                                    03S1117 02967000
         B     @RC01113                                         03S1117 02968000
@RF01113 DS    0H                                               03S1118 02969000
*          RPTADDR1 = PRNTLINE(2:7);/* SAVE ADDR AS FIRST LINE ADDR  */ 02970000
         MVC   RPTADDR1(6),PRNTLINE+1(BUFFPTR2)                 03S1118 02971000
*          RPTADDR2 = PRNTLINE(2:7);/* IT MIGHT BE LAST REPEAT ALSO  */ 02972000
         MVC   RPTADDR2(6),PRNTLINE+1(BUFFPTR2)                 03S1119 02973000
*          REPEATNG = TRUE;         /* TURN ON REPEAT INDICATOR      */ 02974000
         OI    REPEATNG,B'00000100'                             03S1120 02975000
*          PREVLINE = PRNTLINE;     /* SAVE LINE FOR FUTURE REFERENCE*/ 02976000
         MVC   PREVLINE(121),PRNTLINE(BUFFPTR2)                 03S1121 02977000
*        END;                                                   03S1122 02978000
*                                   /* REPEATING LINE WILL NOT GO OUT*/ 02979000
*    END;                                                       03S1123 02980000
*  ELSE                             /* NO REPEATING BY LINE AT HAND  */ 02981000
*    DO;                                                        03S1124 02982000
         B     @RC01111                                         03S1124 02983000
@RF01111 DS    0H                                               03S1125 02984000
*      IF REPEATNG=TRUE THEN        /* BUT IF THIS ENDS A REPEATING  */ 02985000
         TM    REPEATNG,B'00000100'                             03S1125 02986000
         BNO   @RF01125                                         03S1125 02987000
*        DO;                        /* REPEAT MSG MUST BE OUTPUT     */ 02988000
*          PREVLINE = PRNTLINE;     /* SAVE LINE JUST REFORMATTED    */ 02989000
         MVC   PREVLINE(121),PRNTLINE(BUFFPTR2)                 03S1127 02990000
*                             /* SETUP REPEAT MESSAGE IN PRNTLINE    */ 02991000
*          PRNTLINE = REPETMSG;     /* MOVE IN SKELETON OF MESSAGE   */ 02992000
         MVC   PRNTLINE(121,BUFFPTR2),REPETMSG                  03S1128 02993000
*                             /* INSERT TWO ADDRESSES INTO MESSAGE   */ 02994000
*          PRNTLINE(16:21) = RPTADDR1;/* MOVE IN LOW ADDR OF RANGE   */ 02995000
         MVC   PRNTLINE+15(6,BUFFPTR2),RPTADDR1                 03S1129 02996000
*          PRNTLINE(31:36) = RPTADDR2;/* MOVE IN HIGH ADDR OF RANGE  */ 02997000
         MVC   PRNTLINE+30(6,BUFFPTR2),RPTADDR2                 03S1130 02998000
*                   /* NOW OUTPUT BOTH MSG & THE LINE JUST FORMED    */ 02999000
*          IF LINCOUNT=APCTLINE THEN/* IF BOTTOM OF PAGE NOW REACHED */ 03000000
         CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S1131 03001000
         BNE   @RF01131                                         03S1131 03002000
*            CALL TOPOFPAG;         /* THEN HAVE PAGE HEADER PRINTED */ 03003000
         BAL   @14,TOPOFPAG                                     03S1132 03004000
*          ELSE;                    /* ELSE PRINT NEXT DUMP LINE NOW */ 03005000
@RF01131 DS    0H                                               03S1134 03006000
*          CALL PUT3838;            /* OUT GOES THE REPEAT MESSAGE   */ 03007000
         BAL   @14,PUT3838                                      03S1134 03008000
*          PRNTLINE = PREVLINE;     /* NOW MOVE THE LAST LINE BACK IN*/ 03009000
         MVC   PRNTLINE(121,BUFFPTR2),PREVLINE                  03S1135 03010000
*          REPEATNG = FALSE;        /* REPEATING NO LONGER PREVAILS  */ 03011000
         NI    REPEATNG,B'11111011'                             03S1136 03012000
*        END;                                                   03S1137 03013000
*      ELSE                         /* NO REPEAT & NONE HAD EXISTED  */ 03014000
*        PREVLINE = PRNTLINE;       /* MOST COMMON CASE: SAVE LINE   */ 03015000
         B     @RC01125                                         03S1138 03016000
@RF01125 MVC   PREVLINE(121),PRNTLINE(BUFFPTR2)                 03S1138 03017000
*      IF LINCOUNT=APCTLINE THEN    /* IF BOTTOM OF PAGE NOW REACHED */ 03018000
@RC01125 CLC   LINCOUNT(2),APCTLINE(APCTPTR)                    03S1139 03019000
         BNE   @RF01139                                         03S1139 03020000
*        CALL TOPOFPAG;             /* THEN HAVE PAGE HEADER PRINTED */ 03021000
         BAL   @14,TOPOFPAG                                     03S1140 03022000
*      ELSE;                        /* ELSE PRINT NEXT DUMP LINE NOW */ 03023000
@RF01139 DS    0H                                               03S1142 03024000
*      CALL PUT3838;                /* PRINT LAST DUMP LINE FORMED   */ 03025000
         BAL   @14,PUT3838                                      03S1142 03026000
*    END;                                                       03S1143 03027000
*  END LNREPEAT;                                                03S1144 03028000
@EL00005 DS    0H                                               03S1144 03029000
@EF00005 DS    0H                                               03S1144 03030000
@ER00005 LM    @14,@01,@SA00005                                 03S1144 03031000
         LM    @03,@12,@SA00005+16                              03S1144 03032000
         BR    @14                                              03S1144 03033000
*                                   /*                               */ 03034000
*PADBLANX:                                                      03S1145 03035000
*  PROCEDURE;                                                   03S1145 03036000
PADBLANX STM   @14,@12,12(@13)                                  03S1145 03037000
*              DO INDEX=OSBSCRPT TO 121 BY 1;                   03S1146 03038000
         LR    @10,OSBSCRPT                                     03S1146 03039000
         STH   @10,INDEX                                        03S1146 03040000
         B     @DE01146                                         03S1146 03041000
@DL01146 DS    0H                                               03S1147 03042000
*                PRNTLINE(INDEX:INDEX) = ' '; /* DO IT THE HARD WAY  */ 03043000
         ALR   @10,BUFFPTR2                                     03S1147 03044000
         BCTR  @10,0                                            03S1147 03045000
         MVI   PRNTLINE(@10),C' '                               03S1147 03046000
*              END;                                             03S1148 03047000
         LH    @09,INDEX                                        03S1148 03048000
         AL    @09,@CF00079                                     03S1148 03049000
         LR    @10,@09                                          03S1148 03050000
         STH   @10,INDEX                                        03S1148 03051000
@DE01146 C     @10,@CF00114                                     03S1148 03052000
         BNH   @DL01146                                         03S1148 03053000
*  END PADBLANX;                                                03S1149 03054000
@EL00006 DS    0H                                               03S1149 03055000
@EF00006 DS    0H                                               03S1149 03056000
@ER00006 LM    @14,@12,12(@13)                                  03S1149 03057000
         BR    @14                                              03S1149 03058000
*                                   /*                               */ 03059000
*PUT3838:                                                       03S1150 03060000
*  PROCEDURE;                                                   03S1150 03061000
PUT3838  STM   @14,@01,@SA00007                                 03S1150 03062000
         STM   @03,@12,@SA00007+16                              03S1150 03063000
*  RFY R1P RSTD;                    /* BUFFER PTR RETURNED IN REG 1  */ 03064000
*  GENERATE   CODE                                              03S1152 03065000
*      REFS(DCB3838A)                                           03S1152 03066000
*      SETS(R1P,DCB3838A);          /*                          03S1152 03067000
     PUT   DCB3838A                                                     03068000
*  BUFFPTR2 = R1P;                  /* SAVE PTR TO OUTPUT BUFFER     */ 03069000
         LR    BUFFPTR2,R1P                                     03S1153 03070000
*  RFY R1P UNRSTD;                  /* GIVE BACK REG 1               */ 03071000
*  LINCOUNT = LINCOUNT + 1;         /* INCREMENT COUNT OF LINES/PAGE */ 03072000
         LH    @09,LINCOUNT                                     03S1155 03073000
         LA    @09,1(,@09)                                      03S1155 03074000
         STH   @09,LINCOUNT                                     03S1155 03075000
*  END PUT3838;                                                 03S1156 03076000
@EL00007 DS    0H                                               03S1156 03077000
@EF00007 DS    0H                                               03S1156 03078000
@ER00007 LM    @14,@01,@SA00007                                 03S1156 03079000
         LM    @03,@12,@SA00007+16                              03S1156 03080000
         BR    @14                                              03S1156 03081000
*                                  /*                                */ 03082000
*      /* THIS PROCEDURE IS USED TO GENERATE A SEPARATOR PAGE   03S1157 03083000
*         BETWEEN THE DUMPS PRODUCED BY IGTD80.  THESE FACILITATE       03084000
*         THE OPERATOR'S JOB IN SEPARATING THE DUMPS.  THE SEPARATOR    03085000
*         PAGE WILL EITHER CONTAIN THE JOB NAME OF THE JOB THAT 03S1157 03086000
*         REQUESTED THE PORT DUMP, OR WILL CONTAIN THE WORDS 'VPSS      03087000
*         DUMP' FOR OPERATOR INITIATED DUMPS.                        */ 03088000
*SEPPAGE: PROC;                    /* ENTRY POINT.                   */ 03089000
SEPPAGE  STM   @14,@01,@SA00008                                 03S1157 03090000
         STM   @03,@12,@SA00008+16                              03S1157 03091000
*   DCL JSPJBNAM CHAR(8);          /* CONTAINS THE JOBNAME, OR 'VPSS'*/ 03092000
*   DCL JSPJBNUM CHAR(8);          /* CONTAINS BLANKS, OR 'DUMP'.    */ 03093000
*   DCL JSPJBC1  PTR(31);          /* NUMBER OF CHARS IN THE JOBNAME.*/ 03094000
*   DCL JSPJBC2  PTR(31);          /* NUMBER OF CHARS IN THE JOBNAME.*/ 03095000
*   DCL JSPJBOFF PTR(31);          /* OFFSET INTO THE PRINT LINE.    */ 03096000
*   DCL JSPJNOFF PTR(31);          /* OFFSET INTO THE PRINT LINE.    */ 03097000
*   DCL JSPTBL (8) PTR(31)         /* OFFSETS INTO PRINT LINE BASED     03098000
*                                     ON THE NUMBER OF CHARS IN THE     03099000
*                                     JOB NAME.                      */ 03100000
*              STATIC LOCAL INIT(62,55,48,41,34,27,20,13);      03S1164 03101000
*   DCL JSPLNCT  PTR(31);          /* LOOP COUNTER.                  */ 03102000
*   DCL BLOCKGEN ENTRY BASED(JSPSD095) /* ENTRY TO IEFSD095.         */ 03103000
*       VALRG(*) OPTIONS(NOEXIT,NOFLOWS,SEQFLOW,SETS(1,2,3,4)); 03S1166 03104000
*   DCL JSPSD095 PTR(31);          /* ADDRESS OF IEFSD095.           */ 03105000
*  RFY APUBPTR RSTD;               /* CONTAINS PTR TO THE MASTER APUB*/ 03106000
*   GEN (LOAD EP=IEFSD095);        /* LOAD IEFSD095.                 */ 03107000
         LOAD EP=IEFSD095                                               03108000
*   GEN (ST   R0P,JSPSD095);       /* STORE THE ADDRESS.             */ 03109000
         ST   R0P,JSPSD095                                              03110000
*  IF UNITADDR (3:3) ^= '0' THEN   /* DETERMINE IF PORT DUMP OR      */ 03111000
         CLI   UNITADDR+2,C'0'                                  03S1171 03112000
         BE    @RF01171                                         03S1171 03113000
*    DO;                           /* OPERATOR REQUESTED DUMP. ^0 =     03114000
*                                     PORT DUMP.                     */ 03115000
*      JBNMPTR = APUBPTR;          /* PTR TO MASTER APUB.            */ 03116000
         ST    APUBPTR,JBNMPTR                                  03S1173 03117000
*      DO WHILE UNITADDR(3:3)      /* SEARCH FOR RIGHT PORT.         */ 03118000
*         ^= JBNMPTR -> APUBUCB -> UCBNAME(3:3);                03S1174 03119000
         B     @DE01174                                         03S1174 03120000
@DL01174 DS    0H                                               03S1175 03121000
*        JBNMPTR = JBNMPTR -> APUBAPUB; /* ADVANCE TO NEXT PORT.     */ 03122000
         L     @11,JBNMPTR                                      03S1175 03123000
         L     @11,APUBAPUB(,@11)                               03S1175 03124000
         ST    @11,JBNMPTR                                      03S1175 03125000
*      END;                        /* DROP THRU WHEN PORT IS FOUND.  */ 03126000
@DE01174 L     @11,JBNMPTR                                      03S1176 03127000
         L     @09,APUBUCB(,@11)                                03S1176 03128000
         CLC   UNITADDR+2(1),UCBNAME+2(@09)                     03S1176 03129000
         BNE   @DL01174                                         03S1176 03130000
*      JSPJBNAM = JBNMPTR -> APUBJBNM; /* GET JOB NAME.              */ 03131000
         MVC   JSPJBNAM(8),APUBJBNM(@11)                        03S1177 03132000
*      DO JSPJBC1 = 8 TO 1 BY -1   /* LOOK FOR FIRST NON-BLANK.      */ 03133000
*         WHILE JSPJBNAM(JSPJBC1) = ' '; /* SO JOBNAME LEN IS KNOWN. */ 03134000
         LA    @11,8                                            03S1178 03135000
         ST    @11,JSPJBC1                                      03S1178 03136000
@DL01178 LA    @09,JSPJBNAM-1(@11)                              03S1178 03137000
         CLI   0(@09),C' '                                      03S1178 03138000
         BNE   @DC01178                                         03S1178 03139000
*      END;                        /* END OF JOB NAME LEN DETERMINATN*/ 03140000
         BCTR  @11,0                                            03S1179 03141000
         ST    @11,JSPJBC1                                      03S1179 03142000
         LTR   @11,@11                                          03S1179 03143000
         BP    @DL01178                                         03S1179 03144000
@DC01178 DS    0H                                               03S1180 03145000
*      JSPJBOFF = JSPTBL(JSPJBC1); /* PICK UP PROPER OFFSET INTO LINE*/ 03146000
         L     @09,JSPJBC1                                      03S1180 03147000
         SLA   @09,2                                            03S1180 03148000
         L     JSPJBOFF,JSPTBL-4(@09)                           03S1180 03149000
*      JSPJBNUM = 'PORTDUMP';      /* SECOND HALF OF SEPARATOR.      */ 03150000
         MVC   JSPJBNUM(8),@CC03407                             03S1181 03151000
*      JSPJNOFF = JSPTBL(8);       /* OFFSET.                        */ 03152000
         L     JSPJNOFF,JSPTBL+28                               03S1182 03153000
*      JSPJBC2  = 8;               /* NUMBER OF CHARS.               */ 03154000
         MVC   JSPJBC2(4),@CF00104                              03S1183 03155000
*    END;                          /* END OF PORT DUMP SET UP.       */ 03156000
*  ELSE                            /* IT IS AN OPERATOR REQUEST.     */ 03157000
*    DO;                           /* OPERATOR REQUESTED DUMP.       */ 03158000
         B     @RC01171                                         03S1185 03159000
@RF01171 DS    0H                                               03S1186 03160000
*      JSPJBNAM = APCTSSID;        /* SUBSYSTEM NAME.                */ 03161000
         MVI   JSPJBNAM+4,C' '                                  03S1186 03162000
         MVC   JSPJBNAM+5(3),JSPJBNAM+4                         03S1186 03163000
         MVC   JSPJBNAM(4),APCTSSID(APCTPTR)                    03S1186 03164000
*      JSPJBOFF = JSPTBL(4);       /* OFFSET.                        */ 03165000
         L     @09,JSPTBL+12                                    03S1187 03166000
         LR    JSPJBOFF,@09                                     03S1187 03167000
*      JSPJBC1 = 4;                /* NUMBER OF CHARS IN THE NAME.   */ 03168000
         LA    @04,4                                            03S1188 03169000
         ST    @04,JSPJBC1                                      03S1188 03170000
*      JSPJBNUM = 'DUMP';          /* SECOND LINE.                   */ 03171000
         MVI   JSPJBNUM+4,C' '                                  03S1189 03172000
         MVC   JSPJBNUM+5(3),JSPJBNUM+4                         03S1189 03173000
         MVC   JSPJBNUM(4),@CC03272                             03S1189 03174000
*      JSPJNOFF = JSPTBL(4);       /* OFFSET TO SECOND PART.         */ 03175000
         LR    JSPJNOFF,@09                                     03S1190 03176000
*      JSPJBC2  = 4;               /* SECOND COUNT.                  */ 03177000
         ST    @04,JSPJBC2                                      03S1191 03178000
*    END;                          /* END OF OPERATOR DUMP SETUP.    */ 03179000
*    PRNTLINE(1:121) = '1';        /* BLANK LINE WITH EJECT.         */ 03180000
@RC01171 MVI   PRNTLINE+1(BUFFPTR2),C' '                        03S1193 03181000
         MVC   PRNTLINE+2(119,BUFFPTR2),PRNTLINE+1(BUFFPTR2)    03S1193 03182000
         MVI   PRNTLINE(BUFFPTR2),C'1'                          03S1193 03183000
*    DO JSPLNCT = 1 TO 12 BY 1;    /* BUILD 12 LINES OF BLOCK CHARS. */ 03184000
         LA    @09,1                                            03S1194 03185000
         ST    @09,JSPLNCT                                      03S1194 03186000
@DL01194 DS    0H                                               03S1195 03187000
*      CALL BLOCKGEN(JSPJBNAM,     /* CALL BLOCK CHAR GENERATOR.     */ 03188000
*      JSPLNCT,                    /* INPUT IS CHAR STRING, LINE TO  */ 03189000
*      PRNTLINE(JSPJBOFF-JSPLNCT+1), /* BUILD, LINE TO BUILD IT IN   */ 03190000
*      JSPJBC1);                   /* AND CHAR COUNT.                */ 03191000
         LA    @04,JSPJBNAM                                     03S1195 03192000
         ST    @04,@AL00001                                     03S1195 03193000
         LA    @04,JSPLNCT                                      03S1195 03194000
         ST    @04,@AL00001+4                                   03S1195 03195000
         LCR   @09,@09                                          03S1195 03196000
         ALR   @09,JSPJBOFF                                     03S1195 03197000
         LA    @09,PRNTLINE(@09,BUFFPTR2)                       03S1195 03198000
         ST    @09,@AL00001+8                                   03S1195 03199000
         LA    @09,JSPJBC1                                      03S1195 03200000
         ST    @09,@AL00001+12                                  03S1195 03201000
         L     @15,JSPSD095                                     03S1195 03202000
         LA    @01,@AL00001                                     03S1195 03203000
         BALR  @14,@15                                          03S1195 03204000
*      CALL PUT3838;               /* PRINT THE LINE.                */ 03205000
         BAL   @14,PUT3838                                      03S1196 03206000
*      PRNTLINE(1:121) = '';       /* CLEAR THE NEW LINE.            */ 03207000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S1197 03208000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S1197 03209000
*    END;                          /* END OF FIRST PART OF SEPARATOR.*/ 03210000
         LA    @09,1                                            03S1198 03211000
         AL    @09,JSPLNCT                                      03S1198 03212000
         ST    @09,JSPLNCT                                      03S1198 03213000
         C     @09,@CF00195                                     03S1198 03214000
         BNH   @DL01194                                         03S1198 03215000
*    DO JSPLNCT = 1 TO 5 BY 1;     /* DO BLANK LINES BETWEEN SECTIONS*/ 03216000
         LA    @11,1                                            03S1199 03217000
         ST    @11,JSPLNCT                                      03S1199 03218000
@DL01199 DS    0H                                               03S1200 03219000
*      CALL PUT3838;               /* WRITE THE LINE.                */ 03220000
         BAL   @14,PUT3838                                      03S1200 03221000
*      PRNTLINE(1:121) = '';       /* BLANK THE NEW LINE.            */ 03222000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S1201 03223000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S1201 03224000
*    END;                          /* END OF BLANK LINES.            */ 03225000
         LA    @11,1                                            03S1202 03226000
         AL    @11,JSPLNCT                                      03S1202 03227000
         ST    @11,JSPLNCT                                      03S1202 03228000
         C     @11,@CF00126                                     03S1202 03229000
         BNH   @DL01199                                         03S1202 03230000
*    DO JSPLNCT = 1 TO 12 BY 1;    /* BUILD SECOND PART.             */ 03231000
         LA    @11,1                                            03S1203 03232000
         ST    @11,JSPLNCT                                      03S1203 03233000
@DL01203 DS    0H                                               03S1204 03234000
*      CALL BLOCKGEN(JSPJBNUM,     /* CALL BLOCK CHAR GENERATOR.     */ 03235000
*      JSPLNCT,                    /* INPUT IS CHAR STRING, LINE TO  */ 03236000
*      PRNTLINE(JSPJNOFF-JSPLNCT+1), /* BUILD, LINE TO BUILD IT IN   */ 03237000
*      JSPJBC2);                   /* AND CHAR COUNT.                */ 03238000
         LA    @09,JSPJBNUM                                     03S1204 03239000
         ST    @09,@AL00001                                     03S1204 03240000
         LA    @09,JSPLNCT                                      03S1204 03241000
         ST    @09,@AL00001+4                                   03S1204 03242000
         LCR   @11,@11                                          03S1204 03243000
         ALR   @11,JSPJNOFF                                     03S1204 03244000
         LA    @11,PRNTLINE(@11,BUFFPTR2)                       03S1204 03245000
         ST    @11,@AL00001+8                                   03S1204 03246000
         LA    @11,JSPJBC2                                      03S1204 03247000
         ST    @11,@AL00001+12                                  03S1204 03248000
         L     @15,JSPSD095                                     03S1204 03249000
         LA    @01,@AL00001                                     03S1204 03250000
         BALR  @14,@15                                          03S1204 03251000
*      CALL PUT3838;               /* PRINT THE LINE.                */ 03252000
         BAL   @14,PUT3838                                      03S1205 03253000
*      PRNTLINE(1:121) = '';       /* CLEAR THE NEW LINE.            */ 03254000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S1206 03255000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S1206 03256000
*    END;                          /* END OF SECOND PART.            */ 03257000
         LA    @11,1                                            03S1207 03258000
         AL    @11,JSPLNCT                                      03S1207 03259000
         ST    @11,JSPLNCT                                      03S1207 03260000
         C     @11,@CF00195                                     03S1207 03261000
         BNH   @DL01203                                         03S1207 03262000
*    GEN (DELETE EP=IEFSD095);     /* ELIMINATE THE LOAD MODULE.     */ 03263000
         DELETE EP=IEFSD095                                             03264000
*    RETURN;                       /* BACK TO CALLER.                */ 03265000
@EL00008 DS    0H                                               03S1209 03266000
@EF00008 DS    0H                                               03S1209 03267000
@ER00008 LM    @14,@01,@SA00008                                 03S1209 03268000
         LM    @03,@12,@SA00008+16                              03S1209 03269000
         BR    @14                                              03S1209 03270000
*  RFY APUBPTR UNRSTD;             /* RELEASE REG.                   */ 03271000
*  END;                            /* END OF SEPARATOR PROC.         */ 03272000
*                                   /*                               */ 03273000
*STAERTRY:                                                      03S1212 03274000
* PROCEDURE;                                                    03S1212 03275000
STAERTRY STM   @14,@12,@SA00009                                 03S1212 03276000
*        /* THIS (E)STAE RETRY (CLEANUP) CODE SERVES, IN THE EVENT   */ 03277000
*        /* OF AN ABNORMAL OCCURRENCE IN IGTD80, TO CLOSE ANY DATA   */ 03278000
*        /* SETS STILL OPEN, TO FREE BUFFERS, AND ALSO TO SPECIFY A  */ 03279000
*        /* REIPL OF THE 3838 IF ONE IS NEEDED AND NO COMMAND TO     */ 03280000
*        /* REIPL HAS ALREADY BEEN QUEUED.                           */ 03281000
*  DO;                                                          03S1213 03282000
*    RFY (R0P,R1P,R2P,R3P,R4P,R5P,R6P,R7P,R8P,R9P,              03S1214 03283000
*         R10P,R11P,R12P,R13P,R14P,R15P) RSTD;                  03S1214 03284000
*    GENERATE CODE(NOP 0);          /* TO KEEP THE COMPILER HONEST   */ 03285000
         NOP 0                                                          03286000
*    RFY (R0P,R1P,R2P,R3P,R4P,R5P,R6P,R7P,R8P,R9P,              03S1216 03287000
*         R10P,R11P,R12P,R13P,R14P,R15P) UNRSTD;                03S1216 03288000
*    CMNDCODE = '40';               /* SET ERROR CODE FOR MESSAGE    */ 03289000
         MVC   CMNDCODE(2),@CC03411                             03S1217 03290000
*    OFFSET#2 = 69;                 /* SET OFFSET FOR ERROR CODE     */ 03291000
         MVC   OFFSET#2(4),@CF02312                             03S1218 03292000
*    CALL APCVZDWT(IGT280I,OFFSET#1,APCTSSID,LENGTH(APCTSSID),  03S1219 03293000
*        OFFSET#2,CMNDCODE,LENGTH(CMNDCODE)); /* WTO ERROR MESSAGE   */ 03294000
         LA    @09,@CF00673                                     03S1219 03295000
         ST    @09,@AL00001                                     03S1219 03296000
         LA    @09,OFFSET#1                                     03S1219 03297000
         ST    @09,@AL00001+4                                   03S1219 03298000
         LA    @09,APCTSSID(,APCTPTR)                           03S1219 03299000
         ST    @09,@AL00001+8                                   03S1219 03300000
         LA    @09,@CF00106                                     03S1219 03301000
         ST    @09,@AL00001+12                                  03S1219 03302000
         LA    @09,OFFSET#2                                     03S1219 03303000
         ST    @09,@AL00001+16                                  03S1219 03304000
         LA    @09,CMNDCODE                                     03S1219 03305000
         ST    @09,@AL00001+20                                  03S1219 03306000
         LA    @09,@CF00073                                     03S1219 03307000
         ST    @09,@AL00001+24                                  03S1219 03308000
         MVI   @AL00001+24,X'80'                                03S1219 03309000
         L     @15,APCTZDWT(,APCTPTR)                           03S1219 03310000
         LA    @01,@AL00001                                     03S1219 03311000
         BALR  @14,@15                                          03S1219 03312000
*                    /* NOW CLOSE DATASETS, FREE BUFFERS, ETC.       */ 03313000
*    DCBPTR = ADDR(DCBTEMPA);       /* LOCATE DCB OF DUMPTEMP        */ 03314000
         LA    @09,DCBTEMPA                                     03S1220 03315000
         ST    @09,DCBPTR                                       03S1220 03316000
*    IF DCBOFOPN=TRUE & ABNDCLST=FALSE & ABNDRCLT=FALSE THEN    03S1221 03317000
         TM    DCBOFOPN+40(@09),B'00010000'                     03S1221 03318000
         BNO   @RF01221                                         03S1221 03319000
         TM    ABNDCLST,B'11000000'                             03S1221 03320000
         BNZ   @RF01221                                         03S1221 03321000
*                                   /* IF DUMPTEMP IS STILL OPEN AND */ 03322000
*                                   /* NO ABEND OCCURRED ON (RE)CLOSE*/ 03323000
*      DO;                                                      03S1222 03324000
*        IF REOPENED=FALSE THEN     /* IF IT WAS ONLY ONCE OPENED    */ 03325000
         TM    REOPENED,B'00001000'                             03S1223 03326000
         BNZ   @RF01223                                         03S1223 03327000
*          DO;                                                  03S1224 03328000
*            ABNDCLST = TRUE;       /* TO AVOID LOOPING THRU STAES   */ 03329000
*                    ABNDCLST = TRUE; /* LEFT ON IF CLOSE ABENDS     */ 03330000
         OI    ABNDCLST,B'10000000'                             04S1226 03331000
*                    GENERATE  CODE /* ATTEMPT A CLOSE               */ 03332000
*                        REFS(DCBTEMPA,CLSTEMPS)                04S1227 03333000
*                        SETS(DCBTEMPA,CLSTEMPA);  /*           04S1227 03334000
                       MVC    CLSTEMPA(CLSTEMPE),CLSTEMPS               03335000
                       CLOSE  (DCBTEMPA),MF=(E,CLSTEMPA)                03336000
*                    ABNDCLST = FALSE; /* RESET IF NO CLOSE ABEND    */ 03337000
         NI    ABNDCLST,B'01111111'                             04S1228 03338000
*          END;                                                 03S1229 03339000
*        ELSE                       /* IF IT WAS TWICE OPENED        */ 03340000
*          DO;                                                  03S1230 03341000
         B     @RC01223                                         03S1230 03342000
@RF01223 DS    0H                                               03S1231 03343000
*            ABNDRCLT = TRUE;       /* TO AVOID LOOPING THRU STAES   */ 03344000
*    ABNDRCLT = TRUE;               /* LEFT ON IF RECLOSE ABENDS     */ 03345000
         OI    ABNDRCLT,B'01000000'                             04S1232 03346000
*    GENERATE  CODE                 /* ATTEMPT A RECLOSE             */ 03347000
*        REFS(DCBTEMPA,RCLTEMPS)                                04S1233 03348000
*        SETS(DCBTEMPA,RCLTEMPA);  /*                           04S1233 03349000
       MVC    RCLTEMPA(RCLTEMPE),RCLTEMPS                               03350000
       CLOSE  (DCBTEMPA),MF=(E,RCLTEMPA)                                03351000
*    ABNDRCLT = FALSE;              /* OFF IF NO RECLOSE ABEND       */ 03352000
         NI    ABNDRCLT,B'10111111'                             04S1234 03353000
*          END;                                                 03S1235 03354000
*        IF DCBOFOPN=FALSE THEN     /* IF CLOSE WAS SUCCESSFUL       */ 03355000
@RC01223 L     @09,DCBPTR                                       03S1236 03356000
         TM    DCBOFOPN+40(@09),B'00010000'                     03S1236 03357000
         BNZ   @RF01236                                         03S1236 03358000
*  GENERATE  CODE                   /* ATTEMPT A FREEPOOL OF BUFFERS */ 03359000
*      REFS(DCBTEMPA)                                           04S1237 03360000
*      SETS(DCBTEMPA);              /*                          04S1237 03361000
     FREEPOOL   DCBTEMPA                                                03362000
*        ELSE;                      /* DON'T TRY CLOSE ON OPEN DCB   */ 03363000
@RF01236 DS    0H                                               03S1239 03364000
*      END;                                                     03S1239 03365000
*    ELSE;                          /* DUMPTEMP NOT OPEN             */ 03366000
@RF01221 DS    0H                                               03S1241 03367000
*    DCBPTR = ADDR(DCB3838A);       /* LOCATE DCB OF DUMP3838        */ 03368000
         LA    @09,DCB3838A                                     03S1241 03369000
         ST    @09,DCBPTR                                       03S1241 03370000
*    IF DCBOFOPN=TRUE & ABNDCLS8=FALSE THEN /* IF DUMP3838 IS STILL  */ 03371000
         TM    DCBOFOPN+40(@09),B'00010000'                     03S1242 03372000
         BNO   @RF01242                                         03S1242 03373000
         TM    ABNDCLS8,B'00100000'                             03S1242 03374000
         BNZ   @RF01242                                         03S1242 03375000
*                                   /* OPEN & NO CLOSE ABEND OCCURRED*/ 03376000
*      DO;                                                      03S1243 03377000
*        ABNDCLS8 = TRUE;           /* LEFT ON TO PREVENT STAE LOOPS */ 03378000
*  ABNDCLS8 = TRUE;                 /* LEFT ON IF CLOSE ABENDS       */ 03379000
         OI    ABNDCLS8,B'00100000'                             04S1245 03380000
*  GENERATE  CODE                   /* TRY A CLOSE OF DUMP3838       */ 03381000
*      REFS(DCB3838A,CLS3838S)                                  04S1246 03382000
*      SETS(DCB3838A,CLS3838A);     /*                          04S1246 03383000
     MVC   CLS3838A(CLS3838E),CLS3838S                                  03384000
     CLOSE (DCB3838A),MF=(E,CLS3838A)                                   03385000
*  ABNDCLS8 = FALSE;                /* OFF IF NO CLOSE ABEND         */ 03386000
         NI    ABNDCLS8,B'11011111'                             04S1247 03387000
*        IF DCBOFOPN=FALSE THEN     /* IF THE CLOSE WAS SUCCESSFUL   */ 03388000
         L     @09,DCBPTR                                       03S1248 03389000
         TM    DCBOFOPN+40(@09),B'00010000'                     03S1248 03390000
         BNZ   @RF01248                                         03S1248 03391000
*  GENERATE  CODE                                               04S1249 03392000
*      REFS(DCB3838A)                                           04S1249 03393000
*      SETS(DCB3838A);                                          04S1249 03394000
     FREEPOOL   DCB3838A                                                03395000
*        ELSE                      /* FORCE UNALLOCATION OF OUTPUT.  */ 03396000
*          DO;                     /* ISSUE UNALLOCATION REQUEST.    */ 03397000
         B     @RC01248                                         03S1250 03398000
@RF01248 DS    0H                                               03S1251 03399000
*                   /* RESET REQUEST BLOCK FOR DYNAMIC UNALLOCATION  */ 03400000
*  S99VERB = S99VRBUN;              /* SET RB VERB CODE FOR UNALLOC  */ 03401000
         LA    @09,RQBLK                                        04S1251 03402000
         MVI   S99VERB(@09),X'02'                               04S1251 03403000
*  S99FLAG1 = '0000'X;              /* CLEAR OUT FLAG1               */ 03404000
         MVC   S99FLAG1(2,@09),@CB03315                         04S1252 03405000
*  S99ERROR = ZERO;                 /* IN CASE ERROR CODE PROVIDED   */ 03406000
         SLR   @04,@04                                          04S1253 03407000
         STH   @04,S99ERROR(,@09)                               04S1253 03408000
*  S99INFO = ZERO;                  /* IN CASE INFO. CODE PROVIDED   */ 03409000
         STH   @04,S99INFO(,@09)                                04S1254 03410000
*  S99FLAG2 = '00000000'X;          /* CLEAR OUT FLAG2               */ 03411000
         MVC   S99FLAG2(4,@09),@CB03256                         04S1255 03412000
*                   /* INITIALIZE THE ONLY TEXT UNIT FOR UNALLOCATE  */ 03413000
*  S99TUPLN(1) = BITONE;            /* THIS IS LAST TEXT UNIT IN LIST*/ 03414000
         LA    @09,TUPTRS                                       04S1256 03415000
         OI    S99TUPLN(@09),B'10000000'                        04S1256 03416000
*  S99TUKEY = DUNDDNAM;             /* DENOTES DSNAME UNALLOCATION   */ 03417000
         L     @09,S99TUPTR+20(,@09)                            04S1257 03418000
         MVC   S99TUKEY(2,@09),@CB00365                         04S1257 03419000
*                   /* NOW ACTUALLY COMMIT THE UNALLOCATION          */ 03420000
*  RFY (R1P,R15F) RSTD;             /* PTR IN REG 1 , RCDE IN REG 15 */ 03421000
*  R1P = ADDR(S99RBPTR);            /* INSERT CORRECT ADDRESS INTO R1*/ 03422000
         LA    R1P,RQBLKPTR                                     04S1259 03423000
*  GENERATE (DYNALLOC)              /* INVOKE THE SVC 99             */ 03424000
*      REFS(R1P)                                                04S1260 03425000
*      SETS(R15F);                                              04S1260 03426000
         DYNALLOC                                                       03427000
*  RFY (R1P,R15F) UNRSTD;           /* GIVE BACK THE REGISTERS       */ 03428000
*          END;                    /* END OF UNALLOCATION FORCE.     */ 03429000
*      END;                                                     03S1263 03430000
*    ELSE;                                                      03S1264 03431000
@RF01242 DS    0H                                               03S1265 03432000
*          IF UNITADDR(3:3)^='0'      /* IF THIS WAS A PORT DUMP     */ 03433000
*             & RESETUJA = TRUE THEN  /* AND UJA IS NEEDED           */ 03434000
@RC01242 CLI   UNITADDR+2,C'0'                                  04S1265 03435000
         BE    @RF01265                                         04S1265 03436000
         TM    RESETUJA,B'00000010'                             04S1265 03437000
         BNO   @RF01265                                         04S1265 03438000
*            DO;                                                04S1266 03439000
*              RFY APUBPTR RSTD;                                04S1267 03440000
*              APUBPTR = APUBAPUB;  /* MOVE DOWN LIST OF APUB PTR'S  */ 03441000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       04S1268 03442000
*              RFY UCBOB BASED(APUBUCB);                        04S1269 03443000
*              DO WHILE(APUBPTR^=ZERO & UCBNAME(3:3)^=UNITADDR(3:3));   03444000
         B     @DE01270                                         04S1270 03445000
@DL01270 DS    0H                                               04S1271 03446000
*                APUBPTR = APUBAPUB;/* MOVE TO NEXT APUB UNTIL MATCH */ 03447000
         L     APUBPTR,APUBAPUB(,APUBPTR)                       04S1271 03448000
*              END;                 /* SO WE HAVE APUBPTR OF DUMPPORT*/ 03449000
@DE01270 LTR   APUBPTR,APUBPTR                                  04S1272 03450000
         BZ    @DC01270                                         04S1272 03451000
         L     @11,APUBUCB(,APUBPTR)                            04S1272 03452000
         CLC   UCBNAME+2(1,@11),UNITADDR+2                      04S1272 03453000
         BNE   @DL01270                                         04S1272 03454000
@DC01270 DS    0H                                               04S1273 03455000
*              RFY R1P RSTD;        /* SECURE REG 1                  */ 03456000
*              R1P = 1;             /* SET RECOVERY INDICATOR        */ 03457000
         LA    R1P,1                                            04S1274 03458000
*              CALL APCVZUJA;       /* CALL THE BITSETTER ROUTINE    */ 03459000
         L     @15,APCTZUJA(,APCTPTR)                           04S1275 03460000
         BALR  @14,@15                                          04S1275 03461000
*              RESETUJA = FALSE;    /* INDICATE UJA HAS BEEN CALLED. */ 03462000
         NI    RESETUJA,B'11111101'                             04S1276 03463000
*              RFY R1P UNRSTD;      /* RELEASE REG 1                 */ 03464000
*              RFY UCBOB BASED(UCBPTR);                         04S1278 03465000
*            END;                                               04S1279 03466000
*          ELSE;                                                04S1280 03467000
@RF01265 DS    0H                                               04S1281 03468000
*    IF REIPL=FALSE & QIES3838=TRUE THEN   /*IF STOP DUMP CMND NEEDED*/ 03469000
         TM    QIES3838,B'01000000'                             03S1281 03470000
         BNO   @RF01281                                         03S1281 03471000
         TM    REIPL,B'00100000'                                03S1281 03472000
         BNZ   @RF01281                                         03S1281 03473000
*        DO;                                                    03S1282 03474000
*          PICMD = 4;               /* SET 3838 CMND TO STOP DUMP    */ 03475000
         MVC   PICMD(2),@CH00106                                03S1283 03476000
*          CCW2 = CCW3;             /* MOVE NOP UP TO 2ND CCW POSIT. */ 03477000
         MVC   CCW2(8),CCW3                                     03S1284 03478000
*          CALL EXCP3838;           /* PERFORM FINAL EXCP            */ 03479000
         BAL   @14,EXCP3838                                     03S1285 03480000
*          QIES3838 = FALSE;        /* PREVENT (E)STAE LOOPING       */ 03481000
         NI    QIES3838,B'10111111'                             03S1286 03482000
*        END;                                                   03S1287 03483000
*    ELSE;                          /* NOT NEEDED                    */ 03484000
@RF01281 DS    0H                                               03S1289 03485000
*    IF REIPL=TRUE & REIPLED=FALSE THEN /* IF REIPL COMMAND NEEDED   */ 03486000
         TM    REIPL,B'00100000'                                03S1289 03487000
         BNO   @RF01289                                         03S1289 03488000
         TM    REIPLED,B'00010000'                              03S1289 03489000
         BNZ   @RF01289                                         03S1289 03490000
*      DO;                                                      03S1290 03491000
*        RFY APCQPTR RSTD;          /* APCQPTR USED IN INCLUDED CODE */ 03492000
*                   /* CONSTRUCT & ENQUEUE A RE-IPL COMMAND          */ 03493000
*   SAVEPTR = APCQPTR;              /* SAVE PTR TO CURRENT COMMAND   */ 03494000
         LR    SAVEPTR,APCQPTR                                  04S1292 03495000
*   CALL APCVZDX1;                  /* OBTAIN A NEW EMPTY COMMAND    */ 03496000
         L     @15,APCTZDX1(,APCTPTR)                           04S1293 03497000
         BALR  @14,@15                                          04S1293 03498000
*                                   /* SETUP NEW REIPL COMMAND       */ 03499000
*   APCQIINF = APCQRIPL;            /* INDICATE A REIPL IS REQUIRED  */ 03500000
         MVC   APCQIINF(4,APCQPTR),@CF02376                     04S1294 03501000
*   APCQINT = TRUE;                 /* COMMAND IS INTERNALLY GEN'ED  */ 03502000
         OI    APCQINT(APCQPTR),B'10000000'                     04S1295 03503000
*   APCQTXLN = ZERO;                /* NO TEXT PROVIDED              */ 03504000
         SLR   @11,@11                                          04S1296 03505000
         STH   @11,APCQTXLN(,APCQPTR)                           04S1296 03506000
*   APCQPLEN = ZERO;                /* NO PARAMETERS EITHER          */ 03507000
         STH   @11,APCQPLEN(,APCQPTR)                           04S1297 03508000
*                                   /*                               */ 03509000
*   CALL APCVZDX2;                  /* NOW QUEUE IT UP               */ 03510000
         L     @15,APCTZDX2(,APCTPTR)                           04S1298 03511000
         BALR  @14,@15                                          04S1298 03512000
*   APCQPTR = SAVEPTR;              /* RESTORE PREVIOUS COMMAND PTR  */ 03513000
         LR    APCQPTR,SAVEPTR                                  04S1299 03514000
*   REIPLED = TRUE;                 /*INDICATE THAT COMMAND NOW GIVEN*/ 03515000
         OI    REIPLED,B'00010000'                              04S1300 03516000
*        RFY APCQPTR UNRSTD;        /* RELEASE APCQPTR               */ 03517000
*      END;                                                     03S1302 03518000
*    ELSE;                                                      03S1303 03519000
@RF01289 DS    0H                                               03S1304 03520000
*    IF ENQDAPUB=TRUE THEN          /* IF STILL ENQUEUED ON APUB CHN */ 03521000
         TM    ENQDAPUB,B'00000010'                             03S1304 03522000
         BNO   @RF01304                                         03S1304 03523000
*      CALL APCVZDDQ;               /* DEQUEUE FROM APUB CHAIN       */ 03524000
         L     @15,APCTZDDQ(,APCTPTR)                           03S1305 03525000
         BALR  @14,@15                                          03S1305 03526000
*    ELSE;                                                      03S1306 03527000
@RF01304 DS    0H                                               03S1307 03528000
*    GENERATE  CODE                                             04S1307 03529000
*        REFS(D80STAEA)                                         04S1307 03530000
*        SETS(D80STAEA); /*            RESCIND OUTSTANDING IGTD80 STAE  03531000
       IGTYSTAE  0,MF=(E,D80STAEA)                                      03532000
*  END;                                                         03S1308 03533000
* END STAERTRY;                                                 03S1309 03534000
@EL00009 DS    0H                                               03S1309 03535000
@EF00009 DS    0H                                               03S1309 03536000
@ER00009 LM    @14,@12,@SA00009                                 03S1309 03537000
         BR    @14                                              03S1309 03538000
*                                   /*                               */ 03539000
*TOPOFPAG:                                                      03S1310 03540000
*  PROCEDURE;                                                   03S1310 03541000
TOPOFPAG STM   @14,@01,@SA00010                                 03S1310 03542000
         STM   @03,@12,@SA00010+16                              03S1310 03543000
*    TEMPLINE = PRNTLINE;           /* SAVE NEW LINE YET TO GO OUT   */ 03544000
         MVC   TEMPLINE(121),PRNTLINE(BUFFPTR2)                 03S1311 03545000
*    PAGENMBR = PAGENMBR +1;        /* MOVE COUNT TO NEXT PAGE       */ 03546000
         LA    @11,1                                            03S1312 03547000
         AL    @11,PAGENMBR                                     03S1312 03548000
         ST    @11,PAGENMBR                                     03S1312 03549000
*    LINCOUNT = ZERO;               /* RESET LINCOUNT FOR NEW PAGE   */ 03550000
         SLR   @11,@11                                          03S1313 03551000
         STH   @11,LINCOUNT                                     03S1313 03552000
*    PRNTLINE(1:121) = '1';         /*CLEAR OUT ALL POSITIONS        */ 03553000
         MVI   PRNTLINE+1(BUFFPTR2),C' '                        03S1314 03554000
         MVC   PRNTLINE+2(119,BUFFPTR2),PRNTLINE+1(BUFFPTR2)    03S1314 03555000
         MVI   PRNTLINE(BUFFPTR2),C'1'                          03S1314 03556000
*    PRNTLINE(11:10+LENGTH(APCTSSID)) = APCTSSID; /* MOVE IN SSID    */ 03557000
         MVC   PRNTLINE+10(4,BUFFPTR2),APCTSSID(APCTPTR)        03S1315 03558000
*    PRNTLINE(12+LENGTH(APCTSSID):18+LENGTH(APCTSSID)) = 'DUMP OF';/**/ 03559000
         MVC   PRNTLINE+15(7,BUFFPTR2),@CC03417                 03S1316 03560000
*    IF DUMPISCP=TRUE THEN          /* IF CP STORAGE IS NOW COMING   */ 03561000
         TM    DUMPISCP,B'00100000'                             03S1317 03562000
         BNO   @RF01317                                         03S1317 03563000
*      PRNTLINE(20+LENGTH(APCTSSID):39+LENGTH(APCTSSID))        03S1318 03564000
*          = 'C P STORAGE';         /* IDENTIFY STORAGE              */ 03565000
         MVI   PRNTLINE+34(BUFFPTR2),C' '                       03S1318 03566000
         MVC   PRNTLINE+35(8,BUFFPTR2),PRNTLINE+34(BUFFPTR2)    03S1318 03567000
         MVC   PRNTLINE+23(11,BUFFPTR2),@CC03418                03S1318 03568000
*    ELSE                           /* ELSE MUST BE BULK STORAGE     */ 03569000
*      PRNTLINE(20+LENGTH(APCTSSID):32+LENGTH(APCTSSID))        03S1319 03570000
*          = 'BULK STORAGE';        /* IDENTIFY STORAGE              */ 03571000
         B     @RC01317                                         03S1319 03572000
@RF01317 MVI   PRNTLINE+35(BUFFPTR2),C' '                       03S1319 03573000
         MVC   PRNTLINE+23(12,BUFFPTR2),@CC03420                03S1319 03574000
*    IF UNITADDR(3:3)^='0' THEN       /* IF IT IS A PORT DUMP        */ 03575000
@RC01317 CLI   UNITADDR+2,C'0'                                  03S1320 03576000
         BE    @RF01320                                         03S1320 03577000
*      DO;                                                      03S1321 03578000
*        PRNTLINE(55+LENGTH(APCTSSID):63+LENGTH(APCTSSID)) = 'JOBNAME = 03579000
*            ;                                                  03S1322 03580000
         MVC   PRNTLINE+58(9,BUFFPTR2),@CC03422                 03S1322 03581000
*        PRNTLINE(65+LENGTH(APCTSSID):64+LENGTH(APCTSSID)+LENGTH        03582000
*            (APUBJBNM)) = JBNMPTR->APUBJBNM; /* INSERT JOBNAME      */ 03583000
         L     @11,JBNMPTR                                      03S1323 03584000
         MVC   PRNTLINE+68(8,BUFFPTR2),APUBJBNM(@11)            03S1323 03585000
*      END;                                                     03S1324 03586000
*    ELSE;                                                      03S1325 03587000
@RF01320 DS    0H                                               03S1326 03588000
*    PRNTLINE(121-8:121-5) = 'PAGE';           /* INSERT IDENTIFIER  */ 03589000
         MVC   PRNTLINE+112(4,BUFFPTR2),@CC03424                03S1326 03590000
*    CVD(PAGENMBR,DUBLWORD);        /* CONVERT PAGE NUMBER TO DECIMAL*/ 03591000
         L     @11,PAGENMBR                                     03S1327 03592000
         CVD   @11,DUBLWORD                                     03S1327 03593000
*    DUBLWORD(7:8) = DUBLWORD(7:8) | '000F'X; /* ENSURE CORRECT SIGN */ 03594000
         OC    DUBLWORD+6(2),@CB00393                           03S1328 03595000
*    UNPK(PRNTLINE(121-3:121),DUBLWORD);           /* UNPACK PAGE NO */ 03596000
         UNPK  PRNTLINE+117(4,BUFFPTR2),DUBLWORD(8)             03S1329 03597000
*    CALL PUT3838;                  /* OUTPUT THE HEADER             */ 03598000
         BAL   @14,PUT3838                                      03S1330 03599000
*    PRNTLINE(1:121) = '';          /* PREPARE FOR A BLANK LINE      */ 03600000
         MVI   PRNTLINE(BUFFPTR2),C' '                          03S1331 03601000
         MVC   PRNTLINE+1(120,BUFFPTR2),PRNTLINE(BUFFPTR2)      03S1331 03602000
*    CALL PUT3838;                  /* OUTPUT A BLANK LINE           */ 03603000
         BAL   @14,PUT3838                                      03S1332 03604000
*    PRNTLINE = TEMPLINE;           /* RESTORE ORIGINAL PRNTLINE     */ 03605000
         MVC   PRNTLINE(121,BUFFPTR2),TEMPLINE                  03S1333 03606000
*  END TOPOFPAG;                                                03S1334 03607000
@EL00010 DS    0H                                               03S1334 03608000
@EF00010 DS    0H                                               03S1334 03609000
@ER00010 LM    @14,@01,@SA00010                                 03S1334 03610000
         LM    @03,@12,@SA00010+16                              03S1334 03611000
         BR    @14                                              03S1334 03612000
*                                   /*                               */ 03613000
*                                   /*IGTXEPLG*/                01S1335 03614000
*    /* SYSTEM DECLARES */                                      01S1335 03615000
*                                                               01S1335 03616000
*                                                               01S1335 03617000
*    DECLARE /*GENERAL PURPOSE REGISTERS */                     01S1335 03618000
*      GPR00F FIXED(31) REG(0),                                 01S1335 03619000
*      GPR01P PTR(31) REG(1);                                   01S1335 03620000
*                                                               01S1335 03621000
*    DECLARE /* COMMON VARIABLES */                             01S1336 03622000
*      I256C CHAR(256) BASED,                                   01S1336 03623000
*      I031F FIXED(31) BASED,                                   01S1336 03624000
*      I031P PTR(31)   BASED,                                   01S1336 03625000
*      I015F FIXED(15) BASED,                                   01S1336 03626000
*      I015P PTR(15)   BASED,                                   01S1336 03627000
*      I008P PTR(8)    BASED,                                   01S1336 03628000
*      I001C CHAR(1)   BASED;                                   01S1336 03629000
*                                                               01S1337 03630000
*                                                               01S1337 03631000
*    /* MODULE PATCH AREA */                                    01S1337 03632000
*    DCL APPATCH CHAR(*) INT STATIC LOCAL GEND;                 01S1337 03633000
*    GENERATE DATA DEFS(APPATCH);  /* GENERATE PATCH            01S1338 03634000
*    /* GENERAL REGISTER DECLARES */                            01S1339 03635000
*  DCL                                                          01S1339 03636000
*    R0F FIXED(31) REG(0),                                      01S1339 03637000
*    R0P   PTR(24) REG(0),                                      01S1339 03638000
*    R0RSTD PTR(31) REG(0),                                     01S1339 03639000
*    R1F FIXED(31) REG(1),                                      01S1339 03640000
*    R1P   PTR(24) REG(1),                                      01S1339 03641000
*    R1RSTD PTR(31) REG(1),                                     01S1339 03642000
*    R2F FIXED(31) REG(2),                                      01S1339 03643000
*    R2P   PTR(24) REG(2),                                      01S1339 03644000
*    R2RSTD PTR(31) REG(2),                                     01S1339 03645000
*    R3F FIXED(31) REG(3),                                      01S1339 03646000
*    R3P   PTR(24) REG(3),                                      01S1339 03647000
*    R3RSTD PTR(31) REG(3),                                     01S1339 03648000
*    R4F FIXED(31) REG(4),                                      01S1339 03649000
*    R4P   PTR(24) REG(4),                                      01S1339 03650000
*    R4RSTD PTR(31) REG(4),                                     01S1339 03651000
*    R5F FIXED(31) REG(5),                                      01S1339 03652000
*    R5P   PTR(24) REG(5),                                      01S1339 03653000
*    R5RSTD PTR(31) REG(5),                                     01S1339 03654000
*    R6F FIXED(31) REG(6),                                      01S1339 03655000
*    R6P   PTR(24) REG(6),                                      01S1339 03656000
*    R6RSTD PTR(31) REG(6),                                     01S1339 03657000
*    R7F FIXED(31) REG(7),                                      01S1339 03658000
*    R7P   PTR(24) REG(7),                                      01S1339 03659000
*    R7RSTD PTR(31) REG(7),                                     01S1339 03660000
*    R8F FIXED(31) REG(8),                                      01S1339 03661000
*    R8P   PTR(24) REG(8),                                      01S1339 03662000
*    R8RSTD PTR(31) REG(8),                                     01S1339 03663000
*    R9F FIXED(31) REG(9),                                      01S1339 03664000
*    R9P   PTR(24) REG(9),                                      01S1339 03665000
*    R9RSTD PTR(31) REG(9),                                     01S1339 03666000
*    R10F FIXED(31) REG(10),                                    01S1339 03667000
*    R10P   PTR(24) REG(10),                                    01S1339 03668000
*    R10RSTD PTR(31) REG(10),                                   01S1339 03669000
*    R11F FIXED(31) REG(11),                                    01S1339 03670000
*    R11P   PTR(24) REG(11),                                    01S1339 03671000
*    R11RSTD PTR(31) REG(11),                                   01S1339 03672000
*    R12F FIXED(31) REG(12),                                    01S1339 03673000
*    R12P   PTR(24) REG(12),                                    01S1339 03674000
*    R12RSTD PTR(31) REG(12),                                   01S1339 03675000
*    R13F FIXED(31) REG(13),                                    01S1339 03676000
*    R13P   PTR(24) REG(13),                                    01S1339 03677000
*    R13RSTD PTR(31) REG(13),                                   01S1339 03678000
*    R14F FIXED(31) REG(14),                                    01S1339 03679000
*    R14P   PTR(24) REG(14),                                    01S1339 03680000
*    R14RSTD PTR(31) REG(14),                                   01S1339 03681000
*    R15F FIXED(31) REG(15),                                    01S1339 03682000
*    R15P   PTR(24) REG(15),                                    01S1339 03683000
*    R15RSTD PTR(31) REG(15),                                   01S1339 03684000
*    /* VPSS CONTROL BLOCK POINTER DECLARES */                  01S1339 03685000
*    APSMPTR PTR(24) REG(01), /* STORAGE MANAGEMENT BLOCK (SUGGESTED PO 03686000
*NTER) */                                                       01S1339 03687000
*    APSCPTR PTR(24) REG(01), /* STORAGE MANAGEMENT CONTROL WORD (SUGGE 03688000
*TED POINTER) */                                                01S1339 03689000
*    APINPTR PTR(24) REG(01), /* USER'S INPUT PARAMETER LIST (SUGGESTED 03690000
*POINTER) */                                                    01S1339 03691000
*/*                       */                                    01S1339 03692000
*    APDATA  PTR(24) REG(06), /* ADDRESS OF DYNAMIC DATA WORKAREA (DATA 03693000
*EG) */                                                         01S1339 03694000
*    APCODE  PTR(24) REG(07), /* PROGRAM CODE BASE REGISTER (CODEREG) * 03695000
*    APDEBPTR PTR(24) REG(08), /* VPSS DEB (SUGGESTED POINTER) */       03696000
*    APNPPTR PTR(24) REG(08), /* SUBSYSTEM INITIALIZATION WORKAREA BLOC 03697000
* (ONLY USED BY SUBSYSTEM INITIALIZATION) */                    01S1339 03698000
*    APRLPTR PTR(24) REG(08), /* VPSS ACB REQUEST LIST (SUGGESTED POINT 03699000
*R) */                                                          01S1339 03700000
*    APCIPTR PTR(24) REG(08), /* 3838 CONTROL TABLE (SUGGESTED POINTER) 03701000
**/  APCWPTR PTR(24) REG(08), /* CALL INTERFACE WORKAREA (SUGGESTED POI 03702000
*TER) */                                                        01S1339 03703000
*    APERPTR PTR(24) REG(08), /* ERP/IO APPENDAGE WORKAREA (SUGGESTED P 03704000
*INTER) */                                                      01S1339 03705000
*    APACBPTR PTR(24) REG(09), /* VPSS ACB (SUGGESTED POINTER) */       03706000
*    APCQPTR PTR(24) REG(09), /* COMMAND QUEUE ELEMENT (SUGGESTED POINT 03707000
*R) */                                                          01S1339 03708000
*    APOTPTR PTR(24) REG(09), /* OPTION TABLE (SUGGESTED POINTER) */    03709000
*    APIOPTR PTR(24) REG(10), /* I/O ELEMENT (SUGGESTED POINTER) */     03710000
*    APEXLPTR PTR(24) REG(10), /* VPSS EXLST (SUGGESTED POINTER) */     03711000
*    APUBPTR PTR(24) REG(10), /* UNIT BLOCK (SUGGESTED POINTER) */      03712000
*    APAXPTR PTR(24) REG(10), /* VPSS ACB EXTENSION (SUGGESTED POINTER) 03713000
**/  APCPPTR PTR(24) REG(10), /* VPSS CALL PROCESSING INDICATORS (SUGGE 03714000
*TED POINTER) */                                                01S1339 03715000
*    APOCPTR PTR(24) REG(10), /* VPSS OPEN/CLOSE SUBSYSTEM WORKAREA (RE 03716000
*UIRED POINTER) */                                              01S1339 03717000
*    APATPTR PTR(24) REG(11), /* VPSS ACB TABLE (SUGGESTED POINTER) */  03718000
*    APLBPTR PTR(24) REG(11), /* LABEL RESOLUTION TABLE (SUGGESTED POIN 03719000
*ER) */                                                         01S1339 03720000
*    APUTPTR PTR(24) REG(11), /* USER TABLE (SUGGESTED POINTER) */      03721000
*    APDSPTR PTR(24) REG(11), /* VPSS DATASET ENTRY (SUGGESTED POINTER) 03722000
**/  APXLPTR PTR(24) REG(11), /* TRANSLATION TABLE (SUGGESTED POINTER)  03723000
*/   APDXPTR PTR(24) REG(11), /* VPSS DEB EXTENSION (SUGGESTED POINTER) 03724000
**/  APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED POINTER)  03725000
*/   APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA (REQUIR 03726000
*D POINTER) */                                                  01S1339 03727000
*    APRETURN PTR(24) REG(14), /* RETURN ADDRESS FOR SUBROUTINE LINKAGE 03728000
**/  APENTRY PTR(24) REG(15), /* SUBROUTINE ENTRY POINT LINKAGE */      03729000
*    APRCODE PTR(24) REG(15); /* CONTAINS SUBROUTINE RETURN CODE */     03730000
*    /* USER REGISTER DECLARES */                               01S1340 03731000
*                                   /*                               */ 03732000
*END IGTD80                                                     01S1340 03733000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 03734000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03735000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03736000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03737000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03738000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03739000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03740000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03741000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03742000
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                        * 03743000
*/*%INCLUDE SYSUT5  (DECLARES)                                        * 03744000
*/*%INCLUDE SYSUT5  (MACVRBLS)                                        * 03745000
*/*%INCLUDE SYSUT5  (AUTOMTCS)                                        * 03746000
*/*%INCLUDE SYSUT5  (CONSTNTS)                                        * 03747000
*/*%INCLUDE SYSUT5  (STATICS )                                        * 03748000
*/*%INCLUDE SYSUT5  (INCLUDES)                                        * 03749000
*/*%INCLUDE SYSLIB  (IEFZB4D0)                                        * 03750000
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        * 03751000
*/*%INCLUDE SYSLIB  (IEECHAIN)                                        * 03752000
*/*%INCLUDE SYSLIB  (IHAASCB )                                        * 03753000
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        * 03754000
*/*%INCLUDE SYSLIB  (IEZIOB  )                                        * 03755000
*/*%INCLUDE SYSLIB  (IHAECB  )                                        * 03756000
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        * 03757000
*/*%INCLUDE SYSLIB  (IHADCB  )                                        * 03758000
*/*%INCLUDE SYSLIB  (IHASDWA )                                        * 03759000
*/*%INCLUDE SYSLIB  (IGTXAPCM)                                        * 03760000
*/*%INCLUDE SYSLIB  (IGTXAPCQ)                                        * 03761000
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                        * 03762000
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                        * 03763000
*/*%INCLUDE SYSLIB  (IGTXAPDS)                                        * 03764000
*/*%INCLUDE SYSLIB  (IGTXAPES)                                        * 03765000
*/*%INCLUDE SYSLIB  (IGTXAPMM)                                        * 03766000
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                        * 03767000
*/*%INCLUDE SYSLIB  (IGTXAPUB)                                        * 03768000
*/*%INCLUDE SYSUT5  (INITLIZE)                                        * 03769000
*/*%INCLUDE SYSUT5  (CMNDSNTX)                                        * 03770000
*/*%INCLUDE SYSUT5  (BSTGADDR)                                        * 03771000
*/*%INCLUDE SYSUT5  (SETSTAE )                                        * 03772000
*/*%INCLUDE SYSUT5  (CONFIRMF)                                        * 03773000
*/*%INCLUDE SYSUT5  (ACKNWLDG)                                        * 03774000
*/*%INCLUDE SYSUT5  (LOADSADP)                                        * 03775000
*/*%INCLUDE SYSUT5  (OPENTEMP)                                        * 03776000
*/*%INCLUDE SYSUT5  (PUTTEMP )                                        * 03777000
*/*%INCLUDE SYSUT5  (PUTTEMP )                                        * 03778000
*/*%INCLUDE SYSUT5  (GRABDUMP)                                        * 03779000
*/*%INCLUDE SYSUT5  (CALLUJA )                                        * 03780000
*/*%INCLUDE SYSUT5  (CALLUJA )                                        * 03781000
*/*%INCLUDE SYSUT5  (CALLUJA )                                        * 03782000
*/*%INCLUDE SYSUT5  (CLSETEMP)                                        * 03783000
*/*%INCLUDE SYSUT5  (CLSETEMP)                                        * 03784000
*/*%INCLUDE SYSUT5  (CLSETEMP)                                        * 03785000
*/*%INCLUDE SYSUT5  (DYNA3838)                                        * 03786000
*/*%INCLUDE SYSUT5  (FREETEMP)                                        * 03787000
*/*%INCLUDE SYSUT5  (FREETEMP)                                        * 03788000
*/*%INCLUDE SYSUT5  (FREETEMP)                                        * 03789000
*/*%INCLUDE SYSUT5  (FREETEMP)                                        * 03790000
*/*%INCLUDE SYSUT5  (OPEN3838)                                        * 03791000
*/*%INCLUDE SYSUT5  (DYNU3838)                                        * 03792000
*/*%INCLUDE SYSUT5  (DYNU3838)                                        * 03793000
*/*%INCLUDE SYSUT5  (DYNU3838)                                        * 03794000
*/*%INCLUDE SYSUT5  (ROPNTEMP)                                        * 03795000
*/*%INCLUDE SYSUT5  (OUTPUTIT)                                        * 03796000
*/*%INCLUDE SYSUT5  (HEADING )                                        * 03797000
*/*%INCLUDE SYSUT5  (PRNTPREP)                                        * 03798000
*/*%INCLUDE SYSUT5  (REFORMAT)                                        * 03799000
*/*%INCLUDE SYSUT5  (CLSE3838)                                        * 03800000
*/*%INCLUDE SYSUT5  (CLSE3838)                                        * 03801000
*/*%INCLUDE SYSUT5  (CLSE3838)                                        * 03802000
*/*%INCLUDE SYSUT5  (FREE3838)                                        * 03803000
*/*%INCLUDE SYSUT5  (FREE3838)                                        * 03804000
*/*%INCLUDE SYSUT5  (FREE3838)                                        * 03805000
*/*%INCLUDE SYSUT5  (RCLSTEMP)                                        * 03806000
*/*%INCLUDE SYSUT5  (RCLSTEMP)                                        * 03807000
*/*%INCLUDE SYSUT5  (REIPLCMD)                                        * 03808000
*/*%INCLUDE SYSUT5  (REIPLCMD)                                        * 03809000
*/*%INCLUDE SYSUT5  (ENDSTAE )                                        * 03810000
*/*%INCLUDE SYSUT5  (ENDSTAE )                                        * 03811000
*/*%INCLUDE SYSUT5  (SUBRTNES)                                        * 03812000
*/*%INCLUDE SYSUT5  (CHRCNVRT)                                        * 03813000
*/*%INCLUDE SYSUT5  (EXCP3838)                                        * 03814000
*/*%INCLUDE SYSUT5  (GETTEMP )                                        * 03815000
*/*%INCLUDE SYSUT5  (LNREPEAT)                                        * 03816000
*/*%INCLUDE SYSUT5  (PADBLANX)                                        * 03817000
*/*%INCLUDE SYSUT5  (PUT3838 )                                        * 03818000
*/*%INCLUDE SYSUT5  (SEPPAGE )                                        * 03819000
*/*%INCLUDE SYSUT5  (STAERTRY)                                        * 03820000
*/*%INCLUDE SYSUT5  (TOPOFPAG)                                        * 03821000
*;                                                              01S1340 03822000
         B     @EL00001                                         01S1340 03823000
@DATA    DS    0H                                                       03824000
@CH03280 DC    H'16392'                                                 03825000
@SM03539 MVC   S99TUPAR(0,@11),@CB03303                                 03826000
@SM03541 MVC   S99TUPAR(0,@11),@CB03306                                 03827000
@SM03543 MVC   PRNTLINE+26(0,BUFFPTR2),APCQCMND(APCQPTR)                03828000
@DATD    DSECT                                                          03829000
         DS    0F                                                       03830000
@SA00001 DS    20F                                                      03831000
@SA00009 DS    15F                                                      03832000
@SA00003 DS    15F                                                      03833000
@SA00007 DS    14F                                                      03834000
@SA00008 DS    14F                                                      03835000
@SA00004 DS    14F                                                      03836000
@SA00005 DS    14F                                                      03837000
@SA00010 DS    14F                                                      03838000
@AL00001 DS    13A                                                      03839000
@TF00001 DS    F                                                        03840000
IGTD80   CSECT                                                          03841000
         DS    0F                                                       03842000
@CF00079 DC    F'1'                                                     03843000
@CH00079 EQU   @CF00079+2                                               03844000
@CF00073 DC    F'2'                                                     03845000
@CH00073 EQU   @CF00073+2                                               03846000
@CF00117 DC    F'3'                                                     03847000
@CH00117 EQU   @CF00117+2                                               03848000
@CF00106 DC    F'4'                                                     03849000
@CH00106 EQU   @CF00106+2                                               03850000
@CF00126 DC    F'5'                                                     03851000
@CH00126 EQU   @CF00126+2                                               03852000
@CF00119 DC    F'6'                                                     03853000
@CF00110 DC    F'7'                                                     03854000
@CF00104 DC    F'8'                                                     03855000
@CH00104 EQU   @CF00104+2                                               03856000
@CF00663 DC    F'9'                                                     03857000
@CF00130 DC    F'10'                                                    03858000
@CF02133 DC    F'11'                                                    03859000
@CF00195 DC    F'12'                                                    03860000
@CF00182 DC    F'13'                                                    03861000
@CF02376 DC    F'14'                                                    03862000
@CF02354 DC    F'23'                                                    03863000
@CF00133 DC    F'24'                                                    03864000
@CF01631 DC    F'40'                                                    03865000
@CF02259 DC    F'41'                                                    03866000
@CF02266 DC    F'44'                                                    03867000
@CF02287 DC    F'55'                                                    03868000
@CF02289 DC    F'56'                                                    03869000
@CF02304 DC    F'65'                                                    03870000
@CF02306 DC    F'66'                                                    03871000
@CF02312 DC    F'69'                                                    03872000
@CF00193 DC    F'84'                                                    03873000
@CF00114 DC    F'121'                                                   03874000
@CF00673 DC    F'124'                                                   03875000
@CF03076 DC    F'128'                                                   03876000
@CF03080 DC    F'136'                                                   03877000
@CF02473 DC    F'140'                                                   03878000
@CF03084 DC    F'148'                                                   03879000
@CF03488 DC    F'-2147483647'                                           03880000
@CF03494 DC    F'-11'                                                   03881000
@CF03311 DC    XL4'000000C0'                                            03882000
@CF03312 DC    XL4'000000F0'                                            03883000
@CF03323 DC    XL4'0000000F'                                            03884000
@CF03524 DC    BL4'10000000000000000000000000000000'                    03885000
@CF03527 DC    BL4'00000000010000000000000000000000'                    03886000
@CF03530 DC    BL4'00000000000000000000000010000000'                    03887000
@DATD    DSECT                                                          03888000
         DS    0D                                                       03889000
BSHLIMIT DS    F                                                        03890000
BSLLIMIT DS    F                                                        03891000
LADDRESS DS    F                                                        03892000
PAGENMBR DS    F                                                        03893000
OFFSET#1 DS    F                                                        03894000
OFFSET#2 DS    F                                                        03895000
OFFSET#3 DS    F                                                        03896000
OFFSET#4 DS    F                                                        03897000
BUFFPTR1 DS    A                                                        03898000
DCBPTR   DS    A                                                        03899000
ECBPTR   DS    A                                                        03900000
IOBPRPTR DS    A                                                        03901000
IOBSTPTR DS    A                                                        03902000
JBNMPTR  DS    A                                                        03903000
ASCBPTR  DS    A                                                        03904000
CSCBPTR  DS    A                                                        03905000
S99TUFP  DS    A                                                        03906000
BITFLAGS DS    AL4                                                      03907000
         ORG   BITFLAGS                                                 03908000
ABNDCLST DS    BL1                                                      03909000
ABNDRCLT EQU   BITFLAGS+0                                               03910000
ABNDCLS8 EQU   BITFLAGS+0                                               03911000
CMNDERR  EQU   BITFLAGS+0                                               03912000
DLMFOUND EQU   BITFLAGS+0                                               03913000
DUMPBS   EQU   BITFLAGS+0                                               03914000
DUMPBSAA EQU   BITFLAGS+0                                               03915000
DUMPCP   EQU   BITFLAGS+0                                               03916000
DUMPFORC DS    BL1                                                      03917000
DUMPISBS EQU   BITFLAGS+1                                               03918000
DUMPISCP EQU   BITFLAGS+1                                               03919000
DUMPISGO EQU   BITFLAGS+1                                               03920000
ENDREADS EQU   BITFLAGS+1                                               03921000
ENDSTORE EQU   BITFLAGS+1                                               03922000
ENQDAPUB EQU   BITFLAGS+1                                               03923000
IDIOTBIT EQU   BITFLAGS+1                                               03924000
PRINTING DS    BL1                                                      03925000
QIES3838 EQU   BITFLAGS+2                                               03926000
REIPL    EQU   BITFLAGS+2                                               03927000
REIPLED  EQU   BITFLAGS+2                                               03928000
REOPENED EQU   BITFLAGS+2                                               03929000
REPEATNG EQU   BITFLAGS+2                                               03930000
RESETUJA EQU   BITFLAGS+2                                               03931000
         ORG   BITFLAGS+4                                               03932000
JSPJBC1  DS    A                                                        03933000
JSPJBC2  DS    A                                                        03934000
JSPLNCT  DS    A                                                        03935000
JSPSD095 DS    A                                                        03936000
DIGITCNT DS    H                                                        03937000
DIGTINDX DS    H                                                        03938000
DLMINDEX DS    H                                                        03939000
INDEX    DS    H                                                        03940000
ISBSCRPT DS    H                                                        03941000
LINCOUNT DS    H                                                        03942000
OSPACER  DS    H                                                        03943000
PLENLEFT DS    H                                                        03944000
CMNDCODE DS    CL2                                                      03945000
         DS    CL6                                                      03946000
DUBLWORD DS    CL8                                                      03947000
FULLWORD DS    CL4                                                      03948000
HRMINSEC DS    CL7                                                      03949000
PREVLINE DS    CL121                                                    03950000
REPLY290 DS    CL3                                                      03951000
RPTADDR1 DS    CL6                                                      03952000
RPTADDR2 DS    CL6                                                      03953000
SADPGMNM DS    CL8                                                      03954000
TEMPLINE DS    CL121                                                    03955000
UNITADDR DS    CL3                                                      03956000
         DS    CL1                                                      03957000
WTORECB  DS    CL4                                                      03958000
YEARDATE DS    CL5                                                      03959000
DUMPTYPE DS    CL17                                                     03960000
         ORG   DUMPTYPE                                                 03961000
AMSGPAR1 DS    CL10                                                     03962000
AMSGPAR2 DS    CL7                                                      03963000
         ORG   DUMPTYPE+17                                              03964000
         DS    CL6                                                      03965000
CCWCHAIN DS    CL24                                                     03966000
         ORG   CCWCHAIN                                                 03967000
CCW1     DS    CL8                                                      03968000
         ORG   CCW1                                                     03969000
CMDCODE1 DS    BL1                                                      03970000
DATADDR1 DS    AL3                                                      03971000
CCWFLAG1 DS    BL1                                                      03972000
         ORG   CCWFLAG1                                                 03973000
CHNDATA1 DS    BL1                                                      03974000
CHNCMND1 EQU   CCWFLAG1+0                                               03975000
SUPLENI1 EQU   CCWFLAG1+0                                               03976000
SKIPFLG1 EQU   CCWFLAG1+0                                               03977000
PCIFLAG1 EQU   CCWFLAG1+0                                               03978000
IDAFLAG1 EQU   CCWFLAG1+0                                               03979000
@NM00001 EQU   CCWFLAG1+0                                               03980000
         ORG   CCW1+5                                                   03981000
UNUSED1  DS    BL1                                                      03982000
COUNT1   DS    FL2                                                      03983000
         ORG   CCWCHAIN+8                                               03984000
CCW2     DS    CL8                                                      03985000
         ORG   CCW2                                                     03986000
CMDCODE2 DS    BL1                                                      03987000
DATADDR2 DS    AL3                                                      03988000
CCWFLAG2 DS    BL1                                                      03989000
         ORG   CCWFLAG2                                                 03990000
CHNDATA2 DS    BL1                                                      03991000
CHNCMND2 EQU   CCWFLAG2+0                                               03992000
SUPLENI2 EQU   CCWFLAG2+0                                               03993000
SKIPFLG2 EQU   CCWFLAG2+0                                               03994000
PCIFLAG2 EQU   CCWFLAG2+0                                               03995000
IDAFLAG2 EQU   CCWFLAG2+0                                               03996000
@NM00002 EQU   CCWFLAG2+0                                               03997000
         ORG   CCW2+5                                                   03998000
UNUSED2  DS    BL1                                                      03999000
COUNT2   DS    FL2                                                      04000000
         ORG   CCWCHAIN+16                                              04001000
CCW3     DS    CL8                                                      04002000
         ORG   CCW3                                                     04003000
CMDCODE3 DS    BL1                                                      04004000
DATADDR3 DS    AL3                                                      04005000
CCWFLAG3 DS    BL1                                                      04006000
         ORG   CCWFLAG3                                                 04007000
CHNDATA3 DS    BL1                                                      04008000
CHNCMND3 EQU   CCWFLAG3+0                                               04009000
SUPLENI3 EQU   CCWFLAG3+0                                               04010000
SKIPFLG3 EQU   CCWFLAG3+0                                               04011000
PCIFLAG3 EQU   CCWFLAG3+0                                               04012000
IDAFLAG3 EQU   CCWFLAG3+0                                               04013000
@NM00003 EQU   CCWFLAG3+0                                               04014000
         ORG   CCW3+5                                                   04015000
UNUSED3  DS    BL1                                                      04016000
COUNT3   DS    FL2                                                      04017000
         ORG   CCWCHAIN+24                                              04018000
CMND3838 DS    CL8                                                      04019000
         ORG   CMND3838                                                 04020000
PICMD    DS    FL2                                                      04021000
PIPRT    DS    CL2                                                      04022000
@NM00004 DS    CL4                                                      04023000
         ORG   CMND3838+8                                               04024000
@NM00006 DS    CL132                                                    04025000
         ORG   @NM00006                                                 04026000
RQBLKPTR DS    CL4                                                      04027000
RQBLK    DS    CL20                                                     04028000
TUPTRS   DS    CL24                                                     04029000
TXTUNITS DS    CL84                                                     04030000
         ORG   @NM00006+132                                             04031000
@NM00007 DS    CL12                                                     04032000
         ORG   @NM00007                                                 04033000
DYNARTRN DS    CL4                                                      04034000
DYNACODE DS    CL8                                                      04035000
         ORG   DYNACODE                                                 04036000
DYNAERRR DS    CL4                                                      04037000
DYNAINFO DS    CL4                                                      04038000
         ORG   @NM00007+12                                              04039000
APES     DS    CL648                                                    04040000
         ORG   APES                                                     04041000
APESID   DS    CL4                                                      04042000
APESUSER DS    FL4                                                      04043000
APESADDR DS    AL4                                                      04044000
APESAPMV DS    AL4                                                      04045000
APESFLGS DS    BL2                                                      04046000
         ORG   APESFLGS                                                 04047000
APESFLG0 DS    BL1                                                      04048000
         ORG   APESFLG0                                                 04049000
APESFDMP DS    BL1                                                      04050000
APESFREC EQU   APESFLG0+0                                               04051000
APESFSDP EQU   APESFLG0+0                                               04052000
@NM00135 EQU   APESFLG0+0                                               04053000
APESFRTY EQU   APESFLG0+0                                               04054000
APESFEXR EQU   APESFLG0+0                                               04055000
@NM00136 EQU   APESFLG0+0                                               04056000
         ORG   APESFLGS+1                                               04057000
APESFLG1 DS    BL1                                                      04058000
         ORG   APESFLG1                                                 04059000
APESFFRR DS    BL1                                                      04060000
APESFPRV EQU   APESFLG1+0                                               04061000
APESFLLK EQU   APESFLG1+0                                               04062000
APESFXLK EQU   APESFLG1+0                                               04063000
APESFGM  EQU   APESFLG1+0                                               04064000
APESFSDI EQU   APESFLG1+0                                               04065000
APESFSTE EQU   APESFLG1+0                                               04066000
APESUPSC EQU   APESFLG1+0                                               04067000
         ORG   APES+18                                                  04068000
APESSUID DS    BL1                                                      04069000
         ORG   APESSUID                                                 04070000
APESSU33 DS    BL1                                                      04071000
@NM00137 EQU   APESSUID+0                                               04072000
         ORG   APES+19                                                  04073000
APESCODE DS    FL1                                                      04074000
APESCOD1 DS    FL1                                                      04075000
APESCNTR DS    FL1                                                      04076000
APESMXCD DS    FL1                                                      04077000
@NM00138 DS    FL1                                                      04078000
@NM00139 DS    AL4                                                      04079000
@NM00140 DS    AL4                                                      04080000
@NM00141 DS    AL4                                                      04081000
APESEXRA DS    AL4                                                      04082000
APESR14S DS    AL4                                                      04083000
APESREGP DS    AL4                                                      04084000
APESREGZ DS    CL64                                                     04085000
APESMOD  DS    CL8                                                      04086000
APESPROC DS    CL8                                                      04087000
APESFRR  DS    CL8                                                      04088000
APESSDWA DS    CL512                                                    04089000
         ORG   APES+648                                                 04090000
JSPJBNAM DS    CL8                                                      04091000
JSPJBNUM DS    CL8                                                      04092000
TEMPADDR DS    2A                                                       04093000
IGTD80   CSECT                                                          04094000
         DS    0F                                                       04095000
@SIZDATD DC    AL1(0)                                                   04096000
         DC    AL3(@ENDDATD-@DATD)                                      04097000
         DS    0D                                                       04098000
@CC03335 DC    C'DUMP GENERATED ON'                                     04099000
@CC03327 DC    C' INTERNAL FORCE '                                      04100000
@CC03329 DC    C'INTERNAL DYNAMIC'                                      04101000
@CC03331 DC    C' OPERATOR FORCE '                                      04102000
@CC03333 DC    C'OPERATOR DYNAMIC'                                      04103000
@CC03355 DC    C'END OF XXXX DUMP'                                      04104000
@CC03420 DC    C'BULK STORAGE'                                          04105000
@CC03418 DC    C'C P STORAGE'                                           04106000
@CC03265 DC    C'INTERNALLY'                                            04107000
@CC03267 EQU   @CC03331                                                 04108000
@CC03346 DC    C'JOBNAME = '                                            04109000
@CC03348 DC    C'PAGE 0001'                                             04110000
@CC03422 EQU   @CC03346                                                 04111000
@CC00224 DC    C'DUMP3838'                                              04112000
@CC03233 DC    C',STORAGE'                                              04113000
@CC03246 DC    C'IGTD80  '                                              04114000
@CC03342 DC    C'FOR UNIT'                                              04115000
@CC03407 DC    C'PORTDUMP'                                              04116000
@CC03269 DC    C' FORCE '                                               04117000
@CC03270 DC    C'DYNAMIC'                                               04118000
@CC03417 DC    C'DUMP OF'                                               04119000
@CC03232 DC    C',FORCE'                                                04120000
@CC03028 DC    C'APES'                                                  04121000
@CC03272 EQU   @CC03335                                                 04122000
@CC03424 EQU   @CC03348                                                 04123000
@CC03231 DC    C',CP'                                                   04124000
@CC03262 DC    C'YES'                                                   04125000
@CC03376 DC    C'   '                                                   04126000
@CC03234 DC    C'=('                                                    04127000
@CC03255 DC    C'20'                                                    04128000
@CC03264 DC    C'NO'                                                    04129000
@CC03271 DC    C'04'                                                    04130000
@CC03274 DC    C'08'                                                    04131000
@CC03275 DC    C'12'                                                    04132000
@CC03283 DC    C'36'                                                    04133000
@CC03285 DC    C'48'                                                    04134000
@CC03288 DC    C'16'                                                    04135000
@CC03313 DC    C'24'                                                    04136000
@CC03314 DC    C'28'                                                    04137000
@CC03337 DC    C'19'                                                    04138000
@CC03339 DC    C'AT'                                                    04139000
@CC03357 DC    C'32'                                                    04140000
@CC03375 EQU   @CC03376                                                 04141000
@CC03411 DC    C'40'                                                    04142000
@CB03256 DC    X'00000000'                                              04143000
@CB00365 DC    X'0001'                                                  04144000
@CB00393 DC    X'000F'                                                  04145000
@CB00411 DC    X'0018'                                                  04146000
@CB00419 DC    X'001C'                                                  04147000
@CB00459 DC    X'0030'                                                  04148000
@CB00495 DC    X'0042'                                                  04149000
@CB00509 DC    X'0049'                                                  04150000
@CB03303 DC    X'0974'                                                  04151000
@CB03306 DC    X'0079'                                                  04152000
@CB03315 EQU   @CB03256                                                 04153000
CMDINTRO DC    CL25'INPUT DUMP COMMAND WAS : '                          04154000
REPETMSG DC    CL121'       LINE(S)        THROUGH        ARE SAME AS AC04155000
               BOVE LINE.'                                              04156000
         DS    CL1                                                      04157000
RQBFLAG1 DC    X'C000'                                                  04158000
         ORG   RQBFLAG1                                                 04159000
RQBONCNV DS    BL1                                                      04160000
RQBNOCNV EQU   RQBFLAG1+0                                               04161000
RQBNOMNT EQU   RQBFLAG1+0                                               04162000
@NM00012 EQU   RQBFLAG1+0                                               04163000
         ORG   RQBFLAG1+2                                               04164000
         DS    CL2                                                      04165000
RQBFLAG2 DC    X'20000000'                                              04166000
         ORG   RQBFLAG2                                                 04167000
RQBWTVOL DS    BL1                                                      04168000
RQBWTDSN EQU   RQBFLAG2+0                                               04169000
RQBNORES EQU   RQBFLAG2+0                                               04170000
@NM00013 EQU   RQBFLAG2+0                                               04171000
         ORG   RQBFLAG2+4                                               04172000
DELMTR   DC    CL1','                                                   04173000
         DC    CL1')'                                                   04174000
STAEMSGS DS    CL8                                                      04175000
         ORG   STAEMSGS+0                                               04176000
@NM00008 DC    H'36'                                                    04177000
@NM00009 DC    H'0'                                                     04178000
@NM00010 DC    H'0'                                                     04179000
@NM00011 DC    H'0'                                                     04180000
         ORG   STAEMSGS+8                                               04181000
         DS    CL2                                                      04182000
JSPTBL   DC    A(62)                                                    04183000
         DC    A(55)                                                    04184000
         DC    A(48)                                                    04185000
         DC    A(41)                                                    04186000
         DC    A(34)                                                    04187000
         DC    A(27)                                                    04188000
         DC    A(20)                                                    04189000
         DC    A(13)                                                    04190000
@DATD    DSECT                                                          04191000
*                                                                       04192000
DCBTEMPA  DCB  DDNAME=DUMPTEMP,                                        *04193000
               DSORG=PS,                                               *04194000
               RECFM=UT,                                               *04195000
               BLKSIZE=16392,                                          *04196000
               MACRF=(PL,GL)                                            04197000
DCB3838A  DCB  DDNAME=DUMP3838,                                        *04198000
               DSORG=PS,                                               *04199000
               RECFM=FBA,                                              *04200000
               LRECL=121,                                              *04201000
               BLKSIZE=2420,                                           *04202000
               MACRF=(PL)           /*                                  04203000
OPNTEMPA  OPEN   (,),MF=L                                               04204000
CLSTEMPA  CLOSE  (,),MF=L                                               04205000
ROPTEMPA  OPEN   (,),MF=L                                               04206000
RCLTEMPA  CLOSE  (,),MF=L                                               04207000
OPN3838A  OPEN   (,),MF=L                                               04208000
CLS3838A  CLOSE  (,),MF=L                                               04209000
D80STAEA  IGTYSTAE  *-*,CT,PURGE=NONE,MF=L                              04210000
WTOR290A WTOR  'IGT290A SSSS: CONFIRM FORCE DUMP. REPLY YES, U, OR NO',*04211000
               ROUTCDE=1,MF=L                                           04212000
IGTD80   CSECT                                                          04213000
*                                                                       04214000
DCBTEMPS  DCB  DDNAME=DUMPTEMP,                                        *04215000
               DSORG=PS,                                               *04216000
               RECFM=UT,                                               *04217000
               BLKSIZE=16392,                                          *04218000
               MACRF=(PL,GL)                                            04219000
DCBTEMPE  EQU  *-DCBTEMPS                                               04220000
DCB3838S  DCB  DDNAME=DUMP3838,                                        *04221000
               DSORG=PS,                                               *04222000
               RECFM=FBA,                                              *04223000
               LRECL=121,                                              *04224000
               BLKSIZE=2420,                                           *04225000
               MACRF=(PL)           /*                                  04226000
DCB3838E  EQU  *-DCB3838S                                               04227000
OPNTEMPS  OPEN (,),MF=L                                                 04228000
OPNTEMPE  EQU  *-OPNTEMPS                                               04229000
CLSTEMPS  CLOSE (,),MF=L                                                04230000
CLSTEMPE  EQU  *-CLSTEMPS                                               04231000
ROPTEMPS  OPEN (,),MF=L                                                 04232000
ROPTEMPE  EQU  *-ROPTEMPS                                               04233000
RCLTEMPS  CLOSE (,),MF=L                                                04234000
RCLTEMPE  EQU  *-RCLTEMPS                                               04235000
OPN3838S  OPEN (,),MF=L                                                 04236000
OPN3838E  EQU  *-OPN3838S                                               04237000
CLS3838S  CLOSE (,),MF=L                                                04238000
CLS3838E  EQU  *-CLS3838S                                               04239000
D80STAES  IGTYSTAE  *-*,CT,PURGE=NONE,MF=L                              04240000
D80STAEE  EQU  *-D80STAES                                               04241000
WTOR290S WTOR  'IGT290A SSSS: CONFIRM FORCE DUMP. REPLY YES, U, OR NO',*04242000
               ROUTCDE=1,MF=L                                           04243000
WTOR290E  EQU  *-WTOR290S                                               04244000
IGTD80   CSECT                                                          04245000
         IGTXZAP ,                 GENERATE PATCH AREA                  04246000
@DATD    DSECT                                                          04247000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                04248000
@ENDDATD EQU   *                                                        04249000
IGTD80   CSECT                                                          04250000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       04251000
@01      EQU   01                                                       04252000
@02      EQU   02                                                       04253000
@03      EQU   03                                                       04254000
@04      EQU   04                                                       04255000
@05      EQU   05                                                       04256000
@06      EQU   06                                                       04257000
@07      EQU   07                                                       04258000
@08      EQU   08                                                       04259000
@09      EQU   09                                                       04260000
@10      EQU   10                                                       04261000
@11      EQU   11                                                       04262000
@12      EQU   12                                                       04263000
@13      EQU   13                                                       04264000
@14      EQU   14                                                       04265000
@15      EQU   15                                                       04266000
JSPJNOFF EQU   @03                                                      04267000
JSPJBOFF EQU   @11                                                      04268000
SAVEPTR  EQU   @02                                                      04269000
UCBPTR   EQU   @02                                                      04270000
BUFFPTR2 EQU   @02                                                      04271000
BUFFPTR  EQU   @04                                                      04272000
A3838DCB EQU   @02                                                      04273000
PLENGTH  EQU   @02                                                      04274000
OSBSCRPT EQU   @11                                                      04275000
CMNDPSTR EQU   @11                                                      04276000
APDATA   EQU   @06                                                      04277000
APCODE   EQU   @07                                                      04278000
BREG2ND  EQU   @08                                                      04279000
BREG3RD  EQU   @05                                                      04280000
SDWAPTR  EQU   @01                                                      04281000
APCTPTR  EQU   @12                                                      04282000
APSVPTR  EQU   @13                                                      04283000
APCQPTR  EQU   @09                                                      04284000
APUBPTR  EQU   @10                                                      04285000
R3F      EQU   @03                                                      04286000
R4F      EQU   @04                                                      04287000
R14P     EQU   @14                                                      04288000
R15P     EQU   @15                                                      04289000
R0P      EQU   @00                                                      04290000
R3P      EQU   @03                                                      04291000
R4P      EQU   @04                                                      04292000
GPR00F   EQU   @00                                                      04293000
GPR01P   EQU   @01                                                      04294000
R15F     EQU   @15                                                      04295000
R1P      EQU   @01                                                      04296000
R0F      EQU   @00                                                      04297000
R1F      EQU   @01                                                      04298000
R2P      EQU   @02                                                      04299000
R5P      EQU   @05                                                      04300000
R6P      EQU   @06                                                      04301000
R7P      EQU   @07                                                      04302000
R8P      EQU   @08                                                      04303000
R9P      EQU   @09                                                      04304000
R10P     EQU   @10                                                      04305000
R11P     EQU   @11                                                      04306000
R12P     EQU   @12                                                      04307000
R13P     EQU   @13                                                      04308000
APACBPTR EQU   @09                                                      04309000
APATPTR  EQU   @11                                                      04310000
APAXPTR  EQU   @10                                                      04311000
APCIPTR  EQU   @08                                                      04312000
APCPPTR  EQU   @10                                                      04313000
APCWPTR  EQU   @08                                                      04314000
APDEBPTR EQU   @08                                                      04315000
APDSPTR  EQU   @11                                                      04316000
APDXPTR  EQU   @11                                                      04317000
APENTRY  EQU   @15                                                      04318000
APERPTR  EQU   @08                                                      04319000
APEXLPTR EQU   @10                                                      04320000
APINPTR  EQU   @01                                                      04321000
APIOPTR  EQU   @10                                                      04322000
APLBPTR  EQU   @11                                                      04323000
APNPPTR  EQU   @08                                                      04324000
APOCPTR  EQU   @10                                                      04325000
APOTPTR  EQU   @09                                                      04326000
APRCODE  EQU   @15                                                      04327000
APRETURN EQU   @14                                                      04328000
APRLPTR  EQU   @08                                                      04329000
APSCPTR  EQU   @01                                                      04330000
APSMPTR  EQU   @01                                                      04331000
APUTPTR  EQU   @11                                                      04332000
APXLPTR  EQU   @11                                                      04333000
R0RSTD   EQU   @00                                                      04334000
R1RSTD   EQU   @01                                                      04335000
R10F     EQU   @10                                                      04336000
R10RSTD  EQU   @10                                                      04337000
R11F     EQU   @11                                                      04338000
R11RSTD  EQU   @11                                                      04339000
R12F     EQU   @12                                                      04340000
R12RSTD  EQU   @12                                                      04341000
R13F     EQU   @13                                                      04342000
R13RSTD  EQU   @13                                                      04343000
R14F     EQU   @14                                                      04344000
R14RSTD  EQU   @14                                                      04345000
R15RSTD  EQU   @15                                                      04346000
R2F      EQU   @02                                                      04347000
R2RSTD   EQU   @02                                                      04348000
R3RSTD   EQU   @03                                                      04349000
R4RSTD   EQU   @04                                                      04350000
R5F      EQU   @05                                                      04351000
R5RSTD   EQU   @05                                                      04352000
R6F      EQU   @06                                                      04353000
R6RSTD   EQU   @06                                                      04354000
R7F      EQU   @07                                                      04355000
R7RSTD   EQU   @07                                                      04356000
R8F      EQU   @08                                                      04357000
R8RSTD   EQU   @08                                                      04358000
R9F      EQU   @09                                                      04359000
R9RSTD   EQU   @09                                                      04360000
EXCPECB  EQU   0                                                        04361000
INRECORD EQU   0                                                        04362000
PRNTLINE EQU   0                                                        04363000
DRHEADER EQU   0                                                        04364000
DRLTH    EQU   DRHEADER                                                 04365000
DRSTR    EQU   DRHEADER+2                                               04366000
ENDOFSTG EQU   DRSTR+1                                                  04367000
BULKSTG  EQU   DRSTR+1                                                  04368000
CPGMSTG  EQU   DRSTR+1                                                  04369000
DRBSA    EQU   DRHEADER+4                                               04370000
S99RBPTR EQU   0                                                        04371000
S99RBPND EQU   S99RBPTR                                                 04372000
S99RB    EQU   0                                                        04373000
S99RBLN  EQU   S99RB                                                    04374000
S99VERB  EQU   S99RB+1                                                  04375000
S99FLAG1 EQU   S99RB+2                                                  04376000
S99FLG11 EQU   S99FLAG1                                                 04377000
S99RSC   EQU   S99RB+4                                                  04378000
S99ERROR EQU   S99RSC                                                   04379000
S99INFO  EQU   S99RSC+2                                                 04380000
S99TXTPP EQU   S99RB+8                                                  04381000
S99RSV01 EQU   S99RB+12                                                 04382000
S99FLAG2 EQU   S99RB+16                                                 04383000
S99FLG21 EQU   S99FLAG2                                                 04384000
S99FLG22 EQU   S99FLAG2+1                                               04385000
S99TUPL  EQU   0                                                        04386000
S99TUPTR EQU   S99TUPL                                                  04387000
S99TUPLN EQU   S99TUPTR                                                 04388000
S99TUP   EQU   0                                                        04389000
S99TUNIT EQU   0                                                        04390000
S99TUKEY EQU   S99TUNIT                                                 04391000
S99TUNUM EQU   S99TUNIT+2                                               04392000
S99TUENT EQU   S99TUNIT+4                                               04393000
S99TULNG EQU   S99TUENT                                                 04394000
S99TUPAR EQU   S99TUENT+2                                               04395000
S99TUFLD EQU   0                                                        04396000
S99TULEN EQU   S99TUFLD                                                 04397000
CHAIN    EQU   0                                                        04398000
CHFLG    EQU   CHAIN+4                                                  04399000
CHSTS    EQU   CHFLG+2                                                  04400000
CHACT    EQU   CHFLG+3                                                  04401000
CHKEY    EQU   CHAIN+8                                                  04402000
CHPARM   EQU   CHKEY                                                    04403000
CHPKE    EQU   CHAIN+28                                                 04404000
CHTJID   EQU   CHAIN+30                                                 04405000
CHPROCSN EQU   CHAIN+32                                                 04406000
CHACT1   EQU   CHPROCSN+3                                               04407000
CHASM    EQU   CHAIN+40                                                 04408000
CHCIBP   EQU   CHASM+4                                                  04409000
CHRGNSZ  EQU   CHASM+8                                                  04410000
CHSTEP   EQU   CHASM+24                                                 04411000
CHSWT    EQU   CHSTEP                                                   04412000
CHSHORT  EQU   CHASM+32                                                 04413000
ASCB     EQU   0                                                        04414000
ASCBSUPC EQU   ASCB+16                                                  04415000
ASCBFW1  EQU   ASCB+100                                                 04416000
ASCBRCTF EQU   ASCBFW1+2                                                04417000
ASCBFLG1 EQU   ASCBFW1+3                                                04418000
ASCBDSP1 EQU   ASCB+114                                                 04419000
ASCBFLG2 EQU   ASCB+115                                                 04420000
ASCBLKGP EQU   ASCB+128                                                 04421000
ASCBSRQ  EQU   ASCB+180                                                 04422000
ASCBSRQ1 EQU   ASCBSRQ                                                  04423000
ASCBSRQ2 EQU   ASCBSRQ+1                                                04424000
ASCBSRQ3 EQU   ASCBSRQ+2                                                04425000
ASCBSRQ4 EQU   ASCBSRQ+3                                                04426000
UCB      EQU   0                                                        04427000
UCBOB    EQU   0                                                        04428000
UCBJBNR  EQU   UCBOB                                                    04429000
UCBFL5   EQU   UCBOB+1                                                  04430000
UCBAF    EQU   UCBFL5                                                   04431000
UCBSTAT  EQU   UCBOB+3                                                  04432000
UCBCHAN  EQU   UCBOB+4                                                  04433000
UCBSFLS  EQU   UCBOB+6                                                  04434000
UCBFLA   EQU   UCBSFLS                                                  04435000
UCBFL1   EQU   UCBFLA                                                   04436000
UCBBSY   EQU   UCBFL1                                                   04437000
UCBNRY   EQU   UCBFL1                                                   04438000
UCBPST   EQU   UCBFL1                                                   04439000
UCBCUB   EQU   UCBFL1                                                   04440000
UCBFLB   EQU   UCBSFLS+1                                                04441000
UCBCHM   EQU   UCBOB+8                                                  04442000
UCBCHM1  EQU   UCBCHM                                                   04443000
UCBPTH0  EQU   UCBCHM1                                                  04444000
UCBPTH1  EQU   UCBCHM1                                                  04445000
UCBWGT   EQU   UCBOB+12                                                 04446000
UCBNAME  EQU   UCBOB+13                                                 04447000
UCBTYP   EQU   UCBOB+16                                                 04448000
UCBTBYT1 EQU   UCBTYP                                                   04449000
UCB1FEA5 EQU   UCBTBYT1                                                 04450000
UCB1FEA6 EQU   UCBTBYT1                                                 04451000
UCBTBYT2 EQU   UCBTYP+1                                                 04452000
UCB2OPT2 EQU   UCBTBYT2                                                 04453000
UCBDUDN1 EQU   UCB2OPT2                                                 04454000
UCB2OPT3 EQU   UCBTBYT2                                                 04455000
UCBDUDN2 EQU   UCB2OPT3                                                 04456000
UCB2OPT4 EQU   UCBTBYT2                                                 04457000
UCBRWTAU EQU   UCB2OPT4                                                 04458000
UCB2OPT6 EQU   UCBTBYT2                                                 04459000
UCB2OPT7 EQU   UCBTBYT2                                                 04460000
UCBTBYT3 EQU   UCBTYP+2                                                 04461000
UCBDVCLS EQU   UCBTBYT3                                                 04462000
UCBTBYT4 EQU   UCBTYP+3                                                 04463000
UCBEXTPT EQU   UCBOB+20                                                 04464000
UCBFLC   EQU   UCBEXTPT                                                 04465000
UCBDEV   EQU   UCBOB+24                                                 04466000
UCBCMEXT EQU   0                                                        04467000
UCBATI   EQU   UCBCMEXT+3                                               04468000
@NM00021 EQU   UCBATI                                                   04469000
UCBFLP1  EQU   UCBCMEXT+5                                               04470000
UCBMT    EQU   0                                                        04471000
UCBOCR   EQU   0                                                        04472000
UCB3540X EQU   0                                                        04473000
UCBDKBYT EQU   UCB3540X+6                                               04474000
UCB3800X EQU   0                                                        04475000
UCBOPTNS EQU   UCB3800X                                                 04476000
UCBACTIV EQU   UCB3800X+3                                               04477000
UCBMDRBF EQU   UCB3800X+36                                              04478000
UCBUCS   EQU   0                                                        04479000
UCBUCSOP EQU   UCBUCS+4                                                 04480000
UCBFCBOP EQU   UCBUCS+5                                                 04481000
IOBPREFX EQU   0                                                        04482000
IOBCFLG1 EQU   IOBPREFX                                                 04483000
IOBSTDRD EQU   0                                                        04484000
IOBFLAG1 EQU   IOBSTDRD                                                 04485000
IOBCYCCK EQU   IOBFLAG1                                                 04486000
IOBRSTRT EQU   IOBFLAG1                                                 04487000
IOBFLAG2 EQU   IOBSTDRD+1                                               04488000
IOBPURGE EQU   IOBFLAG2                                                 04489000
IOBRDHA0 EQU   IOBFLAG2                                                 04490000
IOBSENS0 EQU   IOBSTDRD+2                                               04491000
IOBS0B7  EQU   IOBSENS0                                                 04492000
IOBSENS1 EQU   IOBSTDRD+3                                               04493000
IOBECBPT EQU   IOBSTDRD+4                                               04494000
IOBFLAG3 EQU   IOBSTDRD+8                                               04495000
IOBFL3   EQU   IOBFLAG3                                                 04496000
IOBCNC   EQU   IOBFL3                                                   04497000
IOBICL   EQU   IOBFL3                                                   04498000
IOBCSW   EQU   IOBSTDRD+9                                               04499000
IOBIOCSW EQU   IOBCSW                                                   04500000
IOBSTBYT EQU   IOBIOCSW+3                                               04501000
IOBUSTAT EQU   IOBSTBYT                                                 04502000
IOBCSTAT EQU   IOBSTBYT+1                                               04503000
IOBSTART EQU   IOBSTDRD+16                                              04504000
IOBDCBPT EQU   IOBSTDRD+20                                              04505000
IOBFLAG4 EQU   IOBDCBPT                                                 04506000
IOBRESTR EQU   IOBSTDRD+24                                              04507000
IOBINCAM EQU   IOBSTDRD+28                                              04508000
IOBBTAMF EQU   IOBINCAM                                                 04509000
ECB      EQU   0                                                        04510000
ECBRB    EQU   ECB                                                      04511000
ECBEVTB  EQU   ECBRB                                                    04512000
ECBEXTB  EQU   ECBEVTB                                                  04513000
ECBCC    EQU   ECBEXTB                                                  04514000
ECBCCCNT EQU   ECBEXTB+1                                                04515000
ECBRBA   EQU   ECBCCCNT                                                 04516000
ECBEVTBA EQU   ECBRBA                                                   04517000
ECBEXTBA EQU   ECBEVTBA                                                 04518000
ECBBYTE3 EQU   ECBEXTBA+2                                               04519000
ECBEXTND EQU   ECBBYTE3                                                 04520000
IHADCB   EQU   0                                                        04521000
IHADCS11 EQU   0                                                        04522000
DCBRELB  EQU   IHADCS11                                                 04523000
DCBREL   EQU   DCBRELB+1                                                04524000
DCBBUFCB EQU   IHADCS11+4                                               04525000
DCBDSORG EQU   IHADCS11+10                                              04526000
DCBDSRG1 EQU   DCBDSORG                                                 04527000
DCBDSRG2 EQU   DCBDSORG+1                                               04528000
DCBIOBAD EQU   IHADCS11+12                                              04529000
DCBODEB  EQU   DCBIOBAD                                                 04530000
DCBLNP   EQU   DCBODEB                                                  04531000
DCBQSLM  EQU   DCBLNP                                                   04532000
DCBIOBAA EQU   DCBODEB+1                                                04533000
IHADCS50 EQU   0                                                        04534000
DCBSVCXL EQU   IHADCS50                                                 04535000
DCBEODAD EQU   IHADCS50+4                                               04536000
DCBBFALN EQU   DCBEODAD                                                 04537000
DCBHIARC EQU   DCBBFALN                                                 04538000
DCBBFTEK EQU   DCBHIARC                                                 04539000
DCBBFT   EQU   DCBBFTEK                                                 04540000
DCBEXLST EQU   IHADCS50+8                                               04541000
DCBRECFM EQU   DCBEXLST                                                 04542000
DCBRECLA EQU   DCBRECFM                                                 04543000
IHADCS24 EQU   0                                                        04544000
DCBOFLGS EQU   IHADCS24+8                                               04545000
DCBOFLWR EQU   DCBOFLGS                                                 04546000
DCBOFOPN EQU   DCBOFLGS                                                 04547000
DCBIFLG  EQU   IHADCS24+9                                               04548000
DCBIBPCT EQU   DCBIFLG                                                  04549000
DCBMACR  EQU   IHADCS24+10                                              04550000
DCBMACR1 EQU   DCBMACR                                                  04551000
DCBMRFE  EQU   DCBMACR1                                                 04552000
DCBMRGET EQU   DCBMRFE                                                  04553000
DCBMRAPG EQU   DCBMACR1                                                 04554000
DCBMRRD  EQU   DCBMRAPG                                                 04555000
DCBMRCI  EQU   DCBMACR1                                                 04556000
DCBMRMVG EQU   DCBMRCI                                                  04557000
DCBMRLCG EQU   DCBMACR1                                                 04558000
DCBMRABC EQU   DCBMACR1                                                 04559000
DCBMRPT1 EQU   DCBMRABC                                                 04560000
DCBMRSBG EQU   DCBMRPT1                                                 04561000
DCBMRCRL EQU   DCBMACR1                                                 04562000
DCBMRCHK EQU   DCBMRCRL                                                 04563000
DCBMRRDX EQU   DCBMRCHK                                                 04564000
DCBMRDMG EQU   DCBMACR1                                                 04565000
DCBMACR2 EQU   DCBMACR+1                                                04566000
DCBMRPUT EQU   DCBMACR2                                                 04567000
DCBMRWRT EQU   DCBMACR2                                                 04568000
DCBMRMVP EQU   DCBMACR2                                                 04569000
DCBMR5WD EQU   DCBMACR2                                                 04570000
DCBMRLDM EQU   DCBMR5WD                                                 04571000
DCBMRLCP EQU   DCBMRLDM                                                 04572000
DCBMR4WD EQU   DCBMACR2                                                 04573000
DCBMRPT2 EQU   DCBMR4WD                                                 04574000
DCBMRTMD EQU   DCBMRPT2                                                 04575000
DCBMR3WD EQU   DCBMACR2                                                 04576000
DCBMRCTL EQU   DCBMR3WD                                                 04577000
DCBMRSTK EQU   DCBMRCTL                                                 04578000
DCBMR1WD EQU   DCBMACR2                                                 04579000
DCBMRSWA EQU   DCBMR1WD                                                 04580000
DCBMRDMD EQU   DCBMRSWA                                                 04581000
IHADCS25 EQU   0                                                        04582000
DCBMACRF EQU   IHADCS25+2                                               04583000
DCBMACF1 EQU   DCBMACRF                                                 04584000
DCBMFFE  EQU   DCBMACF1                                                 04585000
DCBMFGET EQU   DCBMFFE                                                  04586000
DCBMFAPG EQU   DCBMACF1                                                 04587000
DCBMFRD  EQU   DCBMFAPG                                                 04588000
DCBMFCI  EQU   DCBMACF1                                                 04589000
DCBMFMVG EQU   DCBMFCI                                                  04590000
DCBMFLCG EQU   DCBMACF1                                                 04591000
DCBMFABC EQU   DCBMACF1                                                 04592000
DCBMFPT1 EQU   DCBMFABC                                                 04593000
DCBMFSBG EQU   DCBMFPT1                                                 04594000
DCBMFCRL EQU   DCBMACF1                                                 04595000
DCBMFCHK EQU   DCBMFCRL                                                 04596000
DCBMFDMG EQU   DCBMACF1                                                 04597000
DCBMACF2 EQU   DCBMACRF+1                                               04598000
DCBMFPUT EQU   DCBMACF2                                                 04599000
DCBMFWRT EQU   DCBMACF2                                                 04600000
DCBMFMVP EQU   DCBMACF2                                                 04601000
DCBMF5WD EQU   DCBMACF2                                                 04602000
DCBMFLDM EQU   DCBMF5WD                                                 04603000
DCBMFLCP EQU   DCBMFLDM                                                 04604000
DCBMF4WD EQU   DCBMACF2                                                 04605000
DCBMFPT2 EQU   DCBMF4WD                                                 04606000
DCBMFTMD EQU   DCBMFPT2                                                 04607000
DCBMF3WD EQU   DCBMACF2                                                 04608000
DCBMFCTL EQU   DCBMF3WD                                                 04609000
DCBMFSTK EQU   DCBMFCTL                                                 04610000
DCBMF1WD EQU   DCBMACF2                                                 04611000
DCBMFSWA EQU   DCBMF1WD                                                 04612000
DCBMFDMD EQU   DCBMFSWA                                                 04613000
DCBDEBAD EQU   IHADCS25+4                                               04614000
DCBIFLGS EQU   DCBDEBAD                                                 04615000
DCBIFPCT EQU   DCBIFLGS                                                 04616000
IHADCS28 EQU   0                                                        04617000
DCBOPTCD EQU   IHADCS28                                                 04618000
DCBOPTZ  EQU   DCBOPTCD                                                 04619000
IHADCS44 EQU   0                                                        04620000
SDWA     EQU   0                                                        04621000
SDWAFIOB EQU   SDWA+4                                                   04622000
SDWAABCC EQU   SDWAFIOB                                                 04623000
SDWACMPF EQU   SDWAABCC                                                 04624000
SDWACTL1 EQU   SDWA+8                                                   04625000
SDWACMKA EQU   SDWACTL1                                                 04626000
SDWAMWPA EQU   SDWACTL1+1                                               04627000
SDWAPMKA EQU   SDWACTL1+4                                               04628000
SDWACTL2 EQU   SDWA+16                                                  04629000
SDWACMKP EQU   SDWACTL2                                                 04630000
SDWAMWPP EQU   SDWACTL2+1                                               04631000
SDWAPMKP EQU   SDWACTL2+4                                               04632000
SDWAGRSV EQU   SDWA+24                                                  04633000
SDWANAME EQU   SDWA+88                                                  04634000
SDWAEC1  EQU   SDWA+104                                                 04635000
SDWAEMK1 EQU   SDWAEC1                                                  04636000
SDWAMWP1 EQU   SDWAEC1+1                                                04637000
SDWAINT1 EQU   SDWAEC1+2                                                04638000
SDWANXT1 EQU   SDWAEC1+4                                                04639000
SDWAAEC1 EQU   SDWA+112                                                 04640000
SDWAILC1 EQU   SDWAAEC1+1                                               04641000
SDWAINC1 EQU   SDWAAEC1+2                                               04642000
SDWAICD1 EQU   SDWAINC1+1                                               04643000
SDWAEC2  EQU   SDWA+120                                                 04644000
SDWAEMK2 EQU   SDWAEC2                                                  04645000
SDWAMWP2 EQU   SDWAEC2+1                                                04646000
SDWAINT2 EQU   SDWAEC2+2                                                04647000
SDWANXT2 EQU   SDWAEC2+4                                                04648000
SDWAAEC2 EQU   SDWA+128                                                 04649000
SDWAILC2 EQU   SDWAAEC2+1                                               04650000
SDWAINC2 EQU   SDWAAEC2+2                                               04651000
SDWAICD2 EQU   SDWAINC2+1                                               04652000
SDWASRSV EQU   SDWA+136                                                 04653000
SDWAIDNT EQU   SDWA+200                                                 04654000
SDWAMCH  EQU   SDWA+204                                                 04655000
SDWASTCK EQU   SDWAMCH                                                  04656000
SDWAMCHI EQU   SDWAMCH+8                                                04657000
SDWAMCHS EQU   SDWAMCHI                                                 04658000
SDWAMCHD EQU   SDWAMCHI+1                                               04659000
SDWARSR1 EQU   SDWAMCH+12                                               04660000
SDWARSR2 EQU   SDWAMCH+13                                               04661000
SDWAFLGS EQU   SDWA+232                                                 04662000
SDWAERRA EQU   SDWAFLGS                                                 04663000
SDWAERRB EQU   SDWAFLGS+1                                               04664000
SDWAERRC EQU   SDWAFLGS+2                                               04665000
SDWAERRD EQU   SDWAFLGS+3                                               04666000
SDWAIOFS EQU   SDWA+238                                                 04667000
SDWACPUA EQU   SDWA+248                                                 04668000
SDWAPARQ EQU   SDWA+252                                                 04669000
SDWAACF2 EQU   SDWAPARQ+1                                               04670000
SDWAACF3 EQU   SDWAPARQ+2                                               04671000
SDWAACF4 EQU   SDWAPARQ+3                                               04672000
SDWALKWA EQU   SDWA+256                                                 04673000
SDWALKWS EQU   SDWALKWA                                                 04674000
SDWARECP EQU   SDWA+292                                                 04675000
SDWASNPA EQU   SDWA+320                                                 04676000
SDWADUMP EQU   SDWASNPA                                                 04677000
SDWADPFS EQU   SDWADUMP+1                                               04678000
SDWADDAT EQU   SDWASNPA+4                                               04679000
SDWASDAT EQU   SDWADDAT                                                 04680000
SDWASDA0 EQU   SDWASDAT                                                 04681000
SDWASDA1 EQU   SDWASDAT+1                                               04682000
SDWAPDAT EQU   SDWADDAT+2                                               04683000
SDWADPSA EQU   SDWA+328                                                 04684000
SDWADPSL EQU   SDWADPSA                                                 04685000
SDWARA   EQU   SDWA+400                                                 04686000
SDWADPVA EQU   SDWARA+2                                                 04687000
APCQ     EQU   0                                                        04688000
APCQIINF EQU   APCQ+12                                                  04689000
APCQPLEN EQU   APCQ+20                                                  04690000
APCQPSTR EQU   APCQ+22                                                  04691000
APCQSW   EQU   APCQ+24                                                  04692000
APCQINT  EQU   APCQSW                                                   04693000
APCQTXLN EQU   APCQ+26                                                  04694000
APCQCMND EQU   APCQ+28                                                  04695000
APCT     EQU   0                                                        04696000
APCTENQM EQU   APCT+12                                                  04697000
APCTSSID EQU   APCTENQM+4                                               04698000
APCTLINE EQU   APCT+28                                                  04699000
APCTSMIN EQU   APCT+32                                                  04700000
APCTSMAD EQU   APCT+36                                                  04701000
APCTZ@@@ EQU   APCT+40                                                  04702000
APCTU@@@ EQU   APCT+440                                                 04703000
APCTBR14 EQU   APCT+840                                                 04704000
APCTAPUB EQU   APCT+848                                                 04705000
APCTERRS EQU   APCT+876                                                 04706000
APCTSOUT EQU   APCT+934                                                 04707000
@NM00097 EQU   APCT+936                                                 04708000
APCTSTAT EQU   @NM00097                                                 04709000
APCTHALT EQU   APCTSTAT                                                 04710000
APCTPRSW EQU   @NM00097+1                                               04711000
APCTAPCQ EQU   APCT+944                                                 04712000
APCTCQAQ EQU   APCT+952                                                 04713000
APCTZ@@1 EQU   APCT+1120                                                04714000
APCVZDX1 EQU   0                                                        04715000
APCVZDX2 EQU   0                                                        04716000
APCVZDWT EQU   0                                                        04717000
APCVZDEQ EQU   0                                                        04718000
APCVZDDQ EQU   0                                                        04719000
APCVZDIO EQU   0                                                        04720000
APCVZUJA EQU   0                                                        04721000
APDS     EQU   0                                                        04722000
APDSTD   EQU   APDS+16                                                  04723000
APDSFLGS EQU   APDS+64                                                  04724000
APDSFLG0 EQU   APDSFLGS                                                 04725000
APDSFLG1 EQU   APDSFLGS+1                                               04726000
APESREGS EQU   0                                                        04727000
APESREGF EQU   APESREGS+60                                              04728000
APESMV   EQU   0                                                        04729000
APSV     EQU   0                                                        04730000
APSVREGS EQU   APSV+12                                                  04731000
APUB     EQU   0                                                        04732000
APUBAPUB EQU   APUB+4                                                   04733000
APUBMSTR EQU   APUB+8                                                   04734000
APUBUCB  EQU   APUB+28                                                  04735000
APUBERRS EQU   APUB+52                                                  04736000
APUBIPL  EQU   APUB+74                                                  04737000
APUBALFG EQU   APUB+80                                                  04738000
APUBALF0 EQU   APUBALFG                                                 04739000
APUBALF1 EQU   APUBALFG+1                                               04740000
APUBALF2 EQU   APUBALFG+2                                               04741000
APUBALF3 EQU   APUBALFG+3                                               04742000
APUBSTAT EQU   APUB+84                                                  04743000
APUBRIPL EQU   APUBSTAT                                                 04744000
APUBIOFG EQU   APUB+88                                                  04745000
APUBIOF0 EQU   APUBIOFG                                                 04746000
APUBIDWN EQU   APUBIOF0                                                 04747000
APUBIOF1 EQU   APUBIOFG+1                                               04748000
APUBIIPL EQU   APUBIOF1                                                 04749000
APUBIOF2 EQU   APUBIOFG+2                                               04750000
APUBIOF3 EQU   APUBIOFG+3                                               04751000
APUBIRIP EQU   APUBIOF3                                                 04752000
APUBDCB  EQU   APUB+96                                                  04753000
APUBJBNM EQU   APUB+104                                                 04754000
BIT0013X EQU   0                                                        04755000
BIT0015X EQU   0                                                        04756000
BLOCKGEN EQU   0                                                        04757000
APCVZDAL EQU   0                                                        04758000
APCVZDAP EQU   0                                                        04759000
APCVZDBK EQU   0                                                        04760000
APCVZDDA EQU   0                                                        04761000
APCVZDID EQU   0                                                        04762000
APCVZDIP EQU   0                                                        04763000
APCVZDMD EQU   0                                                        04764000
APCVZDMM EQU   0                                                        04765000
APCVZDQR EQU   0                                                        04766000
APCVZDRI EQU   0                                                        04767000
APCVZDUA EQU   0                                                        04768000
APCVZDUL EQU   0                                                        04769000
APCVZDWI EQU   0                                                        04770000
APCVZDX3 EQU   0                                                        04771000
APCVZDX4 EQU   0                                                        04772000
APCVZD10 EQU   0                                                        04773000
APCVZD20 EQU   0                                                        04774000
APCVZD4E EQU   0                                                        04775000
APCVZD40 EQU   0                                                        04776000
APCVZD41 EQU   0                                                        04777000
APCVZD42 EQU   0                                                        04778000
APCVZD43 EQU   0                                                        04779000
APCVZD44 EQU   0                                                        04780000
APCVZD45 EQU   0                                                        04781000
APCVZD46 EQU   0                                                        04782000
APCVZD47 EQU   0                                                        04783000
APCVZD48 EQU   0                                                        04784000
APCVZD49 EQU   0                                                        04785000
APCVZD60 EQU   0                                                        04786000
APCVZD80 EQU   0                                                        04787000
APCVZD81 EQU   0                                                        04788000
APCVZD82 EQU   0                                                        04789000
APCVZD83 EQU   0                                                        04790000
APCVZJAA EQU   0                                                        04791000
APCVZJAD EQU   0                                                        04792000
APCVZJAG EQU   0                                                        04793000
APCVZJAJ EQU   0                                                        04794000
APCVZJAM EQU   0                                                        04795000
APCVZJAP EQU   0                                                        04796000
APCVZJAX EQU   0                                                        04797000
APCVZJAY EQU   0                                                        04798000
APCVZJBA EQU   0                                                        04799000
APCVZJBD EQU   0                                                        04800000
APCVZJBG EQU   0                                                        04801000
APCVZJBJ EQU   0                                                        04802000
APCVZJBM EQU   0                                                        04803000
APCVZJDA EQU   0                                                        04804000
APCVZJDD EQU   0                                                        04805000
APCVZJDG EQU   0                                                        04806000
APCVZJDJ EQU   0                                                        04807000
APCVZJDM EQU   0                                                        04808000
APCVZJHC EQU   0                                                        04809000
APCVZJHE EQU   0                                                        04810000
APCVZJHF EQU   0                                                        04811000
APCVZJHO EQU   0                                                        04812000
APCVZJHQ EQU   0                                                        04813000
APCVZJHR EQU   0                                                        04814000
APCVZJHT EQU   0                                                        04815000
APCVZJHW EQU   0                                                        04816000
APCVZJH0 EQU   0                                                        04817000
APCVZJH6 EQU   0                                                        04818000
APCVZJI0 EQU   0                                                        04819000
APCVZJI3 EQU   0                                                        04820000
APCVZJJ0 EQU   0                                                        04821000
APCVZKAA EQU   0                                                        04822000
APCVZKBA EQU   0                                                        04823000
APCVZKBB EQU   0                                                        04824000
APCVZKBC EQU   0                                                        04825000
APCVZKBD EQU   0                                                        04826000
APCVZKBE EQU   0                                                        04827000
APCVZKBF EQU   0                                                        04828000
APCVZKCA EQU   0                                                        04829000
APCVZKDA EQU   0                                                        04830000
APCVZKGA EQU   0                                                        04831000
APCVZKGB EQU   0                                                        04832000
APCVZKGC EQU   0                                                        04833000
APCVZKGD EQU   0                                                        04834000
APCVZLCA EQU   0                                                        04835000
APCVZLCB EQU   0                                                        04836000
APCVZMBA EQU   0                                                        04837000
APCVZMBD EQU   0                                                        04838000
APCVZMBG EQU   0                                                        04839000
APCVZMBH EQU   0                                                        04840000
APCVZMBK EQU   0                                                        04841000
APCVZMBM EQU   0                                                        04842000
APCVZMIB EQU   0                                                        04843000
APCVZMIC EQU   0                                                        04844000
APCVZMIF EQU   0                                                        04845000
APCVZMJB EQU   0                                                        04846000
APCVZMJC EQU   0                                                        04847000
APCVZMJH EQU   0                                                        04848000
APCVZMJI EQU   0                                                        04849000
APCVZMMA EQU   0                                                        04850000
APCVZUAA EQU   0                                                        04851000
APCVZUAB EQU   0                                                        04852000
APCVZUAC EQU   0                                                        04853000
APCVZUAD EQU   0                                                        04854000
APCVZUAE EQU   0                                                        04855000
APCVZUAF EQU   0                                                        04856000
APCVZUAG EQU   0                                                        04857000
APCVZUBB EQU   0                                                        04858000
APCVZUFA EQU   0                                                        04859000
APCVZUHA EQU   0                                                        04860000
APCVZUHB EQU   0                                                        04861000
APCVZUKA EQU   0                                                        04862000
APCV1CMD EQU   0                                                        04863000
APCV1JAA EQU   0                                                        04864000
APCV1JBJ EQU   0                                                        04865000
APCV1JHC EQU   0                                                        04866000
APCV1JHL EQU   0                                                        04867000
APCV1JHT EQU   0                                                        04868000
APCV1MAB EQU   0                                                        04869000
APCV1MBD EQU   0                                                        04870000
APCV2JHC EQU   0                                                        04871000
APCV2JHL EQU   0                                                        04872000
APCV2MBD EQU   0                                                        04873000
I001C    EQU   0                                                        04874000
I008P    EQU   0                                                        04875000
I015F    EQU   0                                                        04876000
I015P    EQU   0                                                        04877000
I031F    EQU   0                                                        04878000
I031P    EQU   0                                                        04879000
I256C    EQU   0                                                        04880000
UCBBGN   EQU   0                                                        04881000
HADDRESS EQU   LADDRESS                                                 04882000
CHAINS01 EQU   CHASM                                                    04883000
CHTYPE   EQU   CHAINS01+124                                             04884000
CHTRSTAT EQU   CHAINS01+125                                             04885000
CHCSYSO  EQU   CHAINS01+134                                             04886000
UCBOBS01 EQU   UCBDEV                                                   04887000
UCBSTAB  EQU   UCBOBS01+10                                              04888000
UCBBSVL  EQU   UCBSTAB                                                  04889000
UCBPRSRS EQU   UCBSTAB                                                  04890000
UCBDMCT  EQU   UCBOBS01+11                                              04891000
UCBFL4   EQU   UCBOBS01+13                                              04892000
UCBOBS02 EQU   UCBDEV                                                   04893000
UCBTFL1  EQU   UCBOBS02+19                                              04894000
UCBXTN   EQU   UCBOBS02+20                                              04895000
UCBVOPT  EQU   UCBXTN                                                   04896000
UCBOBS03 EQU   UCBDEV                                                   04897000
UCBXTADR EQU   UCBOBS03                                                 04898000
UCBOBS04 EQU   UCBDEV                                                   04899000
UCBBTA   EQU   UCBOBS04+12                                              04900000
UCBOBS06 EQU   UCBDEV                                                   04901000
UCBAOF   EQU   UCBOBS06                                                 04902000
UCBAOF1  EQU   UCBAOF                                                   04903000
UCBAOF2  EQU   UCBAOF+1                                                 04904000
@NM00020 EQU   UCBOBS06+3                                               04905000
UCBIRB   EQU   UCBOBS06+4                                               04906000
UCBGRAF  EQU   UCBIRB                                                   04907000
UCBLDNCA EQU   UCBOBS06+8                                               04908000
UCBRDYQ  EQU   UCBLDNCA                                                 04909000
UCBIRLN  EQU   UCBRDYQ                                                  04910000
UCBLDNCB EQU   UCBRDYQ+1                                                04911000
UCBCTLNK EQU   UCBOBS06+12                                              04912000
UCBOBS07 EQU   UCBDEV                                                   04913000
UCBOBS08 EQU   UCBDEV                                                   04914000
UCBCTCAD EQU   UCBOBS08                                                 04915000
UCBCTCF1 EQU   UCBOBS08+4                                               04916000
UCBOBS09 EQU   UCBDEV                                                   04917000
IOBORG01 EQU   IOBPREFX+8                                               04918000
IOBNIOBA EQU   IOBORG01                                                 04919000
IOBNFLG1 EQU   IOBNIOBA                                                 04920000
IOBPRTOV EQU   IOBNFLG1                                                 04921000
IOBORG02 EQU   IOBPREFX+8                                               04922000
IOBDQADA EQU   IOBORG02                                                 04923000
IOBDEQIN EQU   IOBDQADA                                                 04924000
IOBORG03 EQU   IOBPREFX+12                                              04925000
IOBORG04 EQU   IOBINCAM                                                 04926000
IOBORG12 EQU   IOBINCAM                                                 04927000
IOBFL4   EQU   IOBORG12                                                 04928000
IOBEXTEN EQU   IOBSTDRD+32                                              04929000
IOBSEEK  EQU   IOBEXTEN                                                 04930000
IOBBB    EQU   IOBSEEK+1                                                04931000
IOBCC    EQU   IOBSEEK+3                                                04932000
IOBHH    EQU   IOBSEEK+5                                                04933000
IOBORG05 EQU   IOBEXTEN                                                 04934000
IOBORG06 EQU   IOBEXTEN                                                 04935000
IOBNXTPT EQU   IOBORG06+4                                               04936000
IOBSTATA EQU   IOBNXTPT                                                 04937000
IOBORG07 EQU   IOBEXTEN+8                                               04938000
W1IEXTEN EQU   IOBORG07                                                 04939000
IOBORG08 EQU   IOBEXTEN+8                                               04940000
IOBINDCT EQU   IOBORG08+4                                               04941000
IOBUNSQR EQU   IOBORG08+5                                               04942000
IOBFCHAD EQU   IOBORG08+8                                               04943000
IOBORG09 EQU   IOBEXTEN+8                                               04944000
IOBDPLAD EQU   IOBORG09+4                                               04945000
IOBDTYPE EQU   IOBORG09+8                                               04946000
IOBDTYP2 EQU   IOBORG09+9                                               04947000
IOBDSTAT EQU   IOBORG09+10                                              04948000
IOBSTAT1 EQU   IOBDSTAT                                                 04949000
IOBORG10 EQU   IOBEXTEN+8                                               04950000
IOBSEEK2 EQU   IOBORG10                                                 04951000
IOBORG11 EQU   IOBEXTEN                                                 04952000
IOBERCT  EQU   IOBORG11                                                 04953000
IOBUCBXV EQU   IOBERCT                                                  04954000
IOBNAME  EQU   IOBORG11+4                                               04955000
IOBORG13 EQU   IOBEXTEN                                                 04956000
IOBSKADR EQU   IOBORG13                                                 04957000
APCTZ    EQU   APCTZ@@@                                                 04958000
APCTZUAA EQU   APCTZ                                                    04959000
APCTZUAB EQU   APCTZ+4                                                  04960000
APCTZUAC EQU   APCTZ+8                                                  04961000
APCTZUAD EQU   APCTZ+12                                                 04962000
APCTZUAE EQU   APCTZ+16                                                 04963000
APCTZUBB EQU   APCTZ+24                                                 04964000
APCTZD10 EQU   APCTZ+28                                                 04965000
APCTZD20 EQU   APCTZ+32                                                 04966000
APCTZD40 EQU   APCTZ+36                                                 04967000
APCTZD41 EQU   APCTZ+40                                                 04968000
APCTZD42 EQU   APCTZ+44                                                 04969000
APCTZD43 EQU   APCTZ+48                                                 04970000
APCTZD44 EQU   APCTZ+52                                                 04971000
APCTZD45 EQU   APCTZ+56                                                 04972000
APCTZD46 EQU   APCTZ+60                                                 04973000
APCTZD47 EQU   APCTZ+64                                                 04974000
APCTZD48 EQU   APCTZ+68                                                 04975000
APCTZD49 EQU   APCTZ+72                                                 04976000
APCTZD60 EQU   APCTZ+76                                                 04977000
APCTZD80 EQU   APCTZ+80                                                 04978000
APCTZD4E EQU   APCTZ+84                                                 04979000
APCTZMBA EQU   APCTZ+88                                                 04980000
APCTZMBD EQU   APCTZ+92                                                 04981000
APCTZMBG EQU   APCTZ+96                                                 04982000
APCTZDX1 EQU   APCTZ+104                                                04983000
APCTZDX2 EQU   APCTZ+108                                                04984000
APCTZDX3 EQU   APCTZ+112                                                04985000
APCTZDX4 EQU   APCTZ+116                                                04986000
APCTZMBH EQU   APCTZ+120                                                04987000
APCTZMBK EQU   APCTZ+124                                                04988000
APCTZMBM EQU   APCTZ+128                                                04989000
APCTZMJB EQU   APCTZ+132                                                04990000
APCTZMJC EQU   APCTZ+136                                                04991000
APCTZMJH EQU   APCTZ+140                                                04992000
APCTZMMA EQU   APCTZ+144                                                04993000
APCTZDMD EQU   APCTZ+148                                                04994000
APCTZD81 EQU   APCTZ+152                                                04995000
APCTZDID EQU   APCTZ+156                                                04996000
APCTZDRI EQU   APCTZ+160                                                04997000
APCTZMJI EQU   APCTZ+164                                                04998000
APCTZDWT EQU   APCTZ+168                                                04999000
APCTZDMM EQU   APCTZ+172                                                05000000
APCTZDAL EQU   APCTZ+176                                                05001000
APCTZDBK EQU   APCTZ+180                                                05002000
APCTZDIP EQU   APCTZ+184                                                05003000
APCTZDDA EQU   APCTZ+188                                                05004000
APCTZDUL EQU   APCTZ+192                                                05005000
APCTZDEQ EQU   APCTZ+196                                                05006000
APCTZDDQ EQU   APCTZ+200                                                05007000
APCTZDUA EQU   APCTZ+204                                                05008000
APCTZUAF EQU   APCTZ+208                                                05009000
APCTZUAG EQU   APCTZ+212                                                05010000
APCTZDIO EQU   APCTZ+216                                                05011000
APCTZUHA EQU   APCTZ+220                                                05012000
APCTZUHB EQU   APCTZ+224                                                05013000
APCTZJAA EQU   APCTZ+232                                                05014000
APCTZJAD EQU   APCTZ+236                                                05015000
APCTZJAG EQU   APCTZ+240                                                05016000
APCTZJAJ EQU   APCTZ+244                                                05017000
APCTZJAM EQU   APCTZ+248                                                05018000
APCTZJAP EQU   APCTZ+252                                                05019000
APCTZJAY EQU   APCTZ+256                                                05020000
APCTZUFA EQU   APCTZ+260                                                05021000
APCTZUJA EQU   APCTZ+264                                                05022000
APCTZDAP EQU   APCTZ+268                                                05023000
APCTZKAA EQU   APCTZ+272                                                05024000
APCTZD82 EQU   APCTZ+276                                                05025000
APCTZMIB EQU   APCTZ+280                                                05026000
APCTZMIC EQU   APCTZ+284                                                05027000
APCTZD83 EQU   APCTZ+288                                                05028000
APCTZMIF EQU   APCTZ+296                                                05029000
APCTZJH0 EQU   APCTZ+300                                                05030000
APCTZJI0 EQU   APCTZ+304                                                05031000
APCTZJI3 EQU   APCTZ+308                                                05032000
APCTZJJ0 EQU   APCTZ+312                                                05033000
APCTZJBA EQU   APCTZ+316                                                05034000
APCTZJBD EQU   APCTZ+320                                                05035000
APCTZJBG EQU   APCTZ+324                                                05036000
APCTZJBJ EQU   APCTZ+328                                                05037000
APCTZJBM EQU   APCTZ+332                                                05038000
APCTZKCA EQU   APCTZ+340                                                05039000
APCTZKDA EQU   APCTZ+344                                                05040000
APCTZJDA EQU   APCTZ+356                                                05041000
APCTZJDJ EQU   APCTZ+360                                                05042000
APCTZJH6 EQU   APCTZ+364                                                05043000
APCTZJHO EQU   APCTZ+368                                                05044000
APCTZJHF EQU   APCTZ+372                                                05045000
APCTZJHE EQU   APCTZ+376                                                05046000
APCTZDQR EQU   APCTZ+380                                                05047000
APCTZJHR EQU   APCTZ+384                                                05048000
APCTZJHT EQU   APCTZ+388                                                05049000
APCTZJHW EQU   APCTZ+392                                                05050000
APCTZ1   EQU   APCTZ@@1                                                 05051000
APCTZKBA EQU   APCTZ1                                                   05052000
APCTZKBC EQU   APCTZ1+4                                                 05053000
APCTZKBB EQU   APCTZ1+8                                                 05054000
APCTZJHC EQU   APCTZ1+20                                                05055000
APCTZJHQ EQU   APCTZ1+24                                                05056000
APCTZKBD EQU   APCTZ1+28                                                05057000
APCTZKBE EQU   APCTZ1+40                                                05058000
APCTZUKA EQU   APCTZ1+56                                                05059000
APCTZKBF EQU   APCTZ1+60                                                05060000
APCTZJDD EQU   APCTZ1+64                                                05061000
APCTZJDG EQU   APCTZ1+68                                                05062000
APCTZJDM EQU   APCTZ1+72                                                05063000
APCTZLCA EQU   APCTZ1+76                                                05064000
APCTZLCB EQU   APCTZ1+80                                                05065000
APCTZDWI EQU   APCTZ1+84                                                05066000
APCTZJAX EQU   APCTZ1+88                                                05067000
APCTZKGA EQU   APCTZ1+92                                                05068000
APCTZKGB EQU   APCTZ1+96                                                05069000
APCTZKGC EQU   APCTZ1+100                                               05070000
APCTZKGD EQU   APCTZ1+104                                               05071000
APCTU    EQU   APCTU@@@                                                 05072000
APCT1MAB EQU   APCTU                                                    05073000
APCT1MBD EQU   APCTU+4                                                  05074000
APCT2MBD EQU   APCTU+8                                                  05075000
APCT1CMD EQU   APCTU+12                                                 05076000
APCT1JAA EQU   APCTU+20                                                 05077000
APCT1JHC EQU   APCTU+24                                                 05078000
APCT2JHC EQU   APCTU+28                                                 05079000
APCT1JHT EQU   APCTU+32                                                 05080000
APCT1JHL EQU   APCTU+36                                                 05081000
APCT2JHL EQU   APCTU+40                                                 05082000
APCT1JBJ EQU   APCTU+44                                                 05083000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    05084000
@NM00129 EQU   APCTU+48                                                 05085000
APCT1MBM EQU   APCTU+16                                                 05086000
@NM00128 EQU   APCTZ1+108                                               05087000
@NM00127 EQU   APCTZ1+52                                                05088000
@NM00126 EQU   APCTZ1+48                                                05089000
@NM00125 EQU   APCTZ1+44                                                05090000
@NM00124 EQU   APCTZ1+36                                                05091000
@NM00123 EQU   APCTZ1+32                                                05092000
@NM00122 EQU   APCTZ1+16                                                05093000
@NM00121 EQU   APCTZ1+12                                                05094000
@NM00120 EQU   APCTZ+396                                                05095000
@NM00119 EQU   APCTZ+352                                                05096000
@NM00118 EQU   APCTZ+348                                                05097000
@NM00117 EQU   APCTZ+336                                                05098000
@NM00116 EQU   APCTZ+292                                                05099000
APCTZJFA EQU   APCTZ+228                                                05100000
APCTZMBR EQU   APCTZ+100                                                05101000
@NM00115 EQU   APCTZ+20                                                 05102000
IOBSKSS  EQU   IOBSKADR+3                                               05103000
IOBSK0   EQU   IOBSKADR+2                                               05104000
IOBSKTT  EQU   IOBSKADR+1                                               05105000
IOBSKRV  EQU   IOBSKADR                                                 05106000
IOBCSWSV EQU   IOBORG11+17                                              05107000
IOBSENSV EQU   IOBORG11+16                                              05108000
IOBRCD   EQU   IOBORG11+12                                              05109000
IOBMDREC EQU   IOBORG11+8                                               05110000
IOBNAMEA EQU   IOBNAME+1                                                05111000
IOBNAMSZ EQU   IOBNAME                                                  05112000
IOBERCTA EQU   IOBERCT+1                                                05113000
IOBRTYPE EQU   IOBUCBXV                                                 05114000
IOBRDCHP EQU   IOBORG10+20                                              05115000
IOBNEXTA EQU   IOBORG10+16                                              05116000
IOBREADA EQU   IOBORG10+12                                              05117000
IOBBUFC  EQU   IOBORG10+8                                               05118000
IOBSK2R  EQU   IOBSEEK2+7                                               05119000
IOBSK2HH EQU   IOBSEEK2+5                                               05120000
IOBSK2CC EQU   IOBSEEK2+3                                               05121000
IOBSK2BB EQU   IOBSEEK2+1                                               05122000
IOBSK2M  EQU   IOBSEEK2                                                 05123000
IOBCHNPR EQU   IOBORG09+40                                              05124000
IOBDNCRF EQU   IOBORG09+32                                              05125000
IOBRSV35 EQU   IOBORG09+24                                              05126000
IOBDQPTR EQU   IOBORG09+20                                              05127000
IOBRSV34 EQU   IOBORG09+18                                              05128000
IOBDBYTN EQU   IOBORG09+16                                              05129000
IOBDCPND EQU   IOBORG09+12                                              05130000
IOBSTAT2 EQU   IOBDSTAT+1                                               05131000
IOBSIORT EQU   IOBSTAT1                                                 05132000
IOBADDVU EQU   IOBSTAT1                                                 05133000
IOBBUFF  EQU   IOBSTAT1                                                 05134000
IOBENQUE EQU   IOBSTAT1                                                 05135000
IOBPASS2 EQU   IOBSTAT1                                                 05136000
IOBSYNCH EQU   IOBSTAT1                                                 05137000
IOBNEWVL EQU   IOBSTAT1                                                 05138000
IOBABNRM EQU   IOBSTAT1                                                 05139000
IOBRELEX EQU   IOBDTYP2                                                 05140000
IOBADDTY EQU   IOBDTYP2                                                 05141000
IOBTYPE  EQU   IOBDTYP2                                                 05142000
IOBRQUST EQU   IOBDTYP2                                                 05143000
IOBSUFFX EQU   IOBDTYP2                                                 05144000
IOBSBLKL EQU   IOBDTYP2                                                 05145000
IOBSKEY  EQU   IOBDTYP2                                                 05146000
IOBRELBL EQU   IOBDTYPE                                                 05147000
IOBRDEXC EQU   IOBDTYPE                                                 05148000
IOBDYNBF EQU   IOBDTYPE                                                 05149000
IOBACTAD EQU   IOBDTYPE                                                 05150000
IOBFDBCK EQU   IOBDTYPE                                                 05151000
IOBEXTSC EQU   IOBDTYPE                                                 05152000
IOBOVFLO EQU   IOBDTYPE                                                 05153000
IOBVERFY EQU   IOBDTYPE                                                 05154000
IOBDPLB  EQU   IOBDPLAD+1                                               05155000
IOBDAYLI EQU   IOBDPLAD                                                 05156000
IOBDIOBS EQU   IOBORG09+2                                               05157000
IOBDBYTR EQU   IOBORG09                                                 05158000
IOBBCHAD EQU   IOBORG08+12                                              05159000
IOBFCHNB EQU   IOBFCHAD+1                                               05160000
IOBCOUNT EQU   IOBFCHAD                                                 05161000
IOBASYN  EQU   IOBORG08+7                                               05162000
IOBAPP   EQU   IOBORG08+6                                               05163000
IOBRSV32 EQU   IOBUNSQR                                                 05164000
IOBRSV31 EQU   IOBUNSQR                                                 05165000
IOBRSV30 EQU   IOBUNSQR                                                 05166000
IOBKNRWR EQU   IOBUNSQR                                                 05167000
IOBKNWR  EQU   IOBUNSQR                                                 05168000
IOBNTAV2 EQU   IOBUNSQR                                                 05169000
IOBNTAV1 EQU   IOBUNSQR                                                 05170000
IOBCPBSY EQU   IOBUNSQR                                                 05171000
IOBCHNNL EQU   IOBINDCT                                                 05172000
IOBRSV29 EQU   IOBINDCT                                                 05173000
IOBRSV28 EQU   IOBINDCT                                                 05174000
IOBRSV27 EQU   IOBINDCT                                                 05175000
IOBKEYAD EQU   IOBINDCT                                                 05176000
IOBOVPTR EQU   IOBINDCT                                                 05177000
IOBUNSCH EQU   IOBINDCT                                                 05178000
IOBDEQCP EQU   IOBINDCT                                                 05179000
IOBCCWAD EQU   IOBORG08                                                 05180000
W1OEXTEN EQU   W1IEXTEN                                                 05181000
IOBCCW   EQU   IOBORG06+8                                               05182000
IOBNXTPB EQU   IOBNXTPT+1                                               05183000
IOBRSV26 EQU   IOBSTATA                                                 05184000
IOBRSV25 EQU   IOBSTATA                                                 05185000
IOBRSV24 EQU   IOBSTATA                                                 05186000
IOBRSV23 EQU   IOBSTATA                                                 05187000
IOBRSV22 EQU   IOBSTATA                                                 05188000
IOBRSV21 EQU   IOBSTATA                                                 05189000
IOBRSV20 EQU   IOBSTATA                                                 05190000
IOBAVLFL EQU   IOBSTATA                                                 05191000
IOBRSV37 EQU   IOBORG06+1                                               05192000
IOBUCBXG EQU   IOBORG06                                                 05193000
IOBCPA   EQU   IOBORG05+32                                              05194000
IOBERINF EQU   IOBORG05+16                                              05195000
IOBERCCW EQU   IOBORG05+8                                               05196000
IOBSNDPT EQU   IOBORG05+7                                               05197000
IOBRCVPT EQU   IOBORG05+6                                               05198000
IOBWORK  EQU   IOBORG05+1                                               05199000
IOBUCBX  EQU   IOBORG05                                                 05200000
IOBR     EQU   IOBSEEK+7                                                05201000
IOBHH2   EQU   IOBHH+1                                                  05202000
IOBHH1   EQU   IOBHH                                                    05203000
IOBCC2   EQU   IOBCC+1                                                  05204000
IOBCC1   EQU   IOBCC                                                    05205000
IOBBB2   EQU   IOBBB+1                                                  05206000
IOBBB1   EQU   IOBBB                                                    05207000
IOBM     EQU   IOBSEEK                                                  05208000
IOBRSV46 EQU   IOBFL4                                                   05209000
IOBRSV47 EQU   IOBFL4                                                   05210000
IOBENT   EQU   IOBFL4                                                   05211000
IOBEQP   EQU   IOBFL4                                                   05212000
IOBBUS   EQU   IOBFL4                                                   05213000
IOBDCK   EQU   IOBFL4                                                   05214000
IOBREJ   EQU   IOBFL4                                                   05215000
IOBOVR   EQU   IOBFL4                                                   05216000
IOBCRILC EQU   IOBORG04+1                                               05217000
IOBCRDCC EQU   IOBORG04                                                 05218000
IOBGQECB EQU   IOBORG03                                                 05219000
IOBSWAP  EQU   IOBORG02+4                                               05220000
IOBDQADB EQU   IOBDQADA+1                                               05221000
IOBRSV13 EQU   IOBDEQIN                                                 05222000
IOBRSV12 EQU   IOBDEQIN                                                 05223000
IOBRSV11 EQU   IOBDEQIN                                                 05224000
IOBRSV10 EQU   IOBDEQIN                                                 05225000
IOBRSV09 EQU   IOBDEQIN                                                 05226000
IOBRSV08 EQU   IOBDEQIN                                                 05227000
IOBRSV07 EQU   IOBDEQIN                                                 05228000
IOBDEQ   EQU   IOBDEQIN                                                 05229000
IOBNECB  EQU   IOBORG01+4                                               05230000
IOBNIOBB EQU   IOBNIOBA+1                                               05231000
IOBFIRST EQU   IOBNFLG1                                                 05232000
IOBUPERR EQU   IOBNFLG1                                                 05233000
IOBSPAN  EQU   IOBNFLG1                                                 05234000
IOBBKSPC EQU   IOBNFLG1                                                 05235000
IOBUPDAT EQU   IOBNFLG1                                                 05236000
IOBREAD  EQU   IOBNFLG1                                                 05237000
IOBWRITE EQU   IOBNFLG1                                                 05238000
IOBSEGMT EQU   IOBPRTOV                                                 05239000
UCBRV066 EQU   UCBOBS09+4                                               05240000
UCBIOSBA EQU   UCBOBS09                                                 05241000
UCBRV042 EQU   UCBOBS08+5                                               05242000
UCBRV082 EQU   UCBCTCF1                                                 05243000
UCBRV081 EQU   UCBCTCF1                                                 05244000
UCBRV080 EQU   UCBCTCF1                                                 05245000
UCBRV079 EQU   UCBCTCF1                                                 05246000
UCBRV078 EQU   UCBCTCF1                                                 05247000
UCBRV077 EQU   UCBCTCF1                                                 05248000
UCBRV076 EQU   UCBCTCF1                                                 05249000
UCBCTC80 EQU   UCBCTCF1                                                 05250000
UCBCTCAL EQU   UCBCTCAD                                                 05251000
UCBICNCB EQU   UCBOBS07+4                                               05252000
UCBRV040 EQU   UCBOBS07                                                 05253000
UCBCTLNA EQU   UCBCTLNK+1                                               05254000
UCBRLN   EQU   UCBCTLNK                                                 05255000
UCBRDYQA EQU   UCBLDNCB                                                 05256000
UCBINRLN EQU   UCBIRLN                                                  05257000
UCBIRBA  EQU   UCBIRB+1                                                 05258000
UCBRV039 EQU   UCBGRAF                                                  05259000
UCBDWNR  EQU   UCBGRAF                                                  05260000
UCBRPND  EQU   UCBGRAF                                                  05261000
UCBUPM   EQU   UCBGRAF                                                  05262000
UCBBTAM  EQU   UCBGRAF                                                  05263000
UCBDRNO  EQU   UCBGRAF                                                  05264000
UCBDRO   EQU   UCBGRAF                                                  05265000
UCBOIP   EQU   UCBGRAF                                                  05266000
UCBATRCD EQU   @NM00020                                                 05267000
UCBSKPFG EQU   @NM00020                                                 05268000
UCBRIPND EQU   @NM00020                                                 05269000
UCBRTIAC EQU   @NM00020                                                 05270000
UCBRSV79 EQU   @NM00020                                                 05271000
UCBRSV78 EQU   @NM00020                                                 05272000
UCBRSV77 EQU   @NM00020                                                 05273000
UCBOLTEP EQU   @NM00020                                                 05274000
UCBATNCT EQU   UCBOBS06+2                                               05275000
UCBRSV76 EQU   UCBAOF2                                                  05276000
UCBRSV75 EQU   UCBAOF2                                                  05277000
UCBRSV74 EQU   UCBAOF2                                                  05278000
UCBRSV73 EQU   UCBAOF2                                                  05279000
UCBRSV72 EQU   UCBAOF2                                                  05280000
UCBRSV71 EQU   UCBAOF2                                                  05281000
UCBRSV70 EQU   UCBAOF2                                                  05282000
UCBRSV69 EQU   UCBAOF2                                                  05283000
UCBRSV68 EQU   UCBAOF1                                                  05284000
UCBRSV67 EQU   UCBAOF1                                                  05285000
UCBRSV66 EQU   UCBAOF1                                                  05286000
UCBRSV65 EQU   UCBAOF1                                                  05287000
UCBRSV64 EQU   UCBAOF1                                                  05288000
UCBOFNL  EQU   UCBAOF1                                                  05289000
UCBOFSP  EQU   UCBAOF1                                                  05290000
UCBOFMCR EQU   UCBAOF1                                                  05291000
UCBBTB   EQU   UCBBTA+1                                                 05292000
UCBDI    EQU   UCBBTA                                                   05293000
UCBSNS   EQU   UCBOBS04+8                                               05294000
UCBTEB   EQU   UCBOBS04+4                                               05295000
UCBGCB   EQU   UCBOBS04+3                                               05296000
UCBOPEN  EQU   UCBOBS04+2                                               05297000
UCBSTART EQU   UCBOBS04                                                 05298000
UCBXTNB  EQU   UCBXTN+1                                                 05299000
UCBRSV22 EQU   UCBVOPT                                                  05300000
UCBRSV21 EQU   UCBVOPT                                                  05301000
UCBRSV20 EQU   UCBVOPT                                                  05302000
UCBESVE  EQU   UCBVOPT                                                  05303000
UCBERPC  EQU   UCBVOPT                                                  05304000
UCBESVC  EQU   UCBVOPT                                                  05305000
UCBEVA   EQU   UCBVOPT                                                  05306000
UCBESV   EQU   UCBVOPT                                                  05307000
UCBRV009 EQU   UCBTFL1                                                  05308000
UCBRV008 EQU   UCBTFL1                                                  05309000
UCBRV007 EQU   UCBTFL1                                                  05310000
UCBRV006 EQU   UCBTFL1                                                  05311000
UCBRV005 EQU   UCBTFL1                                                  05312000
UCBDQDSP EQU   UCBTFL1                                                  05313000
UCBNSLTP EQU   UCBTFL1                                                  05314000
UCBNLTP  EQU   UCBTFL1                                                  05315000
UCBRES1B EQU   UCBOBS02+18                                              05316000
UCBFSER  EQU   UCBOBS02+12                                              05317000
@NM00019 EQU   UCBOBS02+4                                               05318000
UCBFSEQ  EQU   UCBOBS02+2                                               05319000
UCBFSCT  EQU   UCBOBS02                                                 05320000
UCBNEXP  EQU   UCBOBS01+20                                              05321000
UCBBASE  EQU   UCBOBS01+16                                              05322000
UCBRES1A EQU   UCBOBS01+15                                              05323000
UCBUSER  EQU   UCBOBS01+14                                              05324000
UCBFL47  EQU   UCBFL4                                                   05325000
UCBMAT   EQU   UCBFL4                                                   05326000
UCBHOLD  EQU   UCBFL4                                                   05327000
UCBATTN  EQU   UCBFL4                                                   05328000
UCBDSS   EQU   UCBFL4                                                   05329000
UCBRESVP EQU   UCBFL4                                                   05330000
UCBWDAV  EQU   UCBFL4                                                   05331000
UCBDAVV  EQU   UCBFL4                                                   05332000
UCBSQC   EQU   UCBOBS01+12                                              05333000
UCBDATP  EQU   UCBOBS01+12                                              05334000
UCBDMC   EQU   UCBDMCT                                                  05335000
UCBMOUNT EQU   UCBDMCT                                                  05336000
UCBBNUL  EQU   UCBSTAB                                                  05337000
UCBSHAR  EQU   UCBSTAB                                                  05338000
UCBBSTR  EQU   UCBSTAB                                                  05339000
UCBBPUB  EQU   UCBSTAB                                                  05340000
UCBBPRV  EQU   UCBSTAB                                                  05341000
UCBBALB  EQU   UCBPRSRS                                                 05342000
UCBPGFL  EQU   UCBSTAB                                                  05343000
UCBDVSHR EQU   UCBBSVL                                                  05344000
UCBVOLI  EQU   UCBOBS01+4                                               05345000
UCBVTOC  EQU   UCBOBS01                                                 05346000
CHLAST   EQU   CHAINS01+136                                             05347000
CHSPA    EQU   CHAINS01+135                                             05348000
CHUSERID EQU   CHCSYSO                                                  05349000
CHJB     EQU   CHCSYSO                                                  05350000
CHDUMP   EQU   CHCSYSO                                                  05351000
CHQUE    EQU   CHCSYSO                                                  05352000
CHHOLD   EQU   CHCSYSO                                                  05353000
CHOUT    EQU   CHCSYSO                                                  05354000
CHINN    EQU   CHCSYSO                                                  05355000
CHALL    EQU   CHCSYSO                                                  05356000
CHINC    EQU   CHAINS01+132                                             05357000
CHPEND   EQU   CHAINS01+128                                             05358000
CHARID   EQU   CHAINS01+127                                             05359000
CHCNID   EQU   CHAINS01+126                                             05360000
@NM00017 EQU   CHTRSTAT                                                 05361000
CHTSL    EQU   CHTRSTAT                                                 05362000
CHTS     EQU   CHTRSTAT                                                 05363000
CHINITL  EQU   CHTRSTAT                                                 05364000
CHINIT   EQU   CHTRSTAT                                                 05365000
CHJOBSL  EQU   CHTRSTAT                                                 05366000
CHJOBS   EQU   CHTRSTAT                                                 05367000
CHDEF    EQU   CHTYPE                                                   05368000
CHHIAR   EQU   CHTYPE                                                   05369000
CHARSV29 EQU   CHTYPE                                                   05370000
CHARSV28 EQU   CHTYPE                                                   05371000
CHARSV27 EQU   CHTYPE                                                   05372000
CHARSV26 EQU   CHTYPE                                                   05373000
CHARSV25 EQU   CHTYPE                                                   05374000
CHDSTAT  EQU   CHTYPE                                                   05375000
CHBUF    EQU   CHAINS01                                                 05376000
@NM00159 EQU   APUB+120                                                 05377000
@NM00158 EQU   APUB+112                                                 05378000
APUBSIZE EQU   APUB+102                                                 05379000
APUBRSVD EQU   APUB+100                                                 05380000
APUBASCB EQU   APUBDCB                                                  05381000
@NM00157 EQU   APUBIOFG+4                                               05382000
@NM00156 EQU   APUBIOF3                                                 05383000
APUBISHR EQU   APUBIOF3                                                 05384000
@NM00155 EQU   APUBIOF2                                                 05385000
APUBIEXC EQU   APUBIOF2                                                 05386000
@NM00154 EQU   APUBIOF1                                                 05387000
APUBIERR EQU   APUBIOF1                                                 05388000
@NM00153 EQU   APUBIOF0                                                 05389000
APUBICNL EQU   APUBIOF0                                                 05390000
APUBINRG EQU   APUBIOF0                                                 05391000
APUBIDAB EQU   APUBIOF0                                                 05392000
@NM00152 EQU   APUB+85                                                  05393000
@NM00151 EQU   APUBSTAT                                                 05394000
APUBQISC EQU   APUBSTAT                                                 05395000
APUBPDMP EQU   APUBSTAT                                                 05396000
APUBFDMP EQU   APUBSTAT                                                 05397000
@NM00150 EQU   APUBALF3                                                 05398000
APUBSCAL EQU   APUBALF3                                                 05399000
APUBSCAV EQU   APUBALF3                                                 05400000
APUBBIST EQU   APUBALF3                                                 05401000
APUBBTST EQU   APUBALF3                                                 05402000
@NM00149 EQU   APUBALF2                                                 05403000
APUBBIER EQU   APUBALF2                                                 05404000
APUBBOPT EQU   APUBALF2                                                 05405000
APUBBREQ EQU   APUBALF2                                                 05406000
APUBBYT1 EQU   APUBALF2                                                 05407000
@NM00148 EQU   APUBALF1                                                 05408000
APUBUNLP EQU   APUBALF1                                                 05409000
APUBDSBP EQU   APUBALF1                                                 05410000
APUBBERR EQU   APUBALF1                                                 05411000
APUBUNLD EQU   APUBALF1                                                 05412000
APUBDSBL EQU   APUBALF1                                                 05413000
APUBZRGN EQU   APUBALF1                                                 05414000
@NM00147 EQU   APUBALF0                                                 05415000
APUBOWN  EQU   APUBALF0                                                 05416000
APUBSBCH EQU   APUBALF0                                                 05417000
APUBCPU  EQU   APUB+78                                                  05418000
APUBINIT EQU   APUB+76                                                  05419000
APUBERRJ EQU   APUBERRS+20                                              05420000
APUBERRD EQU   APUBERRS+18                                              05421000
APUBERRC EQU   APUBERRS+16                                              05422000
APUBERRB EQU   APUBERRS+14                                              05423000
APUBERRA EQU   APUBERRS+12                                              05424000
APUBERR9 EQU   APUBERRS+10                                              05425000
APUBERR3 EQU   APUBERRS+8                                               05426000
APUBERR2 EQU   APUBERRS+6                                               05427000
APUBERR1 EQU   APUBERRS+4                                               05428000
APUBERR0 EQU   APUBERRS+2                                               05429000
@NM00146 EQU   APUBERRS                                                 05430000
@NM00145 EQU   APUB+50                                                  05431000
APUBRGN  EQU   APUB+48                                                  05432000
APUBERRT EQU   APUB+44                                                  05433000
APUBMSTP EQU   APUB+40                                                  05434000
APUBUBAP EQU   APUB+36                                                  05435000
APUBAPDS EQU   APUB+32                                                  05436000
APUBIOCT EQU   APUB+24                                                  05437000
APUBAPCT EQU   APUB+20                                                  05438000
APUBUSER EQU   APUB+16                                                  05439000
APUBNXIO EQU   APUB+12                                                  05440000
APUBID   EQU   APUB                                                     05441000
APSVWORK EQU   APSV+80                                                  05442000
@NM00144 EQU   APSV+80                                                  05443000
APSVFREE EQU   APSV+76                                                  05444000
APSVAPSM EQU   APSV+72                                                  05445000
APSVRG12 EQU   APSVREGS+56                                              05446000
APSVRG11 EQU   APSVREGS+52                                              05447000
APSVRG10 EQU   APSVREGS+48                                              05448000
APSVRG9  EQU   APSVREGS+44                                              05449000
APSVRG8  EQU   APSVREGS+40                                              05450000
APSVRG7  EQU   APSVREGS+36                                              05451000
APSVRG6  EQU   APSVREGS+32                                              05452000
APSVRG5  EQU   APSVREGS+28                                              05453000
APSVRG4  EQU   APSVREGS+24                                              05454000
APSVRG3  EQU   APSVREGS+20                                              05455000
APSVRG2  EQU   APSVREGS+16                                              05456000
APSVRG1  EQU   APSVREGS+12                                              05457000
APSVRG0  EQU   APSVREGS+8                                               05458000
APSVRG15 EQU   APSVREGS+4                                               05459000
APSVRG14 EQU   APSVREGS                                                 05460000
APSVNEXT EQU   APSV+8                                                   05461000
APSVPREV EQU   APSV+4                                                   05462000
APSVAPSC EQU   APSV                                                     05463000
@NM00143 EQU   APESMV+6                                                 05464000
@NM00142 EQU   APESMV+4                                                 05465000
APESMVKW EQU   APESMV+2                                                 05466000
APESMVMS EQU   APESMV                                                   05467000
APESRTRY EQU   APESREGF                                                 05468000
APESREGE EQU   APESREGS+56                                              05469000
APESREGD EQU   APESREGS+52                                              05470000
APESREGC EQU   APESREGS+48                                              05471000
APESREGB EQU   APESREGS+44                                              05472000
APESREGA EQU   APESREGS+40                                              05473000
APESREG9 EQU   APESREGS+36                                              05474000
APESREG8 EQU   APESREGS+32                                              05475000
APESREG7 EQU   APESREGS+28                                              05476000
APESREG6 EQU   APESREGS+24                                              05477000
APESREG5 EQU   APESREGS+20                                              05478000
APESREG4 EQU   APESREGS+16                                              05479000
APESREG3 EQU   APESREGS+12                                              05480000
APESREG2 EQU   APESREGS+8                                               05481000
APESREG1 EQU   APESREGS+4                                               05482000
APESREG0 EQU   APESREGS                                                 05483000
@NM00134 EQU   APDS+144                                                 05484000
@NM00133 EQU   APDS+100                                                 05485000
APDSAPEP EQU   APDS+96                                                  05486000
@NM00132 EQU   APDS+94                                                  05487000
APDSSIZE EQU   APDS+92                                                  05488000
APDSJBNM EQU   APDS+84                                                  05489000
APDSITCB EQU   APDS+80                                                  05490000
APDSMSK  EQU   APDS+72                                                  05491000
@NM00131 EQU   APDS+69                                                  05492000
APDSIOFS EQU   APDS+68                                                  05493000
APDSDUMP EQU   APDS+67                                                  05494000
APDSPGFX EQU   APDS+66                                                  05495000
@NM00130 EQU   APDSFLG1                                                 05496000
APDSFRST EQU   APDSFLG1                                                 05497000
APDSSLPS EQU   APDSFLG0                                                 05498000
APDSLSR  EQU   APDSFLG0                                                 05499000
APDSIER  EQU   APDSFLG0                                                 05500000
APDSARS  EQU   APDSFLG0                                                 05501000
APDSVPER EQU   APDSFLG0                                                 05502000
APDSVLER EQU   APDSFLG0                                                 05503000
APDSTPGM EQU   APDSFLG0                                                 05504000
APDSOWN  EQU   APDSFLG0                                                 05505000
APDSDSAP EQU   APDS+60                                                  05506000
APDSREG  EQU   APDS+56                                                  05507000
APDSASCB EQU   APDS+52                                                  05508000
APDSAPUB EQU   APDS+48                                                  05509000
APDSPERR EQU   APDS+40                                                  05510000
APDSLERR EQU   APDS+32                                                  05511000
APDSDDNM EQU   APDS+24                                                  05512000
APDSDEB  EQU   APDSTD+4                                                 05513000
APDSTCB  EQU   APDSTD                                                   05514000
APDSAPCT EQU   APDS+12                                                  05515000
APDSUSER EQU   APDS+8                                                   05516000
APDSAPDS EQU   APDS+4                                                   05517000
APDSID   EQU   APDS                                                     05518000
@NM00114 EQU   APCT+1556                                                05519000
APCTSVCT EQU   APCT+1552                                                05520000
APCTDAVT EQU   APCT+1548                                                05521000
APCTLOGL EQU   APCT+1544                                                05522000
@NM00113 EQU   APCT+1540                                                05523000
APCTDMPU EQU   APCT+1536                                                05524000
APCTDMPM EQU   APCT+1532                                                05525000
APCTNDMP EQU   APCT+1530                                                05526000
APCTASID EQU   APCT+1528                                                05527000
APCTLGPG EQU   APCT+1526                                                05528000
APCTLGLN EQU   APCT+1524                                                05529000
APCTAPVU EQU   APCT+1520                                                05530000
APCTABR  EQU   APCT+1116                                                05531000
APCTACTR EQU   APCT+1112                                                05532000
APCTLOGD EQU   APCT+1108                                                05533000
APCTDCLD EQU   APCT+1104                                                05534000
APCTIOAP EQU   APCT+1100                                                05535000
@NM00112 EQU   APCT+1080                                                05536000
@NM00111 EQU   APCT+1078                                                05537000
APCTKCAX EQU   APCT+1076                                                05538000
APCTABND EQU   APCT+1072                                                05539000
@NM00110 EQU   APCT+1068                                                05540000
APCTAPIO EQU   APCT+1064                                                05541000
APCTCSCT EQU   APCT+1060                                                05542000
APCTSTDF EQU   APCT+1056                                                05543000
APCTSTMX EQU   APCT+1052                                                05544000
APCTRGMX EQU   APCT+1048                                                05545000
APCTSIZE EQU   APCT+1046                                                05546000
APCTCTUB EQU   APCT+1045                                                05547000
APCTMFID EQU   APCT+1044                                                05548000
APCTMFSZ EQU   APCT+1040                                                05549000
APCTCRTN EQU   APCT+1036                                                05550000
APCTAPCP EQU   APCT+1032                                                05551000
APCTAMNA EQU   APCT+1028                                                05552000
APCTEMNA EQU   APCT+1024                                                05553000
APCTAALP EQU   APCT+1020                                                05554000
APCTEALP EQU   APCT+1016                                                05555000
@NM00109 EQU   APCT+1012                                                05556000
@NM00108 EQU   APCT+1008                                                05557000
@NM00107 EQU   APCT+1004                                                05558000
APCTEIPL EQU   APCT+1000                                                05559000
@NM00106 EQU   APCT+996                                                 05560000
@NM00105 EQU   APCT+992                                                 05561000
@NM00104 EQU   APCT+988                                                 05562000
@NM00103 EQU   APCT+984                                                 05563000
@NM00102 EQU   APCT+980                                                 05564000
APCTECPW EQU   APCT+976                                                 05565000
APCTEULD EQU   APCT+972                                                 05566000
APCTECPT EQU   APCT+968                                                 05567000
APCTEALC EQU   APCT+964                                                 05568000
APCTECBL EQU   APCT+960                                                 05569000
APCTECIT EQU   APCT+956                                                 05570000
APCTCQAF EQU   APCTCQAQ                                                 05571000
APCTCQL  EQU   APCTAPCQ+4                                               05572000
APCTCQF  EQU   APCTAPCQ                                                 05573000
APCTCQLK EQU   APCT+940                                                 05574000
@NM00101 EQU   @NM00097+2                                               05575000
@NM00100 EQU   APCTPRSW                                                 05576000
APCTAPST EQU   APCTPRSW                                                 05577000
@NM00099 EQU   APCTPRSW                                                 05578000
@NM00098 EQU   APCTSTAT                                                 05579000
APCTWARM EQU   APCTSTAT                                                 05580000
APCTTERM EQU   APCTSTAT                                                 05581000
APCTQSCE EQU   APCTSTAT                                                 05582000
APCTSTRT EQU   APCTSTAT                                                 05583000
APCTACT  EQU   APCTSTAT                                                 05584000
APCTVUNX EQU   APCT+935                                                 05585000
APCTDAID EQU   APCT+933                                                 05586000
APCTSV34 EQU   APCT+932                                                 05587000
APCTMJOB EQU   APCT+928                                                 05588000
APCTTCB  EQU   APCT+924                                                 05589000
APCTASCB EQU   APCT+920                                                 05590000
APCTDCNW EQU   APCT+918                                                 05591000
APCTDCNR EQU   APCT+916                                                 05592000
@NM00096 EQU   APCT+912                                                 05593000
@NM00095 EQU   APCT+908                                                 05594000
@NM00094 EQU   APCT+904                                                 05595000
@NM00093 EQU   APCT+900                                                 05596000
@NM00092 EQU   APCTERRS+22                                              05597000
APCTERTJ EQU   APCTERRS+20                                              05598000
APCTERTD EQU   APCTERRS+18                                              05599000
APCTERTC EQU   APCTERRS+16                                              05600000
APCTERTB EQU   APCTERRS+14                                              05601000
APCTERTA EQU   APCTERRS+12                                              05602000
APCTERT9 EQU   APCTERRS+10                                              05603000
APCTERT3 EQU   APCTERRS+8                                               05604000
APCTERT2 EQU   APCTERRS+6                                               05605000
APCTERT1 EQU   APCTERRS+4                                               05606000
APCTERT0 EQU   APCTERRS+2                                               05607000
APCTERTT EQU   APCTERRS                                                 05608000
APCTDSAP EQU   APCT+872                                                 05609000
APCTISUB EQU   APCT+868                                                 05610000
APCTUBAP EQU   APCT+864                                                 05611000
APCTAPDS EQU   APCT+860                                                 05612000
APCTUBIC EQU   APCT+856                                                 05613000
APCTUBIS EQU   APCT+852                                                 05614000
APCTUBLK EQU   APCT+844                                                 05615000
APCTBR1A EQU   APCTBR14+2                                               05616000
@NM00091 EQU   APCTBR14                                                 05617000
APCTSMSZ EQU   APCTSMAD+2                                               05618000
@NM00090 EQU   APCTSMAD+1                                               05619000
@NM00089 EQU   APCTSMAD                                                 05620000
APCTSMIS EQU   APCTSMIN+2                                               05621000
@NM00088 EQU   APCTSMIN+1                                               05622000
APCTSMSP EQU   APCTSMIN                                                 05623000
@NM00087 EQU   APCT+30                                                  05624000
APCTLBSZ EQU   APCT+24                                                  05625000
APCTREG  EQU   APCT+20                                                  05626000
@NM00086 EQU   APCTENQM                                                 05627000
APCTSSVT EQU   APCT+8                                                   05628000
APCTUSER EQU   APCT+4                                                   05629000
APCTID   EQU   APCT                                                     05630000
@NM00085 EQU   APCQ+176                                                 05631000
@NM00084 EQU   APCQ+172                                                 05632000
@NM00083 EQU   APCQ+168                                                 05633000
APCQSCID EQU   APCQ+25                                                  05634000
APCQNEMG EQU   APCQSW                                                   05635000
APCQNMSG EQU   APCQSW                                                   05636000
@NM00082 EQU   APCQSW                                                   05637000
APCQPRTY EQU   APCQSW                                                   05638000
APCQCQAP EQU   APCQ+16                                                  05639000
APCQUSER EQU   APCQ+8                                                   05640000
APCQAPCQ EQU   APCQ+4                                                   05641000
APCQID   EQU   APCQ                                                     05642000
@NM00081 EQU   SDWA+512                                                 05643000
SDWAVRA  EQU   SDWARA+4                                                 05644000
SDWAURAL EQU   SDWARA+3                                                 05645000
@NM00080 EQU   SDWADPVA                                                 05646000
SDWAEBC  EQU   SDWADPVA                                                 05647000
SDWAHEX  EQU   SDWADPVA                                                 05648000
SDWAVRAL EQU   SDWARA                                                   05649000
SDWAERTM EQU   SDWA+396                                                 05650000
SDWACOMP EQU   SDWA+392                                                 05651000
SDWARCPL EQU   SDWA+364                                                 05652000
@NM00079 EQU   SDWADPSA+32                                              05653000
SDWATO4  EQU   SDWADPSL+28                                              05654000
SDWAFRM4 EQU   SDWADPSL+24                                              05655000
SDWATO3  EQU   SDWADPSL+20                                              05656000
SDWAFRM3 EQU   SDWADPSL+16                                              05657000
SDWATO2  EQU   SDWADPSL+12                                              05658000
SDWAFRM2 EQU   SDWADPSL+8                                               05659000
SDWATO1  EQU   SDWADPSL+4                                               05660000
SDWAFRM1 EQU   SDWADPSL                                                 05661000
@NM00078 EQU   SDWADDAT+3                                               05662000
@NM00077 EQU   SDWAPDAT                                                 05663000
SDWAUSPL EQU   SDWAPDAT                                                 05664000
SDWADPSW EQU   SDWAPDAT                                                 05665000
SDWATJPA EQU   SDWAPDAT                                                 05666000
SDWATLPA EQU   SDWAPDAT                                                 05667000
SDWADREG EQU   SDWAPDAT                                                 05668000
SDWADSAH EQU   SDWAPDAT                                                 05669000
SDWADSAS EQU   SDWAPDAT                                                 05670000
@NM00076 EQU   SDWASDA1                                                 05671000
SDWAERR  EQU   SDWASDA1                                                 05672000
SDWAIO   EQU   SDWASDA1                                                 05673000
SDWADM   EQU   SDWASDA0                                                 05674000
SDWAQQS  EQU   SDWASDA0                                                 05675000
SDWACBS  EQU   SDWASDA0                                                 05676000
SDWAGTF  EQU   SDWASDA0                                                 05677000
SDWASWA  EQU   SDWASDA0                                                 05678000
SDWALSQA EQU   SDWASDA0                                                 05679000
SDWASQA  EQU   SDWASDA0                                                 05680000
SDWANUC  EQU   SDWASDA0                                                 05681000
@NM00075 EQU   SDWADUMP+2                                               05682000
@NM00074 EQU   SDWADPFS                                                 05683000
SDWASLST EQU   SDWADPFS                                                 05684000
@NM00073 EQU   SDWADPFS                                                 05685000
SDWAENSN EQU   SDWADPFS                                                 05686000
SDWADLST EQU   SDWADPFS                                                 05687000
SDWADPT  EQU   SDWADPFS                                                 05688000
SDWADPID EQU   SDWADUMP                                                 05689000
SDWADPLA EQU   SDWA+316                                                 05690000
SDWAREXN EQU   SDWARECP+16                                              05691000
SDWACSCT EQU   SDWARECP+8                                               05692000
SDWAMODN EQU   SDWARECP                                                 05693000
SDWASEQ# EQU   SDWA+290                                                 05694000
SDWAASID EQU   SDWA+288                                                 05695000
SDWATALW EQU   SDWALKWS+28                                              05696000
SDWATDLW EQU   SDWALKWS+24                                              05697000
SDWATNLW EQU   SDWALKWS+20                                              05698000
SDWAAPLW EQU   SDWALKWS+16                                              05699000
SDWAIPLW EQU   SDWALKWS+12                                              05700000
SDWAILLW EQU   SDWALKWS+8                                               05701000
SDWAIULW EQU   SDWALKWS+4                                               05702000
SDWAICLW EQU   SDWALKWS                                                 05703000
SDWAFLLK EQU   SDWAACF4                                                 05704000
SDWACMS  EQU   SDWAACF4                                                 05705000
SDWAOPTM EQU   SDWAACF4                                                 05706000
SDWATADB EQU   SDWAACF4                                                 05707000
SDWATDNB EQU   SDWAACF4                                                 05708000
SDWATNCB EQU   SDWAACF4                                                 05709000
SDWAILCH EQU   SDWAACF4                                                 05710000
SDWAIUCB EQU   SDWAACF4                                                 05711000
SDWAICAT EQU   SDWAACF3                                                 05712000
SDWAIPRG EQU   SDWAACF3                                                 05713000
SDWASALL EQU   SDWAACF3                                                 05714000
SDWAASMP EQU   SDWAACF3                                                 05715000
SDWADISP EQU   SDWAACF3                                                 05716000
@NM00072 EQU   SDWAACF3                                                 05717000
@NM00071 EQU   SDWAACF2                                                 05718000
SDWAFREE EQU   SDWAACF2                                                 05719000
SDWAUPRG EQU   SDWAACF2                                                 05720000
@NM00070 EQU   SDWAACF2                                                 05721000
SDWASPIN EQU   SDWAACF2                                                 05722000
@NM00069 EQU   SDWAACF2                                                 05723000
SDWARCRD EQU   SDWAACF2                                                 05724000
SDWARCDE EQU   SDWAPARQ                                                 05725000
SDWALCPU EQU   SDWACPUA+2                                               05726000
@NM00068 EQU   SDWACPUA                                                 05727000
SDWARECA EQU   SDWA+244                                                 05728000
SDWARTYA EQU   SDWA+240                                                 05729000
SDWACPUI EQU   SDWA+239                                                 05730000
@NM00067 EQU   SDWAIOFS                                                 05731000
SDWANIOP EQU   SDWAIOFS                                                 05732000
SDWANOIO EQU   SDWAIOFS                                                 05733000
SDWAIOHT EQU   SDWAIOFS                                                 05734000
SDWAIOQR EQU   SDWAIOFS                                                 05735000
SDWAFMID EQU   SDWA+236                                                 05736000
SDWAERFL EQU   SDWAERRD                                                 05737000
SDWAMCIV EQU   SDWAERRD                                                 05738000
SDWARPIV EQU   SDWAERRD                                                 05739000
SDWAMABD EQU   SDWAERRD                                                 05740000
SDWACTS  EQU   SDWAERRD                                                 05741000
SDWASTAE EQU   SDWAERRD                                                 05742000
SDWANRBE EQU   SDWAERRD                                                 05743000
SDWACLUP EQU   SDWAERRD                                                 05744000
@NM00066 EQU   SDWAERRC                                                 05745000
SDWAEAS  EQU   SDWAERRC                                                 05746000
SDWAPERC EQU   SDWAERRC                                                 05747000
SDWAIRB  EQU   SDWAERRC                                                 05748000
SDWASTAI EQU   SDWAERRC                                                 05749000
SDWASTAF EQU   SDWAERRC                                                 05750000
SDWASRBM EQU   SDWAERRB                                                 05751000
SDWALDIS EQU   SDWAERRB                                                 05752000
SDWAENRB EQU   SDWAERRB                                                 05753000
SDWATYP1 EQU   SDWAERRB                                                 05754000
@NM00065 EQU   SDWAERRB                                                 05755000
SDWAPGIO EQU   SDWAERRA                                                 05756000
SDWATEXC EQU   SDWAERRA                                                 05757000
SDWASVCE EQU   SDWAERRA                                                 05758000
SDWAABTM EQU   SDWAERRA                                                 05759000
SDWASVCD EQU   SDWAERRA                                                 05760000
SDWARKEY EQU   SDWAERRA                                                 05761000
SDWAPCHK EQU   SDWAERRA                                                 05762000
SDWAMCHK EQU   SDWAERRA                                                 05763000
SDWATIME EQU   SDWAMCH+20                                               05764000
SDWARFSA EQU   SDWAMCH+16                                               05765000
@NM00064 EQU   SDWAMCH+14                                               05766000
SDWAVEQR EQU   SDWARSR2                                                 05767000
SDWAPGFX EQU   SDWARSR2                                                 05768000
SDWAFLSQ EQU   SDWARSR2                                                 05769000
SDWAFSQA EQU   SDWARSR2                                                 05770000
SDWANUCL EQU   SDWARSR2                                                 05771000
SDWASPER EQU   SDWARSR2                                                 05772000
SDWAINTC EQU   SDWARSR2                                                 05773000
SDWAOFLN EQU   SDWARSR2                                                 05774000
SDWACHNG EQU   SDWARSR1                                                 05775000
SDWAMSER EQU   SDWARSR1                                                 05776000
@NM00063 EQU   SDWARSR1                                                 05777000
SDWACPID EQU   SDWAMCH+10                                               05778000
SDWATERR EQU   SDWAMCHD                                                 05779000
SDWAFPRX EQU   SDWAMCHD                                                 05780000
SDWAINSF EQU   SDWAMCHD                                                 05781000
SDWAACR  EQU   SDWAMCHD                                                 05782000
SDWASCK  EQU   SDWAMCHD                                                 05783000
SDWAPSWU EQU   SDWAMCHD                                                 05784000
SDWAREGU EQU   SDWAMCHD                                                 05785000
SDWASKYF EQU   SDWAMCHD                                                 05786000
@NM00062 EQU   SDWAMCHS                                                 05787000
SDWARSRF EQU   SDWAMCHS                                                 05788000
SDWARSRC EQU   SDWAMCHS                                                 05789000
SDWAINVP EQU   SDWAMCHS                                                 05790000
SDWATSVL EQU   SDWAMCHS                                                 05791000
SDWARCDF EQU   SDWAMCHS                                                 05792000
SDWASRVL EQU   SDWAMCHS                                                 05793000
SDWASCKE EQU   SDWASTCK+4                                               05794000
SDWASCKB EQU   SDWASTCK                                                 05795000
SDWALNTH EQU   SDWAIDNT+1                                               05796000
SDWASPID EQU   SDWAIDNT                                                 05797000
SDWASR15 EQU   SDWASRSV+60                                              05798000
SDWASR14 EQU   SDWASRSV+56                                              05799000
SDWASR13 EQU   SDWASRSV+52                                              05800000
SDWASR12 EQU   SDWASRSV+48                                              05801000
SDWASR11 EQU   SDWASRSV+44                                              05802000
SDWASR10 EQU   SDWASRSV+40                                              05803000
SDWASR09 EQU   SDWASRSV+36                                              05804000
SDWASR08 EQU   SDWASRSV+32                                              05805000
SDWASR07 EQU   SDWASRSV+28                                              05806000
SDWASR06 EQU   SDWASRSV+24                                              05807000
SDWASR05 EQU   SDWASRSV+20                                              05808000
SDWASR04 EQU   SDWASRSV+16                                              05809000
SDWASR03 EQU   SDWASRSV+12                                              05810000
SDWASR02 EQU   SDWASRSV+8                                               05811000
SDWASR01 EQU   SDWASRSV+4                                               05812000
SDWASR00 EQU   SDWASRSV                                                 05813000
SDWATRN2 EQU   SDWAAEC2+4                                               05814000
SDWAIPC2 EQU   SDWAICD2                                                 05815000
SDWAIMC2 EQU   SDWAICD2                                                 05816000
SDWAIPR2 EQU   SDWAICD2                                                 05817000
@NM00061 EQU   SDWAINC2                                                 05818000
@NM00060 EQU   SDWAILC2                                                 05819000
SDWAIL2  EQU   SDWAILC2                                                 05820000
@NM00059 EQU   SDWAILC2                                                 05821000
@NM00058 EQU   SDWAAEC2                                                 05822000
SDWAADD2 EQU   SDWANXT2+1                                               05823000
@NM00057 EQU   SDWANXT2                                                 05824000
@NM00056 EQU   SDWAEC2+3                                                05825000
SDWASGN2 EQU   SDWAINT2                                                 05826000
SDWAEXP2 EQU   SDWAINT2                                                 05827000
SDWADEC2 EQU   SDWAINT2                                                 05828000
SDWAFPO2 EQU   SDWAINT2                                                 05829000
SDWACC2  EQU   SDWAINT2                                                 05830000
@NM00055 EQU   SDWAINT2                                                 05831000
SDWAPGM2 EQU   SDWAMWP2                                                 05832000
SDWAWAT2 EQU   SDWAMWP2                                                 05833000
SDWAMCK2 EQU   SDWAMWP2                                                 05834000
SDWAECT2 EQU   SDWAMWP2                                                 05835000
SDWAKEY2 EQU   SDWAMWP2                                                 05836000
SDWAEXT2 EQU   SDWAEMK2                                                 05837000
SDWAIO2  EQU   SDWAEMK2                                                 05838000
SDWATRM2 EQU   SDWAEMK2                                                 05839000
@NM00054 EQU   SDWAEMK2                                                 05840000
SDWAPER2 EQU   SDWAEMK2                                                 05841000
@NM00053 EQU   SDWAEMK2                                                 05842000
SDWATRAN EQU   SDWAAEC1+4                                               05843000
SDWAIPC1 EQU   SDWAICD1                                                 05844000
SDWAIMC1 EQU   SDWAICD1                                                 05845000
SDWAIPR1 EQU   SDWAICD1                                                 05846000
@NM00052 EQU   SDWAINC1                                                 05847000
@NM00051 EQU   SDWAILC1                                                 05848000
SDWAIL1  EQU   SDWAILC1                                                 05849000
@NM00050 EQU   SDWAILC1                                                 05850000
@NM00049 EQU   SDWAAEC1                                                 05851000
SDWAADD1 EQU   SDWANXT1+1                                               05852000
@NM00048 EQU   SDWANXT1                                                 05853000
@NM00047 EQU   SDWAEC1+3                                                05854000
SDWASGN1 EQU   SDWAINT1                                                 05855000
SDWAEXP1 EQU   SDWAINT1                                                 05856000
SDWADEC1 EQU   SDWAINT1                                                 05857000
SDWAFPO1 EQU   SDWAINT1                                                 05858000
SDWACC1  EQU   SDWAINT1                                                 05859000
@NM00046 EQU   SDWAINT1                                                 05860000
SDWAPGM1 EQU   SDWAMWP1                                                 05861000
SDWAWAT1 EQU   SDWAMWP1                                                 05862000
SDWAMCK1 EQU   SDWAMWP1                                                 05863000
SDWAECT1 EQU   SDWAMWP1                                                 05864000
SDWAKEY1 EQU   SDWAMWP1                                                 05865000
SDWAEXT1 EQU   SDWAEMK1                                                 05866000
SDWAIO1  EQU   SDWAEMK1                                                 05867000
SDWATRM1 EQU   SDWAEMK1                                                 05868000
@NM00045 EQU   SDWAEMK1                                                 05869000
SDWAPER1 EQU   SDWAEMK1                                                 05870000
@NM00044 EQU   SDWAEMK1                                                 05871000
SDWAIOBR EQU   SDWA+100                                                 05872000
SDWAEPA  EQU   SDWA+96                                                  05873000
@NM00043 EQU   SDWANAME+4                                               05874000
SDWARBAD EQU   SDWANAME                                                 05875000
SDWAGR15 EQU   SDWAGRSV+60                                              05876000
SDWAGR14 EQU   SDWAGRSV+56                                              05877000
SDWAGR13 EQU   SDWAGRSV+52                                              05878000
SDWAGR12 EQU   SDWAGRSV+48                                              05879000
SDWAGR11 EQU   SDWAGRSV+44                                              05880000
SDWAGR10 EQU   SDWAGRSV+40                                              05881000
SDWAGR09 EQU   SDWAGRSV+36                                              05882000
SDWAGR08 EQU   SDWAGRSV+32                                              05883000
SDWAGR07 EQU   SDWAGRSV+28                                              05884000
SDWAGR06 EQU   SDWAGRSV+24                                              05885000
SDWAGR05 EQU   SDWAGRSV+20                                              05886000
SDWAGR04 EQU   SDWAGRSV+16                                              05887000
SDWAGR03 EQU   SDWAGRSV+12                                              05888000
SDWAGR02 EQU   SDWAGRSV+8                                               05889000
SDWAGR01 EQU   SDWAGRSV+4                                               05890000
SDWAGR00 EQU   SDWAGRSV                                                 05891000
SDWANXTP EQU   SDWACTL2+5                                               05892000
SDWASGP  EQU   SDWAPMKP                                                 05893000
SDWAEUP  EQU   SDWAPMKP                                                 05894000
SDWADOP  EQU   SDWAPMKP                                                 05895000
SDWAFPP  EQU   SDWAPMKP                                                 05896000
SDWACCP  EQU   SDWAPMKP                                                 05897000
SDWAILP  EQU   SDWAPMKP                                                 05898000
SDWAINTP EQU   SDWACTL2+2                                               05899000
SDWASPVP EQU   SDWAMWPP                                                 05900000
SDWAWATP EQU   SDWAMWPP                                                 05901000
SDWAMCKP EQU   SDWAMWPP                                                 05902000
@NM00042 EQU   SDWAMWPP                                                 05903000
SDWAKEYP EQU   SDWAMWPP                                                 05904000
SDWAEXTP EQU   SDWACMKP                                                 05905000
SDWAIOP  EQU   SDWACMKP                                                 05906000
SDWANXTA EQU   SDWACTL1+5                                               05907000
SDWASGA  EQU   SDWAPMKA                                                 05908000
SDWAEUA  EQU   SDWAPMKA                                                 05909000
SDWADOA  EQU   SDWAPMKA                                                 05910000
SDWAFPA  EQU   SDWAPMKA                                                 05911000
SDWACCA  EQU   SDWAPMKA                                                 05912000
SDWAILA  EQU   SDWAPMKA                                                 05913000
SDWAINTA EQU   SDWACTL1+2                                               05914000
SDWASPVA EQU   SDWAMWPA                                                 05915000
SDWAWATA EQU   SDWAMWPA                                                 05916000
SDWAMCKA EQU   SDWAMWPA                                                 05917000
@NM00041 EQU   SDWAMWPA                                                 05918000
SDWAKEYA EQU   SDWAMWPA                                                 05919000
SDWAEXTA EQU   SDWACMKA                                                 05920000
SDWAIOA  EQU   SDWACMKA                                                 05921000
SDWACMPC EQU   SDWAABCC+1                                               05922000
@NM00040 EQU   SDWACMPF                                                 05923000
SDWASTCC EQU   SDWACMPF                                                 05924000
@NM00039 EQU   SDWACMPF                                                 05925000
SDWASTEP EQU   SDWACMPF                                                 05926000
SDWAREQ  EQU   SDWACMPF                                                 05927000
SDWAPARM EQU   SDWA                                                     05928000
@NM00038 EQU   IHADCS44+10                                              05929000
DCBXENDA EQU   IHADCS44+8                                               05930000
DCBCENDA EQU   IHADCS44+6                                               05931000
DCBSIOA  EQU   IHADCS44+4                                               05932000
DCBPCIA  EQU   IHADCS44+2                                               05933000
DCBEOEA  EQU   IHADCS44                                                 05934000
@NM00037 EQU   IHADCS28+1                                               05935000
@NM00036 EQU   DCBOPTCD                                                 05936000
DCBSRCHD EQU   DCBOPTZ                                                  05937000
@NM00035 EQU   DCBOPTCD                                                 05938000
DCBDEBA  EQU   DCBDEBAD+1                                               05939000
@NM00034 EQU   DCBIFLGS                                                 05940000
DCBIFIOE EQU   DCBIFLGS                                                 05941000
DCBCH12  EQU   DCBIFPCT                                                 05942000
DCBCH9   EQU   DCBIFPCT                                                 05943000
DCBIFEC  EQU   DCBIFLGS                                                 05944000
DCBMFSTI EQU   DCBMFDMD                                                 05945000
DCBMFAWR EQU   DCBMFSTK                                                 05946000
DCBMFUIP EQU   DCBMFTMD                                                 05947000
DCBMFIDW EQU   DCBMFLCP                                                 05948000
DCBMFWRK EQU   DCBMFMVP                                                 05949000
DCBMFRDQ EQU   DCBMFWRT                                                 05950000
DCBMFGTQ EQU   DCBMFPUT                                                 05951000
DCBMFSTL EQU   DCBMACF2                                                 05952000
DCBMFCK  EQU   DCBMFDMG                                                 05953000
DCBMFRDX EQU   DCBMFCHK                                                 05954000
DCBMFDBF EQU   DCBMFSBG                                                 05955000
DCBMFRDI EQU   DCBMFLCG                                                 05956000
DCBMFRDK EQU   DCBMFMVG                                                 05957000
DCBMFWRQ EQU   DCBMFRD                                                  05958000
DCBMFPTQ EQU   DCBMFGET                                                 05959000
DCBMFECP EQU   DCBMACF1                                                 05960000
DCBTIOT  EQU   IHADCS25                                                 05961000
DCBMRSTI EQU   DCBMRDMD                                                 05962000
DCBMRAWR EQU   DCBMRSTK                                                 05963000
DCBMRUIP EQU   DCBMRTMD                                                 05964000
DCBMRIDW EQU   DCBMRLCP                                                 05965000
DCBMRWRK EQU   DCBMRMVP                                                 05966000
DCBMRRDQ EQU   DCBMRWRT                                                 05967000
DCBMRGTQ EQU   DCBMRPUT                                                 05968000
DCBMRSTL EQU   DCBMACR2                                                 05969000
DCBMRCK  EQU   DCBMRDMG                                                 05970000
DCBPGFXA EQU   DCBMRRDX                                                 05971000
DCBMRDBF EQU   DCBMRSBG                                                 05972000
DCBMRRDI EQU   DCBMRLCG                                                 05973000
DCBMRRDK EQU   DCBMRMVG                                                 05974000
DCBMRWRQ EQU   DCBMRRD                                                  05975000
DCBMRPTQ EQU   DCBMRGET                                                 05976000
DCBMRECP EQU   DCBMACR1                                                 05977000
@NM00033 EQU   DCBIFLG                                                  05978000
DCBIBIOE EQU   DCBIFLG                                                  05979000
DCBICH12 EQU   DCBIBPCT                                                 05980000
DCBICH9  EQU   DCBIBPCT                                                 05981000
DCBIBEC  EQU   DCBIFLG                                                  05982000
DCBOFIOF EQU   DCBOFLGS                                                 05983000
DCBOFUEX EQU   DCBOFLGS                                                 05984000
DCBOFTM  EQU   DCBOFLGS                                                 05985000
DCBOFPPC EQU   DCBOFLGS                                                 05986000
DCBOFEOV EQU   DCBOFLGS                                                 05987000
DCBOFLRB EQU   DCBOFLGS                                                 05988000
DCBOFIOD EQU   DCBOFLWR                                                 05989000
DCBDDNAM EQU   IHADCS24                                                 05990000
DCBEXLSA EQU   DCBEXLST+1                                               05991000
DCBRECKL EQU   DCBRECFM                                                 05992000
DCBRECCC EQU   DCBRECFM                                                 05993000
DCBRECSB EQU   DCBRECFM                                                 05994000
DCBRECBR EQU   DCBRECFM                                                 05995000
DCBRECTO EQU   DCBRECLA                                                 05996000
DCBRECL  EQU   DCBRECLA                                                 05997000
DCBEODA  EQU   DCBEODAD+1                                               05998000
DCBBFA   EQU   DCBBFTEK                                                 05999000
DCBH0    EQU   DCBBFTEK                                                 06000000
DCBBFTKD EQU   DCBBFTEK                                                 06001000
DCBBFTE  EQU   DCBBFT                                                   06002000
DCBBFTKR EQU   DCBBFT                                                   06003000
DCBBFTS  EQU   DCBBFT                                                   06004000
DCBH1    EQU   DCBBFTEK                                                 06005000
DCBSVCXA EQU   DCBSVCXL+1                                               06006000
@NM00032 EQU   DCBSVCXL                                                 06007000
DCBODEBA EQU   DCBIOBAA                                                 06008000
@NM00031 EQU   DCBQSLM                                                  06009000
DCBUPDBT EQU   DCBQSLM                                                  06010000
DCBUPDCM EQU   DCBQSLM                                                  06011000
DCB1DVDS EQU   DCBQSLM                                                  06012000
@NM00030 EQU   DCBDSRG2                                                 06013000
DCBDSGTR EQU   DCBDSRG2                                                 06014000
DCBACBM  EQU   DCBDSRG2                                                 06015000
@NM00029 EQU   DCBDSRG2                                                 06016000
DCBDSGTQ EQU   DCBDSRG2                                                 06017000
DCBDSGTX EQU   DCBDSRG2                                                 06018000
DCBDSGGS EQU   DCBDSRG2                                                 06019000
DCBDSGU  EQU   DCBDSRG1                                                 06020000
DCBDSGPO EQU   DCBDSRG1                                                 06021000
@NM00028 EQU   DCBDSRG1                                                 06022000
@NM00027 EQU   DCBDSRG1                                                 06023000
DCBDSGCX EQU   DCBDSRG1                                                 06024000
DCBDSGDA EQU   DCBDSRG1                                                 06025000
DCBDSGPS EQU   DCBDSRG1                                                 06026000
DCBDSGIS EQU   DCBDSRG1                                                 06027000
DCBBUFL  EQU   IHADCS11+8                                               06028000
DCBBUFCA EQU   DCBBUFCB+1                                               06029000
DCBBUFNO EQU   DCBBUFCB                                                 06030000
DCBDEVT  EQU   DCBREL                                                   06031000
DCBKEYLE EQU   DCBRELB                                                  06032000
@NM00026 EQU   IHADCB                                                   06033000
ECBEVNT  EQU   ECBEXTND                                                 06034000
@NM00025 EQU   ECBEXTND                                                 06035000
@NM00024 EQU   ECBBYTE3                                                 06036000
@NM00023 EQU   ECBEXTBA                                                 06037000
@NM00022 EQU   ECBCC                                                    06038000
ECBPOSTB EQU   ECBCC                                                    06039000
ECBWAITB EQU   ECBCC                                                    06040000
IOBERRCT EQU   IOBSTDRD+30                                              06041000
IOBRSV19 EQU   IOBINCAM+1                                               06042000
IOBOLTST EQU   IOBBTAMF                                                 06043000
IOBRFTMG EQU   IOBBTAMF                                                 06044000
IOBRSV17 EQU   IOBBTAMF                                                 06045000
IOBRSV16 EQU   IOBBTAMF                                                 06046000
IOBRSV15 EQU   IOBBTAMF                                                 06047000
IOBRSV14 EQU   IOBBTAMF                                                 06048000
IOBINUSE EQU   IOBBTAMF                                                 06049000
IOBPRMER EQU   IOBBTAMF                                                 06050000
IOBRSTRB EQU   IOBRESTR+1                                               06051000
IOBREPOS EQU   IOBRESTR                                                 06052000
IOBDCBPB EQU   IOBDCBPT+1                                               06053000
IOBRSV44 EQU   IOBFLAG4                                                 06054000
IOBJES3I EQU   IOBFLAG4                                                 06055000
IOBRSV42 EQU   IOBFLAG4                                                 06056000
IOBRSV41 EQU   IOBFLAG4                                                 06057000
IOBRSV40 EQU   IOBFLAG4                                                 06058000
IOBPMERR EQU   IOBFLAG4                                                 06059000
IOBCC3WE EQU   IOBFLAG4                                                 06060000
IOBGDPOL EQU   IOBFLAG4                                                 06061000
IOBSTRTB EQU   IOBSTART+1                                               06062000
IOBSIOCC EQU   IOBSTART                                                 06063000
IOBCSB7  EQU   IOBCSTAT                                                 06064000
IOBCSB6  EQU   IOBCSTAT                                                 06065000
IOBCSB5  EQU   IOBCSTAT                                                 06066000
IOBCSB4  EQU   IOBCSTAT                                                 06067000
IOBCSB3  EQU   IOBCSTAT                                                 06068000
IOBCSB2  EQU   IOBCSTAT                                                 06069000
IOBCSB1  EQU   IOBCSTAT                                                 06070000
IOBCSB0  EQU   IOBCSTAT                                                 06071000
IOBUSB7  EQU   IOBUSTAT                                                 06072000
IOBUSB6  EQU   IOBUSTAT                                                 06073000
IOBUSB5  EQU   IOBUSTAT                                                 06074000
IOBUSB4  EQU   IOBUSTAT                                                 06075000
IOBUSB3  EQU   IOBUSTAT                                                 06076000
IOBUSB2  EQU   IOBUSTAT                                                 06077000
IOBUSB1  EQU   IOBUSTAT                                                 06078000
IOBUSB0  EQU   IOBUSTAT                                                 06079000
IOBCMDA  EQU   IOBIOCSW                                                 06080000
IOBLOG   EQU   IOBFL3                                                   06081000
IOBJAM   EQU   IOBICL                                                   06082000
IOBMSG   EQU   IOBFL3                                                   06083000
IOBSDR   EQU   IOBCNC                                                   06084000
IOBACU   EQU   IOBFL3                                                   06085000
IOBCDC   EQU   IOBFL3                                                   06086000
IOBICC   EQU   IOBFL3                                                   06087000
IOBCCC   EQU   IOBFL3                                                   06088000
IOBECBPB EQU   IOBECBPT+1                                               06089000
IOBECBCC EQU   IOBECBPT                                                 06090000
IOBS1B7  EQU   IOBSENS1                                                 06091000
IOBS1B6  EQU   IOBSENS1                                                 06092000
IOBS1B5  EQU   IOBSENS1                                                 06093000
IOBS1B4  EQU   IOBSENS1                                                 06094000
IOBS1B3  EQU   IOBSENS1                                                 06095000
IOBS1B2  EQU   IOBSENS1                                                 06096000
IOBS1B1  EQU   IOBSENS1                                                 06097000
IOBS1B0  EQU   IOBSENS1                                                 06098000
IOBSNSC9 EQU   IOBS0B7                                                  06099000
IOBS0B6  EQU   IOBSENS0                                                 06100000
IOBS0B5  EQU   IOBSENS0                                                 06101000
IOBS0B4  EQU   IOBSENS0                                                 06102000
IOBS0B3  EQU   IOBSENS0                                                 06103000
IOBS0B2  EQU   IOBSENS0                                                 06104000
IOBS0B1  EQU   IOBSENS0                                                 06105000
IOBS0B0  EQU   IOBSENS0                                                 06106000
IOBPNCH  EQU   IOBFLAG2                                                 06107000
IOBSTATO EQU   IOBFLAG2                                                 06108000
IOBSKUPD EQU   IOBFLAG2                                                 06109000
IOBALTTR EQU   IOBFLAG2                                                 06110000
IOBRRT2  EQU   IOBRDHA0                                                 06111000
IOBRRT3  EQU   IOBPURGE                                                 06112000
IOBSENSE EQU   IOBFLAG2                                                 06113000
IOBHALT  EQU   IOBFLAG2                                                 06114000
IOBSPSVC EQU   IOBRSTRT                                                 06115000
IOBUNREL EQU   IOBFLAG1                                                 06116000
IOBIOERR EQU   IOBFLAG1                                                 06117000
IOBFCREX EQU   IOBCYCCK                                                 06118000
IOBRPSTN EQU   IOBFLAG1                                                 06119000
IOBERRTN EQU   IOBFLAG1                                                 06120000
IOBCMDCH EQU   IOBFLAG1                                                 06121000
IOBDATCH EQU   IOBFLAG1                                                 06122000
IOBCNOPA EQU   IOBPREFX+12                                              06123000
IOBCICB  EQU   IOBPREFX+8                                               06124000
IOBCECB  EQU   IOBPREFX+4                                               06125000
IOBCONOP EQU   IOBPREFX+3                                               06126000
IOBCINOP EQU   IOBPREFX+2                                               06127000
IOBRSV05 EQU   IOBPREFX+1                                               06128000
IOBPCI   EQU   IOBCFLG1                                                 06129000
IOBRSTCH EQU   IOBCFLG1                                                 06130000
IOBABAPP EQU   IOBCFLG1                                                 06131000
IOBPTST  EQU   IOBCFLG1                                                 06132000
IOBRSV04 EQU   IOBCFLG1                                                 06133000
IOBRSV03 EQU   IOBCFLG1                                                 06134000
IOBRSV02 EQU   IOBCFLG1                                                 06135000
IOBRSV01 EQU   IOBCFLG1                                                 06136000
UCBERADR EQU   UCBUCS+12                                                06137000
UCBFCBID EQU   UCBUCS+8                                                 06138000
UCBERCNT EQU   UCBUCS+7                                                 06139000
UCBRSV51 EQU   UCBUCS+6                                                 06140000
UCBRSV50 EQU   UCBFCBOP                                                 06141000
UCBRSV49 EQU   UCBFCBOP                                                 06142000
UCBRSV48 EQU   UCBFCBOP                                                 06143000
UCBRSV47 EQU   UCBFCBOP                                                 06144000
UCBRSV46 EQU   UCBFCBOP                                                 06145000
UCBRSV45 EQU   UCBFCBOP                                                 06146000
UCBRSV44 EQU   UCBFCBOP                                                 06147000
UCBFCBO1 EQU   UCBFCBOP                                                 06148000
UCBUCSPE EQU   UCBUCSOP                                                 06149000
UCBRSV43 EQU   UCBUCSOP                                                 06150000
UCBRSV42 EQU   UCBUCSOP                                                 06151000
UCBRSV41 EQU   UCBUCSOP                                                 06152000
UCBRSV40 EQU   UCBUCSOP                                                 06153000
UCBRSV39 EQU   UCBUCSOP                                                 06154000
UCBUCSO2 EQU   UCBUCSOP                                                 06155000
UCBUCSO1 EQU   UCBUCSOP                                                 06156000
UCBUCSID EQU   UCBUCS                                                   06157000
UCBMDRBA EQU   UCBMDRBF+1                                               06158000
UCBRV075 EQU   UCBMDRBF                                                 06159000
UCBRV074 EQU   UCB3800X+32                                              06160000
UCBIMAGE EQU   UCB3800X+28                                              06161000
UCBFCBNM EQU   UCB3800X+24                                              06162000
UCBCHAR4 EQU   UCB3800X+20                                              06163000
UCBCHAR3 EQU   UCB3800X+16                                              06164000
UCBCHAR2 EQU   UCB3800X+12                                              06165000
UCBCHAR1 EQU   UCB3800X+8                                               06166000
UCBCGMID EQU   UCB3800X+4                                               06167000
UCBBRSTA EQU   UCBACTIV                                                 06168000
UCBRV063 EQU   UCBACTIV                                                 06169000
UCBRV062 EQU   UCBACTIV                                                 06170000
UCBRV061 EQU   UCBACTIV                                                 06171000
UCBRV060 EQU   UCBACTIV                                                 06172000
UCBRV059 EQU   UCBACTIV                                                 06173000
UCBRV058 EQU   UCBACTIV                                                 06174000
UCBRV057 EQU   UCBACTIV                                                 06175000
UCBRV050 EQU   UCB3800X+2                                               06176000
UCBCGMNO EQU   UCB3800X+1                                               06177000
UCBRV083 EQU   UCBOPTNS                                                 06178000
UCBBRSTR EQU   UCBOPTNS                                                 06179000
UCBRV056 EQU   UCBOPTNS                                                 06180000
UCBRV055 EQU   UCBOPTNS                                                 06181000
UCBRV054 EQU   UCBOPTNS                                                 06182000
UCBRV053 EQU   UCBOPTNS                                                 06183000
UCBRV052 EQU   UCBOPTNS                                                 06184000
UCBRV051 EQU   UCBOPTNS                                                 06185000
UCBRV073 EQU   UCB3540X+7                                               06186000
UCBRV072 EQU   UCBDKBYT                                                 06187000
UCBRV071 EQU   UCBDKBYT                                                 06188000
UCBRV070 EQU   UCBDKBYT                                                 06189000
UCBRV069 EQU   UCBDKBYT                                                 06190000
UCBRV068 EQU   UCBDKBYT                                                 06191000
UCBRV067 EQU   UCBDKBYT                                                 06192000
UCBVLVER EQU   UCBDKBYT                                                 06193000
UCBDKAMX EQU   UCBDKBYT                                                 06194000
UCBVLSER EQU   UCB3540X                                                 06195000
UCBRDATA EQU   UCBOCR+4                                                 06196000
UCBFRID  EQU   UCBOCR                                                   06197000
UCBCLN   EQU   UCBMT+14                                                 06198000
UCBERG   EQU   UCBMT+12                                                 06199000
UCBMS    EQU   UCBMT+11                                                 06200000
UCBNB    EQU   UCBMT+10                                                 06201000
UCBPW    EQU   UCBMT+9                                                  06202000
UCBPR    EQU   UCBMT+8                                                  06203000
UCBSIO   EQU   UCBMT+6                                                  06204000
UCBTW    EQU   UCBMT+5                                                  06205000
UCBTR    EQU   UCBMT+4                                                  06206000
UCBTWT   EQU   UCBMT+3                                                  06207000
UCBTRT   EQU   UCBMT+2                                                  06208000
UCBCTD   EQU   UCBMT                                                    06209000
UCBWTOID EQU   UCBCMEXT+17                                              06210000
UCBMIHTI EQU   UCBCMEXT+16                                              06211000
UCBASID  EQU   UCBCMEXT+14                                              06212000
UCBMFCNT EQU   UCBCMEXT+12                                              06213000
UCBPMSK  EQU   UCBCMEXT+10                                              06214000
UCBCCWOF EQU   UCBCMEXT+8                                               06215000
UCBRV041 EQU   UCBCMEXT+6                                               06216000
UCBRV036 EQU   UCBFLP1                                                  06217000
UCBRV035 EQU   UCBFLP1                                                  06218000
UCBERLOG EQU   UCBFLP1                                                  06219000
UCBRV033 EQU   UCBFLP1                                                  06220000
UCBINHIO EQU   UCBFLP1                                                  06221000
UCBNSWAP EQU   UCBFLP1                                                  06222000
UCBSHRUP EQU   UCBFLP1                                                  06223000
UCBNSRCH EQU   UCBFLP1                                                  06224000
UCBSNSCT EQU   UCBCMEXT+4                                               06225000
UCBHPDV  EQU   @NM00021                                                 06226000
UCBHALI  EQU   @NM00021                                                 06227000
UCBRSV09 EQU   @NM00021                                                 06228000
UCBRSV08 EQU   @NM00021                                                 06229000
UCBRSV07 EQU   @NM00021                                                 06230000
UCBRSV06 EQU   @NM00021                                                 06231000
UCBRSV05 EQU   @NM00021                                                 06232000
UCBRSV04 EQU   @NM00021                                                 06233000
UCBDTI   EQU   UCBCMEXT+2                                               06234000
UCBSTI   EQU   UCBCMEXT+1                                               06235000
UCBETI   EQU   UCBCMEXT                                                 06236000
UCBEXTP  EQU   UCBEXTPT+1                                               06237000
UCBDDRSW EQU   UCBFLC                                                   06238000
UCBTICBT EQU   UCBFLC                                                   06239000
UCBIVRR  EQU   UCBFLC                                                   06240000
UCBIVRS  EQU   UCBFLC                                                   06241000
UCBITF   EQU   UCBFLC                                                   06242000
UCBUDE   EQU   UCBFLC                                                   06243000
UCBWAA   EQU   UCBFLC                                                   06244000
UCBATTP  EQU   UCBFLC                                                   06245000
UCBUNTYP EQU   UCBTBYT4                                                 06246000
UCBRSV11 EQU   UCBDVCLS                                                 06247000
UCBRSV10 EQU   UCBDVCLS                                                 06248000
UCB3CHAR EQU   UCBDVCLS                                                 06249000
UCB3UREC EQU   UCBDVCLS                                                 06250000
UCB3DISP EQU   UCBDVCLS                                                 06251000
UCB3DACC EQU   UCBDVCLS                                                 06252000
UCB3COMM EQU   UCBDVCLS                                                 06253000
UCB3TAPE EQU   UCBDVCLS                                                 06254000
UCBDVPWR EQU   UCB2OPT7                                                 06255000
UCBVLPWR EQU   UCB2OPT6                                                 06256000
UCB2OPT5 EQU   UCBTBYT2                                                 06257000
UCBRVDEV EQU   UCBRWTAU                                                 06258000
UCBRPS   EQU   UCBDUDN2                                                 06259000
UCBRR    EQU   UCBDUDN1                                                 06260000
UCB2OPT1 EQU   UCBTBYT2                                                 06261000
UCB2OPT0 EQU   UCBTBYT2                                                 06262000
UCB1FEA7 EQU   UCBTBYT1                                                 06263000
UCBD6250 EQU   UCB1FEA6                                                 06264000
UCBD1600 EQU   UCB1FEA5                                                 06265000
UCB1FEA4 EQU   UCBTBYT1                                                 06266000
UCB1FEA3 EQU   UCBTBYT1                                                 06267000
UCB1FEA2 EQU   UCBTBYT1                                                 06268000
UCB1FEA1 EQU   UCBTBYT1                                                 06269000
UCB1FEA0 EQU   UCBTBYT1                                                 06270000
UCBRV029 EQU   UCBWGT                                                   06271000
UCBVHRSN EQU   UCBWGT                                                   06272000
UCBVORSN EQU   UCBWGT                                                   06273000
UCBMTPXP EQU   UCBWGT                                                   06274000
UCBREW   EQU   UCBWGT                                                   06275000
UCBPUB   EQU   UCBWGT                                                   06276000
UCBOUT   EQU   UCBWGT                                                   06277000
UCBIN    EQU   UCBWGT                                                   06278000
UCBCPU   EQU   UCBOB+11                                                 06279000
UCBLCI   EQU   UCBOB+10                                                 06280000
UCBCNT   EQU   UCBOB+9                                                  06281000
UCBRV017 EQU   UCBCHM1                                                  06282000
UCBRV016 EQU   UCBCHM1                                                  06283000
UCBRV015 EQU   UCBCHM1                                                  06284000
UCBRV014 EQU   UCBCHM1                                                  06285000
UCBSPB   EQU   UCBPTH1                                                  06286000
UCBPPB   EQU   UCBPTH1                                                  06287000
UCBSPA   EQU   UCBPTH0                                                  06288000
UCBPPA   EQU   UCBPTH0                                                  06289000
UCBSIGP  EQU   UCBFLB                                                   06290000
UCBVALPH EQU   UCBFLB                                                   06291000
UCBCRHSN EQU   UCBFLB                                                   06292000
UCBCRHRV EQU   UCBFLB                                                   06293000
UCBRESVH EQU   UCBFLB                                                   06294000
UCBSPST  EQU   UCBFLB                                                   06295000
UCBASNS  EQU   UCBFLB                                                   06296000
UCBIORST EQU   UCBFLB                                                   06297000
UCBQISCE EQU   UCBFL1                                                   06298000
UCBACTV  EQU   UCBFL1                                                   06299000
UCBSAP   EQU   UCBFL1                                                   06300000
UCBNOTRC EQU   UCBCUB                                                   06301000
UCBPSNS  EQU   UCBFL1                                                   06302000
UCBUSING EQU   UCBPST                                                   06303000
UCBNOTRD EQU   UCBNRY                                                   06304000
UCBBUSYD EQU   UCBBSY                                                   06305000
UCBUA    EQU   UCBCHAN+1                                                06306000
UCBCHA   EQU   UCBCHAN                                                  06307000
UCBDADI  EQU   UCBSTAT                                                  06308000
UCBSYSR  EQU   UCBSTAT                                                  06309000
UCBPRES  EQU   UCBSTAT                                                  06310000
UCBALOC  EQU   UCBSTAT                                                  06311000
UCBUNLD  EQU   UCBSTAT                                                  06312000
UCBRESV  EQU   UCBSTAT                                                  06313000
UCBCHGS  EQU   UCBSTAT                                                  06314000
UCBONLI  EQU   UCBSTAT                                                  06315000
UCBID    EQU   UCBOB+2                                                  06316000
UCBALTPH EQU   UCBFL5                                                   06317000
UCBALTCU EQU   UCBFL5                                                   06318000
UCBNALOC EQU   UCBFL5                                                   06319000
UCBENVRD EQU   UCBFL5                                                   06320000
UCBVSDR  EQU   UCBFL5                                                   06321000
UCBSASK  EQU   UCBFL5                                                   06322000
UCBAMV   EQU   UCBAF                                                    06323000
UCBDCC   EQU   UCBFL5                                                   06324000
UCBMONT  EQU   UCBJBNR                                                  06325000
UCBRV011 EQU   UCBJBNR                                                  06326000
UCBMMSGP EQU   UCBJBNR                                                  06327000
UCBOLDSM EQU   UCBJBNR                                                  06328000
UCBRV003 EQU   UCBJBNR                                                  06329000
UCBDUC   EQU   UCBJBNR                                                  06330000
UCBJES3  EQU   UCBJBNR                                                  06331000
UCBVRDEV EQU   UCBJBNR                                                  06332000
UCBCMSEG EQU   UCBOB                                                    06333000
UCBPFXND EQU   UCB+512                                                  06334000
UCBIOQ   EQU   UCB+508                                                  06335000
UCBLOCK  EQU   UCB+504                                                  06336000
UCBPXST  EQU   UCB+504                                                  06337000
@NM00018 EQU   UCB                                                      06338000
ASCBEND  EQU   ASCB+208                                                 06339000
ASCBSRBT EQU   ASCB+200                                                 06340000
ASCBSWTL EQU   ASCB+196                                                 06341000
ASCBRS14 EQU   ASCB+195                                                 06342000
ASCBSMCT EQU   ASCB+194                                                 06343000
ASCBRS12 EQU   ASCB+192                                                 06344000
ASCBPCTT EQU   ASCB+188                                                 06345000
ASCBVGTT EQU   ASCB+184                                                 06346000
ASCBRV43 EQU   ASCBSRQ4                                                 06347000
ASCBRV42 EQU   ASCBSRQ4                                                 06348000
ASCBRV41 EQU   ASCBSRQ4                                                 06349000
ASCBRV40 EQU   ASCBSRQ4                                                 06350000
ASCBRV39 EQU   ASCBSRQ4                                                 06351000
ASCBRV38 EQU   ASCBSRQ4                                                 06352000
ASCBRV37 EQU   ASCBSRQ4                                                 06353000
ASCBRV36 EQU   ASCBSRQ4                                                 06354000
ASCBRV35 EQU   ASCBSRQ3                                                 06355000
ASCBRV34 EQU   ASCBSRQ3                                                 06356000
ASCBRV33 EQU   ASCBSRQ3                                                 06357000
ASCBRV32 EQU   ASCBSRQ3                                                 06358000
ASCBRV31 EQU   ASCBSRQ3                                                 06359000
ASCBRV30 EQU   ASCBSRQ3                                                 06360000
ASCBRV29 EQU   ASCBSRQ3                                                 06361000
ASCBRV28 EQU   ASCBSRQ3                                                 06362000
ASCBRV27 EQU   ASCBSRQ2                                                 06363000
ASCBRV26 EQU   ASCBSRQ2                                                 06364000
ASCBRV25 EQU   ASCBSRQ2                                                 06365000
ASCBRV24 EQU   ASCBSRQ2                                                 06366000
ASCBRV23 EQU   ASCBSRQ2                                                 06367000
ASCBRV22 EQU   ASCBSRQ2                                                 06368000
ASCBRV21 EQU   ASCBSRQ2                                                 06369000
ASCBRV20 EQU   ASCBSRQ2                                                 06370000
ASCBRV19 EQU   ASCBSRQ1                                                 06371000
ASCBRV18 EQU   ASCBSRQ1                                                 06372000
ASCBRV17 EQU   ASCBSRQ1                                                 06373000
ASCBRV16 EQU   ASCBSRQ1                                                 06374000
ASCBRV15 EQU   ASCBSRQ1                                                 06375000
ASCBRV14 EQU   ASCBSRQ1                                                 06376000
ASCBRV13 EQU   ASCBSRQ1                                                 06377000
ASCBSTA  EQU   ASCBSRQ1                                                 06378000
ASCBJBNS EQU   ASCB+176                                                 06379000
ASCBJBNI EQU   ASCB+172                                                 06380000
ASCBMCC  EQU   ASCB+168                                                 06381000
ASCBRTWA EQU   ASCB+164                                                 06382000
ASCBIQEA EQU   ASCB+160                                                 06383000
ASCBXMPQ EQU   ASCB+156                                                 06384000
ASCBRS01 EQU   ASCB+154                                                 06385000
ASCBFMCT EQU   ASCB+152                                                 06386000
ASCBOUXB EQU   ASCB+148                                                 06387000
ASCBOUCB EQU   ASCB+144                                                 06388000
ASCBMECB EQU   ASCB+140                                                 06389000
ASCBQECB EQU   ASCB+136                                                 06390000
ASCBLSQH EQU   ASCBLKGP+4                                               06391000
ASCBLOCK EQU   ASCBLKGP                                                 06392000
ASCBTCBS EQU   ASCB+124                                                 06393000
ASCBNVSC EQU   ASCB+122                                                 06394000
ASCBVSC  EQU   ASCB+120                                                 06395000
ASCBSRBS EQU   ASCB+118                                                 06396000
ASCBSSRB EQU   ASCB+116                                                 06397000
ASCBRV06 EQU   ASCBFLG2                                                 06398000
ASCBRV05 EQU   ASCBFLG2                                                 06399000
ASCBRV04 EQU   ASCBFLG2                                                 06400000
ASCBSNQS EQU   ASCBFLG2                                                 06401000
ASCBS2S  EQU   ASCBFLG2                                                 06402000
ASCBCEXT EQU   ASCBFLG2                                                 06403000
ASCBPXMT EQU   ASCBFLG2                                                 06404000
ASCBXMPT EQU   ASCBFLG2                                                 06405000
ASCBRF07 EQU   ASCBDSP1                                                 06406000
ASCBRF06 EQU   ASCBDSP1                                                 06407000
ASCBRF05 EQU   ASCBDSP1                                                 06408000
ASCBRF04 EQU   ASCBDSP1                                                 06409000
ASCBRF03 EQU   ASCBDSP1                                                 06410000
ASCBRF02 EQU   ASCBDSP1                                                 06411000
ASCBFAIL EQU   ASCBDSP1                                                 06412000
ASCBNOQ  EQU   ASCBDSP1                                                 06413000
ASCBSWCT EQU   ASCB+112                                                 06414000
ASCBASXB EQU   ASCB+108                                                 06415000
ASCBTMCH EQU   ASCB+104                                                 06416000
ASCBNSWP EQU   ASCBFLG1                                                 06417000
ASCBTYP1 EQU   ASCBFLG1                                                 06418000
ASCBSTND EQU   ASCBFLG1                                                 06419000
ASCBABNT EQU   ASCBFLG1                                                 06420000
ASCBTERM EQU   ASCBFLG1                                                 06421000
ASCBS3S  EQU   ASCBFLG1                                                 06422000
ASCBCMSH EQU   ASCBFLG1                                                 06423000
ASCBTOFF EQU   ASCBFLG1                                                 06424000
ASCBRF01 EQU   ASCBRCTF                                                 06425000
ASCBTMLW EQU   ASCBRCTF                                                 06426000
ASCBOUT  EQU   ASCBRCTF                                                 06427000
ASCBWAIT EQU   ASCBRCTF                                                 06428000
ASCBRV08 EQU   ASCBRCTF                                                 06429000
ASCBFQU  EQU   ASCBRCTF                                                 06430000
ASCBFRS  EQU   ASCBRCTF                                                 06431000
ASCBTMNO EQU   ASCBRCTF                                                 06432000
ASCBAFFN EQU   ASCBFW1                                                  06433000
ASCBDUMP EQU   ASCB+96                                                  06434000
ASCBRV44 EQU   ASCB+92                                                  06435000
ASCBUBET EQU   ASCB+88                                                  06436000
ASCBECB  EQU   ASCB+84                                                  06437000
ASCBJSTL EQU   ASCB+80                                                  06438000
ASCBEWST EQU   ASCB+72                                                  06439000
ASCBEJST EQU   ASCB+64                                                  06440000
ASCBTSB  EQU   ASCB+60                                                  06441000
ASCBCSCB EQU   ASCB+56                                                  06442000
ASCBRSM  EQU   ASCB+52                                                  06443000
ASCBLDA  EQU   ASCB+48                                                  06444000
ASCBSTOR EQU   ASCB+44                                                  06445000
ASCBDP   EQU   ASCB+43                                                  06446000
ASCBRV07 EQU   ASCB+42                                                  06447000
ASCBIOSM EQU   ASCB+40                                                  06448000
ASCBSEQN EQU   ASCB+38                                                  06449000
ASCBASID EQU   ASCB+36                                                  06450000
ASCBCPUS EQU   ASCB+32                                                  06451000
ASCBSPL  EQU   ASCB+28                                                  06452000
ASCBIOSP EQU   ASCB+24                                                  06453000
ASCBSYNC EQU   ASCBSUPC+4                                               06454000
ASCBSVRB EQU   ASCBSUPC                                                 06455000
ASCBCMSF EQU   ASCB+12                                                  06456000
ASCBBWDP EQU   ASCB+8                                                   06457000
ASCBFWDP EQU   ASCB+4                                                   06458000
ASCBASCB EQU   ASCB                                                     06459000
ASCBEGIN EQU   ASCB                                                     06460000
CHARSV16 EQU   CHSHORT+100                                              06461000
CHARSV15 EQU   CHSHORT+96                                               06462000
CHJSCBVS EQU   CHSHORT+92                                               06463000
CHUSCVS  EQU   CHSHORT+88                                               06464000
@NM00016 EQU   CHSHORT+84                                               06465000
@NM00015 EQU   CHSHORT+80                                               06466000
CHSQA    EQU   CHSHORT+44                                               06467000
CHQPA    EQU   CHSHORT+8                                                06468000
CHJCL    EQU   CHSHORT+4                                                06469000
CHSPC    EQU   CHSHORT                                                  06470000
CHSPB    EQU   CHSTEP+4                                                 06471000
CHTCB    EQU   CHSTEP+1                                                 06472000
CHARSV23 EQU   CHSWT                                                    06473000
CHARSV22 EQU   CHSWT                                                    06474000
CHARSV21 EQU   CHSWT                                                    06475000
CHAC     EQU   CHSWT                                                    06476000
CHPSF    EQU   CHSWT                                                    06477000
CHPSD    EQU   CHSWT                                                    06478000
CHJCT    EQU   CHSWT                                                    06479000
CHARSV20 EQU   CHSWT                                                    06480000
CHCECB   EQU   CHASM+20                                                 06481000
CHECB    EQU   CHASM+16                                                 06482000
CHRGNAD  EQU   CHASM+12                                                 06483000
CHARSV18 EQU   CHRGNSZ+1                                                06484000
CHRPRTY  EQU   CHRGNSZ                                                  06485000
@NM00014 EQU   CHCIBP                                                   06486000
CHEND    EQU   CHCIBP                                                   06487000
CHECBP   EQU   CHASM                                                    06488000
CHDER    EQU   CHPROCSN+4                                               06489000
CHARSV10 EQU   CHACT1                                                   06490000
CHARSV09 EQU   CHACT1                                                   06491000
CHARSV08 EQU   CHACT1                                                   06492000
CHARSV07 EQU   CHACT1                                                   06493000
CHARSV06 EQU   CHACT1                                                   06494000
CHARSV05 EQU   CHACT1                                                   06495000
CHARSV04 EQU   CHACT1                                                   06496000
CHRDWTR  EQU   CHACT1                                                   06497000
CHARSV30 EQU   CHPROCSN+2                                               06498000
CHQID    EQU   CHPROCSN                                                 06499000
CHASID   EQU   CHTJID                                                   06500000
CHUCMP   EQU   CHAIN+29                                                 06501000
CHTRKID  EQU   CHPKE                                                    06502000
CHCIBCTR EQU   CHAIN+27                                                 06503000
CHUNIT   EQU   CHAIN+24                                                 06504000
CHCLS    EQU   CHAIN+16                                                 06505000
CHPCOI   EQU   CHPARM                                                   06506000
CHIFY    EQU   CHACT                                                    06507000
CHAIFX   EQU   CHACT                                                    06508000
CHCLD    EQU   CHACT                                                    06509000
CHCL     EQU   CHACT                                                    06510000
CHDSI    EQU   CHACT                                                    06511000
CHDISC   EQU   CHACT                                                    06512000
CHTERM   EQU   CHACT                                                    06513000
CHSWAP   EQU   CHACT                                                    06514000
CHABTERM EQU   CHSTS                                                    06515000
CHFC     EQU   CHSTS                                                    06516000
CHDL     EQU   CHSTS                                                    06517000
CHAD     EQU   CHSTS                                                    06518000
CHQSPC   EQU   CHSTS                                                    06519000
CHSOUT   EQU   CHSTS                                                    06520000
CHSYS    EQU   CHSTS                                                    06521000
CHAP     EQU   CHSTS                                                    06522000
CHSZE    EQU   CHFLG+1                                                  06523000
CHVCD    EQU   CHFLG                                                    06524000
CHPTR    EQU   CHAIN                                                    06525000
S99TUPRM EQU   S99TUFLD+2                                               06526000
S99TUPND EQU   S99TUP                                                   06527000
S99FLG24 EQU   S99FLAG2+3                                               06528000
S99FLG23 EQU   S99FLAG2+2                                               06529000
S99PCINT EQU   S99FLG22                                                 06530000
S99UDEVT EQU   S99FLG22                                                 06531000
S99MOUNT EQU   S99FLG21                                                 06532000
S99CATLG EQU   S99FLG21                                                 06533000
S99TIONQ EQU   S99FLG21                                                 06534000
S99OFFLN EQU   S99FLG21                                                 06535000
S99WTUNT EQU   S99FLG21                                                 06536000
S99NORES EQU   S99FLG21                                                 06537000
S99WTDSN EQU   S99FLG21                                                 06538000
S99WTVOL EQU   S99FLG21                                                 06539000
S99FLG12 EQU   S99FLAG1+1                                               06540000
S99JBSYS EQU   S99FLG11                                                 06541000
S99NOMNT EQU   S99FLG11                                                 06542000
S99NOCNV EQU   S99FLG11                                                 06543000
S99ONCNV EQU   S99FLG11                                                 06544000
@NM00005 EQU   DRSTR                                                    06545000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      06546000
@RF00214 EQU   @RC00211                                                 06547000
@RC00241 EQU   @RC00236                                                 06548000
@RC00239 EQU   @RC00236                                                 06549000
@RC00200 EQU   @RC00196                                                 06550000
@RC00517 EQU   @RC00516                                                 06551000
@RC00530 EQU   @RC00526                                                 06552000
@RC00718 EQU   @RC00717                                                 06553000
@RC00792 EQU   @RC00777                                                 06554000
@RC00860 EQU   @RC00847                                                 06555000
@RC00435 EQU   @RC00431                                                 06556000
@RF01099 EQU   @EL00003                                                 06557000
@RC01111 EQU   @EL00005                                                 06558000
@RC01248 EQU   @RC01242                                                 06559000
@RC00256 EQU   @RC00200                                                 06560000
@RC00518 EQU   @RC00517                                                 06561000
@RC01113 EQU   @RC01111                                                 06562000
@RC00257 EQU   @RC00256                                                 06563000
@ENDDATA EQU   *                                                        06564000
         END   IGTD80,(C'PLS2354',0701,77230)                           06565000
