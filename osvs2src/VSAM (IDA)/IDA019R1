         TITLE 'IDA019R1 VALIDATE AND DECODE                           *00001000
                        '                                               00002000
IDA019R1 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019R1  78.209'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@11                                         0001 00013000
*   R15SAVE=ZERO;                   /* NO ERRORS YET                 */ 00014000
         SLR   @10,@10                                             0174 00015000
         ST    @10,R15SAVE(,R13)                                   0174 00016000
*   RAMB=AMBLDTA;                   /* SET AMB REG                   */ 00017000
         L     @10,RPLDACB(,RRPL)                                  0175 00018000
         L     @10,ACBAMBL(,@10)                                   0175 00019000
         L     RAMB,AMBLDTA(,@10)                                  0175 00020000
*   GEN(LA RRPL,0(RRPL));           /* CLEAR HI ORDER BYTE   @ZA14827*/ 00021000
         LA RRPL,0(RRPL)                                                00022000
*/* FIRST CHECK FOR GET OR PUT.  IF EITHER, GO TO GET/PUT ROUTINE.   */ 00023000
*/* OTHERWISE, MASK OFF REGISTER ZERO AND GO THROUGH BRANCH TABLE.   */ 00024000
*                                                                  0177 00025000
*   IF RWORK0<=RPLPUT THEN          /* GET OR PUT?           @X04SVMR*/ 00026000
         CL    RWORK0,@CF00053                                     0177 00027000
         BNH   @RT00177                                            0177 00028000
*     GO TO PUT;                    /* YES, PROCESS.         @X04SVMR*/ 00029000
*   ELSE                            /* NOT GET OR PUT        @0X4SVMR*/ 00030000
*     DO;                                                          0179 00031000
*       RPARM1=RWORK0;              /* SAVE REG 0            @X04SVMR*/ 00032000
         LR    RPARM1,RWORK0                                       0180 00033000
*       RWORK0=RWORK0&ANDCON;       /* MASK 3 HIGH BYTES     @X04SVMR*/ 00034000
         N     RWORK0,@CF01256                                     0181 00035000
*       DO;                         /* CASE(RWORK0)NAMES(PUT,CHECK,PO   00036000
*                                      INT,ENDREQ,ERASE,VERIFY,INVALI   00037000
*                                      D,PFMTD,PFMTI,FRCIO,GETIX,PUTI   00038000
*                                      X,SCHBFR,MRKBFR,WRTBFR,INVALID   00039000
*                                      ,INVALID,INVALID,TERMRPL)     */ 00040000
*         DCL                                                      0183 00041000
*           CL0001@ LABEL BASED(CP0001@(RWORK0)) VALUERANGE(PUT,CHECK,  00042000
*               POINT,ENDREQ,ERASE,VERIFY,INVALID,PFMTD,PFMTI,FRCIO,    00043000
*               GETIX,PUTIX,SCHBFR,MRKBFR,WRTBFR,INVALID,INVALID,  0183 00044000
*               INVALID,TERMRPL);   /* BRANCH TARGET                 */ 00045000
*         DCL                                                      0184 00046000
*           CP0001@(19) PTR(31) INIT(ADDR(PUT),ADDR(CHECK),ADDR(POINT), 00047000
*               ADDR(ENDREQ),ADDR(ERASE),ADDR(VERIFY),ADDR(INVALID),    00048000
*               ADDR(PFMTD),ADDR(PFMTI),ADDR(FRCIO),ADDR(GETIX),ADDR(   00049000
*               PUTIX),ADDR(SCHBFR),ADDR(MRKBFR),ADDR(WRTBFR),ADDR(     00050000
*               INVALID),ADDR(INVALID),ADDR(INVALID),ADDR(TERMRPL));    00051000
*         GOTO CL0001@;             /* BRANCH TO SELECTED CASE       */ 00052000
         LR    @10,RWORK0                                          0185 00053000
         SLL   @10,2                                               0185 00054000
         L     @10,CP0001@-4(@10)                                  0185 00055000
         BR    @10                                                 0185 00056000
*CHECK:                                                            0186 00057000
*         DO;                       /* SUBCASE                       */ 00058000
*                                                                  0186 00059000
CHECK    DS    0H                                                  0187 00060000
*           /*********************************************************/ 00061000
*           /*                                                       */ 00062000
*           /* DO WORK FOR A CHECK                                   */ 00063000
*           /*                                                       */ 00064000
*           /*********************************************************/ 00065000
*                                                                  0187 00066000
*           IF(RPLERREG='08'X&      /* SEE IF NO PLH                 */ 00067000
*               RPLERRCD=RPLNOPLH)| /* WAS FOUND ON PRIOR REQ        */ 00068000
*               RPLACTIV=CZERO      /* OR IF RPL NOT ACTIVE.         */ 00069000
*             THEN                  /* IF SO, RETURN.        @X04SVMR*/ 00070000
         CLI   RPLERREG(RRPL),8                                    0187 00071000
         BNE   @GL00001                                            0187 00072000
         CLI   RPLERRCD(RRPL),64                                   0187 00073000
         BE    @RT00187                                            0187 00074000
@GL00001 CLI   RPLACTIV(RRPL),B'00000000'                          0187 00075000
         BNE   @RF00187                                            0187 00076000
@RT00187 DS    0H                                                  0188 00077000
*             R15SAVE=RPLERREG;                                    0188 00078000
         SLR   @10,@10                                             0188 00079000
         IC    @10,RPLERREG(,RRPL)                                 0188 00080000
         ST    @10,R15SAVE(,R13)                                   0188 00081000
*           ELSE                    /* HERE IF PRIOR OK      @X04SVMR*/ 00082000
*             DO;                                                  0189 00083000
         B     @RC00187                                            0189 00084000
@RF00187 DS    0H                                                  0190 00085000
*               CALL FINDOPLH;      /* GO LOCATE PLH         @X04SVMR*/ 00086000
         BAL   @14,FINDOPLH                                        0190 00087000
*               RFY                                                0191 00088000
*                 R15 RSTD;         /* GET RETURN CODE               */ 00089000
*               IF R15=ZERO THEN    /* IF NO ERROR,          @X04SVMR*/ 00090000
         LTR   R15,R15                                             0192 00091000
         BNZ   @RF00192                                            0192 00092000
*                 DO;               /* PROCESS CHECK         @X04SVMR*/ 00093000
*                   RFY                                            0194 00094000
*                     R15 UNRSTD;   /* DROP RETURN CODE              */ 00095000
*                   CALL R1CHECK;   /* GO PERFORM CHECK RTN          */ 00096000
         BAL   @14,R1CHECK                                         0195 00097000
*                 END;              /* END, PLH FOUND        @X04SVMR*/ 00098000
*               ELSE                /* NO PLH FOUND          @ZA14801*/ 00099000
*                 R15SAVE='04'X;    /* CNTL BLOCKS BAD       @ZA14801*/ 00100000
         B     @RC00192                                            0197 00101000
@RF00192 LA    @10,4                                               0197 00102000
         ST    @10,R15SAVE(,R13)                                   0197 00103000
*             END;                  /* END PRIOR OK          @X04SVMR*/ 00104000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 00105000
         B     CE0001@                                             0199 00106000
*         END CHECK;                /* END OF SUBCASE                */ 00107000
*ENDREQ:                                                           0201 00108000
*         DO;                       /* SUBCASE                       */ 00109000
ENDREQ   DS    0H                                                  0202 00110000
*           IF RPLERREG='08'X&      /* SEE IF NO PLH         @X04SVMR*/ 00111000
*               RPLERRCD=RPLNOPLH THEN/* FOUND BEFORE        @X04SVMR*/ 00112000
         CLI   RPLERREG(RRPL),8                                    0202 00113000
         BNE   @RF00202                                            0202 00114000
         CLI   RPLERRCD(RRPL),64                                   0202 00115000
         BNE   @RF00202                                            0202 00116000
*             R15SAVE=RPLERREG;     /* SET USER R15          @X04SVMR*/ 00117000
         SLR   @10,@10                                             0203 00118000
         IC    @10,RPLERREG(,RRPL)                                 0203 00119000
         ST    @10,R15SAVE(,R13)                                   0203 00120000
*           ELSE                    /* HERE IF OK            @X04SVMR*/ 00121000
*             DO;                                                  0204 00122000
         B     @RC00202                                            0204 00123000
@RF00202 DS    0H                                                  0205 00124000
*               CALL FINDOPLH;      /* GO LOCATE PLH         @X04SVMR*/ 00125000
         BAL   @14,FINDOPLH                                        0205 00126000
*               RFY                                                0206 00127000
*                 R15 RSTD;         /* GET RETURN CODE               */ 00128000
*               IF R15=ZERO THEN    /* IF NO ERROR,          @X04SVMR*/ 00129000
         LTR   R15,R15                                             0207 00130000
         BNZ   @RF00207                                            0207 00131000
*                 DO;               /* PROCESS ENDREQ        @X04SVMR*/ 00132000
*                   RFY                                            0209 00133000
*                     R15 UNRSTD;   /* DROP RETURN CODE              */ 00134000
*                   IF AMBLPATH=ON THEN/* IF PATH ACB, CALL  @X04SVMR*/ 00135000
         L     @10,RPLDACB(,RRPL)                                  0210 00136000
         L     @10,ACBAMBL(,@10)                                   0210 00137000
         TM    AMBLPATH(@10),B'10000000'                           0210 00138000
         BNO   @RF00210                                            0210 00139000
*I05:                                                              0211 00140000
*                     DO;           /* IDACALL(IDA019RX)             */ 00141000
I05      DS    0H                                                  0212 00142000
*                       CALL IDA019RX;/* EXIT TO IDA019RX            */ 00143000
         L     @15,@CV01241                                        0212 00144000
         BALR  @14,@15                                             0212 00145000
*                       GEN(BALR @11,0);/* LOAD ADDR OF REENTRY      */ 00146000
         BALR @11,0                                                     00147000
*                       GEN(USING *,@11);/* ESTABLISH ADDRESSING     */ 00148000
         USING *,@11                                                    00149000
*                       GEN(L     @11,=A(@PSTART));/* RELOAD BASE    */ 00150000
         L     @11,=A(@PSTART)                                          00151000
*                       GEN(USING @PSTART,@11);/* ESTABLISH        0216 00152000
*                                      ADDRESSING                    */ 00153000
         USING @PSTART,@11                                              00154000
*                     END I05;      /* PATH PROCESSOR.       @X04SVMR*/ 00155000
*                   ELSE            /* NOT PATH,             @X04SVMR*/ 00156000
*I06:                                                              0218 00157000
*                     DO;           /* IDACALL(IDAENDRQ)             */ 00158000
         B     @RC00210                                            0218 00159000
@RF00210 DS    0H                                                  0218 00160000
I06      DS    0H                                                  0219 00161000
*                       CALL IDAENDRQ;/* EXIT TO IDAENDRQ            */ 00162000
         L     @15,@CV01238                                        0219 00163000
         BALR  @14,@15                                             0219 00164000
*                       GEN(BALR @11,0);/* LOAD ADDR OF REENTRY      */ 00165000
         BALR @11,0                                                     00166000
*                       GEN(USING *,@11);/* ESTABLISH ADDRESSING     */ 00167000
         USING *,@11                                                    00168000
*                       GEN(L     @11,=A(@PSTART));/* RELOAD BASE    */ 00169000
         L     @11,=A(@PSTART)                                          00170000
*                       GEN(USING @PSTART,@11);/* ESTABLISH        0223 00171000
*                                      ADDRESSING                    */ 00172000
         USING @PSTART,@11                                              00173000
*                     END I06;      /* PERFORM ENDREQ        @X04SVMR*/ 00174000
*                   IF ACBIOSFG=OFF THEN/* IF NOT CLOSE,     @ZA14801*/ 00175000
@RC00210 L     @10,RPLDACB(,RRPL)                                  0225 00176000
         TM    ACBIOSFG(@10),B'00000001'                           0225 00177000
         BNZ   @RF00225                                            0225 00178000
*                     RPLFDBWD=ZERO;/* CLEAR PRIOR ERROR     @ZA14801*/ 00179000
         SLR   @10,@10                                             0226 00180000
         ST    @10,RPLFDBWD(,RRPL)                                 0226 00181000
*                 END;              /* END, PLH FOUND        @X04SVMR*/ 00182000
*             END;                  /* END, NO PRIOR ERR     @X04SVMR*/ 00183000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 00184000
         B     CE0001@                                             0229 00185000
*         END ENDREQ;               /* END OF SUBCASE                */ 00186000
*TERMRPL:                                                          0231 00187000
*         DO;                       /* SUBCASE TERMRPL       @ZA32757*/ 00188000
TERMRPL  DS    0H                                                  0232 00189000
*/********************************************************************/ 00190000
*/*  SUBCASE FOR TERMRPL                                             */ 00191000
*/*  INPUT - RPL ADDRESS IN REGISTER 1.                              */ 00192000
*/*        - DATA AMB ADDRESS IN REGISTER 3.                         */ 00193000
*/*  OUTPUT - R15, RPLFDBWD.                                         */ 00194000
*/********************************************************************/ 00195000
*                                                                  0232 00196000
*           CALL FINDOPLH;          /* VALIDITY CHECK PLH    @ZA32757*/ 00197000
         BAL   @14,FINDOPLH                                        0232 00198000
*           RFY                                                    0233 00199000
*             R15 RSTD;             /* RESTRICT REGISTER     @ZA32757*/ 00200000
*           IF R15=ZERO THEN        /* PLH VALID?            @ZA32757*/ 00201000
         LTR   R15,R15                                             0234 00202000
         BNZ   @RF00234                                            0234 00203000
*             DO;                   /* YES                   @ZA32757*/ 00204000
*               RFY                                                0236 00205000
*                 R15 UNRSTD;       /* UNRESTRICT REG.       @ZA32757*/ 00206000
*I09:                                                              0237 00207000
*               DO;                 /* IDACALL(IDA019SN)             */ 00208000
I09      DS    0H                                                  0238 00209000
*                 CALL IDA019SN;    /* EXIT TO IDA019SN              */ 00210000
         L     @15,@CV01253                                        0238 00211000
         BALR  @14,@15                                             0238 00212000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00213000
         BALR @11,0                                                     00214000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00215000
         USING *,@11                                                    00216000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00217000
         L     @11,=A(@PSTART)                                          00218000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00219000
         USING @PSTART,@11                                              00220000
*               END I09;            /* CALL TERMINATE RPL    @ZA32757*/ 00221000
*               R15SAVE=RPLERREG;   /* SET R15 = RPLERREG    @ZA32757*/ 00222000
         SLR   @10,@10                                             0244 00223000
         IC    @10,RPLERREG(,RRPL)                                 0244 00224000
         ST    @10,R15SAVE(,R13)                                   0244 00225000
*             END;                  /* END OF PLH VALID      @ZA32757*/ 00226000
*           ELSE                                                   0246 00227000
*             R15SAVE='04'X;        /* ELSE CONTROL BLOCK ERROR, SET    00228000
*                                      FEEDBACK CODE         @ZA32757*/ 00229000
         B     @RC00234                                            0246 00230000
@RF00234 LA    @10,4                                               0246 00231000
         ST    @10,R15SAVE(,R13)                                   0246 00232000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 00233000
         B     CE0001@                                             0247 00234000
*         END TERMRPL;              /* END OF SUBCASE                */ 00235000
*PUT:                                                              0249 00236000
*POINT:                                                            0249 00237000
*ERASE:                                                            0249 00238000
*VERIFY:                                                           0249 00239000
*INVALID:                                                          0249 00240000
*PFMTD:                                                            0249 00241000
*PFMTI:                                                            0249 00242000
*FRCIO:                                                            0249 00243000
*GETIX:                                                            0249 00244000
*PUTIX:                                                            0249 00245000
*         DO;                       /* SUBCASE                       */ 00246000
PUT      DS    0H                                                  0249 00247000
POINT    DS    0H                                                  0249 00248000
ERASE    DS    0H                                                  0249 00249000
VERIFY   DS    0H                                                  0249 00250000
INVALID  DS    0H                                                  0249 00251000
PFMTD    DS    0H                                                  0249 00252000
PFMTI    DS    0H                                                  0249 00253000
FRCIO    DS    0H                                                  0249 00254000
GETIX    DS    0H                                                  0249 00255000
PUTIX    DS    0H                                                  0250 00256000
*GET:                                                              0250 00257000
*                                                                  0250 00258000
*/*  PROCESS GET, PUT, POINT, ETC.                           @X04SVMR*/ 00259000
*                                                                  0250 00260000
*           RFY                                                    0250 00261000
*             RWORK1 RSTD;          /* GET WORK REG          @X04SVMR*/ 00262000
GET      DS    0H                                                  0251 00263000
*           RWORK1=RRPL;            /* SAVE FIRST RPL ADDR           */ 00264000
         LR    RWORK1,RRPL                                         0251 00265000
*           DO UNTIL RRPL=ZERO;     /* SET UP ALL RPLS       @X04SVMR*/ 00266000
@DL00252 DS    0H                                                  0253 00267000
*/* SEE IF RPL STILL ACTIVE AND IF SO ERROR                          */ 00268000
*                                                                  0253 00269000
*             TS(RPLACTIV);         /* SEE IF RPL IN USE             */ 00270000
         TS    RPLACTIV(RRPL)                                      0253 00271000
*             BC(8,SETCODE);        /* IF NOT,MAKE ACTIVE & BR       */ 00272000
         BC    8,SETCODE                                           0254 00273000
*INVRPL:                                                           0255 00274000
*             RPARM1=RRPL;          /* LAST RPL CHAIN PTR            */ 00275000
INVRPL   LR    RPARM1,RRPL                                         0255 00276000
*             RRPL=RWORK1;          /* FIRST RPL TO FREE             */ 00277000
         LR    RRPL,RWORK1                                         0256 00278000
*             CALL R1TERM;          /* RELEASE RPLS JUST GOT         */ 00279000
         BAL   @14,R1TERM                                          0257 00280000
*             RETURN CODE('04'X);   /* RETURN TO USER                */ 00281000
         LA    @15,4                                               0258 00282000
         L     @14,12(,@13)                                        0258 00283000
         LM    @00,@12,20(@13)                                     0258 00284000
         BR    @14                                                 0258 00285000
*SETCODE:                                                          0259 00286000
*             IF RWORK1->RPLDACB^=RPLDACB/* IF DIFFERENT ACB,        */ 00287000
*               THEN                /* SET ERROR CONDITION.          */ 00288000
SETCODE  CLC   RPLDACB(4,RWORK1),RPLDACB(RRPL)                     0259 00289000
         BNE   @RT00259                                            0259 00290000
*               GO TO INVRPL;       /* ERROR EXIT                    */ 00291000
*             RPLREQ=RWORK0;        /* SET REQUEST CODE              */ 00292000
         STC   RWORK0,RPLREQ(,RRPL)                                0261 00293000
*/* CHECK FOR ECB IN RPL                                             */ 00294000
*                                                                  0262 00295000
*             IF RPLECBSW=ON        /* IS IT IN RPL          @X04SVMR*/ 00296000
*               THEN                /* NO                    @X04SVMR*/ 00297000
         TM    RPLECBSW(RRPL),B'00000001'                          0262 00298000
         BNO   @RF00262                                            0262 00299000
*               USERECB=ZERO;       /* CLEAR ECB             @X04SVMR*/ 00300000
         L     @10,RPLECBPT(,RRPL)                                 0263 00301000
         SLR   @15,@15                                             0263 00302000
         STCM  @15,15,USERECB(@10)                                 0263 00303000
*             ELSE                  /* IN RPL                @X04SVMR*/ 00304000
*               RPLECB=ZERO;        /* CLEAR ECB             @X04SVMR*/ 00305000
         B     @RC00262                                            0264 00306000
@RF00262 SLR   @10,@10                                             0264 00307000
         ST    @10,RPLECB(,RRPL)                                   0264 00308000
*             RPLFDBWD=ZERO;        /* CLEAR ERROR FIELD     @X04SVMR*/ 00309000
@RC00262 SLR   @10,@10                                             0265 00310000
         ST    @10,RPLFDBWD(,RRPL)                                 0265 00311000
*             IF RWORK1->RPLASY=ON  /* SEE IF MASTER                 */ 00312000
*               THEN                /* RPL IS ASYNCH                 */ 00313000
         TM    RPLASY(RWORK1),B'00001000'                          0266 00314000
         BNO   @RF00266                                            0266 00315000
*               RPLASY=ON;                                         0267 00316000
         OI    RPLASY(RRPL),B'00001000'                            0267 00317000
*             ELSE                  /* YES, PROPAGATE CODE           */ 00318000
*               RPLASY=OFF;                                        0268 00319000
         B     @RC00266                                            0268 00320000
@RF00266 NI    RPLASY(RRPL),B'11110111'                            0268 00321000
*             RRPL=RPLCHAIN;        /* GET NEXT RPL IN CHAIN         */ 00322000
@RC00266 L     RRPL,RPLCHAIN(,RRPL)                                0269 00323000
*           END;                    /* END, CHAINED RPLS             */ 00324000
@DE00252 LTR   RRPL,RRPL                                           0270 00325000
         BNZ   @DL00252                                            0270 00326000
*           RRPL=RWORK1;            /* RESTORE 1ST RPL PTR           */ 00327000
         LR    RRPL,RWORK1                                         0271 00328000
*           CALL FINDPLH;           /* LOCATE PLACEHOLDER            */ 00329000
         BAL   @14,FINDPLH                                         0272 00330000
*           RFY                                                    0273 00331000
*             R15 RSTD;             /* GET RETURN CODE               */ 00332000
*           IF R15^=ZERO            /* IF ANY ERROR,                 */ 00333000
*             THEN                  /* RELEASE ALL RPLS IN           */ 00334000
         LTR   R15,R15                                             0274 00335000
         BZ    @RF00274                                            0274 00336000
*             DO;                   /* THE CHAIN.                    */ 00337000
*NOPLHFND:                                                         0276 00338000
*               RPARM1=ZERO;        /* SET FREE ALL INDICATOR        */ 00339000
NOPLHFND SLR   RPARM1,RPARM1                                       0276 00340000
*               IF RPLASY=OFF THEN  /* IF SYNCHRONOUS REQUEST        */ 00341000
         TM    RPLASY(RRPL),B'00001000'                            0277 00342000
         BNZ   @RF00277                                            0277 00343000
*                 R15SAVE=R15;      /* SET RETURN CODE               */ 00344000
         ST    R15,R15SAVE(,R13)                                   0278 00345000
*               CALL R1TERM;        /* FREE RPL CHAIN                */ 00346000
@RF00277 BAL   @14,R1TERM                                          0279 00347000
*               RETURN;             /* SYNCHRONOUS--LOGIC. ERR       */ 00348000
@EL00001 DS    0H                                                  0280 00349000
@EF00001 DS    0H                                                  0280 00350000
@ER00001 LM    @14,@12,12(@13)                                     0280 00351000
         BR    @14                                                 0280 00352000
*             END;                  /* END OF RPL RELEASE            */ 00353000
*           RFY                                                    0282 00354000
*             R15 UNRSTD;           /* DROP RETURN CODE              */ 00355000
@RF00274 DS    0H                                                  0283 00356000
*           RFY                                                    0283 00357000
*             RWORK1 UNRSTD;        /* DROP RPL SAVE REG     @X04SVMR*/ 00358000
*           IF AMBUBF=ON&           /* USER BUFFERING        @ZA14798*/ 00359000
*               (RPLADR=ON|RPLKEY=ON) THEN/* AND NOT CNV     @ZA14798*/ 00360000
         TM    AMBUBF(RAMB),B'00000100'                            0284 00361000
         BNO   @RF00284                                            0284 00362000
         TM    RPLADR(RRPL),B'11000000'                            0284 00363000
         BZ    @RF00284                                            0284 00364000
*             DO;                   /*                       @ZA14798*/ 00365000
*               RPLERRCD=RPLINVP;   /* SET INV. PRMS         @ZA14798*/ 00366000
         MVI   RPLERRCD(RRPL),X'68'                                0286 00367000
*               GO TO ERRORX;       /* GO SET LOG.ERR        @ZA14798*/ 00368000
         B     ERRORX                                              0287 00369000
*             END;                  /*                       @ZA14798*/ 00370000
*           RESPECIFY                                              0289 00371000
*             RWORK0 UNRESTRICTED;  /* DROP REGISTER                 */ 00372000
@RF00284 DS    0H                                                  0290 00373000
*                                                                  0290 00374000
*/*  PROCESS THE RPLS IN THE CHAIN UNTIL ALL ARE DONE OR AN ENDREQ   */ 00375000
*/*       IS ISSUED                                                  */ 00376000
*                                                                  0290 00377000
*           DO UNTIL RRPL=ZERO;     /* PROCESS RPLS          @X04SVMR*/ 00378000
@DL00290 DS    0H                                                  0291 00379000
*             RPARM1=ACBAMBL;       /* POINT TO AMBL                 */ 00380000
         L     @10,RPLDACB(,RRPL)                                  0291 00381000
         L     RPARM1,ACBAMBL(,@10)                                0291 00382000
*             RFY                                                  0292 00383000
*               IDAAMBL BASED(RPARM1);/* RESET AMBL BASE             */ 00384000
*             PLHCRPL=RRPL;         /* SET CURRENT RPL               */ 00385000
         ST    RRPL,PLHCRPL(,RPLH)                                 0293 00386000
*             RPLPLHPT=RPLH;        /* SAVE PTR TO PLH@0X02679       */ 00387000
         ST    RPLH,RPLPLHPT(,RRPL)                                0294 00388000
*             IF RPLWAITX=ON&       /* IF WAITX OPTION       @ZA07549*/ 00389000
*                 AMBGSR=OFF&       /* AND NOT GSR OR        @ZA07549*/ 00390000
*                 AMBLSR=OFF THEN   /* LSR OPTIONS           @ZA07549*/ 00391000
         TM    RPLWAITX(RRPL),B'00000100'                          0295 00392000
         BNO   @RF00295                                            0295 00393000
         TM    AMBGSR(RAMB),B'01100000'                            0295 00394000
         BZ    @RT00295                                            0295 00395000
*               GOTO INVACC;        /* EXIT WITH ERROR       @ZA07549*/ 00396000
*/*  IF THE REQUEST IS THROUGH A PATH AMBL CALL THE PATH PROCESSOR   */ 00397000
*/*  FOR ALTERNATE INDEX ACCESS.                             @X04SVMR*/ 00398000
*                                                                  0297 00399000
*             IF AMBLPATH=ON THEN   /* TEST FOR PATH         @X04SVMR*/ 00400000
@RF00295 TM    AMBLPATH(RPARM1),B'10000000'                        0297 00401000
         BNO   @RF00297                                            0297 00402000
*               DO;                                                0298 00403000
*                 RFY                                              0299 00404000
*                   RWORK0 RSTD;    /* GET REQUEST CODE      @X04SVMR*/ 00405000
*                 RWORK0=RPLREQ;    /* SET REQ CODE REG      @X04SVMR*/ 00406000
         SLR   RWORK0,RWORK0                                       0300 00407000
         IC    RWORK0,RPLREQ(,RRPL)                                0300 00408000
*I12:                                                              0301 00409000
*                 DO;               /* IDACALL(IDA019RX)             */ 00410000
I12      DS    0H                                                  0302 00411000
*                   CALL IDA019RX;  /* EXIT TO IDA019RX              */ 00412000
         L     @15,@CV01241                                        0302 00413000
         BALR  @14,@15                                             0302 00414000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 00415000
         BALR @11,0                                                     00416000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 00417000
         USING *,@11                                                    00418000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 00419000
         L     @11,=A(@PSTART)                                          00420000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 00421000
         USING @PSTART,@11                                              00422000
*                 END I12;          /* CALL PATH RTN         @X04SVMR*/ 00423000
*                 RFY                                              0308 00424000
*                   RWORK0 UNRSTD;  /* DROP REQUEST REG      @X04SVMR*/ 00425000
*               END;                /* END OF PATH CODE      @X04SVMR*/ 00426000
*             ELSE                  /* HERE IF NOT PATH      @X04SVMR*/ 00427000
*/* CHECK FOR KEYED ACCESS                                           */ 00428000
*                                                                  0310 00429000
*               IF RPLKEY=ON        /* KEY PROCESSING                */ 00430000
*                 THEN              /* YES                           */ 00431000
         B     @RC00297                                            0310 00432000
@RF00297 TM    RPLKEY(RRPL),B'10000000'                            0310 00433000
         BNO   @RF00310                                            0310 00434000
*                 DO;                                              0311 00435000
*                                                                  0311 00436000
*                   /*************************************************/ 00437000
*                   /*                                               */ 00438000
*                   /* COME HERE FOR KEYED ACCESSING REQUESTS.       */ 00439000
*                   /*                                               */ 00440000
*                   /*************************************************/ 00441000
*                                                                  0312 00442000
*/*  MAKE SURE DATA SET IS KEYED AND ANY USER-SUPPLIED KEY LENGTH  0312 00443000
*        IS VALID                                                    */ 00444000
*                                                                  0312 00445000
*                   IF AMDDST='0'B| /* CHRONOLOGIC DATA SET          */ 00446000
*                       AMBLNUM=ONE /* OR PROCESSING AS DATA         */ 00447000
*                     THEN          /* YES INVALID COMBO             */ 00448000
         L     @10,AMBDSB(,RAMB)                                   0312 00449000
         TM    AMDDST(@10),B'10000000'                             0312 00450000
         BZ    @RT00312                                            0312 00451000
         CLC   AMBLNUM(2,RPARM1),@CH00053                          0312 00452000
         BNE   @RF00312                                            0312 00453000
@RT00312 DS    0H                                                  0313 00454000
*                     DO;                                          0313 00455000
*                                                                  0313 00456000
*                       /*********************************************/ 00457000
*                       /*                                           */ 00458000
*                       /* A KEYED REQUEST IS NOT AN ERROR IF IT IS  */ 00459000
*                       /* TO A RELATIVE RECORD DATA SET.    @X04SVMR*/ 00460000
*                       /*                                           */ 00461000
*                       /*********************************************/ 00462000
*                                                                  0314 00463000
*                       IF AMDRRDS=ON THEN/* SEE IF REL RCD DS     0314 00464000
*                                                            @X04SVMR*/ 00465000
         L     @10,AMBDSB(,RAMB)                                   0314 00466000
         TM    AMDRRDS(@10),B'00000010'                            0314 00467000
         BNO   @RF00314                                            0314 00468000
*I13:                                                              0315 00469000
*                         DO;       /* IDACALL(IDA019RR)             */ 00470000
I13      DS    0H                                                  0316 00471000
*                           CALL IDA019RR;/* EXIT TO IDA019RR        */ 00472000
         L     @15,@CV01240                                        0316 00473000
         BALR  @14,@15                                             0316 00474000
*                           GEN(BALR @11,0);/* LOAD ADDR OF REENTRY  */ 00475000
         BALR @11,0                                                     00476000
*                           GEN(USING *,@11);/* ESTABLISH ADDRESSING */ 00477000
         USING *,@11                                                    00478000
*                           GEN(L     @11,=A(@PSTART));/* RELOAD BASE*/ 00479000
         L     @11,=A(@PSTART)                                          00480000
*                           GEN(USING @PSTART,@11);/* ESTABLISH    0320 00481000
*                                      ADDRESSING                    */ 00482000
         USING @PSTART,@11                                              00483000
*                         END I13;  /* CALL RELATIVE RCD     @X04SVMR*/ 00484000
*                       ELSE        /* HERE IF NOT RRDS      @X04SVMR*/ 00485000
*                         DO;                                      0322 00486000
         B     @RC00314                                            0322 00487000
@RF00314 DS    0H                                                  0323 00488000
*                           RPLERRCD=RPLINKEY;/* SET INV KEY REQUEST */ 00489000
         MVI   RPLERRCD(RRPL),X'48'                                0323 00490000
*                           RPLERREG='08'X;/* SET LOGICAL ERROR      */ 00491000
         MVI   RPLERREG(RRPL),X'08'                                0324 00492000
*                         END;      /* END OF NON-RRDS       @X04SVMR*/ 00493000
*                     END;          /* END, CSDS PROCESSING          */ 00494000
*                   ELSE            /* HERE IF KSDS                  */ 00495000
*                     DO;                                          0327 00496000
         B     @RC00312                                            0327 00497000
@RF00312 DS    0H                                                  0328 00498000
*                       IF RPLGEN=ON&/* SEE IF GENERIC SEARCH        */ 00499000
*                           RPLREQ^=RPLPUT&/* PUT USES AMDKEYL     0328 00500000
*                                                            @ZA16103*/ 00501000
*                           ((RPLSEQ=OFF|/* AND IF NOT SEQ REQ       */ 00502000
*                           RPLREQ=RPLPOINT)&/* OR IF A POINT REQUEST*/ 00503000
*                           (RPLKEYL<=ZERO|/* IF NO KEYLENGTH SPECD  */ 00504000
*                           RPLKEYL>AMDKEYLN))/* OR IF IT EXCEEDS MAX*/ 00505000
*                         THEN      /* SET ERROR CODE                */ 00506000
         TM    RPLGEN(RRPL),B'00000010'                            0328 00507000
         BNO   @RF00328                                            0328 00508000
         CLI   RPLREQ(RRPL),1                                      0328 00509000
         BE    @RF00328                                            0328 00510000
         TM    RPLSEQ(RRPL),B'00100000'                            0328 00511000
         BZ    @GL00009                                            0328 00512000
         CLI   RPLREQ(RRPL),3                                      0328 00513000
         BNE   @RF00328                                            0328 00514000
@GL00009 LH    @10,RPLKEYL(,RRPL)                                  0328 00515000
         LTR   @10,@10                                             0328 00516000
         BNP   @RT00328                                            0328 00517000
         L     @05,AMBDSB(,RAMB)                                   0328 00518000
         CH    @10,AMDKEYLN(,@05)                                  0328 00519000
         BNH   @RF00328                                            0328 00520000
@RT00328 DS    0H                                                  0329 00521000
*                         DO;                                      0329 00522000
*                           RPLERREG='08'X;/* SET LOGICAL ERROR CODE */ 00523000
         MVI   RPLERREG(RRPL),X'08'                                0330 00524000
*                           RPLERRCD=RPLKEYLC;/* SET BAD KEYLENGTH   */ 00525000
         MVI   RPLERRCD(RRPL),X'70'                                0331 00526000
*                         END;      /* END INVALID KEY               */ 00527000
*                       ELSE        /* HERE IF KEY LENGTH OK         */ 00528000
*                         DO;       /* CALL KEYED DRIVER             */ 00529000
         B     @RC00328                                            0333 00530000
@RF00328 DS    0H                                                  0334 00531000
*I14:                                                              0334 00532000
*                           DO;     /* IDACALL(IDA019R4)             */ 00533000
I14      DS    0H                                                  0335 00534000
*                             CALL IDA019R4;/* EXIT TO IDA019R4      */ 00535000
         L     @15,@CV01248                                        0335 00536000
         BALR  @14,@15                                             0335 00537000
*                             GEN(BALR @11,0);/* LOAD ADDR OF REENTRY*/ 00538000
         BALR @11,0                                                     00539000
*                             GEN(USING *,@11);/* ESTABLISH        0337 00540000
*                                      ADDRESSING                    */ 00541000
         USING *,@11                                                    00542000
*                             GEN(L     @11,=A(@PSTART));/* RELOAD 0338 00543000
*                                      BASE                          */ 00544000
         L     @11,=A(@PSTART)                                          00545000
*                             GEN(USING @PSTART,@11);/* ESTABLISH  0339 00546000
*                                      ADDRESSING                    */ 00547000
         USING @PSTART,@11                                              00548000
*                           END I14;                               0340 00549000
*                         END;      /* KEYED REQUEST THRU            */ 00550000
*                     END;          /* END, KSDS ROUTINE             */ 00551000
*                 END;              /* END, KEYED PROCESSING         */ 00552000
*                                                                  0344 00553000
*/*   HERE IF IT IS NOT KEYED ACCESSING.                             */ 00554000
*                                                                  0344 00555000
*               ELSE                                               0344 00556000
*                 DO;                                              0344 00557000
         B     @RC00310                                            0344 00558000
@RF00310 DS    0H                                                  0345 00559000
*                   IF RPLSKP=ON THEN/* SKIP SEQUENTIAL VALID        */ 00560000
         TM    RPLSKP(RRPL),B'00010000'                            0345 00561000
         BO    @RT00345                                            0345 00562000
*                     GO TO INVACC; /* ONLY WITH KEYED REQ           */ 00563000
*                   IF RPLADD=ON    /* SEE IF ADDR REQ               */ 00564000
*                     THEN          /* YES, COME HERE                */ 00565000
         TM    RPLADD(RRPL),B'01000000'                            0347 00566000
         BNO   @RF00347                                            0347 00567000
*                     DO;           /* PROCESS ADDRESSED REQUESTS    */ 00568000
*/*  PROHIBIT ADDRESSED PUTS FOR INSERT FOR KEYED DATA SETS AND      */ 00569000
*/*   ERASES FOR NON-KEYED DATA SETS                                 */ 00570000
*                                                                  0349 00571000
*                       IF AMDDST='1'B/* IF DATA SET IS KEYED,       */ 00572000
*                         THEN      /* PUT INSERT NOT ALLOWED        */ 00573000
         L     @10,AMBDSB(,RAMB)                                   0349 00574000
         TM    AMDDST(@10),B'10000000'                             0349 00575000
         BNO   @RF00349                                            0349 00576000
*                         DO;                                      0350 00577000
*                           IF RPLREQ=RPLPUT&/* IF THIS IS A PUT     */ 00578000
*                               RPLUPD=OFF/* FOR INSERT--SET AN      */ 00579000
*                             THEN  /* ERROR CODE.                   */ 00580000
         CLI   RPLREQ(RRPL),1                                      0351 00581000
         BNE   @RF00351                                            0351 00582000
         TM    RPLUPD(RRPL),B'00000010'                            0351 00583000
         BNZ   @RF00351                                            0351 00584000
*                             DO;                                  0352 00585000
*                               RPLERRCD=RPLINADR;/* INVALID INSERT     00586000
*                                      TO KSDS                       */ 00587000
         MVI   RPLERRCD(RRPL),X'4C'                                0353 00588000
*                               GO TO ERRORX;/* TAKE ERROR EXIT.     */ 00589000
         B     ERRORX                                              0354 00590000
*                             END;  /* END OF PUT INSERT ERROR       */ 00591000
*                         END;      /* END OF KSDS CODE              */ 00592000
*                       ELSE        /* HERE IF NOT KSDS@X04SVMR      */ 00593000
*                         DO;                                      0357 00594000
*                                                                  0357 00595000
         B     @RC00349                                            0357 00596000
@RF00349 DS    0H                                                  0358 00597000
*                           /*****************************************/ 00598000
*                           /*                                       */ 00599000
*                           /* IF THIS IS A RELATIVE RECORD DATA SET */ 00600000
*                           /* A NON-KEYED REQUEST IS AN ERROR.      */ 00601000
*                           /*                               @X04SVMR*/ 00602000
*                           /*                                       */ 00603000
*                           /*****************************************/ 00604000
*                                                                  0358 00605000
*                           IF AMDRRDS=ON THEN/* IF AN RRDS, @X04SVMR*/ 00606000
         L     @10,AMBDSB(,RAMB)                                   0358 00607000
         TM    AMDRRDS(@10),B'00000010'                            0358 00608000
         BNO   @RF00358                                            0358 00609000
*                             DO;                                  0359 00610000
*                               RPLERRCD=RPLRRADR;/* SET INVAL ADDR     00611000
*                                                            @X04SVMR*/ 00612000
         MVI   RPLERRCD(RRPL),X'C4'                                0360 00613000
*                               GO TO ERRORX;/* TAKE ERROR EXIT.     */ 00614000
         B     ERRORX                                              0361 00615000
*                             END;  /* END OF RRDS ERROR     @X04SVMR*/ 00616000
*                         END;      /* END OF CSDS CODE              */ 00617000
@RF00358 DS    0H                                                  0364 00618000
*                       IF RPLDIR=ON THEN/* SEE IF DIRECT REQ        */ 00619000
@RC00349 TM    RPLDIR(RRPL),B'01000000'                            0364 00620000
         BNO   @RF00364                                            0364 00621000
*                         RPLDDDD=RBA;/* IF SO, PUT RBA IN RPL       */ 00622000
         L     @10,RPLARG(,RRPL)                                   0365 00623000
         L     @10,RBA(,@10)                                       0365 00624000
         ST    @10,RPLDDDD(,RRPL)                                  0365 00625000
*I15:                                                              0366 00626000
*                       DO;         /* IDACALL(IDA019R4)             */ 00627000
@RF00364 DS    0H                                                  0366 00628000
I15      DS    0H                                                  0367 00629000
*                         CALL IDA019R4;/* EXIT TO IDA019R4          */ 00630000
         L     @15,@CV01248                                        0367 00631000
         BALR  @14,@15                                             0367 00632000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00633000
         BALR @11,0                                                     00634000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00635000
         USING *,@11                                                    00636000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00637000
         L     @11,=A(@PSTART)                                          00638000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0371 00639000
*                                      ADDRESSING                    */ 00640000
         USING @PSTART,@11                                              00641000
*                       END I15;    /* CALL ADDRESSED DRIVER         */ 00642000
*                     END;          /* END, ADDRESS ACCESSING        */ 00643000
*                   ELSE            /* HERE IF NOT ADDR              */ 00644000
*                     DO;                                          0374 00645000
         B     @RC00347                                            0374 00646000
@RF00347 DS    0H                                                  0375 00647000
*                       IF RPLCNV=ON/* SEE IF CINV ACCESSING         */ 00648000
*                         THEN      /* HERE IF SO                    */ 00649000
         TM    RPLCNV(RRPL),B'00100000'                            0375 00650000
         BNO   @RF00375                                            0375 00651000
*I16:                                                              0376 00652000
*                         DO;       /* IDACALL(IDA019R8)             */ 00653000
I16      DS    0H                                                  0377 00654000
*                           CALL IDA019R8;/* EXIT TO IDA019R8        */ 00655000
         L     @15,@CV01251                                        0377 00656000
         BALR  @14,@15                                             0377 00657000
*                           GEN(BALR @11,0);/* LOAD ADDR OF REENTRY  */ 00658000
         BALR @11,0                                                     00659000
*                           GEN(USING *,@11);/* ESTABLISH ADDRESSING */ 00660000
         USING *,@11                                                    00661000
*                           GEN(L     @11,=A(@PSTART));/* RELOAD BASE*/ 00662000
         L     @11,=A(@PSTART)                                          00663000
*                           GEN(USING @PSTART,@11);/* ESTABLISH    0381 00664000
*                                      ADDRESSING                    */ 00665000
         USING @PSTART,@11                                              00666000
*                         END I16;  /* CALL CINV DRIVER              */ 00667000
*                                                                  0383 00668000
*/*  IF NOT A KEYED, ADDRESSED, OR CONTROL INTERVAL REQUEST, INDICATE*/ 00669000
*/*   AN ERROR UNLESS IT IS A SPECIAL REQUEST                        */ 00670000
*                                                                  0383 00671000
*                       ELSE        /* HERE IF NOT CNV               */ 00672000
*                         IF RPLREQ=RPLPFMTD|/* IF THIS IS A DATA OR */ 00673000
*                             RPLREQ=RPLPFMTI THEN/* AN INDEX      0383 00674000
*                                      PREFORMAT                     */ 00675000
         B     @RC00375                                            0383 00676000
@RF00375 CLI   RPLREQ(RRPL),8                                      0383 00677000
         BE    @RT00383                                            0383 00678000
         CLI   RPLREQ(RRPL),9                                      0383 00679000
         BNE   @RF00383                                            0383 00680000
@RT00383 DS    0H                                                  0384 00681000
*                           CALL R1PREFMT;/* REQUEST, CALL PREFORMAT */ 00682000
         BAL   @14,R1PREFMT                                        0384 00683000
*                         ELSE      /* OTHERWISE, SEE IF THIS        */ 00684000
*                           IF RPLREQ=RPLFRCIO THEN/* IS A FORCE I/O    00685000
*                                      REQUEST.                      */ 00686000
         B     @RC00383                                            0385 00687000
@RF00383 CLI   RPLREQ(RRPL),10                                     0385 00688000
         BNE   @RF00385                                            0385 00689000
*                             CALL R1FRCIO;/* IF SO, DO FORCE I/O.   */ 00690000
         BAL   @14,R1FRCIO                                         0386 00691000
*                           ELSE    /* HERE FOR UNKNOWN REQ          */ 00692000
*                             DO;                                  0387 00693000
         B     @RC00385                                            0387 00694000
@RF00385 DS    0H                                                  0388 00695000
*INVACC:                                                           0388 00696000
*                               RPLERRCD=RPLINVP;/* NOT KEY, ADR, CNV*/ 00697000
INVACC   MVI   RPLERRCD(RRPL),X'68'                                0388 00698000
*ERRORX:                                                           0389 00699000
*                               RPLERREG='08'X;/* SET LOGICAL ERROR  */ 00700000
ERRORX   MVI   RPLERREG(RRPL),X'08'                                0389 00701000
*                             END;  /* END, UNKNOWN ACCESS           */ 00702000
*                     END;          /* END, NON-ADDR ACCESSING       */ 00703000
@RC00385 DS    0H                                                  0391 00704000
@RC00383 DS    0H                                                  0391 00705000
@RC00375 DS    0H                                                  0392 00706000
*                 END;              /* END, NON-KEYED ACCESS         */ 00707000
@RC00347 DS    0H                                                  0393 00708000
*             RFY                                                  0393 00709000
*               IDAAMBL BASED(ACBAMBL);/* RESET AMBL BASE            */ 00710000
@RC00310 DS    0H                                                  0393 00711000
@RC00297 DS    0H                                                  0394 00712000
*/*  POST RPL COMPLETE                                               */ 00713000
*                                                                  0394 00714000
*POSTRPL:                           /* POST RPL ECB                  */ 00715000
*             IF RPLERREG='0C'X&    /* IF AN I/O ERROR,      @ZA06117*/ 00716000
*                 AMBLSR=OFF&       /* NOT LOCAL SHR,        @ZA06117*/ 00717000
*                 AMBGSR=OFF        /* AND NOT GLOBAL,       @ZA06117*/ 00718000
*               THEN                /* ERROR MESSAGE         @ZA06117*/ 00719000
POSTRPL  CLI   RPLERREG(RRPL),12                                   0394 00720000
         BNE   @RF00394                                            0394 00721000
         TM    AMBLSR(RAMB),B'01100000'                            0394 00722000
         BNZ   @RF00394                                            0394 00723000
*I17:                                                              0395 00724000
*               DO;                 /* IDACALL(IDA019R5)             */ 00725000
I17      DS    0H                                                  0396 00726000
*                 CALL IDA019R5;    /* EXIT TO IDA019R5              */ 00727000
         L     @15,@CV01250                                        0396 00728000
         BALR  @14,@15                                             0396 00729000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00730000
         BALR @11,0                                                     00731000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00732000
         USING *,@11                                                    00733000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00734000
         L     @11,=A(@PSTART)                                          00735000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00736000
         USING @PSTART,@11                                              00737000
*               END I17;            /* IS NEEDED.            @ZA06117*/ 00738000
*             CALL R1ARSTRT;        /* TRY RESTART.          @ZA06117*/ 00739000
@RF00394 BAL   @14,R1ARSTRT                                        0402 00740000
*             RFY                                                  0403 00741000
*               RWORK4 RSTD;        /* GET WORK REG          @ZA14801*/ 00742000
*             RWORK4=RPLCHAIN;      /* NEXT RPL IN CHAIN     @ZA14801*/ 00743000
         L     RWORK4,RPLCHAIN(,RRPL)                              0404 00744000
*             RAMB=AMBLDTA;         /* POINT TO DATA AMB     @ZA14801*/ 00745000
         L     @10,RPLDACB(,RRPL)                                  0405 00746000
         L     @10,ACBAMBL(,@10)                                   0405 00747000
         L     RAMB,AMBLDTA(,@10)                                  0405 00748000
*             RFY                                                  0406 00749000
*               RWORK1 RSTD;        /* GET WORK REG          @X04SVMR*/ 00750000
*             RWORK1=R1;            /* SAVE REGISTER 1               */ 00751000
         LR    RWORK1,R1                                           0407 00752000
*             IF RPLECBSW=ON THEN   /* SEE IF ECB IN RPL     @X04SVMR*/ 00753000
         TM    RPLECBSW(RRPL),B'00000001'                          0408 00754000
         BNO   @RF00408                                            0408 00755000
*               R1=ADDR(USERECB);   /* NO, PTR TO USER       @X04SVMR*/ 00756000
         L     R1,RPLECBPT(,RRPL)                                  0409 00757000
*             ELSE                  /* YES, PTR TO VSAM      @X04SVMR*/ 00758000
*               R1=ADDR(RPLECB);                                   0410 00759000
         B     @RC00408                                            0410 00760000
@RF00408 LA    @10,RPLECB(,RRPL)                                   0410 00761000
         LR    R1,@10                                              0410 00762000
*             RFY                                                  0411 00763000
*              (RWORK2,                                            0411 00764000
*               RWORK3) RSTD;       /* GET WORK REGS         @X04SVMR*/ 00765000
@RC00408 DS    0H                                                  0412 00766000
*             IF RWORK1->RPLASY=OFF THEN/* IF SYN, NO POST   @ZA06117*/ 00767000
         TM    RPLASY(RWORK1),B'00001000'                          0412 00768000
         BNZ   @RF00412                                            0412 00769000
*               DO;                 /* IS NEEDED.            @ZA06117*/ 00770000
*                 ECB=POSTED;       /* SET POST FLAG         @ZA06117*/ 00771000
         MVC   ECB(4,R1),POSTED                                    0414 00772000
*                 RWORK2=PLHMRPL;   /* INDICATE SYNCH.       @ZA06117*/ 00773000
         L     RWORK2,PLHMRPL(,RPLH)                               0415 00774000
*               END;                /* END SYN               @ZA06117*/ 00775000
*             ELSE                  /* HERE FOR ASY          @ZA06117*/ 00776000
*               DO;                 /*                       @ZA06117*/ 00777000
         B     @RC00412                                            0417 00778000
@RF00412 DS    0H                                                  0418 00779000
*                 RWORK2=ZERO;      /* GET COMPARAND         @ZA06117*/ 00780000
         SLR   RWORK2,RWORK2                                       0418 00781000
*                 RWORK3=POSTED;    /* VALUE TO SET          @X04SVMR*/ 00782000
         L     RWORK3,POSTED                                       0419 00783000
*                 CS(RWORK2,RWORK3,ECB);/* POST IF ZERO      @X04SVMR*/ 00784000
         CS    RWORK2,@07,ECB(R1)                                  0420 00785000
*                 BC(8,NOPOST);     /* IF OK, SKIP SVC       @X04SVMR*/ 00786000
         BC    8,NOPOST                                            0421 00787000
*                 IF PSAAOLD^=PLHASCB THEN/* IF IN DIFFERENT @Y30SSMR*/ 00788000
         CLC   PSAAOLD(4),PLHASCB(RPLH)                            0422 00789000
         BE    @RF00422                                            0422 00790000
*                   DO;             /* MEMORY, SWITCH.       @Y30SSMR*/ 00791000
*                     PLHECB=R1;    /* SET ECB ADDRESS       @Y30SSMR*/ 00792000
         ST    R1,PLHECB(,RPLH)                                    0424 00793000
*                     PLHERRET=ADDR(BADPOST);/* SET ERROR EXIT     0425 00794000
*                                                            @Y30SSMR*/ 00795000
         LA    @10,BADPOST                                         0425 00796000
         ST    @10,PLHERRET(,RPLH)                                 0425 00797000
*                     R1=ADDR(PLHECB);/* GET ADDR OF PARML   @Y30SSMR*/ 00798000
         LA    R1,PLHECB(,RPLH)                                    0426 00799000
*                     GEN(POST  MF=(E,(1)));/* XMEMORY POST  @Y30SSMR*/ 00800000
         POST  MF=(E,(1))                                               00801000
*                   END;            /* END OF XMEMORY        @Y30SSMR*/ 00802000
*                 ELSE              /* SAME MEMORY           @Y30SSMR*/ 00803000
*                   GEN(POST  (1)); /* ISSUE POST SVC                */ 00804000
         B     @RC00422                                            0429 00805000
@RF00422 DS    0H                                                  0429 00806000
         POST  (1)                                                      00807000
*NOPOST:                            /* ECB POSTED            @X04SVMR*/ 00808000
*                 RWORK2=ZERO;      /* SET ASY FLAG          @ZA06117*/ 00809000
@RC00422 DS    0H                                                  0430 00810000
NOPOST   SLR   RWORK2,RWORK2                                       0430 00811000
*               END;                /* END OF ASY CODE       @ZA06117*/ 00812000
*/*  THE CODE FROM HERE UNTIL EXIT MUST NOT USE THE RPL BECAUSE THE  */ 00813000
*/*  ECB HAS BEEN POSTED AND AN ASY RPL MAY HAVE BEEN REUSED.@ZA14801*/ 00814000
*                                                                  0432 00815000
*             R1=RWORK1;            /* RESTORE REG. 1                */ 00816000
@RC00412 LR    R1,RWORK1                                           0432 00817000
*             RFY                                                  0433 00818000
*              (RWORK1,                                            0433 00819000
*               RWORK3) UNRSTD;     /* RELEASE REGS          @ZA06117*/ 00820000
*             RRPL=RWORK4;          /* NEXT IN CHAIN         @ZA14801*/ 00821000
         LR    RRPL,RWORK4                                         0434 00822000
*             RFY                                                  0435 00823000
*               RWORK4 UNRSTD;      /* RELEASE WORK REG      @ZA14801*/ 00824000
*             IF RRPL^=ZERO THEN    /* CHAINED RPLS?         @X04SVMR*/ 00825000
         LTR   RRPL,RRPL                                           0436 00826000
         BZ    @RF00436                                            0436 00827000
*               DO;                                                0437 00828000
*                                                                  0437 00829000
*/*  IF ANY ERRORS, STOP PROCESSING THE CHAIN IN ORDER TO ALLOW THE  */ 00830000
*/*  USER NOT TO RETURN TO VSAM FROM THE ERROR EXIT ROUTINE.         */ 00831000
*                                                                  0438 00832000
*                 IF PLHCRPL->RPLERREG^='00'X THEN/* ANY ERROR?      */ 00833000
         L     @10,PLHCRPL(,RPLH)                                  0438 00834000
         CLI   RPLERREG(@10),0                                     0438 00835000
         BE    @RF00438                                            0438 00836000
*                   DO;             /* YES, STOP CHAIN.      @ZA14801*/ 00837000
*                     RPLPLHPT=RPLH;/* POINT RPL TO PLH.     @ZA14801*/ 00838000
         ST    RPLH,RPLPLHPT(,RRPL)                                0440 00839000
*                     GO TO POSTRPL;/* POST NEXT RPL.        @ZA14801*/ 00840000
         B     POSTRPL                                             0441 00841000
*                   END;            /* END OF ERROR CODE     @ZA14801*/ 00842000
*/*  MAKE SURE THAT LOC MODE IS NOT USED WITH CHAINED RPLS.  @X04SVMR*/ 00843000
*                                                                  0443 00844000
*                 IF RPLLOC=ON      /* SEE IF LOCATE         @X04SVMR*/ 00845000
*                   THEN            /* IF SO, SET ERROR.             */ 00846000
@RF00438 TM    RPLLOC(RRPL),B'10000000'                            0443 00847000
         BNO   @RF00443                                            0443 00848000
*                   DO;                                            0444 00849000
*                     RPLERRCD=RPLINLOC;/* SET INVALID LOCATE REQ.   */ 00850000
         MVI   RPLERRCD(RRPL),X'54'                                0445 00851000
*                     GO TO ERRORX; /* TAKE ERROR EXIT               */ 00852000
         B     ERRORX                                              0446 00853000
*                   END;            /* END OF INVALID LOCATE         */ 00854000
*                 IF(RPLREQ<RPLPFMTD|/* IF NOT I/O SUP-      @X04SVMR*/ 00855000
*                     RPLREQ>=RPLGETIX) THEN/* PORT REQUEST  @X04SVMR*/ 00856000
@RF00443 CLI   RPLREQ(RRPL),8                                      0448 00857000
         BL    @RT00448                                            0448 00858000
         CLI   RPLREQ(RRPL),11                                     0448 00859000
         BL    @RF00448                                            0448 00860000
@RT00448 DS    0H                                                  0449 00861000
*                   IF PLHENDRQ=ON THEN/* IF ENDREQ ISSUED,  @X04SVMR*/ 00862000
         TM    PLHENDRQ(RPLH),B'01000000'                          0449 00863000
         BNO   @RF00449                                            0449 00864000
*                     RRPL=ZERO;    /* CAUSE LOOP EXIT       @X04SVMR*/ 00865000
         SLR   RRPL,RRPL                                           0450 00866000
*               END;                /* END CHAINED RPLS      @X04SVMR*/ 00867000
@RF00449 DS    0H                                                  0451 00868000
@RF00448 DS    0H                                                  0452 00869000
*           END;                    /* END, DO UNTIL         @X04SVMR*/ 00870000
@RF00436 DS    0H                                                  0452 00871000
@DE00290 SLR   @10,@10                                             0452 00872000
         CR    RRPL,@10                                            0452 00873000
         BNE   @DL00290                                            0452 00874000
*                                                                  0453 00875000
*/*  IF THIS IS A SYNCHRONOUS REQUEST, CALL THE CHECK ROUTINE ON     */ 00876000
*/*   BEHALF OF THE USER                                             */ 00877000
*                                                                  0453 00878000
*           IF RWORK2^=ZERO THEN    /* IF SYNCH, CHECK       @ZA06117*/ 00879000
         CLR   RWORK2,@10                                          0453 00880000
         BE    @RF00453                                            0453 00881000
*             DO;                   /*                       @ZA06117*/ 00882000
*               RRPL=RWORK2;        /* POINT TO PLHMRPL      @ZA06117*/ 00883000
         LR    RRPL,RWORK2                                         0455 00884000
*               CALL R1CHECK;       /* SYNCHRONIZE I/O       @ZA06117*/ 00885000
         BAL   @14,R1CHECK                                         0456 00886000
*             END;                  /* END SYN               @ZA06117*/ 00887000
*           RFY                                                    0458 00888000
*             RWORK2 UNRSTD;        /* DROP WORK REG         @ZA06117*/ 00889000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 00890000
         B     CE0001@                                             0459 00891000
*         END;                      /* END OF SUBCASE                */ 00892000
*                                                                  0461 00893000
*/*  DB/DC REQUEST HANDLING                                  @X04SVMR*/ 00894000
*                                                                  0461 00895000
*WRTBFR:                                                           0461 00896000
*MRKBFR:                                                           0461 00897000
*SCHBFR:                                                           0461 00898000
*         DO;                       /* SUBCASE                       */ 00899000
WRTBFR   DS    0H                                                  0461 00900000
MRKBFR   DS    0H                                                  0461 00901000
SCHBFR   DS    0H                                                  0462 00902000
*           RFY                                                    0462 00903000
*             RWORK0 RSTD;          /* GET REGISTER          @X04SVMR*/ 00904000
*/*  SEE IF RPL IS AVAILABLE                                 @X04SVMR*/ 00905000
*                                                                  0463 00906000
*           TS(RPLACTIV);           /* TEST AND SET          @X04SVMR*/ 00907000
         TS    RPLACTIV(RRPL)                                      0463 00908000
*           BC(8,SETCODE2);         /* BRANCH IF OK          @X04SVMR*/ 00909000
         BC    8,SETCODE2                                          0464 00910000
*           RPARM1=RRPL;            /* SET LAST RPL PTR      @X04SVMR*/ 00911000
         LR    RPARM1,RRPL                                         0465 00912000
*           CALL R1TERM;            /* RELEASE RPL           @X04SVMR*/ 00913000
         BAL   @14,R1TERM                                          0466 00914000
*           RETURN CODE('04'X);     /* MAKE ERROR RETURN     @X04SVMR*/ 00915000
         LA    @15,4                                               0467 00916000
         L     @14,12(,@13)                                        0467 00917000
         LM    @00,@12,20(@13)                                     0467 00918000
         BR    @14                                                 0467 00919000
*SETCODE2:                                                         0468 00920000
*           RPLREQ=RWORK0;          /* SAVE REQ TYPE         @X04SVMR*/ 00921000
SETCODE2 STC   RWORK0,RPLREQ(,RRPL)                                0468 00922000
*           IF RPLECBSW=ON THEN     /* SEE WHERE ECB IS      @X04SVMR*/ 00923000
         TM    RPLECBSW(RRPL),B'00000001'                          0469 00924000
         BNO   @RF00469                                            0469 00925000
*             USERECB=ZERO;         /* CLEAR USER ECB        @X04SVMR*/ 00926000
         L     @10,RPLECBPT(,RRPL)                                 0470 00927000
         SLR   @05,@05                                             0470 00928000
         STCM  @05,15,USERECB(@10)                                 0470 00929000
*           ELSE                    /* INTERNAL ECB          @X04SVMR*/ 00930000
*             RPLECB=ZERO;          /* CLEAR VSAM ECB        @X04SVMR*/ 00931000
         B     @RC00469                                            0471 00932000
@RF00469 SLR   @10,@10                                             0471 00933000
         ST    @10,RPLECB(,RRPL)                                   0471 00934000
*           RPLFDBWD=ZERO;          /* CLEAR ERROR FLGS      @X04SVMR*/ 00935000
@RC00469 SLR   @10,@10                                             0472 00936000
         ST    @10,RPLFDBWD(,RRPL)                                 0472 00937000
*           RPARM1=RPARM1/256;      /* SHIFT RT 1 BYTE       @X04SVMR*/ 00938000
         SRL   RPARM1,8                                            0473 00939000
*           IF RPLREQ^=RPLMRKB THEN /* TEST FOR MRKBFR       @X04SVMR*/ 00940000
         CLI   RPLREQ(RRPL),14                                     0474 00941000
         BE    @RF00474                                            0474 00942000
*             DO;                                                  0475 00943000
*                                                                  0475 00944000
*               /*****************************************************/ 00945000
*               /*                                                   */ 00946000
*               /* HERE IF NOT A MRKBFR REQUEST              @X04SVMR*/ 00947000
*               /*                                                   */ 00948000
*               /*****************************************************/ 00949000
*                                                                  0476 00950000
*               RPLH=RPLPLHPT;      /* POINT TO PLH          @OZ04909*/ 00951000
         L     RPLH,RPLPLHPT(,RRPL)                                0476 00952000
*               IF RPLH=ZERO|PLHIOSID=OFF THEN/* IF NOT HERE,      0477 00953000
*                                                            @OZ04909*/ 00954000
         CR    RPLH,@10                                            0477 00955000
         BE    @RT00477                                            0477 00956000
         TM    PLHIOSID(RPLH),B'00001000'                          0477 00957000
         BNZ   @RF00477                                            0477 00958000
@RT00477 DS    0H                                                  0478 00959000
*                 DO;               /* FIND A PLH            @X04SVMR*/ 00960000
*                   CALL FINDPLH;   /* LOCATE A PLH          @X04SVMR*/ 00961000
         BAL   @14,FINDPLH                                         0479 00962000
*                   RFY                                            0480 00963000
*                     R15 RSTD;     /* GET RETURN CODE       @X04SVMR*/ 00964000
*                   IF R15^=ZERO THEN/* TEST FOR PLH         @X04SVMR*/ 00965000
         LTR   R15,R15                                             0481 00966000
         BNZ   @RT00481                                            0481 00967000
*                     GO TO NOPLHFND;/* NONE--ERROR EXIT     @X04SVMR*/ 00968000
*                   RFY                                            0483 00969000
*                     R15 UNRSTD;   /* DROP R15              @X04SVMR*/ 00970000
*                 END;              /* END NON-CLOSE         @X04SVMR*/ 00971000
*               PLHCRPL=RRPL;       /* PTR TO CURR RPL       @X04SVMR*/ 00972000
@RF00477 ST    RRPL,PLHCRPL(,RPLH)                                 0485 00973000
*               RPLPLHPT=RPLH;      /* SET PTR TO PLH        @X04SVMR*/ 00974000
         ST    RPLH,RPLPLHPT(,RRPL)                                0486 00975000
*               IF RPLSTRID>MAXID|  /* IF TRANSID TOO        @X04SVMR*/ 00976000
*                   RPLSTRID<ZERO|  /* SMALL OR TOO          @X04SVMR*/ 00977000
*                   (AMBLSR=OFF&AMBGSR=OFF)/* BIG OR NOT SHR @X04SVMR*/ 00978000
*                 THEN              /* SET INVALID REQ       @X04SVMR*/ 00979000
         LH    @10,RPLSTRID(,RRPL)                                 0487 00980000
         C     @10,@CF00036                                        0487 00981000
         BH    @RT00487                                            0487 00982000
         LTR   @10,@10                                             0487 00983000
         BM    @RT00487                                            0487 00984000
         TM    AMBLSR(RAMB),B'01100000'                            0487 00985000
         BZ    @RT00487                                            0487 00986000
*                 GO TO INVACC2;    /* TAKE ERROR EXIT       @X04SVMR*/ 00987000
*               IF RPLREQ=RPLWRTB THEN/* IF WRTBFR, HERE     @X04SVMR*/ 00988000
@RF00487 CLI   RPLREQ(RRPL),15                                     0489 00989000
         BNE   @RF00489                                            0489 00990000
*                 DO;                                              0490 00991000
*                   RBUFC=PLHDBUFC; /* CURRENT BUFC PTR      @X04SVMR*/ 00992000
         L     RBUFC,PLHDBUFC(,RPLH)                               0491 00993000
*                   IF RBUFC^=ZERO THEN/* WRTBFR--IMPLICIT   @X04SVMR*/ 00994000
         LTR   RBUFC,RBUFC                                         0492 00995000
         BZ    @RF00492                                            0492 00996000
*I20:                                                              0493 00997000
*                     DO;           /* IDACALL(IDAFREEB)             */ 00998000
I20      DS    0H                                                  0494 00999000
*                       CALL IDAFREEB;/* EXIT TO IDAFREEB            */ 01000000
         L     @15,@CV01244                                        0494 01001000
         BALR  @14,@15                                             0494 01002000
*                       GEN(BALR @11,0);/* LOAD ADDR OF REENTRY      */ 01003000
         BALR @11,0                                                     01004000
*                       GEN(USING *,@11);/* ESTABLISH ADDRESSING     */ 01005000
         USING *,@11                                                    01006000
*                       GEN(L     @11,=A(@PSTART));/* RELOAD BASE    */ 01007000
         L     @11,=A(@PSTART)                                          01008000
*                       GEN(USING @PSTART,@11);/* ESTABLISH        0498 01009000
*                                      ADDRESSING                    */ 01010000
         USING @PSTART,@11                                              01011000
*                     END I20;      /* FREE BUFFER           @X04SVMR*/ 01012000
*                                                                  0499 01013000
*                   /*************************************************/ 01014000
*                   /*                                               */ 01015000
*                   /* PROCESS WRTBFR REQUESTS               @X04SVMR*/ 01016000
*                   /*                                               */ 01017000
*                   /*************************************************/ 01018000
*                                                                  0500 01019000
*                   RWORK0=RPARM1;  /* SAVE LRU N            @X04SVMR*/ 01020000
@RF00492 LR    RWORK0,RPARM1                                       0500 01021000
*                   RPARM1=RPARM1&ANDCON;/* ZERO ALL BUT Q   @X04SVMR*/ 01022000
         N     RPARM1,@CF01256                                     0501 01023000
*                   IF RPARM1=DS THEN/* SEE IF DS REQ        @X04SVMR*/ 01024000
         LTR   RPARM1,RPARM1                                       0502 01025000
         BNZ   @RF00502                                            0502 01026000
*                     DO;                                          0503 01027000
*                                                                  0503 01028000
*                       /*********************************************/ 01029000
*                       /*                                           */ 01030000
*                       /* HERE FOR WRTBFR TYPE EQUALS DS    @X04SVMR*/ 01031000
*                       /*                                           */ 01032000
*                       /*********************************************/ 01033000
*                                                                  0504 01034000
*I21:                                                              0504 01035000
*                       DO;         /* IDACALL(IDAWRTBF)             */ 01036000
I21      DS    0H                                                  0505 01037000
*                         CALL IDAWRTBF;/* EXIT TO IDAWRTBF          */ 01038000
         L     @15,@CV01243                                        0505 01039000
         BALR  @14,@15                                             0505 01040000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 01041000
         BALR @11,0                                                     01042000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 01043000
         USING *,@11                                                    01044000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 01045000
         L     @11,=A(@PSTART)                                          01046000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0509 01047000
*                                      ADDRESSING                    */ 01048000
         USING @PSTART,@11                                              01049000
*                       END I21;    /* CALL WRTBFR RTN       @X04SVMR*/ 01050000
*                       IF RPLERREG^='00'X|/* IF ERROR OR    @X04SVMR*/ 01051000
*                           AMDDST^='1'B|/* NOT A KSDS       @X04SVMR*/ 01052000
*                           AMBLNUM=ONE THEN/* OR NOT PROCESSED    0511 01053000
*                                                            @X04SVMR*/ 01054000
         CLI   RPLERREG(RRPL),0                                    0511 01055000
         BNE   @RT00511                                            0511 01056000
         L     @10,AMBDSB(,RAMB)                                   0511 01057000
         TM    AMDDST(@10),B'10000000'                             0511 01058000
         BNO   @RT00511                                            0511 01059000
         L     @10,RPLDACB(,RRPL)                                  0511 01060000
         L     @10,ACBAMBL(,@10)                                   0511 01061000
         CLC   AMBLNUM(2,@10),@CH00053                             0511 01062000
         BE    @RT00511                                            0511 01063000
*                         GO TO POSTRPL2;/* AS KSDS, EXIT    @X04SVMR*/ 01064000
*                       RAMB=AMBLIX;/* POINT TO IX AMB       @X04SVMR*/ 01065000
         L     RAMB,AMBLIX(,@10)                                   0513 01066000
*                     END;          /* END OF DS CODE        @X04SVMR*/ 01067000
*                   ELSE            /* NOT TYPE = DS         @X04SVMR*/ 01068000
*                     IF RPARM1=LRU THEN/* IF LRU, SHIFT RT  @X04SVMR*/ 01069000
         B     @RC00502                                            0515 01070000
@RF00502 C     RPARM1,@CF00067                                     0515 01071000
         BNE   @RF00515                                            0515 01072000
*                       RWORK0=RWORK0/256;/* R0 = LRU N      @X04SVMR*/ 01073000
         SRL   RWORK0,8                                            0516 01074000
*I22:                                                              0517 01075000
*                   DO;             /* IDACALL(IDAWRTBF)             */ 01076000
@RF00515 DS    0H                                                  0517 01077000
@RC00502 DS    0H                                                  0517 01078000
I22      DS    0H                                                  0518 01079000
*                     CALL IDAWRTBF;/* EXIT TO IDAWRTBF              */ 01080000
         L     @15,@CV01243                                        0518 01081000
         BALR  @14,@15                                             0518 01082000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01083000
         BALR @11,0                                                     01084000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01085000
         USING *,@11                                                    01086000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01087000
         L     @11,=A(@PSTART)                                          01088000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01089000
         USING @PSTART,@11                                              01090000
*                   END I22;        /* CALL WRTBFR RTN       @X04SVMR*/ 01091000
*                 END;              /* END OF WRTBFR         @X04SVMR*/ 01092000
*               ELSE                /* HERE FOR SCHBFR       @X04SVMR*/ 01093000
*                 DO;                                              0525 01094000
         B     @RC00489                                            0525 01095000
@RF00489 DS    0H                                                  0526 01096000
*I23:                                                              0526 01097000
*                   DO;             /* IDACALL(IDASCHBF)             */ 01098000
I23      DS    0H                                                  0527 01099000
*                     CALL IDASCHBF;/* EXIT TO IDASCHBF              */ 01100000
         L     @15,@CV01242                                        0527 01101000
         BALR  @14,@15                                             0527 01102000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01103000
         BALR @11,0                                                     01104000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01105000
         USING *,@11                                                    01106000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01107000
         L     @11,=A(@PSTART)                                          01108000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01109000
         USING @PSTART,@11                                              01110000
*                   END I23;        /* CALL SCHBFR RTN       @X04SVMR*/ 01111000
*                   IF RPLERREG='00'X THEN/* IF NO ERROR,    @X04SVMR*/ 01112000
         CLI   RPLERREG(RRPL),0                                    0533 01113000
         BNE   @RF00533                                            0533 01114000
*                     DO;           /* SET PROPER FDBK.      @X04SVMR*/ 01115000
*                       R0SAVE=RPARM1;/* SET USER BFRNO      @X04SVMR*/ 01116000
         ST    RPARM1,R0SAVE(,R13)                                 0535 01117000
*                       PLHBMSV1=RPARM1;/* SET USER BFRNO    @X04SVMR*/ 01118000
         ST    RPARM1,PLHBMSV1(,RPLH)                              0536 01119000
*                       RPLRLEN=AMDCINV;/* SET DATA LENGTH   @X04SVMR*/ 01120000
         L     @10,AMBDSB(,RAMB)                                   0537 01121000
         L     @10,AMDCINV(,@10)                                   0537 01122000
         ST    @10,RPLRLEN(,RRPL)                                  0537 01123000
*                       PLHINVAL=OFF;/* RETAIN PLH           @X04SVMR*/ 01124000
         NI    PLHINVAL(RPLH),B'11111101'                          0538 01125000
*                     END;          /* END, NON-ERROR        @X04SVMR*/ 01126000
*                 END;              /* END, SCHBFR CODE      @X04SVMR*/ 01127000
*             END;                  /* END, NON-MRKBFR       @X04SVMR*/ 01128000
*           ELSE                    /* HERE FOR MRKBFR       @X04SVMR*/ 01129000
*             DO;                                                  0542 01130000
         B     @RC00474                                            0542 01131000
@RF00474 DS    0H                                                  0543 01132000
*               CALL FINDOPLH;      /* SET PLH PTR           @X04SVMR*/ 01133000
         BAL   @14,FINDOPLH                                        0543 01134000
*               RFY                                                0544 01135000
*                 R15 RSTD;         /* GET RETURN CODE       @X04SVMR*/ 01136000
*               IF R15^=ZERO THEN   /* TEST FOR NO PLH       @X04SVMR*/ 01137000
         LTR   R15,R15                                             0545 01138000
         BZ    @RF00545                                            0545 01139000
*                 DO;                                              0546 01140000
*                   RPLERRCD=RPLNOPLH;/* SET NO PLH CODE     @X04SVMR*/ 01141000
         MVI   RPLERRCD(RRPL),X'40'                                0547 01142000
*                   RPLERREG='08'X; /* SET LOGICAL ERROR     @X04SVMR*/ 01143000
         MVI   RPLERREG(RRPL),X'08'                                0548 01144000
*                   GO TO NOPLHFND; /* IF NONE, ERROR        @X04SVMR*/ 01145000
         B     NOPLHFND                                            0549 01146000
*                 END;              /* END OF NO PLH         @X04SVMR*/ 01147000
*               RFY                                                0551 01148000
*                 R15 UNRSTD;       /* RELEASE REG 15        @X04SVMR*/ 01149000
@RF00545 DS    0H                                                  0552 01150000
*               PLHCRPL=RRPL;       /* PTR TO CURR RPL       @X04SVMR*/ 01151000
         ST    RRPL,PLHCRPL(,RPLH)                                 0552 01152000
*               IF RPLSTRID>MAXID|  /* IF TRANSID TOO        @X04SVMR*/ 01153000
*                   RPLSTRID<ZERO|  /* SMALL OR TOO          @X04SVMR*/ 01154000
*                   (AMBLSR=OFF&AMBGSR=OFF)/* BIG OR NOT SHR @X04SVMR*/ 01155000
*                 THEN              /* SET INVALID REQ       @X04SVMR*/ 01156000
         LH    @10,RPLSTRID(,RRPL)                                 0553 01157000
         C     @10,@CF00036                                        0553 01158000
         BH    @RT00553                                            0553 01159000
         LTR   @10,@10                                             0553 01160000
         BM    @RT00553                                            0553 01161000
         TM    AMBLSR(RAMB),B'01100000'                            0553 01162000
         BNZ   @RF00553                                            0553 01163000
@RT00553 DS    0H                                                  0554 01164000
*                 DO;                                              0554 01165000
*INVACC2:                                                          0555 01166000
*                   RPLERRCD=RPLINVP;/* SET INVALID RPL      @X04SVMR*/ 01167000
INVACC2  MVI   RPLERRCD(RRPL),X'68'                                0555 01168000
*                   RPLERREG='08'X; /* SET LOGICAL ERROR     @X04SVMR*/ 01169000
         MVI   RPLERREG(RRPL),X'08'                                0556 01170000
*                   GO TO POSTRPL2; /* POST RPL              @X04SVMR*/ 01171000
         B     POSTRPL2                                            0557 01172000
*                 END;              /* END OF ERROR          @X04SVMR*/ 01173000
*               PLHRETO=PLHRETOS;   /* RESET OFFSET          @ZA16007*/ 01174000
@RF00553 LH    @10,PLHRETOS(,RPLH)                                 0559 01175000
         STH   @10,PLHRETO(,RPLH)                                  0559 01176000
*               RBUFC=PLHDBUFC;     /* PTR TO CURR BUFC      @X04SVMR*/ 01177000
         L     RBUFC,PLHDBUFC(,RPLH)                               0560 01178000
*               IF RBUFC=ZERO THEN  /* IF NO CURR BUFC       @X04SVMR*/ 01179000
         LTR   RBUFC,RBUFC                                         0561 01180000
         BZ    @RT00561                                            0561 01181000
*                 GO TO INVACC2;    /* SET INVALID REQ       @X04SVMR*/ 01182000
*I24:                                                              0563 01183000
*               DO;                 /* IDACALL(IDAMRKBF)             */ 01184000
I24      DS    0H                                                  0564 01185000
*                 CALL IDAMRKBF;    /* EXIT TO IDAMRKBF              */ 01186000
         L     @15,@CV01239                                        0564 01187000
         BALR  @14,@15                                             0564 01188000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01189000
         BALR @11,0                                                     01190000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01191000
         USING *,@11                                                    01192000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01193000
         L     @11,=A(@PSTART)                                          01194000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01195000
         USING @PSTART,@11                                              01196000
*               END I24;            /* CALL MRKBFR RTN       @X04SVMR*/ 01197000
*             END;                  /* END, MRKBFR CODE      @X04SVMR*/ 01198000
*/*  POST RPL COMPLETE                                       @X04SVMR*/ 01199000
*                                                                  0571 01200000
*POSTRPL2:                          /* POST RPL ECB          @X04SVMR*/ 01201000
*           CALL R1ARSTRT;          /* TRY TO RESTART        @ZA19635*/ 01202000
@RC00474 DS    0H                                                  0571 01203000
POSTRPL2 BAL   @14,R1ARSTRT                                        0571 01204000
*           RFY                                                    0572 01205000
*             RWORK1 RSTD;          /* GET WORK REG          @X04SVMR*/ 01206000
*           RWORK1=R1;              /* SAVE REGISTER 1       @X04SVMR*/ 01207000
         LR    RWORK1,R1                                           0573 01208000
*           IF RPLECBSW=ON          /* SEE IF ECB IN RPL     @X04SVMR*/ 01209000
*             THEN                  /* NO, PTR TO USER       @X04SVMR*/ 01210000
         TM    RPLECBSW(RRPL),B'00000001'                          0574 01211000
         BNO   @RF00574                                            0574 01212000
*             R1=ADDR(USERECB);                                    0575 01213000
         L     R1,RPLECBPT(,RRPL)                                  0575 01214000
*           ELSE                    /* YES, PTR TO VSAM      @X04SVMR*/ 01215000
*             R1=ADDR(RPLECB);                                     0576 01216000
         B     @RC00574                                            0576 01217000
@RF00574 LA    @10,RPLECB(,RRPL)                                   0576 01218000
         LR    R1,@10                                              0576 01219000
*           RFY                                                    0577 01220000
*            (RWORK2,                                              0577 01221000
*             RWORK3) RSTD;         /* GET WORK REGS         @X04SVMR*/ 01222000
@RC00574 DS    0H                                                  0578 01223000
*           IF RWORK1->RPLASY=OFF THEN/* TEST FOR SYN        @ZA06117*/ 01224000
         TM    RPLASY(RWORK1),B'00001000'                          0578 01225000
         BNZ   @RF00578                                            0578 01226000
*             DO;                   /*                       @ZA06117*/ 01227000
*               ECB=POSTED;         /* POST ECB              @ZA06117*/ 01228000
         MVC   ECB(4,R1),POSTED                                    0580 01229000
*               R1=RWORK1;          /* RESET RPL REG         @ZA06117*/ 01230000
         LR    R1,RWORK1                                           0581 01231000
*               CALL R1CHECK;       /* PERFORM CHECK         @ZA06117*/ 01232000
         BAL   @14,R1CHECK                                         0582 01233000
*             END;                  /* END SYN CODE          @ZA06117*/ 01234000
*           ELSE                    /* ASY                   @ZA06117*/ 01235000
*             DO;                   /*                       @ZA06117*/ 01236000
         B     @RC00578                                            0584 01237000
@RF00578 DS    0H                                                  0585 01238000
*               RWORK2=ZERO;        /* FIELD TO COMPARE      @X04SVMR*/ 01239000
         SLR   RWORK2,RWORK2                                       0585 01240000
*               RWORK3=POSTED;      /* VALUE TO SET          @X04SVMR*/ 01241000
         L     RWORK3,POSTED                                       0586 01242000
*               CS(RWORK2,RWORK3,ECB);/* POST IF ZERO        @X04SVMR*/ 01243000
         CS    RWORK2,@07,ECB(R1)                                  0587 01244000
*               BC(8,NOPOST2);      /* IF OK, SKIP SVC       @X04SVMR*/ 01245000
         BC    8,NOPOST2                                           0588 01246000
*               IF PSAAOLD^=PLHASCB THEN/* IF IN DIFFERENT   @Y30SSMR*/ 01247000
         CLC   PSAAOLD(4),PLHASCB(RPLH)                            0589 01248000
         BE    @RF00589                                            0589 01249000
*                 DO;               /* MEMORY, SWITCH.       @Y30SSMR*/ 01250000
*                   PLHECB=R1;      /* SET ECB ADDRESS       @Y30SSMR*/ 01251000
         ST    R1,PLHECB(,RPLH)                                    0591 01252000
*                   PLHERRET=ADDR(BADPOST);/* SET ERROR EXIT @Y30SSMR*/ 01253000
         LA    @10,BADPOST                                         0592 01254000
         ST    @10,PLHERRET(,RPLH)                                 0592 01255000
*                   R1=ADDR(PLHECB);/* GET ADDR OF PARML     @Y30SSMR*/ 01256000
         LA    R1,PLHECB(,RPLH)                                    0593 01257000
*                   GEN(POST  MF=(E,(1)));/* XMEMORY POST    @Y30SSMR*/ 01258000
         POST  MF=(E,(1))                                               01259000
*                 END;              /* END OF XMEMORY        @Y30SSMR*/ 01260000
*               ELSE                /* SAME MEMORY           @Y30SSMR*/ 01261000
*                 GEN(POST  (1));   /* ISSUE POST SVC        @X04SVMR*/ 01262000
         B     @RC00589                                            0596 01263000
@RF00589 DS    0H                                                  0596 01264000
         POST  (1)                                                      01265000
*NOPOST2:                           /* ECB POSTED            @X04SVMR*/ 01266000
*             END;                  /* END OF ASY            @ZA06117*/ 01267000
*           RFY                                                    0598 01268000
*            (RWORK1,                                              0598 01269000
*             RWORK2,                                              0598 01270000
*             RWORK3) UNRSTD;       /* RELEASE REGS          @X04SVMR*/ 01271000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 01272000
         B     CE0001@                                             0599 01273000
*         END;                      /* END OF SUBCASE                */ 01274000
*CE0001@:                                                          0601 01275000
*       END;                        /* END OF CASE                   */ 01276000
CE0001@  DS    0H                                                  0602 01277000
*R1EXIT:                                                           0602 01278000
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE@ZA29388    */ 01279000
R1EXIT   L     @10,AMBTRACE(,RAMB)                                 0602 01280000
         LTR   @10,@10                                             0602 01281000
         BZ    @RF00602                                            0602 01282000
*         DO;                       /*                       @ZA29388*/ 01283000
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/ 01284000
         L     @15,@CV01387                                        0604 01285000
         BALR  @14,@15                                             0604 01286000
*           GEN(DC X'0001');        /* TRACE ID              @ZA29388*/ 01287000
         DC X'0001'                                                     01288000
*         END;                      /*                       @ZA29388*/ 01289000
*       RETURN;                     /* RETURN TO CALLER      #X04SVMR*/ 01290000
         B     @EL00001                                            0607 01291000
*     END;                          /* END, ALL REQUESTS     #X04SVMR*/ 01292000
*   GO TO R1EXIT;                   /* EXIT                  @XM01683*/ 01293000
*                                                                  0610 01294000
*/* R1CHECK -- CHECK ROUTINE                                         */ 01295000
*/*01  FUNCTION = WAIT FOR REQUEST COMPLETION AND TAKE ANY EXITS     */ 01296000
*/*    (EODAD, LERAD, OR SYNAD) NECESSARY.                           */ 01297000
*/*01  INPUT = STANDARD REGISTERS AND RPL FEEDBACK.                  */ 01298000
*/*01  OUTPUT = ECB POSTED AND EXITS TAKEN.                          */ 01299000
*                                                                  0610 01300000
*R1CHECK:                                                          0610 01301000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* CHECK ROUTINE               */ 01302000
R1CHECK  DS    0H                                                  0611 01303000
*/*  PROCESS ALL RPLS IN THE CHAIN                                   */ 01304000
*                                                                  0611 01305000
*   DO UNTIL RRPL=ZERO;             /* WAIT FOR ALL RPLS     @X04SVMR*/ 01306000
@DL00611 DS    0H                                                  0612 01307000
*     RFY                                                          0612 01308000
*       RWORK1 RSTD;                /* GET REGISTER                  */ 01309000
*/*  WAIT FOR REQUEST COMPLETION                                     */ 01310000
*                                                                  0613 01311000
*     RWORK1=R1;                    /* SAVE REGISTER ONE             */ 01312000
         LR    RWORK1,R1                                           0613 01313000
*     IF RPLECBSW=OFF               /* SEE WHERE ECB IS              */ 01314000
*       THEN                        /* POINT TO IT IN RPL            */ 01315000
         TM    RPLECBSW(RRPL),B'00000001'                          0614 01316000
         BNZ   @RF00614                                            0614 01317000
*       R1=ADDR(RPLECB);                                           0615 01318000
         LA    @10,RPLECB(,RRPL)                                   0615 01319000
         LR    R1,@10                                              0615 01320000
*     ELSE                          /* OR IN USER AREA               */ 01321000
*       R1=ADDR(USERECB);                                          0616 01322000
         B     @RC00614                                            0616 01323000
@RF00614 L     R1,RPLECBPT(,RRPL)                                  0616 01324000
*     IF ECBPOST=OFF THEN           /* SEE IF POSTED YET             */ 01325000
@RC00614 TM    ECBPOST(R1),B'01000000'                             0617 01326000
         BNZ   @RF00617                                            0617 01327000
*       GEN(WAIT ECB=(1));          /* IF NOT, ISSUE WAIT            */ 01328000
         WAIT ECB=(1)                                                   01329000
*     R1=RWORK1;                    /* RESTORE REGISTER ONE          */ 01330000
@RF00617 LR    R1,RWORK1                                           0619 01331000
*/*  IF I/O ERROR, TAKE EXCEPTION EXIT BEFORE PLH DISCONN.   @ZA14801*/ 01332000
*                                                                  0620 01333000
*     IF RPLERREG='0C'X&AMBEXEX(ONE)^=ZERO THEN/*            @ZA14801*/ 01334000
         CLI   RPLERREG(RRPL),12                                   0620 01335000
         BNE   @RF00620                                            0620 01336000
         CLI   AMBEXEX(RAMB),0                                     0620 01337000
         BE    @RF00620                                            0620 01338000
*       DO;                         /*                       @ZA14801*/ 01339000
*         GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/*             @ZA14801*/ 01340000
         IDASVR14                                                       01341000
*I27:                                                              0623 01342000
*         DO;                       /* IDACALL(IDAEXEX)              */ 01343000
I27      DS    0H                                                  0624 01344000
*           CALL IDAEXEX;           /* EXIT TO IDAEXEX               */ 01345000
         L     @15,@CV01252                                        0624 01346000
         BALR  @14,@15                                             0624 01347000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01348000
         BALR @11,0                                                     01349000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01350000
         USING *,@11                                                    01351000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01352000
         L     @11,=A(@PSTART)                                          01353000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01354000
         USING @PSTART,@11                                              01355000
*         END I27;                  /* TAKE ERROR EXIT       @ZA14801*/ 01356000
*         GEN(IDARST14);            /*                       @ZA14801*/ 01357000
         IDARST14                                                       01358000
*       END;                        /*                       @ZA14801*/ 01359000
*     RRPL=RPLCHAIN;                /* GET NEXT RPL          @X04SVMR*/ 01360000
@RF00620 L     RRPL,RPLCHAIN(,RRPL)                                0632 01361000
*   END;                            /* END OF WAIT LOOP      @X04SVMR*/ 01362000
@DE00611 LTR   RRPL,RRPL                                           0633 01363000
         BNZ   @DL00611                                            0633 01364000
*   RRPL=PLHMRPL;                   /* RESTORE RPL PTR               */ 01365000
         L     RRPL,PLHMRPL(,RPLH)                                 0634 01366000
*   IF RPLREQ=RPLSRCHB THEN         /* IF SEARCH BFR         @ZA14801*/ 01367000
         CLI   RPLREQ(RRPL),13                                     0635 01368000
         BNE   @RF00635                                            0635 01369000
*     R0SAVE=PLHBMSV1;              /* PASS BACK BFRNO.      @ZA14801*/ 01370000
         L     @10,PLHBMSV1(,RPLH)                                 0636 01371000
         ST    @10,R0SAVE(,R13)                                    0636 01372000
*/*  DISCONNECT THE PLACEHOLDER IF ITS POSITIONAL INFORMATION IS     */ 01373000
*/*  INCORRECT                                               @ZA14801*/ 01374000
*                                                                  0637 01375000
*   IF PLHINVAL=ON                  /* IF INVALID PLH                */ 01376000
*     THEN                          /* THEN DISCONNECT IT            */ 01377000
@RF00635 TM    PLHINVAL(RPLH),B'00000010'                          0637 01378000
         BNO   @RF00637                                            0637 01379000
*     DO;                                                          0638 01380000
*       IF AMBCREAT=OFF|            /* IF CREATE MODE        @ZA11564*/ 01381000
*           RPLERRCD^=RPLINLRQ&     /* IF INVALID REQUEST    @ZA20491*/ 01382000
*           PLH1ST=OFF THEN         /* NOT FIRST TIME        @ZA20491*/ 01383000
         TM    AMBCREAT(RAMB),B'10000000'                          0639 01384000
         BZ    @RT00639                                            0639 01385000
         CLI   RPLERRCD(RRPL),116                                  0639 01386000
         BE    @RF00639                                            0639 01387000
         TM    PLH1ST(RPLH),B'01000000'                            0639 01388000
         BNZ   @RF00639                                            0639 01389000
@RT00639 DS    0H                                                  0640 01390000
*         DO;                       /*                       @ZA11564*/ 01391000
*           PLHIWAIT=ON;            /* FORCE SYNCHRONOUS     @ZA14801*/ 01392000
         OI    PLHIWAIT(RPLH),B'00000001'                          0641 01393000
*           PLHCRPL=RRPL;           /* ENSURE PROPER PTR     @X04SVMR*/ 01394000
         ST    RRPL,PLHCRPL(,RPLH)                                 0642 01395000
*           GEN(IDASVR14);          /* SAVE RETURN REG       @X04SVMR*/ 01396000
         IDASVR14                                                       01397000
*           RBUFC=ZERO;             /* INDICATE ALL          @X04SVMR*/ 01398000
         SLR   RBUFC,RBUFC                                         0644 01399000
*I28:                                                              0645 01400000
*           DO;                     /* IDACALL(IDASBF)               */ 01401000
I28      DS    0H                                                  0646 01402000
*             CALL IDASBF;          /* EXIT TO IDASBF                */ 01403000
         L     @15,@CV01235                                        0646 01404000
         BALR  @14,@15                                             0646 01405000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01406000
         BALR @11,0                                                     01407000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01408000
         USING *,@11                                                    01409000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01410000
         L     @11,=A(@PSTART)                                          01411000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01412000
         USING @PSTART,@11                                              01413000
*           END I28;                /* SUBTRACT BFRS         @X04SVMR*/ 01414000
*           GEN REFS(HWORD4)(IDARST14);/* RESTORE RETURN     @X04SVLC*/ 01415000
         IDARST14                                                       01416000
*           PLHFLG1=CZERO;          /* RESET PLH FLAGS               */ 01417000
         MVI   PLHFLG1(RPLH),B'00000000'                           0653 01418000
*           PLHFLG2=CZERO;          /*                               */ 01419000
         MVI   PLHFLG2(RPLH),B'00000000'                           0654 01420000
*           PLHFLG3=CZERO;          /*                       @X04SVMR*/ 01421000
         MVI   PLHFLG3(RPLH),B'00000000'                           0655 01422000
*           PLHEFLGS=C2ZERO;        /* CLEAR EXCEPTION FLAGS         */ 01423000
         MVC   PLHEFLGS(2,RPLH),C2ZERO                             0656 01424000
*           PLHINVAL=ON;            /* RESET INVALID FLAG            */ 01425000
         OI    PLHINVAL(RPLH),B'00000010'                          0657 01426000
*           PLHARDB=ZERO;           /* UNKNOWN ARDB          @X04SVMR*/ 01427000
         SLR   @10,@10                                             0658 01428000
         ST    @10,PLHARDB(,RPLH)                                  0658 01429000
*         END;                      /*                       @ZA11564*/ 01430000
*       ELSE                        /* IF ONE OF THE ABOVE   @ZA11564*/ 01431000
*         PLHINVAL=OFF;             /* RESET PLH             @ZA11564*/ 01432000
         B     @RC00639                                            0660 01433000
@RF00639 NI    PLHINVAL(RPLH),B'11111101'                          0660 01434000
*       PLHMRPL=ZERO;               /* DISCONNECT RPL        @X04SVMR*/ 01435000
@RC00639 SLR   @10,@10                                             0661 01436000
         ST    @10,PLHMRPL(,RPLH)                                  0661 01437000
*       IF PLHIOSID=OFF THEN        /* IF NORMAL PLH,        @X04SVMR*/ 01438000
         TM    PLHIOSID(RPLH),B'00001000'                          0662 01439000
         BNZ   @RF00662                                            0662 01440000
*         PLHDRCUR=PLHDRCUR-ONE;    /* DECRE CURR PLH        @X04SVMR*/ 01441000
         L     @10,AMBPH(,RAMB)                                    0663 01442000
         LH    @15,PLHDRCUR(,@10)                                  0663 01443000
         BCTR  @15,0                                               0663 01444000
         STH   @15,PLHDRCUR(,@10)                                  0663 01445000
*       PLHAVL=CZERO;               /* MAKE PLH AVAILABLE            */ 01446000
@RF00662 MVI   PLHAVL(RPLH),B'00000000'                            0664 01447000
*       GEN(BR    0);               /* SYNCHRONIZE MP        @Y30SSMR*/ 01448000
         BR    0                                                        01449000
*     END;                          /* END, PLH DISCONNECT   @ZA14801*/ 01450000
*   RFY                                                            0667 01451000
*    (R14,                                                         0667 01452000
*     RWORK1,                                                      0667 01453000
*     RWORK2) RSTD;                 /* GET REGS              @ZA14801*/ 01454000
@RF00637 DS    0H                                                  0668 01455000
*   DO UNTIL RRPL=ZERO;             /* ERR CHK FOR ALL RPLS  @X04SVMR*/ 01456000
@DL00668 DS    0H                                                  0669 01457000
*     IF RPLERREG^='00'X            /* IF AN EXCEPTIONAL             */ 01458000
*       THEN                        /* CONDITION EXISTS,             */ 01459000
         CLI   RPLERREG(RRPL),0                                    0669 01460000
         BE    @RF00669                                            0669 01461000
*       DO;                         /* TAKE EXIT IF HERE     @ZA14801*/ 01462000
*         RWORK2=R14;               /* SAVE REG 14           @ZA14801*/ 01463000
         LR    RWORK2,R14                                          0671 01464000
*I29:                                                              0672 01465000
*         DO;                       /* IDACALL(IDALOCEX)             */ 01466000
I29      DS    0H                                                  0673 01467000
*           CALL IDALOCEX;          /* EXIT TO IDALOCEX              */ 01468000
         L     @15,@CV01246                                        0673 01469000
         BALR  @14,@15                                             0673 01470000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01471000
         BALR @11,0                                                     01472000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01473000
         USING *,@11                                                    01474000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01475000
         L     @11,=A(@PSTART)                                          01476000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01477000
         USING @PSTART,@11                                              01478000
*         END I29;                  /* LOCATE USER EXIT      @ZA14801*/ 01479000
*         R14=RWORK2;               /* RESTORE REG 14        @ZA14801*/ 01480000
         LR    R14,RWORK2                                          0679 01481000
*         IF RPARM1^=ZERO THEN      /* WAS EXIT FOUND?       @ZA14801*/ 01482000
         LTR   RPARM1,RPARM1                                       0680 01483000
         BZ    @RF00680                                            0680 01484000
*           DO;                     /* IF SO, FREE RPL.      @ZA14801*/ 01485000
*                                                                  0681 01486000
*             /*******************************************************/ 01487000
*             /*                                                     */ 01488000
*             /* MAKE CURR AND REST OF RPLS IN THE CHAIN INACTIVE.   */ 01489000
*             /*                                             @ZA14801*/ 01490000
*             /*                                                     */ 01491000
*             /*******************************************************/ 01492000
*                                                                  0682 01493000
*             RWORK1=RRPL;          /* POINT TO CURRENT      @ZA14801*/ 01494000
         LR    RWORK1,RRPL                                         0682 01495000
*             DO UNTIL RWORK1=ZERO; /* FOLLOW CHAIN          @ZA14801*/ 01496000
@DL00683 DS    0H                                                  0684 01497000
*               RWORK1->RPLACTIV=CZERO;/* RELEASE RPL        @ZA14801*/ 01498000
         MVI   RPLACTIV(RWORK1),B'00000000'                        0684 01499000
*               RWORK1=RWORK1->RPLCHAIN;/* NEXT RPL IN CHAIN @ZA14801*/ 01500000
         L     RWORK1,RPLCHAIN(,RWORK1)                            0685 01501000
*             END;                  /* END RPL CHAIN         @ZA14801*/ 01502000
@DE00683 LTR   RWORK1,RWORK1                                       0686 01503000
         BNZ   @DL00683                                            0686 01504000
*             GO TO IDAEXITR;       /* TAKE EXIT FOUND       @ZA14801*/ 01505000
         L     @15,@CV01247                                        0687 01506000
         BR    @15                                                 0687 01507000
*           END;                    /* END, EXIT FOUND       @ZA14801*/ 01508000
*         R15SAVE=RPLERREG;         /* REG 15 = RETURN CODE  @ZA14801*/ 01509000
@RF00680 SLR   @15,@15                                             0689 01510000
         IC    @15,RPLERREG(,RRPL)                                 0689 01511000
         ST    @15,R15SAVE(,R13)                                   0689 01512000
*       END;                        /* END OF ERROR CODE     @ZA14801*/ 01513000
*     RWORK1=RRPL;                  /* SAVE PREV RPL PTR     @ZA14801*/ 01514000
@RF00669 LR    RWORK1,RRPL                                         0691 01515000
*     RRPL=RPLCHAIN;                /* GET NEXT RPL                  */ 01516000
         L     RRPL,RPLCHAIN(,RRPL)                                0692 01517000
*     RWORK1->RPLACTIV=CZERO;       /* RELEASE PREVIOUS RPL  @ZA14801*/ 01518000
         MVI   RPLACTIV(RWORK1),B'00000000'                        0693 01519000
*   END;                            /* END OF ERR CHK LOOP   @X04SVMR*/ 01520000
@DE00668 LTR   RRPL,RRPL                                           0694 01521000
         BNZ   @DL00668                                            0694 01522000
*   RFY                                                            0695 01523000
*    (RWORK1,                                                      0695 01524000
*     RWORK2,                                                      0695 01525000
*     R14) UNRSTD;                  /* RELEASE REGS          @ZA14801*/ 01526000
*   END R1CHECK;                    /* END OF CHECK ROUTINE          */ 01527000
@EL00002 DS    0H                                                  0696 01528000
@EF00002 DS    0H                                                  0696 01529000
@ER00002 BR    @14                                                 0696 01530000
*                                                                  0697 01531000
*/* FINDPLH -- FIND A PLACEHOLDER FOR AN RPL                         */ 01532000
*/*01  FUNCTION = FIND THE PLACEHOLDER THAT BELONGS TO AN RPL OR     */ 01533000
*/*    FIND AN AVAILABLE PLACEHOLDER FOR AN RPL.                     */ 01534000
*/*01  INPUT = STANDARD REGISTERS, RPLH = ?                          */ 01535000
*/*01  OUTPUT = SAME REGISTERS, RPLH = A(PLH), RETURN CODE SET TO    */ 01536000
*/*    INDICATE THE RESULT OF THE PLACEHOLDER SEARCH.                */ 01537000
*                                                                  0697 01538000
*FINDPLH:                                                          0697 01539000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* FIND PLACEHOLDER            */ 01540000
FINDPLH  DS    0H                                                  0698 01541000
*   RESPECIFY                                                      0698 01542000
*     R14 RESTRICTED;               /* SAVE RETURN REGISTER          */ 01543000
*/*  IF THE RPL HAS A VALID PLH PTR USE IT TO SEE IF THE PLACE-      */ 01544000
*/*   HOLDER INDICATED BELONGS TO THE RPL                    @X04SVMR*/ 01545000
*                                                                  0699 01546000
*   RPLH=RPLPLHPT;                  /* GET PLH PTR           @X04SVMR*/ 01547000
         L     RPLH,RPLPLHPT(,RRPL)                                0699 01548000
*   IF RPLH^=ZERO                   /* PLH HERE BEFORE?      @X04SVMR*/ 01549000
*     THEN                          /* IF SO, COME HERE              */ 01550000
         SLR   @15,@15                                             0700 01551000
         CR    RPLH,@15                                            0700 01552000
         BE    @RF00700                                            0700 01553000
*     DO;                                                          0701 01554000
*       IF RPLREQ>=RPLPFMTD&        /* IF I/O SUPPORT        @X04SVMR*/ 01555000
*           RPLREQ<RPLGETIX         /* REQUEST,              @X04SVMR*/ 01556000
*         THEN                      /* BYPASS CHECKING FOR           */ 01557000
         CLI   RPLREQ(RRPL),8                                      0702 01558000
         BL    @RF00702                                            0702 01559000
         CLI   RPLREQ(RRPL),11                                     0702 01560000
         BNL   @RF00702                                            0702 01561000
*         DO;                       /* ACTIVITY ON THE PLH.          */ 01562000
*           PLHSLVLD=OFF;           /* NO 2ND LEVEL IX       @X04SVMR*/ 01563000
         NI    PLHSLVLD(RPLH),B'11011111'                          0704 01564000
*           IF PLHCRPL^=ZERO THEN   /* PRIOR RPL?            @X04SVMR*/ 01565000
         L     @10,PLHCRPL(,RPLH)                                  0705 01566000
         CR    @10,@15                                             0705 01567000
         BE    @RF00705                                            0705 01568000
*             PLHSLRBA=PLHCRPL;     /* YES, SAVE IT          @X04SVMR*/ 01569000
         ST    @10,PLHSLRBA(,RPLH)                                 0706 01570000
*           ELSE                    /* NO PRIOR RPL          @X04SVMR*/ 01571000
*             PLHSLRBA=RRPL;        /* SAVE CURRENT          @X04SVMR*/ 01572000
         B     @RC00705                                            0707 01573000
@RF00705 ST    RRPL,PLHSLRBA(,RPLH)                                0707 01574000
*           PLHMRPL=RRPL;           /* SET MASTER RPL                */ 01575000
@RC00705 ST    RRPL,PLHMRPL(,RPLH)                                 0708 01576000
*           PLHCRPL=RRPL;           /* SET MASTER RPL                */ 01577000
         ST    RRPL,PLHCRPL(,RPLH)                                 0709 01578000
*           PLHASCB=PSAAOLD;        /* SAVE ASCB PTR         @Y30SSMR*/ 01579000
         L     @15,PSAAOLD                                         0710 01580000
         ST    @15,PLHASCB(,RPLH)                                  0710 01581000
*           RETURN CODE(ZERO);      /* EXIT, PLH FOUND       @X04SVMR*/ 01582000
         SLR   @15,@15                                             0711 01583000
@EL00003 DS    0H                                                  0711 01584000
@EF00003 DS    0H                                                  0711 01585000
@ER00003 BR    @14                                                 0711 01586000
*         END;                      /* END FINDPLH--SPCL REQ         */ 01587000
*       RPLH=AMBPH+LENGTH(IDAPLHDR);/* POINT TO 1ST PLH      @X04SVMR*/ 01588000
@RF00702 LA    RPLH,16                                             0713 01589000
         AL    RPLH,AMBPH(,RAMB)                                   0713 01590000
*       DO UNTIL RPLH=ZERO;         /* LOCATE PROPER PLH     @X04SVMR*/ 01591000
@DL00714 DS    0H                                                  0715 01592000
*         IF PLHMRPL=RRPL&PLHAVL^=ZERO THEN/* IF FOUND,      @X04SVMR*/ 01593000
         C     RRPL,PLHMRPL(,RPLH)                                 0715 01594000
         BNE   @RF00715                                            0715 01595000
         CLI   PLHAVL(RPLH),0                                      0715 01596000
         BNE   @RT00715                                            0715 01597000
*           GO TO OLDPLH;           /* REUSE SAME PLH.       @X04SVMR*/ 01598000
*         RPLH=PLHCHAIN;            /* NEXT PLH IN POOL      @X04SVMR*/ 01599000
@RF00715 L     RPLH,PLHCHAIN(,RPLH)                                0717 01600000
*       END;                        /* END OF SEARCH         @X04SVMR*/ 01601000
@DE00714 LTR   RPLH,RPLH                                           0718 01602000
         BNZ   @DL00714                                            0718 01603000
*     END;                          /* END, RPLSTRID CHECK           */ 01604000
*FINDNPLH:                                                         0720 01605000
*                                                                  0720 01606000
*/*  SEARCH THE POOL OF PLACEHOLDERS FOR ONE THAT IS AVAILABLE       */ 01607000
*                                                                  0720 01608000
*   RPLH=AMBPH+LENGTH(IDAPLHDR);    /* POINT TO FIRST PLH            */ 01609000
@RF00700 DS    0H                                                  0720 01610000
FINDNPLH LA    RPLH,16                                             0720 01611000
         AL    RPLH,AMBPH(,RAMB)                                   0720 01612000
*   DO UNTIL RPLH=ZERO;             /* AVAIL PLH SEARCH      @X04SVMR*/ 01613000
@DL00721 DS    0H                                                  0722 01614000
*     TS(PLHAVL);                   /* SEE IF PLH AVAIL      @X04SVMR*/ 01615000
         TS    PLHAVL(RPLH)                                        0722 01616000
*     BC(8,AVLPLH);                 /* YES, BRANCH           @X04SVMR*/ 01617000
         BC    8,AVLPLH                                            0723 01618000
*     RPLH=PLHCHAIN;                /* TRY NEXT PLH          @X04SVMR*/ 01619000
         L     RPLH,PLHCHAIN(,RPLH)                                0724 01620000
*   END;                            /* END, PLH SEARCH               */ 01621000
@DE00721 LTR   RPLH,RPLH                                           0725 01622000
         BNZ   @DL00721                                            0725 01623000
*   IF AMBCREAT=OFF&                /* IF NOT CREATE AND     @X04SVMR*/ 01624000
*       AMBLSR=OFF&                 /* IF NOT LSR AND        @X04SVMR*/ 01625000
*       AMBGSR=OFF THEN             /* NOT GSR, ADD PLH.     @X04SVMR*/ 01626000
         TM    AMBCREAT(RAMB),B'10000000'                          0726 01627000
         BNZ   @RF00726                                            0726 01628000
         TM    AMBLSR(RAMB),B'01100000'                            0726 01629000
         BNZ   @RF00726                                            0726 01630000
*     DO;                           /*                       @X04SVMR*/ 01631000
*       RBUFC=R14;                  /* SAVE RETURN REG       @ZA16062*/ 01632000
*                                                                  0728 01633000
         LR    RBUFC,R14                                           0728 01634000
*       /*************************************************************/ 01635000
*       /*                                                           */ 01636000
*       /* DYNAMIC STRING ADDITION                           @X04SVMR*/ 01637000
*       /*                                                           */ 01638000
*       /*************************************************************/ 01639000
*                                                                  0729 01640000
*I30:                                                              0729 01641000
*       DO;                         /* IDACALL(IDAXGPLH)             */ 01642000
I30      DS    0H                                                  0730 01643000
*         CALL IDAXGPLH;            /* EXIT TO IDAXGPLH              */ 01644000
         L     @15,@CV01249                                        0730 01645000
         BALR  @14,@15                                             0730 01646000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01647000
         BALR @11,0                                                     01648000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01649000
         USING *,@11                                                    01650000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01651000
         L     @11,=A(@PSTART)                                          01652000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01653000
         USING @PSTART,@11                                              01654000
*       END I30;                    /* ADD MORE STRINGS      @X04SVMR*/ 01655000
*       R14=RBUFC;                  /* RESTORE R14           @ZA16062*/ 01656000
         LR    R14,RBUFC                                           0736 01657000
*       RPLFDBWD=ZERO;              /* CLEAR FEEDBACK        @X04SVMR*/ 01658000
         SLR   @15,@15                                             0737 01659000
         ST    @15,RPLFDBWD(,RRPL)                                 0737 01660000
*       IF RPLH^=ZERO THEN          /* IF PLH FOUND,         @X04SVMR*/ 01661000
         CR    RPLH,@15                                            0738 01662000
         BE    @RF00738                                            0738 01663000
*         RETURN CODE(ZERO);        /* GOOD RETURN           @X04SVMR*/ 01664000
         BR    @14                                                 0739 01665000
*     END;                          /* END OF D.S.A.         @X04SVMR*/ 01666000
@RF00738 DS    0H                                                  0741 01667000
*/*  IF NO PLACEHOLDERS ARE FREE, AN ERROR MUST BE INDICATED         */ 01668000
*                                                                  0741 01669000
*NOPLH:                                                            0741 01670000
*   RPLERRCD=RPLNOPLH;              /* SET NO PLH FOUND              */ 01671000
@RF00726 DS    0H                                                  0741 01672000
NOPLH    MVI   RPLERRCD(RRPL),X'40'                                0741 01673000
*   RPLERREG='08'X;                 /* INDICATE PLH ERROR            */ 01674000
         LA    @15,8                                               0742 01675000
         STC   @15,RPLERREG(,RRPL)                                 0742 01676000
*   RETURN CODE(RPLERREG);          /* RETURN TO CALLER              */ 01677000
         BR    @14                                                 0743 01678000
*/*  IF AN AVAILABLE PLACEHOLDER WAS FOUND, POINT IT TO THE FIRST    */ 01679000
*/*  RPL IN THE CHAIN                                                */ 01680000
*                                                                  0744 01681000
*AVLPLH:                                                           0744 01682000
*   PLHMRPL=RRPL;                   /* SET UP RPL ADDRESS            */ 01683000
AVLPLH   ST    RRPL,PLHMRPL(,RPLH)                                 0744 01684000
*   PLHDRCUR=PLHDRCUR+ONE;          /* ADD ONE TO CURR       @X04SVMR*/ 01685000
         L     @15,AMBPH(,RAMB)                                    0745 01686000
         LA    @10,1                                               0745 01687000
         AH    @10,PLHDRCUR(,@15)                                  0745 01688000
         STH   @10,PLHDRCUR(,@15)                                  0745 01689000
*   IF PLHDRCUR>PLHDRMAX THEN       /* IF NEW HIGH,          @X04SVMR*/ 01690000
         CH    @10,PLHDRMAX(,@15)                                  0746 01691000
         BNH   @RF00746                                            0746 01692000
*     PLHDRMAX=PLHDRCUR;            /* SET NEW MAX ACTIV     @X04SVMR*/ 01693000
         STH   @10,PLHDRMAX(,@15)                                  0747 01694000
*OLDPLH:                                                           0748 01695000
*   RBUFC=ADDR(IFGACB);             /* LOAD PTR TO ACB       @ZA30396*/ 01696000
@RF00746 DS    0H                                                  0748 01697000
OLDPLH   L     RBUFC,RPLDACB(,RRPL)                                0748 01698000
*   GEN(LA RBUFC,0(RBUFC));         /* DROP HI ORD BYTE      @ZA30396*/ 01699000
         LA RBUFC,0(RBUFC)                                              01700000
*   PLHACB=RBUFC;                   /* SET PLH PTR           @ZA30396*/ 01701000
         ST    RBUFC,PLHACB(,RPLH)                                 0750 01702000
*   PLHASCB=PSAAOLD;                /* SAVE ASCB PTR         @Y30SSMR*/ 01703000
         L     @15,PSAAOLD                                         0751 01704000
         ST    @15,PLHASCB(,RPLH)                                  0751 01705000
*   PLHRETO=PLHRETOS;               /* RESET OFFSET          @ZA16007*/ 01706000
         LH    @15,PLHRETOS(,RPLH)                                 0752 01707000
         STH   @15,PLHRETO(,RPLH)                                  0752 01708000
*   PLHRSCS=CZERO;                  /* CLEAR RESOURCE OWNERSHIP BITS    01709000
*                                      FOR TERMRPL           @ZA32757*/ 01710000
         MVI   PLHRSCS(RPLH),B'00000000'                           0753 01711000
*   PLHTMRPL=CZERO;                 /* CLEAR TERMRPL PROCESS BITS  0754 01712000
*                                                            @ZA32757*/ 01713000
         MVI   PLHTMRPL(RPLH),B'00000000'                          0754 01714000
*   RETURN CODE(ZERO);              /* EXIT WITH NO ERROR            */ 01715000
         SLR   @15,@15                                             0755 01716000
         BR    @14                                                 0755 01717000
*   RESPECIFY                                                      0756 01718000
*     R14 UNRESTRICTED;             /* DROP REGISTER                 */ 01719000
*   RESPECIFY                                                      0757 01720000
*     RWORK0 UNRESTRICTED;          /* DROP REGISTER                 */ 01721000
*   END FINDPLH;                    /* END OF LOCATE PLH             */ 01722000
*                                                                  0759 01723000
*/*                       FINDOPLH                                   */ 01724000
*/*FUNCTION = FIND OLD PLH FOR CHECK, ENDREQ, MRKBFR, OR TERMRPL.    */ 01725000
*/*INPUT = STANDARD REGISTERS, RPLH = ?                              */ 01726000
*/*OUTPUT = STANDARD REGISTERS, RPLH SET, RETURN CODE IN R15.        */ 01727000
*                                                                  0759 01728000
*FINDOPLH:                                                         0759 01729000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* FINDOPLH              @X04SVMR*/ 01730000
FINDOPLH DS    0H                                                  0760 01731000
*   RFY                                                            0760 01732000
*    (R14,                                                         0760 01733000
*     RWORK0) RSTD;                 /* GET REGS              @X04SVMR*/ 01734000
*   RFY                                                            0761 01735000
*     RWORK1 RSTD;                  /*                       @ZA28981*/ 01736000
*   RPLH=RPLPLHPT;                  /* POINT TO PLH FR RPL   @ZA28981*/ 01737000
         L     RPLH,RPLPLHPT(,RRPL)                                0762 01738000
*   RWORK1=AMBPH+LENGTH(IDAPLHDR);  /* POINT TO 1ST PLH      @ZA28981*/ 01739000
         LA    RWORK1,16                                           0763 01740000
         AL    RWORK1,AMBPH(,RAMB)                                 0763 01741000
*   DO UNTIL RWORK1=0;              /* LOOP THRU PLHS        @ZA28981*/ 01742000
@DL00764 DS    0H                                                  0765 01743000
*     IF RWORK1=RPLH THEN           /* PLH FR RPL MATCH      @ZA28981*/ 01744000
         CR    RWORK1,RPLH                                         0765 01745000
         BNE   @RF00765                                            0765 01746000
*       RWORK1=0;                   /* YES-FORCE EXIT        @ZA28981*/ 01747000
         SLR   RWORK1,RWORK1                                       0766 01748000
*     ELSE                          /* NO-                   @ZA28981*/ 01749000
*       DO;                         /*                       @ZA28981*/ 01750000
         B     @RC00765                                            0767 01751000
@RF00765 DS    0H                                                  0768 01752000
*         RWORK1=RWORK1->PLHCHAIN;  /* NEXT PLH              @ZA30746*/ 01753000
         L     RWORK1,PLHCHAIN(,RWORK1)                            0768 01754000
*         IF RWORK1=0 THEN          /* IF NONE               @ZA28981*/ 01755000
         SLR   @15,@15                                             0769 01756000
         CR    RWORK1,@15                                          0769 01757000
         BNE   @RF00769                                            0769 01758000
*           RPLPLHPT=0;             /* PLH FR RPL INVALID    @ZA28981*/ 01759000
         ST    @15,RPLPLHPT(,RRPL)                                 0770 01760000
*       END;                        /*                       @ZA28981*/ 01761000
@RF00769 DS    0H                                                  0772 01762000
*   END;                            /*                       @ZA28981*/ 01763000
@RC00765 DS    0H                                                  0772 01764000
@DE00764 SLR   @15,@15                                             0772 01765000
         CR    RWORK1,@15                                          0772 01766000
         BNE   @DL00764                                            0772 01767000
*   RPLH=RPLPLHPT;                  /* POINT TO PLH          @X04SVMR*/ 01768000
         L     RPLH,RPLPLHPT(,RRPL)                                0773 01769000
*   IF RPLH=ZERO|                   /* IF NO PLH PTR,        @X04SVMR*/ 01770000
*       PLHMRPL^=RRPL|              /* OR WRONG RPL,         @X04SVMR*/ 01771000
*       PLHAVL=ZERO THEN            /* OR PLH NOT BUSY       @X04SVMR*/ 01772000
         CR    RPLH,@15                                            0774 01773000
         BE    @RT00774                                            0774 01774000
         C     RRPL,PLHMRPL(,RPLH)                                 0774 01775000
         BNE   @RT00774                                            0774 01776000
         CLI   PLHAVL(RPLH),0                                      0774 01777000
         BNE   @RF00774                                            0774 01778000
@RT00774 DS    0H                                                  0775 01779000
*     RETURN CODE('08'X);           /* ERROR RETURN          @X04SVMR*/ 01780000
         LA    @15,8                                               0775 01781000
@EL00004 DS    0H                                                  0775 01782000
@EF00004 DS    0H                                                  0775 01783000
@ER00004 BR    @14                                                 0775 01784000
*   ELSE                            /* R15 = 0 IF OK         @X04SVMR*/ 01785000
*     RETURN CODE(ZERO);            /* NORMAL RETURN         @X04SVMR*/ 01786000
@RF00774 SLR   @15,@15                                             0776 01787000
         BR    @14                                                 0776 01788000
*   END FINDOPLH;                   /* END OF FINDOPLH       @X04SVMR*/ 01789000
*                                                                  0778 01790000
*/* R1ARSTRT -- ASYNCHRONOUS RESTART OF DEFERRED REQUESTS            */ 01791000
*/* FUNCTION = CHECK FOR AND RESTART DEFERRED REQUESTS.              */ 01792000
*/* INPUT = STANDARD VSAM REGISTERS.                         @ZA14801*/ 01793000
*/* OUTPUT = STANDARD VSAM REGISTERS.                        @ZA06117*/ 01794000
*                                                                  0778 01795000
*R1ARSTRT:                                                         0778 01796000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* RESTART ROUTINE       @X04SVMR*/ 01797000
R1ARSTRT DS    0H                                                  0779 01798000
*   RFY                                                            0779 01799000
*     R14 RSTD;                     /* SAVE RETURN ADDR      @X04SVMR*/ 01800000
*/*  IF THE REQUEST HAD CONTROL OF A NON-SHAREABLE RESOURCE, OTHER   */ 01801000
*/*  PLACEHOLDERS MUST BE EXAMINED TO SEE IF ONE OF THEM HAD ITS     */ 01802000
*/*  PROCESSING DEFERRED. IF SO, AN ATTEMPT MUST BE MADE TO RESTART  */ 01803000
*/*  THE DEFERRED REQUEST.                                           */ 01804000
*                                                                  0780 01805000
*   IF(AMBPH^=0&                    /* IF AMBPH PTR PRESENT  @X04SVLC*/ 01806000
*       PLHDRREQ^=ZERO)|            /* SEE IF DEFERRED       @X04SVLC*/ 01807000
*       (AMBUPLH^=0&                /* IF AMBUPLH PTR PRES   @X04SVLC*/ 01808000
*       AMBUPLH->PLHDRREQ^=ZERO) THEN/* SEE IF DEFERRED      @X04SVLC*/ 01809000
         SLR   @15,@15                                             0780 01810000
         L     @10,AMBPH(,RAMB)                                    0780 01811000
         CR    @10,@15                                             0780 01812000
         BE    @GL00031                                            0780 01813000
         C     @15,PLHDRREQ(,@10)                                  0780 01814000
         BNE   @RT00780                                            0780 01815000
@GL00031 SLR   @15,@15                                             0780 01816000
         L     @10,AMBUPLH(,RAMB)                                  0780 01817000
         CR    @10,@15                                             0780 01818000
         BE    @RF00780                                            0780 01819000
         C     @15,PLHDRREQ(,@10)                                  0780 01820000
         BE    @RF00780                                            0780 01821000
@RT00780 DS    0H                                                  0781 01822000
*     DO;                           /*                       @X04SVMR*/ 01823000
*       GEN(IDASVR14);              /* SAVE REG 14           @ZA14801*/ 01824000
         IDASVR14                                                       01825000
*I31:                                                              0783 01826000
*       DO;                         /* IDACALL(IDARSTRT)             */ 01827000
I31      DS    0H                                                  0784 01828000
*         CALL IDARSTRT;            /* EXIT TO IDARSTRT              */ 01829000
         L     @15,@CV01245                                        0784 01830000
         BALR  @14,@15                                             0784 01831000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01832000
         BALR @11,0                                                     01833000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01834000
         USING *,@11                                                    01835000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01836000
         L     @11,=A(@PSTART)                                          01837000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01838000
         USING @PSTART,@11                                              01839000
*       END I31;                    /* ATTEMPT RESTART       @ZA14801*/ 01840000
*       GEN(IDARST14);              /* RESTORE REG 14        @ZA14801*/ 01841000
         IDARST14                                                       01842000
*     END;                          /* END OF RESTART TRY    @X04SVMR*/ 01843000
*   END R1ARSTRT;                   /* END OF RESTART        @X04SVMR*/ 01844000
@EL00005 DS    0H                                                  0792 01845000
@EF00005 DS    0H                                                  0792 01846000
@ER00005 BR    @14                                                 0792 01847000
*                                                                  0793 01848000
*/* R1PREFMT -- PREFORMAT DATA OR INDEX                              */ 01849000
*/*01 FUNCTION = PREFORMAT A CONTROL AREA OF DATA OR PREFORMAT A     */ 01850000
*/*              TRACK OF INDEX.                                     */ 01851000
*/*01 INPUT = RRPL POINTS TO THE RPL, RPLDDDD HAS THE STARTING RBA,  */ 01852000
*/*           RPLSTRID HAS PLH POINTER, RAMB IS THE DATA AMB.        */ 01853000
*/*01 OUTPUT = RRPL IS UNCHANGED, RPLH IS SET, RAMB ADDRESSES        */ 01854000
*/*            EITHER THE INDEX OR THE DATA AMB.                     */ 01855000
*                                                                  0793 01856000
*R1PREFMT:                                                         0793 01857000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* PREFORMAT ROUTINE             */ 01858000
R1PREFMT DS    0H                                                  0794 01859000
*   RFY                                                            0794 01860000
*     R14 RSTD;                     /* GUARD RETURN REGISTER         */ 01861000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01862000
         IDASVR14                                                       01863000
*   RFY                                                            0796 01864000
*     R14 UNRSTD;                   /* RELEASE R14 FOR USE           */ 01865000
*   IF RPLREQ=RPLPFMTI&AMBLNUM>ONE  /* IF THIS IS AN INDEX   @XM01683*/ 01866000
*     THEN                          /* REQUEST, CHANGE AMB.          */ 01867000
         CLI   RPLREQ(RRPL),9                                      0797 01868000
         BNE   @RF00797                                            0797 01869000
         L     @10,RPLDACB(,RRPL)                                  0797 01870000
         L     @10,ACBAMBL(,@10)                                   0797 01871000
         LH    @15,AMBLNUM(,@10)                                   0797 01872000
         C     @15,@CF00053                                        0797 01873000
         BNH   @RF00797                                            0797 01874000
*     RAMB=AMBLIX;                                                 0798 01875000
         L     RAMB,AMBLIX(,@10)                                   0798 01876000
*   RPARM1=RPLDDDD;                 /* GET STARTING RBA              */ 01877000
@RF00797 L     RPARM1,RPLDDDD(,RRPL)                               0799 01878000
*I32:                                                              0800 01879000
*   DO;                             /* IDACALL(IDA019RK)             */ 01880000
I32      DS    0H                                                  0801 01881000
*     CALL IDA019RK;                /* EXIT TO IDA019RK              */ 01882000
         L     @15,@CV01237                                        0801 01883000
         BALR  @14,@15                                             0801 01884000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01885000
         BALR @11,0                                                     01886000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01887000
         USING *,@11                                                    01888000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01889000
         L     @11,=A(@PSTART)                                          01890000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01891000
         USING @PSTART,@11                                              01892000
*   END I32;                        /* CALL PREFORMAT ROUTINE        */ 01893000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 01894000
         IDARST14                                                       01895000
*   END R1PREFMT;                   /* END OF PREFORMAT REQ.         */ 01896000
@EL00006 DS    0H                                                  0808 01897000
@EF00006 DS    0H                                                  0808 01898000
@ER00006 BR    @14                                                 0808 01899000
*                                                                  0809 01900000
*/* R1FRCIO -- FORCE I/O COMPLETION AND DEFERRED WRITE INITIATION    */ 01901000
*/* FUNCTION = FORCE WRITE THE DATA AND THE INDEX.                   */ 01902000
*/* INPUT = RRPL, RPLSTRID, AND RAMB ARE SET AS FOR R1PREFMT.        */ 01903000
*/* OUTPUT = RRPL IS SET, RPLH IS SET, RAMB ADDRESSES DATA OR INDEX. */ 01904000
*                                                                  0809 01905000
*R1FRCIO:                                                          0809 01906000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0809 01907000
R1FRCIO  DS    0H                                                  0810 01908000
*   RFY                                                            0810 01909000
*     R14 RSTD;                     /* GUARD RETURN REGISTER         */ 01910000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01911000
         IDASVR14                                                       01912000
*   RFY                                                            0812 01913000
*     R14 UNRSTD;                   /* MAKE REG.14 AVAILABLE         */ 01914000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC            */ 01915000
         L     @10,PLHDBUFC(,RPLH)                                 0813 01916000
         LR    RBUFC,@10                                           0813 01917000
*   IF BUFCMW=ON THEN               /* MAKE SURE RBAS AGREE          */ 01918000
         TM    BUFCMW(RBUFC),B'10000000'                           0814 01919000
         BNO   @RF00814                                            0814 01920000
*     DO;                           /*                       @X04SVMR*/ 01921000
*       BUFCDDDD=BUFCORBA;          /* FOR DATA INSERT.              */ 01922000
         L     @15,BUFCORBA(,RBUFC)                                0816 01923000
         ST    @15,BUFCDDDD(,RBUFC)                                0816 01924000
*/*  CAUSE DATA I/O TO BE DONE                                       */ 01925000
*                                                                  0817 01926000
*       RBUFC=PLHDBUFC->BUFCNXT2;   /* GET OLDEST BFR        @ZA10851*/ 01927000
         L     RBUFC,BUFCNXT2-1(,@10)                              0817 01928000
         LA    RBUFC,0(,RBUFC)                                     0817 01929000
*I33:                                                              0818 01930000
*       DO;                         /* IDACALL(IDAWRBFR)             */ 01931000
I33      DS    0H                                                  0819 01932000
*         CALL IDAWRBFR;            /* EXIT TO IDAWRBFR              */ 01933000
         L     @15,@CV01236                                        0819 01934000
         BALR  @14,@15                                             0819 01935000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01936000
         BALR @11,0                                                     01937000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01938000
         USING *,@11                                                    01939000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01940000
         L     @11,=A(@PSTART)                                          01941000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01942000
         USING @PSTART,@11                                              01943000
*       END I33;                    /* WRITE DATA                    */ 01944000
*       RBUFC=PLHDBUFC;             /* POINT DATA            @ZA19099*/ 01945000
         L     RBUFC,PLHDBUFC(,RPLH)                               0825 01946000
*       IF RPLERREG='00'X THEN      /* IF NO ERROR, OX05143          */ 01947000
         CLI   RPLERREG(RRPL),0                                    0826 01948000
         BNE   @RF00826                                            0826 01949000
*         BUFCMW=ON;                /* FORCE WRITE OX05143           */ 01950000
         OI    BUFCMW(RBUFC),B'10000000'                           0827 01951000
*     END;                          /* END OF MW ON          @X04SVMR*/ 01952000
*   ELSE                            /* BUFCMW OFF            @X04SVMR*/ 01953000
*     DO;                           /*                       @ZA10851*/ 01954000
         B     @RC00814                                            0829 01955000
@RF00814 DS    0H                                                  0830 01956000
*       RBUFC=PLHDBUFC->BUFCNXT2;   /* GET OLDEST BFR        @ZA10851*/ 01957000
         L     @10,PLHDBUFC(,RPLH)                                 0830 01958000
         L     RBUFC,BUFCNXT2-1(,@10)                              0830 01959000
         LA    RBUFC,0(,RBUFC)                                     0830 01960000
*I34:                                                              0831 01961000
*       DO;                         /* IDACALL(IDAWRBFR)             */ 01962000
I34      DS    0H                                                  0832 01963000
*         CALL IDAWRBFR;            /* EXIT TO IDAWRBFR              */ 01964000
         L     @15,@CV01236                                        0832 01965000
         BALR  @14,@15                                             0832 01966000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01967000
         BALR @11,0                                                     01968000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01969000
         USING *,@11                                                    01970000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01971000
         L     @11,=A(@PSTART)                                          01972000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01973000
         USING @PSTART,@11                                              01974000
*       END I34;                    /* FLUSH I/O             @ZA10851*/ 01975000
*     END;                          /*                       @ZA10851*/ 01976000
*   IF RPLERREG='00'X&              /* IF DATA WAS WRITTEN OK        */ 01977000
*       AMDDST='1'B&                /* AND AN INDEX EXISTS,          */ 01978000
*       AMBLNUM>ONE                 /* (NOT DATA ONLY PROC)          */ 01979000
*     THEN                          /* WRITE IT TOO.                 */ 01980000
@RC00814 CLI   RPLERREG(RRPL),0                                    0839 01981000
         BNE   @RF00839                                            0839 01982000
         L     @10,AMBDSB(,RAMB)                                   0839 01983000
         TM    AMDDST(@10),B'10000000'                             0839 01984000
         BNO   @RF00839                                            0839 01985000
         L     @10,RPLDACB(,RRPL)                                  0839 01986000
         L     @10,ACBAMBL(,@10)                                   0839 01987000
         LH    @15,AMBLNUM(,@10)                                   0839 01988000
         C     @15,@CF00053                                        0839 01989000
         BNH   @RF00839                                            0839 01990000
*     DO;                                                          0840 01991000
*                                                                  0840 01992000
*       /*************************************************************/ 01993000
*       /*                                                           */ 01994000
*       /* SET UP FOR AN INDEX WRITE                                 */ 01995000
*       /*                                                           */ 01996000
*       /*************************************************************/ 01997000
*                                                                  0841 01998000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB            */ 01999000
         L     RAMB,AMBLIX(,@10)                                   0841 02000000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC           */ 02001000
*                                                                  0842 02002000
         L     RBUFC,PLHIBUFC(,RPLH)                               0842 02003000
*       /*************************************************************/ 02004000
*       /*                                                           */ 02005000
*       /* CAUSE INDEX TO BE WRITTEN IF NECESSARY                    */ 02006000
*       /*                                                           */ 02007000
*       /*************************************************************/ 02008000
*                                                                  0843 02009000
*       IF BUFCMW=ON                /* IF INDEX RECORD NOT           */ 02010000
*         THEN                      /* WRITTEN, WRITE IT.            */ 02011000
         TM    BUFCMW(RBUFC),B'10000000'                           0843 02012000
         BNO   @RF00843                                            0843 02013000
*         DO;                                                      0844 02014000
*I35:                                                              0845 02015000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 02016000
I35      DS    0H                                                  0846 02017000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 02018000
         L     @15,@CV01236                                        0846 02019000
         BALR  @14,@15                                             0846 02020000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02021000
         BALR @11,0                                                     02022000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02023000
         USING *,@11                                                    02024000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02025000
         L     @11,=A(@PSTART)                                          02026000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02027000
         USING @PSTART,@11                                              02028000
*           END I35;                /* WRITE INDEX RECORD            */ 02029000
*           IF RPLERREG='00'X THEN  /* IF OK, CAUSE A REWRITE        */ 02030000
         CLI   RPLERREG(RRPL),0                                    0852 02031000
         BNE   @RF00852                                            0852 02032000
*             BUFCMW=ON;            /* IN CASE RECORD UPDATED.       */ 02033000
         OI    BUFCMW(RBUFC),B'10000000'                           0853 02034000
*         END;                      /* END OF INDEX WRITE            */ 02035000
@RF00852 DS    0H                                                  0855 02036000
*       RAMB=AMBLDTA;               /* POINT BACK TO DATA            */ 02037000
@RF00843 L     @10,RPLDACB(,RRPL)                                  0855 02038000
         L     @10,ACBAMBL(,@10)                                   0855 02039000
         L     RAMB,AMBLDTA(,@10)                                  0855 02040000
*     END;                          /* END OF INDEX EXISTS           */ 02041000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 02042000
@RF00839 DS    0H                                                  0857 02043000
         IDARST14                                                       02044000
*   END R1FRCIO;                    /* END OF FORCE I/O RTN          */ 02045000
@EL00007 DS    0H                                                  0858 02046000
@EF00007 DS    0H                                                  0858 02047000
@ER00007 BR    @14                                                 0858 02048000
*                                                                  0859 02049000
*/* R1TERM -- TERMINATE REQUEST                                      */ 02050000
*/*01  FUNCTION = RELEASE RPLS FOR REUSE BY POSTING THEM AND MAKING  */ 02051000
*/*              THEM INACTIVE.                                      */ 02052000
*/*01  INPUT = RRPL IS THE FIRST RPL TO RELEASE, RPARM1 IS THE CHAIN */ 02053000
*/*            PTR OF THE LAST RPL TO RELEASE (ZERO IF ALL RELEASED).*/ 02054000
*/*01  OUTPUT = RPLS FREED AND POSTED, RWORK1 CHANGED, RRPL IS THE   */ 02055000
*/*             LAST RPL FREED, AND RPARM1 IS UNCHANGED.             */ 02056000
*                                                                  0859 02057000
*R1TERM:                                                           0859 02058000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* TERMINATE REQUEST             */ 02059000
R1TERM   DS    0H                                                  0860 02060000
*   RFY                                                            0860 02061000
*    (RWORK1,                                                      0860 02062000
*     R14) RSTD;                    /* GET REGISTERS                 */ 02063000
*   DO WHILE RRPL^=RPARM1;          /* FREE ALL RPLS DESIRED         */ 02064000
         B     @DE00861                                            0861 02065000
@DL00861 DS    0H                                                  0862 02066000
*     RWORK1=R1;                    /* SAVE REGISTER ONE             */ 02067000
         LR    RWORK1,R1                                           0862 02068000
*     IF RPLECBSW=OFF               /* IF THE ECB IS LOCAL,          */ 02069000
*       THEN                        /* POINT TO IT.                  */ 02070000
         TM    RPLECBSW(RRPL),B'00000001'                          0863 02071000
         BNZ   @RF00863                                            0863 02072000
*       R1=ADDR(RPLECB);                                           0864 02073000
         LA    @15,RPLECB(,RRPL)                                   0864 02074000
         LR    R1,@15                                              0864 02075000
*     ELSE                          /* OTHERWISE, GET EXT. ECB       */ 02076000
*       R1=ADDR(USERECB);                                          0865 02077000
         B     @RC00863                                            0865 02078000
@RF00863 L     R1,RPLECBPT(,RRPL)                                  0865 02079000
*     GEN(POST  (1));               /* POST ECB COMPLETE             */ 02080000
@RC00863 DS    0H                                                  0866 02081000
         POST  (1)                                                      02082000
*     R1=RWORK1;                    /* RESTORE REGISTER ONE          */ 02083000
         LR    R1,RWORK1                                           0867 02084000
*     RPLACTIV=CZERO;               /* MAKE RPL INACTIVE             */ 02085000
         MVI   RPLACTIV(RRPL),B'00000000'                          0868 02086000
*     RRPL=RPLCHAIN;                /* NEXT RPL IN CHAIN             */ 02087000
         L     RRPL,RPLCHAIN(,RRPL)                                0869 02088000
*   END;                            /* END OF RPL FREEING            */ 02089000
@DE00861 CR    RRPL,RPARM1                                         0870 02090000
         BNE   @DL00861                                            0870 02091000
*BADPOST:                                                          0871 02092000
*   RETURN;                         /* RETURN TO CALLER              */ 02093000
@EL00008 DS    0H                                                  0871 02094000
@EF00008 DS    0H                                                  0871 02095000
@ER00008 BR    @14                                                 0871 02096000
*   END R1TERM;                     /* ALL RPLS DESIRED FREE         */ 02097000
         B     @EL00008                                            0872 02098000
*   GEN(IDAPATCH);                  /* DEFINE A PATCH AREA           */ 02099000
         IDAPATCH                                                       02100000
*   END IDA019R1                    /* END OF DECODE                 */ 02101000
*                                                                  0874 02102000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02103000
*/*%INCLUDE SYSLIB  (LCGPLSSW)                                       */ 02104000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02105000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02106000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02107000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */ 02108000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02109000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02110000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02111000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02112000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02113000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02114000
*/*%INCLUDE SYSLIB  (IDABLPRM)                                       */ 02115000
*                                                                  0874 02116000
*       ;                                                          0874 02117000
         B     @EL00001                                            0874 02118000
@DATA    DS    0H                                                       02119000
@DATD    DSECT                                                          02120000
         DS    0F                                                       02121000
IDA019R1 CSECT                                                          02122000
         DS    0F                                                       02123000
@CF00053 DC    F'1'                                                     02124000
@CH00053 EQU   @CF00053+2                                               02125000
@CF00067 DC    F'4'                                                     02126000
@CF00036 DC    F'31'                                                    02127000
@CF01256 DC    XL4'000000FF'                                            02128000
@DATD    DSECT                                                          02129000
         DS    0D                                                       02130000
IDA019R1 CSECT                                                          02131000
         DS    0F                                                       02132000
@SIZDATD DC    AL1(0)                                                   02133000
         DC    AL3(@ENDDATD-@DATD)                                      02134000
@CV01235 DC    V(IDASBF)                                                02135000
@CV01236 DC    V(IDAWRBFR)                                              02136000
@CV01237 DC    V(IDA019RK)                                              02137000
@CV01238 DC    V(IDAENDRQ)                                              02138000
@CV01239 DC    V(IDAMRKBF)                                              02139000
@CV01240 DC    V(IDA019RR)                                              02140000
@CV01241 DC    V(IDA019RX)                                              02141000
@CV01242 DC    V(IDASCHBF)                                              02142000
@CV01243 DC    V(IDAWRTBF)                                              02143000
@CV01244 DC    V(IDAFREEB)                                              02144000
@CV01245 DC    V(IDARSTRT)                                              02145000
@CV01246 DC    V(IDALOCEX)                                              02146000
@CV01247 DC    V(IDAEXITR)                                              02147000
@CV01248 DC    V(IDA019R4)                                              02148000
@CV01249 DC    V(IDAXGPLH)                                              02149000
@CV01250 DC    V(IDA019R5)                                              02150000
@CV01251 DC    V(IDA019R8)                                              02151000
@CV01252 DC    V(IDAEXEX)                                               02152000
@CV01253 DC    V(IDA019SN)                                              02153000
@CV01387 DC    V(IDA019ST)                                              02154000
         DS    0D                                                       02155000
HWORD4   DC    H'4'                                                     02156000
         DS    CL2                                                      02157000
POSTED   DC    X'40000000'                                              02158000
C2ZERO   DC    X'0000'                                                  02159000
         DS    CL2                                                      02160000
CP0001@  DC    AL4(PUT)                                                 02161000
         DC    AL4(CHECK)                                               02162000
         DC    AL4(POINT)                                               02163000
         DC    AL4(ENDREQ)                                              02164000
         DC    AL4(ERASE)                                               02165000
         DC    AL4(VERIFY)                                              02166000
         DC    AL4(INVALID)                                             02167000
         DC    AL4(PFMTD)                                               02168000
         DC    AL4(PFMTI)                                               02169000
         DC    AL4(FRCIO)                                               02170000
         DC    AL4(GETIX)                                               02171000
         DC    AL4(PUTIX)                                               02172000
         DC    AL4(SCHBFR)                                              02173000
         DC    AL4(MRKBFR)                                              02174000
         DC    AL4(WRTBFR)                                              02175000
         DC    AL4(INVALID)                                             02176000
         DC    AL4(INVALID)                                             02177000
         DC    AL4(INVALID)                                             02178000
         DC    AL4(TERMRPL)                                             02179000
@DATD    DSECT                                                          02180000
TWENTY8  EQU   28                       OFFSET TO REG 2                 02181000
@DATD    DSECT                                                          02182000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02183000
@ENDDATD EQU   *                                                        02184000
IDA019R1 CSECT                                                          02185000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02186000
@01      EQU   01                                                       02187000
@02      EQU   02                                                       02188000
@03      EQU   03                                                       02189000
@04      EQU   04                                                       02190000
@05      EQU   05                                                       02191000
@06      EQU   06                                                       02192000
@07      EQU   07                                                       02193000
@08      EQU   08                                                       02194000
@09      EQU   09                                                       02195000
@10      EQU   10                                                       02196000
@11      EQU   11                                                       02197000
@12      EQU   12                                                       02198000
@13      EQU   13                                                       02199000
@14      EQU   14                                                       02200000
@15      EQU   15                                                       02201000
RWORK0   EQU   @00                                                      02202000
RRPL     EQU   @01                                                      02203000
R1       EQU   @01                                                      02204000
RPLH     EQU   @02                                                      02205000
RAMB     EQU   @03                                                      02206000
RBUFC    EQU   @04                                                      02207000
RWORK1   EQU   @05                                                      02208000
RWORK2   EQU   @06                                                      02209000
RWORK3   EQU   @07                                                      02210000
RWORK4   EQU   @08                                                      02211000
RPARM1   EQU   @12                                                      02212000
R13      EQU   @13                                                      02213000
R14      EQU   @14                                                      02214000
R15      EQU   @15                                                      02215000
RWORK5   EQU   @09                                                      02216000
R10      EQU   @10                                                      02217000
R11      EQU   @11                                                      02218000
PSA      EQU   0                                                        02219000
FLCRNPSW EQU   PSA                                                      02220000
FLCROPSW EQU   PSA+8                                                    02221000
FLCICCW2 EQU   PSA+16                                                   02222000
PSAEEPSW EQU   PSA+132                                                  02223000
PSAESPSW EQU   PSA+136                                                  02224000
FLCSVILC EQU   PSAESPSW+1                                               02225000
PSAEPPSW EQU   PSA+140                                                  02226000
FLCPIILC EQU   PSAEPPSW+1                                               02227000
FLCPICOD EQU   PSAEPPSW+2                                               02228000
PSAPICOD EQU   FLCPICOD+1                                               02229000
FLCTEA   EQU   PSAEPPSW+4                                               02230000
FLCPER   EQU   PSA+152                                                  02231000
FLCMCLA  EQU   PSA+168                                                  02232000
FLCIOEL  EQU   FLCMCLA+4                                                02233000
FLCIOA   EQU   FLCMCLA+16                                               02234000
FLCFSA   EQU   FLCMCLA+80                                               02235000
PSAAOLD  EQU   PSA+548                                                  02236000
PSASUPER EQU   PSA+552                                                  02237000
PSASUP1  EQU   PSASUPER                                                 02238000
PSASUP2  EQU   PSASUPER+1                                               02239000
PSASUP3  EQU   PSASUPER+2                                               02240000
PSASUP4  EQU   PSASUPER+3                                               02241000
PSACLHT  EQU   PSA+640                                                  02242000
PSALKSA  EQU   PSA+696                                                  02243000
PSAHLHI  EQU   PSA+760                                                  02244000
PSADSSFL EQU   PSA+836                                                  02245000
PSADSSF1 EQU   PSADSSFL                                                 02246000
PSADSSF3 EQU   PSADSSFL+2                                               02247000
PSADSSF4 EQU   PSADSSFL+3                                               02248000
PSARSVT  EQU   PSA+896                                                  02249000
IFGRPL   EQU   0                                                        02250000
RPLCOMN  EQU   IFGRPL                                                   02251000
RPLIDWD  EQU   RPLCOMN                                                  02252000
RPLREQ   EQU   RPLIDWD+2                                                02253000
RPLLEN   EQU   RPLIDWD+3                                                02254000
RPLPLHPT EQU   RPLCOMN+4                                                02255000
RPLECB   EQU   RPLCOMN+8                                                02256000
RPLFDBWD EQU   RPLCOMN+12                                               02257000
RPLFDBK  EQU   RPLFDBWD+1                                               02258000
RPLRTNCD EQU   RPLFDBK                                                  02259000
RPLERREG EQU   RPLRTNCD                                                 02260000
RPLCNDCD EQU   RPLFDBK+1                                                02261000
RPLCMPON EQU   RPLCNDCD                                                 02262000
RPLFDB2  EQU   RPLCMPON                                                 02263000
RPLERRCD EQU   RPLCNDCD+1                                               02264000
RPLFDB3  EQU   RPLERRCD                                                 02265000
RPLKEYLE EQU   RPLCOMN+16                                               02266000
RPLKEYL  EQU   RPLKEYLE                                                 02267000
RPLSTRID EQU   RPLCOMN+18                                               02268000
RPLDACB  EQU   RPLCOMN+24                                               02269000
RPLARG   EQU   RPLCOMN+36                                               02270000
RPLOPTCD EQU   RPLCOMN+40                                               02271000
RPLOPT1  EQU   RPLOPTCD                                                 02272000
RPLLOC   EQU   RPLOPT1                                                  02273000
RPLDIR   EQU   RPLOPT1                                                  02274000
RPLSEQ   EQU   RPLOPT1                                                  02275000
RPLSKP   EQU   RPLOPT1                                                  02276000
RPLASY   EQU   RPLOPT1                                                  02277000
RPLGEN   EQU   RPLOPT1                                                  02278000
RPLECBSW EQU   RPLOPT1                                                  02279000
RPLOPT2  EQU   RPLOPTCD+1                                               02280000
RPLKEY   EQU   RPLOPT2                                                  02281000
RPLADR   EQU   RPLOPT2                                                  02282000
RPLADD   EQU   RPLADR                                                   02283000
RPLCNV   EQU   RPLOPT2                                                  02284000
RPLWAITX EQU   RPLOPT2                                                  02285000
RPLUPD   EQU   RPLOPT2                                                  02286000
RPLOPT3  EQU   RPLOPTCD+2                                               02287000
RPLNXTRP EQU   RPLCOMN+44                                               02288000
RPLCHAIN EQU   RPLNXTRP                                                 02289000
RPLRLEN  EQU   RPLCOMN+48                                               02290000
RPLOPTC2 EQU   RPLCOMN+56                                               02291000
RPLOPT5  EQU   RPLOPTC2                                                 02292000
RPLWRTYP EQU   RPLOPT5                                                  02293000
RPLOPT6  EQU   RPLOPTC2+1                                               02294000
RPLUNTYP EQU   RPLOPT6                                                  02295000
RPLOPT7  EQU   RPLOPTC2+2                                               02296000
RPLCNOPT EQU   RPLOPT7                                                  02297000
RPLOPT8  EQU   RPLOPTC2+3                                               02298000
RPLRBAR  EQU   RPLCOMN+60                                               02299000
RPLAIXID EQU   RPLRBAR+2                                                02300000
RPLDDDD  EQU   RPLRBAR+4                                                02301000
RPLEXTDS EQU   RPLCOMN+68                                               02302000
RPLEXTD1 EQU   RPLEXTDS                                                 02303000
RPLACTIV EQU   RPLCOMN+69                                               02304000
IFGACB   EQU   0                                                        02305000
ACBCOMN  EQU   IFGACB                                                   02306000
ACBLENG  EQU   ACBCOMN+2                                                02307000
ACBLENG2 EQU   ACBLENG                                                  02308000
ACBAMBL  EQU   ACBCOMN+4                                                02309000
ACBJWA   EQU   ACBAMBL                                                  02310000
ACBMACRF EQU   ACBCOMN+12                                               02311000
ACBMACR1 EQU   ACBMACRF                                                 02312000
ACBADR   EQU   ACBMACR1                                                 02313000
ACBCNV   EQU   ACBMACR1                                                 02314000
ACBMACR2 EQU   ACBMACRF+1                                               02315000
ACBBUFPL EQU   ACBCOMN+20                                               02316000
ACBMACR3 EQU   ACBBUFPL                                                 02317000
ACBRECFM EQU   ACBCOMN+24                                               02318000
ACBCCTYP EQU   ACBCOMN+25                                               02319000
ACBOPT   EQU   ACBCOMN+26                                               02320000
ACBDSORG EQU   ACBOPT                                                   02321000
ACBCROPS EQU   ACBDSORG                                                 02322000
ACBEXLST EQU   ACBCOMN+36                                               02323000
ACBDDNM  EQU   ACBCOMN+40                                               02324000
ACBAMETH EQU   ACBDDNM+3                                                02325000
ACBOFLGS EQU   ACBCOMN+48                                               02326000
ACBEXFG  EQU   ACBOFLGS                                                 02327000
ACBIOSFG EQU   ACBOFLGS                                                 02328000
ACBINFLG EQU   ACBCOMN+50                                               02329000
ACBUJFCB EQU   ACBCOMN+52                                               02330000
ACBBLKSZ EQU   ACBCOMN+60                                               02331000
IDAAMBL  EQU   0                                                        02332000
AMBLEOV  EQU   IDAAMBL+12                                               02333000
AMBLEFLG EQU   AMBLEOV                                                  02334000
AMBLDDNM EQU   IDAAMBL+16                                               02335000
AMBLIDF  EQU   AMBLDDNM                                                 02336000
AMBLQ    EQU   AMBLIDF+7                                                02337000
AMBLVC   EQU   IDAAMBL+28                                               02338000
AMBLTYPE EQU   IDAAMBL+30                                               02339000
AMBLPATH EQU   AMBLTYPE                                                 02340000
AMBLSHAR EQU   IDAAMBL+33                                               02341000
AMBLFLG1 EQU   IDAAMBL+35                                               02342000
AMBLFLG2 EQU   IDAAMBL+36                                               02343000
AMBLNUM  EQU   IDAAMBL+38                                               02344000
AMBLDTA  EQU   IDAAMBL+52                                               02345000
AMBLIX   EQU   IDAAMBL+56                                               02346000
IDAAMB   EQU   0                                                        02347000
AMBPH    EQU   IDAAMB+12                                                02348000
AMBDSB   EQU   IDAAMB+20                                                02349000
AMBEOVR  EQU   IDAAMB+24                                                02350000
AMBFLG0  EQU   AMBEOVR                                                  02351000
AMBFLG1  EQU   IDAAMB+25                                                02352000
AMBCREAT EQU   AMBFLG1                                                  02353000
AMBUBF   EQU   AMBFLG1                                                  02354000
AMBDSORG EQU   IDAAMB+26                                                02355000
AMBIOBAD EQU   IDAAMB+28                                                02356000
AMBINFL  EQU   IDAAMB+42                                                02357000
AMBDEBPT EQU   IDAAMB+44                                                02358000
AMBOFLGS EQU   IDAAMB+48                                                02359000
AMBFLG2  EQU   IDAAMB+49                                                02360000
AMBEOVPT EQU   IDAAMB+56                                                02361000
AMBUPLH  EQU   IDAAMB+80                                                02362000
AMBCSWD1 EQU   IDAAMB+84                                                02363000
AMBAFLG  EQU   AMBCSWD1                                                 02364000
AMBLSR   EQU   AMBAFLG                                                  02365000
AMBGSR   EQU   AMBAFLG                                                  02366000
AMBEXEX  EQU   IDAAMB+100                                               02367000
AMBTRACE EQU   IDAAMB+120                                               02368000
IDAAMDSB EQU   0                                                        02369000
AMDATTR  EQU   IDAAMDSB+1                                               02370000
AMDDST   EQU   AMDATTR                                                  02371000
AMDRRDS  EQU   AMDATTR                                                  02372000
AMDNEST  EQU   IDAAMDSB+4                                               02373000
AMDKEYLN EQU   IDAAMDSB+8                                               02374000
AMDCINV  EQU   IDAAMDSB+20                                              02375000
AMDHLRBA EQU   IDAAMDSB+28                                              02376000
AMDSSRBA EQU   IDAAMDSB+32                                              02377000
AMDATTR3 EQU   IDAAMDSB+40                                              02378000
AMDSTAT  EQU   IDAAMDSB+48                                              02379000
IDAPLHDR EQU   0                                                        02380000
PLHDRREQ EQU   IDAPLHDR+4                                               02381000
PLHDRMAX EQU   IDAPLHDR+8                                               02382000
PLHDRCUR EQU   IDAPLHDR+10                                              02383000
IDAPLH   EQU   0                                                        02384000
PLHAVL   EQU   IDAPLH                                                   02385000
PLHFLG1  EQU   IDAPLH+2                                                 02386000
PLHENDRQ EQU   PLHFLG1                                                  02387000
PLHFLG2  EQU   IDAPLH+3                                                 02388000
PLHIWAIT EQU   PLHFLG2                                                  02389000
PLHEFLGS EQU   IDAPLH+4                                                 02390000
PLH1ST   EQU   PLHEFLGS                                                 02391000
PLHINVAL EQU   PLHEFLGS                                                 02392000
PLHFLG3  EQU   IDAPLH+6                                                 02393000
PLHSLVLD EQU   PLHFLG3                                                  02394000
PLHAFLGS EQU   IDAPLH+7                                                 02395000
PLHIOSID EQU   PLHAFLGS                                                 02396000
PLHACB   EQU   IDAPLH+8                                                 02397000
PLHMRPL  EQU   IDAPLH+16                                                02398000
PLHCRPL  EQU   IDAPLH+20                                                02399000
PLHCRBA  EQU   IDAPLH+28                                                02400000
PLHJORBA EQU   PLHCRBA                                                  02401000
PLHJCODE EQU   IDAPLH+40                                                02402000
PLHRSCS  EQU   IDAPLH+43                                                02403000
PLHARDB  EQU   IDAPLH+44                                                02404000
PLHDBUFC EQU   IDAPLH+52                                                02405000
PLHDIOB  EQU   IDAPLH+76                                                02406000
PLHCHAIN EQU   IDAPLH+112                                               02407000
PLHRETO  EQU   IDAPLH+116                                               02408000
PLHRETOS EQU   IDAPLH+118                                               02409000
PLHRET1  EQU   IDAPLH+120                                               02410000
PLHEOVPT EQU   IDAPLH+180                                               02411000
PLHIBUFC EQU   IDAPLH+188                                               02412000
PLHIXSPL EQU   IDAPLH+200                                               02413000
PLHSSRBA EQU   PLHIXSPL                                                 02414000
PLHWAX   EQU   IDAPLH+232                                               02415000
PLHSLRBA EQU   IDAPLH+244                                               02416000
PLHKEYPT EQU   IDAPLH+248                                               02417000
PLHTMRPL EQU   IDAPLH+265                                               02418000
PLHECB   EQU   IDAPLH+268                                               02419000
PLHASCB  EQU   IDAPLH+272                                               02420000
PLHERRET EQU   IDAPLH+276                                               02421000
PLHEND   EQU   IDAPLH+280                                               02422000
IDABUFDR EQU   0                                                        02423000
BUFDRCIX EQU   IDABUFDR+9                                               02424000
BUFDRFLG EQU   IDABUFDR+11                                              02425000
IDABUFC  EQU   0                                                        02426000
BUFCAVL  EQU   IDABUFC                                                  02427000
BUFCFLG1 EQU   IDABUFC+1                                                02428000
BUFCIOFL EQU   IDABUFC+2                                                02429000
BUFCMW   EQU   BUFCIOFL                                                 02430000
BUFCFLG2 EQU   IDABUFC+3                                                02431000
BUFCPLH  EQU   IDABUFC+4                                                02432000
BUFCDDDD EQU   IDABUFC+8                                                02433000
BUFCORBA EQU   IDABUFC+12                                               02434000
BUFCINV  EQU   IDABUFC+28                                               02435000
BUFCNXT2 EQU   IDABUFC+37                                               02436000
IDABLPRM EQU   0                                                        02437000
BLPBUFLP EQU   IDABLPRM+4                                               02438000
BLPUACB  EQU   BLPBUFLP                                                 02439000
BLPFLAGS EQU   IDABLPRM+10                                              02440000
BLPFLAG1 EQU   BLPFLAGS                                                 02441000
BLPFLAG2 EQU   BLPFLAGS+1                                               02442000
BLPCORE  EQU   IDABLPRM+16                                              02443000
BLPGFLG  EQU   BLPCORE                                                  02444000
BLPIOACB EQU   IDABLPRM+24                                              02445000
BLPBUFL  EQU   0                                                        02446000
BLPBRLFG EQU   BLPBUFL+4                                                02447000
RBA      EQU   0                                                        02448000
ECB      EQU   0                                                        02449000
ECBPOST  EQU   ECB                                                      02450000
USERECB  EQU   0                                                        02451000
R15SAVE  EQU   16                                                       02452000
R0SAVE   EQU   20                                                       02453000
CL0001@  EQU   0                                                        02454000
CORE     EQU   0                                                        02455000
PLHKEY   EQU   0                                                        02456000
PLHPDL   EQU   0                                                        02457000
PLHPDLE  EQU   0                                                        02458000
PLHRRN   EQU   0                                                        02459000
R1SAVE   EQU   24                                                       02460000
USEREXIT EQU   0                                                        02461000
PSARSVTE EQU   PSARSVT                                                  02462000
PLHEXTEN EQU   PLHEND                                                   02463000
PLHBMWRK EQU   PLHEXTEN+5                                               02464000
PLHBMSV1 EQU   PLHEXTEN+8                                               02465000
RPLECBPT EQU   RPLECB                                                   02466000
BUFCRSC1 EQU   BUFCAVL                                                  02467000
FLC      EQU   PSA                                                      02468000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02469000
PLHBMSV5 EQU   PLHEXTEN+24                                              02470000
PLHBMSV4 EQU   PLHEXTEN+20                                              02471000
PLHBMSV3 EQU   PLHEXTEN+16                                              02472000
PLHBMSV2 EQU   PLHEXTEN+12                                              02473000
PLHRDCNT EQU   PLHEXTEN+6                                               02474000
PLHBMSOV EQU   PLHBMWRK                                                 02475000
PLHBEUC  EQU   PLHBMWRK                                                 02476000
PLHBMRDF EQU   PLHBMWRK                                                 02477000
@NM00068 EQU   PLHEXTEN+4                                               02478000
PLHRESR1 EQU   PLHEXTEN                                                 02479000
PSARSAV  EQU   PSARSVTE+60                                              02480000
PSARSTK  EQU   PSARSVTE+56                                              02481000
PSAESAV3 EQU   PSARSVTE+52                                              02482000
PSAESTK3 EQU   PSARSVTE+48                                              02483000
PSAESAV2 EQU   PSARSVTE+44                                              02484000
PSAESTK2 EQU   PSARSVTE+40                                              02485000
PSAESAV1 EQU   PSARSVTE+36                                              02486000
PSAESTK1 EQU   PSARSVTE+32                                              02487000
PSAPSAV  EQU   PSARSVTE+28                                              02488000
PSAPSTK  EQU   PSARSVTE+24                                              02489000
PSAMSAV  EQU   PSARSVTE+20                                              02490000
PSAMSTK  EQU   PSARSVTE+16                                              02491000
PSASSAV  EQU   PSARSVTE+12                                              02492000
PSASSTK  EQU   PSARSVTE+8                                               02493000
PSANSTK  EQU   PSARSVTE+4                                               02494000
PSACSTK  EQU   PSARSVTE                                                 02495000
ECBWAIT  EQU   ECB                                                      02496000
BLPBFLCT EQU   BLPBUFL+6                                                02497000
@NM00077 EQU   BLPBUFL+5                                                02498000
@NM00076 EQU   BLPBRLFG                                                 02499000
BLPBFLST EQU   BLPBRLFG                                                 02500000
BLPBUFSZ EQU   BLPBUFL                                                  02501000
BLPERFLG EQU   IDABLPRM+51                                              02502000
@NM00075 EQU   IDABLPRM+49                                              02503000
BLPOFLGS EQU   IDABLPRM+48                                              02504000
@NM00074 EQU   IDABLPRM+28                                              02505000
BLPDSORG EQU   BLPIOACB+3                                               02506000
@NM00073 EQU   BLPIOACB                                                 02507000
BLPGAD   EQU   BLPCORE+5                                                02508000
BLPGSP   EQU   BLPCORE+4                                                02509000
BLPGSZ   EQU   BLPCORE+1                                                02510000
BLPGPG   EQU   BLPGFLG                                                  02511000
BLPGREQ  EQU   BLPGFLG                                                  02512000
BLPOACB  EQU   IDABLPRM+13                                              02513000
BLPOCODE EQU   IDABLPRM+12                                              02514000
BLPFRSTR EQU   BLPFLAG2                                                 02515000
BLPFIOSR EQU   BLPFLAG2                                                 02516000
BLPFINDX EQU   BLPFLAG2                                                 02517000
BLPFDATA EQU   BLPFLAG2                                                 02518000
BLPFPRIM EQU   BLPFLAG2                                                 02519000
BLPFPATH EQU   BLPFLAG2                                                 02520000
BLPFUPGR EQU   BLPFLAG2                                                 02521000
BLPFPART EQU   BLPFLAG2                                                 02522000
BLPFSTAD EQU   BLPFLAG1                                                 02523000
BLPFBFRF EQU   BLPFLAG1                                                 02524000
BLPFIOBF EQU   BLPFLAG1                                                 02525000
BLPFGSR  EQU   BLPFLAG1                                                 02526000
BLPFLSR  EQU   BLPFLAG1                                                 02527000
BLPFDEL  EQU   BLPFLAG1                                                 02528000
BLPFBLD  EQU   BLPFLAG1                                                 02529000
BLPFDBDC EQU   BLPFLAG1                                                 02530000
BLPSTRNO EQU   IDABLPRM+9                                               02531000
BLPKEYLN EQU   IDABLPRM+8                                               02532000
BLPIOPLH EQU   BLPUACB                                                  02533000
@NM00072 EQU   IDABLPRM+2                                               02534000
BLPACBST EQU   IDABLPRM+1                                               02535000
BLPACBID EQU   IDABLPRM                                                 02536000
BUFCEND  EQU   IDABUFC+64                                               02537000
BUFCUCDN EQU   IDABUFC+60                                               02538000
BUFCUCUP EQU   IDABUFC+56                                               02539000
BUFCMDBT EQU   IDABUFC+52                                               02540000
BUFCHAIN EQU   IDABUFC+48                                               02541000
BUFXORBA EQU   IDABUFC+44                                               02542000
BUFXIRBA EQU   IDABUFC+40                                               02543000
BUFCIDXL EQU   IDABUFC+36                                               02544000
BUFCDSPC EQU   IDABUFC+32                                               02545000
BUFCWLEN EQU   BUFCINV                                                  02546000
BUFCNXT1 EQU   IDABUFC+24                                               02547000
BUFCBAD  EQU   IDABUFC+20                                               02548000
BUFCCPA  EQU   IDABUFC+16                                               02549000
BUFCAMB  EQU   BUFCPLH                                                  02550000
@NM00071 EQU   BUFCFLG2                                                 02551000
BUFCEOD  EQU   BUFCFLG2                                                 02552000
BUFCBSYW EQU   BUFCFLG2                                                 02553000
BUFCBSYR EQU   BUFCFLG2                                                 02554000
BUFCNLAS EQU   BUFCFLG2                                                 02555000
BUFCXDDR EQU   BUFCFLG2                                                 02556000
BUFCFIX  EQU   BUFCIOFL                                                 02557000
BUFCPFCP EQU   BUFCIOFL                                                 02558000
BUFCXEDB EQU   BUFCIOFL                                                 02559000
BUFCWC   EQU   BUFCIOFL                                                 02560000
BUFCREAL EQU   BUFCIOFL                                                 02561000
BUFCRRD  EQU   BUFCIOFL                                                 02562000
BUFCFMT  EQU   BUFCIOFL                                                 02563000
BUFCEPT  EQU   BUFCFLG1                                                 02564000
BUFCEXC  EQU   BUFCFLG1                                                 02565000
BUFCVAL  EQU   BUFCFLG1                                                 02566000
BUFCER2  EQU   BUFCFLG1                                                 02567000
BUFCER1  EQU   BUFCFLG1                                                 02568000
BUFCINS  EQU   BUFCFLG1                                                 02569000
BUFCSEG  EQU   BUFCFLG1                                                 02570000
BUFCUPG  EQU   BUFCFLG1                                                 02571000
BUFCUCNT EQU   BUFCAVL                                                  02572000
@NM00070 EQU   IDABUFDR+16                                              02573000
BUFDBUFC EQU   IDABUFDR+12                                              02574000
@NM00069 EQU   BUFDRFLG                                                 02575000
BUFDRAVL EQU   BUFDRFLG                                                 02576000
BUFDRREL EQU   BUFDRFLG                                                 02577000
BUFDRTSB EQU   IDABUFDR+10                                              02578000
BUFDRMAX EQU   BUFDRCIX                                                 02579000
BUFDRPFN EQU   IDABUFDR+8                                               02580000
BUFDRPFB EQU   IDABUFDR+4                                               02581000
BUFDRLEN EQU   IDABUFDR+2                                               02582000
BUFDRNO  EQU   IDABUFDR+1                                               02583000
BUFDRID  EQU   IDABUFDR                                                 02584000
@NM00067 EQU   IDAPLH+266                                               02585000
@NM00066 EQU   PLHTMRPL                                                 02586000
PLHTMIOB EQU   PLHTMRPL                                                 02587000
PLHTMINX EQU   PLHTMRPL                                                 02588000
PLHTMDTA EQU   PLHTMRPL                                                 02589000
PLHTMDIW EQU   PLHTMRPL                                                 02590000
PLHTMBUF EQU   PLHTMRPL                                                 02591000
PLHTERM  EQU   PLHTMRPL                                                 02592000
PLHDRMSK EQU   IDAPLH+264                                               02593000
PLHR13   EQU   IDAPLH+260                                               02594000
PLHPARM1 EQU   IDAPLH+256                                               02595000
PLHDRRSC EQU   IDAPLH+252                                               02596000
PLHSRCSG EQU   IDAPLH+242                                               02597000
PLHNOSEG EQU   IDAPLH+240                                               02598000
PLHLLOR  EQU   IDAPLH+236                                               02599000
PLHXPLH  EQU   PLHWAX                                                   02600000
@NM00065 EQU   PLHIXSPL+8                                               02601000
PLHIXBFC EQU   PLHIXSPL+4                                               02602000
PLHHIREC EQU   PLHSSRBA                                                 02603000
PLHISPLP EQU   IDAPLH+196                                               02604000
PLHRBUFC EQU   IDAPLH+192                                               02605000
PLHNRBA  EQU   IDAPLH+184                                               02606000
PLHDDDD  EQU   PLHEOVPT                                                 02607000
PLHAR14  EQU   IDAPLH+176                                               02608000
@NM00064 EQU   IDAPLH+172                                               02609000
@NM00063 EQU   IDAPLH+168                                               02610000
PLHASAVE EQU   IDAPLH+164                                               02611000
PLHAMB   EQU   IDAPLH+108                                               02612000
PLHSAVE6 EQU   IDAPLH+104                                               02613000
PLHSAVE5 EQU   IDAPLH+100                                               02614000
PLHSAVE4 EQU   IDAPLH+96                                                02615000
PLHSAVE3 EQU   IDAPLH+92                                                02616000
PLHSAVE2 EQU   IDAPLH+88                                                02617000
PLHSAVE1 EQU   IDAPLH+84                                                02618000
PLHARET  EQU   IDAPLH+80                                                02619000
PLHIIOB  EQU   PLHDIOB                                                  02620000
PLHSRSID EQU   IDAPLH+74                                                02621000
PLHRDFC  EQU   IDAPLH+72                                                02622000
PLHRDFP  EQU   IDAPLH+68                                                02623000
PLHFSP   EQU   IDAPLH+64                                                02624000
PLHRECP  EQU   IDAPLH+60                                                02625000
PLHNBUFC EQU   IDAPLH+56                                                02626000
PLHLRECL EQU   IDAPLH+48                                                02627000
@NM00062 EQU   PLHRSCS                                                  02628000
PLHDBPER EQU   PLHRSCS                                                  02629000
PLHDSERR EQU   PLHRSCS                                                  02630000
PLHASYER EQU   PLHRSCS                                                  02631000
@NM00061 EQU   PLHRSCS                                                  02632000
PLHBUFHD EQU   PLHRSCS                                                  02633000
PLHINEOV EQU   PLHRSCS                                                  02634000
PLHEOVR  EQU   IDAPLH+42                                                02635000
PLHRCODE EQU   IDAPLH+41                                                02636000
PLHUCODE EQU   PLHJCODE                                                 02637000
PLHJNRBA EQU   IDAPLH+36                                                02638000
PLHJRNLL EQU   IDAPLH+32                                                02639000
PLHUPECB EQU   PLHJORBA                                                 02640000
PLHDSIDA EQU   IDAPLH+24                                                02641000
PLHBFRNO EQU   IDAPLH+15                                                02642000
PLHFRCNT EQU   IDAPLH+14                                                02643000
PLHRMIN  EQU   IDAPLH+13                                                02644000
PLHDSTYP EQU   IDAPLH+12                                                02645000
PLHRAE   EQU   PLHAFLGS                                                 02646000
PLHRABWD EQU   PLHAFLGS                                                 02647000
PLHDBDC  EQU   PLHAFLGS                                                 02648000
PLHVAMB  EQU   PLHAFLGS                                                 02649000
PLHIOSRQ EQU   PLHAFLGS                                                 02650000
PLHDRLM  EQU   PLHAFLGS                                                 02651000
PLHEOVDF EQU   PLHFLG3                                                  02652000
PLHRVRS  EQU   PLHFLG3                                                  02653000
PLHBWD   EQU   PLHFLG3                                                  02654000
PLHRAHD  EQU   PLHFLG3                                                  02655000
PLHSRBSG EQU   PLHFLG3                                                  02656000
@NM00060 EQU   PLHEFLGS+1                                               02657000
PLHRSTRT EQU   PLHEFLGS+1                                               02658000
PLHDSCAN EQU   PLHEFLGS                                                 02659000
PLHEODX  EQU   PLHEFLGS                                                 02660000
PLHNOADV EQU   PLHEFLGS                                                 02661000
PLHSRINV EQU   PLHEFLGS                                                 02662000
PLHSKPER EQU   PLHEFLGS                                                 02663000
PLHNOSPC EQU   PLHEFLGS                                                 02664000
PLHSVADV EQU   PLHFLG2                                                  02665000
PLHCIINS EQU   PLHFLG2                                                  02666000
PLHKRE   EQU   PLHFLG2                                                  02667000
PLHADDTE EQU   PLHFLG2                                                  02668000
PLHKEYMD EQU   PLHFLG2                                                  02669000
PLHSQINS EQU   PLHFLG2                                                  02670000
PLHUPD   EQU   PLHFLG2                                                  02671000
@NM00059 EQU   PLHFLG1                                                  02672000
PLHDRPND EQU   PLHFLG1                                                  02673000
PLHASYRQ EQU   PLHFLG1                                                  02674000
PLHRDEXC EQU   PLHFLG1                                                  02675000
PLHSSR   EQU   PLHFLG1                                                  02676000
PLHASKBF EQU   PLHFLG1                                                  02677000
PLHEOVW  EQU   PLHFLG1                                                  02678000
PLHATV   EQU   IDAPLH+1                                                 02679000
PLHIOSDQ EQU   IDAPLHDR+12                                              02680000
PLHELTH  EQU   IDAPLHDR+2                                               02681000
PLHCNT   EQU   IDAPLHDR+1                                               02682000
PLHID    EQU   IDAPLHDR                                                 02683000
AMDEXCP  EQU   AMDSTAT+44                                               02684000
AMDNCAS  EQU   AMDSTAT+40                                               02685000
AMDNCIS  EQU   AMDSTAT+36                                               02686000
AMDASPA  EQU   AMDSTAT+32                                               02687000
AMDRETR  EQU   AMDSTAT+28                                               02688000
AMDUPR   EQU   AMDSTAT+24                                               02689000
AMDIREC  EQU   AMDSTAT+20                                               02690000
AMDDELR  EQU   AMDSTAT+16                                               02691000
AMDNLR   EQU   AMDSTAT+12                                               02692000
AMDNEXT  EQU   AMDSTAT+10                                               02693000
AMDNIL   EQU   AMDSTAT+8                                                02694000
AMDSTSP  EQU   AMDSTAT                                                  02695000
@NM00058 EQU   IDAAMDSB+41                                              02696000
@NM00057 EQU   AMDATTR3                                                 02697000
AMDLM    EQU   AMDATTR3                                                 02698000
AMDWAIT  EQU   AMDATTR3                                                 02699000
AMDBIND  EQU   AMDATTR3                                                 02700000
AMDFAULT EQU   AMDATTR3                                                 02701000
AMDUNQ   EQU   AMDATTR3                                                 02702000
AMDPARDB EQU   IDAAMDSB+36                                              02703000
AMDMAXRR EQU   AMDSSRBA                                                 02704000
AMDNSLOT EQU   AMDHLRBA                                                 02705000
AMDLRECL EQU   IDAAMDSB+24                                              02706000
AMDFSCI  EQU   IDAAMDSB+16                                              02707000
AMDFSCA  EQU   IDAAMDSB+14                                              02708000
AMDCIPCA EQU   IDAAMDSB+12                                              02709000
AMDPCTCI EQU   IDAAMDSB+11                                              02710000
AMDPCTCA EQU   IDAAMDSB+10                                              02711000
AMDRKP   EQU   IDAAMDSB+6                                               02712000
AMDAXRKP EQU   AMDNEST                                                  02713000
AMDLEN   EQU   IDAAMDSB+2                                               02714000
AMDSPAN  EQU   AMDATTR                                                  02715000
AMDRANGE EQU   AMDATTR                                                  02716000
AMDORDER EQU   AMDATTR                                                  02717000
AMDREPL  EQU   AMDATTR                                                  02718000
AMDSDT   EQU   AMDATTR                                                  02719000
AMDWCK   EQU   AMDATTR                                                  02720000
AMDSBID  EQU   IDAAMDSB                                                 02721000
AMBVIOT  EQU   IDAAMB+116                                               02722000
AMBSZCP  EQU   IDAAMB+114                                               02723000
AMBSZFW  EQU   IDAAMB+112                                               02724000
AMBSZWR  EQU   IDAAMB+110                                               02725000
AMBSZRD  EQU   IDAAMB+108                                               02726000
AMBWSHD  EQU   IDAAMB+96                                                02727000
AMBCPA   EQU   IDAAMB+92                                                02728000
AMBBM2SH EQU   IDAAMB+88                                                02729000
AMBRDCNT EQU   AMBCSWD1+2                                               02730000
@NM00056 EQU   AMBCSWD1+1                                               02731000
@NM00055 EQU   AMBAFLG                                                  02732000
AMBCFX   EQU   AMBAFLG                                                  02733000
AMBSIS   EQU   AMBAFLG                                                  02734000
AMBDFR   EQU   AMBAFLG                                                  02735000
AMBICI   EQU   AMBAFLG                                                  02736000
@NM00054 EQU   AMBAFLG                                                  02737000
AMBPAMBL EQU   IDAAMB+76                                                02738000
AMBPIXP  EQU   IDAAMB+72                                                02739000
@NM00053 EQU   IDAAMB+68                                                02740000
AMBIWA   EQU   IDAAMB+64                                                02741000
AMBWKA   EQU   IDAAMB+60                                                02742000
AMBAMBXN EQU   AMBEOVPT                                                 02743000
AMBEDB   EQU   IDAAMB+52                                                02744000
AMBRPT   EQU   IDAAMB+50                                                02745000
AMBPUG   EQU   AMBFLG2                                                  02746000
AMBBUSY  EQU   AMBOFLGS                                                 02747000
AMBEXFG  EQU   AMBOFLGS                                                 02748000
@NM00052 EQU   AMBOFLGS                                                 02749000
AMBOPEN  EQU   AMBOFLGS                                                 02750000
@NM00051 EQU   AMBOFLGS                                                 02751000
AMBDEBAD EQU   AMBDEBPT+1                                               02752000
AMBIFLGS EQU   AMBDEBPT                                                 02753000
AMBAMETH EQU   IDAAMB+43                                                02754000
AMBUPX   EQU   AMBINFL                                                  02755000
AMBUCRA  EQU   AMBINFL                                                  02756000
AMBSCRA  EQU   AMBINFL                                                  02757000
AMBCAT   EQU   AMBINFL                                                  02758000
@NM00050 EQU   AMBINFL                                                  02759000
@NM00049 EQU   AMBINFL                                                  02760000
AMBTIOT  EQU   IDAAMB+40                                                02761000
@NM00048 EQU   IDAAMB+38                                                02762000
AMBDDSN  EQU   IDAAMB+35                                                02763000
AMBCDSN  EQU   IDAAMB+32                                                02764000
AMBIOMB  EQU   AMBIOBAD                                                 02765000
@NM00047 EQU   AMBDSORG+1                                               02766000
AMBDORGA EQU   AMBDSORG+1                                               02767000
@NM00046 EQU   AMBDSORG                                                 02768000
AMBINBUF EQU   AMBFLG1                                                  02769000
AMBJRN   EQU   AMBFLG1                                                  02770000
AMBSPEED EQU   AMBFLG1                                                  02771000
AMBPCAT  EQU   AMBFLG1                                                  02772000
AMBMCAT  EQU   AMBFLG1                                                  02773000
AMBTYPE  EQU   AMBFLG1                                                  02774000
@NM00045 EQU   AMBFLG0                                                  02775000
AMBPSDS  EQU   AMBFLG0                                                  02776000
AMBCACB  EQU   IDAAMB+16                                                02777000
AMBBUFC  EQU   IDAAMB+8                                                 02778000
AMBLINK  EQU   IDAAMB+4                                                 02779000
AMBLEN   EQU   IDAAMB+2                                                 02780000
AMBRSC   EQU   IDAAMB+1                                                 02781000
AMBID    EQU   IDAAMB                                                   02782000
AMBLCMB  EQU   IDAAMBL+64                                               02783000
AMBLBIB  EQU   IDAAMBL+60                                               02784000
AMBLMIDS EQU   IDAAMBL+42                                               02785000
AMBLNIDS EQU   IDAAMBL+41                                               02786000
@NM00044 EQU   IDAAMBL+40                                               02787000
AMBLNST  EQU   IDAAMBL+37                                               02788000
@NM00043 EQU   AMBLFLG2                                                 02789000
AMBLSTAG EQU   AMBLFLG2                                                 02790000
@NM00042 EQU   AMBLFLG2                                                 02791000
AMBLDUMY EQU   AMBLFLG1                                                 02792000
AMBLCAT  EQU   AMBLFLG1                                                 02793000
AMBLUCRA EQU   AMBLFLG1                                                 02794000
AMBLSCRA EQU   AMBLFLG1                                                 02795000
AMBLVVIC EQU   AMBLFLG1                                                 02796000
AMBLUPD  EQU   AMBLFLG1                                                 02797000
AMBLCINV EQU   AMBLFLG1                                                 02798000
AMBLFULL EQU   AMBLFLG1                                                 02799000
AMBLLEN  EQU   IDAAMBL+34                                               02800000
@NM00041 EQU   AMBLSHAR                                                 02801000
AMBLWRIT EQU   AMBLSHAR                                                 02802000
AMBLCATO EQU   AMBLSHAR                                                 02803000
AMBLPRIM EQU   AMBLSHAR                                                 02804000
AMBLID   EQU   IDAAMBL+32                                               02805000
@NM00040 EQU   IDAAMBL+31                                               02806000
@NM00039 EQU   AMBLTYPE                                                 02807000
AMBLFIX  EQU   AMBLTYPE                                                 02808000
AMBLBASE EQU   AMBLTYPE                                                 02809000
AMBLAIX  EQU   AMBLTYPE                                                 02810000
AMBLUPGR EQU   AMBLTYPE                                                 02811000
AMBLENO  EQU   AMBLVC+1                                                 02812000
AMBLVRT  EQU   AMBLVC                                                   02813000
AMBLXPT  EQU   IDAAMBL+24                                               02814000
AMBLDFR  EQU   AMBLQ                                                    02815000
AMBLESDS EQU   AMBLQ                                                    02816000
AMBLKSDS EQU   AMBLQ                                                    02817000
AMBLUBF  EQU   AMBLQ                                                    02818000
AMBLFSTP EQU   AMBLQ                                                    02819000
AMBLLSR  EQU   AMBLQ                                                    02820000
AMBLGSR  EQU   AMBLQ                                                    02821000
AMBLDDC  EQU   AMBLQ                                                    02822000
AMBLDCI  EQU   AMBLIDF+4                                                02823000
AMBLCACB EQU   AMBLIDF                                                  02824000
@NM00038 EQU   AMBLEOV+2                                                02825000
AMBLCOMP EQU   AMBLEOV+1                                                02826000
AMBLESET EQU   AMBLEFLG                                                 02827000
AMBLWAIT EQU   AMBLEFLG                                                 02828000
AMBLACB  EQU   IDAAMBL+8                                                02829000
AMBLSCHN EQU   IDAAMBL+4                                                02830000
AMBLPCHN EQU   IDAAMBL                                                  02831000
ACBAPID  EQU   ACBCOMN+72                                               02832000
ACBCBMWA EQU   ACBCOMN+68                                               02833000
ACBUAPTR EQU   ACBCOMN+64                                               02834000
ACBLRECL EQU   ACBCOMN+62                                               02835000
ACBMSGLN EQU   ACBBLKSZ                                                 02836000
ACBBUFSP EQU   ACBCOMN+56                                               02837000
@NM00037 EQU   ACBUJFCB+1                                               02838000
ACBOPTN  EQU   ACBUJFCB                                                 02839000
ACBVVIC  EQU   ACBINFLG                                                 02840000
ACBUCRA  EQU   ACBINFLG                                                 02841000
ACBSCRA  EQU   ACBINFLG                                                 02842000
ACBCAT   EQU   ACBINFLG                                                 02843000
ACBIJRQE EQU   ACBINFLG                                                 02844000
ACBJEPS  EQU   ACBINFLG                                                 02845000
@NM00036 EQU   ACBINFLG                                                 02846000
ACBERFLG EQU   ACBCOMN+49                                               02847000
ACBBUSY  EQU   ACBIOSFG                                                 02848000
ACBLOCK  EQU   ACBEXFG                                                  02849000
@NM00035 EQU   ACBOFLGS                                                 02850000
ACBDSERR EQU   ACBOFLGS                                                 02851000
ACBOPEN  EQU   ACBOFLGS                                                 02852000
ACBEOV   EQU   ACBOFLGS                                                 02853000
@NM00034 EQU   ACBOFLGS                                                 02854000
ACBDEB   EQU   ACBDDNM+5                                                02855000
ACBERFL  EQU   ACBDDNM+4                                                02856000
ACBAM    EQU   ACBAMETH                                                 02857000
ACBINFL  EQU   ACBDDNM+2                                                02858000
ACBTIOT  EQU   ACBDDNM                                                  02859000
ACBUEL   EQU   ACBEXLST                                                 02860000
ACBPASSW EQU   ACBCOMN+32                                               02861000
ACBMSGAR EQU   ACBCOMN+28                                               02862000
@NM00033 EQU   ACBDSORG+1                                               02863000
ACBDORGA EQU   ACBDSORG+1                                               02864000
@NM00032 EQU   ACBDSORG                                                 02865000
ACBCRNRE EQU   ACBCROPS                                                 02866000
ACBCRNCK EQU   ACBCROPS                                                 02867000
ACBASA   EQU   ACBCCTYP                                                 02868000
@NM00031 EQU   ACBCCTYP                                                 02869000
ACBRECAF EQU   ACBRECFM                                                 02870000
ACBJBUF  EQU   ACBBUFPL+2                                               02871000
ACBMACR4 EQU   ACBBUFPL+1                                               02872000
@NM00030 EQU   ACBMACR3                                                 02873000
ACBNCFX  EQU   ACBMACR3                                                 02874000
ACBSIS   EQU   ACBMACR3                                                 02875000
ACBDFR   EQU   ACBMACR3                                                 02876000
ACBICI   EQU   ACBMACR3                                                 02877000
ACBGSR   EQU   ACBMACR3                                                 02878000
ACBLSR   EQU   ACBMACR3                                                 02879000
@NM00029 EQU   ACBMACR3                                                 02880000
ACBBUFNI EQU   ACBCOMN+18                                               02881000
ACBBUFND EQU   ACBCOMN+16                                               02882000
ACBSTRNO EQU   ACBCOMN+15                                               02883000
ACBBSTNO EQU   ACBCOMN+14                                               02884000
ACBAIX   EQU   ACBMACR2                                                 02885000
ACBDSN   EQU   ACBMACR2                                                 02886000
ACBRST   EQU   ACBMACR2                                                 02887000
ACBLOGON EQU   ACBMACR2                                                 02888000
ACBSKP   EQU   ACBMACR2                                                 02889000
@NM00028 EQU   ACBMACR2                                                 02890000
ACBUBF   EQU   ACBMACR1                                                 02891000
ACBOUT   EQU   ACBMACR1                                                 02892000
ACBIN    EQU   ACBMACR1                                                 02893000
ACBDIR   EQU   ACBMACR1                                                 02894000
ACBSEQ   EQU   ACBMACR1                                                 02895000
ACBBLK   EQU   ACBCNV                                                   02896000
ACBADD   EQU   ACBADR                                                   02897000
ACBKEY   EQU   ACBMACR1                                                 02898000
ACBINRTN EQU   ACBCOMN+8                                                02899000
ACBIBCT  EQU   ACBJWA                                                   02900000
ACBLEN2  EQU   ACBLENG2                                                 02901000
ACBSTYP  EQU   ACBCOMN+1                                                02902000
ACBID    EQU   ACBCOMN                                                  02903000
RPLERMSA EQU   RPLCOMN+72                                               02904000
RPLEMLEN EQU   RPLCOMN+70                                               02905000
RPLBRANC EQU   RPLEXTD1                                                 02906000
RPLNIB   EQU   RPLEXTD1                                                 02907000
@NM00003 EQU   RPLEXTD1                                                 02908000
RPLEXIT  EQU   RPLEXTD1                                                 02909000
RPLNEXIT EQU   RPLEXTD1                                                 02910000
RPLEXSCH EQU   RPLEXTD1                                                 02911000
@NM00002 EQU   RPLRBAR+3                                                02912000
@NM00001 EQU   RPLAIXID                                                 02913000
RPLAXPKP EQU   RPLAIXID                                                 02914000
RPLAIXPC EQU   RPLRBAR                                                  02915000
RPLRSV88 EQU   RPLOPT8                                                  02916000
RPLUNCON EQU   RPLOPT8                                                  02917000
RPLACTV  EQU   RPLOPT8                                                  02918000
RPLSESS  EQU   RPLOPT8                                                  02919000
RPLPEND  EQU   RPLOPT8                                                  02920000
RPLODPRM EQU   RPLOPT8                                                  02921000
RPLODACP EQU   RPLOPT8                                                  02922000
RPLODACQ EQU   RPLOPT8                                                  02923000
RPLRSV78 EQU   RPLOPT7                                                  02924000
RPLRSV77 EQU   RPLOPT7                                                  02925000
RPLRLSOP EQU   RPLOPT7                                                  02926000
RPLTPOST EQU   RPLOPT7                                                  02927000
RPLQOPT  EQU   RPLOPT7                                                  02928000
RPLCNIMM EQU   RPLCNOPT                                                 02929000
RPLCNANY EQU   RPLCNOPT                                                 02930000
RPLCNALL EQU   RPLCNOPT                                                 02931000
RPLRSV68 EQU   RPLOPT6                                                  02932000
RPLRSV67 EQU   RPLOPT6                                                  02933000
RPLLOCK  EQU   RPLOPT6                                                  02934000
RPLNCOND EQU   RPLOPT6                                                  02935000
RPLCOND  EQU   RPLOPT6                                                  02936000
RPLEOT   EQU   RPLUNTYP                                                 02937000
RPLEOM   EQU   RPLUNTYP                                                 02938000
RPLEOB   EQU   RPLUNTYP                                                 02939000
RPLWROPT EQU   RPLOPT5                                                  02940000
RPLNODE  EQU   RPLOPT5                                                  02941000
RPLERACE EQU   RPLWRTYP                                                 02942000
RPLEAU   EQU   RPLWRTYP                                                 02943000
RPLNERAS EQU   RPLWRTYP                                                 02944000
RPLPSOPT EQU   RPLOPT5                                                  02945000
RPLSSNIN EQU   RPLOPT5                                                  02946000
RPLDLGIN EQU   RPLOPT5                                                  02947000
RPLBUFL  EQU   RPLCOMN+52                                               02948000
RPLOPT4  EQU   RPLOPTCD+3                                               02949000
RPLALIGN EQU   RPLOPT3                                                  02950000
RPLFMT   EQU   RPLOPT3                                                  02951000
RPLFLD   EQU   RPLOPT3                                                  02952000
RPLVFY   EQU   RPLOPT3                                                  02953000
RPLBLK   EQU   RPLOPT3                                                  02954000
RPLSFORM EQU   RPLOPT3                                                  02955000
RPLEODS  EQU   RPLOPT3                                                  02956000
RPLNSP   EQU   RPLOPT2                                                  02957000
RPLLRD   EQU   RPLOPT2                                                  02958000
RPLBWD   EQU   RPLOPT2                                                  02959000
RPLECBIN EQU   RPLECBSW                                                 02960000
RPLKGE   EQU   RPLOPT1                                                  02961000
RPLDAF   EQU   RPLARG+2                                                 02962000
RPLSAF   EQU   RPLARG                                                   02963000
RPLAREA  EQU   RPLCOMN+32                                               02964000
RPLTCBPT EQU   RPLCOMN+28                                               02965000
RPLCCHAR EQU   RPLCOMN+20                                               02966000
RPLRDSOH EQU   RPLFDB3                                                  02967000
RPLRLG   EQU   RPLFDB3                                                  02968000
RPLLGFRC EQU   RPLFDB3                                                  02969000
RPLREOT  EQU   RPLFDB3                                                  02970000
RPLREOM  EQU   RPLFDB3                                                  02971000
RPLREOB  EQU   RPLFDB3                                                  02972000
RPLSV32  EQU   RPLFDB3                                                  02973000
RPLUINPT EQU   RPLFDB3                                                  02974000
RPLSTSAV EQU   RPLFDB2                                                  02975000
RPLCUERR EQU   RPLFDB2                                                  02976000
RPLDLGFL EQU   RPLFDB2                                                  02977000
RPLIOERR EQU   RPLFDB2                                                  02978000
RPLDVUNS EQU   RPLFDB2                                                  02979000
RPLATND  EQU   RPLFDB2                                                  02980000
RPLRVID  EQU   RPLFDB2                                                  02981000
RPLERLK  EQU   RPLFDB2                                                  02982000
RPLSTAT  EQU   RPLFDBWD                                                 02983000
RPLPOST  EQU   RPLECB                                                   02984000
RPLWAIT  EQU   RPLECB                                                   02985000
RPLLEN2  EQU   RPLLEN                                                   02986000
RPLSTYP  EQU   RPLIDWD+1                                                02987000
RPLID    EQU   RPLIDWD                                                  02988000
@NM00027 EQU   PSA+3668                                                 02989000
PSASTAK  EQU   PSA+3072                                                 02990000
@NM00026 EQU   PSA+1048                                                 02991000
PSAUSEND EQU   PSA+1048                                                 02992000
PSARV062 EQU   PSA+1044                                                 02993000
PSACDAL  EQU   PSA+1040                                                 02994000
PSAWTCOD EQU   PSA+1036                                                 02995000
PSAATCVT EQU   PSA+1032                                                 02996000
PSAPCPSW EQU   PSA+1024                                                 02997000
PSAPIR2  EQU   PSA+1020                                                 02998000
PSARV059 EQU   PSA+1018                                                 02999000
PSASVC13 EQU   PSA+1016                                                 03000000
PSALSFCC EQU   PSA+1012                                                 03001000
PSASFACC EQU   PSA+1008                                                 03002000
PSASTOP  EQU   PSA+992                                                  03003000
PSASTART EQU   PSA+976                                                  03004000
PSARSPSW EQU   PSA+968                                                  03005000
PSASRPSW EQU   PSA+960                                                  03006000
PSARV045 EQU   PSA+892                                                  03007000
PSARV044 EQU   PSA+888                                                  03008000
PSARV043 EQU   PSA+884                                                  03009000
PSARV042 EQU   PSA+880                                                  03010000
PSARV041 EQU   PSA+876                                                  03011000
PSARV040 EQU   PSA+872                                                  03012000
PSARV025 EQU   PSA+868                                                  03013000
PSADSSED EQU   PSA+868                                                  03014000
PSADSSPR EQU   PSA+864                                                  03015000
PSADSSFW EQU   PSA+860                                                  03016000
PSADSS14 EQU   PSA+856                                                  03017000
PSADSSPP EQU   PSA+848                                                  03018000
PSADSSRP EQU   PSA+840                                                  03019000
PSADSS05 EQU   PSADSSF4                                                 03020000
PSADSS10 EQU   PSADSSF4                                                 03021000
PSADSSVE EQU   PSADSSF4                                                 03022000
PSADSSDE EQU   PSADSSF4                                                 03023000
PSADSSC0 EQU   PSADSSF4                                                 03024000
PSADSSIE EQU   PSADSSF4                                                 03025000
PSADSS12 EQU   PSADSSF4                                                 03026000
PSADSSRC EQU   PSADSSF4                                                 03027000
PSARV057 EQU   PSADSSF3                                                 03028000
PSARV056 EQU   PSADSSF3                                                 03029000
PSARV055 EQU   PSADSSF3                                                 03030000
PSADSSMC EQU   PSADSSF3                                                 03031000
PSADSSRW EQU   PSADSSF3                                                 03032000
PSADSSNM EQU   PSADSSF3                                                 03033000
PSADSSES EQU   PSADSSF3                                                 03034000
PSADSSGP EQU   PSADSSF3                                                 03035000
PSADSSF2 EQU   PSADSSFL+1                                               03036000
PSADSSPI EQU   PSADSSF1                                                 03037000
PSADSSOI EQU   PSADSSF1                                                 03038000
PSADSSSP EQU   PSADSSF1                                                 03039000
PSADSSTP EQU   PSADSSF1                                                 03040000
PSADSSDW EQU   PSADSSF1                                                 03041000
PSADSSDD EQU   PSADSSF1                                                 03042000
PSADSSDM EQU   PSADSSF1                                                 03043000
PSADSSMV EQU   PSADSSF1                                                 03044000
PSADSSTS EQU   PSA+816                                                  03045000
PSADSSWK EQU   PSA+812                                                  03046000
PSADSSR3 EQU   PSA+808                                                  03047000
PSADSSR2 EQU   PSA+804                                                  03048000
PSADSSRS EQU   PSA+800                                                  03049000
PSASTOR  EQU   PSA+796                                                  03050000
PSACPUSA EQU   PSA+794                                                  03051000
PSAVSTAP EQU   PSA+792                                                  03052000
PSAWKVAP EQU   PSA+788                                                  03053000
PSAWKRAP EQU   PSA+784                                                  03054000
PSAMCHIC EQU   PSA+783                                                  03055000
PSARV061 EQU   PSA+782                                                  03056000
PSASYMSK EQU   PSA+781                                                  03057000
PSAMCHFL EQU   PSA+780                                                  03058000
PSACR0   EQU   PSA+776                                                  03059000
PSAPSWSV EQU   PSA+768                                                  03060000
PSALITA  EQU   PSA+764                                                  03061000
PSACLHS  EQU   PSAHLHI                                                  03062000
PSALKR15 EQU   PSALKSA+60                                               03063000
PSALKR14 EQU   PSALKSA+56                                               03064000
PSALKR13 EQU   PSALKSA+52                                               03065000
PSALKR12 EQU   PSALKSA+48                                               03066000
PSALKR11 EQU   PSALKSA+44                                               03067000
PSALKR10 EQU   PSALKSA+40                                               03068000
PSALKR9  EQU   PSALKSA+36                                               03069000
PSALKR8  EQU   PSALKSA+32                                               03070000
PSALKR7  EQU   PSALKSA+28                                               03071000
PSALKR6  EQU   PSALKSA+24                                               03072000
PSALKR5  EQU   PSALKSA+20                                               03073000
PSALKR4  EQU   PSALKSA+16                                               03074000
PSALKR3  EQU   PSALKSA+12                                               03075000
PSALKR2  EQU   PSALKSA+8                                                03076000
PSALKR1  EQU   PSALKSA+4                                                03077000
PSALKR0  EQU   PSALKSA                                                  03078000
PSARV023 EQU   PSACLHT+52                                               03079000
PSALOCAL EQU   PSACLHT+48                                               03080000
PSACMSL  EQU   PSACLHT+44                                               03081000
PSAOPTL  EQU   PSACLHT+40                                               03082000
PSATPACL EQU   PSACLHT+36                                               03083000
PSATPDNL EQU   PSACLHT+32                                               03084000
PSATPNCL EQU   PSACLHT+28                                               03085000
PSAIOSLL EQU   PSACLHT+24                                               03086000
PSAIOSUL EQU   PSACLHT+20                                               03087000
PSAIOSCL EQU   PSACLHT+16                                               03088000
PSAIOSSL EQU   PSACLHT+12                                               03089000
PSASALCL EQU   PSACLHT+8                                                03090000
PSAASML  EQU   PSACLHT+4                                                03091000
PSADISPL EQU   PSACLHT                                                  03092000
PSASRSA  EQU   PSA+636                                                  03093000
PSARV050 EQU   PSA+634                                                  03094000
PSADSSGO EQU   PSA+633                                                  03095000
PSARECUR EQU   PSA+632                                                  03096000
PSAHLHIS EQU   PSA+628                                                  03097000
PSAIPCSA EQU   PSA+624                                                  03098000
@NM00025 EQU   PSA+621                                                  03099000
PSAIPCDM EQU   PSA+620                                                  03100000
PSAIPCD  EQU   PSA+616                                                  03101000
@NM00024 EQU   PSA+613                                                  03102000
PSAIPCRM EQU   PSA+612                                                  03103000
PSAIPCR  EQU   PSA+608                                                  03104000
PSAMCHEX EQU   PSA+600                                                  03105000
PSAMPSW  EQU   PSA+592                                                  03106000
PSAEXPS2 EQU   PSA+584                                                  03107000
PSAEXPS1 EQU   PSA+576                                                  03108000
PSAPIREG EQU   PSA+572                                                  03109000
PSARSREG EQU   PSA+568                                                  03110000
PSAGPREG EQU   PSA+556                                                  03111000
PSARV022 EQU   PSASUP4                                                  03112000
PSARV021 EQU   PSASUP4                                                  03113000
PSARV020 EQU   PSASUP4                                                  03114000
PSARV019 EQU   PSASUP4                                                  03115000
PSARV018 EQU   PSASUP4                                                  03116000
PSARV017 EQU   PSASUP4                                                  03117000
PSARV016 EQU   PSASUP4                                                  03118000
PSARV015 EQU   PSASUP4                                                  03119000
PSARV014 EQU   PSASUP3                                                  03120000
PSAULCMS EQU   PSASUP3                                                  03121000
PSARV012 EQU   PSASUP3                                                  03122000
PSAESTA  EQU   PSASUP3                                                  03123000
PSASPR   EQU   PSASUP3                                                  03124000
PSAPSREG EQU   PSASUP3                                                  03125000
PSAPI2   EQU   PSASUP3                                                  03126000
PSAIOSUP EQU   PSASUP3                                                  03127000
PSALCR   EQU   PSASUP2                                                  03128000
PSARTM   EQU   PSASUP2                                                  03129000
PSAACR   EQU   PSASUP2                                                  03130000
PSAIPCE2 EQU   PSASUP2                                                  03131000
PSAIPCES EQU   PSASUP2                                                  03132000
PSAIPCEC EQU   PSASUP2                                                  03133000
PSAGTF   EQU   PSASUP2                                                  03134000
PSAIPCRI EQU   PSASUP2                                                  03135000
PSATYPE6 EQU   PSASUP1                                                  03136000
PSATCTL  EQU   PSASUP1                                                  03137000
PSADISP  EQU   PSASUP1                                                  03138000
PSALOCK  EQU   PSASUP1                                                  03139000
PSAPI    EQU   PSASUP1                                                  03140000
PSAEXT   EQU   PSASUP1                                                  03141000
PSASVC   EQU   PSASUP1                                                  03142000
PSAIO    EQU   PSASUP1                                                  03143000
PSAANEW  EQU   PSA+544                                                  03144000
PSATOLD  EQU   PSA+540                                                  03145000
PSATNEW  EQU   PSA+536                                                  03146000
PSALCCAR EQU   PSA+532                                                  03147000
PSALCCAV EQU   PSA+528                                                  03148000
PSAPCCAR EQU   PSA+524                                                  03149000
PSAPCCAV EQU   PSA+520                                                  03150000
PSACPULA EQU   PSA+518                                                  03151000
PSACPUPA EQU   PSA+516                                                  03152000
PSAPSA   EQU   PSA+512                                                  03153000
FLCHDEND EQU   PSA+512                                                  03154000
FLCCRSAV EQU   FLCMCLA+280                                              03155000
FLCGRSAV EQU   FLCMCLA+216                                              03156000
FLCFPSAV EQU   FLCMCLA+184                                              03157000
FLCFLA   EQU   FLCMCLA+88                                               03158000
FLCRGNCD EQU   FLCMCLA+84                                               03159000
FLCFSAA  EQU   FLCFSA+1                                                 03160000
@NM00023 EQU   FLCFSA                                                   03161000
@NM00022 EQU   FLCMCLA+72                                               03162000
FLCMCIC  EQU   FLCMCLA+64                                               03163000
@NM00021 EQU   FLCMCLA+20                                               03164000
FLCIOAA  EQU   FLCIOA+1                                                 03165000
@NM00020 EQU   FLCIOA                                                   03166000
@NM00019 EQU   FLCMCLA+15                                               03167000
@NM00018 EQU   FLCMCLA+14                                               03168000
@NM00017 EQU   FLCMCLA+12                                               03169000
FLCLCL   EQU   FLCMCLA+8                                                03170000
FLCIOELA EQU   FLCIOEL+1                                                03171000
@NM00016 EQU   FLCIOEL                                                  03172000
FLCCHNID EQU   FLCMCLA                                                  03173000
@NM00015 EQU   PSA+160                                                  03174000
FLCMTRCD EQU   PSA+157                                                  03175000
@NM00014 EQU   PSA+156                                                  03176000
FLCPERA  EQU   FLCPER+1                                                 03177000
@NM00013 EQU   FLCPER                                                   03178000
@NM00012 EQU   PSA+151                                                  03179000
FLCPERCD EQU   PSA+150                                                  03180000
FLCMCNUM EQU   PSA+149                                                  03181000
@NM00011 EQU   PSA+148                                                  03182000
FLCTEAA  EQU   FLCTEA+1                                                 03183000
@NM00010 EQU   FLCTEA                                                   03184000
PSAPIPC  EQU   PSAPICOD                                                 03185000
PSAPIMC  EQU   PSAPICOD                                                 03186000
PSAPIPER EQU   PSAPICOD                                                 03187000
PSARV049 EQU   FLCPICOD                                                 03188000
FLCPILCB EQU   FLCPIILC                                                 03189000
@NM00009 EQU   FLCPIILC                                                 03190000
@NM00008 EQU   PSAEPPSW                                                 03191000
FLCSVCN  EQU   PSAESPSW+2                                               03192000
FLCSILCB EQU   FLCSVILC                                                 03193000
@NM00007 EQU   FLCSVILC                                                 03194000
@NM00006 EQU   PSAESPSW                                                 03195000
FLCEICOD EQU   PSAEEPSW+2                                               03196000
PSASPAD  EQU   PSAEEPSW                                                 03197000
@NM00005 EQU   PSA+128                                                  03198000
FLCINPSW EQU   PSA+120                                                  03199000
FLCMNPSW EQU   PSA+112                                                  03200000
FLCPNPSW EQU   PSA+104                                                  03201000
FLCSNPSW EQU   PSA+96                                                   03202000
FLCENPSW EQU   PSA+88                                                   03203000
FLCTRACE EQU   PSA+84                                                   03204000
FLCTIMER EQU   PSA+80                                                   03205000
FLCCVT2  EQU   PSA+76                                                   03206000
FLCCAW   EQU   PSA+72                                                   03207000
FLCCSW   EQU   PSA+64                                                   03208000
FLCIOPSW EQU   PSA+56                                                   03209000
FLCMOPSW EQU   PSA+48                                                   03210000
FLCPOPSW EQU   PSA+40                                                   03211000
FLCSOPSW EQU   PSA+32                                                   03212000
FLCEOPSW EQU   PSA+24                                                   03213000
@NM00004 EQU   FLCICCW2+4                                               03214000
FLCCVT   EQU   FLCICCW2                                                 03215000
FLCICCW1 EQU   FLCROPSW                                                 03216000
FLCIPPSW EQU   FLCRNPSW                                                 03217000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03218000
@RT00177 EQU   PUT                                                      03219000
@RC00187 EQU   CE0001@                                                  03220000
@RC00192 EQU   CE0001@                                                  03221000
@RC00202 EQU   CE0001@                                                  03222000
@RF00207 EQU   CE0001@                                                  03223000
@RF00225 EQU   CE0001@                                                  03224000
@RC00234 EQU   CE0001@                                                  03225000
@RT00259 EQU   INVRPL                                                   03226000
@RT00295 EQU   INVACC                                                   03227000
@RC00312 EQU   @RC00310                                                 03228000
@RC00328 EQU   @RC00310                                                 03229000
@RT00345 EQU   INVACC                                                   03230000
@RF00351 EQU   @RC00349                                                 03231000
@RF00453 EQU   CE0001@                                                  03232000
@RT00481 EQU   NOPLHFND                                                 03233000
@RT00487 EQU   INVACC2                                                  03234000
@RT00511 EQU   POSTRPL2                                                 03235000
@RC00489 EQU   @RC00474                                                 03236000
@RF00533 EQU   @RC00474                                                 03237000
@RT00561 EQU   INVACC2                                                  03238000
@RC00578 EQU   CE0001@                                                  03239000
@RC00589 EQU   CE0001@                                                  03240000
NOPOST2  EQU   CE0001@                                                  03241000
@RF00602 EQU   @EL00001                                                 03242000
@RT00715 EQU   OLDPLH                                                   03243000
@RF00780 EQU   @EL00005                                                 03244000
@RF00826 EQU   @RC00814                                                 03245000
BADPOST  EQU   @EL00008                                                 03246000
@RC00314 EQU   @RC00312                                                 03247000
@ENDDATA EQU   *                                                        03248000
         END   IDA019R1,(C'PLS1750',0701,78209)                         03249000
