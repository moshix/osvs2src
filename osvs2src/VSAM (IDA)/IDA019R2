         TITLE 'IDA019R2--VSAM NON SHARED BUFFER MANAGER--PART ONE     *00001000
                        '                                               00002000
IDA019R2 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019R2  78.192'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
         LH    RWORK1,FUNCTLST(RWORK1)      PICK UP OFFSET   @X04SVLP   00013000
         B     @00(RWORK1,@11)              GO TO FUNCT EP   @X04SVLP   00014000
FUNCTLST DC    AL2(FREEB-@PSTART)           OFFSET           @X04SVLP   00015000
         DC    AL2(WRBFR-@PSTART)           OFFSET           @X04SVLP   00016000
         DC    AL2(SBF-@PSTART)             OFFSET           @X04SVLP   00017000
         DC    AL2(GRB-@PSTART)             OFFSET           @X04SVLP   00018000
         DC    AL2(GNFL-@PSTART)            OFFSET           @X04SVLP   00019000
         DC    AL2(GNNFL-@PSTART)           OFFSET           @X04SVLP   00020000
         DC    AL2(GNXT-@PSTART)            OFFSET           @X04SVLP   00021000
         DC    AL2(GETEXCL-@PSTART)         OFFSET           @X04SVLP   00022000
FREEB    DS    0H                                                  0174 00023000
*   IF AMBTYPE=AMBINDEX THEN        /* SEE IF INDEX BFR              */ 00024000
         TM    AMBTYPE(RAMB),B'01000000'                           0174 00025000
         BNO   @RF00174                                            0174 00026000
*     DO;                           /* YES, FREE IT          @X04SVMR*/ 00027000
*/*  IF THE BUFFER CONTAINS A HIGHER LEVEL INDEX RECORD, LEAVE THE   */ 00028000
*/*  CONTENTS VALID--SINCE CONTROL AREA SPLIT IS PROHIBITED FOR SHR  */ 00029000
*/*  OPTION FOUR DATA SETS THE CONTENTS MUST BE CORRECT.     @X04SVMR*/ 00030000
*                                                                  0176 00031000
*       IF AMBINBUF=ON&             /* IF SHR(4), NOT        @X04SVMR*/ 00032000
*           (BUFCIDXL<=ONE|         /* HI IX,                @X04SVMR*/ 00033000
*           AMBSCRA=ON|AMBUCRA=ON|  /*                       @X04SVMR*/ 00034000
*           AMBCAT=ON) THEN         /* OR IF CATLG,          @X04SVMR*/ 00035000
         TM    AMBINBUF(RAMB),B'00000001'                          0176 00036000
         BNO   @RF00176                                            0176 00037000
         CLI   BUFCIDXL(RBUFC),1                                   0176 00038000
         BNH   @RT00176                                            0176 00039000
         TM    AMBSCRA(RAMB),B'00011100'                           0176 00040000
         BZ    @RF00176                                            0176 00041000
@RT00176 DS    0H                                                  0177 00042000
*         BUFCVAL=OFF;              /* FORGET BUFFER.        @X04SVMR*/ 00043000
         NI    BUFCVAL(RBUFC),B'11111011'                          0177 00044000
*       BUFCEXC=OFF;                /* RELEASE RD EXCL       @X04SVMR*/ 00045000
@RF00176 NI    BUFCEXC(RBUFC),B'11111101'                          0178 00046000
*       IF RBUFC^=PLHIBUFC THEN     /* IF NOT SEQ SET        @X04SVMR*/ 00047000
         C     RBUFC,PLHIBUFC(,RPLH)                               0179 00048000
         BE    @RF00179                                            0179 00049000
*         DO;                       /* HIGHER LEVEL BUFC     @ZA32757*/ 00050000
*           BUFCPLH=ZERO;           /* CLEAR PLH PTR.        @ZA32757*/ 00051000
         SLR   @15,@15                                             0181 00052000
         ST    @15,BUFCPLH(,RBUFC)                                 0181 00053000
*           BUFCAVL=CZERO;          /* MAKE AVAILABLE        @X04SVMR*/ 00054000
         MVI   BUFCAVL(RBUFC),B'00000000'                          0182 00055000
*         END;                      /* END OF NOT SEQ SET    @ZA32757*/ 00056000
*       ELSE                                                       0184 00057000
*         ;                         /* ELSE CONTINUE         @ZA32757*/ 00058000
@RF00179 DS    0H                                                  0185 00059000
*     END;                          /* END, INDEX BFR        @X04SVMR*/ 00060000
*   ELSE                            /* DATA BUFFER           @X04SVMR*/ 00061000
*     IF BUFCINS=ON THEN            /* INSERT BUFFER?        @X04SVMR*/ 00062000
         B     @RC00174                                            0186 00063000
@RF00174 TM    BUFCINS(RBUFC),B'00100000'                          0186 00064000
         BNO   @RF00186                                            0186 00065000
*       DO;                         /* YES, FREE IT.         @X04SVMR*/ 00066000
*         BUFCVAL=OFF;              /* FORGET BUFFER.        @X04SVMR*/ 00067000
*         BUFCEXC=OFF;              /* RELEASE RD EXCL       @X04SVMR*/ 00068000
         NI    BUFCVAL(RBUFC),B'11111001'                          0189 00069000
*         BUFCAVL=CZERO;            /* MAKE AVAILABLE        @X04SVMR*/ 00070000
         MVI   BUFCAVL(RBUFC),B'00000000'                          0190 00071000
*         BUFCEOD=OFF;              /* SET EOD OFF           @ZA14824*/ 00072000
         NI    BUFCEOD(RBUFC),B'11110111'                          0191 00073000
*       END;                        /* END OF INS BFR        @X04SVMR*/ 00074000
*     ELSE                          /* HERE IF PLH BUFFER            */ 00075000
*       DO;                                                        0193 00076000
         B     @RC00186                                            0193 00077000
@RF00186 DS    0H                                                  0194 00078000
*         IF AMBINBUF=ON THEN       /* IF SHR(4),            @X04SVMR*/ 00079000
         TM    AMBINBUF(RAMB),B'00000001'                          0194 00080000
         BNO   @RF00194                                            0194 00081000
*           BUFCVAL=OFF;            /* FORGET BUFFER.        @X04SVMR*/ 00082000
         NI    BUFCVAL(RBUFC),B'11111011'                          0195 00083000
*/*  PROPAGATE EXCLUSIVE CONTROL AND OUTPUT RBAS IF SPANNED RECORD   */ 00084000
*/*  RETRIEVAL IN A FORWARD DIRECTION.  (NOTE THAT FOR A KSDS THE    */ 00085000
*/*  SPANNED RECORD SEGMENTS ARE ALWAYS RETRIEVED FORWARD.)  @ZA07544*/ 00086000
*                                                                  0196 00087000
*         IF AMDSPAN=ON&(RPLBWD=OFF|RPLKEY=ON) THEN                0196 00088000
@RF00194 L     @15,AMBDSB(,RAMB)                                   0196 00089000
         TM    AMDSPAN(@15),B'00000001'                            0196 00090000
         BNO   @RF00196                                            0196 00091000
         TM    RPLKEY(RRPL),B'10000000'                            0196 00092000
         BNZ   @RT00196                                            0196 00093000
         TM    RPLBWD(RRPL),B'00010000'                            0196 00094000
         BO    @RF00196                                            0196 00095000
@RT00196 DS    0H                                                  0197 00096000
*           DO;                     /* PROPAGATE RBAS        @ZA07544*/ 00097000
*                                                                  0197 00098000
*             /*******************************************************/ 00099000
*             /*                                                     */ 00100000
*             /* POINT TO THE FIRST RDF IN THE RECORD.       @X04SVMR*/ 00101000
*             /*                                                     */ 00102000
*             /*******************************************************/ 00103000
*                                                                  0198 00104000
*             RFY                                                  0198 00105000
*               RWORK1 RSTD;        /* GET WORK REG          @X04SVMR*/ 00106000
*             RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);    00107000
         L     @15,AMBDSB(,RAMB)                                   0199 00108000
         L     RWORK1,BUFCBAD(,RBUFC)                              0199 00109000
         AL    RWORK1,AMDCINV(,@15)                                0199 00110000
         SL    RWORK1,@CF00332                                     0199 00111000
*             IF RWORK1->RDF1ST=ON THEN/* IF NOT LAST SEG    @X04SVMR*/ 00112000
         TM    RDF1ST(RWORK1),B'00010000'                          0200 00113000
         BNO   @RF00200                                            0200 00114000
*               BUFCNXT2->BUFXIRBA=BUFXIRBA;/* COPY 1ST RBA  @X04SVMR*/ 00115000
         L     @15,BUFCNXT2-1(,RBUFC)                              0201 00116000
         L     @10,BUFXIRBA(,RBUFC)                                0201 00117000
         ST    @10,BUFXIRBA(,@15)                                  0201 00118000
*             IF BUFCMW=ON THEN     /* OUTPUT REQUEST?       @ZA07544*/ 00119000
@RF00200 TM    BUFCMW(RBUFC),B'10000000'                           0202 00120000
         BNO   @RF00202                                            0202 00121000
*               DO;                 /* YES, SET BUFXORBA     @ZA07544*/ 00122000
*                 IF RWORK1->RDF1ST=OFF&/* IF NOT SPND RCD,  @ZA07544*/ 00123000
*                     RWORK1->RDFNOT1=OFF THEN/*             @ZA07544*/ 00124000
         TM    RDF1ST(RWORK1),B'00110000'                          0204 00125000
         BNZ   @RF00204                                            0204 00126000
*                   BUFXORBA=BUFCORBA;/* USE BUFCORBA.       @ZA07544*/ 00127000
         L     @15,BUFCORBA(,RBUFC)                                0205 00128000
         ST    @15,BUFXORBA(,RBUFC)                                0205 00129000
*                 ELSE              /* RCD IS SPANNED,       @ZA07544*/ 00130000
*                   BUFXORBA=BUFXIRBA;/* USE 1ST SEG RBA     @ZA07544*/ 00131000
         B     @RC00204                                            0206 00132000
@RF00204 L     @15,BUFXIRBA(,RBUFC)                                0206 00133000
         ST    @15,BUFXORBA(,RBUFC)                                0206 00134000
*               END;                /* END SPN RCD MUST WRT  @ZA07544*/ 00135000
@RC00204 DS    0H                                                  0208 00136000
*             IF PLHBFRNO^=ONE THEN /* IF > ONE BFR          @X04SVMR*/ 00137000
@RF00202 CLI   PLHBFRNO(RPLH),1                                    0208 00138000
         BE    @RF00208                                            0208 00139000
*               BUFCEXC=OFF;        /* DROP RD EXCL          @X04SVMR*/ 00140000
         NI    BUFCEXC(RBUFC),B'11111101'                          0209 00141000
*           END;                    /* END OF SR CODE        @X04SVMR*/ 00142000
*         ELSE                      /* NOT A SPN RCD.        @X04SVMR*/ 00143000
*           BUFCEXC=OFF;            /* DROP RD EXCL          @X04SVMR*/ 00144000
*                                                                  0211 00145000
         B     @RC00196                                            0211 00146000
@RF00196 NI    BUFCEXC(RBUFC),B'11111101'                          0211 00147000
*         /***********************************************************/ 00148000
*         /*                                                         */ 00149000
*         /* IF A NON-INSERT DATA BUFFER IS FREED, IT MAY BE POSSIBLE*/ 00150000
*         /* TO DO A READ-AHEAD FOR GET SEQUENTIAL OR CONTROL AREA   */ 00151000
*         /* SPLIT PROCESSING. (NOTE THAT IT IS ESSENTIAL TO THE     */ 00152000
*         /* SUCCESS OF THE GET NEXT OPERATION THAT THE READ-AHEAD   */ 00153000
*         /* ROUTINE BE CALLED BY THE FREE BUFFER ROUTINE SO THAT THE*/ 00154000
*         /* NEXT SEQUENTIAL BUFC WILL HAVE A VALID RBA IN IT.)      */ 00155000
*         /*                                                         */ 00156000
*         /***********************************************************/ 00157000
*                                                                  0212 00158000
*         PLHFRCNT=PLHFRCNT+ONE;    /* INCREMENT FREE BUFC CNT       */ 00159000
@RC00196 LA    @15,1                                               0212 00160000
         SLR   @10,@10                                             0212 00161000
         IC    @10,PLHFRCNT(,RPLH)                                 0212 00162000
         ALR   @15,@10                                             0212 00163000
         STC   @15,PLHFRCNT(,RPLH)                                 0212 00164000
*         PLHDBUFC=PLHDBUFC->BUFCNXT2;/* SET DATA BUFC       @X04SVMR*/ 00165000
         L     @15,PLHDBUFC(,RPLH)                                 0213 00166000
         L     @15,BUFCNXT2-1(,@15)                                0213 00167000
         LA    @15,0(,@15)                                         0213 00168000
         ST    @15,PLHDBUFC(,RPLH)                                 0213 00169000
*         IF(PLHFRCNT>=PLHRMIN&     /* SEE IF READ THRESHOLD         */ 00170000
*             ((RPLSEQ=ON&          /* SEQUENTIAL, AND               */ 00171000
*             RPLREQ=RPLGET)|       /* A GET REQUEST OR              */ 00172000
*             PLHRAHD=ON))|         /* FORCED READ AHD       @X04SVMR*/ 00173000
*             PLHSKPER=ON           /* (OR READ SKIP ALSO)           */ 00174000
*           THEN                    /* IF THIS IS                    */ 00175000
         CLC   PLHFRCNT(1,RPLH),PLHRMIN(RPLH)                      0214 00176000
         BL    @GL00004                                            0214 00177000
         TM    RPLSEQ(RRPL),B'00100000'                            0214 00178000
         BNO   @GL00006                                            0214 00179000
         CLI   RPLREQ(RRPL),0                                      0214 00180000
         BE    @RT00214                                            0214 00181000
@GL00006 TM    PLHRAHD(RPLH),B'01000000'                           0214 00182000
         BO    @RT00214                                            0214 00183000
@GL00004 TM    PLHSKPER(RPLH),B'00100000'                          0214 00184000
         BNO   @RF00214                                            0214 00185000
@RT00214 DS    0H                                                  0215 00186000
*           DO;                     /* SO, DO A READ-AHEAD.          */ 00187000
*             PLHJRNLL=PLHNBUFC;    /* SAVE PTR TO 1ST RD            */ 00188000
         L     @15,PLHNBUFC(,RPLH)                                 0216 00189000
         ST    @15,PLHJRNLL(,RPLH)                                 0216 00190000
*             GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE RETURN     */ 00191000
         IDASVR14                                                       00192000
*             RFY                                                  0218 00193000
*               R14 UNRESTRICTED;   /* RELEASE REG 14                */ 00194000
*             RPARM1=PLHDIOB;       /* POINT TO IOB          @X04SVMR*/ 00195000
         L     RPARM1,PLHDIOB(,RPLH)                               0219 00196000
*I01:                                                              0220 00197000
*             DO;                   /* IDACALL(IDAWAIT)              */ 00198000
I01      DS    0H                                                  0221 00199000
*               CALL IDAWAIT;       /* EXIT TO IDAWAIT               */ 00200000
         L     @15,@CV00040                                        0221 00201000
         BALR  @14,@15                                             0221 00202000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00203000
         BALR @11,0                                                     00204000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00205000
         USING *,@11                                                    00206000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00207000
         L     @11,=A(@PSTART)                                          00208000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00209000
         USING @PSTART,@11                                              00210000
*             END I01;              /* WAIT FOR PRIOR I/O    @X04SVMR*/ 00211000
*             CALL RDAHEAD;         /* ATTEMPT READ AHEAD            */ 00212000
         BAL   @14,RDAHEAD                                         0227 00213000
*             RBUFC=PLHJRNLL;       /* RESTORE READ PTR              */ 00214000
         L     RBUFC,PLHJRNLL(,RPLH)                               0228 00215000
*             IF BUFCRRD=ON|        /* IF BFRS TO BE READ            */ 00216000
*                 PLHSKPER=ON THEN  /* OR PREVIOUS I/O UNDONE        */ 00217000
         TM    BUFCRRD(RBUFC),B'00100000'                          0229 00218000
         BO    @RT00229                                            0229 00219000
         TM    PLHSKPER(RPLH),B'00100000'                          0229 00220000
         BNO   @RF00229                                            0229 00221000
@RT00229 DS    0H                                                  0230 00222000
*               DO;                 /* CALL I/O MGR          @X04SVMR*/ 00223000
*                 IF PLHRVRS=ON THEN/* TEST IF REVERSED      @X04SVMR*/ 00224000
         TM    PLHRVRS(RPLH),B'00001000'                           0231 00225000
         BNO   @RF00231                                            0231 00226000
*I02:                                                              0232 00227000
*                   DO;             /* IDACALL(IDARVRS1)             */ 00228000
I02      DS    0H                                                  0233 00229000
*                     CALL IDARVRS1;/* EXIT TO IDARVRS1              */ 00230000
         L     @15,@CV00039                                        0233 00231000
         BALR  @14,@15                                             0233 00232000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 00233000
         BALR @11,0                                                     00234000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 00235000
         USING *,@11                                                    00236000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 00237000
         L     @11,=A(@PSTART)                                          00238000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 00239000
         USING @PSTART,@11                                              00240000
*                   END I02;        /* REVERSE NEEDED        @X04SVMR*/ 00241000
*                 RPARM1=PLHDIOB;   /* PTR TO DATA IOB       @X04SVMR*/ 00242000
@RF00231 L     RPARM1,PLHDIOB(,RPLH)                               0239 00243000
*I03:                                                              0240 00244000
*                 DO;               /* IDACALL(IDA019R3)             */ 00245000
I03      DS    0H                                                  0241 00246000
*                   CALL IDA019R3;  /* EXIT TO IDA019R3              */ 00247000
         L     @15,@CV00038                                        0241 00248000
         BALR  @14,@15                                             0241 00249000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 00250000
         BALR @11,0                                                     00251000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 00252000
         USING *,@11                                                    00253000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 00254000
         L     @11,=A(@PSTART)                                          00255000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 00256000
         USING @PSTART,@11                                              00257000
*                 END I03;          /* CALL I/O MGR TO RD    @X04SVMR*/ 00258000
*               END;                /* END OF I/O            @X04SVMR*/ 00259000
*             GEN REFS(HWORD4)(IDARST14);/* RESTORE RETURN REG       */ 00260000
@RF00229 DS    0H                                                  0248 00261000
         IDARST14                                                       00262000
*             RFY                                                  0249 00263000
*               R14 RESTRICTED;     /* SAVE RETURN REG               */ 00264000
*           END;                    /* END, READ THRESHOLD MET       */ 00265000
*       END;                        /* END, PLH BFR CODE             */ 00266000
*   RETURN;                         /* EXIT TO CALLER                */ 00267000
@EL00001 DS    0H                                                  0252 00268000
@EF00001 DS    0H                                                  0252 00269000
@ER00001 BR    @14                                                 0252 00270000
*                                                                  0253 00271000
*   /*****************************************************************/ 00272000
*   /*                                                               */ 00273000
*   /* WRBFR - WRITE BUFFER                                  @X04SVLP*/ 00274000
*   /*                                                               */ 00275000
*   /*****************************************************************/ 00276000
*                                                                  0253 00277000
*/*                                                                  */ 00278000
*/* FUNCTION = TO WRITE OUT BUFFERS WHICH HAVE WRITE REQUIRED SET IN */ 00279000
*/*            THEIR BUFCS AND TO CHECK FOR I/O ERRORS.              */ 00280000
*/* INPUT = RBUFC POINTS TO A BUFC ON THE I/O CHAIN.                 */ 00281000
*/* OUTPUT = THE STANDARD REGISTERS AND RBUFC ARE UNCHANGED.  A CODE */ 00282000
*/*          IS SET IN THE RPL IF AN I/O ERROR OCCURS.               */ 00283000
*                                                                  0253 00284000
*WRBFR:                             /*                       @X04SVLP*/ 00285000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/*                     @X04SVLP*/ 00286000
WRBFR    DS    0H                                                  0254 00287000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00288000
         IDASVR14                                                       00289000
*   RESPECIFY                                                      0255 00290000
*     R14 UNRESTRICTED;             /* RELEASE REG 14                */ 00291000
*   RPARM1=PLHDIOB;                 /* POINT TO IOB          @X04SVMR*/ 00292000
         L     RPARM1,PLHDIOB(,RPLH)                               0256 00293000
*I04:                                                              0257 00294000
*   DO;                             /* IDACALL(IDAWAIT)              */ 00295000
I04      DS    0H                                                  0258 00296000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 00297000
         L     @15,@CV00040                                        0258 00298000
         BALR  @14,@15                                             0258 00299000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00300000
         BALR @11,0                                                     00301000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00302000
         USING *,@11                                                    00303000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00304000
         L     @11,=A(@PSTART)                                          00305000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00306000
         USING @PSTART,@11                                              00307000
*   END I04;                        /* SYNCHRONIZE           @X04SVLP*/ 00308000
*   IF RPLASY=OFF THEN              /* IF SYCHRONOUS REQUEST @Z40GSDT*/ 00309000
         TM    RPLASY(RRPL),B'00001000'                            0264 00310000
         BNZ   @RF00264                                            0264 00311000
*     PLHSR=ON;                     /* SET SUSPEND/RESUME    @Z40GSDT   00312000
*                                      CALL I/O MANAGER              */ 00313000
         OI    PLHSR(RPLH),B'00000001'                             0265 00314000
*I05:                                                              0266 00315000
*   DO;                             /* IDACALL(IDA019R3)             */ 00316000
@RF00264 DS    0H                                                  0266 00317000
I05      DS    0H                                                  0267 00318000
*     CALL IDA019R3;                /* EXIT TO IDA019R3              */ 00319000
         L     @15,@CV00038                                        0267 00320000
         BALR  @14,@15                                             0267 00321000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00322000
         BALR @11,0                                                     00323000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00324000
         USING *,@11                                                    00325000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00326000
         L     @11,=A(@PSTART)                                          00327000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00328000
         USING @PSTART,@11                                              00329000
*   END I05;                                                       0272 00330000
*I06:                                                              0273 00331000
*   DO;                             /* IDACALL(IDAWAIT)              */ 00332000
I06      DS    0H                                                  0274 00333000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 00334000
         L     @15,@CV00040                                        0274 00335000
         BALR  @14,@15                                             0274 00336000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00337000
         BALR @11,0                                                     00338000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00339000
         USING *,@11                                                    00340000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00341000
         L     @11,=A(@PSTART)                                          00342000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00343000
         USING @PSTART,@11                                              00344000
*   END I06;                        /* SYNCHRONIZE           @X04SVLP*/ 00345000
*                                                                  0279 00346000
*   /*****************************************************************/ 00347000
*   /*                                                               */ 00348000
*   /* SCAN CHAIN FOR I/O ERRORS.                                    */ 00349000
*   /*                                                               */ 00350000
*   /*****************************************************************/ 00351000
*                                                                  0280 00352000
*   PLHRBUFC=RBUFC;                 /* SAVE RBUFC            @X04SVMR*/ 00353000
         ST    RBUFC,PLHRBUFC(,RPLH)                               0280 00354000
*   DO UNTIL RBUFC=PLHRBUFC;        /* DO ALL                @X04SVMR*/ 00355000
@DL00281 DS    0H                                                  0282 00356000
*     CALL ERRORCHK;                /* I/O ERR?              @X04SVLP*/ 00357000
         BAL   @14,ERRORCHK                                        0282 00358000
*     RBUFC=BUFCNXT2;               /* NEXT                  @X04SVLP*/ 00359000
         L     @10,BUFCNXT2-1(,RBUFC)                              0283 00360000
         LA    @10,0(,@10)                                         0283 00361000
         LR    RBUFC,@10                                           0283 00362000
*   END;                            /* END DO UNTIL          @X04SVLP*/ 00363000
@DE00281 C     RBUFC,PLHRBUFC(,RPLH)                               0284 00364000
         BNE   @DL00281                                            0284 00365000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 00366000
         IDARST14                                                       00367000
*   END WRBFR;                      /* END OF FORCE WRITE            */ 00368000
@EL00002 DS    0H                                                  0286 00369000
@EF00002 DS    0H                                                  0286 00370000
@ER00002 BR    @14                                                 0286 00371000
*                                                                  0287 00372000
*   /*****************************************************************/ 00373000
*   /*                                                               */ 00374000
*   /* SBF - SUBTRACT BUFFER                                 @X04SVLP*/ 00375000
*   /*                                                               */ 00376000
*   /*****************************************************************/ 00377000
*                                                                  0287 00378000
*/*                                                                  */ 00379000
*/* FUNCTION = DECHAINING OF ONE OR ALL BUT ONE DATA BUFCS.          */ 00380000
*/*            TO DO THIS, A FORCE WRITE IS DONE, EACH BUFC IS MADE  */ 00381000
*/*            AVAILABLE, EACH NON-LAST BUFC IS REMOVED FROM THE     */ 00382000
*/*            CHAIN, AND BUFFER COUNTS ARE RESET.                   */ 00383000
*/* INPUT = RBUFC CONTAINS THE ADDRESS OF THE BUFC TO BE REMOVED     */ 00384000
*/*         FROM THE CHAIN OR IS SET TO ZERO IF ALL BUT ONE ARE TO   */ 00385000
*/*         BE REMOVED.                                              */ 00386000
*/* OUTPUT = RBUFC POINTS TO THE BUFC FOLLOWING THE LAST ONE REMOVED.*/ 00387000
*                                                                  0287 00388000
*SBF:                               /*                       @X04SVLP*/ 00389000
*   RESPECIFY                                                      0287 00390000
*     R14 RESTRICTED;               /* SAVE RETURN REG               */ 00391000
SBF      DS    0H                                                  0288 00392000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00393000
         IDASVR14                                                       00394000
*   IF RBUFC=ZERO                   /* SEE IF SUBTR ALL      @X04SVMR*/ 00395000
*     THEN                          /* YES, COME HERE                */ 00396000
         LTR   RBUFC,RBUFC                                         0289 00397000
         BNZ   @RF00289                                            0289 00398000
*     DO;                                                          0290 00399000
*                                                                  0290 00400000
*       /*************************************************************/ 00401000
*       /*                                                           */ 00402000
*       /* IF SUBTRACT ALL WAS REQUESTED, POINT TO A BUFC AND SET THE*/ 00403000
*       /* SUBTRACT COUNT TO THE NUMBER OF BUFFERS IN THE            */ 00404000
*       /* PLACEHOLDER. IF ANY OF THE BUFC'S ON THE PLH CHAIN NEED TO*/ 00405000
*       /* BE WRITTEN, CALL WRBFR. IF NOT, CALL IDAWAIT TO ALLOW ANY */ 00406000
*       /* I/O TO COMPLETE.                                  @X04SVLP*/ 00407000
*       /*                                                           */ 00408000
*       /*************************************************************/ 00409000
*                                                                  0291 00410000
*       RWORK1=ZERO;                /* CLEAR                 @X04SVLP*/ 00411000
         SLR   RWORK1,RWORK1                                       0291 00412000
*       RFY                                                        0292 00413000
*         RWORK1 RSTD;              /* LOCK REG              @X04SVLP*/ 00414000
*       RBUFC=PLHDBUFC;             /* PT TO FIRST           @X04SVLP*/ 00415000
*                                                                  0293 00416000
         L     RBUFC,PLHDBUFC(,RPLH)                               0293 00417000
*       /*************************************************************/ 00418000
*       /*                                                           */ 00419000
*       /* LOOP THRU CHAIN & CHK FOR MUST WRITE REQ'D        @ZA07544*/ 00420000
*       /*                                                           */ 00421000
*       /*************************************************************/ 00422000
*                                                                  0294 00423000
*       DO UNTIL RBUFC=PLHDBUFC;                                   0294 00424000
@DL00294 DS    0H                                                  0295 00425000
*         IF BUFCMW=ON THEN         /* MUST WRITE?           @X04SVLP*/ 00426000
         TM    BUFCMW(RBUFC),B'10000000'                           0295 00427000
         BNO   @RF00295                                            0295 00428000
*           RWORK1=RWORK1|TWO;      /* IND WRITE             @X04SVLP*/ 00429000
         O     RWORK1,@CF00049                                     0296 00430000
*         RBUFC=BUFCNXT2;           /* PT TO NXT             @X04SVLP*/ 00431000
@RF00295 L     @15,BUFCNXT2-1(,RBUFC)                              0297 00432000
         LA    @15,0(,@15)                                         0297 00433000
         LR    RBUFC,@15                                           0297 00434000
*       END;                        /* END DO UNTIL          @X04SVLP*/ 00435000
@DE00294 L     @15,PLHDBUFC(,RPLH)                                 0298 00436000
         CR    RBUFC,@15                                           0298 00437000
         BNE   @DL00294                                            0298 00438000
*       RBUFC=PLHDBUFC->BUFCNXT2;   /* PT AT BUFC            @X04SVLP*/ 00439000
         L     RBUFC,BUFCNXT2-1(,@15)                              0299 00440000
         LA    RBUFC,0(,RBUFC)                                     0299 00441000
*       IF(RWORK1&TWO)^=ZERO THEN   /* ANY WRITES?           @X04SVLP*/ 00442000
         LR    @15,RWORK1                                          0300 00443000
         N     @15,@CF00049                                        0300 00444000
         LTR   @15,@15                                             0300 00445000
         BZ    @RF00300                                            0300 00446000
*         CALL WRBFR;               /* YES, WRITE            @X04SVLP*/ 00447000
         BAL   @14,WRBFR                                           0301 00448000
*       ELSE                        /* NO WRITES             @X04SVLP*/ 00449000
*         DO;                       /* CALL WAIT             @X04SVLP*/ 00450000
         B     @RC00300                                            0302 00451000
@RF00300 DS    0H                                                  0303 00452000
*           RPARM1=PLHDIOB;         /* PT TO IOB             @X04SVLP*/ 00453000
         L     RPARM1,PLHDIOB(,RPLH)                               0303 00454000
*I07:                                                              0304 00455000
*           DO;                     /* IDACALL(IDAWAIT)              */ 00456000
I07      DS    0H                                                  0305 00457000
*             CALL IDAWAIT;         /* EXIT TO IDAWAIT               */ 00458000
         L     @15,@CV00040                                        0305 00459000
         BALR  @14,@15                                             0305 00460000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00461000
         BALR @11,0                                                     00462000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00463000
         USING *,@11                                                    00464000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00465000
         L     @11,=A(@PSTART)                                          00466000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00467000
         USING @PSTART,@11                                              00468000
*           END I07;                /* WAIT                  @X04SVLP*/ 00469000
*         END;                      /*                       @X04SVLP*/ 00470000
*       RWORK1=PLHBFRNO;            /* GET SUB CNT           @X04SVLP*/ 00471000
@RC00300 SLR   RWORK1,RWORK1                                       0312 00472000
         IC    RWORK1,PLHBFRNO(,RPLH)                              0312 00473000
*     END;                          /* END SUBTRACT ALL              */ 00474000
*   ELSE                            /* HERE FOR SINGLE SUB-          */ 00475000
*     DO;                           /* TRACT ONLY                    */ 00476000
         B     @RC00289                                            0314 00477000
@RF00289 DS    0H                                                  0315 00478000
*       IF RBUFC=BUFDBUFC THEN      /* IF INSERT BFR         @X04SVMR*/ 00479000
         L     @15,AMBBUFC(,RAMB)                                  0315 00480000
         C     RBUFC,BUFDBUFC(,@15)                                0315 00481000
         BNE   @RF00315                                            0315 00482000
*         BUFCINS=ON;               /* RESET FLAG            @X04SVMR*/ 00483000
*                                                                  0316 00484000
         OI    BUFCINS(RBUFC),B'00100000'                          0316 00485000
*       /*************************************************************/ 00486000
*       /*                                                           */ 00487000
*       /* IF A SINGLE SUBTRACT (BUFC ASSUMED FREE) SET COUNT TO ONE */ 00488000
*       /*                                                           */ 00489000
*       /*************************************************************/ 00490000
*                                                                  0317 00491000
*       IF BUFCMW=ON THEN           /* SEE IF MUST WRITE             */ 00492000
@RF00315 TM    BUFCMW(RBUFC),B'10000000'                           0317 00493000
         BNO   @RF00317                                            0317 00494000
*         CALL WRBFR;               /* YES, DO OUTPUT        @X04SVLP*/ 00495000
         BAL   @14,WRBFR                                           0318 00496000
*       RESPECIFY                                                  0319 00497000
*         RWORK1 RESTRICTED;        /* GET REGISTER                  */ 00498000
@RF00317 DS    0H                                                  0320 00499000
*       RWORK1=ONE;                 /* SET SUBTRACT COUNT            */ 00500000
         LA    RWORK1,1                                            0320 00501000
*     END;                          /* END, SUBTRACT ONE BFR         */ 00502000
*/*  INVALIDATE THE SUBTRACTED BUFCS RBAS AND REMOVE EXCLUSIVE CONTROL. 00503000
*    IF THE SUBTRACTED BUFCS ARE NOT THE LAST IN THE PLACEHOLDER,  0322 00504000
*    REMOVE THEM FROM THE PLACEHOLDER BUFC CHAIN AND RESET BUFC COUNT*/ 00505000
*                                                                  0322 00506000
*   DO RWORK1=RWORK1 TO ONE BY-ONE; /* SUBTRACT ALL NECESSARY NONLAST   00507000
*                                      BFRS                          */ 00508000
@RC00289 B     @DE00322                                            0322 00509000
@DL00322 DS    0H                                                  0323 00510000
*     IF PLHCNT>ONE|                /* MULTI-STRING?         @ZA32451*/ 00511000
*         (AMBTYPE=AMBDATA&         /* DATA                  @ZA32451*/ 00512000
*         PLHBFRNO^=1)|             /* NOT LAST BFR          @ZA32451*/ 00513000
*         PLHENDRQ=ON|              /* ENDREQ?               @ZA32451*/ 00514000
*         AMBPUG=ON|                /* MULTI-STRING?         @ZA32451*/ 00515000
*         AMBINBUF=ON THEN          /* SHR(4)?               @ZA32451*/ 00516000
         L     @15,AMBPH(,RAMB)                                    0323 00517000
         CLI   PLHCNT(@15),1                                       0323 00518000
         BH    @RT00323                                            0323 00519000
         TM    AMBTYPE(RAMB),B'01000000'                           0323 00520000
         BNZ   @GL00011                                            0323 00521000
         CLI   PLHBFRNO(RPLH),1                                    0323 00522000
         BNE   @RT00323                                            0323 00523000
@GL00011 TM    PLHENDRQ(RPLH),B'01000000'                          0323 00524000
         BO    @RT00323                                            0323 00525000
         TM    AMBPUG(RAMB),B'10000000'                            0323 00526000
         BO    @RT00323                                            0323 00527000
         TM    AMBINBUF(RAMB),B'00000001'                          0323 00528000
         BNO   @RF00323                                            0323 00529000
@RT00323 DS    0H                                                  0324 00530000
*       DO;                         /* YES-FORGET BFR        @X04SVMR*/ 00531000
*         BUFCEXC=OFF;              /* RELEASE EXCL CONTROL          */ 00532000
*         BUFCVAL=OFF;              /* INVALIDATE RBA                */ 00533000
         NI    BUFCEXC(RBUFC),B'11111001'                          0326 00534000
*         BUFCMW=OFF;               /* NO WRITE NEEDED               */ 00535000
         NI    BUFCMW(RBUFC),B'01111111'                           0327 00536000
*         BUFCEPT=ON;               /* NO I/O IN PROGRESS            */ 00537000
         OI    BUFCEPT(RBUFC),B'00000001'                          0328 00538000
*         BUFCEOD=OFF;              /* SET EOD OFF           @ZA14824*/ 00539000
         NI    BUFCEOD(RBUFC),B'11110111'                          0329 00540000
*       END;                        /* END OF FORGET         @X04SVMR*/ 00541000
*     IF PLHBFRNO^=ONE              /* CHECK FOR LAST BFR            */ 00542000
*       THEN                        /* IF NOT LAST, OK               */ 00543000
@RF00323 CLI   PLHBFRNO(RPLH),1                                    0331 00544000
         BE    @RF00331                                            0331 00545000
*       DO;                         /* TO SUBTRACT IT                */ 00546000
*         PLHBFRNO=PLHBFRNO-ONE;    /* DECREMENT BFR COUNT           */ 00547000
         SLR   @15,@15                                             0333 00548000
         IC    @15,PLHBFRNO(,RPLH)                                 0333 00549000
         BCTR  @15,0                                               0333 00550000
         STC   @15,PLHBFRNO(,RPLH)                                 0333 00551000
*         IF PLHRMIN-ONE>ZERO&      /* DECREMENT RMIN        @ZA07544*/ 00552000
*             PLHRMIN-ONE>=PLHBFRNO/TWO THEN/* IF SAFE TO DO @ZA07544*/ 00553000
         SLR   @10,@10                                             0334 00554000
         IC    @10,PLHRMIN(,RPLH)                                  0334 00555000
         BCTR  @10,0                                               0334 00556000
         LTR   @10,@10                                             0334 00557000
         BNP   @RF00334                                            0334 00558000
         SRL   @15,1                                               0334 00559000
         CR    @10,@15                                             0334 00560000
         BL    @RF00334                                            0334 00561000
*           PLHRMIN=PLHRMIN-ONE;    /* RESET SCH CNT         @X04SVMR*/ 00562000
         STC   @10,PLHRMIN(,RPLH)                                  0335 00563000
*         RPARM1=PLHNBUFC;          /* GET ON BUFC CHAIN             */ 00564000
*                                                                  0336 00565000
@RF00334 L     RPARM1,PLHNBUFC(,RPLH)                              0336 00566000
*         /***********************************************************/ 00567000
*         /*                                                         */ 00568000
*         /* REMOVE BUFC FROM LOGICAL AND PHYSICAL ORDER CHAINS      */ 00569000
*         /*                                                 @X04SVMR*/ 00570000
*         /*                                                         */ 00571000
*         /***********************************************************/ 00572000
*                                                                  0337 00573000
*         DO WHILE RPARM1->BUFCNXT2^=RBUFC;/* GET LAST BUFC  @X04SVMR*/ 00574000
         B     @DE00337                                            0337 00575000
@DL00337 DS    0H                                                  0338 00576000
*           RPARM1=RPARM1->BUFCNXT2;/* GET NEXT BUFC         @X04SVMR*/ 00577000
         L     @15,BUFCNXT2-1(,RPARM1)                             0338 00578000
         LA    @15,0(,@15)                                         0338 00579000
         LR    RPARM1,@15                                          0338 00580000
*         END;                      /* END, LOGIC CH         @X04SVMR*/ 00581000
@DE00337 L     @15,BUFCNXT2-1(,RPARM1)                             0339 00582000
         LA    @15,0(,@15)                                         0339 00583000
         CR    RBUFC,@15                                           0339 00584000
         BNE   @DL00337                                            0339 00585000
*         RPARM1->BUFCNXT2=BUFCNXT2;/* POINT AROUND          @X04SVMR   00586000
*                                      BUFC BEING SUBTRACTED         */ 00587000
         MVC   BUFCNXT2(3,RPARM1),BUFCNXT2(RBUFC)                  0340 00588000
*         DO WHILE RPARM1->BUFCNXT1^=RBUFC;/* GET LAST BUFC  @X04SVMR*/ 00589000
         B     @DE00341                                            0341 00590000
@DL00341 DS    0H                                                  0342 00591000
*           RPARM1=RPARM1->BUFCNXT1;/* GET NEXT BUFC         @X04SVMR*/ 00592000
         L     RPARM1,BUFCNXT1(,RPARM1)                            0342 00593000
*         END;                      /* END, PHY CHN          @X04SVMR*/ 00594000
@DE00341 C     RBUFC,BUFCNXT1(,RPARM1)                             0343 00595000
         BNE   @DL00341                                            0343 00596000
*         RPARM1->BUFCNXT1=BUFCNXT1;/* POINT AROUND          @X04SVMR   00597000
*                                      BUFC BEING SUBTRACTED         */ 00598000
         L     @15,BUFCNXT1(,RBUFC)                                0344 00599000
         ST    @15,BUFCNXT1(,RPARM1)                               0344 00600000
*         IF PLHDBUFC=RBUFC THEN    /* SEE IF PLH DATA POINTS        */ 00601000
         C     RBUFC,PLHDBUFC(,RPLH)                               0345 00602000
         BNE   @RF00345                                            0345 00603000
*           PLHDBUFC=BUFCNXT2;      /* TO IT. YES.           @X04SVMR*/ 00604000
         L     @15,BUFCNXT2-1(,RBUFC)                              0346 00605000
         LA    @15,0(,@15)                                         0346 00606000
         ST    @15,PLHDBUFC(,RPLH)                                 0346 00607000
*         IF PLHNBUFC=RBUFC         /* IF NEXT READ POINTS TO        */ 00608000
*           THEN                    /* BUFC POINT AROUND IT.         */ 00609000
@RF00345 C     RBUFC,PLHNBUFC(,RPLH)                               0347 00610000
         BNE   @RF00347                                            0347 00611000
*           DO;                                                    0348 00612000
*             PLHNBUFC=BUFCNXT2;    /* POINT AROUND          @X04SVMR*/ 00613000
         L     @15,BUFCNXT2-1(,RBUFC)                              0349 00614000
         LA    @15,0(,@15)                                         0349 00615000
         ST    @15,PLHNBUFC(,RPLH)                                 0349 00616000
*             PLHFRCNT=PLHFRCNT-ONE;/* DECREMENT FREE COUNT          */ 00617000
         SLR   @15,@15                                             0350 00618000
         IC    @15,PLHFRCNT(,RPLH)                                 0350 00619000
         BCTR  @15,0                                               0350 00620000
         STC   @15,PLHFRCNT(,RPLH)                                 0350 00621000
*           END;                    /* END, SUBTRACT FREE BFR        */ 00622000
*         RPARM1=RBUFC;             /* COPY BUFFER PTR               */ 00623000
@RF00347 LR    RPARM1,RBUFC                                        0352 00624000
*         RBUFC=BUFCNXT2;           /* GET NEXT BUFC         @X04SVMR*/ 00625000
         L     @15,BUFCNXT2-1(,RBUFC)                              0353 00626000
         LA    @15,0(,@15)                                         0353 00627000
         LR    RBUFC,@15                                           0353 00628000
*         RPARM1->BUFCNXT1=RPARM1;  /* CHAIN BUFC TO SELF            */ 00629000
         ST    RPARM1,BUFCNXT1(,RPARM1)                            0354 00630000
*         RPARM1->BUFCNXT2=RPARM1;  /* LOG/PHY BOTH          @X04SVMR*/ 00631000
         STCM  RPARM1,7,BUFCNXT2(RPARM1)                           0355 00632000
*         RPARM1->BUFCAVL=CZERO;    /* MAKE BFR AVAIL        @OX02678*/ 00633000
         MVI   BUFCAVL(RPARM1),B'00000000'                         0356 00634000
*         BUFDRREL=ON;              /* SET BFR RELE          @OX02678*/ 00635000
         L     @15,AMBBUFC(,RAMB)                                  0357 00636000
         OI    BUFDRREL(@15),B'10000000'                           0357 00637000
*       END;                        /* END OF SUBTRACT CODE          */ 00638000
*   END;                            /* END OF SUBTRACT LOOP          */ 00639000
@RF00331 BCTR  RWORK1,0                                            0359 00640000
@DE00322 LTR   RWORK1,RWORK1                                       0359 00641000
         BP    @DL00322                                            0359 00642000
*   RESPECIFY                                                      0360 00643000
*     RWORK1 UNRESTRICTED;          /* DROP REGISTER                 */ 00644000
*SUBTROUT:                          /* EXIT FROM SUB         @X04SVMR*/ 00645000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 00646000
SUBTROUT IDARST14                                                       00647000
*   RETURN;                         /* END OF SUBTRACT BUFFER        */ 00648000
         B     @EL00001                                            0362 00649000
*                                                                  0363 00650000
*   /*****************************************************************/ 00651000
*   /*                                                               */ 00652000
*   /* GRB - GET RBA                                         @X04SVLP*/ 00653000
*   /*                                                               */ 00654000
*   /*****************************************************************/ 00655000
*                                                                  0363 00656000
*/*                                                                  */ 00657000
*/* FUNCTION = READ A CONTROL INTERVAL WITH THE GIVEN RBA.  IF DATA  */ 00658000
*/*            IS SPECIFIED, RESET READ-AHEAD VALUES AND FREE COUNT, */ 00659000
*/*            ACQUIRE EXCLUSIVE CONTROL, INITIATE READ-AHEAD (IF    */ 00660000
*/*            NECESSARY), AND READ THE CONTROL INTERVAL. FOR INDEX, */ 00661000
*/*            ASSIGN THE PLACEHOLDER INDEX BUFC TO SEQUENCE SET     */ 00662000
*/*            REQUESTS AND THE FIRST BUFC FOR HIGH LEVEL INDEX      */ 00663000
*/*            REQUESTS.  FOR INTERMEDIATE INDEX REQUESTS, TRY TO    */ 00664000
*/*            LOCATE THE DESIRED RBA IN THE INTERMEDIATE INDEX BUFC */ 00665000
*/*            POOL.  IF RBA NOT IN POOL, LOCATE THE FIRST EMPTY BFR */ 00666000
*/*            (IF ANY).  IF DESIRED BUFC IS NOT AVAILABLE FOR USE,  */ 00667000
*/*            USE THE PLACEHOLDER INDEX BUFC. IF THE DESIRED RBA IS */ 00668000
*/*            NOT IN THE BUFFER, ISSUE A READ.                      */ 00669000
*/* INPUT = RPARM1 CONTAINS THE DESIRED RBA.  IXSILN CONTAINS THE    */ 00670000
*/*        LEVEL NUMBER OF THE DESIRED INDEX CONTROL INTERVAL.       */ 00671000
*/* OUTPUT = RBUFC CONTAINS THE ADDRESS OF THE BUFC WHOSE BUFFER     */ 00672000
*/*          CONTAINS THE DESIRED RBA.  IF AN ERROR OCCURRED, AN     */ 00673000
*/*          ERROR CODE WILL BE SET IN THE RPL. IF AN EXCLUSIVE      */ 00674000
*/*          CONTROL ERROR, RPARM1 WILL CONTAIN THE RBA FOR WHICH    */ 00675000
*/*          THE CONFLICT OCCURRED.                          @ZA07544*/ 00676000
*                                                                  0363 00677000
*GRB:                               /*                       @X04SVLP*/ 00678000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00679000
GRB      IDASVR14                                                       00680000
*   RESPECIFY                                                      0364 00681000
*     R14 UNRESTRICTED;             /* RELEASE REG 14                */ 00682000
*   IF AMBTYPE=AMBDATA              /* SEE WHAT TYPE OF LOOK-        */ 00683000
*     THEN                          /* ASIDE TO DO.                  */ 00684000
         TM    AMBTYPE(RAMB),B'01000000'                           0365 00685000
         BNZ   @RF00365                                            0365 00686000
*     DO;                                                          0366 00687000
*                                                                  0367 00688000
*       /*************************************************************/ 00689000
*       /*                                                           */ 00690000
*       /* COME HERE IF GET RBA AND DATA LOOK-ASIDE TO DO            */ 00691000
*       /*                                                           */ 00692000
*       /*************************************************************/ 00693000
*                                                                  0367 00694000
*       RBUFC=PLHDBUFC;             /* POINT TO CURR DATA BFR.       */ 00695000
         L     RBUFC,PLHDBUFC(,RPLH)                               0367 00696000
*       PLHNBUFC=BUFCNXT2;          /* READ AHD BUFC         @X04SVMR*/ 00697000
         L     @10,BUFCNXT2-1(,RBUFC)                              0368 00698000
         LA    @10,0(,@10)                                         0368 00699000
         ST    @10,PLHNBUFC(,RPLH)                                 0368 00700000
*       PLHFRCNT=PLHBFRNO-ONE;      /* RESET FREE BUFFER COUNT       */ 00701000
         SLR   @10,@10                                             0369 00702000
         IC    @10,PLHBFRNO(,RPLH)                                 0369 00703000
         BCTR  @10,0                                               0369 00704000
         STC   @10,PLHFRCNT(,RPLH)                                 0369 00705000
*       PLHNRBA=RPARM1;             /* SET READ AHEAD RBA            */ 00706000
         ST    RPARM1,PLHNRBA(,RPLH)                               0370 00707000
*       RPARM1=PLHDIOB;             /* IOB WAIT                      */ 00708000
         L     RPARM1,PLHDIOB(,RPLH)                               0371 00709000
*I08:                                                              0372 00710000
*       DO;                         /* IDACALL(IDAWAIT)              */ 00711000
I08      DS    0H                                                  0373 00712000
*         CALL IDAWAIT;             /* EXIT TO IDAWAIT               */ 00713000
         L     @15,@CV00040                                        0373 00714000
         BALR  @14,@15                                             0373 00715000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00716000
         BALR @11,0                                                     00717000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00718000
         USING *,@11                                                    00719000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00720000
         L     @11,=A(@PSTART)                                          00721000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00722000
         USING @PSTART,@11                                              00723000
*       END I08;                    /* QUIESCE I/O           @X04SVLP*/ 00724000
*       RPARM1=PLHNRBA;             /* RESTORE RBA                   */ 00725000
*                                                                  0379 00726000
         L     RPARM1,PLHNRBA(,RPLH)                               0379 00727000
*       /*************************************************************/ 00728000
*       /*                                                           */ 00729000
*       /* SEE IF DESIRED RBA IS ALREADY HERE. IF NOT, GET EXCLUSIVE */ 00730000
*       /* CONTROL FOR THE DESIRED RBA AND SET UP ANY READ-AHEAD THAT*/ 00731000
*       /* MIGHT BE NECESSARY.                                       */ 00732000
*       /*                                                           */ 00733000
*       /*************************************************************/ 00734000
*                                                                  0380 00735000
*       CALL DATALOOK;              /* ACQUIRE EXCL CNTL             */ 00736000
         BAL   @14,DATALOOK                                        0380 00737000
*       IF RPLERRCD=RPLEXCL         /* SEE IF RD EXCL ERROR          */ 00738000
*         THEN                      /* IF SO, PREPARE EXIT           */ 00739000
         CLI   RPLERRCD(RRPL),20                                   0381 00740000
         BNE   @RF00381                                            0381 00741000
*         DO;                       /*                               */ 00742000
*           GEN(IDARST14);          /* RESTORE RETURN REGISTER       */ 00743000
         IDARST14                                                       00744000
*           RETURN;                 /* EXIT                          */ 00745000
         B     @EL00001                                            0384 00746000
*         END;                      /* END OF ERROR CODE             */ 00747000
*       IF(RPLSEQ=ON&               /* IF THIS IS A SEQUENTIAL       */ 00748000
*           (RPLREQ=RPLGET|         /* GET OR                @X04SVMR*/ 00749000
*           RPLREQ=RPLPOINT))|      /* POINT OR IF IT        @X04SVMR*/ 00750000
*           PLHRAHD=ON              /* IS FORCED,            @X04SVMR*/ 00751000
*         THEN                      /* READ AHEAD.           @X04SVMR*/ 00752000
@RF00381 TM    RPLSEQ(RRPL),B'00100000'                            0386 00753000
         BNO   @GL00015                                            0386 00754000
         CLI   RPLREQ(RRPL),0                                      0386 00755000
         BE    @RT00386                                            0386 00756000
         CLI   RPLREQ(RRPL),3                                      0386 00757000
         BE    @RT00386                                            0386 00758000
@GL00015 TM    PLHRAHD(RPLH),B'01000000'                           0386 00759000
         BNO   @RF00386                                            0386 00760000
@RT00386 DS    0H                                                  0387 00761000
*         DO;                                                      0387 00762000
*           CALL RDAHEAD;           /* ATTEMPT MORE READS            */ 00763000
         BAL   @14,RDAHEAD                                         0388 00764000
*           IF PLHRVRS=ON THEN      /* IF OUT OF ORDER,      @X04SVMR*/ 00765000
         TM    PLHRVRS(RPLH),B'00001000'                           0389 00766000
         BNO   @RF00389                                            0389 00767000
*I09:                                                              0390 00768000
*             DO;                   /* IDACALL(IDARVRS1)             */ 00769000
I09      DS    0H                                                  0391 00770000
*               CALL IDARVRS1;      /* EXIT TO IDARVRS1              */ 00771000
         L     @15,@CV00039                                        0391 00772000
         BALR  @14,@15                                             0391 00773000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00774000
         BALR @11,0                                                     00775000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00776000
         USING *,@11                                                    00777000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00778000
         L     @11,=A(@PSTART)                                          00779000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00780000
         USING @PSTART,@11                                              00781000
*             END I09;              /* REVERSE CHAIN         @X04SVMR*/ 00782000
*         END;                      /* END OF READ AHEAD     @X04SVMR*/ 00783000
@RF00389 DS    0H                                                  0398 00784000
*       RBUFC=PLHDBUFC;             /* RESET FIRST BFR PTR           */ 00785000
@RF00386 L     RBUFC,PLHDBUFC(,RPLH)                               0398 00786000
*       RPARM1=ZERO;                /* CLEAR FOR TEST        @X04SVMR*/ 00787000
         SLR   RPARM1,RPARM1                                       0399 00788000
*       DO UNTIL RBUFC=PLHDBUFC;    /* CHECK ALL BRS         @X04SVMR*/ 00789000
@DL00400 DS    0H                                                  0401 00790000
*         IF BUFCRRD=ON THEN        /* IF READ TO DO         @X04SVMR*/ 00791000
         TM    BUFCRRD(RBUFC),B'00100000'                          0401 00792000
         BNO   @RF00401                                            0401 00793000
*           RPARM1=RBUFC;           /* SET INDICATOR         @X04SVMR*/ 00794000
         LR    RPARM1,RBUFC                                        0402 00795000
*         RBUFC=BUFCNXT2;           /* GO TO NEXT BFR        @X04SVMR*/ 00796000
@RF00401 L     @10,BUFCNXT2-1(,RBUFC)                              0403 00797000
         LA    @10,0(,@10)                                         0403 00798000
         LR    RBUFC,@10                                           0403 00799000
*       END;                        /* END OF READ CHK@X04SVMR       */ 00800000
@DE00400 C     RBUFC,PLHDBUFC(,RPLH)                               0404 00801000
         BNE   @DL00400                                            0404 00802000
*       IF RPARM1^=ZERO THEN        /* IF A RD TO DO         @X04SVMR*/ 00803000
         LTR   RPARM1,RPARM1                                       0405 00804000
         BZ    @RF00405                                            0405 00805000
*         DO;                       /* MUST CALL I/O         @X04SVMR*/ 00806000
*           RPARM1=PLHDIOB;         /* POINT TO DATA IOB             */ 00807000
         L     RPARM1,PLHDIOB(,RPLH)                               0407 00808000
*           CALL READBFR;           /* READ IN FIRST BFR             */ 00809000
         BAL   @14,READBFR                                         0408 00810000
*         END;                      /* END I/O CALL          @X04SVMR*/ 00811000
*     END;                          /* END, DATA LOOK-ASIDE          */ 00812000
*                                                                  0411 00813000
*   /*****************************************************************/ 00814000
*   /*                                                               */ 00815000
*   /* GET RBA FOR INDEX                                             */ 00816000
*   /*                                                               */ 00817000
*   /*****************************************************************/ 00818000
*                                                                  0411 00819000
*   ELSE                            /* HERE FOR INDEX LOOK-          */ 00820000
*     DO;                           /* ASIDE                         */ 00821000
*                                                                  0411 00822000
         B     @RC00365                                            0411 00823000
@RF00365 DS    0H                                                  0412 00824000
*       /*************************************************************/ 00825000
*       /*                                                           */ 00826000
*       /* IF THIS IS A SEQUENCE SET REQUEST, USE THE PLH BUFC.      */ 00827000
*       /*                                                           */ 00828000
*       /*************************************************************/ 00829000
*                                                                  0412 00830000
*       IF PLHSSR=ON                /* IF SEQUENCE SET               */ 00831000
*         THEN                      /* REQUEST USE PLH BUFC          */ 00832000
         TM    PLHSSR(RPLH),B'00010000'                            0412 00833000
         BNO   @RF00412                                            0412 00834000
*         DO;                                                      0413 00835000
*           PLHSSR=OFF;             /* RESET SEQ SET FLAG            */ 00836000
         NI    PLHSSR(RPLH),B'11101111'                            0414 00837000
*           RBUFC=PLHIBUFC;         /* POINT TO PLH BUFC             */ 00838000
         L     RBUFC,PLHIBUFC(,RPLH)                               0415 00839000
*         END;                      /* END OF SEQ SET CODE           */ 00840000
*                                                                  0416 00841000
*       /*************************************************************/ 00842000
*       /*                                                           */ 00843000
*       /* LOCATE THE PROPER BUFC FOR A NON-SEQUENCE SET REQUEST     */ 00844000
*       /*                                                           */ 00845000
*       /*************************************************************/ 00846000
*                                                                  0417 00847000
*       ELSE                        /* HERE IF NOT SEQ SET           */ 00848000
*         DO;                                                      0417 00849000
*                                                                  0417 00850000
         B     @RC00412                                            0417 00851000
@RF00412 DS    0H                                                  0418 00852000
*           /*********************************************************/ 00853000
*           /*                                                       */ 00854000
*           /* FOR HIGH LEVEL INDEX REQUESTS USE THE FIRST BUFC      */ 00855000
*           /*                                                       */ 00856000
*           /*********************************************************/ 00857000
*                                                                  0418 00858000
*           RBUFC=BUFDBUFC;         /* 1ST BUFC PTR          @X04SVMR*/ 00859000
         L     @10,AMBBUFC(,RAMB)                                  0418 00860000
         L     RBUFC,BUFDBUFC(,@10)                                0418 00861000
*           RFY                                                    0419 00862000
*             RWORK3 RSTD;          /* GET WORK REGISTER             */ 00863000
*                                                                  0419 00864000
*           /*********************************************************/ 00865000
*           /*                                                       */ 00866000
*           /* FOR INTERMEDIATE LEVELS OF INDEX USE ONE OF THE COMMON*/ 00867000
*           /* INDEX BUFFERS, IF ANY. SEE IF THE RBA IS ALREADY IN A */ 00868000
*           /* BUFFER. IF SO, USE ITS BUFC. IF NOT, USE AN EMPTY     */ 00869000
*           /* BUFC. IF THERE ARE NO EMPTY BUFCS, USE EITHER THE HIGH*/ 00870000
*           /* LEVEL INDEX BUFC, THE PLACEHOLDER BUFC, OR LOWER LEVEL*/ 00871000
*           /* INTERMEDIATE BUFC.                            @X04SVMR*/ 00872000
*           /*                                                       */ 00873000
*           /*********************************************************/ 00874000
*                                                                  0420 00875000
*           IF RPARM1^=AMDHLRBA     /* SEE IF HI LVL IX REQ.         */ 00876000
*             THEN                  /* NOT HI LVL REQ        @X04SVMR*/ 00877000
         L     @06,AMBDSB(,RAMB)                                   0420 00878000
         CL    RPARM1,AMDHLRBA(,@06)                               0420 00879000
         BE    @RF00420                                            0420 00880000
*             DO;                                                  0421 00881000
*               RFY                                                0422 00882000
*                (RWORK1,                                          0422 00883000
*                 RWORK2) RSTD;     /* GET REGS              @X04SVMR*/ 00884000
*               RWORK1=ZERO;        /* CLEAR WORK REGISTER           */ 00885000
         SLR   RWORK1,RWORK1                                       0423 00886000
*               RWORK3=ZERO;        /* NO LOWER LEVEL BUFC FOUND YET    00887000
*                                                            @X04SVMR*/ 00888000
*                                                                  0424 00889000
         SLR   RWORK3,RWORK3                                       0424 00890000
*               /*****************************************************/ 00891000
*               /*                                                   */ 00892000
*               /* POINT TO THE FIRST INTERMEDIATE LEVEL BUFC        */ 00893000
*               /*                                                   */ 00894000
*               /*****************************************************/ 00895000
*                                                                  0425 00896000
*               RBUFC=BUFCHAIN;     /* PT PAST 1ST 1         @X04SVMR*/ 00897000
         L     RBUFC,BUFCHAIN(,RBUFC)                              0425 00898000
*               DO RWORK2=BUFDRCIX TO ONE BY-ONE;/* SEARCH BFRS      */ 00899000
         SLR   RWORK2,RWORK2                                       0426 00900000
         IC    RWORK2,BUFDRCIX(,@10)                               0426 00901000
         B     @DE00426                                            0426 00902000
@DL00426 DS    0H                                                  0427 00903000
*                 IF BUFCVAL=ON     /* SEE IF RBA VALID              */ 00904000
*                   THEN            /* YES--CHECK FOR RBA HIT        */ 00905000
         TM    BUFCVAL(RBUFC),B'00000100'                          0427 00906000
         BNO   @RF00427                                            0427 00907000
*                   DO;                                            0428 00908000
*                     IF BUFCDDDD=RPARM1/* DO RBAS MATCH             */ 00909000
*                       THEN                                       0429 00910000
         CL    RPARM1,BUFCDDDD(,RBUFC)                             0429 00911000
         BE    @RT00429                                            0429 00912000
*                       GOTO RBAFND;/* IF SO, END SEARCH             */ 00913000
*                                                                  0430 00914000
*                     /***********************************************/ 00915000
*                     /*                                             */ 00916000
*                     /* IF BUFFER HAS A LOWER LEVEL INDEX RECORD OR */ 00917000
*                     /* ONE OF THE SAME LEVEL, REMEMBER ITS         */ 00918000
*                     /* LOCATION.                           @X04SVMR*/ 00919000
*                     /*                                             */ 00920000
*                     /***********************************************/ 00921000
*                                                                  0431 00922000
*                     IF BUFCIDXL=<IXSILN THEN/* IF BFR      @X04SVMR*/ 00923000
         CLC   BUFCIDXL(1,RBUFC),IXSILN+200(RPLH)                  0431 00924000
         BH    @RF00431                                            0431 00925000
*                       RWORK3=RBUFC;/* LOWER, REPLACE       @X04SVMR*/ 00926000
         LR    RWORK3,RBUFC                                        0432 00927000
*                   END;            /* END, VALID RBA                */ 00928000
*                 ELSE              /* BUFFER EMPTY                  */ 00929000
*                   RWORK1=RBUFC;   /* SAVE A(UNKNOWN RBA)           */ 00930000
         B     @RC00427                                            0434 00931000
@RF00427 LR    RWORK1,RBUFC                                        0434 00932000
*                 RBUFC=BUFCHAIN;   /* GET NEXT BUFFER@X04SVMR       */ 00933000
@RC00427 L     RBUFC,BUFCHAIN(,RBUFC)                              0435 00934000
*               END;                /* END OF SEARCH                 */ 00935000
         BCTR  RWORK2,0                                            0436 00936000
@DE00426 CL    RWORK2,@CF00036                                     0436 00937000
         BNL   @DL00426                                            0436 00938000
*               IF RWORK1^=ZERO THEN/* ARE ANY RBAS UNKNOWN          */ 00939000
         LTR   RWORK1,RWORK1                                       0437 00940000
         BZ    @RF00437                                            0437 00941000
*                 RBUFC=RWORK1;     /* YES, FILL UNKNOWN RBA         */ 00942000
*                                                                  0438 00943000
         LR    RBUFC,RWORK1                                        0438 00944000
*               /*****************************************************/ 00945000
*               /*                                                   */ 00946000
*               /* IF NO EMPTIES, REPLACE LOWER OR EQUAL VALUE BUFFER*/ 00947000
*               /* (IF ANY).                                 @X04SVMR*/ 00948000
*               /*                                                   */ 00949000
*               /*****************************************************/ 00950000
*                                                                  0439 00951000
*               ELSE                /* NO EMPTIES                    */ 00952000
*                 IF RWORK3^=ZERO THEN/* ANY REPLACES?               */ 00953000
         B     @RC00437                                            0439 00954000
@RF00437 LTR   RWORK3,RWORK3                                       0439 00955000
         BZ    @RF00439                                            0439 00956000
*                   RBUFC=RWORK3;   /* YES, USE COMMON BUFC          */ 00957000
         LR    RBUFC,RWORK3                                        0440 00958000
*                 ELSE              /* NO REPLACES IF HERE           */ 00959000
*                   RBUFC=PLHIBUFC; /* USE PRIVATE BUFC              */ 00960000
         B     @RC00439                                            0441 00961000
@RF00439 L     RBUFC,PLHIBUFC(,RPLH)                               0441 00962000
*               RFY                                                0442 00963000
*                 RWORK3 UNRSTD;    /* DROP WORK REGISTER            */ 00964000
@RC00439 DS    0H                                                  0442 00965000
@RC00437 DS    0H                                                  0443 00966000
*             END;                  /* END OF COMMON BFR CODE        */ 00967000
*RBAFND:                            /* REJOIN NON-SEQUENCE SET       */ 00968000
*                                                                  0444 00969000
*           /*********************************************************/ 00970000
*           /*                                                       */ 00971000
*           /* ATTEMPT TO OBTAIN THE DESIRED BUFC. IF IT IS          */ 00972000
*           /* UNAVAILABLE, USE THE PLACEHOLDER BUFC.                */ 00973000
*           /*                                                       */ 00974000
*           /*********************************************************/ 00975000
*                                                                  0444 00976000
*           GEN(TS    BUFCAVL(RBUFC));/* SEE IF BUFC AVAILABLE       */ 00977000
@RF00420 DS    0H                                                  0444 00978000
RBAFND   TS    BUFCAVL(RBUFC)                                           00979000
*           GEN(BZ    HVIBUFC);     /* BRANCH IF SO                  */ 00980000
         BZ    HVIBUFC                                                  00981000
*           RBUFC=PLHIBUFC;         /* IF BUSY USE PLH BUFC          */ 00982000
         L     RBUFC,PLHIBUFC(,RPLH)                               0446 00983000
*HVIBUFC:                                                          0447 00984000
*           BUFCPLH=RPLH;           /* ASSOCIATE BUFC WITH PLH       */ 00985000
*                                                                  0447 00986000
HVIBUFC  ST    RPLH,BUFCPLH(,RBUFC)                                0447 00987000
*           /*********************************************************/ 00988000
*           /*                                                       */ 00989000
*           /* REMEMBER THE INDEX LEVEL THAT WILL BE READ    @X04SVMR*/ 00990000
*           /*                                                       */ 00991000
*           /*********************************************************/ 00992000
*                                                                  0448 00993000
*           BUFCIDXL=IXSILN;        /* SET IX LEVEL          @X04SVMR*/ 00994000
         IC    @10,IXSILN+200(,RPLH)                               0448 00995000
         STC   @10,BUFCIDXL(,RBUFC)                                0448 00996000
*         END;                      /* END NON-SEQUENCE SET          */ 00997000
*                                                                  0449 00998000
*       /*************************************************************/ 00999000
*       /*                                                           */ 01000000
*       /* PREPARE THE BUFC FOR READING IF DESIRED RBA NOT PRESENT.  */ 01001000
*       /*                                                           */ 01002000
*       /*************************************************************/ 01003000
*                                                                  0450 01004000
*       IF BUFCVAL=OFF|             /* IF RBA IS INVALID OR IF       */ 01005000
*           (AMBINBUF=ON&           /* IF SHR(4), NOT        @ZA07698*/ 01006000
*           (BUFCIDXL<=ONE|         /* HI IX,                @ZA07698*/ 01007000
*           AMBSCRA=ON|AMBUCRA=ON|  /*                       @ZA07698*/ 01008000
*           AMBCAT=ON))|            /* OR IF CATLG,          @ZA07698*/ 01009000
*           BUFCDDDD^=RPARM1        /* IT DOES NOT MATCH THE         */ 01010000
*         THEN                      /* ONE DESIRED, A READ IS        */ 01011000
@RC00412 TM    BUFCVAL(RBUFC),B'00000100'                          0450 01012000
         BZ    @RT00450                                            0450 01013000
         TM    AMBINBUF(RAMB),B'00000001'                          0450 01014000
         BNO   @GL00018                                            0450 01015000
         CLI   BUFCIDXL(RBUFC),1                                   0450 01016000
         BNH   @RT00450                                            0450 01017000
         TM    AMBSCRA(RAMB),B'00011100'                           0450 01018000
         BNZ   @RT00450                                            0450 01019000
@GL00018 CL    RPARM1,BUFCDDDD(,RBUFC)                             0450 01020000
         BE    @RF00450                                            0450 01021000
@RT00450 DS    0H                                                  0451 01022000
*         DO;                       /* NECESSARY.                    */ 01023000
*           BUFCRRD=ON;             /* CAUSE A READ TO BE DONE       */ 01024000
         OI    BUFCRRD(RBUFC),B'00100000'                          0452 01025000
*           BUFCDDDD=RPARM1;        /* SET UP RBA                    */ 01026000
         ST    RPARM1,BUFCDDDD(,RBUFC)                             0453 01027000
*           BUFCVAL=ON;             /* MAKE RBA VALID                */ 01028000
         OI    BUFCVAL(RBUFC),B'00000100'                          0454 01029000
*           BUFCXEDB=OFF;           /* RESET INVALID RBA             */ 01030000
         NI    BUFCXEDB(RBUFC),B'11111011'                         0455 01031000
*         END;                      /* END OF MUST READ SETUP        */ 01032000
*       RPARM1=PLHIIOB;             /* POINT TO INDEX IOB            */ 01033000
*                                                                  0457 01034000
@RF00450 L     RPARM1,PLHIIOB(,RPLH)                               0457 01035000
*       /*************************************************************/ 01036000
*       /*                                                           */ 01037000
*       /* IF A READ IS REQUIRED, CALL I/O MANAGER TO READ THE       */ 01038000
*       /* CONTROL INTERVAL, CALL IDAWAIT TO SYNCHRONIZE THE I/O, AND*/ 01039000
*       /* CHECK FOR ANY ERRORS.                                     */ 01040000
*       /*                                                           */ 01041000
*       /*************************************************************/ 01042000
*                                                                  0458 01043000
*       IF BUFCRRD=ON THEN          /* READ REQUIRED?        @X04SVMR*/ 01044000
         TM    BUFCRRD(RBUFC),B'00100000'                          0458 01045000
         BNO   @RF00458                                            0458 01046000
*         DO;                       /*                       @X04SVMR*/ 01047000
*           CALL READBFR;           /* READ IX BUFFER        @X04SVMR*/ 01048000
         BAL   @14,READBFR                                         0460 01049000
*         END;                      /* END OF IX READ        @X04SVMR*/ 01050000
*     END;                          /* END OF IX LOOK-ASIDE          */ 01051000
@RF00458 DS    0H                                                  0463 01052000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 01053000
@RC00365 DS    0H                                                  0463 01054000
         IDARST14                                                       01055000
*   RETURN;                         /* END, GET BY RBA               */ 01056000
         B     @EL00001                                            0464 01057000
*                                                                  0465 01058000
*   /*****************************************************************/ 01059000
*   /*                                                               */ 01060000
*   /* GNFL - GET NEXT BUFC                                  @X04SVLP*/ 01061000
*   /*                                                               */ 01062000
*   /*****************************************************************/ 01063000
*                                                                  0465 01064000
*/*                                                                  */ 01065000
*/* FUNCTION = PROVIDE A POINTER TO AN INDEX OR DATA WORK BUFC.      */ 01066000
*/* INPUT = STANDARD VSAM REGISTERS.                                 */ 01067000
*/* OUTPUT = RBUFC POINTS TO THE DATA INSERT BUFC OR THE PLACEHOLDER */ 01068000
*/*          INDEX BUFC.                                             */ 01069000
*                                                                  0465 01070000
*GNFL:                              /* GET WK BUFFER         @X04SVLP*/ 01071000
*   RESPECIFY                                                      0465 01072000
*     R14 RESTRICTED;               /* GET REGISTER                  */ 01073000
*                                                                  0465 01074000
GNFL     DS    0H                                                  0466 01075000
*   /*****************************************************************/ 01076000
*   /*                                                               */ 01077000
*   /* IF THE REQUEST IS FOR A DATA WORK BUFC, ASSIGN THE INSERT     */ 01078000
*   /* BUFC. FOR INDEX, ASSIGN THE PLACEHOLDER INDEX BUFC.           */ 01079000
*   /*                                                               */ 01080000
*   /*****************************************************************/ 01081000
*                                                                  0466 01082000
*   IF AMBTYPE=AMBDATA              /* SEE IF DATA AMB               */ 01083000
*     THEN                          /* YES, USE DIWA BUFFER          */ 01084000
         TM    AMBTYPE(RAMB),B'01000000'                           0466 01085000
         BNZ   @RF00466                                            0466 01086000
*     RBUFC=DIWBUFC;                /* POINT TO INSERT BUFC          */ 01087000
         L     @15,AMBIWA(,RAMB)                                   0467 01088000
         L     RBUFC,DIWBUFC(,@15)                                 0467 01089000
*   ELSE                            /* NO, INDEX AMB                 */ 01090000
*     RBUFC=PLHIBUFC;               /* USE INDEX BUFFER              */ 01091000
         B     @RC00466                                            0468 01092000
@RF00466 L     RBUFC,PLHIBUFC(,RPLH)                               0468 01093000
*   BUFCPLH=RPLH;                   /* INDICATE BUFFER OWNER         */ 01094000
@RC00466 ST    RPLH,BUFCPLH(,RBUFC)                                0469 01095000
*   BUFCVAL=OFF;                    /* INVALIDATE THE RBA            */ 01096000
         NI    BUFCVAL(RBUFC),B'11111011'                          0470 01097000
*   RETURN;                         /* RETURN TO CALLER              */ 01098000
         B     @EL00001                                            0471 01099000
*                                                                  0472 01100000
*   /*****************************************************************/ 01101000
*   /*                                                               */ 01102000
*   /* GNNFL - GET NEXT BUFC FOR OUTPUT                      @X04SVLP*/ 01103000
*   /*                                                               */ 01104000
*   /*****************************************************************/ 01105000
*                                                                  0472 01106000
*/*                                                                  */ 01107000
*/* FUNCTION = ASSIGN THE NEXT BUFC IN THE PLACEHOLDER CHAIN FOR     */ 01108000
*/*            OUTPUT. (IF THE NEXT BUFC HAS NOT YET BEEN WRITTEN OR */ 01109000
*/*            IF THRESHOLD REACHED, FORCE OUT ALL WRITES).          */ 01110000
*/* INPUT = STANDARD VSAM REGISTERS.                                 */ 01111000
*/* OUTPUT = RBUFC POINTS TO THE BUFC WHICH IS TO BE USED FOR OUTPUT.*/ 01112000
*                                                                  0472 01113000
*GNNFL:                             /* GET NEXT PLH BUFFER   @X04SVLP*/ 01114000
*   RESPECIFY                                                      0472 01115000
*     R14 RESTRICTED;               /* SAVE RETURN REG               */ 01116000
GNNFL    DS    0H                                                  0473 01117000
*   GEN(IDASVR14);                  /* SAVE RETURN REG       @X04SVMR*/ 01118000
         IDASVR14                                                       01119000
*   RESPECIFY                                                      0474 01120000
*     R14 UNRESTRICTED;             /* RELEASE REG 14        @X04SVMR*/ 01121000
*                                                                  0474 01122000
*   /*****************************************************************/ 01123000
*   /*                                                               */ 01124000
*   /* GET THE NEXT DATA BUFFER IN THE CHAIN. IF NECESSARY, WRITE IT */ 01125000
*   /* BEFORE RETURNING THE BUFFER TO THE USER FOR REFILLING.        */ 01126000
*   /*                                                               */ 01127000
*   /*****************************************************************/ 01128000
*                                                                  0475 01129000
*   RBUFC=PLHDBUFC;                 /* GET NEXT AVAILABLE BFR        */ 01130000
         L     RBUFC,PLHDBUFC(,RPLH)                               0475 01131000
*   IF PLHFRCNT>=PLHRMIN THEN       /* SEE IF AT             @X04SVMR*/ 01132000
         CLC   PLHFRCNT(1,RPLH),PLHRMIN(RPLH)                      0476 01133000
         BL    @RF00476                                            0476 01134000
*     DO;                           /* THRESHOLD YET.        @X04SVMR*/ 01135000
*       PLHFRCNT=ZERO;              /* RESET FREE CNT        @X04SVMR*/ 01136000
         MVI   PLHFRCNT(RPLH),X'00'                                0478 01137000
*       RPARM1=PLHDIOB;             /* POINT TO IOB          @X04SVMR*/ 01138000
         L     RPARM1,PLHDIOB(,RPLH)                               0479 01139000
*I10:                                                              0480 01140000
*       DO;                         /* IDACALL(IDAWAIT)              */ 01141000
I10      DS    0H                                                  0481 01142000
*         CALL IDAWAIT;             /* EXIT TO IDAWAIT               */ 01143000
         L     @15,@CV00040                                        0481 01144000
         BALR  @14,@15                                             0481 01145000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01146000
         BALR @11,0                                                     01147000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01148000
         USING *,@11                                                    01149000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01150000
         L     @11,=A(@PSTART)                                          01151000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01152000
         USING @PSTART,@11                                              01153000
*       END I10;                    /* QUIESCE PRIOR I/0     @X04SVMR*/ 01154000
*       DO UNTIL RBUFC=PLHDBUFC;    /* DO ALL                @X04SVMR*/ 01155000
@DL00487 DS    0H                                                  0488 01156000
*         CALL ERRORCHK;            /* I/O ERR?              @X04SVMR*/ 01157000
         BAL   @14,ERRORCHK                                        0488 01158000
*         RBUFC=BUFCNXT2;           /* NEXT                  @X04SVMR*/ 01159000
         L     @10,BUFCNXT2-1(,RBUFC)                              0489 01160000
         LA    @10,0(,@10)                                         0489 01161000
         LR    RBUFC,@10                                           0489 01162000
*       END;                        /* END DO UNTIL          @X04SVMR*/ 01163000
@DE00487 C     RBUFC,PLHDBUFC(,RPLH)                               0490 01164000
         BNE   @DL00487                                            0490 01165000
*       IF RPLERREG=ZERO THEN       /* IF NO ERRORS, DO I/O  @X04SVMR*/ 01166000
         CLI   RPLERREG(RRPL),0                                    0491 01167000
         BNE   @RF00491                                            0491 01168000
*         DO;                       /* I/O MANAGER INTERFACE @Z40GSDT*/ 01169000
*           IF BUFCMW=ON&           /* IF MUST WRITE AND     @Z40GSDT*/ 01170000
*               RPLASY=OFF THEN     /* SYNCHRONOUS           @Z40GSDT*/ 01171000
         TM    BUFCMW(RBUFC),B'10000000'                           0493 01172000
         BNO   @RF00493                                            0493 01173000
         TM    RPLASY(RRPL),B'00001000'                            0493 01174000
         BNZ   @RF00493                                            0493 01175000
*             PLHSR=ON;             /* DO SUSPEND/RESUME     @Z40GSDT*/ 01176000
         OI    PLHSR(RPLH),B'00000001'                             0494 01177000
*I11:                                                              0495 01178000
*           DO;                     /* IDACALL(IDA019R3)             */ 01179000
@RF00493 DS    0H                                                  0495 01180000
I11      DS    0H                                                  0496 01181000
*             CALL IDA019R3;        /* EXIT TO IDA019R3              */ 01182000
         L     @15,@CV00038                                        0496 01183000
         BALR  @14,@15                                             0496 01184000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01185000
         BALR @11,0                                                     01186000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01187000
         USING *,@11                                                    01188000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01189000
         L     @11,=A(@PSTART)                                          01190000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01191000
         USING @PSTART,@11                                              01192000
*           END I11;                /* CALL I/O MANAGER      @X04SVMR*/ 01193000
*         END;                      /* I/O MANAGER INTERFACE @Z40GSDT*/ 01194000
*     END;                          /* END OF START I/O CODE @X04SVMR*/ 01195000
@RF00491 DS    0H                                                  0504 01196000
*   BUFCVAL=OFF;                    /* UNKNOWN RBA                   */ 01197000
@RF00476 NI    BUFCVAL(RBUFC),B'11111011'                          0504 01198000
*   IF BUFCMW=ON|                   /* IF MUST WRITE OR      @X04SVMR*/ 01199000
*       BUFCEPT=OFF THEN            /* IF NOT POSTED,        @X04SVMR*/ 01200000
         TM    BUFCMW(RBUFC),B'10000000'                           0505 01201000
         BO    @RT00505                                            0505 01202000
         TM    BUFCEPT(RBUFC),B'00000001'                          0505 01203000
         BNZ   @RF00505                                            0505 01204000
@RT00505 DS    0H                                                  0506 01205000
*     DO;                           /*                       @X04SVMR*/ 01206000
*       RPARM1=PLHDIOB;             /* SET IOB PTR           @X04SVMR*/ 01207000
         L     RPARM1,PLHDIOB(,RPLH)                               0507 01208000
*I12:                                                              0508 01209000
*       DO;                         /* IDACALL(IDAWAIT)              */ 01210000
I12      DS    0H                                                  0509 01211000
*         CALL IDAWAIT;             /* EXIT TO IDAWAIT               */ 01212000
         L     @15,@CV00040                                        0509 01213000
         BALR  @14,@15                                             0509 01214000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01215000
         BALR @11,0                                                     01216000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01217000
         USING *,@11                                                    01218000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01219000
         L     @11,=A(@PSTART)                                          01220000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01221000
         USING @PSTART,@11                                              01222000
*       END I12;                    /* WAIT FOR I/O.         @X04SVMR*/ 01223000
*       IF PLHDBUFC->BUFCMW=ON THEN /* IF MUST WRITE,        @X04SVMR*/ 01224000
         L     @10,PLHDBUFC(,RPLH)                                 0515 01225000
         TM    BUFCMW(@10),B'10000000'                             0515 01226000
         BNO   @RF00515                                            0515 01227000
*         DO;                       /* WRAP-AROUND OCCURRED  @X04SVMR*/ 01228000
*           RBUFC=PLHDBUFC;         /* POINT TO CURRENT BUFC @X04SVMR*/ 01229000
         LR    RBUFC,@10                                           0517 01230000
*           CALL WRBFR;             /* WRITE OUT BUFFER      @X04SVLP*/ 01231000
         BAL   @14,WRBFR                                           0518 01232000
*         END;                      /* END OF WRAP-AROUND    @X04SVMR*/ 01233000
*       ELSE                        /* WRITING HAS FINISHED  @X04SVMR*/ 01234000
*         DO UNTIL RBUFC=PLHDBUFC;  /* CHECK FOR PRIOR ERROR @X04SVMR*/ 01235000
         B     @RC00515                                            0520 01236000
@RF00515 DS    0H                                                  0520 01237000
@DL00520 DS    0H                                                  0521 01238000
*           CALL ERRORCHK;          /* CHECK FOR ERROR       @X04SVMR*/ 01239000
         BAL   @14,ERRORCHK                                        0521 01240000
*           RBUFC=BUFCNXT2;         /* NEXT                  @ZA08016*/ 01241000
         L     @10,BUFCNXT2-1(,RBUFC)                              0522 01242000
         LA    @10,0(,@10)                                         0522 01243000
         LR    RBUFC,@10                                           0522 01244000
*         END;                      /* END PRIOR ERROR TEST  @X04SVMR*/ 01245000
@DE00520 C     RBUFC,PLHDBUFC(,RPLH)                               0523 01246000
         BNE   @DL00520                                            0523 01247000
*     END;                          /* END OF NON-POSTED/MW  @X04SVMR*/ 01248000
@RC00515 DS    0H                                                  0525 01249000
*   GEN(IDARST14);                  /* RESTORE RETURN REG    @X04SVMR*/ 01250000
@RF00505 DS    0H                                                  0525 01251000
         IDARST14                                                       01252000
*   RESPECIFY                                                      0526 01253000
*     R14 RESTRICTED;               /* SAVE RETURN REG       @X04SVMR*/ 01254000
*   RETURN CODE(RPLERREG);          /* END OF GET NEXT, NOFILL       */ 01255000
         SLR   @15,@15                                             0527 01256000
         IC    @15,RPLERREG(,RRPL)                                 0527 01257000
         BR    @14                                                 0527 01258000
*                                                                  0528 01259000
*   /*****************************************************************/ 01260000
*   /*                                                               */ 01261000
*   /* GNXT - GET NEXT CI                                    @X04SVLP*/ 01262000
*   /*                                                               */ 01263000
*   /*****************************************************************/ 01264000
*                                                                  0528 01265000
*/*                                                                  */ 01266000
*/* FUNCTION = GET THE NEXT CONTROL INTERVAL IN LOGICAL OR PHYSICAL  */ 01267000
*/*            SEQUENCE.  FIRST, CHECK FOR END-OF-DATA AND THEN      */ 01268000
*/*            CHECK FOR THE PROPER EXCLUSIVE CONTROL.               */ 01269000
*/* INPUT = STANDARD VSAM REGISTERS. (PLHDBUFC HAS BEEN ADVANCED TO  */ 01270000
*/*         THE PROPER BUFC BY THE FREE BUFFER ROUTINE.)             */ 01271000
*/* OUTPUT = RBUFC IS SET AND A RETURN CODE IS IN THE RPL.  IF AN    */ 01272000
*/*         EXCLUSIVE CONTROL ERROR OCCURS, RPARM1 WILL CONTAIN THE  */ 01273000
*/*         RBA FOR WHICH IT HAPPENED.                       @ZA07544*/ 01274000
*                                                                  0528 01275000
*GNXT:                              /* HERE FOR GET NEXT     @X04SVLP*/ 01276000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01277000
GNXT     IDASVR14                                                       01278000
*   RESPECIFY                                                      0529 01279000
*     R14 UNRESTRICTED;             /* RELEASE REG 14                */ 01280000
*                                                                  0529 01281000
*   /*****************************************************************/ 01282000
*   /*                                                               */ 01283000
*   /* GET THE NEXT DATA CONTROL INTERVAL. IF NO RBA (SEE IDAFRBA) IS*/ 01284000
*   /* SET, SET AN END-OF-DATA CONDITION.                            */ 01285000
*   /*                                                               */ 01286000
*   /*****************************************************************/ 01287000
*                                                                  0530 01288000
*   RBUFC=PLHDBUFC;                 /* POINT TO NEXT BUFC            */ 01289000
         L     RBUFC,PLHDBUFC(,RPLH)                               0530 01290000
*   IF BUFCEPT=OFF THEN             /* IF I/O UNDONE         @ZA17533*/ 01291000
         TM    BUFCEPT(RBUFC),B'00000001'                          0531 01292000
         BNZ   @RF00531                                            0531 01293000
*     DO;                           /* WAIT                  @X04SVMR*/ 01294000
*       RPARM1=PLHDIOB;             /* SET PTR TO DATA IOB           */ 01295000
         L     RPARM1,PLHDIOB(,RPLH)                               0533 01296000
*I13:                                                              0534 01297000
*       DO;                         /* IDACALL(IDAWAIT)              */ 01298000
I13      DS    0H                                                  0535 01299000
*         CALL IDAWAIT;             /* EXIT TO IDAWAIT               */ 01300000
         L     @15,@CV00040                                        0535 01301000
         BALR  @14,@15                                             0535 01302000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01303000
         BALR @11,0                                                     01304000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01305000
         USING *,@11                                                    01306000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01307000
         L     @11,=A(@PSTART)                                          01308000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01309000
         USING @PSTART,@11                                              01310000
*       END I13;                    /* WAIT FOR BUFFER       @X04SVLP*/ 01311000
*       RBUFC=PLHDBUFC;             /* RESET BUFC PTR        @X04SVMR*/ 01312000
         L     RBUFC,PLHDBUFC(,RPLH)                               0541 01313000
*     END;                          /* END OF WAIT           @X04SVMR*/ 01314000
*   IF BUFCEOD=ON                   /* IF BUFCEOD ON         @ZA14824*/ 01315000
*     THEN                          /* IT CAN ONLY MEAN THAT         */ 01316000
@RF00531 TM    BUFCEOD(RBUFC),B'00001000'                          0543 01317000
         BNO   @RF00543                                            0543 01318000
*     DO;                           /* READ AHEAD DETECTED AN        */ 01319000
*       RPLERREG='08'X;             /* END OF DATA CONDITION.        */ 01320000
         MVI   RPLERREG(RRPL),X'08'                                0545 01321000
*       RPLERRCD=RPLEODER;          /* SET EOD CODE IN RPL           */ 01322000
         MVI   RPLERRCD(RRPL),X'04'                                0546 01323000
*     END;                          /* END OF EOD CODE               */ 01324000
*                                                                  0547 01325000
*   /*****************************************************************/ 01326000
*   /*                                                               */ 01327000
*   /* MAKE SURE OF PROPER EXCLUSIVE CONTROL AND LACK OF ERRORS      */ 01328000
*   /*                                                               */ 01329000
*   /*****************************************************************/ 01330000
*                                                                  0548 01331000
*   ELSE                            /* RBA VALID = NO EOD            */ 01332000
*     DO;                                                          0548 01333000
         B     @RC00543                                            0548 01334000
@RF00543 DS    0H                                                  0549 01335000
*       IF PLHRDEXC=ON&             /* IF EXCL CNTL NEEDED,          */ 01336000
*           BUFCEXC=OFF             /* BUT NOT OBTAINED, TRY         */ 01337000
*         THEN                      /* TO OBTAIN EXCL CNTL.          */ 01338000
         TM    PLHRDEXC(RPLH),B'00001000'                          0549 01339000
         BNO   @RF00549                                            0549 01340000
         TM    BUFCEXC(RBUFC),B'00000010'                          0549 01341000
         BNZ   @RF00549                                            0549 01342000
*         DO;                                                      0550 01343000
*           BUFCRRD=ON;             /* REREAD IS REQUIRED            */ 01344000
         OI    BUFCRRD(RBUFC),B'00100000'                          0551 01345000
*           CALL GETEXCL;           /* GET EXCLUSIVE CONTROL         */ 01346000
         BAL   @14,GETEXCL                                         0552 01347000
*           RPARM1=PLHDIOB;         /* I/O IS FOR DATA               */ 01348000
         L     RPARM1,PLHDIOB(,RPLH)                               0553 01349000
*           IF RPLERREG='00'X THEN  /* IF EXCL CNTL ACQUIRED,        */ 01350000
         CLI   RPLERREG(RRPL),0                                    0554 01351000
         BNE   @RF00554                                            0554 01352000
*             DO;                   /*                       @ZA17533*/ 01353000
*I14:                                                              0556 01354000
*               DO;                 /* IDACALL(IDAWAIT)              */ 01355000
I14      DS    0H                                                  0557 01356000
*                 CALL IDAWAIT;     /* EXIT TO IDAWAIT               */ 01357000
         L     @15,@CV00040                                        0557 01358000
         BALR  @14,@15                                             0557 01359000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01360000
         BALR @11,0                                                     01361000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01362000
         USING *,@11                                                    01363000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01364000
         L     @11,=A(@PSTART)                                          01365000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01366000
         USING @PSTART,@11                                              01367000
*               END I14;            /* WAIT FOR I/O          @ZA17533*/ 01368000
*               RPARM1=PLHDIOB;     /* I/O IS FOR DATA       @ZA17533*/ 01369000
         L     RPARM1,PLHDIOB(,RPLH)                               0563 01370000
*               CALL READBFR;       /* READ THE CINV.                */ 01371000
         BAL   @14,READBFR                                         0564 01372000
*             END;                  /*                       @ZA17533*/ 01373000
*           ELSE                    /* EXCL CNTL ERROR               */ 01374000
*             DO;                   /*                       @ZA07544*/ 01375000
         B     @RC00554                                            0566 01376000
@RF00554 DS    0H                                                  0567 01377000
*               RPARM1=BUFCDDDD;    /* PASS BACK RBA         @ZA07544*/ 01378000
         L     RPARM1,BUFCDDDD(,RBUFC)                             0567 01379000
*               BUFCRRD=OFF;        /* NO READ IF ERROR              */ 01380000
         NI    BUFCRRD(RBUFC),B'11011111'                          0568 01381000
*             END;                  /* END EXCL ERROR        @ZA07544*/ 01382000
*         END;                      /* END OF OBTAIN EXCL CNTL       */ 01383000
*       ELSE                        /* EXCL CNTL OK                  */ 01384000
*         DO;                       /*                       @X04SVMR*/ 01385000
         B     @RC00549                                            0571 01386000
@RF00549 DS    0H                                                  0572 01387000
*           IF BUFCRRD=ON THEN      /* READ TO DO?           @X04SVMR*/ 01388000
         TM    BUFCRRD(RBUFC),B'00100000'                          0572 01389000
         BNO   @RF00572                                            0572 01390000
*             DO;                   /*                       @X04SVMR*/ 01391000
*               RPARM1=PLHDIOB;     /* I/O IS FOR DATA       @ZA17533*/ 01392000
         L     RPARM1,PLHDIOB(,RPLH)                               0574 01393000
*I15:                                                              0575 01394000
*               DO;                 /* IDACALL(IDAWAIT)              */ 01395000
I15      DS    0H                                                  0576 01396000
*                 CALL IDAWAIT;     /* EXIT TO IDAWAIT               */ 01397000
         L     @15,@CV00040                                        0576 01398000
         BALR  @14,@15                                             0576 01399000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01400000
         BALR @11,0                                                     01401000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01402000
         USING *,@11                                                    01403000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01404000
         L     @11,=A(@PSTART)                                          01405000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01406000
         USING @PSTART,@11                                              01407000
*               END I15;            /* WAIT FOR I/O          @ZA17533*/ 01408000
*               RPARM1=PLHDIOB;     /* SET IOB PTR           @X04SVMR*/ 01409000
         L     RPARM1,PLHDIOB(,RPLH)                               0582 01410000
*               CALL READBFR;       /* YES, DO READ          @X04SVMR*/ 01411000
         BAL   @14,READBFR                                         0583 01412000
*             END;                  /* END READ TO DO        @X04SVMR*/ 01413000
*           CALL ERRORCHK;          /* SEE IF ANY ERRORS             */ 01414000
@RF00572 BAL   @14,ERRORCHK                                        0585 01415000
*         END;                      /* END OF EXCL OK        @X04SVMR*/ 01416000
*     END;                          /* END OF VALID RBA              */ 01417000
@RC00549 DS    0H                                                  0588 01418000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 01419000
@RC00543 DS    0H                                                  0588 01420000
         IDARST14                                                       01421000
*   RESPECIFY                                                      0589 01422000
*     R14 RESTRICTED;               /* SAVE RETURN REG               */ 01423000
*   RETURN;                         /* END OF GET NEXT               */ 01424000
         B     @EL00001                                            0590 01425000
*                                                                  0591 01426000
*   /*****************************************************************/ 01427000
*   /*                                                               */ 01428000
*   /* GETEXCL - GET EXCLUSIVE CONTROL OF BUFC               @X04SVLP*/ 01429000
*   /*                                                               */ 01430000
*   /*****************************************************************/ 01431000
*                                                                  0591 01432000
*/*                                                                  */ 01433000
*/* FUNCTION = GET PROPER EXCLUSIVE CONTROL OF A CONTROL INTERVAL.   */ 01434000
*/* INPUT = RBUFC CONTAINS THE BUFC FOR WHICH EXCLUSIVE CONTROL IS   */ 01435000
*/*         TO BE OBTAINED.                                          */ 01436000
*/* OUTPUT = BUFC IS SET TO INDICATE LEVEL OF EXCLUSIVE CONTROL      */ 01437000
*/*          OBTAINED AND A RETURN CODE IS SET IN THE RPL.           */ 01438000
*                                                                  0591 01439000
*GETEXCL:                           /* ACQUIRE EXCL CNTL OF          */ 01440000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* BFR IF NECESSARY            */ 01441000
GETEXCL  DS    0H                                                  0592 01442000
*   RESPECIFY                                                      0592 01443000
*     R14 RESTRICTED;               /* SAVE RETURN REG               */ 01444000
*   BUFXIRBA=BUFCDDDD;              /* COPY RBA              @X04SVLP*/ 01445000
*                                                                  0593 01446000
         L     @15,BUFCDDDD(,RBUFC)                                0593 01447000
         ST    @15,BUFXIRBA(,RBUFC)                                0593 01448000
*   /*****************************************************************/ 01449000
*   /*                                                               */ 01450000
*   /* IF PLACEHOLDER IS IN READ EXCLUSIVE MODE, GET CINV IN         */ 01451000
*   /* EXCLUSIVE CONTROL.                                            */ 01452000
*   /*                                                               */ 01453000
*   /*****************************************************************/ 01454000
*                                                                  0594 01455000
*   IF PLHRDEXC=ON                  /* SEE IF EXCL CNTL IS           */ 01456000
*     THEN                          /* REQUIRED                      */ 01457000
         TM    PLHRDEXC(RPLH),B'00001000'                          0594 01458000
         BNO   @RF00594                                            0594 01459000
*     DO;                           /* YES, ACQUIRE IT               */ 01460000
*                                                                  0595 01461000
*       /*************************************************************/ 01462000
*       /*                                                           */ 01463000
*       /* MARK THE BUFC AS HAVING THE RECORD IN EXCLUSIVE CONTROL.  */ 01464000
*       /*                                                           */ 01465000
*       /*************************************************************/ 01466000
*                                                                  0596 01467000
*       BUFCEXC=ON;                 /* INDICATE EXCL CNTL            */ 01468000
         OI    BUFCEXC(RBUFC),B'00000010'                          0596 01469000
*       GEN(BR    0);               /* SYNCH FOR M P         @X04SVMR*/ 01470000
*                                                                  0597 01471000
         BR    0                                                        01472000
*       /*************************************************************/ 01473000
*       /*                                                           */ 01474000
*       /* IF A CONFLICT EXISTS WITH ANOTHER PLACEHOLDER THAT IS     */ 01475000
*       /* PERFORMING A CONTROL AREA SPLIT, EXIT WITH ERROR          */ 01476000
*       /* INDICATED.                                                */ 01477000
*       /*                                                           */ 01478000
*       /*************************************************************/ 01479000
*                                                                  0598 01480000
*       IF(DIWCAS=ON&               /* IF CA SPLIT ACTIVE    @ZA25653*/ 01481000
*           DIWPLH^=RPLH&           /* FOR OTHER PLH,        @ZA25653*/ 01482000
*           (BUFXIRBA>=DIWLRBA&     /* RBA GT START, BUT     @ZA25653*/ 01483000
*           BUFXIRBA<=DIWHRBA))|    /* LT END OF CA, OR      @ZA25653*/ 01484000
*           (DIWSHIFT=ON&           /* INSERT CI SHIFTED     @ZA25653*/ 01485000
*           DIWPLH^=RPLH&           /* FOR OTHER PLH,        @ZA25653*/ 01486000
*           BUFXIRBA=DIWINRBA) THEN /* AND CONFLICT.         @ZA25653*/ 01487000
         L     @15,AMBIWA(,RAMB)                                   0598 01488000
         TM    DIWCAS(@15),B'10000000'                             0598 01489000
         BNO   @GL00025                                            0598 01490000
         C     RPLH,DIWPLH(,@15)                                   0598 01491000
         BE    @GL00025                                            0598 01492000
         L     @10,BUFXIRBA(,RBUFC)                                0598 01493000
         CL    @10,DIWLRBA(,@15)                                   0598 01494000
         BL    @GL00025                                            0598 01495000
         CL    @10,DIWHRBA(,@15)                                   0598 01496000
         BNH   @RT00598                                            0598 01497000
@GL00025 L     @15,AMBIWA(,RAMB)                                   0598 01498000
         TM    DIWSHIFT(@15),B'00000100'                           0598 01499000
         BNO   @RF00598                                            0598 01500000
         C     RPLH,DIWPLH(,@15)                                   0598 01501000
         BE    @RF00598                                            0598 01502000
         CLC   BUFXIRBA(4,RBUFC),DIWINRBA(@15)                     0598 01503000
         BE    @RT00598                                            0598 01504000
*         GO TO RDEXCLER;           /* IF SO, SET ERROR.     @OX02678*/ 01505000
*       RESPECIFY                                                  0600 01506000
*        (RWORK1,                                                  0600 01507000
*         RWORK2) RESTRICTED;       /* GET REGISTERS                 */ 01508000
*                                                                  0600 01509000
@RF00598 DS    0H                                                  0601 01510000
*       /*************************************************************/ 01511000
*       /*                                                           */ 01512000
*       /* SEE IF ANY OTHER PLACEHOLDERS HAVE THE CONTROL INTERVAL IN*/ 01513000
*       /* EXCLUSIVE CONTROL OR HAVE AN UPDATE PENDING FOR IT.       */ 01514000
*       /*                                                           */ 01515000
*       /*************************************************************/ 01516000
*                                                                  0601 01517000
*       RWORK1=BUFDBUFC;            /* POINT TO FIRST BUFC@X04SVMR   */ 01518000
         L     @15,AMBBUFC(,RAMB)                                  0601 01519000
         L     RWORK1,BUFDBUFC(,@15)                               0601 01520000
*       DO RWORK2=BUFDRNO TO ONE BY-ONE;/* SEARCH BUFFER POOL.       */ 01521000
         SLR   RWORK2,RWORK2                                       0602 01522000
         IC    RWORK2,BUFDRNO(,@15)                                0602 01523000
         B     @DE00602                                            0602 01524000
@DL00602 DS    0H                                                  0603 01525000
*         IF RWORK1->BUFCPLH^=RPLH  /* SEE IF BFR ASSIGNED TO        */ 01526000
*           THEN                    /* OTHER PLH. YES, CHECK         */ 01527000
         C     RPLH,BUFCPLH(,RWORK1)                               0603 01528000
         BE    @RF00603                                            0603 01529000
*           DO;                     /* IT FOR CONFLICT               */ 01530000
*             IF RWORK1->BUFCEXC=ON&/* IF IN EXCL CNTL AND IF        */ 01531000
*                 (RWORK1->BUFCDDDD=BUFXIRBA|/* INPUT RBA MATCH    0605 01532000
*                                                            @ZA07530*/ 01533000
*                 (AMDSPAN=ON&      /* SPANNED RECORDS OK    @ZA07530*/ 01534000
*                 RWORK1->BUFXIRBA=BUFXIRBA)) THEN/*         @ZA07530*/ 01535000
         TM    BUFCEXC(RWORK1),B'00000010'                         0605 01536000
         BNO   @RF00605                                            0605 01537000
         L     @15,BUFXIRBA(,RBUFC)                                0605 01538000
         CL    @15,BUFCDDDD(,RWORK1)                               0605 01539000
         BE    @RT00605                                            0605 01540000
         L     @10,AMBDSB(,RAMB)                                   0605 01541000
         TM    AMDSPAN(@10),B'00000001'                            0605 01542000
         BNO   @RF00605                                            0605 01543000
         CL    @15,BUFXIRBA(,RWORK1)                               0605 01544000
         BE    @RT00605                                            0605 01545000
*               GO TO RDEXCLER;     /* SET ERROR CONDITION.          */ 01546000
*             IF RWORK1->BUFCMW=ON& /* IF BFR WILL BE WRITTEN        */ 01547000
*                 (RWORK1->BUFCORBA=BUFXIRBA|/* OUTPUT RBA MATCH   0607 01548000
*                                                            @ZA07530*/ 01549000
*                 (AMDSPAN=ON&      /* SPANNED RECORDS OK    @ZA07530*/ 01550000
*                 RWORK1->BUFXORBA=BUFXIRBA)) THEN/*         @ZA07530*/ 01551000
@RF00605 TM    BUFCMW(RWORK1),B'10000000'                          0607 01552000
         BNO   @RF00607                                            0607 01553000
         L     @15,BUFXIRBA(,RBUFC)                                0607 01554000
         CL    @15,BUFCORBA(,RWORK1)                               0607 01555000
         BE    @RT00607                                            0607 01556000
         L     @10,AMBDSB(,RAMB)                                   0607 01557000
         TM    AMDSPAN(@10),B'00000001'                            0607 01558000
         BNO   @RF00607                                            0607 01559000
         CL    @15,BUFXORBA(,RWORK1)                               0607 01560000
         BE    @RT00607                                            0607 01561000
*               GO TO RDEXCLER;     /* SET ERROR IF EQUAL.           */ 01562000
*           END;                    /* END OF OTHER PLH CODE         */ 01563000
@RF00607 DS    0H                                                  0610 01564000
*         RWORK1=RWORK1->BUFCHAIN;  /* POINT TO NEXT BFR     @X04SVMR*/ 01565000
@RF00603 L     RWORK1,BUFCHAIN(,RWORK1)                            0610 01566000
*       END;                        /* END OF BFR POOL SEARCH        */ 01567000
         BCTR  RWORK2,0                                            0611 01568000
@DE00602 CL    RWORK2,@CF00036                                     0611 01569000
         BNL   @DL00602                                            0611 01570000
*       RESPECIFY                                                  0612 01571000
*        (RWORK1,                                                  0612 01572000
*         RWORK2) UNRESTRICTED;     /* DROP REGISTERS                */ 01573000
*       RETURN;                     /* EXCL CNTL ACQUIRED OK         */ 01574000
*                                                                  0613 01575000
@EL00003 DS    0H                                                  0613 01576000
@EF00003 DS    0H                                                  0613 01577000
@ER00003 BR    @14                                                 0613 01578000
*       /*************************************************************/ 01579000
*       /*                                                           */ 01580000
*       /* IF ANOTHER PLACEHOLDER HAS EXCLUSIVE CONTROL, RESET OUR   */ 01581000
*       /* EXCLUSIVE CONTROL AND SET AN ERROR IN THE RPL.            */ 01582000
*       /*                                                           */ 01583000
*       /*************************************************************/ 01584000
*                                                                  0614 01585000
*RDEXCLER:                          /* HERE FOR ERROR                */ 01586000
*       BUFCEXC=OFF;                /* RESET EXCL CNTL FLAG          */ 01587000
RDEXCLER NI    BUFCEXC(RBUFC),B'11111101'                          0614 01588000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 01589000
         MVI   RPLERREG(RRPL),X'08'                                0615 01590000
*       RPLERRCD=RPLEXCL;           /* SET EXCL CNTL CONFLICT        */ 01591000
         MVI   RPLERRCD(RRPL),X'14'                                0616 01592000
*     END;                          /* END EXCL CNTL REQUIRED        */ 01593000
*   ELSE                            /* NOT IN RD EXCL        @X04SVMR*/ 01594000
*     BUFCEXC=OFF;                  /* NO EXCL CNTL          @X04SVMR*/ 01595000
         B     @RC00594                                            0618 01596000
@RF00594 NI    BUFCEXC(RBUFC),B'11111101'                          0618 01597000
*   END GETEXCL;                    /* END, GET EXCL CNTL CODE       */ 01598000
         B     @EL00003                                            0619 01599000
*                                                                  0620 01600000
*   /*****************************************************************/ 01601000
*   /*                                                               */ 01602000
*   /* READBFR - READ A CONTROL INTERVAL                             */ 01603000
*   /*                                                               */ 01604000
*   /*****************************************************************/ 01605000
*                                                                  0620 01606000
*/*                                                                  */ 01607000
*/* FUNCTION = CALL I/O MANAGER, CALL IDAWAIT, AND CHECK FOR ERROR   */ 01608000
*/* INPUT = RBUFC IS THE BUFC TO READ, RPARM1 IS THE IOB POINTER.    */ 01609000
*/*         THE OTHER REGISTERS HAVE THEIR STANDARD CONTENTS.        */ 01610000
*/* OUTPUT = REGISTERS UNCHANGED, ERROR CODE SET IN RPL.             */ 01611000
*                                                                  0620 01612000
*READBFR:                                                          0620 01613000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0620 01614000
READBFR  DS    0H                                                  0621 01615000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01616000
         IDASVR14                                                       01617000
*   RFY                                                            0622 01618000
*     R14 UNRSTD;                   /* RELEASE REGISTER              */ 01619000
*   IF RPLASY=OFF THEN              /* IF SYNCHRONOUS REQUEST      0623 01620000
*                                                            @Z40GSDT*/ 01621000
         TM    RPLASY(RRPL),B'00001000'                            0623 01622000
         BNZ   @RF00623                                            0623 01623000
*     PLHSR=ON;                     /* DO SUSPEND/RESUME     @Z40GSDT*/ 01624000
         OI    PLHSR(RPLH),B'00000001'                             0624 01625000
*I16:                                                              0625 01626000
*   DO;                             /* IDACALL(IDA019R3)             */ 01627000
@RF00623 DS    0H                                                  0625 01628000
I16      DS    0H                                                  0626 01629000
*     CALL IDA019R3;                /* EXIT TO IDA019R3              */ 01630000
         L     @15,@CV00038                                        0626 01631000
         BALR  @14,@15                                             0626 01632000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01633000
         BALR @11,0                                                     01634000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01635000
         USING *,@11                                                    01636000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01637000
         L     @11,=A(@PSTART)                                          01638000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01639000
         USING @PSTART,@11                                              01640000
*   END I16;                        /* CALL I/O MGR FOR READ         */ 01641000
*I17:                                                              0632 01642000
*   DO;                             /* IDACALL(IDAWAIT)              */ 01643000
I17      DS    0H                                                  0633 01644000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 01645000
         L     @15,@CV00040                                        0633 01646000
         BALR  @14,@15                                             0633 01647000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01648000
         BALR @11,0                                                     01649000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01650000
         USING *,@11                                                    01651000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01652000
         L     @11,=A(@PSTART)                                          01653000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01654000
         USING @PSTART,@11                                              01655000
*   END I17;                        /* WAIT FOR I/O COMPLETION     0638 01656000
*                                                            @X04SVLP*/ 01657000
*   CALL ERRORCHK;                  /* CHECK FOR READ ERROR          */ 01658000
         BAL   @14,ERRORCHK                                        0639 01659000
*   GEN(IDARST14);                  /* RESTORE RETURN                */ 01660000
         IDARST14                                                       01661000
*   END READBFR;                    /* END OF READ BUFFER            */ 01662000
@EL00004 DS    0H                                                  0641 01663000
@EF00004 DS    0H                                                  0641 01664000
@ER00004 BR    @14                                                 0641 01665000
*                                                                  0642 01666000
*   /*****************************************************************/ 01667000
*   /*                                                               */ 01668000
*   /* ERRORCHK -- CHECK FOR READ ERROR                              */ 01669000
*   /*                                                               */ 01670000
*   /*****************************************************************/ 01671000
*                                                                  0642 01672000
*/*                                                                  */ 01673000
*/* FUNCTION = TEST BUFC FOR SUCCESS OF READ.                        */ 01674000
*/* INPUT = RBUFC IS ADDRESS OF BUFC FOR READ.                       */ 01675000
*/* OUTPUT = RETURN CODE IS SET IN THE RPL.                          */ 01676000
*/*          RPARM1 = RBA IF ERROR.                          @ZA07544*/ 01677000
*                                                                  0642 01678000
*ERRORCHK:                          /* CHECK FOR ERRORS              */ 01679000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0642 01680000
ERRORCHK DS    0H                                                  0643 01681000
*   RFY                                                            0643 01682000
*     R14 RSTD;                     /* GUARD RETURN REGISTER         */ 01683000
*   IF BUFCER1=ON|                  /* CHECK FOR INPUT ERROR,        */ 01684000
*       BUFCER2=ON|                 /* OUTPUT ERROR, OR DATA         */ 01685000
*       (BUFCRRD=ON&AMBTYPE=OFF) THEN/* READ ERROR IN        @ZA14809*/ 01686000
         TM    BUFCER1(RBUFC),B'00011000'                          0644 01687000
         BNZ   @RT00644                                            0644 01688000
         TM    BUFCRRD(RBUFC),B'00100000'                          0644 01689000
         BNO   @RF00644                                            0644 01690000
         TM    AMBTYPE(RAMB),B'01000000'                           0644 01691000
         BNZ   @RF00644                                            0644 01692000
@RT00644 DS    0H                                                  0645 01693000
*     DO;                           /* THE DATA CHAIN        @ZA14809*/ 01694000
*       RPLERREG='0C'X;             /* SET PHYSICAL I/O ERROR        */ 01695000
         MVI   RPLERREG(RRPL),X'0C'                                0646 01696000
*       RPARM1=BUFCDDDD;            /* PASS BACK RBA         @ZA07544*/ 01697000
         L     RPARM1,BUFCDDDD(,RBUFC)                             0647 01698000
*     END;                          /* END I/O ERROR         @ZA07544*/ 01699000
*   IF BUFCXEDB=ON                  /* IF VOLUME NOT MOUNTED,        */ 01700000
*     THEN                          /* SET ERROR.                    */ 01701000
@RF00644 TM    BUFCXEDB(RBUFC),B'00000100'                         0649 01702000
         BNO   @RF00649                                            0649 01703000
*     DO;                                                          0650 01704000
*       RPARM1=BUFCDDDD;            /* PASS BACK RBA         @ZA07544*/ 01705000
         L     RPARM1,BUFCDDDD(,RBUFC)                             0651 01706000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 01707000
         MVI   RPLERREG(RRPL),X'08'                                0652 01708000
*       RPLERRCD=RPLNOMNT;          /* SET MOUNT ERROR               */ 01709000
         MVI   RPLERRCD(RRPL),X'18'                                0653 01710000
*       BUFCXEDB=OFF;               /* RESET ERROR           @ZA19610*/ 01711000
         NI    BUFCXEDB(RBUFC),B'11111011'                         0654 01712000
*     END;                          /* END OF MOUNT ERROR            */ 01713000
*   RFY                                                            0656 01714000
*     R14 UNRSTD;                   /* RELEASE RETURN REG            */ 01715000
*   END ERRORCHK;                   /* END OF READ ERROR CHECK       */ 01716000
@EL00005 DS    0H                                                  0657 01717000
@EF00005 DS    0H                                                  0657 01718000
@ER00005 BR    @14                                                 0657 01719000
*                                                                  0658 01720000
*   /*****************************************************************/ 01721000
*   /*                                                               */ 01722000
*   /* RDAHEAD                                                       */ 01723000
*   /*                                                               */ 01724000
*   /*****************************************************************/ 01725000
*                                                                  0658 01726000
*/*                                                                  */ 01727000
*/* FUNCTION = PREPARE FREE BUFFERS FOR INPUT.                       */ 01728000
*/* INPUT = PLHNBUFC POINTS TO THE NEXT READ AHEAD BUFC.             */ 01729000
*/* OUTPUT = FREE BUFFER COUNT AND PLHNBUFC MODIFIED.                */ 01730000
*                                                                  0658 01731000
*RDAHEAD:                           /* READ AHEAD ROUTINE            */ 01732000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0658 01733000
RDAHEAD  DS    0H                                                  0659 01734000
*   IF RPLERREG^='00'X THEN         /* IF PREVIOUS ERRORS,           */ 01735000
         CLI   RPLERREG(RRPL),0                                    0659 01736000
         BNE   @RT00659                                            0659 01737000
*     RETURN;                       /* NO READ-AHEAD.                */ 01738000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01739000
         IDASVR14                                                       01740000
*   RESPECIFY                                                      0662 01741000
*     R14 UNRESTRICTED;             /* RELEASE REG 14                */ 01742000
*                                                                  0662 01743000
*   /*****************************************************************/ 01744000
*   /*                                                               */ 01745000
*   /* ATTEMPT READ-AHEAD UNTIL ENOUGH BUFFERS ARE SCHEDULED         */ 01746000
*   /* END-OF-DATA IS DETECTED, OR END OF CONTROL AREA IS REACHED.   */ 01747000
*   /*                                                               */ 01748000
*   /*****************************************************************/ 01749000
*                                                                  0663 01750000
*   DO WHILE PLHFRCNT>ZERO;         /*                       @X04SVMR*/ 01751000
*                                                                  0663 01752000
         B     @DE00663                                            0663 01753000
@DL00663 DS    0H                                                  0664 01754000
*     /***************************************************************/ 01755000
*     /*                                                             */ 01756000
*     /* PREVENT READ AHEAD FROM OVERLAYING FIRST SEGMENT OF A       */ 01757000
*     /* SPANNED RECORD MARKED FOR UPDATE IN ORDER TO USE THE EMPTY  */ 01758000
*     /* BUFFERS FOR THE NEW VERSION OF THE RECORD.          @X04SVMR*/ 01759000
*     /*                                                             */ 01760000
*     /***************************************************************/ 01761000
*                                                                  0664 01762000
*     IF PLHNBUFC->BUFXIRBA=PLHDBUFC->BUFXIRBA&PLHDBUFC->BUFCEXC=ON&    01763000
*         PLHFRCNT^=PLHBFRNO THEN   /* STOP RD AHEAD         @X04SVMR*/ 01764000
         L     @10,PLHNBUFC(,RPLH)                                 0664 01765000
         L     @05,PLHDBUFC(,RPLH)                                 0664 01766000
         CLC   BUFXIRBA(4,@10),BUFXIRBA(@05)                       0664 01767000
         BNE   @RF00664                                            0664 01768000
         TM    BUFCEXC(@05),B'00000010'                            0664 01769000
         BNO   @RF00664                                            0664 01770000
         CLC   PLHFRCNT(1,RPLH),PLHBFRNO(RPLH)                     0664 01771000
         BNE   @RT00664                                            0664 01772000
*       GO TO RDAHEADX;                                            0665 01773000
*                                                                  0665 01774000
*     /***************************************************************/ 01775000
*     /*                                                             */ 01776000
*     /* GET THE NEXT SEQUENTIAL DATA RBA. IF READ-AHEAD WOULD SPAN A*/ 01777000
*     /* CONTROL AREA, RETURN TO CALLER.                             */ 01778000
*     /*                                                             */ 01779000
*     /***************************************************************/ 01780000
*                                                                  0666 01781000
*I18:                                                              0666 01782000
*     DO;                           /* IDACALL(IDAFRBA)              */ 01783000
@RF00664 DS    0H                                                  0666 01784000
I18      DS    0H                                                  0667 01785000
*       CALL IDAFRBA;               /* EXIT TO IDAFRBA               */ 01786000
         L     @15,@CV00041                                        0667 01787000
         BALR  @14,@15                                             0667 01788000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01789000
         BALR @11,0                                                     01790000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01791000
         USING *,@11                                                    01792000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01793000
         L     @11,=A(@PSTART)                                          01794000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01795000
         USING @PSTART,@11                                              01796000
*     END I18;                      /* GET NEXT RBA          @X04SVMR*/ 01797000
*     RFY                                                          0673 01798000
*       R15 RSTD;                   /* GET RETURN CODE               */ 01799000
*     IF RPLERREG^='00'X THEN       /* STOP READ-AHEAD IF AN         */ 01800000
         CLI   RPLERREG(RRPL),0                                    0674 01801000
         BNE   @RT00674                                            0674 01802000
*       GO TO RDAHEADX;             /* INDEX I/O ERROR OCCURS.       */ 01803000
*     IF R15=TWO THEN               /* IF CA END,                    */ 01804000
         C     R15,@CF00049                                        0676 01805000
         BE    @RT00676                                            0676 01806000
*       GO TO RDAHEADX;             /* STOP READ AHEAD               */ 01807000
*     RBUFC=PLHNBUFC;               /* PTR TO READ AHEAD BUFR        */ 01808000
         L     RBUFC,PLHNBUFC(,RPLH)                               0678 01809000
*     PLHFRCNT=PLHFRCNT-ONE;        /* DECREMENT FREE BFR CNT        */ 01810000
         SLR   @14,@14                                             0679 01811000
         IC    @14,PLHFRCNT(,RPLH)                                 0679 01812000
         BCTR  @14,0                                               0679 01813000
         STC   @14,PLHFRCNT(,RPLH)                                 0679 01814000
*     PLHNBUFC=BUFCNXT2;            /* NEW READ AHD          @X04SVMR*/ 01815000
*                                                                  0680 01816000
         L     @14,BUFCNXT2-1(,RBUFC)                              0680 01817000
         LA    @14,0(,@14)                                         0680 01818000
         ST    @14,PLHNBUFC(,RPLH)                                 0680 01819000
*     /***************************************************************/ 01820000
*     /*                                                             */ 01821000
*     /* IF NOT END-OF-DATA, PUT THE RBA IN THE READ-AHEAD BUFC, SET */ 01822000
*     /* READ REQUIRED, AND GET EXCLUSIVE CONTROL OF THE CONTROL     */ 01823000
*     /* INTERVAL.                                                   */ 01824000
*     /*                                                             */ 01825000
*     /***************************************************************/ 01826000
*                                                                  0681 01827000
*     IF R15=ZERO                   /* IF NOT EOD, CALL              */ 01828000
*       THEN                        /* DATA LOOK-ASIDE.              */ 01829000
         LTR   R15,R15                                             0681 01830000
         BNZ   @RF00681                                            0681 01831000
*       DO;                                                        0682 01832000
*         CALL DATALOOK;            /* SET UP BUFC                   */ 01833000
         BAL   @14,DATALOOK                                        0683 01834000
*         IF RPLERREG^='00'X        /* IF A READ EXCL ERROR,         */ 01835000
*           THEN                    /* CLEAR ERROR STATUS            */ 01836000
         CLI   RPLERREG(RRPL),0                                    0684 01837000
         BE    @RF00684                                            0684 01838000
*           DO;                     /* AND STOP READ AHEAD.          */ 01839000
*             RPLERREG='00'X;       /* NO ERROR YET                  */ 01840000
         MVI   RPLERREG(RRPL),X'00'                                0686 01841000
*             RPLERRCD='00'X;       /*                               */ 01842000
         MVI   RPLERRCD(RRPL),X'00'                                0687 01843000
*             GO TO RDAHEADX;       /* STOP READ AHEAD.              */ 01844000
         B     RDAHEADX                                            0688 01845000
*           END;                    /* END OF READ EXCL ERROR        */ 01846000
*       END;                        /* END OF DATA LOOK-ASIDE        */ 01847000
*                                                                  0690 01848000
*     /***************************************************************/ 01849000
*     /*                                                             */ 01850000
*     /* DO ONE LAST READ IF THIS IS THE LAST SEGMENT OF RECORD AND  */ 01851000
*     /* DIRECT RECORD LOCATE IS FORCING A READ AHEAD.       @X04SVMR*/ 01852000
*     /*                                                             */ 01853000
*     /***************************************************************/ 01854000
*                                                                  0691 01855000
*     ELSE                          /* R15 IS NON-ZERO               */ 01856000
*       IF R15=SIX THEN             /* STOP AFTER THIS       @X04SVMR*/ 01857000
         B     @RC00681                                            0691 01858000
@RF00681 C     R15,@CF00051                                        0691 01859000
         BNE   @RF00691                                            0691 01860000
*         DO;                                                      0692 01861000
*           CALL DATALOOK;          /* SET UP BUFC           @X04SVMR*/ 01862000
         BAL   @14,DATALOOK                                        0693 01863000
*           GO TO RDAHEADX;         /* EXIT RDAHEAD          @X04SVMR*/ 01864000
         B     RDAHEADX                                            0694 01865000
*         END;                      /* END LAST RD           @X04SVMR*/ 01866000
*                                                                  0695 01867000
*     /***************************************************************/ 01868000
*     /*                                                             */ 01869000
*     /* FLAG THE END-OF-DATA BUFC BY INVALIDATING THE RBA.          */ 01870000
*     /*                                                             */ 01871000
*     /***************************************************************/ 01872000
*                                                                  0696 01873000
*       ELSE                        /* COME HERE IF EOD              */ 01874000
*         DO;                       /*                               */ 01875000
@RF00691 DS    0H                                                  0697 01876000
*           BUFCEOD=ON;             /* SET BUFCEOD           @ZA14824*/ 01877000
         OI    BUFCEOD(RBUFC),B'00001000'                          0697 01878000
*           GO TO RDAHEADX;         /* EXIT FROM READ-AHEAD          */ 01879000
         B     RDAHEADX                                            0698 01880000
*         END;                      /* END OF EOD CODE               */ 01881000
*     RFY                                                          0700 01882000
*       R15 UNRSTD;                 /* RELEASE RETURN CODE           */ 01883000
@RC00681 DS    0H                                                  0701 01884000
*   END;                            /* END, RD SETUP                 */ 01885000
@DE00663 CLI   PLHFRCNT(RPLH),0                                    0701 01886000
         BH    @DL00663                                            0701 01887000
*RDAHEADX:                                                         0702 01888000
*   IF RPLKEY=ON&                   /* IF A KEYED REQ        @X04SVMR*/ 01889000
*       AMDRRDS=OFF THEN            /* AND NOT RRDS,         @X04SVMR*/ 01890000
RDAHEADX TM    RPLKEY(RRPL),B'10000000'                            0702 01891000
         BNO   @RF00702                                            0702 01892000
         L     @10,AMBDSB(,RAMB)                                   0702 01893000
         TM    AMDRRDS(@10),B'00000010'                            0702 01894000
         BNZ   @RF00702                                            0702 01895000
*     PLHNRBA=ZERO;                 /* RESET FOR NOW.        @X04SVMR*/ 01896000
         SLR   @10,@10                                             0703 01897000
         ST    @10,PLHNRBA(,RPLH)                                  0703 01898000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 01899000
@RF00702 DS    0H                                                  0704 01900000
         IDARST14                                                       01901000
*   END RDAHEAD;                    /* END OF READ AHEAD             */ 01902000
@EL00006 DS    0H                                                  0705 01903000
@EF00006 DS    0H                                                  0705 01904000
@ER00006 BR    @14                                                 0705 01905000
*                                                                  0706 01906000
*   /*****************************************************************/ 01907000
*   /*                                                               */ 01908000
*   /* DATALOOK -- DATA LOOK-ASIDE                                   */ 01909000
*   /*                                                               */ 01910000
*   /*****************************************************************/ 01911000
*                                                                  0706 01912000
*/*                                                                  */ 01913000
*/* FUNCTION = SEE IF DESIRED RBA IS IN BUFFER AND GET PROPER LEVEL  */ 01914000
*/*            OF EXCLUSIVE CONTROL.                                 */ 01915000
*/* INPUT = RPARM1 CONTAINS THE DESIRED RBA, RBUFC POINTS TO THE     */ 01916000
*/*         BUFC WHICH IS TO BE USED.                                */ 01917000
*/* OUTPUT = BUFC STATUS MODIFIED, RBA SET IN BUFC, RETURN CODE IN   */ 01918000
*/*          REGISTER 15, RBUFC UPDATED IF RBA FOUND.  RPARM1 IS     */ 01919000
*/*          UNCHANGED.                                      @ZA07544*/ 01920000
*                                                                  0706 01921000
*DATALOOK:                                                         0706 01922000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0706 01923000
DATALOOK DS    0H                                                  0707 01924000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01925000
         IDASVR14                                                       01926000
*/*  SEARCH THE BUFFERS ON THE CHAIN TO SEE IF RBA IN CORE.  @X04SVMR*/ 01927000
*                                                                  0708 01928000
*   RFY                                                            0708 01929000
*    (RWORK1,                                                      0708 01930000
*     RWORK2) RSTD;                 /* GET WORK REGS         @OZ12926*/ 01931000
*   RWORK1=RBUFC;                   /* CANDIDATE BUFC        @X04SVMR*/ 01932000
         LR    RWORK1,RBUFC                                        0709 01933000
*   IF AMBINBUF=OFF THEN            /* IF NOT SHR(4),        @ZA07698*/ 01934000
         TM    AMBINBUF(RAMB),B'00000001'                          0710 01935000
         BNZ   @RF00710                                            0710 01936000
*     DO UNTIL RBUFC=RWORK1;        /* CHECK ALL BFRS        @X04SVMR*/ 01937000
@DL00711 DS    0H                                                  0712 01938000
*       IF BUFCVAL=ON&BUFCDDDD=RPARM1&/* IF DESIRED RBA      @X04SVMR*/ 01939000
*           (PLHRDEXC=OFF|BUFCEXC=ON)/* & OK EXCL CNTL       @OZ12926*/ 01940000
*         THEN                                                     0712 01941000
         TM    BUFCVAL(RBUFC),B'00000100'                          0712 01942000
         BNO   @RF00712                                            0712 01943000
         CL    RPARM1,BUFCDDDD(,RBUFC)                             0712 01944000
         BNE   @RF00712                                            0712 01945000
         TM    PLHRDEXC(RPLH),B'00001000'                          0712 01946000
         BZ    @RT00712                                            0712 01947000
         TM    BUFCEXC(RBUFC),B'00000010'                          0712 01948000
         BNO   @RF00712                                            0712 01949000
@RT00712 DS    0H                                                  0713 01950000
*         DO;                       /* NO READ TO DO         @OZ12926*/ 01951000
*           IF RWORK1^=RBUFC THEN   /* IN CANDIDATE?         @X04SVMR*/ 01952000
         CR    RWORK1,RBUFC                                        0714 01953000
         BE    @RF00714                                            0714 01954000
*             DO;                   /* NO, RECHAIN.          @X04SVMR*/ 01955000
*               IF PLHBFRNO>TWO&    /* IF MORE THAN 2        @X04SVMR*/ 01956000
*                   BUFCNXT2^=RWORK1 THEN/* AND BAD CHAIN    @X04SVMR*/ 01957000
         CLI   PLHBFRNO(RPLH),2                                    0716 01958000
         BNH   @RF00716                                            0716 01959000
         L     @10,BUFCNXT2-1(,RBUFC)                              0716 01960000
         LA    @10,0(,@10)                                         0716 01961000
         CR    @10,RWORK1                                          0716 01962000
         BE    @RF00716                                            0716 01963000
*                 DO;               /* REORDER BUFCS         @X04SVMR*/ 01964000
*                                                                  0717 01965000
*                   /*************************************************/ 01966000
*                   /*                                               */ 01967000
*                   /* RECHAIN THE BUFFERS                   @X04SVMR*/ 01968000
*                   /* FIRST REMOVE THE SELECTED BUFC FROM THE CHAIN.*/ 01969000
*                   /*                                       @X04SVMR*/ 01970000
*                   /*                                               */ 01971000
*                   /*************************************************/ 01972000
*                                                                  0718 01973000
*                   RWORK2->BUFCNXT2=BUFCNXT2;/* POINT PAST NEW    0718 01974000
*                                                            @X04SVMR*/ 01975000
         STCM  @10,7,BUFCNXT2(RWORK2)                              0718 01976000
*                   RWORK2=RBUFC;   /* SET SCH START         @X04SVMR*/ 01977000
*                                                                  0719 01978000
         LR    RWORK2,RBUFC                                        0719 01979000
*                   /*************************************************/ 01980000
*                   /*                                               */ 01981000
*                   /* LOCATE THE BUFC POINTING TO ORIGINAL          */ 01982000
*                   /* CANDIDATE.                            @X04SVMR*/ 01983000
*                   /*                                               */ 01984000
*                   /*************************************************/ 01985000
*                                                                  0720 01986000
*                   DO WHILE RWORK2->BUFCNXT2^=RWORK1;             0720 01987000
         B     @DE00720                                            0720 01988000
@DL00720 DS    0H                                                  0721 01989000
*                     RWORK2=RWORK2->BUFCNXT2;/* NEXT ONE    @X04SVMR*/ 01990000
         L     @10,BUFCNXT2-1(,RWORK2)                             0721 01991000
         LA    @10,0(,@10)                                         0721 01992000
         LR    RWORK2,@10                                          0721 01993000
*                   END;            /* N-1 BUFC FOUND        @X04SVMR*/ 01994000
*                                                                  0722 01995000
@DE00720 L     @10,BUFCNXT2-1(,RWORK2)                             0722 01996000
         LA    @10,0(,@10)                                         0722 01997000
         CR    RWORK1,@10                                          0722 01998000
         BNE   @DL00720                                            0722 01999000
*                   /*************************************************/ 02000000
*                   /*                                               */ 02001000
*                   /* MAKE THE BUFC ORIGINALLY PRIOR TO THE         */ 02002000
*                   /* CANDIDATE PRIOR TO THE NEWLY SELECTED BUFC.   */ 02003000
*                   /*                                       @X04SVMR*/ 02004000
*                   /*                                               */ 02005000
*                   /*************************************************/ 02006000
*                                                                  0723 02007000
*                   RWORK2->BUFCNXT2=RBUFC;/* MAKE NEW NTH   @X04SVMR*/ 02008000
*                                                                  0723 02009000
         STCM  RBUFC,7,BUFCNXT2(RWORK2)                            0723 02010000
*                   /*************************************************/ 02011000
*                   /*                                               */ 02012000
*                   /* MAKE THE ORIGINAL CANDIDATE BUFC FOLLOW THE   */ 02013000
*                   /* NEWLY SELECTED BUFC.                  @X04SVMR*/ 02014000
*                   /*                                               */ 02015000
*                   /*************************************************/ 02016000
*                                                                  0724 02017000
*                   BUFCNXT2=RWORK1;/* FINISH RECHAIN        @X04SVMR*/ 02018000
         STCM  RWORK1,7,BUFCNXT2(RBUFC)                            0724 02019000
*                 END;              /* END BFRNO > 2         @X04SVMR*/ 02020000
*               IF PLHDBUFC=RWORK1 THEN/* IF NECESSARY       @X04SVMR*/ 02021000
@RF00716 C     RWORK1,PLHDBUFC(,RPLH)                              0726 02022000
         BNE   @RF00726                                            0726 02023000
*                 PLHDBUFC=RBUFC;   /* UPDATE PTR            @X04SVMR*/ 02024000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0727 02025000
*               PLHNBUFC=BUFCNXT2;  /* NEW READ AHEAD        @X04SVMR*/ 02026000
@RF00726 L     @10,BUFCNXT2-1(,RBUFC)                              0728 02027000
         LA    @10,0(,@10)                                         0728 02028000
         ST    @10,PLHNBUFC(,RPLH)                                 0728 02029000
*             END;                  /* NOT IN CAND           @X04SVMR*/ 02030000
*           CALL GETEXCL;           /* GET EXCL CNTL         @OZ12926*/ 02031000
@RF00714 BAL   @14,GETEXCL                                         0730 02032000
*           CALL BMEXIT;            /* EXIT ROUTINE          @X04SVMR*/ 02033000
         BAL   @14,BMEXIT                                          0731 02034000
*         END;                      /* END NO READ           @X04SVMR*/ 02035000
*       IF BUFCORBA=RPARM1&BUFCMW=ON/* TST OUTPUT RBA        @OZ12926*/ 02036000
*         THEN                                                     0733 02037000
@RF00712 L     @10,BUFCORBA(,RBUFC)                                0733 02038000
         CLR   @10,RPARM1                                          0733 02039000
         BNE   @RF00733                                            0733 02040000
         TM    BUFCMW(RBUFC),B'10000000'                           0733 02041000
         BNO   @RF00733                                            0733 02042000
*         DO;                       /* SWAP BUFFERS          @OZ12926*/ 02043000
*           RFY                                                    0735 02044000
*            (RWORK3) RSTD;         /* GET WORK REG          @OZ12926*/ 02045000
*           RWORK3=RBUFC->BUFCBAD;  /* GET NEW BUFFER        @OZ12926*/ 02046000
         L     RWORK3,BUFCBAD(,RBUFC)                              0736 02047000
*           RWORK2=RWORK1->BUFCBAD; /* GET OLD BUFFER        @OZ12926*/ 02048000
         L     RWORK2,BUFCBAD(,RWORK1)                             0737 02049000
*           RBUFC->BUFCBAD=RWORK2;  /* SWAP BUFCBADS         @OZ12926*/ 02050000
         ST    RWORK2,BUFCBAD(,RBUFC)                              0738 02051000
*           RWORK1->BUFCBAD=RWORK3; /* SWAP BUFCBADS         @OZ12926*/ 02052000
         ST    RWORK3,BUFCBAD(,RWORK1)                             0739 02053000
*           RWORK3=RBUFC->BUFCORBA; /* GET NEW ORBA          @OZ12926*/ 02054000
         LR    RWORK3,@10                                          0740 02055000
*           RWORK2=RWORK1->BUFCORBA;/* GET OLD ORBA          @OZ12926*/ 02056000
         L     RWORK2,BUFCORBA(,RWORK1)                            0741 02057000
*           RBUFC->BUFCORBA=RWORK2; /* SWAP BUFCORBA         @OZ12926*/ 02058000
         ST    RWORK2,BUFCORBA(,RBUFC)                             0742 02059000
*           RWORK1->BUFCORBA=RWORK3;/* SWAP BUFCORBA         @OZ12926*/ 02060000
         ST    RWORK3,BUFCORBA(,RWORK1)                            0743 02061000
*           RWORK3=RBUFC->BUFCCPA;  /* GET NEW CPA           @OZ12926*/ 02062000
         L     RWORK3,BUFCCPA(,RBUFC)                              0744 02063000
*           RWORK2=RWORK1->BUFCCPA; /* GET OLD CPA           @OZ12926*/ 02064000
         L     RWORK2,BUFCCPA(,RWORK1)                             0745 02065000
*           RBUFC->BUFCCPA=RWORK2;  /* SWAP BUFCCPA          @OZ12926*/ 02066000
         ST    RWORK2,BUFCCPA(,RBUFC)                              0746 02067000
*           RWORK1->BUFCCPA=RWORK3; /* SWAP BUFCCPA          @OZ12926*/ 02068000
         ST    RWORK3,BUFCCPA(,RWORK1)                             0747 02069000
*           RFY                                                    0748 02070000
*            (RWORK3) UNRSTD;       /* FREE WORK REG         @OZ12926*/ 02071000
*           IF RWORK1->BUFCMW=OFF   /* IF NEW MW OFF         @OZ12926*/ 02072000
*             THEN                                                 0749 02073000
         TM    BUFCMW(RWORK1),B'10000000'                          0749 02074000
         BNZ   @RF00749                                            0749 02075000
*             RBUFC->BUFCMW=OFF;    /* THEN OLD OFF          @OZ12926*/ 02076000
         NI    BUFCMW(RBUFC),B'01111111'                           0750 02077000
*           IF RBUFC->BUFCRRD=ON    /* OLD RRD ON?           @OZ12926*/ 02078000
*             THEN                                                 0751 02079000
@RF00749 TM    BUFCRRD(RBUFC),B'00100000'                          0751 02080000
         BNO   @RF00751                                            0751 02081000
*             RBUFC->BUFCVAL=ON;    /* YES, SET VAL          @OZ12926*/ 02082000
         OI    BUFCVAL(RBUFC),B'00000100'                          0752 02083000
*           ELSE                                                   0753 02084000
*             RBUFC->BUFCVAL=OFF;   /* NO, SET OFF           @OZ12926*/ 02085000
         B     @RC00751                                            0753 02086000
@RF00751 NI    BUFCVAL(RBUFC),B'11111011'                          0753 02087000
*           RWORK1->BUFCMW=ON;      /* NEW MW ON             @OZ12926*/ 02088000
@RC00751 DS    0H                                                  0755 02089000
*           RWORK1->BUFCXEDB=OFF;   /* NEW XEDB OFF          @OZ12926*/ 02090000
         OI    BUFCMW(RWORK1),B'10000000'                          0755 02091000
         NI    BUFCXEDB(RWORK1),B'11111011'                        0755 02092000
*           RWORK1->BUFCVAL=ON;     /* NEW VAL ON            @OZ12926*/ 02093000
         OI    BUFCVAL(RWORK1),B'00000100'                         0756 02094000
*           RWORK1->BUFCDDDD=RPARM1;/* SET NEW DDDD          @OZ12926*/ 02095000
         ST    RPARM1,BUFCDDDD(,RWORK1)                            0757 02096000
*           RBUFC=RWORK1;           /* SET RBUFC             @OZ12926*/ 02097000
         LR    RBUFC,RWORK1                                        0758 02098000
*           CALL GETEXCL;           /* GET EXCL CNTL         @OZ12926*/ 02099000
         BAL   @14,GETEXCL                                         0759 02100000
*           CALL BMEXIT;            /* EXIT DATALOOK         @OZ12926*/ 02101000
         BAL   @14,BMEXIT                                          0760 02102000
*         END;                      /* E SWAP BUFFERS        @OZ12926*/ 02103000
*       RWORK2=RBUFC;               /* SET PRIOR BUFC        @X04SVMR*/ 02104000
@RF00733 LR    RWORK2,RBUFC                                        0762 02105000
*       RBUFC=BUFCNXT2;             /* NEXT BUFC             @X04SVMR*/ 02106000
         L     @10,BUFCNXT2-1(,RBUFC)                              0763 02107000
         LA    @10,0(,@10)                                         0763 02108000
         LR    RBUFC,@10                                           0763 02109000
*     END;                          /* END LOOK-ASIDE        @X04SVMR*/ 02110000
@DE00711 CR    RBUFC,RWORK1                                        0764 02111000
         BNE   @DL00711                                            0764 02112000
*   RFY                                                            0765 02113000
*    (RWORK1,                                                      0765 02114000
*     RWORK2) UNRSTD;               /* DROP WORK REGS        @OZ12926*/ 02115000
@RF00710 DS    0H                                                  0766 02116000
*/*  THE RBA HAS NOT BEEN FOUND IN CORE--A READ IS REQUIRED. @X04SVMR*/ 02117000
*                                                                  0766 02118000
*   BUFCRRD=ON;                     /* SET READ REQUIRED             */ 02119000
         OI    BUFCRRD(RBUFC),B'00100000'                          0766 02120000
*   BUFCDDDD=RPARM1;                /* SET THE RBA DESIRED           */ 02121000
         ST    RPARM1,BUFCDDDD(,RBUFC)                             0767 02122000
*   BUFCVAL=ON;                     /* MAKE RBA VALID                */ 02123000
         OI    BUFCVAL(RBUFC),B'00000100'                          0768 02124000
*   BUFCEOD=OFF;                    /* INSURE EOD OFF        @ZA14824*/ 02125000
         NI    BUFCEOD(RBUFC),B'11110111'                          0769 02126000
*   BUFCXEDB=OFF;                   /* RESET RESIDUAL ERROR          */ 02127000
         NI    BUFCXEDB(RBUFC),B'11111011'                         0770 02128000
*   CALL GETEXCL;                   /* GET EXCLUSIVE CONTROL         */ 02129000
         BAL   @14,GETEXCL                                         0771 02130000
*   CALL BMEXIT;                    /* EXIT ROUTINE          @X04SVMR*/ 02131000
         BAL   @14,BMEXIT                                          0772 02132000
*   END DATALOOK;                   /* END OF DATA LOOK-ASIDE        */ 02133000
@EL00007 DS    0H                                                  0773 02134000
@EF00007 DS    0H                                                  0773 02135000
@ER00007 BR    @14                                                 0773 02136000
*                                                                  0774 02137000
*   /*****************************************************************/ 02138000
*   /*                                                               */ 02139000
*   /* BMEXIT - BUFFER MGR EXIT ROUTINE                              */ 02140000
*   /*                                                               */ 02141000
*   /*****************************************************************/ 02142000
*                                                                  0774 02143000
*BMEXIT:                                                           0774 02144000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0774 02145000
*                                                                  0774 02146000
BMEXIT   DS    0H                                                  0775 02147000
*/*                                                                0775 02148000
*01 FUNCTION = RESTORE R14 AND EXIT VIA IT.                        0775 02149000
*01 INPUT =    STD VSAM REGS.                                      0775 02150000
*01 OUTPUT =   R14 RESTORED FROM PLHRET1.                            */ 02151000
*                                                                  0775 02152000
*   GEN REFS(HWORD4)(IDARST14);     /* RESTORE RETURN REG            */ 02153000
         IDARST14                                                       02154000
*   END BMEXIT;                     /* RETURN VIA R14                */ 02155000
@EL00008 DS    0H                                                  0776 02156000
@EF00008 DS    0H                                                  0776 02157000
@ER00008 BR    @14                                                 0776 02158000
*   GEN(IDAPATCH);                  /* DEFINE PATCH          @X04SVMR*/ 02159000
         IDAPATCH                                                       02160000
*   END IDA019R2                    /* END BFR MGR           @X04SVMR*/ 02161000
*                                                                  0778 02162000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02163000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02164000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02165000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02166000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02167000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02168000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02169000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02170000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02171000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02172000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02173000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02174000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02175000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02176000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02177000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02178000
*                                                                  0778 02179000
*       ;                                                          0778 02180000
         B     @EL00001                                            0778 02181000
@DATA    DS    0H                                                       02182000
@DATD    DSECT                                                          02183000
         DS    0F                                                       02184000
IDA019R2 CSECT                                                          02185000
         DS    0F                                                       02186000
@CF00036 DC    F'1'                                                     02187000
@CF00049 DC    F'2'                                                     02188000
@CF00051 DC    F'6'                                                     02189000
@CF00332 DC    F'7'                                                     02190000
@DATD    DSECT                                                          02191000
         DS    0D                                                       02192000
IDA019R2 CSECT                                                          02193000
         DS    0F                                                       02194000
@SIZDATD DC    AL1(0)                                                   02195000
         DC    AL3(@ENDDATD-@DATD)                                      02196000
@CV00038 DC    V(IDA019R3)                                              02197000
@CV00039 DC    V(IDARVRS1)                                              02198000
@CV00040 DC    V(IDAWAIT)                                               02199000
@CV00041 DC    V(IDAFRBA)                                               02200000
         DS    0D                                                       02201000
HWORD4   DC    H'4'                                                     02202000
@DATD    DSECT                                                          02203000
TWELVE   EQU   12                       OFFSET TO REGS                  02204000
@DATD    DSECT                                                          02205000
*                                                          /*@X04SVLC*/ 02206000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02207000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02208000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02209000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02210000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02211000
RDFLEN   EQU   3                        LENGTH OF RDF                   02212000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02213000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02214000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02215000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02216000
@DATD    DSECT                                                          02217000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02218000
@ENDDATD EQU   *                                                        02219000
IDA019R2 CSECT                                                          02220000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02221000
@01      EQU   01                                                       02222000
@02      EQU   02                                                       02223000
@03      EQU   03                                                       02224000
@04      EQU   04                                                       02225000
@05      EQU   05                                                       02226000
@06      EQU   06                                                       02227000
@07      EQU   07                                                       02228000
@08      EQU   08                                                       02229000
@09      EQU   09                                                       02230000
@10      EQU   10                                                       02231000
@11      EQU   11                                                       02232000
@12      EQU   12                                                       02233000
@13      EQU   13                                                       02234000
@14      EQU   14                                                       02235000
@15      EQU   15                                                       02236000
R1       EQU   @01                                                      02237000
RRPL     EQU   @01                                                      02238000
RPLH     EQU   @02                                                      02239000
RAMB     EQU   @03                                                      02240000
RBUFC    EQU   @04                                                      02241000
RWORK1   EQU   @05                                                      02242000
RWORK2   EQU   @06                                                      02243000
RWORK3   EQU   @07                                                      02244000
RPARM1   EQU   @12                                                      02245000
R14      EQU   @14                                                      02246000
R15      EQU   @15                                                      02247000
RWORK0   EQU   @00                                                      02248000
RWORK4   EQU   @08                                                      02249000
RWORK5   EQU   @09                                                      02250000
R10      EQU   @10                                                      02251000
R11      EQU   @11                                                      02252000
R13      EQU   @13                                                      02253000
IOECB    EQU   0                                                        02254000
IDACIDF  EQU   0                                                        02255000
CIDFLL   EQU   IDACIDF+2                                                02256000
IDARDF   EQU   0                                                        02257000
RDFRBYTE EQU   IDARDF                                                   02258000
RDFSEG   EQU   RDFRBYTE                                                 02259000
RDFNOT1  EQU   RDFSEG                                                   02260000
RDF1ST   EQU   RDFSEG                                                   02261000
IDADATA  EQU   0                                                        02262000
IDAKEY   EQU   0                                                        02263000
IDAIXH   EQU   0                                                        02264000
IDAIBFLP EQU   0                                                        02265000
IBFLP3   EQU   IDAIBFLP+2                                               02266000
IBFLP2   EQU   IBFLP3                                                   02267000
IDASELL  EQU   0                                                        02268000
IDAIXK   EQU   0                                                        02269000
IDAIXSPL EQU   0                                                        02270000
IXSILN   EQU   IDAIXSPL+13                                              02271000
IXSBFLG  EQU   IDAIXSPL+17                                              02272000
IDAARDB  EQU   0                                                        02273000
ARDTYPE  EQU   IDAARDB+1                                                02274000
ARDPRF   EQU   IDAARDB+28                                               02275000
IDADIWA  EQU   0                                                        02276000
DIWFLG1  EQU   IDADIWA+4                                                02277000
DIWCAS   EQU   DIWFLG1                                                  02278000
DIWSHIFT EQU   DIWFLG1                                                  02279000
DIWFLG2  EQU   IDADIWA+5                                                02280000
DIWLRBA  EQU   IDADIWA+8                                                02281000
DIWHRBA  EQU   IDADIWA+12                                               02282000
DIWPLH   EQU   IDADIWA+16                                               02283000
DIWBUFC  EQU   IDADIWA+20                                               02284000
DIWSAVE  EQU   IDADIWA+28                                               02285000
DIWINRBA EQU   IDADIWA+52                                               02286000
IFGRPL   EQU   0                                                        02287000
RPLCOMN  EQU   IFGRPL                                                   02288000
RPLIDWD  EQU   RPLCOMN                                                  02289000
RPLREQ   EQU   RPLIDWD+2                                                02290000
RPLLEN   EQU   RPLIDWD+3                                                02291000
RPLECB   EQU   RPLCOMN+8                                                02292000
RPLFDBWD EQU   RPLCOMN+12                                               02293000
RPLFDBK  EQU   RPLFDBWD+1                                               02294000
RPLRTNCD EQU   RPLFDBK                                                  02295000
RPLERREG EQU   RPLRTNCD                                                 02296000
RPLCNDCD EQU   RPLFDBK+1                                                02297000
RPLCMPON EQU   RPLCNDCD                                                 02298000
RPLFDB2  EQU   RPLCMPON                                                 02299000
RPLERRCD EQU   RPLCNDCD+1                                               02300000
RPLFDB3  EQU   RPLERRCD                                                 02301000
RPLKEYLE EQU   RPLCOMN+16                                               02302000
RPLDACB  EQU   RPLCOMN+24                                               02303000
RPLARG   EQU   RPLCOMN+36                                               02304000
RPLOPTCD EQU   RPLCOMN+40                                               02305000
RPLOPT1  EQU   RPLOPTCD                                                 02306000
RPLSEQ   EQU   RPLOPT1                                                  02307000
RPLASY   EQU   RPLOPT1                                                  02308000
RPLECBSW EQU   RPLOPT1                                                  02309000
RPLOPT2  EQU   RPLOPTCD+1                                               02310000
RPLKEY   EQU   RPLOPT2                                                  02311000
RPLADR   EQU   RPLOPT2                                                  02312000
RPLBWD   EQU   RPLOPT2                                                  02313000
RPLOPT3  EQU   RPLOPTCD+2                                               02314000
RPLOPT4  EQU   RPLOPTCD+3                                               02315000
RPLNXTRP EQU   RPLCOMN+44                                               02316000
RPLOPTC2 EQU   RPLCOMN+56                                               02317000
RPLOPT5  EQU   RPLOPTC2                                                 02318000
RPLWRTYP EQU   RPLOPT5                                                  02319000
RPLOPT6  EQU   RPLOPTC2+1                                               02320000
RPLUNTYP EQU   RPLOPT6                                                  02321000
RPLOPT7  EQU   RPLOPTC2+2                                               02322000
RPLCNOPT EQU   RPLOPT7                                                  02323000
RPLOPT8  EQU   RPLOPTC2+3                                               02324000
RPLRBAR  EQU   RPLCOMN+60                                               02325000
RPLAIXID EQU   RPLRBAR+2                                                02326000
RPLEXTDS EQU   RPLCOMN+68                                               02327000
RPLEXTD1 EQU   RPLEXTDS                                                 02328000
IDABUFDR EQU   0                                                        02329000
BUFDRNO  EQU   IDABUFDR+1                                               02330000
BUFDRCIX EQU   IDABUFDR+9                                               02331000
BUFDRFLG EQU   IDABUFDR+11                                              02332000
BUFDRREL EQU   BUFDRFLG                                                 02333000
BUFDBUFC EQU   IDABUFDR+12                                              02334000
IDABUFC  EQU   0                                                        02335000
BUFCAVL  EQU   IDABUFC                                                  02336000
BUFCFLG1 EQU   IDABUFC+1                                                02337000
BUFCINS  EQU   BUFCFLG1                                                 02338000
BUFCER1  EQU   BUFCFLG1                                                 02339000
BUFCER2  EQU   BUFCFLG1                                                 02340000
BUFCVAL  EQU   BUFCFLG1                                                 02341000
BUFCEXC  EQU   BUFCFLG1                                                 02342000
BUFCEPT  EQU   BUFCFLG1                                                 02343000
BUFCIOFL EQU   IDABUFC+2                                                02344000
BUFCMW   EQU   BUFCIOFL                                                 02345000
BUFCRRD  EQU   BUFCIOFL                                                 02346000
BUFCXEDB EQU   BUFCIOFL                                                 02347000
BUFCFLG2 EQU   IDABUFC+3                                                02348000
BUFCEOD  EQU   BUFCFLG2                                                 02349000
BUFCPLH  EQU   IDABUFC+4                                                02350000
BUFCDDDD EQU   IDABUFC+8                                                02351000
BUFCORBA EQU   IDABUFC+12                                               02352000
BUFCCPA  EQU   IDABUFC+16                                               02353000
BUFCBAD  EQU   IDABUFC+20                                               02354000
BUFCNXT1 EQU   IDABUFC+24                                               02355000
BUFCINV  EQU   IDABUFC+28                                               02356000
BUFCIDXL EQU   IDABUFC+36                                               02357000
BUFCNXT2 EQU   IDABUFC+37                                               02358000
BUFXIRBA EQU   IDABUFC+40                                               02359000
BUFXORBA EQU   IDABUFC+44                                               02360000
BUFCHAIN EQU   IDABUFC+48                                               02361000
IFGACB   EQU   0                                                        02362000
ACBCOMN  EQU   IFGACB                                                   02363000
ACBLENG  EQU   ACBCOMN+2                                                02364000
ACBLENG2 EQU   ACBLENG                                                  02365000
ACBAMBL  EQU   ACBCOMN+4                                                02366000
ACBJWA   EQU   ACBAMBL                                                  02367000
ACBMACRF EQU   ACBCOMN+12                                               02368000
ACBMACR1 EQU   ACBMACRF                                                 02369000
ACBADR   EQU   ACBMACR1                                                 02370000
ACBCNV   EQU   ACBMACR1                                                 02371000
ACBMACR2 EQU   ACBMACRF+1                                               02372000
ACBBUFPL EQU   ACBCOMN+20                                               02373000
ACBMACR3 EQU   ACBBUFPL                                                 02374000
ACBRECFM EQU   ACBCOMN+24                                               02375000
ACBCCTYP EQU   ACBCOMN+25                                               02376000
ACBOPT   EQU   ACBCOMN+26                                               02377000
ACBDSORG EQU   ACBOPT                                                   02378000
ACBCROPS EQU   ACBDSORG                                                 02379000
ACBDVIND EQU   ACBDSORG                                                 02380000
ACBEXLST EQU   ACBCOMN+36                                               02381000
ACBDDNM  EQU   ACBCOMN+40                                               02382000
ACBAMETH EQU   ACBDDNM+3                                                02383000
ACBOFLGS EQU   ACBCOMN+48                                               02384000
ACBEXFG  EQU   ACBOFLGS                                                 02385000
ACBIOSFG EQU   ACBOFLGS                                                 02386000
ACBINFLG EQU   ACBCOMN+50                                               02387000
ACBINFL1 EQU   ACBINFLG                                                 02388000
ACBVVIC  EQU   ACBINFL1                                                 02389000
ACBINFL2 EQU   ACBINFLG+1                                               02390000
ACBUJFCB EQU   ACBCOMN+52                                               02391000
ACBBLKSZ EQU   ACBCOMN+60                                               02392000
IDAAMB   EQU   0                                                        02393000
AMBBUFC  EQU   IDAAMB+8                                                 02394000
AMBPH    EQU   IDAAMB+12                                                02395000
AMBDSB   EQU   IDAAMB+20                                                02396000
AMBEOVR  EQU   IDAAMB+24                                                02397000
AMBFLG0  EQU   AMBEOVR                                                  02398000
AMBFLG1  EQU   IDAAMB+25                                                02399000
AMBTYPE  EQU   AMBFLG1                                                  02400000
AMBINBUF EQU   AMBFLG1                                                  02401000
AMBDSORG EQU   IDAAMB+26                                                02402000
AMBIOBAD EQU   IDAAMB+28                                                02403000
AMBINFL  EQU   IDAAMB+42                                                02404000
AMBCAT   EQU   AMBINFL                                                  02405000
AMBSCRA  EQU   AMBINFL                                                  02406000
AMBUCRA  EQU   AMBINFL                                                  02407000
AMBDEBPT EQU   IDAAMB+44                                                02408000
AMBOFLGS EQU   IDAAMB+48                                                02409000
AMBFLG2  EQU   IDAAMB+49                                                02410000
AMBPUG   EQU   AMBFLG2                                                  02411000
AMBEOVPT EQU   IDAAMB+56                                                02412000
AMBIWA   EQU   IDAAMB+64                                                02413000
AMBCSWD1 EQU   IDAAMB+84                                                02414000
AMBAFLG  EQU   AMBCSWD1                                                 02415000
IDAAMBL  EQU   0                                                        02416000
AMBLEOV  EQU   IDAAMBL+12                                               02417000
AMBLEFLG EQU   AMBLEOV                                                  02418000
AMBLDDNM EQU   IDAAMBL+16                                               02419000
AMBLIDF  EQU   AMBLDDNM                                                 02420000
AMBLQ    EQU   AMBLIDF+7                                                02421000
AMBLVC   EQU   IDAAMBL+28                                               02422000
AMBLTYPE EQU   IDAAMBL+30                                               02423000
AMBLQ2   EQU   IDAAMBL+31                                               02424000
AMBLSHAR EQU   IDAAMBL+33                                               02425000
AMBLFLG1 EQU   IDAAMBL+35                                               02426000
AMBLVVIC EQU   AMBLFLG1                                                 02427000
AMBLFLG2 EQU   IDAAMBL+36                                               02428000
IDAAMDSB EQU   0                                                        02429000
AMDATTR  EQU   IDAAMDSB+1                                               02430000
AMDRRDS  EQU   AMDATTR                                                  02431000
AMDSPAN  EQU   AMDATTR                                                  02432000
AMDNEST  EQU   IDAAMDSB+4                                               02433000
AMDCINV  EQU   IDAAMDSB+20                                              02434000
AMDHLRBA EQU   IDAAMDSB+28                                              02435000
AMDSSRBA EQU   IDAAMDSB+32                                              02436000
AMDATTR3 EQU   IDAAMDSB+40                                              02437000
AMDSTAT  EQU   IDAAMDSB+48                                              02438000
IDAPLHDR EQU   0                                                        02439000
PLHCNT   EQU   IDAPLHDR+1                                               02440000
IDAPLH   EQU   0                                                        02441000
PLHFLG1  EQU   IDAPLH+2                                                 02442000
PLHENDRQ EQU   PLHFLG1                                                  02443000
PLHSSR   EQU   PLHFLG1                                                  02444000
PLHRDEXC EQU   PLHFLG1                                                  02445000
PLHSR    EQU   PLHFLG1                                                  02446000
PLHFLG2  EQU   IDAPLH+3                                                 02447000
PLHEFLGS EQU   IDAPLH+4                                                 02448000
PLHSKPER EQU   PLHEFLGS                                                 02449000
PLHFLG3  EQU   IDAPLH+6                                                 02450000
PLHRAHD  EQU   PLHFLG3                                                  02451000
PLHRVRS  EQU   PLHFLG3                                                  02452000
PLHAFLGS EQU   IDAPLH+7                                                 02453000
PLHRMIN  EQU   IDAPLH+13                                                02454000
PLHFRCNT EQU   IDAPLH+14                                                02455000
PLHBFRNO EQU   IDAPLH+15                                                02456000
PLHCRBA  EQU   IDAPLH+28                                                02457000
PLHJORBA EQU   PLHCRBA                                                  02458000
PLHJRNLL EQU   IDAPLH+32                                                02459000
PLHJCODE EQU   IDAPLH+40                                                02460000
PLHRSCS  EQU   IDAPLH+43                                                02461000
PLHDBUFC EQU   IDAPLH+52                                                02462000
PLHNBUFC EQU   IDAPLH+56                                                02463000
PLHDIOB  EQU   IDAPLH+76                                                02464000
PLHIIOB  EQU   PLHDIOB                                                  02465000
PLHRETO  EQU   IDAPLH+116                                               02466000
PLHRET1  EQU   IDAPLH+120                                               02467000
PLHEOVPT EQU   IDAPLH+180                                               02468000
PLHNRBA  EQU   IDAPLH+184                                               02469000
PLHIBUFC EQU   IDAPLH+188                                               02470000
PLHRBUFC EQU   IDAPLH+192                                               02471000
PLHIXSPL EQU   IDAPLH+200                                               02472000
PLHSSRBA EQU   PLHIXSPL                                                 02473000
PLHWAX   EQU   IDAPLH+232                                               02474000
PLHKEYPT EQU   IDAPLH+248                                               02475000
PLHTMRPL EQU   IDAPLH+265                                               02476000
PLHEND   EQU   IDAPLH+280                                               02477000
PLHKEY   EQU   0                                                        02478000
PLHPDL   EQU   0                                                        02479000
PLHPDLE  EQU   0                                                        02480000
PLHRRN   EQU   0                                                        02481000
RPLADDR  EQU   0                                                        02482000
PLHEXTEN EQU   PLHEND                                                   02483000
PLHBMWRK EQU   PLHEXTEN+5                                               02484000
BUFCRSC1 EQU   BUFCAVL                                                  02485000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02486000
PLHBMSV5 EQU   PLHEXTEN+24                                              02487000
PLHBMSV4 EQU   PLHEXTEN+20                                              02488000
PLHBMSV3 EQU   PLHEXTEN+16                                              02489000
PLHBMSV2 EQU   PLHEXTEN+12                                              02490000
PLHBMSV1 EQU   PLHEXTEN+8                                               02491000
PLHRDCNT EQU   PLHEXTEN+6                                               02492000
PLHBMSOV EQU   PLHBMWRK                                                 02493000
PLHBEUC  EQU   PLHBMWRK                                                 02494000
PLHBMRDF EQU   PLHBMWRK                                                 02495000
@NM00065 EQU   PLHEXTEN+4                                               02496000
PLHRESR1 EQU   PLHEXTEN                                                 02497000
PLHERRET EQU   IDAPLH+276                                               02498000
PLHASCB  EQU   IDAPLH+272                                               02499000
PLHECB   EQU   IDAPLH+268                                               02500000
@NM00064 EQU   IDAPLH+266                                               02501000
@NM00063 EQU   PLHTMRPL                                                 02502000
PLHTMIOB EQU   PLHTMRPL                                                 02503000
PLHTMINX EQU   PLHTMRPL                                                 02504000
PLHTMDTA EQU   PLHTMRPL                                                 02505000
PLHTMDIW EQU   PLHTMRPL                                                 02506000
PLHTMBUF EQU   PLHTMRPL                                                 02507000
PLHTERM  EQU   PLHTMRPL                                                 02508000
PLHDRMSK EQU   IDAPLH+264                                               02509000
PLHR13   EQU   IDAPLH+260                                               02510000
PLHPARM1 EQU   IDAPLH+256                                               02511000
PLHDRRSC EQU   IDAPLH+252                                               02512000
PLHSLRBA EQU   IDAPLH+244                                               02513000
PLHSRCSG EQU   IDAPLH+242                                               02514000
PLHNOSEG EQU   IDAPLH+240                                               02515000
PLHLLOR  EQU   IDAPLH+236                                               02516000
PLHXPLH  EQU   PLHWAX                                                   02517000
@NM00062 EQU   PLHIXSPL+8                                               02518000
PLHIXBFC EQU   PLHIXSPL+4                                               02519000
PLHHIREC EQU   PLHSSRBA                                                 02520000
PLHISPLP EQU   IDAPLH+196                                               02521000
PLHDDDD  EQU   PLHEOVPT                                                 02522000
PLHAR14  EQU   IDAPLH+176                                               02523000
@NM00061 EQU   IDAPLH+172                                               02524000
@NM00060 EQU   IDAPLH+168                                               02525000
PLHASAVE EQU   IDAPLH+164                                               02526000
PLHRETOS EQU   IDAPLH+118                                               02527000
PLHCHAIN EQU   IDAPLH+112                                               02528000
PLHAMB   EQU   IDAPLH+108                                               02529000
PLHSAVE6 EQU   IDAPLH+104                                               02530000
PLHSAVE5 EQU   IDAPLH+100                                               02531000
PLHSAVE4 EQU   IDAPLH+96                                                02532000
PLHSAVE3 EQU   IDAPLH+92                                                02533000
PLHSAVE2 EQU   IDAPLH+88                                                02534000
PLHSAVE1 EQU   IDAPLH+84                                                02535000
PLHARET  EQU   IDAPLH+80                                                02536000
PLHSRSID EQU   IDAPLH+74                                                02537000
PLHRDFC  EQU   IDAPLH+72                                                02538000
PLHRDFP  EQU   IDAPLH+68                                                02539000
PLHFSP   EQU   IDAPLH+64                                                02540000
PLHRECP  EQU   IDAPLH+60                                                02541000
PLHLRECL EQU   IDAPLH+48                                                02542000
PLHARDB  EQU   IDAPLH+44                                                02543000
@NM00059 EQU   PLHRSCS                                                  02544000
PLHDBPER EQU   PLHRSCS                                                  02545000
PLHDSERR EQU   PLHRSCS                                                  02546000
PLHASYER EQU   PLHRSCS                                                  02547000
@NM00058 EQU   PLHRSCS                                                  02548000
PLHBUFHD EQU   PLHRSCS                                                  02549000
PLHINEOV EQU   PLHRSCS                                                  02550000
PLHEOVR  EQU   IDAPLH+42                                                02551000
PLHRCODE EQU   IDAPLH+41                                                02552000
PLHUCODE EQU   PLHJCODE                                                 02553000
PLHJNRBA EQU   IDAPLH+36                                                02554000
PLHUPECB EQU   PLHJORBA                                                 02555000
PLHDSIDA EQU   IDAPLH+24                                                02556000
PLHCRPL  EQU   IDAPLH+20                                                02557000
PLHMRPL  EQU   IDAPLH+16                                                02558000
PLHDSTYP EQU   IDAPLH+12                                                02559000
PLHACB   EQU   IDAPLH+8                                                 02560000
PLHRAE   EQU   PLHAFLGS                                                 02561000
PLHRABWD EQU   PLHAFLGS                                                 02562000
PLHIOSID EQU   PLHAFLGS                                                 02563000
PLHDBDC  EQU   PLHAFLGS                                                 02564000
PLHVAMB  EQU   PLHAFLGS                                                 02565000
PLHIOSRQ EQU   PLHAFLGS                                                 02566000
PLHDRLM  EQU   PLHAFLGS                                                 02567000
PLHEOVDF EQU   PLHFLG3                                                  02568000
PLHBWD   EQU   PLHFLG3                                                  02569000
PLHSLVLD EQU   PLHFLG3                                                  02570000
PLHSRBSG EQU   PLHFLG3                                                  02571000
@NM00057 EQU   PLHEFLGS+1                                               02572000
PLHRSTRT EQU   PLHEFLGS+1                                               02573000
PLHDSCAN EQU   PLHEFLGS                                                 02574000
PLHINVAL EQU   PLHEFLGS                                                 02575000
PLHEODX  EQU   PLHEFLGS                                                 02576000
PLHNOADV EQU   PLHEFLGS                                                 02577000
PLHSRINV EQU   PLHEFLGS                                                 02578000
PLH1ST   EQU   PLHEFLGS                                                 02579000
PLHNOSPC EQU   PLHEFLGS                                                 02580000
PLHIWAIT EQU   PLHFLG2                                                  02581000
PLHSVADV EQU   PLHFLG2                                                  02582000
PLHCIINS EQU   PLHFLG2                                                  02583000
PLHKRE   EQU   PLHFLG2                                                  02584000
PLHADDTE EQU   PLHFLG2                                                  02585000
PLHKEYMD EQU   PLHFLG2                                                  02586000
PLHSQINS EQU   PLHFLG2                                                  02587000
PLHUPD   EQU   PLHFLG2                                                  02588000
PLHDRPND EQU   PLHFLG1                                                  02589000
PLHASYRQ EQU   PLHFLG1                                                  02590000
PLHASKBF EQU   PLHFLG1                                                  02591000
PLHEOVW  EQU   PLHFLG1                                                  02592000
PLHATV   EQU   IDAPLH+1                                                 02593000
PLHAVL   EQU   IDAPLH                                                   02594000
PLHIOSDQ EQU   IDAPLHDR+12                                              02595000
PLHDRCUR EQU   IDAPLHDR+10                                              02596000
PLHDRMAX EQU   IDAPLHDR+8                                               02597000
PLHDRREQ EQU   IDAPLHDR+4                                               02598000
PLHELTH  EQU   IDAPLHDR+2                                               02599000
PLHID    EQU   IDAPLHDR                                                 02600000
AMDEXCP  EQU   AMDSTAT+44                                               02601000
AMDNCAS  EQU   AMDSTAT+40                                               02602000
AMDNCIS  EQU   AMDSTAT+36                                               02603000
AMDASPA  EQU   AMDSTAT+32                                               02604000
AMDRETR  EQU   AMDSTAT+28                                               02605000
AMDUPR   EQU   AMDSTAT+24                                               02606000
AMDIREC  EQU   AMDSTAT+20                                               02607000
AMDDELR  EQU   AMDSTAT+16                                               02608000
AMDNLR   EQU   AMDSTAT+12                                               02609000
AMDNEXT  EQU   AMDSTAT+10                                               02610000
AMDNIL   EQU   AMDSTAT+8                                                02611000
AMDSTSP  EQU   AMDSTAT                                                  02612000
@NM00056 EQU   IDAAMDSB+41                                              02613000
@NM00055 EQU   AMDATTR3                                                 02614000
AMDLM    EQU   AMDATTR3                                                 02615000
AMDWAIT  EQU   AMDATTR3                                                 02616000
AMDBIND  EQU   AMDATTR3                                                 02617000
AMDFAULT EQU   AMDATTR3                                                 02618000
AMDUNQ   EQU   AMDATTR3                                                 02619000
AMDPARDB EQU   IDAAMDSB+36                                              02620000
AMDMAXRR EQU   AMDSSRBA                                                 02621000
AMDNSLOT EQU   AMDHLRBA                                                 02622000
AMDLRECL EQU   IDAAMDSB+24                                              02623000
AMDFSCI  EQU   IDAAMDSB+16                                              02624000
AMDFSCA  EQU   IDAAMDSB+14                                              02625000
AMDCIPCA EQU   IDAAMDSB+12                                              02626000
AMDPCTCI EQU   IDAAMDSB+11                                              02627000
AMDPCTCA EQU   IDAAMDSB+10                                              02628000
AMDKEYLN EQU   IDAAMDSB+8                                               02629000
AMDRKP   EQU   IDAAMDSB+6                                               02630000
AMDAXRKP EQU   AMDNEST                                                  02631000
AMDLEN   EQU   IDAAMDSB+2                                               02632000
AMDRANGE EQU   AMDATTR                                                  02633000
AMDORDER EQU   AMDATTR                                                  02634000
AMDREPL  EQU   AMDATTR                                                  02635000
AMDSDT   EQU   AMDATTR                                                  02636000
AMDWCK   EQU   AMDATTR                                                  02637000
AMDDST   EQU   AMDATTR                                                  02638000
AMDSBID  EQU   IDAAMDSB                                                 02639000
AMBLCMB  EQU   IDAAMBL+64                                               02640000
AMBLBIB  EQU   IDAAMBL+60                                               02641000
AMBLIX   EQU   IDAAMBL+56                                               02642000
AMBLDTA  EQU   IDAAMBL+52                                               02643000
AMBLMIDS EQU   IDAAMBL+42                                               02644000
AMBLNIDS EQU   IDAAMBL+41                                               02645000
@NM00054 EQU   IDAAMBL+40                                               02646000
AMBLNUM  EQU   IDAAMBL+38                                               02647000
AMBLNST  EQU   IDAAMBL+37                                               02648000
@NM00053 EQU   AMBLFLG2                                                 02649000
AMBLSTAG EQU   AMBLFLG2                                                 02650000
@NM00052 EQU   AMBLFLG2                                                 02651000
AMBLDUMY EQU   AMBLFLG1                                                 02652000
AMBLCAT  EQU   AMBLFLG1                                                 02653000
AMBLUCRA EQU   AMBLFLG1                                                 02654000
AMBLSCRA EQU   AMBLFLG1                                                 02655000
AMBLSDS  EQU   AMBLVVIC                                                 02656000
AMBLUPD  EQU   AMBLFLG1                                                 02657000
AMBLCINV EQU   AMBLFLG1                                                 02658000
AMBLFULL EQU   AMBLFLG1                                                 02659000
AMBLLEN  EQU   IDAAMBL+34                                               02660000
@NM00051 EQU   AMBLSHAR                                                 02661000
AMBLWRIT EQU   AMBLSHAR                                                 02662000
AMBLCATO EQU   AMBLSHAR                                                 02663000
AMBLPRIM EQU   AMBLSHAR                                                 02664000
AMBLID   EQU   IDAAMBL+32                                               02665000
@NM00050 EQU   AMBLQ2                                                   02666000
AMBLCBIC EQU   AMBLQ2                                                   02667000
@NM00049 EQU   AMBLTYPE                                                 02668000
AMBLFIX  EQU   AMBLTYPE                                                 02669000
AMBLBASE EQU   AMBLTYPE                                                 02670000
AMBLAIX  EQU   AMBLTYPE                                                 02671000
AMBLUPGR EQU   AMBLTYPE                                                 02672000
AMBLPATH EQU   AMBLTYPE                                                 02673000
AMBLENO  EQU   AMBLVC+1                                                 02674000
AMBLVRT  EQU   AMBLVC                                                   02675000
AMBLXPT  EQU   IDAAMBL+24                                               02676000
AMBLDFR  EQU   AMBLQ                                                    02677000
AMBLESDS EQU   AMBLQ                                                    02678000
AMBLKSDS EQU   AMBLQ                                                    02679000
AMBLUBF  EQU   AMBLQ                                                    02680000
AMBLFSTP EQU   AMBLQ                                                    02681000
AMBLLSR  EQU   AMBLQ                                                    02682000
AMBLGSR  EQU   AMBLQ                                                    02683000
AMBLDDC  EQU   AMBLQ                                                    02684000
AMBLDCI  EQU   AMBLIDF+4                                                02685000
AMBLCACB EQU   AMBLIDF                                                  02686000
@NM00048 EQU   AMBLEOV+2                                                02687000
AMBLCOMP EQU   AMBLEOV+1                                                02688000
AMBLESET EQU   AMBLEFLG                                                 02689000
AMBLWAIT EQU   AMBLEFLG                                                 02690000
AMBLACB  EQU   IDAAMBL+8                                                02691000
AMBLSCHN EQU   IDAAMBL+4                                                02692000
AMBLPCHN EQU   IDAAMBL                                                  02693000
AMBTRACE EQU   IDAAMB+120                                               02694000
AMBVIOT  EQU   IDAAMB+116                                               02695000
AMBSZCP  EQU   IDAAMB+114                                               02696000
AMBSZFW  EQU   IDAAMB+112                                               02697000
AMBSZWR  EQU   IDAAMB+110                                               02698000
AMBSZRD  EQU   IDAAMB+108                                               02699000
AMBEXEX  EQU   IDAAMB+100                                               02700000
AMBWSHD  EQU   IDAAMB+96                                                02701000
AMBCPA   EQU   IDAAMB+92                                                02702000
AMBBM2SH EQU   IDAAMB+88                                                02703000
AMBRDCNT EQU   AMBCSWD1+2                                               02704000
@NM00047 EQU   AMBCSWD1+1                                               02705000
@NM00046 EQU   AMBAFLG                                                  02706000
AMBCFX   EQU   AMBAFLG                                                  02707000
AMBSIS   EQU   AMBAFLG                                                  02708000
AMBDFR   EQU   AMBAFLG                                                  02709000
AMBICI   EQU   AMBAFLG                                                  02710000
AMBGSR   EQU   AMBAFLG                                                  02711000
AMBLSR   EQU   AMBAFLG                                                  02712000
@NM00045 EQU   AMBAFLG                                                  02713000
AMBUPLH  EQU   IDAAMB+80                                                02714000
AMBPAMBL EQU   IDAAMB+76                                                02715000
AMBPIXP  EQU   IDAAMB+72                                                02716000
@NM00044 EQU   IDAAMB+68                                                02717000
AMBWKA   EQU   IDAAMB+60                                                02718000
AMBAMBXN EQU   AMBEOVPT                                                 02719000
AMBEDB   EQU   IDAAMB+52                                                02720000
AMBRPT   EQU   IDAAMB+50                                                02721000
AMBBUSY  EQU   AMBOFLGS                                                 02722000
AMBEXFG  EQU   AMBOFLGS                                                 02723000
@NM00043 EQU   AMBOFLGS                                                 02724000
AMBOPEN  EQU   AMBOFLGS                                                 02725000
@NM00042 EQU   AMBOFLGS                                                 02726000
AMBDEBAD EQU   AMBDEBPT+1                                               02727000
AMBIFLGS EQU   AMBDEBPT                                                 02728000
AMBAMETH EQU   IDAAMB+43                                                02729000
AMBSDS   EQU   AMBINFL                                                  02730000
AMBUPX   EQU   AMBINFL                                                  02731000
@NM00041 EQU   AMBINFL                                                  02732000
@NM00040 EQU   AMBINFL                                                  02733000
AMBTIOT  EQU   IDAAMB+40                                                02734000
@NM00039 EQU   IDAAMB+38                                                02735000
AMBDDSN  EQU   IDAAMB+35                                                02736000
AMBCDSN  EQU   IDAAMB+32                                                02737000
AMBIOMB  EQU   AMBIOBAD                                                 02738000
@NM00038 EQU   AMBDSORG+1                                               02739000
AMBDORGA EQU   AMBDSORG+1                                               02740000
@NM00037 EQU   AMBDSORG                                                 02741000
AMBJRN   EQU   AMBFLG1                                                  02742000
AMBUBF   EQU   AMBFLG1                                                  02743000
AMBSPEED EQU   AMBFLG1                                                  02744000
AMBPCAT  EQU   AMBFLG1                                                  02745000
AMBMCAT  EQU   AMBFLG1                                                  02746000
AMBCREAT EQU   AMBFLG1                                                  02747000
@NM00036 EQU   AMBFLG0                                                  02748000
AMBSWSP  EQU   AMBFLG0                                                  02749000
AMBPSDS  EQU   AMBFLG0                                                  02750000
AMBCACB  EQU   IDAAMB+16                                                02751000
AMBLINK  EQU   IDAAMB+4                                                 02752000
AMBLEN   EQU   IDAAMB+2                                                 02753000
AMBRSC   EQU   IDAAMB+1                                                 02754000
AMBID    EQU   IDAAMB                                                   02755000
ACBAPID  EQU   ACBCOMN+72                                               02756000
ACBCBMWA EQU   ACBCOMN+68                                               02757000
ACBUAPTR EQU   ACBCOMN+64                                               02758000
ACBLRECL EQU   ACBCOMN+62                                               02759000
ACBMSGLN EQU   ACBBLKSZ                                                 02760000
ACBBUFSP EQU   ACBCOMN+56                                               02761000
@NM00035 EQU   ACBUJFCB+1                                               02762000
ACBOPTN  EQU   ACBUJFCB                                                 02763000
@NM00034 EQU   ACBINFL2                                                 02764000
ACBCBIC  EQU   ACBINFL2                                                 02765000
@NM00033 EQU   ACBINFL2                                                 02766000
ACBBYPSS EQU   ACBINFL1                                                 02767000
ACBSDS   EQU   ACBVVIC                                                  02768000
ACBUCRA  EQU   ACBINFL1                                                 02769000
ACBSCRA  EQU   ACBINFL1                                                 02770000
ACBCAT   EQU   ACBINFL1                                                 02771000
ACBIJRQE EQU   ACBINFL1                                                 02772000
ACBJEPS  EQU   ACBINFL1                                                 02773000
@NM00032 EQU   ACBINFL1                                                 02774000
ACBERFLG EQU   ACBCOMN+49                                               02775000
ACBBUSY  EQU   ACBIOSFG                                                 02776000
ACBLOCK  EQU   ACBEXFG                                                  02777000
@NM00031 EQU   ACBOFLGS                                                 02778000
ACBDSERR EQU   ACBOFLGS                                                 02779000
ACBOPEN  EQU   ACBOFLGS                                                 02780000
ACBEOV   EQU   ACBOFLGS                                                 02781000
@NM00030 EQU   ACBOFLGS                                                 02782000
ACBDEB   EQU   ACBDDNM+5                                                02783000
ACBERFL  EQU   ACBDDNM+4                                                02784000
ACBAM    EQU   ACBAMETH                                                 02785000
ACBINFL  EQU   ACBDDNM+2                                                02786000
ACBTIOT  EQU   ACBDDNM                                                  02787000
ACBUEL   EQU   ACBEXLST                                                 02788000
ACBPASSW EQU   ACBCOMN+32                                               02789000
ACBMSGAR EQU   ACBCOMN+28                                               02790000
@NM00029 EQU   ACBDSORG+1                                               02791000
ACBDORGA EQU   ACBDSORG+1                                               02792000
@NM00028 EQU   ACBDSORG                                                 02793000
ACBOPTJ  EQU   ACBDVIND                                                 02794000
ACBCRNRE EQU   ACBCROPS                                                 02795000
ACBCRNCK EQU   ACBCROPS                                                 02796000
ACBASA   EQU   ACBCCTYP                                                 02797000
@NM00027 EQU   ACBCCTYP                                                 02798000
ACBTRCID EQU   ACBCCTYP                                                 02799000
@NM00026 EQU   ACBRECFM                                                 02800000
ACBRECAF EQU   ACBRECFM                                                 02801000
ACBJBUF  EQU   ACBBUFPL+2                                               02802000
ACBMACR4 EQU   ACBBUFPL+1                                               02803000
@NM00025 EQU   ACBMACR3                                                 02804000
ACBNCFX  EQU   ACBMACR3                                                 02805000
ACBSIS   EQU   ACBMACR3                                                 02806000
ACBDFR   EQU   ACBMACR3                                                 02807000
ACBICI   EQU   ACBMACR3                                                 02808000
ACBGSR   EQU   ACBMACR3                                                 02809000
ACBLSR   EQU   ACBMACR3                                                 02810000
@NM00024 EQU   ACBMACR3                                                 02811000
ACBBUFNI EQU   ACBCOMN+18                                               02812000
ACBBUFND EQU   ACBCOMN+16                                               02813000
ACBSTRNO EQU   ACBCOMN+15                                               02814000
ACBBSTNO EQU   ACBCOMN+14                                               02815000
ACBAIX   EQU   ACBMACR2                                                 02816000
ACBDSN   EQU   ACBMACR2                                                 02817000
ACBRST   EQU   ACBMACR2                                                 02818000
ACBLOGON EQU   ACBMACR2                                                 02819000
ACBSKP   EQU   ACBMACR2                                                 02820000
@NM00023 EQU   ACBMACR2                                                 02821000
ACBUBF   EQU   ACBMACR1                                                 02822000
ACBOUT   EQU   ACBMACR1                                                 02823000
ACBIN    EQU   ACBMACR1                                                 02824000
ACBDIR   EQU   ACBMACR1                                                 02825000
ACBSEQ   EQU   ACBMACR1                                                 02826000
ACBBLK   EQU   ACBCNV                                                   02827000
ACBADD   EQU   ACBADR                                                   02828000
ACBKEY   EQU   ACBMACR1                                                 02829000
ACBINRTN EQU   ACBCOMN+8                                                02830000
ACBIBCT  EQU   ACBJWA                                                   02831000
ACBLEN2  EQU   ACBLENG2                                                 02832000
ACBSTYP  EQU   ACBCOMN+1                                                02833000
ACBID    EQU   ACBCOMN                                                  02834000
BUFCEND  EQU   IDABUFC+64                                               02835000
BUFCUCDN EQU   IDABUFC+60                                               02836000
BUFCUCUP EQU   IDABUFC+56                                               02837000
BUFCMDBT EQU   IDABUFC+52                                               02838000
BUFCDSPC EQU   IDABUFC+32                                               02839000
BUFCWLEN EQU   BUFCINV                                                  02840000
BUFCAMB  EQU   BUFCPLH                                                  02841000
@NM00022 EQU   BUFCFLG2                                                 02842000
BUFCBSYW EQU   BUFCFLG2                                                 02843000
BUFCBSYR EQU   BUFCFLG2                                                 02844000
BUFCNLAS EQU   BUFCFLG2                                                 02845000
BUFCXDDR EQU   BUFCFLG2                                                 02846000
BUFCFIX  EQU   BUFCIOFL                                                 02847000
BUFCPFCP EQU   BUFCIOFL                                                 02848000
BUFCWC   EQU   BUFCIOFL                                                 02849000
BUFCREAL EQU   BUFCIOFL                                                 02850000
BUFCFMT  EQU   BUFCIOFL                                                 02851000
BUFCSEG  EQU   BUFCFLG1                                                 02852000
BUFCUPG  EQU   BUFCFLG1                                                 02853000
BUFCUCNT EQU   BUFCAVL                                                  02854000
@NM00021 EQU   IDABUFDR+16                                              02855000
@NM00020 EQU   BUFDRFLG                                                 02856000
BUFDRAVL EQU   BUFDRFLG                                                 02857000
BUFDRTSB EQU   IDABUFDR+10                                              02858000
BUFDRMAX EQU   BUFDRCIX                                                 02859000
BUFDRPFN EQU   IDABUFDR+8                                               02860000
BUFDRPFB EQU   IDABUFDR+4                                               02861000
BUFDRLEN EQU   IDABUFDR+2                                               02862000
BUFDRID  EQU   IDABUFDR                                                 02863000
RPLERMSA EQU   RPLCOMN+72                                               02864000
RPLEMLEN EQU   RPLCOMN+70                                               02865000
RPLACTIV EQU   RPLCOMN+69                                               02866000
RPLBRANC EQU   RPLEXTD1                                                 02867000
RPLNIB   EQU   RPLEXTD1                                                 02868000
@NM00019 EQU   RPLEXTD1                                                 02869000
RPLEXIT  EQU   RPLEXTD1                                                 02870000
RPLNEXIT EQU   RPLEXTD1                                                 02871000
RPLEXSCH EQU   RPLEXTD1                                                 02872000
RPLDDDD  EQU   RPLRBAR+4                                                02873000
@NM00018 EQU   RPLRBAR+3                                                02874000
@NM00017 EQU   RPLAIXID                                                 02875000
RPLAXPKP EQU   RPLAIXID                                                 02876000
RPLAIXPC EQU   RPLRBAR                                                  02877000
RPLRSV88 EQU   RPLOPT8                                                  02878000
RPLUNCON EQU   RPLOPT8                                                  02879000
RPLACTV  EQU   RPLOPT8                                                  02880000
RPLSESS  EQU   RPLOPT8                                                  02881000
RPLPEND  EQU   RPLOPT8                                                  02882000
RPLODPRM EQU   RPLOPT8                                                  02883000
RPLODACP EQU   RPLOPT8                                                  02884000
RPLODACQ EQU   RPLOPT8                                                  02885000
RPLRSV78 EQU   RPLOPT7                                                  02886000
RPLTCRNO EQU   RPLOPT7                                                  02887000
RPLRLSOP EQU   RPLOPT7                                                  02888000
RPLTPOST EQU   RPLOPT7                                                  02889000
RPLQOPT  EQU   RPLOPT7                                                  02890000
RPLCNIMM EQU   RPLCNOPT                                                 02891000
RPLCNANY EQU   RPLCNOPT                                                 02892000
RPLCNALL EQU   RPLCNOPT                                                 02893000
RPLRSV68 EQU   RPLOPT6                                                  02894000
RPLRSV67 EQU   RPLOPT6                                                  02895000
RPLLOCK  EQU   RPLOPT6                                                  02896000
RPLNCOND EQU   RPLOPT6                                                  02897000
RPLCOND  EQU   RPLOPT6                                                  02898000
RPLEOT   EQU   RPLUNTYP                                                 02899000
RPLEOM   EQU   RPLUNTYP                                                 02900000
RPLEOB   EQU   RPLUNTYP                                                 02901000
RPLWROPT EQU   RPLOPT5                                                  02902000
RPLNODE  EQU   RPLOPT5                                                  02903000
RPLERACE EQU   RPLWRTYP                                                 02904000
RPLEAU   EQU   RPLWRTYP                                                 02905000
RPLNERAS EQU   RPLWRTYP                                                 02906000
RPLPSOPT EQU   RPLOPT5                                                  02907000
@NM00016 EQU   RPLOPT5                                                  02908000
RPLDLGIN EQU   RPLOPT5                                                  02909000
RPLBUFL  EQU   RPLCOMN+52                                               02910000
RPLRLEN  EQU   RPLCOMN+48                                               02911000
RPLCHAIN EQU   RPLNXTRP                                                 02912000
@NM00015 EQU   RPLOPT4                                                  02913000
RPLMKFRM EQU   RPLOPT4                                                  02914000
RPLENDTR EQU   RPLOPT4                                                  02915000
RPLALIGN EQU   RPLOPT3                                                  02916000
RPLFMT   EQU   RPLOPT3                                                  02917000
RPLFLD   EQU   RPLOPT3                                                  02918000
RPLVFY   EQU   RPLOPT3                                                  02919000
RPLBLK   EQU   RPLOPT3                                                  02920000
RPLSFORM EQU   RPLOPT3                                                  02921000
RPLEODS  EQU   RPLOPT3                                                  02922000
RPLNSP   EQU   RPLOPT2                                                  02923000
RPLUPD   EQU   RPLOPT2                                                  02924000
RPLWAITX EQU   RPLOPT2                                                  02925000
RPLLRD   EQU   RPLOPT2                                                  02926000
RPLCNV   EQU   RPLOPT2                                                  02927000
RPLADD   EQU   RPLADR                                                   02928000
RPLECBIN EQU   RPLECBSW                                                 02929000
RPLGEN   EQU   RPLOPT1                                                  02930000
RPLKGE   EQU   RPLOPT1                                                  02931000
RPLSKP   EQU   RPLOPT1                                                  02932000
RPLDIR   EQU   RPLOPT1                                                  02933000
RPLLOC   EQU   RPLOPT1                                                  02934000
RPLDAF   EQU   RPLARG+2                                                 02935000
RPLSAF   EQU   RPLARG                                                   02936000
RPLAREA  EQU   RPLCOMN+32                                               02937000
RPLTCBPT EQU   RPLCOMN+28                                               02938000
RPLCCHAR EQU   RPLCOMN+20                                               02939000
RPLSTRID EQU   RPLCOMN+18                                               02940000
RPLKEYL  EQU   RPLKEYLE                                                 02941000
RPLRDSOH EQU   RPLFDB3                                                  02942000
RPLRLG   EQU   RPLFDB3                                                  02943000
RPLLGFRC EQU   RPLFDB3                                                  02944000
RPLREOT  EQU   RPLFDB3                                                  02945000
RPLREOM  EQU   RPLFDB3                                                  02946000
RPLREOB  EQU   RPLFDB3                                                  02947000
RPLSV32  EQU   RPLFDB3                                                  02948000
RPLUINPT EQU   RPLFDB3                                                  02949000
RPLSTSAV EQU   RPLFDB2                                                  02950000
RPLCUERR EQU   RPLFDB2                                                  02951000
RPLDLGFL EQU   RPLFDB2                                                  02952000
RPLIOERR EQU   RPLFDB2                                                  02953000
RPLDVUNS EQU   RPLFDB2                                                  02954000
RPLATND  EQU   RPLFDB2                                                  02955000
RPLRVID  EQU   RPLFDB2                                                  02956000
RPLERLK  EQU   RPLFDB2                                                  02957000
RPLSTAT  EQU   RPLFDBWD                                                 02958000
RPLPOST  EQU   RPLECB                                                   02959000
RPLWAIT  EQU   RPLECB                                                   02960000
RPLPLHPT EQU   RPLCOMN+4                                                02961000
RPLLEN2  EQU   RPLLEN                                                   02962000
RPLSTYP  EQU   RPLIDWD+1                                                02963000
RPLID    EQU   RPLIDWD                                                  02964000
@NM00014 EQU   IDADIWA+92                                               02965000
@NM00013 EQU   IDADIWA+88                                               02966000
@NM00012 EQU   IDADIWA+84                                               02967000
@NM00011 EQU   IDADIWA+80                                               02968000
@NM00010 EQU   IDADIWA+76                                               02969000
@NM00009 EQU   IDADIWA+72                                               02970000
@NM00008 EQU   IDADIWA+68                                               02971000
@NM00007 EQU   IDADIWA+64                                               02972000
@NM00006 EQU   IDADIWA+60                                               02973000
@NM00005 EQU   IDADIWA+56                                               02974000
DIWRKCT  EQU   IDADIWA+48                                               02975000
DIWSAVE5 EQU   DIWSAVE+16                                               02976000
DIWSAVE4 EQU   DIWSAVE+12                                               02977000
DIWSAVE3 EQU   DIWSAVE+8                                                02978000
DIWSAVE2 EQU   DIWSAVE+4                                                02979000
DIWSAVE1 EQU   DIWSAVE                                                  02980000
DIWSPLTP EQU   IDADIWA+24                                               02981000
@NM00004 EQU   IDADIWA+6                                                02982000
DIWFSPF  EQU   DIWFLG2                                                  02983000
DIW1ST   EQU   DIWFLG1                                                  02984000
DIWNOT1  EQU   DIWFLG1                                                  02985000
DIWGSPC  EQU   DIWFLG1                                                  02986000
DIWEOKR  EQU   DIWFLG1                                                  02987000
DIWPFERR EQU   DIWFLG1                                                  02988000
DIWCISPL EQU   DIWFLG1                                                  02989000
DIWLEN   EQU   IDADIWA+2                                                02990000
DIWATV   EQU   IDADIWA+1                                                02991000
DIWID    EQU   IDADIWA                                                  02992000
ARDKEYS  EQU   IDAARDB+29                                               02993000
@NM00003 EQU   ARDPRF                                                   02994000
ARDPRFMT EQU   ARDPRF                                                   02995000
ARDPRSS  EQU   ARDPRF                                                   02996000
ARDRELNO EQU   IDAARDB+26                                               02997000
ARDVOLSR EQU   IDAARDB+20                                               02998000
ARDERBA  EQU   IDAARDB+16                                               02999000
ARDHRBA  EQU   IDAARDB+12                                               03000000
ARDHKRBA EQU   IDAARDB+8                                                03001000
ARDNPTR  EQU   IDAARDB+4                                                03002000
ARDLEN   EQU   IDAARDB+2                                                03003000
ARDUSED  EQU   ARDTYPE                                                  03004000
ARDEOD   EQU   ARDTYPE                                                  03005000
ARDUOVFL EQU   ARDTYPE                                                  03006000
ARDSS    EQU   ARDTYPE                                                  03007000
ARDHLI   EQU   ARDTYPE                                                  03008000
ARDKR    EQU   ARDTYPE                                                  03009000
ARDID    EQU   IDAARDB                                                  03010000
IXSLEP   EQU   IDAIXSPL+28                                              03011000
IXSSEP   EQU   IDAIXSPL+24                                              03012000
IXSHEP   EQU   IDAIXSPL+20                                              03013000
IXSPEC   EQU   IDAIXSPL+19                                              03014000
IXSEKON  EQU   IDAIXSPL+18                                              03015000
@NM00002 EQU   IXSBFLG                                                  03016000
IXSLELV  EQU   IXSBFLG                                                  03017000
IXSSSRH  EQU   IXSBFLG                                                  03018000
IXSNOSR  EQU   IDAIXSPL+16                                              03019000
IXSKLEN  EQU   IDAIXSPL+14                                              03020000
IXSTLN   EQU   IDAIXSPL+12                                              03021000
IXSARG   EQU   IDAIXSPL+8                                               03022000
IXSBUFC  EQU   IDAIXSPL+4                                               03023000
IXSSTRBA EQU   IDAIXSPL                                                 03024000
IXKEY    EQU   IDAIXK                                                   03025000
IXSELL   EQU   IDASELL                                                  03026000
IBFLP1   EQU   IBFLP2                                                   03027000
IBFLPL   EQU   IDAIBFLP+1                                               03028000
IBFLPF   EQU   IDAIBFLP                                                 03029000
IXHSEO   EQU   IDAIXH+22                                                03030000
IXHLEO   EQU   IDAIXH+20                                                03031000
IXHFSO   EQU   IDAIXH+18                                                03032000
IXHFLGS  EQU   IDAIXH+17                                                03033000
IXHLV    EQU   IDAIXH+16                                                03034000
IXHXX    EQU   IDAIXH+12                                                03035000
IXHHP    EQU   IDAIXH+8                                                 03036000
IXHBRBA  EQU   IDAIXH+4                                                 03037000
IXHPTLS  EQU   IDAIXH+3                                                 03038000
IXHFLPLN EQU   IDAIXH+2                                                 03039000
IXHLL    EQU   IDAIXH                                                   03040000
KEY      EQU   IDAKEY                                                   03041000
AMDATA   EQU   IDADATA                                                  03042000
RDFLL    EQU   IDARDF+1                                                 03043000
RDFEMPTY EQU   RDFRBYTE                                                 03044000
RDFREPL  EQU   RDFRBYTE                                                 03045000
RDFCTNU  EQU   RDFRBYTE                                                 03046000
RDFTYPE  EQU   RDFRBYTE                                                 03047000
@NM00001 EQU   CIDFLL                                                   03048000
CIDFBUSY EQU   CIDFLL                                                   03049000
CIDFOSET EQU   IDACIDF                                                  03050000
IOECBPT  EQU   IOECB                                                    03051000
IOECBWT  EQU   IOECB                                                    03052000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03053000
@RF00208 EQU   @RC00196                                                 03054000
@RC00186 EQU   @EL00001                                                 03055000
@RC00174 EQU   @EL00001                                                 03056000
@RF00214 EQU   @EL00001                                                 03057000
@RF00405 EQU   @RC00365                                                 03058000
@RT00429 EQU   RBAFND                                                   03059000
@RF00431 EQU   @RC00427                                                 03060000
@RC00554 EQU   @RC00549                                                 03061000
@RT00598 EQU   RDEXCLER                                                 03062000
@RT00605 EQU   RDEXCLER                                                 03063000
@RT00607 EQU   RDEXCLER                                                 03064000
@RC00594 EQU   @EL00003                                                 03065000
@RF00649 EQU   @EL00005                                                 03066000
@RT00659 EQU   @EL00006                                                 03067000
@RT00664 EQU   RDAHEADX                                                 03068000
@RT00674 EQU   RDAHEADX                                                 03069000
@RT00676 EQU   RDAHEADX                                                 03070000
@RF00684 EQU   @RC00681                                                 03071000
@ENDDATA EQU   *                                                        03072000
         END   IDA019R2,(C'PLS1742',0701,78192)                         03073000
