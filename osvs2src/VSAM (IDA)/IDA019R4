         TITLE 'IDA019R4--VSAM KEYED/ADDRESSED ACCESSING               *00001000
                        '                                               00002000
IDA019R4 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019R4  78.172'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  LA    @10,4095(,@11)                                      0001 00011000
         USING @PSTART,@11                                         0001 00012000
         USING @PSTART+4095,@10                                    0001 00013000
         IDASVR14                                                       00014000
*   IF AMBCREAT=ON THEN             /* DURING LOAD MODE              */ 00015000
         TM    AMBCREAT(RAMB),B'10000000'                          0157 00016000
         BNO   @RF00157                                            0157 00017000
*     DO;                           /* ALLOW ONLY PUT REQUESTS       */ 00018000
*       IF RPLREQ^=RPLPUT|          /* ALSO DO NOT ALLOW             */ 00019000
*           (RPLKEY=ON&RPLDIR=ON) THEN/* KEYED DIRECT REQUESTS       */ 00020000
         CLI   RPLREQ(RRPL),1                                      0159 00021000
         BNE   @RT00159                                            0159 00022000
         TM    RPLKEY(RRPL),B'10000000'                            0159 00023000
         BNO   @RF00159                                            0159 00024000
         TM    RPLDIR(RRPL),B'01000000'                            0159 00025000
         BNO   @RF00159                                            0159 00026000
@RT00159 DS    0H                                                  0160 00027000
*         DO;                       /*                               */ 00028000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 00029000
         MVI   RPLERREG(RRPL),X'08'                                0161 00030000
*           RPLERRCD=RPLINLRQ;      /* INVALID REQUEST               */ 00031000
         MVI   RPLERRCD(RRPL),X'74'                                0162 00032000
*           PLHINVAL=ON;            /* RELEASE PLH           @ZA11564*/ 00033000
         OI    PLHINVAL(RPLH),B'00000010'                          0163 00034000
*           CALL MODEXIT;           /* RETURN                @X04SVRQ*/ 00035000
         BAL   @14,MODEXIT                                         0164 00036000
*         END;                      /* END LOAD MODE ERROR           */ 00037000
*     END;                          /* END LOAD MODE CHECK           */ 00038000
@RF00159 DS    0H                                                  0167 00039000
*                                                                  0167 00040000
*   /*****************************************************************/ 00041000
*   /*                                                               */ 00042000
*   /* GET REQUEST PROCESSING                                        */ 00043000
*   /*                                                               */ 00044000
*   /*****************************************************************/ 00045000
*                                                                  0167 00046000
*   IF RPLREQ=RPLGET                /*                               */ 00047000
*     THEN                          /*                               */ 00048000
@RF00157 CLI   RPLREQ(RRPL),0                                      0167 00049000
         BNE   @RF00167                                            0167 00050000
*     DO;                           /* GET REQUEST TYPE              */ 00051000
*       PLHUPD=OFF;                 /* RESET UPDATE          @ZA07544*/ 00052000
         NI    PLHUPD(RPLH),B'01111111'                            0169 00053000
*       IF RPLSEQ=OFF               /* IF NOT SEQUENTIAL             */ 00054000
*         THEN                      /* CONTINUE                      */ 00055000
         TM    RPLSEQ(RRPL),B'00100000'                            0170 00056000
         BNZ   @RF00170                                            0170 00057000
*         DO;                       /* DIRECT OR SKP REQUEST CALL  0171 00058000
*                                      DIRECT RECORD LOC             */ 00059000
*           RPARM1=RPLARG;          /* POINT TO SEARCH ARG           */ 00060000
         L     RPARM1,RPLARG(,RRPL)                                0172 00061000
*I01:                                                              0173 00062000
*           DO;                     /* IDACALL(IDA019RA)             */ 00063000
I01      DS    0H                                                  0174 00064000
*             CALL IDA019RA;        /* EXIT TO IDA019RA              */ 00065000
         L     @15,@CV01000                                        0174 00066000
         BALR  @14,@15                                             0174 00067000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00068000
         BALR @11,0                                                     00069000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00070000
         USING *,@11                                                    00071000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 00072000
         USING *+4095,@10                                               00073000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 00074000
         LA    @10,4095(@11)                                            00075000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 00076000
         L     @10,=A(@PSTART+4095)                                     00077000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 00078000
         USING @PSTART+4095,@10                                         00079000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00080000
         L     @11,=A(@PSTART)                                          00081000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00082000
         USING @PSTART,@11                                              00083000
*           END I01;                /* MACRO                 @X04SVRQ*/ 00084000
*           IF RPLERREG^='00'X      /* SEE IF ERROR                  */ 00085000
*             THEN                  /* YES.                          */ 00086000
         CLI   RPLERREG(RRPL),0                                    0184 00087000
         BE    @RF00184                                            0184 00088000
*             CALL MODEXIT;         /* RETURN                @X04SVRQ*/ 00089000
         BAL   @14,MODEXIT                                         0185 00090000
*         END;                      /* END OF DIRECT OR SKP          */ 00091000
*       ELSE                        /*                               */ 00092000
*         DO;                       /* SEQUENTIAL REQUEST            */ 00093000
*                                                                  0187 00094000
         B     @RC00170                                            0187 00095000
@RF00170 DS    0H                                                  0188 00096000
*           /*********************************************************/ 00097000
*           /*                                                       */ 00098000
*           /* CHECK FOR USER SWITCHING ACCESSING TYPES DURING       */ 00099000
*           /* SEQUENTIAL PROCESSING                         @ZA14787*/ 00100000
*           /*                                                       */ 00101000
*           /*********************************************************/ 00102000
*                                                                  0188 00103000
*           IF RPLKEY=ON THEN       /* ADDRESSED ACCESS      @ZA14787*/ 00104000
         TM    RPLKEY(RRPL),B'10000000'                            0188 00105000
         BNO   @RF00188                                            0188 00106000
*             DO;                   /*                       @ZA14787*/ 00107000
*               IF PLHKEYMD=OFF THEN/* CHANGED TO KEYED      @ZA14787*/ 00108000
         TM    PLHKEYMD(RPLH),B'00100000'                          0190 00109000
         BNZ   @RF00190                                            0190 00110000
*                 DO;               /*                       @ZA14787*/ 00111000
*                   GOTO NORPLPTR;  /* POSSIBLE ERROR        @ZA14787*/ 00112000
         B     NORPLPTR                                            0192 00113000
*                 END;              /*                       @ZA14787*/ 00114000
*             END;                  /*                       @ZA14787*/ 00115000
*           ELSE                    /* KEYED SEQ ACCESS      @ZA14787*/ 00116000
*             IF PLHKEYMD=ON THEN   /* CHNGD TO ADDR ACCESS  @ZA14787*/ 00117000
         B     @RC00188                                            0195 00118000
@RF00188 TM    PLHKEYMD(RPLH),B'00100000'                          0195 00119000
         BNO   @RF00195                                            0195 00120000
*NORPLPTR:                                                         0196 00121000
*               DO;                 /* SET ERROR & RETCODES  @ZA14787*/ 00122000
NORPLPTR DS    0H                                                  0197 00123000
*                 IF PLH1ST=OFF THEN/* FIRST PASS SWITCH OFF @ZA14787*/ 00124000
         TM    PLH1ST(RPLH),B'01000000'                            0197 00125000
         BNZ   @RF00197                                            0197 00126000
*                   DO;             /* NOT FIRST PASS        @ZA14787*/ 00127000
*                     RPLERRCD=RPLNOPTR;/* SET POSITIONING ERROR   0199 00128000
*                                                            @ZA14787*/ 00129000
         MVI   RPLERRCD(RRPL),X'58'                                0199 00130000
*                     RPLERREG='08'X;/* SET LOGICAL ERROR    @ZA14787*/ 00131000
         MVI   RPLERREG(RRPL),X'08'                                0200 00132000
*                     CALL MODEXIT; /* RETURN                @ZA14787*/ 00133000
         BAL   @14,MODEXIT                                         0201 00134000
*                   END;            /* NO ERROR FIRST PASS   @ZA14787*/ 00135000
*               END;                /*                       @ZA14787*/ 00136000
@RF00197 DS    0H                                                  0204 00137000
*           IF PLHEFLGS^='0000'X    /* EXCEPTION FLAGS ON            */ 00138000
*             THEN                  /* YES.                          */ 00139000
@RF00195 DS    0H                                                  0204 00140000
@RC00188 CLC   PLHEFLGS(2,RPLH),@CB01013                           0204 00141000
         BE    @RF00204                                            0204 00142000
*             CALL PLHEXP;          /* PROCESS EXCEPTION             */ 00143000
         BAL   @14,PLHEXP                                          0205 00144000
*           ELSE                    /*                               */ 00145000
*             CALL ADVPLH;          /* ADVANCE TO NEXT RECORD        */ 00146000
         B     @RC00204                                            0206 00147000
@RF00204 BAL   @14,ADVPLH                                          0206 00148000
*           IF RPLERREG^='00'X      /* ERROR                         */ 00149000
*             THEN                  /* YES.                          */ 00150000
@RC00204 CLI   RPLERREG(RRPL),0                                    0207 00151000
         BE    @RF00207                                            0207 00152000
*             CALL MODEXIT;         /* RETURN                @X04SVRQ*/ 00153000
         BAL   @14,MODEXIT                                         0208 00154000
*           IF RPLUPD=ON            /* UPDATE REQUEST                */ 00155000
*             THEN                  /* YES.                          */ 00156000
@RF00207 TM    RPLUPD(RRPL),B'00000010'                            0209 00157000
         BNO   @RF00209                                            0209 00158000
*             DO;                   /* DETERMINE IF DATA             */ 00159000
*               IF BUFCEXC=OFF      /* BUFFER IS IN EXCL CTL         */ 00160000
*                 THEN              /* NO.                           */ 00161000
         L     @05,PLHDBUFC(,RPLH)                                 0211 00162000
         TM    BUFCEXC(@05),B'00000010'                            0211 00163000
         BNZ   @RF00211                                            0211 00164000
*                 DO;               /*                               */ 00165000
*                   PLHRDEXC=ON;    /* SET PLH IN EXCL MODE          */ 00166000
         OI    PLHRDEXC(RPLH),B'00001000'                          0213 00167000
*                   CALL SCANDATA;  /* OBTAIN EXCL USE               */ 00168000
         BAL   @14,SCANDATA                                        0214 00169000
*                   IF RPLERREG^='00'X/* ERROR                       */ 00170000
*                     THEN          /* YES.                          */ 00171000
         CLI   RPLERREG(RRPL),0                                    0215 00172000
         BE    @RF00215                                            0215 00173000
*                     CALL MODEXIT; /* RETURN                @X04SVRQ*/ 00174000
         BAL   @14,MODEXIT                                         0216 00175000
*                 END;              /* END OF GET EXCLUSIVE          */ 00176000
@RF00215 DS    0H                                                  0218 00177000
*             END;                  /* END OF GET UPDATE             */ 00178000
@RF00211 DS    0H                                                  0219 00179000
*         END;                      /* END OF SEQUENTIAL             */ 00180000
@RF00209 DS    0H                                                  0220 00181000
*       PLHRCODE=RPLREQ;            /* SAVE REQUEST CODE             */ 00182000
@RC00170 IC    @05,RPLREQ(,RRPL)                                   0220 00183000
         STC   @05,PLHRCODE(,RPLH)                                 0220 00184000
*       IF PLHRDFP->RDF1ST=ON|      /* IF CURRENT BUFF       @X04SVES*/ 00185000
*           PLHRDFP->RDFNOT1=ON THEN/* CONTAINS A SPANNED RECORD   0221 00186000
*                                      SEGMENT GO PROCESS THE      0221 00187000
*                                      RETRIEVAL FROM MODULE IDA019RT   00188000
*                                                            @X04SVES*/ 00189000
         L     @05,PLHRDFP(,RPLH)                                  0221 00190000
         TM    RDF1ST(@05),B'00110000'                             0221 00191000
         BZ    @RF00221                                            0221 00192000
*I02:                                                              0222 00193000
*         DO;                       /* IDACALL(IDADARTV)             */ 00194000
I02      DS    0H                                                  0223 00195000
*           CALL IDADARTV;          /* EXIT TO IDADARTV              */ 00196000
         L     @15,@CV00991                                        0223 00197000
         BALR  @14,@15                                             0223 00198000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00199000
         BALR @11,0                                                     00200000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00201000
         USING *,@11                                                    00202000
*           GEN(USING *+4095,@10);  /* ESTABLISH SECOND BASE         */ 00203000
         USING *+4095,@10                                               00204000
*           GEN(LA    @10,4095(@11));/* LOAD SECOND BASE             */ 00205000
         LA    @10,4095(@11)                                            00206000
*           GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 00207000
         L     @10,=A(@PSTART+4095)                                     00208000
*           GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE     */ 00209000
         USING @PSTART+4095,@10                                         00210000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00211000
         L     @11,=A(@PSTART)                                          00212000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00213000
         USING @PSTART,@11                                              00214000
*         END I02;                  /*                       @X04SVES*/ 00215000
*       ELSE                        /*                       @X04SVES*/ 00216000
*         CALL DATARTV;             /* RETRIEVE RECORD               */ 00217000
         B     @RC00221                                            0233 00218000
@RF00221 BAL   @14,DATARTV                                         0233 00219000
*       IF RPLERREG^='00'X          /* IF ERROR, RLSE BFR    @X04SVMR*/ 00220000
*         THEN                      /*                               */ 00221000
@RC00221 CLI   RPLERREG(RRPL),0                                    0234 00222000
         BE    @RF00234                                            0234 00223000
*         DO;                       /*                       @X04SVMR*/ 00224000
*           IF RPLDIR=ON&RPLUPD=OFF&RPLNSP=OFF/*             @X04SVMR*/ 00225000
*               &RPLLOC=OFF         /* NOT LOCATE            @X04SVMR*/ 00226000
*             THEN                  /* RELEASE PLH           @X04SVMR*/ 00227000
         TM    RPLDIR(RRPL),B'01000000'                            0236 00228000
         BNO   @RF00236                                            0236 00229000
         TM    RPLUPD(RRPL),B'00000011'                            0236 00230000
         BNZ   @RF00236                                            0236 00231000
         TM    RPLLOC(RRPL),B'10000000'                            0236 00232000
         BNZ   @RF00236                                            0236 00233000
*             CALL RLSEBUFS;        /* RELEASE PLH BUFFERS   @X04SVMR*/ 00234000
         BAL   @14,RLSEBUFS                                        0237 00235000
*         END;                      /* END ERROR CODE        @X04SVMR*/ 00236000
*       ELSE                        /* HERE IF NO ERROR      @X04SVMR*/ 00237000
*         DO;                       /*                               */ 00238000
         B     @RC00234                                            0239 00239000
@RF00234 DS    0H                                                  0240 00240000
*           IF AMBUPX=ON&RPLUPD=ON THEN/* AIX UPGRADE & GET UPD REQ.    00241000
*                                                            @X04SVRQ*/ 00242000
         TM    AMBUPX(RAMB),B'00000010'                            0240 00243000
         BNO   @RF00240                                            0240 00244000
         TM    RPLUPD(RRPL),B'00000010'                            0240 00245000
         BNO   @RF00240                                            0240 00246000
*             DO;                   /*                       @X04SVRQ*/ 00247000
*I03:                                                              0242 00248000
*               DO;                 /* IDACALL(IDA019RU)             */ 00249000
I03      DS    0H                                                  0243 00250000
*                 CALL IDA019RU;    /* EXIT TO IDA019RU              */ 00251000
         L     @15,@CV01005                                        0243 00252000
         BALR  @14,@15                                             0243 00253000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00254000
         BALR @11,0                                                     00255000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00256000
         USING *,@11                                                    00257000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 00258000
         USING *+4095,@10                                               00259000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 00260000
         LA    @10,4095(@11)                                            00261000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0248 00262000
*                                      BASE                          */ 00263000
         L     @10,=A(@PSTART+4095)                                     00264000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0249 00265000
*                                      BASE                          */ 00266000
         USING @PSTART+4095,@10                                         00267000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00268000
         L     @11,=A(@PSTART)                                          00269000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00270000
         USING @PSTART,@11                                              00271000
*               END I03;            /* CALL AIX UPGRADE.     @X04SVRQ*/ 00272000
*               IF RPLERREG^='00'X THEN/* ERROR.             @X04SVRQ*/ 00273000
         CLI   RPLERREG(RRPL),0                                    0253 00274000
         BE    @RF00253                                            0253 00275000
*                 CALL MODEXIT;     /* RETURN.               @X04SVRQ*/ 00276000
         BAL   @14,MODEXIT                                         0254 00277000
*             END;                  /*                       @X04SVRQ*/ 00278000
@RF00253 DS    0H                                                  0256 00279000
*           AMDRETR=AMDRETR+ONE;    /* ADD 1 TO RETRIEVE COUNT       */ 00280000
@RF00240 L     @05,AMBDSB(,RAMB)                                   0256 00281000
         LA    @00,1                                               0256 00282000
         AL    @00,AMDRETR(,@05)                                   0256 00283000
         ST    @00,AMDRETR(,@05)                                   0256 00284000
*           PLHNOADV=OFF;           /* RESET NO ADVANCE FLAG         */ 00285000
         NI    PLHNOADV(RPLH),B'11110111'                          0257 00286000
*           IF RPLDIR=ON&RPLUPD=OFF&RPLNSP=OFF/* DIR NUP             */ 00287000
*               &RPLLOC=OFF         /* NOT LOCATE                    */ 00288000
*             THEN                  /* RELEASE PLH                   */ 00289000
         TM    RPLDIR(RRPL),B'01000000'                            0258 00290000
         BNO   @RF00258                                            0258 00291000
         TM    RPLUPD(RRPL),B'00000011'                            0258 00292000
         BNZ   @RF00258                                            0258 00293000
         TM    RPLLOC(RRPL),B'10000000'                            0258 00294000
         BNZ   @RF00258                                            0258 00295000
*             CALL RLSEBUFS;        /* RELEASE PLH BUFFERS           */ 00296000
         BAL   @14,RLSEBUFS                                        0259 00297000
*           ELSE                    /* DONT RELEASE PLH              */ 00298000
*             DO;                   /*                               */ 00299000
         B     @RC00258                                            0260 00300000
@RF00258 DS    0H                                                  0261 00301000
*               IF AMDDST='1'B&     /* KEY SEQ. D.S.         @X04SVES*/ 00302000
*                   PLHSRCSG=ZERO   /* AND NOT SPANNED       @X04SVES*/ 00303000
*                 THEN              /* YES.                          */ 00304000
         L     @05,AMBDSB(,RAMB)                                   0261 00305000
         TM    AMDDST(@05),B'10000000'                             0261 00306000
         BNO   @RF00261                                            0261 00307000
         LH    @05,PLHSRCSG(,RPLH)                                 0261 00308000
         LTR   @05,@05                                             0261 00309000
         BNZ   @RF00261                                            0261 00310000
*                 CALL MOVEKEY;     /* MOVE KEY TO PLH               */ 00311000
         BAL   @14,MOVEKEY                                         0262 00312000
*               IF RPLUPD=ON        /* UPDATE REQUEST                */ 00313000
*                 THEN              /* YES.                          */ 00314000
@RF00261 TM    RPLUPD(RRPL),B'00000010'                            0263 00315000
         BNO   @RF00263                                            0263 00316000
*                 PLHUPD=ON;        /* SET UPDATE FLAG               */ 00317000
         OI    PLHUPD(RPLH),B'10000000'                            0264 00318000
*             END;                  /* END OF SET PLH                */ 00319000
@RF00263 DS    0H                                                  0266 00320000
*           IF AMBJRN=ON THEN       /* JOURNAL EXIT                  */ 00321000
@RC00258 TM    AMBJRN(RAMB),B'00000010'                            0266 00322000
         BNO   @RF00266                                            0266 00323000
*             DO;                   /* YES.                          */ 00324000
*               PLHJCODE=PLHJGET;   /* GET REQUEST TYPE              */ 00325000
         MVI   PLHJCODE(RPLH),B'00000000'                          0268 00326000
*I04:                                                              0269 00327000
*               DO;                 /* IDACALL(IDATJXIT)             */ 00328000
I04      DS    0H                                                  0270 00329000
*                 CALL IDATJXIT;    /* EXIT TO IDATJXIT              */ 00330000
         L     @15,@CV00998                                        0270 00331000
         BALR  @14,@15                                             0270 00332000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00333000
         BALR @11,0                                                     00334000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00335000
         USING *,@11                                                    00336000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 00337000
         USING *+4095,@10                                               00338000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 00339000
         LA    @10,4095(@11)                                            00340000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0275 00341000
*                                      BASE                          */ 00342000
         L     @10,=A(@PSTART+4095)                                     00343000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0276 00344000
*                                      BASE                          */ 00345000
         USING @PSTART+4095,@10                                         00346000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00347000
         L     @11,=A(@PSTART)                                          00348000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00349000
         USING @PSTART,@11                                              00350000
*               END I04;            /*                       @X04SVRQ*/ 00351000
*             END;                  /* END JOURNAL EXIT              */ 00352000
*           IF PLHSRCSG^=ZERO&      /* SPANNED RECORD        @X04SVES*/ 00353000
*               PLHSRBSG=ON THEN    /* & INCONSISTANT SEGMENTS     0281 00354000
*                                                            @X04SVES*/ 00355000
@RF00266 LH    @05,PLHSRCSG(,RPLH)                                 0281 00356000
         LTR   @05,@05                                             0281 00357000
         BZ    @RF00281                                            0281 00358000
         TM    PLHSRBSG(RPLH),B'10000000'                          0281 00359000
         BNO   @RF00281                                            0281 00360000
*             DO;                   /* YES                   @X04SVES*/ 00361000
*               RPLERREG='08'X;     /* SET LOG ERR           @X04SVES*/ 00362000
         MVI   RPLERREG(RRPL),X'08'                                0283 00363000
*               RPLERRCD=RPLSRISG;  /* SET CODE              @X04SVES*/ 00364000
         MVI   RPLERRCD(RRPL),X'8C'                                0284 00365000
*             END;                  /*                       @X04SVES*/ 00366000
*         END;                      /* END OF POST DATA RETR         */ 00367000
@RF00281 DS    0H                                                  0287 00368000
*       CALL MODEXIT;               /* RETURN                @X04SVRQ*/ 00369000
@RC00234 BAL   @14,MODEXIT                                         0287 00370000
*     END;                          /* END OF GET.           @X04SVRQ*/ 00371000
*                                                                  0289 00372000
*   /*****************************************************************/ 00373000
*   /*                                                               */ 00374000
*   /* POINT REQUEST PROCESSING                                      */ 00375000
*   /*                                                               */ 00376000
*   /*****************************************************************/ 00377000
*                                                                  0289 00378000
*   IF RPLREQ=RPLPOINT              /*                               */ 00379000
*     THEN                          /* POINT REQUEST                 */ 00380000
@RF00167 CLI   RPLREQ(RRPL),3                                      0289 00381000
         BNE   @RF00289                                            0289 00382000
*     DO;                           /*                               */ 00383000
*       RPARM1=RPLARG;              /* POINT TO SEARCH ARG CALL    0291 00384000
*                                      DIRECT RECORD LOC             */ 00385000
         L     RPARM1,RPLARG(,RRPL)                                0291 00386000
*I05:                                                              0292 00387000
*       DO;                         /* IDACALL(IDA019RA)             */ 00388000
I05      DS    0H                                                  0293 00389000
*         CALL IDA019RA;            /* EXIT TO IDA019RA              */ 00390000
         L     @15,@CV01000                                        0293 00391000
         BALR  @14,@15                                             0293 00392000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00393000
         BALR @11,0                                                     00394000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00395000
         USING *,@11                                                    00396000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 00397000
         USING *+4095,@10                                               00398000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 00399000
         LA    @10,4095(@11)                                            00400000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 00401000
         L     @10,=A(@PSTART+4095)                                     00402000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 00403000
         USING @PSTART+4095,@10                                         00404000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00405000
         L     @11,=A(@PSTART)                                          00406000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00407000
         USING @PSTART,@11                                              00408000
*       END I05;                    /* MACRO                 @X04SVRQ*/ 00409000
*       IF RPLERREG='00'X           /* IF NO ERROR,                  */ 00410000
*         THEN                      /* SET DONT ADVANCE PLH          */ 00411000
         CLI   RPLERREG(RRPL),0                                    0303 00412000
         BNE   @RF00303                                            0303 00413000
*         DO;                                                      0304 00414000
*           PLHNOADV=ON;            /* FLAG.                         */ 00415000
         OI    PLHNOADV(RPLH),B'00001000'                          0305 00416000
*           PLHUPD=OFF;             /* RESET GET UPD FLAG    @X04SVRQ*/ 00417000
         NI    PLHUPD(RPLH),B'01111111'                            0306 00418000
*           RPLDDDD=BUFCDDDD+       /* PUT RECORD RBA INTO           */ 00419000
*               (PLHRECP-BUFCBAD);  /* RPL                           */ 00420000
         L     @05,PLHDBUFC(,RPLH)                                 0307 00421000
         L     @00,PLHRECP(,RPLH)                                  0307 00422000
         SL    @00,BUFCBAD(,@05)                                   0307 00423000
         AL    @00,BUFCDDDD(,@05)                                  0307 00424000
         ST    @00,RPLDDDD(,RRPL)                                  0307 00425000
*           PLHDDDD=RPLDDDD;        /* SAVE RBA IN PLH               */ 00426000
         ST    @00,PLHDDDD(,RPLH)                                  0308 00427000
*           PLHRCODE=RPLREQ;        /* SAVE REQUEST CODE             */ 00428000
         IC    @05,RPLREQ(,RRPL)                                   0309 00429000
         STC   @05,PLHRCODE(,RPLH)                                 0309 00430000
*         END;                      /* END OF NO ERROR               */ 00431000
*       CALL EXIT;                  /* RETURN. DONT FREE SEQ SET BFR    00432000
*                                      FOR DB/DC.            @X04SVRQ*/ 00433000
@RF00303 BAL   @14,EXIT                                            0311 00434000
*     END;                          /* END OF POINT                  */ 00435000
*                                                                  0313 00436000
*   /*****************************************************************/ 00437000
*   /*                                                               */ 00438000
*   /* DETERMINE IF OUTPUT IS ALLOWED.                               */ 00439000
*   /*                                                               */ 00440000
*   /*****************************************************************/ 00441000
*                                                                  0313 00442000
*   IF AMBLWRIT=OFF                 /* DOES AMBL ALLOW WRITE @X04SVRQ*/ 00443000
*     THEN                          /* NO.                           */ 00444000
@RF00289 L     @05,RPLDACB(,RRPL)                                  0313 00445000
         L     @05,ACBAMBL(,@05)                                   0313 00446000
         TM    AMBLWRIT(@05),B'00100000'                           0313 00447000
         BNZ   @RF00313                                            0313 00448000
*     DO;                           /* SET ERROR CODES               */ 00449000
*       RPLERREG='08'X;             /* LOFICAL ERROR                 */ 00450000
         MVI   RPLERREG(RRPL),X'08'                                0315 00451000
*       RPLERRCD=RPLINACC;          /* PASSWORD VIOLATION            */ 00452000
         MVI   RPLERRCD(RRPL),X'44'                                0316 00453000
*       CALL MODEXIT;               /* RETURN                @X04SVRQ*/ 00454000
         BAL   @14,MODEXIT                                         0317 00455000
*     END;                          /* END OF ERROR CODE SET         */ 00456000
*                                                                  0319 00457000
*   /*****************************************************************/ 00458000
*   /*                                                               */ 00459000
*   /* PUT UPDATE, ERASE PROCESSING                                  */ 00460000
*   /*                                                               */ 00461000
*   /*****************************************************************/ 00462000
*                                                                  0319 00463000
*   IF RPLLOC=ON&RPLREQ=RPLPUT THEN /* PUT LOCATE                    */ 00464000
@RF00313 TM    RPLLOC(RRPL),B'10000000'                            0319 00465000
         BNO   @RF00319                                            0319 00466000
         CLI   RPLREQ(RRPL),1                                      0319 00467000
         BNE   @RF00319                                            0319 00468000
*     DO;                           /* YES.                          */ 00469000
*       RPLERREG='08'X;             /* ERROR                         */ 00470000
         MVI   RPLERREG(RRPL),X'08'                                0321 00471000
*       RPLERRCD=RPLINLOC;          /*                               */ 00472000
         MVI   RPLERRCD(RRPL),X'54'                                0322 00473000
*       CALL MODEXIT;               /* RETURN                @X04SVRQ*/ 00474000
         BAL   @14,MODEXIT                                         0323 00475000
*     END;                          /* END LOCATE ERROR              */ 00476000
*   IF RPLREQ=RPLPUT&               /* PUT                           */ 00477000
*       RPLUPD=ON                   /* UPDATE                        */ 00478000
*       |RPLREQ=RPLERASE            /* OR ERASE                      */ 00479000
*     THEN                          /* YES.                          */ 00480000
@RF00319 CLI   RPLREQ(RRPL),1                                      0325 00481000
         BNE   @GL00011                                            0325 00482000
         TM    RPLUPD(RRPL),B'00000010'                            0325 00483000
         BO    @RT00325                                            0325 00484000
@GL00011 CLI   RPLREQ(RRPL),5                                      0325 00485000
         BNE   @RF00325                                            0325 00486000
@RT00325 DS    0H                                                  0326 00487000
*     DO;                           /*                               */ 00488000
*       IF PLHUPD=ON                /* GET UPDATE ISSUED             */ 00489000
*         THEN                      /* YES.                          */ 00490000
         TM    PLHUPD(RPLH),B'10000000'                            0327 00491000
         BNO   @RF00327                                            0327 00492000
*         DO;                       /*                               */ 00493000
*           IF AMBUPX=ON THEN       /* AIX UPGRADE.          @X04SVMR*/ 00494000
         TM    AMBUPX(RAMB),B'00000010'                            0329 00495000
         BNO   @RF00329                                            0329 00496000
*             DO;                   /*                       @X04SVMR*/ 00497000
*I06:                                                              0331 00498000
*               DO;                 /* IDACALL(IDA019RU)             */ 00499000
I06      DS    0H                                                  0332 00500000
*                 CALL IDA019RU;    /* EXIT TO IDA019RU              */ 00501000
         L     @15,@CV01005                                        0332 00502000
         BALR  @14,@15                                             0332 00503000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00504000
         BALR @11,0                                                     00505000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00506000
         USING *,@11                                                    00507000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 00508000
         USING *+4095,@10                                               00509000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 00510000
         LA    @10,4095(@11)                                            00511000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0337 00512000
*                                      BASE                          */ 00513000
         L     @10,=A(@PSTART+4095)                                     00514000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0338 00515000
*                                      BASE                          */ 00516000
         USING @PSTART+4095,@10                                         00517000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00518000
         L     @11,=A(@PSTART)                                          00519000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00520000
         USING @PSTART,@11                                              00521000
*               END I06;            /* CALL AIX UPGRADE.     @X04SVMR*/ 00522000
*               IF RPLERREG^='00'X THEN/* ERROR.             @X04SVMR*/ 00523000
         CLI   RPLERREG(RRPL),0                                    0342 00524000
         BE    @RF00342                                            0342 00525000
*                 CALL MODEXIT;     /* RETURN.               @X04SVMR*/ 00526000
         BAL   @14,MODEXIT                                         0343 00527000
*             END;                  /*                       @X04SVMR   00528000
*                                      CALL DATA MODIFY              */ 00529000
@RF00342 DS    0H                                                  0345 00530000
*I07:                                                              0345 00531000
*           DO;                     /* IDACALL(IDA019RL)             */ 00532000
@RF00329 DS    0H                                                  0345 00533000
I07      DS    0H                                                  0346 00534000
*             CALL IDA019RL;        /* EXIT TO IDA019RL              */ 00535000
         L     @15,@CV01003                                        0346 00536000
         BALR  @14,@15                                             0346 00537000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00538000
         BALR @11,0                                                     00539000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00540000
         USING *,@11                                                    00541000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 00542000
         USING *+4095,@10                                               00543000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 00544000
         LA    @10,4095(@11)                                            00545000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 00546000
         L     @10,=A(@PSTART+4095)                                     00547000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 00548000
         USING @PSTART+4095,@10                                         00549000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00550000
         L     @11,=A(@PSTART)                                          00551000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00552000
         USING @PSTART,@11                                              00553000
*           END I07;                /* MACRO                 @X04SVRQ*/ 00554000
*           IF RPLERREG='00'X       /* ERROR                         */ 00555000
*             THEN                  /* NO.                           */ 00556000
         CLI   RPLERREG(RRPL),0                                    0356 00557000
         BNE   @RF00356                                            0356 00558000
*             DO;                   /* INCREMENT STATISTICS          */ 00559000
*               PLHUPD=OFF;         /* RESET GET UPD INDICATOR     0358 00560000
*                                                            @XA19277*/ 00561000
         NI    PLHUPD(RPLH),B'01111111'                            0358 00562000
*               PLHDDDD=RPLDDDD;    /* SAVE RBA IN PLH               */ 00563000
         L     @05,RPLDDDD(,RRPL)                                  0359 00564000
         ST    @05,PLHDDDD(,RPLH)                                  0359 00565000
*               PLHRCODE=RPLREQ;    /* SAVE REQUEST CODE             */ 00566000
         IC    @05,RPLREQ(,RRPL)                                   0360 00567000
         STC   @05,PLHRCODE(,RPLH)                                 0360 00568000
*               IF RPLDIR=ON        /* DIRECT REQUEST        @XA19404*/ 00569000
*                   &RPLNSP=OFF     /* AND NOT NOTE          @XA19404*/ 00570000
*                 THEN              /* POSITION              @XA19404*/ 00571000
         TM    RPLDIR(RRPL),B'01000000'                            0361 00572000
         BNO   @RF00361                                            0361 00573000
         TM    RPLNSP(RRPL),B'00000001'                            0361 00574000
         BNZ   @RF00361                                            0361 00575000
*                 CALL RLSEBUFS;    /* RELEASE PLH BUFFERS           */ 00576000
         BAL   @14,RLSEBUFS                                        0362 00577000
*               IF RPLREQ=RPLERASE  /* ERASE REQUEST                 */ 00578000
*                 THEN              /* YES.                          */ 00579000
@RF00361 CLI   RPLREQ(RRPL),5                                      0363 00580000
         BNE   @RF00363                                            0363 00581000
*                 DO;               /*                               */ 00582000
*                   AMDDELR=AMDDELR+ONE;/* ADD 1 TO DELETE COUNT     */ 00583000
         L     @05,AMBDSB(,RAMB)                                   0365 00584000
         LA    @00,1                                               0365 00585000
         AL    @00,AMDDELR(,@05)                                   0365 00586000
         ST    @00,AMDDELR(,@05)                                   0365 00587000
*                   AMDNLR=AMDNLR-ONE;/* SUB 1 FROM RECORD CNT       */ 00588000
         L     @00,AMDNLR(,@05)                                    0366 00589000
         BCTR  @00,0                                               0366 00590000
         ST    @00,AMDNLR(,@05)                                    0366 00591000
*                   PLHJCODE=PLHJERS;/* ERASE JRN CODE               */ 00592000
         MVI   PLHJCODE(RPLH),B'00001000'                          0367 00593000
*                 END;              /*                               */ 00594000
*               ELSE                /* UPDATE REQUEST                */ 00595000
*                 DO;               /*                               */ 00596000
         B     @RC00363                                            0369 00597000
@RF00363 DS    0H                                                  0370 00598000
*                   AMDUPR=AMDUPR+ONE;/* ADD 1 TO UPDATE COUNT       */ 00599000
         L     @05,AMBDSB(,RAMB)                                   0370 00600000
         LA    @00,1                                               0370 00601000
         AL    @00,AMDUPR(,@05)                                    0370 00602000
         ST    @00,AMDUPR(,@05)                                    0370 00603000
*                   PLHJCODE=PLHJPUT;/* PUT JRN CODE                 */ 00604000
         MVI   PLHJCODE(RPLH),B'00000100'                          0371 00605000
*                 END;              /* END UPDATE STATS.             */ 00606000
*               IF AMBJRN=ON THEN   /* JOURNAL EXIT                  */ 00607000
@RC00363 TM    AMBJRN(RAMB),B'00000010'                            0373 00608000
         BNO   @RF00373                                            0373 00609000
*I08:                                                              0374 00610000
*                 DO;               /* IDACALL(IDATJXIT)             */ 00611000
I08      DS    0H                                                  0375 00612000
*                   CALL IDATJXIT;  /* EXIT TO IDATJXIT              */ 00613000
         L     @15,@CV00998                                        0375 00614000
         BALR  @14,@15                                             0375 00615000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 00616000
         BALR @11,0                                                     00617000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 00618000
         USING *,@11                                                    00619000
*                   GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE   */ 00620000
         USING *+4095,@10                                               00621000
*                   GEN(LA    @10,4095(@11));/* LOAD SECOND BASE     */ 00622000
         LA    @10,4095(@11)                                            00623000
*                   GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND    00624000
*                                      BASE                          */ 00625000
         L     @10,=A(@PSTART+4095)                                     00626000
*                   GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND     00627000
*                                      BASE                          */ 00628000
         USING @PSTART+4095,@10                                         00629000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 00630000
         L     @11,=A(@PSTART)                                          00631000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 00632000
         USING @PSTART,@11                                              00633000
*                 END I08;          /*                       @X04SVRQ*/ 00634000
*             END;                  /* END OF INCREMENT STATS        */ 00635000
*           ELSE                    /* HERE IF ERROR         @X04SVMR*/ 00636000
*             IF AMBUPX=ON THEN     /* AIX UPGRADE.          @X04SVMR*/ 00637000
         B     @RC00356                                            0386 00638000
@RF00356 TM    AMBUPX(RAMB),B'00000010'                            0386 00639000
         BNO   @RF00386                                            0386 00640000
*I09:                                                              0387 00641000
*               DO;                 /* IDACALL(IDA019RU)             */ 00642000
I09      DS    0H                                                  0388 00643000
*                 CALL IDA019RU;    /* EXIT TO IDA019RU              */ 00644000
         L     @15,@CV01005                                        0388 00645000
         BALR  @14,@15                                             0388 00646000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00647000
         BALR @11,0                                                     00648000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00649000
         USING *,@11                                                    00650000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 00651000
         USING *+4095,@10                                               00652000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 00653000
         LA    @10,4095(@11)                                            00654000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0393 00655000
*                                      BASE                          */ 00656000
         L     @10,=A(@PSTART+4095)                                     00657000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0394 00658000
*                                      BASE                          */ 00659000
         USING @PSTART+4095,@10                                         00660000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00661000
         L     @11,=A(@PSTART)                                          00662000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00663000
         USING @PSTART,@11                                              00664000
*               END I09;            /* BACKOUT UPGRADE.      @X04SVMR*/ 00665000
*         END;                      /* END OF MODIFY                 */ 00666000
*       ELSE                        /* GET UPD NOT ISSUED            */ 00667000
*         DO;                       /* SET ERROR CODES               */ 00668000
         B     @RC00327                                            0399 00669000
@RF00327 DS    0H                                                  0400 00670000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 00671000
         MVI   RPLERREG(RRPL),X'08'                                0400 00672000
*           RPLERRCD=RPLINUPD;      /* NO GET FOR UPDATE             */ 00673000
         MVI   RPLERRCD(RRPL),X'5C'                                0401 00674000
*         END;                      /*                               */ 00675000
*       CALL MODEXIT;               /* RETURN                @X04SVRQ*/ 00676000
@RC00327 BAL   @14,MODEXIT                                         0403 00677000
*     END;                          /* END OF UPDATE/ERASE           */ 00678000
*                                                                  0405 00679000
*   /*****************************************************************/ 00680000
*   /*                                                               */ 00681000
*   /* PUT ADD PROCESSING                                            */ 00682000
*   /*                                                               */ 00683000
*   /*****************************************************************/ 00684000
*                                                                  0405 00685000
*   IF RPLREQ=RPLPUT&RPLBWD^=ON     /* SEE IF PUT            @X04SVES*/ 00686000
*     THEN                          /* YES. --ADD--                  */ 00687000
@RF00325 CLI   RPLREQ(RRPL),1                                      0405 00688000
         BNE   @RF00405                                            0405 00689000
         TM    RPLBWD(RRPL),B'00010000'                            0405 00690000
         BO    @RF00405                                            0405 00691000
*     DO;                           /* INSURE VALID LENGTH           */ 00692000
*       IF AMDDST='1'B THEN         /* KEYED DATA SET                */ 00693000
         L     @05,AMBDSB(,RAMB)                                   0407 00694000
         TM    AMDDST(@05),B'10000000'                             0407 00695000
         BNO   @RF00407                                            0407 00696000
*         RPARM1=AMDRKP+AMDKEYLN;   /* INCLUDE KEY                   */ 00697000
         LH    RPARM1,AMDRKP(,@05)                                 0408 00698000
         AH    RPARM1,AMDKEYLN(,@05)                               0408 00699000
*       ELSE                        /* EVENT SEQ.                    */ 00700000
*         DO;                       /*                               */ 00701000
         B     @RC00407                                            0409 00702000
@RF00407 DS    0H                                                  0410 00703000
*           RPARM1=ONE;             /* NON-ZERO                      */ 00704000
         LA    RPARM1,1                                            0410 00705000
*           PLHADDTE=ON;            /* SET ADD TO END FLAG           */ 00706000
         OI    PLHADDTE(RPLH),B'00010000'                          0411 00707000
*         END;                      /* END EVENT SEQ. SET UP         */ 00708000
*       IF RPLRLEN>=RPARM1&         /* BIG ENOUGH, BUT               */ 00709000
*           RPLRLEN^>AMDLRECL       /* NOT TOO BIG                   */ 00710000
*         THEN                      /* NO.                           */ 00711000
@RC00407 L     @05,RPLRLEN(,RRPL)                                  0413 00712000
         CR    @05,RPARM1                                          0413 00713000
         BL    @RF00413                                            0413 00714000
         L     @15,AMBDSB(,RAMB)                                   0413 00715000
         C     @05,AMDLRECL(,@15)                                  0413 00716000
         BH    @RF00413                                            0413 00717000
*         DO;                       /*                               */ 00718000
*           IF RPLSEQ=ON|AMBCREAT=ON/* SEQUENTIAL REQUEST            */ 00719000
*             THEN                  /* OR CREATE                     */ 00720000
         TM    RPLSEQ(RRPL),B'00100000'                            0415 00721000
         BO    @RT00415                                            0415 00722000
         TM    AMBCREAT(RAMB),B'10000000'                          0415 00723000
         BNO   @RF00415                                            0415 00724000
@RT00415 DS    0H                                                  0416 00725000
*             CALL SQICHECK;        /* CHECK CURRENT STATUS          */ 00726000
         BAL   @14,SQICHECK                                        0416 00727000
*           ELSE                    /* DIR OR SKP, NON-CREATE        */ 00728000
*             DO;                   /* DIRECT INSERT REQUEST         */ 00729000
         B     @RC00415                                            0417 00730000
@RF00415 DS    0H                                                  0418 00731000
*               IF RPLKEY=OFF       /* KEYED REQUEST                 */ 00732000
*                 THEN              /* NO.                           */ 00733000
         TM    RPLKEY(RRPL),B'10000000'                            0418 00734000
         BNZ   @RF00418                                            0418 00735000
*                 CALL GETINCI;     /* GET EOD CI.                   */ 00736000
         BAL   @14,GETINCI                                         0419 00737000
*               ELSE                /* CALL DIR. RECORD LOCATE       */ 00738000
*                 DO;               /* YES.                          */ 00739000
         B     @RC00418                                            0420 00740000
@RF00418 DS    0H                                                  0421 00741000
*                   RPARM1=RPLAREA+AMDRKP;/* POINT TO SEARCH ARG     */ 00742000
         L     @05,AMBDSB(,RAMB)                                   0421 00743000
         LH    RPARM1,AMDRKP(,@05)                                 0421 00744000
         AL    RPARM1,RPLAREA(,RRPL)                               0421 00745000
*I10:                                                              0422 00746000
*                   DO;             /* IDACALL(IDA019RA)             */ 00747000
I10      DS    0H                                                  0423 00748000
*                     CALL IDA019RA;/* EXIT TO IDA019RA              */ 00749000
         L     @15,@CV01000                                        0423 00750000
         BALR  @14,@15                                             0423 00751000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 00752000
         BALR @11,0                                                     00753000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 00754000
         USING *,@11                                                    00755000
*                     GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE */ 00756000
         USING *+4095,@10                                               00757000
*                     GEN(LA    @10,4095(@11));/* LOAD SECOND BASE   */ 00758000
         LA    @10,4095(@11)                                            00759000
*                     GEN(L     @10,=A(@PSTART+4095));/* RELOAD    0428 00760000
*                                      SECOND BASE                   */ 00761000
         L     @10,=A(@PSTART+4095)                                     00762000
*                     GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND   00763000
*                                      BASE                          */ 00764000
         USING @PSTART+4095,@10                                         00765000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 00766000
         L     @11,=A(@PSTART)                                          00767000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 00768000
         USING @PSTART,@11                                              00769000
*                   END I10;        /*                       @X04SVRQ*/ 00770000
*                 END;              /* END OF KEYED REQUEST          */ 00771000
*             END;                  /* END OF DIRECT INS. SETUP      */ 00772000
@RC00418 DS    0H                                                  0435 00773000
*           IF RPLERREG='00'X       /* ERROR                         */ 00774000
*             THEN                  /* NO.                           */ 00775000
@RC00415 CLI   RPLERREG(RRPL),0                                    0435 00776000
         BNE   @RF00435                                            0435 00777000
*             DO;                   /*                               */ 00778000
*               IF AMDDST='1'B THEN /* IF KSDS               @X04SVMR*/ 00779000
         L     @05,AMBDSB(,RAMB)                                   0437 00780000
         TM    AMDDST(@05),B'10000000'                             0437 00781000
         BNO   @RF00437                                            0437 00782000
*                 DO;               /*                       @X04SVMR*/ 00783000
*                   IF AMBUPX=ON THEN/* AIX UPGRADE          @X04SVMR*/ 00784000
         TM    AMBUPX(RAMB),B'00000010'                            0439 00785000
         BNO   @RF00439                                            0439 00786000
*                     DO;           /*                       @X04SVMR*/ 00787000
*I11:                                                              0441 00788000
*                       DO;         /* IDACALL(IDA019RU)             */ 00789000
I11      DS    0H                                                  0442 00790000
*                         CALL IDA019RU;/* EXIT TO IDA019RU          */ 00791000
         L     @15,@CV01005                                        0442 00792000
         BALR  @14,@15                                             0442 00793000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00794000
         BALR @11,0                                                     00795000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00796000
         USING *,@11                                                    00797000
*                         GEN(USING *+4095,@10);/* ESTABLISH SECOND     00798000
*                                      BASE                          */ 00799000
         USING *+4095,@10                                               00800000
*                         GEN(LA    @10,4095(@11));/* LOAD SECOND  0446 00801000
*                                      BASE                          */ 00802000
         LA    @10,4095(@11)                                            00803000
*                         GEN(L     @10,=A(@PSTART+4095));/* RELOAD     00804000
*                                      SECOND BASE                   */ 00805000
         L     @10,=A(@PSTART+4095)                                     00806000
*                         GEN(USING @PSTART+4095,@10);/* ESTABLISH 0448 00807000
*                                      SECOND BASE                   */ 00808000
         USING @PSTART+4095,@10                                         00809000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00810000
         L     @11,=A(@PSTART)                                          00811000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0450 00812000
*                                      ADDRESSING                    */ 00813000
         USING @PSTART,@11                                              00814000
*                       END I11;    /* CALL AIX UPGRADE.     @X04SVMR*/ 00815000
*                       IF RPLERREG^='00'X THEN/* ERROR.     @X04SVMR*/ 00816000
         CLI   RPLERREG(RRPL),0                                    0452 00817000
         BE    @RF00452                                            0452 00818000
*                         DO;       /*                       @X04SVMR*/ 00819000
*                           PLHRSTRT=ON;/* POSITION NO GOOD  @X04SVMR*/ 00820000
         OI    PLHRSTRT(RPLH),B'10000000'                          0454 00821000
*                           CALL MODEXIT;/* RETURN.          @X04SVMR*/ 00822000
         BAL   @14,MODEXIT                                         0455 00823000
*                         END;      /* END, AIX ERROR        @X04SVMR*/ 00824000
*                     END;          /*                       @X04SVMR*/ 00825000
@RF00452 DS    0H                                                  0458 00826000
*                 END;              /* END OF KSDS CODE      @X04SVMR   00827000
*                                      CALL DATA INSERT              */ 00828000
@RF00439 DS    0H                                                  0459 00829000
*I12:                                                              0459 00830000
*               DO;                 /* IDACALL(IDA019RM)             */ 00831000
@RF00437 DS    0H                                                  0459 00832000
I12      DS    0H                                                  0460 00833000
*                 CALL IDA019RM;    /* EXIT TO IDA019RM              */ 00834000
         L     @15,@CV01004                                        0460 00835000
         BALR  @14,@15                                             0460 00836000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00837000
         BALR @11,0                                                     00838000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00839000
         USING *,@11                                                    00840000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 00841000
         USING *+4095,@10                                               00842000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 00843000
         LA    @10,4095(@11)                                            00844000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0465 00845000
*                                      BASE                          */ 00846000
         L     @10,=A(@PSTART+4095)                                     00847000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0466 00848000
*                                      BASE                          */ 00849000
         USING @PSTART+4095,@10                                         00850000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00851000
         L     @11,=A(@PSTART)                                          00852000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00853000
         USING @PSTART,@11                                              00854000
*               END I12;            /* MACRO                 @X04SVRQ*/ 00855000
*               IF AMDDST^='1'B THEN/* ESDS.                 @X04SVRQ*/ 00856000
         L     @05,AMBDSB(,RAMB)                                   0470 00857000
         TM    AMDDST(@05),B'10000000'                             0470 00858000
         BO    @RF00470                                            0470 00859000
*                 DIWATV=ZERO;      /* UNLOCK DIWA.          @X04SVRQ*/ 00860000
         L     @05,AMBIWA(,RAMB)                                   0471 00861000
         MVI   DIWATV(@05),X'00'                                   0471 00862000
*               IF RPLERREG='00'X   /* ERROR                         */ 00863000
*                 THEN              /* NO.                           */ 00864000
@RF00470 CLI   RPLERREG(RRPL),0                                    0472 00865000
         BNE   @RF00472                                            0472 00866000
*                 DO;               /*                               */ 00867000
*                   PLHUPD=OFF;     /* RESET GET UPD FLAG    @X04SVRQ*/ 00868000
         NI    PLHUPD(RPLH),B'01111111'                            0474 00869000
*                   AMDNLR=AMDNLR+ONE;/* ADD 1 TO NO. OF RECORDS     */ 00870000
         L     @05,AMBDSB(,RAMB)                                   0475 00871000
         LA    @15,1                                               0475 00872000
         L     @00,AMDNLR(,@05)                                    0475 00873000
         ALR   @00,@15                                             0475 00874000
         ST    @00,AMDNLR(,@05)                                    0475 00875000
*                   PLHRCODE=RPLREQ;/* SET CURRENT REQ       @OX04283   00876000
*                                      TYPE IN PLH           @OX04283*/ 00877000
         IC    @00,RPLREQ(,RRPL)                                   0476 00878000
         STC   @00,PLHRCODE(,RPLH)                                 0476 00879000
*                   IF PLHADDTE=OFF THEN/* IF NOT ADD-TO-END         */ 00880000
         TM    PLHADDTE(RPLH),B'00010000'                          0477 00881000
         BNZ   @RF00477                                            0477 00882000
*                     AMDIREC=AMDIREC+ONE;/* ADD 1 TO INSERTS        */ 00883000
         AL    @15,AMDIREC(,@05)                                   0478 00884000
         ST    @15,AMDIREC(,@05)                                   0478 00885000
*                   IF^(RPLDIR=ON&  /* NOT DIRECT            @ZA07537*/ 00886000
*                       RPLNSP=OFF)&/* AND NSP               @ZA07537*/ 00887000
*                       AMDDST='1'B THEN/* KSDS              @ZA07537*/ 00888000
@RF00477 TM    RPLDIR(RRPL),B'01000000'                            0479 00889000
         BNO   @GL00017                                            0479 00890000
         TM    RPLNSP(RRPL),B'00000001'                            0479 00891000
         BZ    @RF00479                                            0479 00892000
@GL00017 L     @05,AMBDSB(,RAMB)                                   0479 00893000
         TM    AMDDST(@05),B'10000000'                             0479 00894000
         BNO   @RF00479                                            0479 00895000
*                     CALL MOVEKEY; /* MOVE KEY IN PLH       @ZA07537*/ 00896000
         BAL   @14,MOVEKEY                                         0480 00897000
*                   IF AMBJRN=ON THEN/* JOURNAL EXIT                 */ 00898000
@RF00479 TM    AMBJRN(RAMB),B'00000010'                            0481 00899000
         BNO   @RF00481                                            0481 00900000
*                     DO;           /* YES.                          */ 00901000
*                       PLHJCODE=PLHJPUT;/* PUT JRN CODE             */ 00902000
         MVI   PLHJCODE(RPLH),B'00000100'                          0483 00903000
*I13:                                                              0484 00904000
*                       DO;         /* IDACALL(IDATJXIT)             */ 00905000
I13      DS    0H                                                  0485 00906000
*                         CALL IDATJXIT;/* EXIT TO IDATJXIT          */ 00907000
         L     @15,@CV00998                                        0485 00908000
         BALR  @14,@15                                             0485 00909000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00910000
         BALR @11,0                                                     00911000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00912000
         USING *,@11                                                    00913000
*                         GEN(USING *+4095,@10);/* ESTABLISH SECOND     00914000
*                                      BASE                          */ 00915000
         USING *+4095,@10                                               00916000
*                         GEN(LA    @10,4095(@11));/* LOAD SECOND  0489 00917000
*                                      BASE                          */ 00918000
         LA    @10,4095(@11)                                            00919000
*                         GEN(L     @10,=A(@PSTART+4095));/* RELOAD     00920000
*                                      SECOND BASE                   */ 00921000
         L     @10,=A(@PSTART+4095)                                     00922000
*                         GEN(USING @PSTART+4095,@10);/* ESTABLISH 0491 00923000
*                                      SECOND BASE                   */ 00924000
         USING @PSTART+4095,@10                                         00925000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00926000
         L     @11,=A(@PSTART)                                          00927000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0493 00928000
*                                      ADDRESSING                    */ 00929000
         USING @PSTART,@11                                              00930000
*                       END I13;    /*                       @X04SVRQ*/ 00931000
*                     END;          /* END JOURNAL EXIT              */ 00932000
*                 END;              /* END OF POST DATA INSERT       */ 00933000
*               ELSE                /* HERE IF ERROR         @X04SVMR*/ 00934000
*                 DO;               /*                       @ZA07544*/ 00935000
         B     @RC00472                                            0497 00936000
@RF00472 DS    0H                                                  0498 00937000
*                   IF RPLERREG='08'X&/* IF LOGICAL          @ZA07544*/ 00938000
*                       (RPLERRCD=RPLEXCL)/* ERROR THEN      @ZA07544*/ 00939000
*                     THEN          /* MAY NOT               @ZA07544*/ 00940000
         CLI   RPLERREG(RRPL),8                                    0498 00941000
         BNE   @RF00498                                            0498 00942000
         CLI   RPLERRCD(RRPL),20                                   0498 00943000
         BNE   @RF00498                                            0498 00944000
*                     PLHINVAL=ON;  /* KNOW POSITION         @ZA07544*/ 00945000
         OI    PLHINVAL(RPLH),B'00000010'                          0499 00946000
*                   IF AMBUPX=ON&   /* AIX UPGRADE           @X04SVMR*/ 00947000
*                       AMDDST='1'B THEN/* AND KSDS          @X04SVMR*/ 00948000
@RF00498 TM    AMBUPX(RAMB),B'00000010'                            0500 00949000
         BNO   @RF00500                                            0500 00950000
         L     @05,AMBDSB(,RAMB)                                   0500 00951000
         TM    AMDDST(@05),B'10000000'                             0500 00952000
         BNO   @RF00500                                            0500 00953000
*I14:                                                              0501 00954000
*                     DO;           /* IDACALL(IDA019RU)             */ 00955000
I14      DS    0H                                                  0502 00956000
*                       CALL IDA019RU;/* EXIT TO IDA019RU            */ 00957000
         L     @15,@CV01005                                        0502 00958000
         BALR  @14,@15                                             0502 00959000
*                       GEN(BALR @11,0);/* LOAD ADDR OF REENTRY      */ 00960000
         BALR @11,0                                                     00961000
*                       GEN(USING *,@11);/* ESTABLISH ADDRESSING     */ 00962000
         USING *,@11                                                    00963000
*                       GEN(USING *+4095,@10);/* ESTABLISH SECOND  0505 00964000
*                                      BASE                          */ 00965000
         USING *+4095,@10                                               00966000
*                       GEN(LA    @10,4095(@11));/* LOAD SECOND BASE */ 00967000
         LA    @10,4095(@11)                                            00968000
*                       GEN(L     @10,=A(@PSTART+4095));/* RELOAD  0507 00969000
*                                      SECOND BASE                   */ 00970000
         L     @10,=A(@PSTART+4095)                                     00971000
*                       GEN(USING @PSTART+4095,@10);/* ESTABLISH   0508 00972000
*                                      SECOND BASE                   */ 00973000
         USING @PSTART+4095,@10                                         00974000
*                       GEN(L     @11,=A(@PSTART));/* RELOAD BASE    */ 00975000
         L     @11,=A(@PSTART)                                          00976000
*                       GEN(USING @PSTART,@11);/* ESTABLISH        0510 00977000
*                                      ADDRESSING                    */ 00978000
         USING @PSTART,@11                                              00979000
*                     END I14;      /* BACKOUT UPGRADE.      @X04SVMR*/ 00980000
*                 END;              /* END INSERT ERR        @ZA07544*/ 00981000
@RF00500 DS    0H                                                  0513 00982000
*             END;                  /* END OF VALID ADD              */ 00983000
@RC00472 DS    0H                                                  0514 00984000
*           IF RPLDIR=ON&           /* IF POSITION           @OZ05215*/ 00985000
*               RPLNSP=OFF THEN     /* NOT NEEDED,           @OZ05215*/ 00986000
@RF00435 TM    RPLDIR(RRPL),B'01000000'                            0514 00987000
         BNO   @RF00514                                            0514 00988000
         TM    RPLNSP(RRPL),B'00000001'                            0514 00989000
         BNZ   @RF00514                                            0514 00990000
*             CALL RLSEBUFS;        /* GET RID OF BFR        @X04SVMR*/ 00991000
         BAL   @14,RLSEBUFS                                        0515 00992000
*         END;                      /*                               */ 00993000
*       ELSE                        /* ERROR                         */ 00994000
*         DO;                       /* REC LEN > AMDSB LRECL         */ 00995000
         B     @RC00413                                            0517 00996000
@RF00413 DS    0H                                                  0518 00997000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 00998000
         MVI   RPLERREG(RRPL),X'08'                                0518 00999000
*           RPLERRCD=RPLINLEN;      /* RECORD TOO LONG               */ 01000000
         MVI   RPLERRCD(RRPL),X'6C'                                0519 01001000
*         END;                      /*                               */ 01002000
*     END;                          /*                               */ 01003000
*   ELSE                            /*                               */ 01004000
*     DO;                           /*                               */ 01005000
         B     @RC00405                                            0522 01006000
@RF00405 DS    0H                                                  0523 01007000
*       RPLERREG='08'X;             /* LOGICAL ERROR                 */ 01008000
         MVI   RPLERREG(RRPL),X'08'                                0523 01009000
*       IF RPLREQ=RPLPUT THEN       /* PUT REQUEST           @X04SVES*/ 01010000
         CLI   RPLREQ(RRPL),1                                      0524 01011000
         BNE   @RF00524                                            0524 01012000
*         RPLERRCD=RPLPUTBK;        /* YES, SET CODE         @X04SVES*/ 01013000
         MVI   RPLERRCD(RRPL),X'CC'                                0525 01014000
*       ELSE                        /*                       @X04SVES*/ 01015000
*         RPLERRCD=RPLINVP;         /* INVALID REQUEST TYPE          */ 01016000
         B     @RC00524                                            0526 01017000
@RF00524 MVI   RPLERRCD(RRPL),X'68'                                0526 01018000
*     END;                          /*                               */ 01019000
@RC00524 DS    0H                                                  0528 01020000
*   CALL MODEXIT;                   /* RETURN                @X04SVRQ*/ 01021000
@RC00405 BAL   @14,MODEXIT                                         0528 01022000
*                                                                  0529 01023000
*   /*****************************************************************/ 01024000
*   /*                                                               */ 01025000
*   /* MOVE KEY ROUTINE ---                                          */ 01026000
*   /*                                                               */ 01027000
*   /*****************************************************************/ 01028000
*                                                                  0529 01029000
*MOVEKEY:                                                          0529 01030000
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);/* THIS ROUTINE MOVES THE KEY     01031000
*                                      FROM THE DATA RECORD RESIDING    01032000
*                                      IN THE AREA LOCATED VIA     0529 01033000
*                                      RPLAREA INTO THE PLH          */ 01034000
         B     @PB00002                                            0529 01035000
MOVEKEY  DS    0H                                                  0530 01036000
*   RESPECIFY                                                      0530 01037000
*    (RWORK1,                                                      0530 01038000
*     RWORK2,                                                      0530 01039000
*     R14) RESTRICTED;                                             0530 01040000
*   RWORK1=AMDKEYLN;                /* PICK UP KEY LENGTH            */ 01041000
         L     @15,AMBDSB(,RAMB)                                   0531 01042000
         LH    RWORK1,AMDKEYLN(,@15)                               0531 01043000
*   IF RPLREQ=RPLGET&               /* GET                           */ 01044000
*       RPLLOC=ON THEN              /* LOCATE REQUEST                */ 01045000
         CLI   RPLREQ(RRPL),0                                      0532 01046000
         BNE   @RF00532                                            0532 01047000
         TM    RPLLOC(RRPL),B'10000000'                            0532 01048000
         BNO   @RF00532                                            0532 01049000
*     RWORK2=PLHRECP+AMDRKP;        /* POINT WITHIN BUFFER           */ 01050000
         LH    RWORK2,AMDRKP(,@15)                                 0533 01051000
         AL    RWORK2,PLHRECP(,RPLH)                               0533 01052000
*   ELSE                            /* NOT GET LOCATE                */ 01053000
*     RWORK2=RPLAREA+AMDRKP;        /* POINT TO KEY IN AREA          */ 01054000
         B     @RC00532                                            0534 01055000
@RF00532 L     @15,AMBDSB(,RAMB)                                   0534 01056000
         LH    RWORK2,AMDRKP(,@15)                                 0534 01057000
         AL    RWORK2,RPLAREA(,RRPL)                               0534 01058000
*   PLHKEY(1:RWORK1)=RWORK2->KEY(1:RWORK1);/* MOVE KEY TO PLH      0535 01059000
*                                                            @X04SVES*/ 01060000
@RC00532 L     @15,PLHKEYPT(,RPLH)                                 0535 01061000
         LR    @07,RWORK1                                          0535 01062000
         BCTR  @07,0                                               0535 01063000
         EX    @07,@SM01187                                        0535 01064000
*   RETURN;                         /* RETURN TO CALLER              */ 01065000
@EL00002 DS    0H                                                  0536 01066000
@EF00002 DS    0H                                                  0536 01067000
@ER00002 BR    @14                                                 0536 01068000
*   RESPECIFY                                                      0537 01069000
*    (RWORK1,                                                      0537 01070000
*     RWORK2,                                                      0537 01071000
*     R14) UNRESTRICTED;                                           0537 01072000
*   END MOVEKEY;                    /* END OF MOVE KEY PROC.         */ 01073000
*                                                                  0539 01074000
*   /*****************************************************************/ 01075000
*   /*                                                               */ 01076000
*   /* ADVANCE PLACEHOLDER TO NEXT RECORD POSITION                   */ 01077000
*   /*                                                               */ 01078000
*   /*****************************************************************/ 01079000
*                                                                  0539 01080000
*ADVPLH:                                                           0539 01081000
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0539 01082000
ADVPLH   DS    0H                                                  0540 01083000
*   IF RPLBWD=ON THEN               /* IS BACKWARD DIRECTION       0540 01084000
*                                      SPECIFIED             @X04SVES*/ 01085000
         TM    RPLBWD(RRPL),B'00010000'                            0540 01086000
         BNO   @RF00540                                            0540 01087000
*     DO;                           /* YES                   @X04SVES*/ 01088000
*       IF PLHBWD=OFF THEN          /* WAS PREVIOUS DIRECTION FORWARD   01089000
*                                                            @X04SVES*/ 01090000
         TM    PLHBWD(RPLH),B'00010000'                            0542 01091000
         BNZ   @RF00542                                            0542 01092000
*         DO;                       /* YES, ERROR            @X04SVES*/ 01093000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR     @X04SVES*/ 01094000
         MVI   RPLERREG(RRPL),X'08'                                0544 01095000
*           RPLERRCD=RPLNOPTR;      /* SET NO POSITIONING    @X04SVES*/ 01096000
         MVI   RPLERRCD(RRPL),X'58'                                0545 01097000
*           RETURN;                 /* RETURN TO CALLER      @X04SVES*/ 01098000
@EL00003 DS    0H                                                  0546 01099000
@EF00003 DS    0H                                                  0546 01100000
@ER00003 BR    @14                                                 0546 01101000
*         END;                      /*                       @X04SVES*/ 01102000
*       GEN(IDASVR14);              /* SAVE RETURN ADDRESS   @X04SVES*/ 01103000
@RF00542 DS    0H                                                  0548 01104000
         IDASVR14                                                       01105000
*       RESPECIFY                                                  0549 01106000
*         R14 UNRSTD;               /*                       @X04SVES*/ 01107000
*I15:                                                              0550 01108000
*       DO;                         /* IDACALL(IDAADVPH)             */ 01109000
I15      DS    0H                                                  0551 01110000
*         CALL IDAADVPH;            /* EXIT TO IDAADVPH              */ 01111000
         L     @15,@CV00990                                        0551 01112000
         BALR  @14,@15                                             0551 01113000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01114000
         BALR @11,0                                                     01115000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01116000
         USING *,@11                                                    01117000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01118000
         USING *+4095,@10                                               01119000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01120000
         LA    @10,4095(@11)                                            01121000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01122000
         L     @10,=A(@PSTART+4095)                                     01123000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01124000
         USING @PSTART+4095,@10                                         01125000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01126000
         L     @11,=A(@PSTART)                                          01127000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01128000
         USING @PSTART,@11                                              01129000
*       END I15;                    /* ADVANCE PLH           @X04SVES*/ 01130000
*       CALL EXIT;                  /* RETURN                @X04SVES*/ 01131000
         BAL   @14,EXIT                                            0561 01132000
*     END;                          /* END OF BCKWARD        @X04SVES*/ 01133000
*   ELSE                            /* FORWARD               @X04SVES*/ 01134000
*     DO;                           /*                       @X04SVES*/ 01135000
         B     @RC00540                                            0563 01136000
@RF00540 DS    0H                                                  0564 01137000
*       RESPECIFY                                                  0564 01138000
*         R14 RSTD;                 /*                               */ 01139000
*       IF PLHBWD=ON THEN           /* WAS PREVIOUS DIRECTION      0565 01140000
*                                      BACKWARD              @X04SVES*/ 01141000
         TM    PLHBWD(RPLH),B'00010000'                            0565 01142000
         BNO   @RF00565                                            0565 01143000
*         DO;                       /* YES, ERROR            @X04SVES*/ 01144000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR     @X04SVES*/ 01145000
         MVI   RPLERREG(RRPL),X'08'                                0567 01146000
*           RPLERRCD=RPLNOPTR;      /* SET NO POSITIONING    @X04SVES*/ 01147000
         MVI   RPLERRCD(RRPL),X'58'                                0568 01148000
*           RETURN;                 /* RETURN TO CALLER      @X04SVES*/ 01149000
         B     @EL00003                                            0569 01150000
*         END;                      /*                       @X04SVES*/ 01151000
*     END;                          /*                       @X04SVES*/ 01152000
@RF00565 DS    0H                                                  0572 01153000
*   IF PLHSKPER=OFF                 /* READ SKIP FLAG OFF            */ 01154000
*     THEN                          /* YES.                          */ 01155000
@RC00540 TM    PLHSKPER(RPLH),B'00100000'                          0572 01156000
         BNZ   @RF00572                                            0572 01157000
*     DO;                           /*                               */ 01158000
*       PLHRECP=PLHRECP+PLHLRECL;   /* ADVANCE RECORD POINTER        */ 01159000
         L     @15,PLHRECP(,RPLH)                                  0574 01160000
         AL    @15,PLHLRECL(,RPLH)                                 0574 01161000
         ST    @15,PLHRECP(,RPLH)                                  0574 01162000
*       IF PLHRECP<PLHFSP           /* END OF BLOCK                  */ 01163000
*         THEN                      /* NO.                           */ 01164000
         C     @15,PLHFSP(,RPLH)                                   0575 01165000
         BNL   @RF00575                                            0575 01166000
*         DO;                       /*                               */ 01167000
*           IF PLHRDFC>ONE          /* END OF RECORD GROUP           */ 01168000
*             THEN                  /* NO.                           */ 01169000
         LH    @15,PLHRDFC(,RPLH)                                  0577 01170000
         C     @15,@CF00054                                        0577 01171000
         BNH   @RF00577                                            0577 01172000
*             DO;                   /* DECREMENT COUNT OF            */ 01173000
*               PLHRDFC=PLHRDFC-ONE;/* REMAINING RECORDS             */ 01174000
         BCTR  @15,0                                               0579 01175000
         STH   @15,PLHRDFC(,RPLH)                                  0579 01176000
*               RETURN;             /* RETURN TO CALLER              */ 01177000
         B     @EL00003                                            0580 01178000
*             END;                  /* END OF INNER GROUP ADV        */ 01179000
*           RESPECIFY                                              0582 01180000
*             RWORK2 RSTD;          /*                       @X04SVES*/ 01181000
@RF00577 DS    0H                                                  0583 01182000
*           RWORK2=PLHRDFP;         /* PICK UP RDF POINTER           */ 01183000
         L     RWORK2,PLHRDFP(,RPLH)                               0583 01184000
*           IF PLHRDFC=ONE          /* MOVE TO NEXT RDF              */ 01185000
*             THEN                  /* YES.                          */ 01186000
         CLC   PLHRDFC(2,RPLH),@CH00054                            0584 01187000
         BNE   @RF00584                                            0584 01188000
*             RWORK2=RWORK2-LENGTH(IDARDF);/* NEXT RDF               */ 01189000
         SL    RWORK2,@CF00158                                     0585 01190000
*           PLHLRECL=RWORK2->RDFLL; /* PUT RECORD LENGTH (PLH)       */ 01191000
@RF00584 SLR   @15,@15                                             0586 01192000
         ICM   @15,3,RDFLL(RWORK2)                                 0586 01193000
         ST    @15,PLHLRECL(,RPLH)                                 0586 01194000
*           IF RWORK2->RDFCTNU=ON   /* GROUP RDF                     */ 01195000
*             THEN                  /* YES.                          */ 01196000
         TM    RDFCTNU(RWORK2),B'01000000'                         0587 01197000
         BNO   @RF00587                                            0587 01198000
*             DO;                   /*                               */ 01199000
*               RWORK2=RWORK2-LENGTH(IDARDF);/* MOVE TO COUNT RDF    */ 01200000
         SL    RWORK2,@CF00158                                     0589 01201000
*               PLHRDFC=RWORK2->RDFLL;/* PUT RECORD COUNT (PLH)      */ 01202000
         MVC   PLHRDFC(2,RPLH),RDFLL(RWORK2)                       0590 01203000
*             END;                  /* END OF GROUP INITIALIZE       */ 01204000
*           ELSE                    /* NOT A GROUP RDF               */ 01205000
*             PLHRDFC=ONE;          /* SET SINGLE RECORD COUNT       */ 01206000
         B     @RC00587                                            0592 01207000
@RF00587 MVC   PLHRDFC(2,RPLH),@CH00054                            0592 01208000
*           PLHRDFP=RWORK2;         /* SET NEW RDF POINTER           */ 01209000
@RC00587 ST    RWORK2,PLHRDFP(,RPLH)                               0593 01210000
*           RETURN;                 /* RETURN TO CALLER              */ 01211000
         B     @EL00003                                            0594 01212000
*         END;                      /* END OF IN BUF ADVANCE         */ 01213000
*       ELSE                        /* END OF BUFFER                 */ 01214000
*         DO;                       /*                               */ 01215000
@RF00575 DS    0H                                                  0597 01216000
*           IF RPLREQ=RPLPUT THEN   /* FOR PUT REQUEST               */ 01217000
         CLI   RPLREQ(RRPL),1                                      0597 01218000
         BE    @RT00597                                            0597 01219000
*             RETURN;               /* RETURN                        */ 01220000
*         END;                      /*                               */ 01221000
*     END;                          /* END OF NON-SKIP PROCESS       */ 01222000
*   GEN(IDASVR14);                  /* SAVE R14              @X04SVES*/ 01223000
@RF00572 DS    0H                                                  0601 01224000
         IDASVR14                                                       01225000
*   RESPECIFY                                                      0602 01226000
*     R14 UNRSTD;                   /*                       @X04SVES*/ 01227000
*   IF PLHASKBF=ON THEN             /* ASK BUFFER ON         @X04SVRQ*/ 01228000
         TM    PLHASKBF(RPLH),B'00100000'                          0603 01229000
         BNO   @RF00603                                            0603 01230000
*     DO;                           /*                       @X04SVRQ*/ 01231000
*       RPARM1=ZERO;                /* ADD MAX NO BFR        @X04SVRQ*/ 01232000
         SLR   RPARM1,RPARM1                                       0605 01233000
*I16:                                                              0606 01234000
*       DO;                         /* IDACALL(IDAABF)               */ 01235000
I16      DS    0H                                                  0607 01236000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 01237000
         L     @15,@CV00989                                        0607 01238000
         BALR  @14,@15                                             0607 01239000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01240000
         BALR @11,0                                                     01241000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01242000
         USING *,@11                                                    01243000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01244000
         USING *+4095,@10                                               01245000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01246000
         LA    @10,4095(@11)                                            01247000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01248000
         L     @10,=A(@PSTART+4095)                                     01249000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01250000
         USING @PSTART+4095,@10                                         01251000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01252000
         L     @11,=A(@PSTART)                                          01253000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01254000
         USING @PSTART,@11                                              01255000
*       END I16;                    /* CALL ADD BFR          @X04SVRQ*/ 01256000
*     END;                          /*                       @X04SVRQ*/ 01257000
*   IF RPLUPD=ON                    /* COMMON, UPDATE REQUEST        */ 01258000
*     THEN                          /* YES.                          */ 01259000
@RF00603 TM    RPLUPD(RRPL),B'00000010'                            0618 01260000
         BNO   @RF00618                                            0618 01261000
*     PLHRDEXC=ON;                  /* SET READ EXCL FLAG PLH        */ 01262000
         OI    PLHRDEXC(RPLH),B'00001000'                          0619 01263000
*   ELSE                            /* NOT UPDATE REQUEST            */ 01264000
*     PLHRDEXC=OFF;                 /* DO NOT NEED EXCL CTL          */ 01265000
         B     @RC00618                                            0620 01266000
@RF00618 NI    PLHRDEXC(RPLH),B'11110111'                          0620 01267000
*   PLHSKPER=OFF;                   /*                       @X04SVES*/ 01268000
@RC00618 NI    PLHSKPER(RPLH),B'11011111'                          0621 01269000
*GETNXBF:                           /* GET NEXT BUFFER               */ 01270000
*   PLHRAE=ON;                      /* ASSUME POSITIONED TO PLHKEY 0622 01271000
*                                                            @ZA14811*/ 01272000
GETNXBF  OI    PLHRAE(RPLH),B'00000010'                            0622 01273000
*   IF AMBGSR=OFF&AMBLSR=OFF&       /* SHR RESOURCE.         @ZA10847*/ 01274000
*       RPLKEY=ON&                  /* KEYED REQUEST         @ZA10847*/ 01275000
*       PLHIBUFC->BUFCRRD=ON THEN   /* AND READ REQ          @ZA10847*/ 01276000
         TM    AMBGSR(RAMB),B'01100000'                            0623 01277000
         BNZ   @RF00623                                            0623 01278000
         TM    RPLKEY(RRPL),B'10000000'                            0623 01279000
         BNO   @RF00623                                            0623 01280000
         L     @07,PLHIBUFC(,RPLH)                                 0623 01281000
         TM    BUFCRRD(@07),B'00100000'                            0623 01282000
         BNO   @RF00623                                            0623 01283000
*     DO;                           /* CALL 19RA             @ZA10847*/ 01284000
*       PLHNOADV=ON;                /* NO ADVANCE            @XA05682*/ 01285000
*                                                                  0625 01286000
         OI    PLHNOADV(RPLH),B'00001000'                          0625 01287000
*       /*************************************************************/ 01288000
*       /*                                                           */ 01289000
*       /* CALL SCANDATA TO VALIDATE INDEX AND TO POSITION TO PLHKEY.*/ 01290000
*       /* IF PLHKEY FOUND, PLHRAE=ON. IF KEY GREATER THAN PLHKEY IS */ 01291000
*       /* FOUND, PLHRAE=OFF. NOTE..... IF PLHRAE=OFF THEN THE PLH IS*/ 01292000
*       /* POSITIONED AT THE NEXT RECORD IN THE NEXT CI      @ZA14811*/ 01293000
*       /*                                                           */ 01294000
*       /*************************************************************/ 01295000
*                                                                  0626 01296000
*       CALL SCANDATA;              /* CALL 19RA             @XA05682*/ 01297000
         BAL   @14,SCANDATA                                        0626 01298000
*       PLHNOADV=OFF;               /* NOADV OFF             @XA05682*/ 01299000
         NI    PLHNOADV(RPLH),B'11110111'                          0627 01300000
*       IF RPLERREG^='00'X THEN     /* ERROR?                @XA05682*/ 01301000
         CLI   RPLERREG(RRPL),0                                    0628 01302000
         BE    @RF00628                                            0628 01303000
*         CALL EXIT;                /* RETURN.               @X04SVRQ*/ 01304000
         BAL   @14,EXIT                                            0629 01305000
*     END;                          /* END CALL RA           @XA05682*/ 01306000
@RF00628 DS    0H                                                  0631 01307000
*   RBUFC=PLHDBUFC;                 /* POINT TO CURRENT BUFC         */ 01308000
@RF00623 L     RBUFC,PLHDBUFC(,RPLH)                               0631 01309000
*   IF PLHRAE=ON THEN               /* STILL POSITIONED AT PLHKEY  0632 01310000
*                                                            @ZA14811*/ 01311000
         TM    PLHRAE(RPLH),B'00000010'                            0632 01312000
         BNO   @RF00632                                            0632 01313000
*     DO;                           /*                       @ZA07562   01314000
*                                      CALL FREE BUFFER              */ 01315000
*I17:                                                              0634 01316000
*       DO;                         /* IDACALL(IDAFREEB)             */ 01317000
I17      DS    0H                                                  0635 01318000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 01319000
         L     @15,@CV00993                                        0635 01320000
         BALR  @14,@15                                             0635 01321000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01322000
         BALR @11,0                                                     01323000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01324000
         USING *,@11                                                    01325000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01326000
         USING *+4095,@10                                               01327000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01328000
         LA    @10,4095(@11)                                            01329000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01330000
         L     @10,=A(@PSTART+4095)                                     01331000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01332000
         USING @PSTART+4095,@10                                         01333000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01334000
         L     @11,=A(@PSTART)                                          01335000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01336000
         USING @PSTART,@11                                              01337000
*       END I17;                    /* MACRO                 @X04SVRQ   01338000
*                                      CALL GET NEXT CINV            */ 01339000
*I18:                                                              0645 01340000
*       DO;                         /* IDACALL(IDAGNXT)              */ 01341000
I18      DS    0H                                                  0646 01342000
*         CALL IDAGNXT;             /* EXIT TO IDAGNXT               */ 01343000
         L     @15,@CV00995                                        0646 01344000
         BALR  @14,@15                                             0646 01345000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01346000
         BALR @11,0                                                     01347000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01348000
         USING *,@11                                                    01349000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01350000
         USING *+4095,@10                                               01351000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01352000
         LA    @10,4095(@11)                                            01353000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01354000
         L     @10,=A(@PSTART+4095)                                     01355000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01356000
         USING @PSTART+4095,@10                                         01357000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01358000
         L     @11,=A(@PSTART)                                          01359000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01360000
         USING @PSTART,@11                                              01361000
*       END I18;                    /* MACRO                 @X04SVRQ*/ 01362000
*     END;                          /*                       @ZA07562*/ 01363000
*   RESPECIFY                                                      0657 01364000
*    (RWORK1,                                                      0657 01365000
*     RWORK2) RESTRICTED;                                          0657 01366000
@RF00632 DS    0H                                                  0658 01367000
*   IF RPLERREG='00'X               /* BUFFER MGR ERROR              */ 01368000
*     THEN                          /* NO.                           */ 01369000
         CLI   RPLERREG(RRPL),0                                    0658 01370000
         BNE   @RF00658                                            0658 01371000
*     DO;                           /*                               */ 01372000
*       RPARM1=RBUFC->BUFCBAD;      /* POINT TO START OF BUF         */ 01373000
         L     RPARM1,BUFCBAD(,RBUFC)                              0660 01374000
*       RWORK1=RPARM1+AMDCINV       /* POINT TO CIDF IN              */ 01375000
*           -LENGTH(IDACIDF);       /* BUFFER                        */ 01376000
*                                                                  0661 01377000
         L     @07,AMBDSB(,RAMB)                                   0661 01378000
         LR    RWORK1,RPARM1                                       0661 01379000
         AL    RWORK1,AMDCINV(,@07)                                0661 01380000
         SL    RWORK1,@CF00068                                     0661 01381000
*       /*************************************************************/ 01382000
*       /*                                                           */ 01383000
*       /* VALIDATE THE CIDF BEFORE PROCESSING               @ZA31009*/ 01384000
*       /*                                                           */ 01385000
*       /*************************************************************/ 01386000
*                                                                  0662 01387000
*       IF RWORK1->IDACIDF=ZERO THEN/* IF CIDF IS ZERO,      @ZA31009*/ 01388000
         ICM   @07,15,IDACIDF(RWORK1)                              0662 01389000
         BNZ   @RF00662                                            0662 01390000
*         DO;                       /* TREAT IT LIKE A DATA READ   0663 01391000
*                                      ERROR.                @ZA31009*/ 01392000
*           PLHSKPER=ON;            /* CAUSE NEXT GET SEQ TO SKIP CI.   01393000
*                                                            @ZA31009*/ 01394000
         OI    PLHSKPER(RPLH),B'00100000'                          0664 01395000
*           RPLERREG='08'X;         /* INDICATE A LOGICAL ERROR.   0665 01396000
*                                                            @ZA31009*/ 01397000
         MVI   RPLERREG(RRPL),X'08'                                0665 01398000
*           RPLERRCD=RPLINCNV;      /* SET INVALID CI ERROR CODE.  0666 01399000
*                                                            @ZA31009*/ 01400000
         MVI   RPLERRCD(RRPL),X'9C'                                0666 01401000
*           RPLDDDD=RBUFC->BUFCDDDD;/* PASS BACK RBA IN ERR  @ZA31009*/ 01402000
         L     @07,BUFCDDDD(,RBUFC)                                0667 01403000
         ST    @07,RPLDDDD(,RRPL)                                  0667 01404000
*           CALL EXIT;              /* EXIT FROM ADVPLH.     @ZA31009*/ 01405000
         BAL   @14,EXIT                                            0668 01406000
*         END;                      /* END OF ERROR DETECTION GROUP.    01407000
*                                                            @ZA31009*/ 01408000
*       IF RWORK1->CIDFBUSY=ON THEN /* WAS CI SPLIT INTERRUPTED    0670 01409000
*                                                            @ZA31009*/ 01410000
@RF00662 TM    CIDFBUSY(RWORK1),B'10000000'                        0670 01411000
         BNO   @RF00670                                            0670 01412000
*         DO;                       /* YES IT WAS, TRY TO CORRECT IT.   01413000
*                                                            @ZA31009*/ 01414000
*I19:                                                              0672 01415000
*           DO;                     /* IDACALL(IDA019S6)             */ 01416000
I19      DS    0H                                                  0673 01417000
*             CALL IDA019S6;        /* EXIT TO IDA019S6              */ 01418000
         L     @15,@CV01002                                        0673 01419000
         BALR  @14,@15                                             0673 01420000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01421000
         BALR @11,0                                                     01422000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01423000
         USING *,@11                                                    01424000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 01425000
         USING *+4095,@10                                               01426000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 01427000
         LA    @10,4095(@11)                                            01428000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 01429000
         L     @10,=A(@PSTART+4095)                                     01430000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 01431000
         USING @PSTART+4095,@10                                         01432000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01433000
         L     @11,=A(@PSTART)                                          01434000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01435000
         USING @PSTART,@11                                              01436000
*           END I19;                /* INVOKE CI REBUILD     @ZA31009*/ 01437000
*           IF RPLERREG^=ZERO THEN  /* DID REBUILD WORK?     @ZA31009*/ 01438000
         CLI   RPLERREG(RRPL),0                                    0683 01439000
         BE    @RF00683                                            0683 01440000
*             CALL EXIT;            /* NO IT FAILED, TAKE EXIT.    0684 01441000
*                                                            @ZA31009*/ 01442000
         BAL   @14,EXIT                                            0684 01443000
*           RPARM1=PLHDBUFC->BUFCBAD;/* PT TO START OF BUF   @ZA31009*/ 01444000
@RF00683 L     @07,PLHDBUFC(,RPLH)                                 0685 01445000
         L     RPARM1,BUFCBAD(,@07)                                0685 01446000
*           RWORK1=RPARM1+AMDCINV   /* POINT TO CIDF IN      @ZA31009*/ 01447000
*               -LENGTH(IDACIDF);   /* BUFFER                @ZA31009*/ 01448000
         L     @07,AMBDSB(,RAMB)                                   0686 01449000
         LR    RWORK1,RPARM1                                       0686 01450000
         AL    RWORK1,AMDCINV(,@07)                                0686 01451000
         SL    RWORK1,@CF00068                                     0686 01452000
*         END;                      /* END OF SPLIT INTERRUPTION   0687 01453000
*                                      DETECTION GROUP       @ZA31009*/ 01454000
*       RWORK2=RWORK1               /* POINT TO FIRST RDF            */ 01455000
*           -LENGTH(IDARDF);        /* IN BUFFER                     */ 01456000
@RF00670 LA    @15,3                                               0688 01457000
         LR    RWORK2,RWORK1                                       0688 01458000
         SLR   RWORK2,@15                                          0688 01459000
*       RBUFC=RPARM1+RWORK1->CIDFOSET;/* POINT TO FREE SPACE         */ 01460000
         LR    RBUFC,RPARM1                                        0689 01461000
         AH    RBUFC,CIDFOSET(,RWORK1)                             0689 01462000
*       IF RBUFC^>RPARM1|RWORK2->RDFNOT1=ON THEN/* END OF DATA IN  0690 01463000
*                                      BUFFER OR NOT 1ST SEGMENT OF     01464000
*                                      SPANNED RECD          @X04SVES*/ 01465000
         CR    RBUFC,RPARM1                                        0690 01466000
         BNH   @RT00690                                            0690 01467000
         TM    RDFNOT1(RWORK2),B'00100000'                         0690 01468000
         BO    @RT00690                                            0690 01469000
*         GO TO GETNXBF;            /* YES, GET NEXT BUFFER          */ 01470000
*       PLHFSP=RBUFC;               /* SET FREE SPACE PTR            */ 01471000
         ST    RBUFC,PLHFSP(,RPLH)                                 0692 01472000
*       PLHRECP=RPARM1;             /* SET RECORD PTR                */ 01473000
         ST    RPARM1,PLHRECP(,RPLH)                               0693 01474000
*       PLHLRECL=RWORK2->RDFLL;     /* PUT RECORD LTH IN PLH         */ 01475000
         SLR   @07,@07                                             0694 01476000
         ICM   @07,3,RDFLL(RWORK2)                                 0694 01477000
         ST    @07,PLHLRECL(,RPLH)                                 0694 01478000
*       IF RWORK2->RDFCTNU=ON       /* START OF GROUP                */ 01479000
*         THEN                      /* YES.                          */ 01480000
         TM    RDFCTNU(RWORK2),B'01000000'                         0695 01481000
         BNO   @RF00695                                            0695 01482000
*         DO;                       /*                               */ 01483000
*           RWORK2=RWORK2-LENGTH(IDARDF);/* MOVE TO COUNT RDF        */ 01484000
         SLR   RWORK2,@15                                          0697 01485000
*           PLHRDFC=RWORK2->RDFLL;  /* PUT RECORD CNT IN PLH         */ 01486000
         MVC   PLHRDFC(2,RPLH),RDFLL(RWORK2)                       0698 01487000
*         END;                      /* END OF GROUP INITIALIZE       */ 01488000
*       ELSE                        /* NOT A GROUP                   */ 01489000
*         PLHRDFC=ONE;              /* SINGLE RECORD COUNT           */ 01490000
         B     @RC00695                                            0700 01491000
@RF00695 MVC   PLHRDFC(2,RPLH),@CH00054                            0700 01492000
*       PLHRDFP=RWORK2;             /* PUT RDF PTR IN PLH            */ 01493000
@RC00695 ST    RWORK2,PLHRDFP(,RPLH)                               0701 01494000
*       IF RPLKEY=ON THEN           /* KEYED REQUEST                 */ 01495000
         TM    RPLKEY(RRPL),B'10000000'                            0702 01496000
         BNO   @RF00702                                            0702 01497000
*         DO;                       /* YES                           */ 01498000
*           RWORK2=AMDRKP+RPARM1;   /* POINT TO RECORD KEY           */ 01499000
         L     @15,AMBDSB(,RAMB)                                   0704 01500000
         LR    RWORK2,RPARM1                                       0704 01501000
         AH    RWORK2,AMDRKP(,@15)                                 0704 01502000
*           RBUFC=AMDKEYLN;         /* PICK UP KEY LENGTH            */ 01503000
         LH    RBUFC,AMDKEYLN(,@15)                                0705 01504000
*           IF PLHKEY(1:RBUFC)>     /* PLH KEY GREATER THAN          */ 01505000
*               RWORK2->KEY(1:RBUFC) THEN/* RECORD KEY               */ 01506000
         L     @07,PLHKEYPT(,RPLH)                                 0706 01507000
         LR    @15,RBUFC                                           0706 01508000
         BCTR  @15,0                                               0706 01509000
         EX    @15,@SC01190                                        0706 01510000
         BNH   @RF00706                                            0706 01511000
*             DO;                   /*                       @ZA24722*/ 01512000
*               IF AMBLWRIT=OFF&    /* IF NOT OPEN FOR WRITE @ZA24722*/ 01513000
*                   AMBPH->PLHCNT=1 THEN/* SINGLE STRING     @ZA24722*/ 01514000
         L     @07,RPLDACB(,RRPL)                                  0708 01515000
         L     @07,ACBAMBL(,@07)                                   0708 01516000
         TM    AMBLWRIT(@07),B'00100000'                           0708 01517000
         BNZ   @RF00708                                            0708 01518000
         L     @07,AMBPH(,RAMB)                                    0708 01519000
         CLI   PLHCNT(@07),1                                       0708 01520000
         BNE   @RF00708                                            0708 01521000
*                 DO;               /*                       @ZA24722*/ 01522000
*                   RPLERREG='08'X; /* SET LOGICAL ERR       @ZA24722*/ 01523000
         MVI   RPLERREG(RRPL),X'08'                                0710 01524000
*                   RPLERRCD=RPLSEQCK;/* SEQUENCE ERROR      @ZA24722*/ 01525000
         MVI   RPLERRCD(RRPL),X'0C'                                0711 01526000
*                   CALL EXIT;      /* RETURN                @ZA24722*/ 01527000
         BAL   @14,EXIT                                            0712 01528000
*                 END;              /*                       @ZA24722*/ 01529000
*               ELSE                /* IF NONE OF THE ABOVE  @ZA24722*/ 01530000
*                 GOTO GETNXBF;     /* SKIP THIS CI          @ZA24722*/ 01531000
*             END;                  /*                       @ZA24722*/ 01532000
*         END;                      /* END OF KEY CHECK CODE         */ 01533000
@RF00706 DS    0H                                                  0717 01534000
*       CALL EXIT;                  /* RETURN                @X04SVES*/ 01535000
@RF00702 BAL   @14,EXIT                                            0717 01536000
*     END;                          /* END OF NON-ERROR              */ 01537000
*   ELSE                            /* BUFFER ERROR                  */ 01538000
*     DO;                           /*                               */ 01539000
         B     @RC00658                                            0719 01540000
@RF00658 DS    0H                                                  0720 01541000
*       IF RPLERREG='08'X&          /* LOGICAL ERROR-        @X04SVRQ*/ 01542000
*           RPLERRCD=RPLEXCL THEN   /* EXCLUSIVE CTL         @X04SVRQ*/ 01543000
         CLI   RPLERREG(RRPL),8                                    0720 01544000
         BNE   @RF00720                                            0720 01545000
         CLI   RPLERRCD(RRPL),20                                   0720 01546000
         BNE   @RF00720                                            0720 01547000
*         DO;                       /* YES.                          */ 01548000
*           PLHDSCAN=ON;            /* SET SCANDATA FLAG             */ 01549000
         OI    PLHDSCAN(RPLH),B'00000001'                          0722 01550000
*           PLHDDDD=RPARM1;         /* SAVE RBA              @ZA07544*/ 01551000
         ST    RPARM1,PLHDDDD(,RPLH)                               0723 01552000
*           IF RPLKEY=ON THEN       /* KEYED REQUEST                 */ 01553000
         TM    RPLKEY(RRPL),B'10000000'                            0724 01554000
         BNO   @RF00724                                            0724 01555000
*             PLHNOADV=OFF;         /* ADVANCE ON RETRY              */ 01556000
         NI    PLHNOADV(RPLH),B'11110111'                          0725 01557000
*           ELSE                    /*                               */ 01558000
*             PLHNOADV=ON;          /* DO NOT ADVANCE ON RETRY       */ 01559000
         B     @RC00724                                            0726 01560000
@RF00724 OI    PLHNOADV(RPLH),B'00001000'                          0726 01561000
*         END;                      /* END OF EXCL ERROR             */ 01562000
@RC00724 DS    0H                                                  0728 01563000
*     END;                          /* END NOT READ ERROR            */ 01564000
@RF00720 DS    0H                                                  0729 01565000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 01566000
@RC00658 BAL   @14,EXIT                                            0729 01567000
*   RESPECIFY                                                      0730 01568000
*    (RWORK1,                                                      0730 01569000
*     RWORK2) UNRESTRICTED;                                        0730 01570000
*   END ADVPLH;                     /* END OF ADVANCE PLH            */ 01571000
         B     @EL00003                                            0731 01572000
*                                                                  0732 01573000
*   /*****************************************************************/ 01574000
*   /*                                                               */ 01575000
*   /* DATA RETRIEVE PROCEDURE                                       */ 01576000
*   /*                                                               */ 01577000
*   /*****************************************************************/ 01578000
*                                                                  0732 01579000
*DATARTV:                                                          0732 01580000
*   PROCEDURE OPTIONS(NOSAVEAREA,DONTSAVE);                        0732 01581000
DATARTV  DS    0H                                                  0733 01582000
*   RFY                                                            0733 01583000
*     R14 RSTD;                                                    0733 01584000
*   RESPECIFY                                                      0734 01585000
*    (RWORK1,                                                      0734 01586000
*     RWORK2) RESTRICTED;                                          0734 01587000
*   RWORK1=PLHLRECL;                /* RECORD LENGTH                 */ 01588000
         L     RWORK1,PLHLRECL(,RPLH)                              0735 01589000
*   RPLRLEN=RWORK1;                 /* SET RECORD LENGTH             */ 01590000
         ST    RWORK1,RPLRLEN(,RRPL)                               0736 01591000
*   RWORK2=PLHRECP;                 /* POINTER TO RECORD             */ 01592000
         L     RWORK2,PLHRECP(,RPLH)                               0737 01593000
*   RBUFC=RPLAREA;                  /* POINTER TO USER AREA          */ 01594000
         L     RBUFC,RPLAREA(,RRPL)                                0738 01595000
*   RPLDDDD=BUFCDDDD+               /* COMPUTE AND SET RBA           */ 01596000
*       (RWORK2-BUFCBAD);           /* OF DATA RECORD                */ 01597000
         L     @15,PLHDBUFC(,RPLH)                                 0739 01598000
         LR    @07,RWORK2                                          0739 01599000
         SL    @07,BUFCBAD(,@15)                                   0739 01600000
         AL    @07,BUFCDDDD(,@15)                                  0739 01601000
         ST    @07,RPLDDDD(,RRPL)                                  0739 01602000
*   PLHDDDD=RPLDDDD;                /* SAVE RBA IN PLH               */ 01603000
         ST    @07,PLHDDDD(,RPLH)                                  0740 01604000
*   IF RPLLOC=ON THEN               /* LOCATE MODE REQUEST           */ 01605000
         TM    RPLLOC(RRPL),B'10000000'                            0741 01606000
         BNO   @RF00741                                            0741 01607000
*     DO;                           /* YES.                          */ 01608000
*       GEN(ST RWORK2,0(RBUFC));    /* RETURN PTR TO RECORD          */ 01609000
         ST RWORK2,0(RBUFC)                                             01610000
*     END;                          /* END LOCATE MODE               */ 01611000
*   ELSE                            /*                               */ 01612000
*     DO;                           /* MOVE MODE REQUEST             */ 01613000
         B     @RC00741                                            0745 01614000
@RF00741 DS    0H                                                  0746 01615000
*       IF RWORK1>RPLBUFL THEN      /* AREA SIZE OK                  */ 01616000
         C     RWORK1,RPLBUFL(,RRPL)                               0746 01617000
         BNH   @RF00746                                            0746 01618000
*         DO;                       /* NO.                           */ 01619000
*           IF AMBLPATH=ON THEN     /* AIX PATH PROC.        @X04SVRQ*/ 01620000
         L     @15,RPLDACB(,RRPL)                                  0748 01621000
         L     @15,ACBAMBL(,@15)                                   0748 01622000
         TM    AMBLPATH(@15),B'10000000'                           0748 01623000
         BNO   @RF00748                                            0748 01624000
*             DO;                   /*                       @X04SVRQ*/ 01625000
*               GEN(IDASVR14);      /* SAVE REG 14.          @X04SVRQ*/ 01626000
         IDASVR14                                                       01627000
*I20:                                                              0751 01628000
*               DO;                 /* IDACALL(IDARXBD)              */ 01629000
I20      DS    0H                                                  0752 01630000
*                 CALL IDARXBD;     /* EXIT TO IDARXBD               */ 01631000
         L     @15,@CV00997                                        0752 01632000
         BALR  @14,@15                                             0752 01633000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01634000
         BALR @11,0                                                     01635000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01636000
         USING *,@11                                                    01637000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 01638000
         USING *+4095,@10                                               01639000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 01640000
         LA    @10,4095(@11)                                            01641000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0757 01642000
*                                      BASE                          */ 01643000
         L     @10,=A(@PSTART+4095)                                     01644000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0758 01645000
*                                      BASE                          */ 01646000
         USING @PSTART+4095,@10                                         01647000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01648000
         L     @11,=A(@PSTART)                                          01649000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01650000
         USING @PSTART,@11                                              01651000
*               END I20;            /* CALL AIX PATH.        @X04SVRQ*/ 01652000
*               GEN(IDARST14);      /* RESTORE REG 14.       @X04SVRQ*/ 01653000
         IDARST14                                                       01654000
*               IF RWORK1^=ZERO THEN/* AREA SIZE GOTTEN.     @X04SVRQ*/ 01655000
         LTR   RWORK1,RWORK1                                       0763 01656000
         BNZ   @RT00763                                            0763 01657000
*                 GOTO MVREC;       /* GO TO MOVE RECORD.    @X04SVRQ*/ 01658000
*             END;                  /*                       @X04SVRQ*/ 01659000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 01660000
@RF00748 MVI   RPLERREG(RRPL),X'08'                                0766 01661000
*           RPLERRCD=RPLINBUF;      /* AREA TOO SMALL                */ 01662000
         MVI   RPLERRCD(RRPL),X'2C'                                0767 01663000
*           PLHNOADV=ON;            /* SET NO ADVANCE PLH            */ 01664000
         OI    PLHNOADV(RPLH),B'00001000'                          0768 01665000
*         END;                      /* END SIZE ERROR                */ 01666000
*       ELSE                        /*                               */ 01667000
*         DO;                       /* SIZE OK                       */ 01668000
         B     @RC00746                                            0770 01669000
@RF00746 DS    0H                                                  0771 01670000
*MVREC:                             /*                       @X04SVRQ*/ 01671000
*           RFY                                                    0771 01672000
*             RWORK3 RESTRICTED;    /*                               */ 01673000
MVREC    DS    0H                                                  0772 01674000
*           RWORK3=RWORK1;          /* COPY LENGTH                   */ 01675000
         LR    RWORK3,RWORK1                                       0772 01676000
*           GEN(MVCL RBUFC,RWORK2); /* MOVE RECORD                   */ 01677000
         MVCL RBUFC,RWORK2                                              01678000
*           RFY                                                    0774 01679000
*             RWORK3 UNRSTD;                                       0774 01680000
*         END;                      /* END RECORD MOVE               */ 01681000
*     END;                          /* END MOVE MODE                 */ 01682000
@RC00746 DS    0H                                                  0777 01683000
*   PLHSRCSG=ZERO;                  /* SHOW NOT S.R.         @X04SVES*/ 01684000
@RC00741 SLR   @15,@15                                             0777 01685000
         STH   @15,PLHSRCSG(,RPLH)                                 0777 01686000
*   RETURN;                         /* RETURN TO CALLER              */ 01687000
@EL00004 DS    0H                                                  0778 01688000
@EF00004 DS    0H                                                  0778 01689000
@ER00004 BR    @14                                                 0778 01690000
*   RFY                                                            0779 01691000
*     R14 UNRSTD;                   /* RELEASE R14                   */ 01692000
*   RESPECIFY                                                      0780 01693000
*    (RWORK1,                                                      0780 01694000
*     RWORK2) UNRESTRICTED;                                        0780 01695000
*   END DATARTV;                    /* END OF DATA RETRIEVE          */ 01696000
*                                                                  0782 01697000
*   /*****************************************************************/ 01698000
*   /*                                                               */ 01699000
*   /* SUBROUTINE - RLSEBUFS FUNCTION- RELEASE PLH DATA AND INDEX    */ 01700000
*   /* BUFFERS. WRITES DATA BUFFER IF MUST WRITE FLAG IS ON. INPUT - */ 01701000
*   /* NONE OUTPUT- NONE                                             */ 01702000
*   /*                                                               */ 01703000
*   /*****************************************************************/ 01704000
*                                                                  0782 01705000
*RLSEBUFS:                                                         0782 01706000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0782 01707000
RLSEBUFS DS    0H                                                  0783 01708000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01709000
         IDASVR14                                                       01710000
*   PLHINVAL=ON;                    /* SET PLH INVALID               */ 01711000
         OI    PLHINVAL(RPLH),B'00000010'                          0784 01712000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC            */ 01713000
         L     RBUFC,PLHDBUFC(,RPLH)                               0785 01714000
*   IF RBUFC^=ZERO THEN             /* IF BUFFER HERE        @X04SVMR*/ 01715000
         LTR   RBUFC,RBUFC                                         0786 01716000
         BZ    @RF00786                                            0786 01717000
*     DO;                           /* FREE IT               @X04SVMR*/ 01718000
*       IF RBUFC->BUFCMW=ON THEN    /* MUST WRITE ON                 */ 01719000
         TM    BUFCMW(RBUFC),B'10000000'                           0788 01720000
         BNO   @RF00788                                            0788 01721000
*         IF AMBDFR=OFF THEN        /* NOT DFR WRITE         @X04SVRQ*/ 01722000
         TM    AMBDFR(RAMB),B'00001000'                            0789 01723000
         BNZ   @RF00789                                            0789 01724000
*I21:                                                              0790 01725000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 01726000
I21      DS    0H                                                  0791 01727000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 01728000
         L     @15,@CV00999                                        0791 01729000
         BALR  @14,@15                                             0791 01730000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01731000
         BALR @11,0                                                     01732000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01733000
         USING *,@11                                                    01734000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 01735000
         USING *+4095,@10                                               01736000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 01737000
         LA    @10,4095(@11)                                            01738000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 01739000
         L     @10,=A(@PSTART+4095)                                     01740000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 01741000
         USING @PSTART+4095,@10                                         01742000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01743000
         L     @11,=A(@PSTART)                                          01744000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01745000
         USING @PSTART,@11                                              01746000
*           END I21;                /* WRITE THE BFR         @X04SVRQ*/ 01747000
*       RBUFC=PLHDBUFC;             /*                               */ 01748000
@RF00789 DS    0H                                                  0801 01749000
@RF00788 L     RBUFC,PLHDBUFC(,RPLH)                               0801 01750000
*I22:                                                              0802 01751000
*       DO;                         /* IDACALL(IDAFREEB)             */ 01752000
I22      DS    0H                                                  0803 01753000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 01754000
         L     @15,@CV00993                                        0803 01755000
         BALR  @14,@15                                             0803 01756000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01757000
         BALR @11,0                                                     01758000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01759000
         USING *,@11                                                    01760000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01761000
         USING *+4095,@10                                               01762000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01763000
         LA    @10,4095(@11)                                            01764000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01765000
         L     @10,=A(@PSTART+4095)                                     01766000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01767000
         USING @PSTART+4095,@10                                         01768000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01769000
         L     @11,=A(@PSTART)                                          01770000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01771000
         USING @PSTART,@11                                              01772000
*       END I22;                    /* FREE BUFFER           @X04SVRQ*/ 01773000
*     END;                          /* END FREE BFR          @X04SVMR*/ 01774000
*   IF RPLKEY=ON&PLHIBUFC^=ZERO THEN/* KEYED REQUEST & IX BUFFER   0814 01775000
*                                      EXISTS.               @X04SVRQ*/ 01776000
@RF00786 TM    RPLKEY(RRPL),B'10000000'                            0814 01777000
         BNO   @RF00814                                            0814 01778000
         L     @05,PLHIBUFC(,RPLH)                                 0814 01779000
         LTR   @05,@05                                             0814 01780000
         BZ    @RF00814                                            0814 01781000
*     DO;                           /* YES.                          */ 01782000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC           */ 01783000
         LR    RBUFC,@05                                           0816 01784000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB.   @X04SVRQ*/ 01785000
         L     @05,RPLDACB(,RRPL)                                  0817 01786000
         L     @05,ACBAMBL(,@05)                                   0817 01787000
         L     RAMB,AMBLIX(,@05)                                   0817 01788000
*I23:                                                              0818 01789000
*       DO;                         /* IDACALL(IDAFREEB)             */ 01790000
I23      DS    0H                                                  0819 01791000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 01792000
         L     @15,@CV00993                                        0819 01793000
         BALR  @14,@15                                             0819 01794000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01795000
         BALR @11,0                                                     01796000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01797000
         USING *,@11                                                    01798000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01799000
         USING *+4095,@10                                               01800000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01801000
         LA    @10,4095(@11)                                            01802000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01803000
         L     @10,=A(@PSTART+4095)                                     01804000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01805000
         USING @PSTART+4095,@10                                         01806000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01807000
         L     @11,=A(@PSTART)                                          01808000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01809000
         USING @PSTART,@11                                              01810000
*       END I23;                    /* FREE BUFFER           @X04SVRQ*/ 01811000
*       RAMB=AMBLDTA;               /* RESTORE AMB PTR.      @X04SVRQ*/ 01812000
         L     @05,RPLDACB(,RRPL)                                  0829 01813000
         L     @05,ACBAMBL(,@05)                                   0829 01814000
         L     RAMB,AMBLDTA(,@05)                                  0829 01815000
*     END;                          /* END KEYED REQUEST             */ 01816000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 01817000
@RF00814 BAL   @14,EXIT                                            0831 01818000
*   END RLSEBUFS;                   /* END RLSEBUFS ROUTINE          */ 01819000
@EL00005 DS    0H                                                  0832 01820000
@EF00005 DS    0H                                                  0832 01821000
@ER00005 BR    @14                                                 0832 01822000
*                                                                  0833 01823000
*   /*****************************************************************/ 01824000
*   /*                                                               */ 01825000
*   /* PLH EXCEPTION FLAG PROCESSING                                 */ 01826000
*   /*                                                               */ 01827000
*   /*****************************************************************/ 01828000
*                                                                  0833 01829000
*PLHEXP:                                                           0833 01830000
*   PROCEDURE OPTIONS(NOSAVEAREA,DONTSAVE);                        0833 01831000
PLHEXP   DS    0H                                                  0834 01832000
*   GEN(IDASVR14) ;                 /* SAVE REGISTER 14              */ 01833000
         IDASVR14                                                       01834000
*   IF PLH1ST=ON                    /* FIRST REQUEST AFTER           */ 01835000
*     THEN                          /* OPEN                          */ 01836000
         TM    PLH1ST(RPLH),B'01000000'                            0835 01837000
         BNO   @RF00835                                            0835 01838000
*     DO;                           /* YES                           */ 01839000
*       IF RPLBWD=ON THEN           /* BACKWARD SPECIFIED    @X04SVES*/ 01840000
         TM    RPLBWD(RRPL),B'00010000'                            0837 01841000
         BNO   @RF00837                                            0837 01842000
*         DO;                       /* YES, ERROR            @X04SVES*/ 01843000
*           RPLERREG='08'X;         /* SHOW LOGICAL ERROR    @X04SVES*/ 01844000
         MVI   RPLERREG(RRPL),X'08'                                0839 01845000
*           RPLERRCD=RPLNOPTR;      /* SHOW NO POSITIONING   @X04SVES*/ 01846000
         MVI   RPLERRCD(RRPL),X'58'                                0840 01847000
*           CALL EXIT;              /* RETURN                @X04SVES*/ 01848000
         BAL   @14,EXIT                                            0841 01849000
*         END;                      /*                       @X04SVES*/ 01850000
*       PLHASKBF=ON;                /* SET ASK BFR           @X04SVRQ*/ 01851000
@RF00837 OI    PLHASKBF(RPLH),B'00100000'                          0843 01852000
*       RPARM1=ZERO;                /* ADD MAX NO BFR        @X04SVRQ*/ 01853000
         SLR   RPARM1,RPARM1                                       0844 01854000
*I24:                                                              0845 01855000
*       DO;                         /* IDACALL(IDAABF)               */ 01856000
I24      DS    0H                                                  0846 01857000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 01858000
         L     @15,@CV00989                                        0846 01859000
         BALR  @14,@15                                             0846 01860000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01861000
         BALR @11,0                                                     01862000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01863000
         USING *,@11                                                    01864000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01865000
         USING *+4095,@10                                               01866000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01867000
         LA    @10,4095(@11)                                            01868000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01869000
         L     @10,=A(@PSTART+4095)                                     01870000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01871000
         USING @PSTART+4095,@10                                         01872000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01873000
         L     @11,=A(@PSTART)                                          01874000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01875000
         USING @PSTART,@11                                              01876000
*       END I24;                    /* CALL ADD BFR          @X04SVRQ*/ 01877000
*       IF RPLREQ=RPLGET&           /* GET UPDATE                    */ 01878000
*           RPLUPD=ON               /* REQUEST                       */ 01879000
*         THEN                      /* YES.                          */ 01880000
         CLI   RPLREQ(RRPL),0                                      0856 01881000
         BNE   @RF00856                                            0856 01882000
         TM    RPLUPD(RRPL),B'00000010'                            0856 01883000
         BNO   @RF00856                                            0856 01884000
*         PLHRDEXC=ON;              /* SET PLH IN READ EXCL          */ 01885000
         OI    PLHRDEXC(RPLH),B'00001000'                          0857 01886000
*       IF RPLKEY=OFF               /* KEYED REQUEST                 */ 01887000
*         THEN                      /* NO.                           */ 01888000
@RF00856 TM    RPLKEY(RRPL),B'10000000'                            0858 01889000
         BNZ   @RF00858                                            0858 01890000
*         DO;                       /*                               */ 01891000
*           PLHKEYMD=OFF;           /* TURN OFF KEYED MODE           */ 01892000
         NI    PLHKEYMD(RPLH),B'11011111'                          0860 01893000
*           RPARM1=ZERO;            /* ZERO RBA                      */ 01894000
         SLR   RPARM1,RPARM1                                       0861 01895000
*           IF ARDHRBA=RPARM1 THEN  /* EMPTY EXTENT                  */ 01896000
         L     @05,AMBDSB(,RAMB)                                   0862 01897000
         L     @05,AMDPARDB(,@05)                                  0862 01898000
         CL    RPARM1,ARDHRBA(,@05)                                0862 01899000
         BNE   @RF00862                                            0862 01900000
*             DO;                   /* YES                           */ 01901000
*               IF ARDEOD=ON|       /* END OF DATA ARDB              */ 01902000
*                   ARDNPTR=ZERO THEN/* OR NO MORE ARDBS             */ 01903000
         TM    ARDEOD(@05),B'00001000'                             0864 01904000
         BO    @RT00864                                            0864 01905000
         L     @05,ARDNPTR(,@05)                                   0864 01906000
         LTR   @05,@05                                             0864 01907000
         BNZ   @RF00864                                            0864 01908000
@RT00864 DS    0H                                                  0865 01909000
*                 DO;               /* YES                           */ 01910000
*                   RPLERREG='08'X; /* LOGICAL ERROR                 */ 01911000
         MVI   RPLERREG(RRPL),X'08'                                0866 01912000
*                   RPLERRCD=RPLEODER;/* END OF DATA                 */ 01913000
         MVI   RPLERRCD(RRPL),X'04'                                0867 01914000
*                   PLHEODX=ON;     /* SET EOD FLAG                  */ 01915000
         OI    PLHEODX(RPLH),B'00000100'                           0868 01916000
*                   CALL EXIT;      /* EXIT                  @X04SVES*/ 01917000
         BAL   @14,EXIT                                            0869 01918000
*                 END;              /* END OF NO DATA                */ 01919000
*               ELSE                /* NOT LAST ARDB                 */ 01920000
*                 RPARM1=ARDERBA;   /* START OF NEXT RANGE           */ 01921000
         B     @RC00864                                            0871 01922000
@RF00864 L     @05,AMBDSB(,RAMB)                                   0871 01923000
         L     @05,AMDPARDB(,@05)                                  0871 01924000
         L     RPARM1,ARDERBA(,@05)                                0871 01925000
*             END;                  /* END OF EMPTY EXTENT CALL GET     01926000
*                                      RBA                           */ 01927000
@RC00864 DS    0H                                                  0873 01928000
*I25:                                                              0873 01929000
*           DO;                     /* IDACALL(IDAGRB)               */ 01930000
@RF00862 DS    0H                                                  0873 01931000
I25      DS    0H                                                  0874 01932000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 01933000
         L     @15,@CV00996                                        0874 01934000
         BALR  @14,@15                                             0874 01935000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01936000
         BALR @11,0                                                     01937000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01938000
         USING *,@11                                                    01939000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 01940000
         USING *+4095,@10                                               01941000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 01942000
         LA    @10,4095(@11)                                            01943000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 01944000
         L     @10,=A(@PSTART+4095)                                     01945000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 01946000
         USING @PSTART+4095,@10                                         01947000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01948000
         L     @11,=A(@PSTART)                                          01949000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01950000
         USING @PSTART,@11                                              01951000
*           END I25;                /* MACRO                 @X04SVRQ*/ 01952000
*           RESPECIFY                                              0884 01953000
*            (RWORK1,                                              0884 01954000
*             RWORK2) RESTRICTED;                                  0884 01955000
*         END;                      /*                               */ 01956000
*       ELSE                        /* KEYED REQUEST                 */ 01957000
*         DO;                       /*                               */ 01958000
         B     @RC00858                                            0886 01959000
@RF00858 DS    0H                                                  0887 01960000
*           RAMB=AMBLIX;            /* POINT TO INDEX AMB            */ 01961000
         L     @07,RPLDACB(,RRPL)                                  0887 01962000
         L     @07,ACBAMBL(,@07)                                   0887 01963000
         L     RAMB,AMBLIX(,@07)                                   0887 01964000
*           PLHSSR=ON;              /* READ SEQ. SET REQUEST         */ 01965000
         OI    PLHSSR(RPLH),B'00010000'                            0888 01966000
*           RPARM1=ADDR(PLHIXSPL);  /* POINT TO PARM         @X04SVES*/ 01967000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0889 01968000
*           PLHISPLP=RPARM1;        /* SET IX SCH PTR        @ZA07544*/ 01969000
         ST    RPARM1,PLHISPLP(,RPLH)                              0890 01970000
*           RPARM1->IXSILN=ONE;     /* SET LVL = 1           @X04SVES*/ 01971000
         MVI   IXSILN(RPARM1),X'01'                                0891 01972000
*           RPARM1=AMDSSRBA;        /* FIRST SEQ SET RBA             */ 01973000
         L     @07,AMBDSB(,RAMB)                                   0892 01974000
         L     RPARM1,AMDSSRBA(,@07)                               0892 01975000
*           PLHSSRBA=RPARM1;        /* PLACE RBA IN PLH              */ 01976000
         ST    RPARM1,PLHSSRBA(,RPLH)                              0893 01977000
*           PLHKEYMD=ON;            /* TURN ON KEYED MODE FLAG CALL     01978000
*                                      GET RBA                       */ 01979000
         OI    PLHKEYMD(RPLH),B'00100000'                          0894 01980000
*I26:                                                              0895 01981000
*           DO;                     /* IDACALL(IDAGRB)               */ 01982000
I26      DS    0H                                                  0896 01983000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 01984000
         L     @15,@CV00996                                        0896 01985000
         BALR  @14,@15                                             0896 01986000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01987000
         BALR @11,0                                                     01988000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01989000
         USING *,@11                                                    01990000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 01991000
         USING *+4095,@10                                               01992000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 01993000
         LA    @10,4095(@11)                                            01994000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 01995000
         L     @10,=A(@PSTART+4095)                                     01996000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 01997000
         USING @PSTART+4095,@10                                         01998000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01999000
         L     @11,=A(@PSTART)                                          02000000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02001000
         USING @PSTART,@11                                              02002000
*           END I26;                /*                       @X04SVRQ*/ 02003000
*           RESPECIFY                                              0906 02004000
*            (RWORK1,                                              0906 02005000
*             RWORK2) RESTRICTED;                                  0906 02006000
*           IF RPLERREG^='00'X      /* ERROR                         */ 02007000
*             THEN                  /* YES.                          */ 02008000
         CLI   RPLERREG(RRPL),0                                    0907 02009000
         BE    @RF00907                                            0907 02010000
*             CALL EXIT;            /* EXIT                  @X04SVES*/ 02011000
         BAL   @14,EXIT                                            0908 02012000
*           RWORK1=RBUFC->BUFCBAD;  /* POINT TO INDEX CINV           */ 02013000
@RF00907 L     RWORK1,BUFCBAD(,RBUFC)                              0909 02014000
*           RESPECIFY                                              0910 02015000
*             IDAIXH BASED(RWORK1); /*                               */ 02016000
*                                                                  0910 02017000
*           /*********************************************************/ 02018000
*           /*                                                       */ 02019000
*           /* INITIALIZE SEQUENCE SET ENTRY INFORMATION IN THE PLH. */ 02020000
*           /*                                                       */ 02021000
*           /*********************************************************/ 02022000
*                                                                  0911 02023000
*           IXSSEP=RWORK1+IXHSEO;   /* SET PTR TO FIRST SECT.        */ 02024000
         LA    @07,200                                             0911 02025000
         ALR   @07,RPLH                                            0911 02026000
         LR    @00,RWORK1                                          0911 02027000
         AH    @00,IXHSEO(,RWORK1)                                 0911 02028000
         ST    @00,IXSSEP(,@07)                                    0911 02029000
*           RBUFC=AMDCINV-IXHFLPLN; /* ADJUST TO START OF F          */ 02030000
         L     @15,AMBDSB(,RAMB)                                   0912 02031000
         L     RBUFC,AMDCINV(,@15)                                 0912 02032000
         SLR   @00,@00                                             0912 02033000
         IC    @00,IXHFLPLN(,RWORK1)                               0912 02034000
         SLR   RBUFC,@00                                           0912 02035000
*           RBUFC=RBUFC-(LENGTH(IDACIDF)/* ADJUST TO SKIP            */ 02036000
*               +LENGTH(IDARDF));   /* CIDF AND RDF                  */ 02037000
         SL    RBUFC,@CF00289                                      0913 02038000
*           RPARM1=IXHPTLS;         /* ICM MASK FOR PTR              */ 02039000
         SLR   RPARM1,RPARM1                                       0914 02040000
         IC    RPARM1,IXHPTLS(,RWORK1)                             0914 02041000
*           RBUFC=RBUFC+RWORK1;     /* PTR TO 1ST IDX ENTRY          */ 02042000
         ALR   RBUFC,RWORK1                                        0915 02043000
*           IXSHEP=RBUFC;           /* SET FOR GETNEXT               */ 02044000
         ST    RBUFC,IXSHEP(,@07)                                  0916 02045000
*           IXSLEP=RBUFC;           /* SET LOW ENTRY         @X04SVES*/ 02046000
         ST    RBUFC,IXSLEP(,@07)                                  0917 02047000
*           RESPECIFY                                              0918 02048000
*             IDAIBFLP BASED(RBUFC);                               0918 02049000
*           RWORK2=ZERO;            /* CLEAR REGISTER                */ 02050000
         SLR   RWORK2,RWORK2                                       0919 02051000
*           GEN(EX RPARM1,ICMGEN);  /* PICK UP PTR                   */ 02052000
         EX RPARM1,ICMGEN                                               02053000
*           RAMB=AMBLDTA;           /* SET PTR TO DATA AMB           */ 02054000
         L     @07,RPLDACB(,RRPL)                                  0921 02055000
         L     @07,ACBAMBL(,@07)                                   0921 02056000
         L     RAMB,AMBLDTA(,@07)                                  0921 02057000
*           RPARM1=IXHBRBA+         /* CONVERT PTR TO                */ 02058000
*               (RWORK2*AMDCINV);   /* RBA VALUE CALL GET RBA        */ 02059000
         L     @07,AMBDSB(,RAMB)                                   0922 02060000
         LR    @09,RWORK2                                          0922 02061000
         M     @08,AMDCINV(,@07)                                   0922 02062000
         AL    @09,IXHBRBA(,RWORK1)                                0922 02063000
         LR    RPARM1,@09                                          0922 02064000
*I27:                                                              0923 02065000
*           DO;                     /* IDACALL(IDAGRB)               */ 02066000
I27      DS    0H                                                  0924 02067000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 02068000
         L     @15,@CV00996                                        0924 02069000
         BALR  @14,@15                                             0924 02070000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02071000
         BALR @11,0                                                     02072000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02073000
         USING *,@11                                                    02074000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02075000
         USING *+4095,@10                                               02076000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02077000
         LA    @10,4095(@11)                                            02078000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02079000
         L     @10,=A(@PSTART+4095)                                     02080000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02081000
         USING @PSTART+4095,@10                                         02082000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02083000
         L     @11,=A(@PSTART)                                          02084000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02085000
         USING @PSTART,@11                                              02086000
*           END I27;                /*                       @X04SVRQ*/ 02087000
*           RESPECIFY                                              0934 02088000
*            (RWORK1,                                              0934 02089000
*             RWORK2) RESTRICTED;                                  0934 02090000
*         END;                      /* END OF KEY-SEQ. SETUP         */ 02091000
*GNXCI:                                                            0936 02092000
*       IF RPLERREG='00'X           /* ERROR                         */ 02093000
*         THEN                      /* NO.                           */ 02094000
@RC00858 DS    0H                                                  0936 02095000
GNXCI    CLI   RPLERREG(RRPL),0                                    0936 02096000
         BNE   @RF00936                                            0936 02097000
*         DO;                       /*                               */ 02098000
*           RWORK1=RBUFC->BUFCBAD;  /* POINT TO BUFFER               */ 02099000
         L     RWORK1,BUFCBAD(,RBUFC)                              0938 02100000
*           RPARM1=RWORK1+AMDCINV   /* POINT TO CIDF                 */ 02101000
*               -LENGTH(IDACIDF);   /*                               */ 02102000
*                                                                  0939 02103000
         L     @07,AMBDSB(,RAMB)                                   0939 02104000
         LR    RPARM1,RWORK1                                       0939 02105000
         AL    RPARM1,AMDCINV(,@07)                                0939 02106000
         SL    RPARM1,@CF00068                                     0939 02107000
*           /*********************************************************/ 02108000
*           /*                                                       */ 02109000
*           /* VALIDATE THE CIDF                             @ZA31009*/ 02110000
*           /*                                                       */ 02111000
*           /*********************************************************/ 02112000
*                                                                  0940 02113000
*           IF RPARM1->CIDFBUSY=ON THEN/* WAS CI SPLIT INTERRUPTED?     02114000
*                                                            @ZA31009*/ 02115000
         TM    CIDFBUSY(RPARM1),B'10000000'                        0940 02116000
         BNO   @RF00940                                            0940 02117000
*             DO;                   /* YES IT WAS, TRY TO CORRECT IT.   02118000
*                                                            @ZA31009*/ 02119000
*I28:                                                              0942 02120000
*               DO;                 /* IDACALL(IDA019S6)             */ 02121000
I28      DS    0H                                                  0943 02122000
*                 CALL IDA019S6;    /* EXIT TO IDA019S6              */ 02123000
         L     @15,@CV01002                                        0943 02124000
         BALR  @14,@15                                             0943 02125000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 02126000
         BALR @11,0                                                     02127000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 02128000
         USING *,@11                                                    02129000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 02130000
         USING *+4095,@10                                               02131000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 02132000
         LA    @10,4095(@11)                                            02133000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0948 02134000
*                                      BASE                          */ 02135000
         L     @10,=A(@PSTART+4095)                                     02136000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0949 02137000
*                                      BASE                          */ 02138000
         USING @PSTART+4095,@10                                         02139000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 02140000
         L     @11,=A(@PSTART)                                          02141000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 02142000
         USING @PSTART,@11                                              02143000
*               END I28;            /* INVOKE CI REBUILD     @ZA31009*/ 02144000
*               IF RPLERREG^=ZERO THEN/* DID REBUILD WORK?   @ZA31009*/ 02145000
         CLI   RPLERREG(RRPL),0                                    0953 02146000
         BE    @RF00953                                            0953 02147000
*                 CALL EXIT;        /* NO IT FAILED. TAKE EXIT.    0954 02148000
*                                                            @ZA31009*/ 02149000
         BAL   @14,EXIT                                            0954 02150000
*               RWORK1=PLHDBUFC->BUFCBAD;/* PT TO START OF BUF     0955 02151000
*                                                            @ZA31009*/ 02152000
@RF00953 L     @07,PLHDBUFC(,RPLH)                                 0955 02153000
         L     RWORK1,BUFCBAD(,@07)                                0955 02154000
*               RPARM1=RWORK1+AMDCINV/* POINT TO CIDF IN     @ZA31009*/ 02155000
*                   -LENGTH(IDACIDF);/* BUFFER               @ZA31009*/ 02156000
         L     @15,AMBDSB(,RAMB)                                   0956 02157000
         LR    RPARM1,RWORK1                                       0956 02158000
         AL    RPARM1,AMDCINV(,@15)                                0956 02159000
         SL    RPARM1,@CF00068                                     0956 02160000
*               RBUFC=PLHDBUFC;     /* POINT TO BUFC         @ZA31009*/ 02161000
         LR    RBUFC,@07                                           0957 02162000
*             END;                  /* END OF SPLIT INTERRUPTION   0958 02163000
*                                      DETECTION             @ZA31009*/ 02164000
*           RESPECIFY                                              0959 02165000
*             IDACIDF BASED(RPARM1);/*                               */ 02166000
@RF00940 DS    0H                                                  0960 02167000
*           PLHRECP=RWORK1;         /* INITIALIZE RECORD PTR @ZA31009*/ 02168000
         ST    RWORK1,PLHRECP(,RPLH)                               0960 02169000
*           IF CIDFOSET=ZERO        /* EMPTY CINV                    */ 02170000
*             THEN                  /* YES.                          */ 02171000
         SLR   @07,@07                                             0961 02172000
         CH    @07,CIDFOSET(,RPARM1)                               0961 02173000
         BNE   @RF00961                                            0961 02174000
*             DO;                   /* FREE DATA BUFFER              */ 02175000
*                                                                  0962 02176000
*               /*****************************************************/ 02177000
*               /*                                                   */ 02178000
*               /* VALIDATE THE CIDF                         @ZA31009*/ 02179000
*               /*                                                   */ 02180000
*               /*****************************************************/ 02181000
*                                                                  0963 02182000
*               IF RPARM1->IDACIDF=ZERO THEN/* IF CIDF IS ZERO,    0963 02183000
*                                                            @ZA31009*/ 02184000
         ICM   @00,15,IDACIDF(RPARM1)                              0963 02185000
         CLR   @07,@00                                             0963 02186000
         BNE   @RF00963                                            0963 02187000
*                 DO;               /* TREAT IT LIKE A DATA READ   0964 02188000
*                                      ERROR.                @ZA31009*/ 02189000
*                   PLHSKPER=ON;    /* CAUSE NEXT GET SEQ TO SKIP CI    02190000
*                                                            @ZA31009*/ 02191000
         OI    PLHSKPER(RPLH),B'00100000'                          0965 02192000
*                   RPLERREG='08'X; /* INDICATE A LOGICAL ERROR    0966 02193000
*                                                            @ZA31009*/ 02194000
         MVI   RPLERREG(RRPL),X'08'                                0966 02195000
*                   RPLERRCD=RPLINCNV;/* SET INVALID CI CODE @ZA31009*/ 02196000
         MVI   RPLERRCD(RRPL),X'9C'                                0967 02197000
*                   RPLDDDD=RBUFC->BUFCDDDD;/* PASS BACK RBA IN ERROR   02198000
*                                                            @ZA31009*/ 02199000
         L     @07,BUFCDDDD(,RBUFC)                                0968 02200000
         ST    @07,RPLDDDD(,RRPL)                                  0968 02201000
*                   CALL EXIT;      /* EXIT FROM ADVPLH.     @ZA31009*/ 02202000
         BAL   @14,EXIT                                            0969 02203000
*                 END;              /* END OF ERROR DETECTION GROUP.    02204000
*                                                            @ZA31009*/ 02205000
*               RBUFC=PLHDBUFC;     /* POINT TO BUFC                 */ 02206000
@RF00963 L     RBUFC,PLHDBUFC(,RPLH)                               0971 02207000
*I29:                                                              0972 02208000
*               DO;                 /* IDACALL(IDAFREEB)             */ 02209000
I29      DS    0H                                                  0973 02210000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 02211000
         L     @15,@CV00993                                        0973 02212000
         BALR  @14,@15                                             0973 02213000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 02214000
         BALR @11,0                                                     02215000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 02216000
         USING *,@11                                                    02217000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 02218000
         USING *+4095,@10                                               02219000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 02220000
         LA    @10,4095(@11)                                            02221000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0978 02222000
*                                      BASE                          */ 02223000
         L     @10,=A(@PSTART+4095)                                     02224000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0979 02225000
*                                      BASE                          */ 02226000
         USING @PSTART+4095,@10                                         02227000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 02228000
         L     @11,=A(@PSTART)                                          02229000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 02230000
         USING @PSTART,@11                                              02231000
*               END I29;            /*                       @X04SVRQ   02232000
*                                      GET NEXT DATA CINV            */ 02233000
*I30:                                                              0983 02234000
*               DO;                 /* IDACALL(IDAGNXT)              */ 02235000
I30      DS    0H                                                  0984 02236000
*                 CALL IDAGNXT;     /* EXIT TO IDAGNXT               */ 02237000
         L     @15,@CV00995                                        0984 02238000
         BALR  @14,@15                                             0984 02239000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 02240000
         BALR @11,0                                                     02241000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 02242000
         USING *,@11                                                    02243000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 02244000
         USING *+4095,@10                                               02245000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 02246000
         LA    @10,4095(@11)                                            02247000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 0989 02248000
*                                      BASE                          */ 02249000
         L     @10,=A(@PSTART+4095)                                     02250000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  0990 02251000
*                                      BASE                          */ 02252000
         USING @PSTART+4095,@10                                         02253000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 02254000
         L     @11,=A(@PSTART)                                          02255000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 02256000
         USING @PSTART,@11                                              02257000
*               END I30;            /*                       @X04SVRQ*/ 02258000
*               RESPECIFY                                          0994 02259000
*                (RWORK1,                                          0994 02260000
*                 RWORK2) RESTRICTED;                              0994 02261000
*               GO TO GNXCI;        /* LOOP UNTIL DATA FOUND         */ 02262000
         B     GNXCI                                               0995 02263000
*             END;                  /* END OF EMPTY CI               */ 02264000
*           PLH1ST=OFF;             /* 1ST TIME OFF          @XA07023*/ 02265000
@RF00961 NI    PLH1ST(RPLH),B'10111111'                            0997 02266000
*           PLHFSP=RWORK1+CIDFOSET; /* INITIALIZE FREE SP. PTR       */ 02267000
         LR    @07,RWORK1                                          0998 02268000
         AH    @07,CIDFOSET(,RPARM1)                               0998 02269000
         ST    @07,PLHFSP(,RPLH)                                   0998 02270000
*           RPARM1=RPARM1-LENGTH(IDARDF);/* INITIALIZE               */ 02271000
         LA    @07,3                                               0999 02272000
         SLR   RPARM1,@07                                          0999 02273000
*           PLHLRECL=RPARM1->RDFLL; /* PUT RECORD LTH IN PLH         */ 02274000
         SLR   @00,@00                                             1000 02275000
         ICM   @00,3,RDFLL(RPARM1)                                 1000 02276000
         ST    @00,PLHLRECL(,RPLH)                                 1000 02277000
*           IF RPARM1->RDFCTNU=ON THEN/* START OF GROUP              */ 02278000
         TM    RDFCTNU(RPARM1),B'01000000'                         1001 02279000
         BNO   @RF01001                                            1001 02280000
*             DO;                   /* YES                           */ 02281000
*               RPARM1=RPARM1-LENGTH(IDARDF);/* MOVE TO CNT RDF      */ 02282000
         SLR   RPARM1,@07                                          1003 02283000
*               PLHRDFC=RPARM1->RDFLL;/* PUT RECORD CNT IN PLH       */ 02284000
         MVC   PLHRDFC(2,RPLH),RDFLL(RPARM1)                       1004 02285000
*             END;                  /* END OF GROUP INITIALIZE       */ 02286000
*           ELSE                    /* NOT A GROUP                   */ 02287000
*             PLHRDFC=ONE;          /* SINGLE RECORD COUNT           */ 02288000
         B     @RC01001                                            1006 02289000
@RF01001 MVC   PLHRDFC(2,RPLH),@CH00054                            1006 02290000
*           PLHRDFP=RPARM1;         /* PUT RDF PTR IN PLH            */ 02291000
@RC01001 ST    RPARM1,PLHRDFP(,RPLH)                               1007 02292000
*         END;                      /* END OF PLH INITIALIZE         */ 02293000
*       ELSE                        /* BUFFER ERROR          @X04SVRQ*/ 02294000
*         DO;                       /* SOME TYPE OF ERROR.   @ZA07544*/ 02295000
         B     @RC00936                                            1009 02296000
@RF00936 DS    0H                                                  1010 02297000
*           IF RPLERREG='08'X&      /* IF LOGICAL ERROR AND @ZA075444*/ 02298000
*               (RPLERRCD=RPLEXCL)  /* EXCLUSVE CNTL ERROR,  @ZA07544*/ 02299000
*             THEN                  /* THEN PASS BACK RBA.   @ZA07544*/ 02300000
         CLI   RPLERREG(RRPL),8                                    1010 02301000
         BNE   @RF01010                                            1010 02302000
         CLI   RPLERRCD(RRPL),20                                   1010 02303000
         BNE   @RF01010                                            1010 02304000
*             RPLDDDD=RPARM1;       /* EXCLUSIVE CNTL RBA.   @ZA07544*/ 02305000
         ST    RPARM1,RPLDDDD(,RRPL)                               1011 02306000
*           ELSE                    /* NOT EXCL CNTL ERROR, TEST   1012 02307000
*                                      ANOTHER.              @ZA07544*/ 02308000
*             IF RPLERREG='0C'X     /* I/O ERROR             @XA07023*/ 02309000
*               THEN                                               1012 02310000
         B     @RC01010                                            1012 02311000
@RF01010 CLI   RPLERREG(RRPL),12                                   1012 02312000
         BNE   @RF01012                                            1012 02313000
*               PLH1ST=OFF;         /* THEN CLEAR 1ST        @XA07023*/ 02314000
         NI    PLH1ST(RPLH),B'10111111'                            1013 02315000
*         END;                      /* SOME TYPE OF ERROR.   @ZA07544*/ 02316000
@RF01012 DS    0H                                                  1014 02317000
@RC01010 DS    0H                                                  1015 02318000
*       RESPECIFY                                                  1015 02319000
*        (RWORK1,                                                  1015 02320000
*         RWORK2) UNRESTRICTED;                                    1015 02321000
@RC00936 DS    0H                                                  1016 02322000
*     END;                          /* END OF 1ST TIME               */ 02323000
*   ELSE                            /*                               */ 02324000
*     DO;                           /*                               */ 02325000
         B     @RC00835                                            1017 02326000
@RF00835 DS    0H                                                  1018 02327000
*       IF PLHEODX=ON               /* EOD TAKEN                     */ 02328000
*         THEN                      /* YES.                          */ 02329000
         TM    PLHEODX(RPLH),B'00000100'                           1018 02330000
         BNO   @RF01018                                            1018 02331000
*         DO;                       /*                               */ 02332000
*           RPLERREG='08'X;         /* SET LOGICAL ERR. CODE         */ 02333000
         MVI   RPLERREG(RRPL),X'08'                                1020 02334000
*           RPLERRCD=RPLEODER;      /* END OF DATA                   */ 02335000
         MVI   RPLERRCD(RRPL),X'04'                                1021 02336000
*           CALL EXIT;              /* EXIT.                 @X04SVES*/ 02337000
         BAL   @14,EXIT                                            1022 02338000
*         END;                      /* END OF REQ. AFTER EOD         */ 02339000
*       IF PLHSKPER=ON              /* READ SKIP FLAG ON             */ 02340000
*         THEN                      /* YES.                          */ 02341000
@RF01018 TM    PLHSKPER(RPLH),B'00100000'                          1024 02342000
         BNO   @RF01024                                            1024 02343000
*         DO;                       /*                               */ 02344000
*           CALL ADVPLH;            /* SKIP DATA CINV(S)             */ 02345000
         BAL   @14,ADVPLH                                          1026 02346000
*           CALL EXIT;              /* EXIT.                 @X04SVES*/ 02347000
         BAL   @14,EXIT                                            1027 02348000
*         END;                      /*                               */ 02349000
*       IF PLHDSCAN=ON              /* DATA SCAN FLAG ON             */ 02350000
*         THEN                      /* YES.                          */ 02351000
@RF01024 TM    PLHDSCAN(RPLH),B'00000001'                          1029 02352000
         BNO   @RF01029                                            1029 02353000
*         DO;                       /*                               */ 02354000
*           IF RPLREQ=RPLGET&       /* GET UPDATE                    */ 02355000
*               RPLUPD=ON           /* REQUEST                       */ 02356000
*             THEN                  /* YES.                          */ 02357000
         CLI   RPLREQ(RRPL),0                                      1031 02358000
         BNE   @RF01031                                            1031 02359000
         TM    RPLUPD(RRPL),B'00000010'                            1031 02360000
         BNO   @RF01031                                            1031 02361000
*             PLHRDEXC=ON;          /* SET READ EXCL FLAG            */ 02362000
         OI    PLHRDEXC(RPLH),B'00001000'                          1032 02363000
*           ELSE                    /* NOT GET UPDATE                */ 02364000
*             PLHRDEXC=OFF;         /* TURN OFF READ EXCL FLAG       */ 02365000
         B     @RC01031                                            1033 02366000
@RF01031 NI    PLHRDEXC(RPLH),B'11110111'                          1033 02367000
*           CALL SCANDATA;          /* SCAN TO FIND RECORD           */ 02368000
@RC01031 BAL   @14,SCANDATA                                        1034 02369000
*           CALL EXIT;              /* EXIT                  @X04SVES*/ 02370000
         BAL   @14,EXIT                                            1035 02371000
*         END;                      /* END OF SCAN                   */ 02372000
*       IF PLHSRINV=ON THEN         /* WAS SPANNED RECORD EXCEPTION     02373000
*                                      SET                   @X04SVES*/ 02374000
@RF01029 TM    PLHSRINV(RPLH),B'00010000'                          1037 02375000
         BNO   @RF01037                                            1037 02376000
*         DO;                       /* YES                   @X04SVES*/ 02377000
*           IF RPLADR=ON THEN       /* ADDR MODE             @X04SVES*/ 02378000
         TM    RPLADR(RRPL),B'01000000'                            1039 02379000
         BNO   @RF01039                                            1039 02380000
*             RPARM1=ADDR(RPLDDDD); /* YES                   @X04SVES*/ 02381000
         LA    RPARM1,RPLDDDD(,RRPL)                               1040 02382000
*           ELSE                    /* NO, KEYED             @X04SVES*/ 02383000
*             RPARM1=ADDR(PLHKEY);  /* POINT TO KEY          @X04SVES*/ 02384000
         B     @RC01039                                            1041 02385000
@RF01039 L     RPARM1,PLHKEYPT(,RPLH)                              1041 02386000
*I31:                                                              1042 02387000
*           DO;                     /* IDACALL(IDA019RA)             */ 02388000
@RC01039 DS    0H                                                  1042 02389000
I31      DS    0H                                                  1043 02390000
*             CALL IDA019RA;        /* EXIT TO IDA019RA              */ 02391000
         L     @15,@CV01000                                        1043 02392000
         BALR  @14,@15                                             1043 02393000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02394000
         BALR @11,0                                                     02395000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02396000
         USING *,@11                                                    02397000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02398000
         USING *+4095,@10                                               02399000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02400000
         LA    @10,4095(@11)                                            02401000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02402000
         L     @10,=A(@PSTART+4095)                                     02403000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02404000
         USING @PSTART+4095,@10                                         02405000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02406000
         L     @11,=A(@PSTART)                                          02407000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02408000
         USING @PSTART,@11                                              02409000
*           END I31;                /* SET POSITION          @X04SVES*/ 02410000
*           CALL EXIT;              /* RETURN                @X04SVES*/ 02411000
         BAL   @14,EXIT                                            1053 02412000
*         END;                      /*                       @X04SVES*/ 02413000
*       IF PLHNOADV=ON THEN         /* NO ADVANCE PLH SET            */ 02414000
@RF01037 TM    PLHNOADV(RPLH),B'00001000'                          1055 02415000
         BNO   @RF01055                                            1055 02416000
*         DO;                       /* YES.                          */ 02417000
*           PLHRSTRT=OFF;           /* TURN OFF INV          @XA05682   02418000
*                                      PUT POSITION          @XA05682*/ 02419000
         NI    PLHRSTRT(RPLH),B'01111111'                          1057 02420000
*           IF PLHRECP=>PLHFSP THEN /* AT END OF CINV BUFFER         */ 02421000
         CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        1058 02422000
         BL    @RF01058                                            1058 02423000
*             CALL ADVPLH;          /* ADVANCE TO NEXT BUFFER        */ 02424000
         BAL   @14,ADVPLH                                          1059 02425000
*         END;                      /* END OF NO ADVANCE             */ 02426000
*       ELSE                        /* INVALID PLH                   */ 02427000
*         DO;                                                      1061 02428000
         B     @RC01055                                            1061 02429000
@RF01055 DS    0H                                                  1062 02430000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 02431000
         MVI   RPLERREG(RRPL),X'08'                                1062 02432000
*           RPLERRCD=RPLNOPTR;      /* NO POSITION DEFINED           */ 02433000
         MVI   RPLERRCD(RRPL),X'58'                                1063 02434000
*         END;                      /* END OF INVALID PLH            */ 02435000
*     END;                          /* END OF NOT 1ST TIME           */ 02436000
@RC01055 DS    0H                                                  1066 02437000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 02438000
@RC00835 BAL   @14,EXIT                                            1066 02439000
*   GEN REFS(IBFLP3);                                              1067 02440000
*                                          /* ICM INSTRUCTION        */ 02441000
MASK0    EQU   0                             MASK OF 0                  02442000
ICMGEN   ICM   RWORK2,MASK0,IBFLP3(RBUFC)    PICK UP DATA CINV PTR      02443000
*   END PLHEXP;                     /* END OF PLH EXCEPTION          */ 02444000
@EL00006 DS    0H                                                  1068 02445000
@EF00006 DS    0H                                                  1068 02446000
@ER00006 BR    @14                                                 1068 02447000
*                                                                  1069 02448000
*   /*****************************************************************/ 02449000
*   /*                                                               */ 02450000
*   /* SEQUENTIAL INSERT (CREATE OR MASS INSERT) POSITION            */ 02451000
*   /* VERIFICATION ROUTINE                                          */ 02452000
*   /*                                                               */ 02453000
*   /*****************************************************************/ 02454000
*                                                                  1069 02455000
*SQICHECK:                                                         1069 02456000
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                          1069 02457000
SQICHECK DS    0H                                                  1070 02458000
*   GEN(IDASVR14);                  /* SAVE R14                      */ 02459000
         IDASVR14                                                       02460000
*   IF PLH1ST=OFF THEN              /* 1ST REQUEST AFTER OPEN        */ 02461000
         TM    PLH1ST(RPLH),B'01000000'                            1071 02462000
         BNZ   @RF01071                                            1071 02463000
*     DO;                           /* NO.                           */ 02464000
*       IF PLHASKBF=ON THEN         /* ASK BFR ON            @X04SVRQ*/ 02465000
         TM    PLHASKBF(RPLH),B'00100000'                          1073 02466000
         BNO   @RF01073                                            1073 02467000
*         DO;                       /*                       @X04SVRQ*/ 02468000
*           RPARM1=ZERO;            /* ADD MAX NO BFR        @X04SVRQ*/ 02469000
         SLR   RPARM1,RPARM1                                       1075 02470000
*I32:                                                              1076 02471000
*           DO;                     /* IDACALL(IDAABF)               */ 02472000
I32      DS    0H                                                  1077 02473000
*             CALL IDAABF;          /* EXIT TO IDAABF                */ 02474000
         L     @15,@CV00989                                        1077 02475000
         BALR  @14,@15                                             1077 02476000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02477000
         BALR @11,0                                                     02478000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02479000
         USING *,@11                                                    02480000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02481000
         USING *+4095,@10                                               02482000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02483000
         LA    @10,4095(@11)                                            02484000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02485000
         L     @10,=A(@PSTART+4095)                                     02486000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02487000
         USING @PSTART+4095,@10                                         02488000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02489000
         L     @11,=A(@PSTART)                                          02490000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02491000
         USING @PSTART,@11                                              02492000
*           END I32;                /* CALL ADD BFR          @X04SVRQ*/ 02493000
*         END;                      /*                       @X04SVRQ*/ 02494000
*       IF PLHINVAL=ON|             /* PLH POSITION NOT SET OR       */ 02495000
*           PLHSKPER=ON|            /* READ SKIP ERROR OR            */ 02496000
*           PLHEODX=ON|             /* END OF DATA ON READ OR        */ 02497000
*           PLHBWD=ON|              /* PREV BWD REQ.         @X04SVRQ*/ 02498000
*           PLHDSCAN=ON THEN        /* EXCLUSIVE CTL ERROR           */ 02499000
@RF01073 TM    PLHINVAL(RPLH),B'00100110'                          1088 02500000
         BNZ   @RT01088                                            1088 02501000
         TM    PLHBWD(RPLH),B'00010000'                            1088 02502000
         BO    @RT01088                                            1088 02503000
         TM    PLHDSCAN(RPLH),B'00000001'                          1088 02504000
         BNO   @RF01088                                            1088 02505000
@RT01088 DS    0H                                                  1089 02506000
*         DO;                       /* YES. 1 OR MORE OF ABOVE       */ 02507000
*SETPST:                            /* SET INSERT POSITION           */ 02508000
*           IF RPLKEY=ON THEN       /* KEYED REQUEST                 */ 02509000
SETPST   TM    RPLKEY(RRPL),B'10000000'                            1090 02510000
         BO    @RT01090                                            1090 02511000
*             GO TO IPLOCATE;       /* USE DIRECT LOCATE             */ 02512000
*           CALL GETINCI;           /* SET UP FOR LOCATE RBA         */ 02513000
         BAL   @14,GETINCI                                         1092 02514000
*           CALL EXIT;              /* EXIT                  @X04SVES*/ 02515000
         BAL   @14,EXIT                                            1093 02516000
*         END;                      /* END OF PLH EXCEPTIONS         */ 02517000
*       IF RPLKEY=OFF THEN          /* KEYED REQUEST                 */ 02518000
@RF01088 TM    RPLKEY(RRPL),B'10000000'                            1095 02519000
         BZ    @RT01095                                            1095 02520000
*         GO TO SETPST;             /* GO SET POSITION TO EOD        */ 02521000
*       IF PLHKEYMD=OFF THEN        /* KEYED PROCESS MODE            */ 02522000
         TM    PLHKEYMD(RPLH),B'00100000'                          1097 02523000
         BNZ   @RF01097                                            1097 02524000
*         DO;                       /* NO.                           */ 02525000
*           RPLERREG='08'X;         /* LOGICAL ERROR                 */ 02526000
         MVI   RPLERREG(RRPL),X'08'                                1099 02527000
*           RPLERRCD=RPLNOPTR;      /* INVALID REQ           @XA05661*/ 02528000
         MVI   RPLERRCD(RRPL),X'58'                                1100 02529000
*           CALL EXIT;              /* EXIT                  @X04SVES*/ 02530000
         BAL   @14,EXIT                                            1101 02531000
*         END;                      /* END OF NOT KEYED MODE         */ 02532000
*       RESPECIFY                                                  1103 02533000
*        (RWORK1,                                                  1103 02534000
*         RWORK2,                                                  1103 02535000
*         RWORK3) RESTRICTED;                                      1103 02536000
@RF01097 DS    0H                                                  1104 02537000
*       RPARM1=AMDKEYLN;            /* KEY LENGTH                    */ 02538000
         L     @15,AMBDSB(,RAMB)                                   1104 02539000
         LH    RPARM1,AMDKEYLN(,@15)                               1104 02540000
*       RBUFC=RPLAREA+AMDRKP;       /* POINT TO NEW KEY              */ 02541000
         LH    RBUFC,AMDRKP(,@15)                                  1105 02542000
         AL    RBUFC,RPLAREA(,RRPL)                                1105 02543000
*       RWORK2=ADDR(PLHKEY);        /* POINT TO PREVIOUS KEY         */ 02544000
         L     RWORK2,PLHKEYPT(,RPLH)                              1106 02545000
*       RWORK1=RPARM1;              /* LENGTH FOR CLCL               */ 02546000
         LR    RWORK1,RPARM1                                       1107 02547000
*       RWORK3=RPARM1;              /* LENGTH FOR CLCL               */ 02548000
         LR    RWORK3,RPARM1                                       1108 02549000
*       GEN(CLCL  RBUFC,RWORK2);    /* COMPARE KEYS                  */ 02550000
         CLCL  RBUFC,RWORK2                                             02551000
*       GEN(BH HIGHSEQ);            /* NEW KEY HIGH                  */ 02552000
         BH HIGHSEQ                                                     02553000
*       GEN(BE EQSEQ);              /* NEW KEY EQUAL                 */ 02554000
         BE EQSEQ                                                       02555000
*SQCKERR:                           /* NEW KEY < PREVIOUS            */ 02556000
*       RPLERREG='08'X;             /* LOGICAL ERROR                 */ 02557000
SQCKERR  MVI   RPLERREG(RRPL),X'08'                                1112 02558000
*       RPLERRCD=RPLSEQCK;          /* SEQUENCE CHECK ERROR          */ 02559000
         MVI   RPLERRCD(RRPL),X'0C'                                1113 02560000
*       PLHNOADV=ON;                /* LEAVE POSITIO UNCHANGED.    1114 02561000
*                                                            @X04SVRQ*/ 02562000
         OI    PLHNOADV(RPLH),B'00001000'                          1114 02563000
*       CALL EXIT;                  /* EXIT                  @X04SVES*/ 02564000
         BAL   @14,EXIT                                            1115 02565000
*HIGHSEQ:                                                          1116 02566000
*       PLHSAVE1=RPARM1-RWORK1;     /* NEW KEY > PREVIOUS            */ 02567000
HIGHSEQ  LR    @00,RPARM1                                          1116 02568000
         SLR   @00,RWORK1                                          1116 02569000
         ST    @00,PLHSAVE1(,RPLH)                                 1116 02570000
*       IF AMBCREAT=ON THEN         /* CREATE MODE                   */ 02571000
         TM    AMBCREAT(RAMB),B'10000000'                          1117 02572000
         BNO   @RF01117                                            1117 02573000
*         CALL EXIT;                /* YES. EXIT             @X04SVES*/ 02574000
         BAL   @14,EXIT                                            1118 02575000
*       ELSE                                                       1119 02576000
*         ;                         /* NOT CREATE MODE               */ 02577000
@RF01117 DS    0H                                                  1120 02578000
*EXCLCK:                            /* DETERMINE IF BUFFER IS IN   1120 02579000
*                                      EXCLUSIVE CONTROL             */ 02580000
*       IF PLHRSTRT=ON THEN         /* INV PUT ON?           @X04SVRQ*/ 02581000
EXCLCK   TM    PLHRSTRT(RPLH),B'10000000'                          1120 02582000
         BO    @RT01120                                            1120 02583000
*         GOTO IPLOCATE;            /* REPOSITION TO USER KEY      1121 02584000
*                                                            @X04SVRQ*/ 02585000
*       IF PLHRCODE=RPLPUT&PLHLRECL>AMDCINV-LENGTH(IDACIDF)-LENGTH(     02586000
*           IDARDF) THEN            /* PREV. PUT S.R.        @X04SVRQ*/ 02587000
         CLI   PLHRCODE(RPLH),1                                    1122 02588000
         BNE   @RF01122                                            1122 02589000
         L     @15,AMBDSB(,RAMB)                                   1122 02590000
         L     @00,AMDCINV(,@15)                                   1122 02591000
         SL    @00,@CF00289                                        1122 02592000
         C     @00,PLHLRECL(,RPLH)                                 1122 02593000
         BL    @RT01122                                            1122 02594000
*         GOTO IPLOCATE;            /* SEARCH FOR INSERT PT. @X04SVRQ*/ 02595000
*       IF PLHDBUFC=ZERO|           /* IF NO POINTER TO DATA BUFC OR    02596000
*                                                            @ZA07544*/ 02597000
*           (PLHDBUFC->BUFCEXC=OFF& /* BUFFER-EXCLUSIVE AND  @ZA07544*/ 02598000
*           PLHDBUFC->BUFCMW=OFF) THEN/* MUST-WRITE BOTH OFF @ZA07544*/ 02599000
@RF01122 L     @15,PLHDBUFC(,RPLH)                                 1124 02600000
         LTR   @15,@15                                             1124 02601000
         BZ    @RT01124                                            1124 02602000
         TM    BUFCEXC(@15),B'00000010'                            1124 02603000
         BNZ   @RF01124                                            1124 02604000
         TM    BUFCMW(@15),B'10000000'                             1124 02605000
         BZ    @RT01124                                            1124 02606000
*         GO TO IPLOCATE;           /* SEARCH FOR INSERT POINT       */ 02607000
*       IF PLHNOADV=OFF THEN        /* ADVANCE PLH NEEDED            */ 02608000
@RF01124 TM    PLHNOADV(RPLH),B'00001000'                          1126 02609000
         BNZ   @RF01126                                            1126 02610000
*         DO;                       /* YES.                          */ 02611000
*           CALL ADVPLH;            /* ADVANCE PLH                   */ 02612000
         BAL   @14,ADVPLH                                          1128 02613000
*           PLHNOADV=ON;            /* SET INDICATOR                 */ 02614000
         OI    PLHNOADV(RPLH),B'00001000'                          1129 02615000
*         END;                      /* END ADVPLH NEEDED             */ 02616000
*       RWORK2=PLHRECP;             /* NEXT RECORD PTR               */ 02617000
@RF01126 L     RWORK2,PLHRECP(,RPLH)                               1131 02618000
*       IF RWORK2<PLHFSP THEN       /* AT END OF CINV                */ 02619000
         CL    RWORK2,PLHFSP(,RPLH)                                1132 02620000
         BNL   @RF01132                                            1132 02621000
*         DO;                       /* NO.                           */ 02622000
*           RBUFC=RPLAREA+AMDRKP;   /* POINT TO NEW KEY              */ 02623000
         L     @15,AMBDSB(,RAMB)                                   1134 02624000
         LH    @14,AMDRKP(,@15)                                    1134 02625000
         L     RBUFC,RPLAREA(,RRPL)                                1134 02626000
         ALR   RBUFC,@14                                           1134 02627000
*           RWORK2=RWORK2+AMDRKP;   /* NEXT RECORD KEY               */ 02628000
         ALR   RWORK2,@14                                          1135 02629000
*           RWORK1=AMDKEYLN;        /* KEY LENGTH                    */ 02630000
         LH    RWORK1,AMDKEYLN(,@15)                               1136 02631000
*           RWORK3=RWORK1;          /* COPY FOR CLCL                 */ 02632000
         LR    RWORK3,RWORK1                                       1137 02633000
*           GEN(CLCL RBUFC,RWORK2); /* COMPARE KEYS                  */ 02634000
         CLCL RBUFC,RWORK2                                              02635000
*           GEN(BH IPLOCATE);       /* NEW KEY >                     */ 02636000
         BH IPLOCATE                                                    02637000
*           GEN(BE DUPREC);         /* NEW KEY =, ERROR              */ 02638000
         BE DUPREC                                                      02639000
*           CALL EXIT;              /* SEQUENCE IS OK        @X04SVES*/ 02640000
         BAL   @14,EXIT                                            1141 02641000
*         END;                      /* END NEXT KEY COMPARE          */ 02642000
*       ELSE                        /* INSERT AT END OF DATA         */ 02643000
*         DO;                       /* IN CINV.                      */ 02644000
         B     @RC01132                                            1143 02645000
@RF01132 DS    0H                                                  1144 02646000
*           IF PLHIBUFC=0 THEN      /* IF DB/DC AND SO NO INDEX BUFC,   02647000
*                                                            @ZA07544*/ 02648000
         L     @15,PLHIBUFC(,RPLH)                                 1144 02649000
         LTR   @15,@15                                             1144 02650000
         BZ    @RT01144                                            1144 02651000
*             GOTO IPLOCATE;        /* SEARCH FOR INSERT POINT.    1145 02652000
*                                                            @ZA07544*/ 02653000
*           RBUFC=PLHIBUFC->BUFCBAD;/* POINT TO INDEX RECORD         */ 02654000
         L     RBUFC,BUFCBAD(,@15)                                 1146 02655000
*           RFY                                                    1147 02656000
*             RWORK0 RSTD;          /*                               */ 02657000
*           IF PLHDBUFC->BUFCMW=ON THEN/* BUFFER IN OUTPUT MODE      */ 02658000
         L     @15,PLHDBUFC(,RPLH)                                 1148 02659000
         TM    BUFCMW(@15),B'10000000'                             1148 02660000
         BNO   @RF01148                                            1148 02661000
*             RWORK0=PLHDBUFC->BUFCORBA;/* YES. USE OUTPUT RBA       */ 02662000
         L     RWORK0,BUFCORBA(,@15)                               1149 02663000
*           ELSE                    /* NO.                           */ 02664000
*             RWORK0=PLHDBUFC->BUFCDDDD;/* USE INPUT RBA             */ 02665000
         B     @RC01148                                            1150 02666000
@RF01148 L     @15,PLHDBUFC(,RPLH)                                 1150 02667000
         L     RWORK0,BUFCDDDD(,@15)                               1150 02668000
*           RWORK1=RBUFC->IXHPTLS;  /* PTR LENGTH MASK               */ 02669000
@RC01148 SLR   RWORK1,RWORK1                                       1151 02670000
         IC    RWORK1,IXHPTLS(,RBUFC)                              1151 02671000
*           RWORK3=IXSHEP;          /* PTR CURRENT ENTRY             */ 02672000
         L     RWORK3,IXSHEP+200(,RPLH)                            1152 02673000
*           RWORK2=ZERO;            /* CLEAR REGISTER                */ 02674000
         SLR   RWORK2,RWORK2                                       1153 02675000
*           GEN(EX RWORK1,ICMPTR1); /* PICK UP PTR                   */ 02676000
         EX RWORK1,ICMPTR1                                              02677000
*           RWORK2=RBUFC->IXHBRBA+  /* CONVERT INTO RBA              */ 02678000
*               (RWORK2*AMDCINV);   /* DETERMINE IF DATA AND         */ 02679000
         L     @15,AMBDSB(,RAMB)                                   1155 02680000
         LR    @09,RWORK2                                          1155 02681000
         M     @08,AMDCINV(,@15)                                   1155 02682000
         AL    @09,IXHBRBA(,RBUFC)                                 1155 02683000
         LR    RWORK2,@09                                          1155 02684000
*           IF RWORK0=RWORK2 THEN   /* INDEX POSITION AGREE          */ 02685000
         CLR   RWORK0,RWORK2                                       1156 02686000
         BNE   @RF01156                                            1156 02687000
*             DO;                   /* YES.                          */ 02688000
*               RWORK1=RWORK3->IBFLPF;/* ENTRY F VALUE               */ 02689000
         SLR   RWORK1,RWORK1                                       1158 02690000
         IC    RWORK1,IBFLPF(,RWORK3)                              1158 02691000
*               IF PLHSAVE1=>RWORK1 THEN/* COMPARE COUNT => F        */ 02692000
         C     RWORK1,PLHSAVE1(,RPLH)                              1159 02693000
         BH    @RF01159                                            1159 02694000
*                 DO;               /* YES.                          */ 02695000
*                   RPARM1=RWORK3->IBFLPL;/* ENTRY L VALUE           */ 02696000
         SLR   RPARM1,RPARM1                                       1161 02697000
         IC    RPARM1,IBFLPL(,RWORK3)                              1161 02698000
*                   RWORK2=RWORK3-RPARM1;/* POSITION OF ENTRY KEY    */ 02699000
         LR    RWORK2,RWORK3                                       1162 02700000
         SLR   RWORK2,RPARM1                                       1162 02701000
*                   RBUFC=RPLAREA+AMDRKP+RWORK1;/* NEW KEY F+1     1163 02702000
*                                      POSITION                      */ 02703000
         LH    RBUFC,AMDRKP(,@15)                                  1163 02704000
         AL    RBUFC,RPLAREA(,RRPL)                                1163 02705000
         ALR   RBUFC,RWORK1                                        1163 02706000
*                   RWORK1=RPARM1;  /* COMPARE LENGTH                */ 02707000
         LR    RWORK1,RPARM1                                       1164 02708000
*                   RWORK3=RPARM1;  /* COMPARE LENGTH                */ 02709000
         LR    RWORK3,RPARM1                                       1165 02710000
*                   GEN(CLCL RBUFC,RWORK2) ;/* COMPARE KEYS          */ 02711000
         CLCL RBUFC,RWORK2                                              02712000
*                   GEN(BNH SQIEXIT);/* OK IF NOT HIGH               */ 02713000
         BNH SQIEXIT                                                    02714000
*                 END;              /* END OF ENTRY COMPARE          */ 02715000
*             END;                  /* END OF INDEX COMPARE          */ 02716000
@RF01159 DS    0H                                                  1170 02717000
*IPLOCATE:                          /* LOCATE VIA INDEX              */ 02718000
*           RFY                                                    1170 02719000
*             RWORK0 UNRSTD;        /*                               */ 02720000
@RF01156 DS    0H                                                  1170 02721000
IPLOCATE DS    0H                                                  1171 02722000
*           RPARM1=RPLAREA+AMDRKP;  /* POINT TO SEARCH ARG           */ 02723000
         L     @15,AMBDSB(,RAMB)                                   1171 02724000
         LH    RPARM1,AMDRKP(,@15)                                 1171 02725000
         AL    RPARM1,RPLAREA(,RRPL)                               1171 02726000
*I33:                                                              1172 02727000
*           DO;                     /* IDACALL(IDA019RA)             */ 02728000
I33      DS    0H                                                  1173 02729000
*             CALL IDA019RA;        /* EXIT TO IDA019RA              */ 02730000
         L     @15,@CV01000                                        1173 02731000
         BALR  @14,@15                                             1173 02732000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02733000
         BALR @11,0                                                     02734000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02735000
         USING *,@11                                                    02736000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02737000
         USING *+4095,@10                                               02738000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02739000
         LA    @10,4095(@11)                                            02740000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02741000
         L     @10,=A(@PSTART+4095)                                     02742000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02743000
         USING @PSTART+4095,@10                                         02744000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02745000
         L     @11,=A(@PSTART)                                          02746000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02747000
         USING @PSTART,@11                                              02748000
*           END I33;                /*                       @X04SVRQ*/ 02749000
*         END;                      /* END OF LOCATE                 */ 02750000
*     END;                          /* END OF NOT 1ST TIME           */ 02751000
*   ELSE                            /* FIRST REQUEST AFTER           */ 02752000
*     DO;                           /* OPEN                          */ 02753000
         B     @RC01071                                            1185 02754000
@RF01071 DS    0H                                                  1186 02755000
*       PLHASKBF=ON;                /* SET ASK BFR           @ZA14833*/ 02756000
         OI    PLHASKBF(RPLH),B'00100000'                          1186 02757000
*       IF AMBCREAT=ON              /* CREATE MODE                   */ 02758000
*         THEN                      /* YES.                          */ 02759000
         TM    AMBCREAT(RAMB),B'10000000'                          1187 02760000
         BNO   @RF01187                                            1187 02761000
*         DO;                       /*                               */ 02762000
*           PLHNRBA=ARDHRBA;        /* SAVE RBA               @XM9135*/ 02763000
         L     @15,AMBDSB(,RAMB)                                   1189 02764000
         L     @15,AMDPARDB(,@15)                                  1189 02765000
         L     @00,ARDHRBA(,@15)                                   1189 02766000
         ST    @00,PLHNRBA(,RPLH)                                  1189 02767000
*           IF RPLKEY=ON THEN       /* IF RPL SAYS KEY       @ZA14831*/ 02768000
         TM    RPLKEY(RRPL),B'10000000'                            1190 02769000
         BNO   @RF01190                                            1190 02770000
*             PLHKEYMD=ON;          /* SET PLH IN KEYED MODE @ZA14831*/ 02771000
         OI    PLHKEYMD(RPLH),B'00100000'                          1191 02772000
*           ELSE                    /* RPL NO SAY KEY        @ZA14831*/ 02773000
*             PLHKEYMD=OFF;         /* RESET KEYED MODE      @ZA14831*/ 02774000
         B     @RC01190                                            1192 02775000
@RF01190 NI    PLHKEYMD(RPLH),B'11011111'                          1192 02776000
*           RPARM1=ZERO;            /* ADD MAX NO BFR        @X04SVRQ*/ 02777000
@RC01190 SLR   RPARM1,RPARM1                                       1193 02778000
*I34:                                                              1194 02779000
*           DO;                     /* IDACALL(IDAABF)               */ 02780000
I34      DS    0H                                                  1195 02781000
*             CALL IDAABF;          /* EXIT TO IDAABF                */ 02782000
         L     @15,@CV00989                                        1195 02783000
         BALR  @14,@15                                             1195 02784000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02785000
         BALR @11,0                                                     02786000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02787000
         USING *,@11                                                    02788000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02789000
         USING *+4095,@10                                               02790000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02791000
         LA    @10,4095(@11)                                            02792000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02793000
         L     @10,=A(@PSTART+4095)                                     02794000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02795000
         USING @PSTART+4095,@10                                         02796000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02797000
         L     @11,=A(@PSTART)                                          02798000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02799000
         USING @PSTART,@11                                              02800000
*           END I34;                /* CALL ADD BFR          @X04SVRQ*/ 02801000
*           IF AMBSPEED=OFF&        /* RECOVERY AND                  */ 02802000
*               AMDDST='1'B THEN    /* KEY SEQUENCED                 */ 02803000
         TM    AMBSPEED(RAMB),B'00001000'                          1205 02804000
         BNZ   @RF01205                                            1205 02805000
         L     @15,AMBDSB(,RAMB)                                   1205 02806000
         TM    AMDDST(@15),B'10000000'                             1205 02807000
         BNO   @RF01205                                            1205 02808000
*             ARDHRBA=AMDCIPCA*AMDCINV;/* 1ST CI IN NEXT CA  @X04SVRQ*/ 02809000
         L     @14,AMDPARDB(,@15)                                  1206 02810000
         L     @00,AMDCINV(,@15)                                   1206 02811000
         MH    @00,AMDCIPCA(,@15)                                  1206 02812000
         ST    @00,ARDHRBA(,@14)                                   1206 02813000
*           ELSE                    /* SPEED OR ESDS                 */ 02814000
*             ARDHRBA=AMDCINV;      /* NEXT CI RBA           @X04SVRQ   02815000
*                                      GET EMPTY BUFFER              */ 02816000
         B     @RC01205                                            1207 02817000
@RF01205 L     @15,AMBDSB(,RAMB)                                   1207 02818000
         L     @14,AMDPARDB(,@15)                                  1207 02819000
         L     @00,AMDCINV(,@15)                                   1207 02820000
         ST    @00,ARDHRBA(,@14)                                   1207 02821000
*I35:                                                              1208 02822000
*           DO;                     /* IDACALL(IDAGNNFL)             */ 02823000
@RC01205 DS    0H                                                  1208 02824000
I35      DS    0H                                                  1209 02825000
*             CALL IDAGNNFL;        /* EXIT TO IDAGNNFL              */ 02826000
         L     @15,@CV00994                                        1209 02827000
         BALR  @14,@15                                             1209 02828000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02829000
         BALR @11,0                                                     02830000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02831000
         USING *,@11                                                    02832000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 02833000
         USING *+4095,@10                                               02834000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 02835000
         LA    @10,4095(@11)                                            02836000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 02837000
         L     @10,=A(@PSTART+4095)                                     02838000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 02839000
         USING @PSTART+4095,@10                                         02840000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02841000
         L     @11,=A(@PSTART)                                          02842000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02843000
         USING @PSTART,@11                                              02844000
*           END I35;                /*                       @X04SVRQ*/ 02845000
*           IF RPLERREG^='00'X THEN /* BUFFER ERROR.         @X04SVRQ*/ 02846000
         CLI   RPLERREG(RRPL),0                                    1219 02847000
         BE    @RF01219                                            1219 02848000
*             CALL EXIT;            /* RETURN.               @X04SVRQ*/ 02849000
         BAL   @14,EXIT                                            1220 02850000
*           RPARM1=ZERO;            /* SET RBA + MUST WRITE  @X04SVRQ*/ 02851000
@RF01219 SLR   RPARM1,RPARM1                                       1221 02852000
*           DO;                     /* SET OUTPUT RBA                */ 02853000
*             BUFCORBA=RPARM1;                                     1223 02854000
         L     @15,PLHDBUFC(,RPLH)                                 1223 02855000
         ST    RPARM1,BUFCORBA(,@15)                               1223 02856000
*             BUFCMW=ON;            /* SET MUST WRITE                */ 02857000
         OI    BUFCMW(@15),B'10000000'                             1224 02858000
*           END;                                                   1225 02859000
*           BUFXIRBA=BUFCORBA;      /* SET BUFC EXCL. INPUT RBA.   1226 02860000
*                                                            @X04SVRQ*/ 02861000
         L     @14,PLHDBUFC(,RPLH)                                 1226 02862000
         L     @14,BUFCORBA(,@14)                                  1226 02863000
         ST    @14,BUFXIRBA(,@15)                                  1226 02864000
*           BUFCDDDD=BUFCORBA;      /* SET BUFC INPUT RBA.   @X04SVRQ*/ 02865000
         ST    @14,BUFCDDDD(,@15)                                  1227 02866000
*           BUFCVAL=ON;             /* SET BUFC VALID        @X04SVRQ*/ 02867000
*           BUFCEXC=ON;             /* SET BUFC EXCL.        @X04SVRQ*/ 02868000
         OI    BUFCVAL(@15),B'00000110'                            1229 02869000
*           RESPECIFY                                              1230 02870000
*            (RWORK1,                                              1230 02871000
*             RWORK2,                                              1230 02872000
*             RWORK3) RSTD;                                        1230 02873000
*           RBUFC=PLHDBUFC;         /* BUFC ADDRESS            XM9962*/ 02874000
         LR    RBUFC,@15                                           1231 02875000
*           RWORK2=RBUFC->BUFCBAD;  /* BUFFER ADDRESS                */ 02876000
         L     RWORK2,BUFCBAD(,RBUFC)                              1232 02877000
*           PLHFSP=RWORK2;          /* INIT PTR FREE SPACE           */ 02878000
         ST    RWORK2,PLHFSP(,RPLH)                                1233 02879000
*           PLHRECP=RWORK2;         /* INIT PTR INSERT SLOT          */ 02880000
         ST    RWORK2,PLHRECP(,RPLH)                               1234 02881000
*           RWORK3=AMDCINV          /* NUMBER OF FREE BYTES          */ 02882000
*               -LENGTH(IDACIDF);   /* IN CI                         */ 02883000
         L     @15,AMBDSB(,RAMB)                                   1235 02884000
         L     RWORK3,AMDCINV(,@15)                                1235 02885000
         SL    RWORK3,@CF00068                                     1235 02886000
*           RBUFC=RWORK2+RWORK3;    /* POINT TO CIDF                 */ 02887000
         LR    RBUFC,RWORK2                                        1236 02888000
         ALR   RBUFC,RWORK3                                        1236 02889000
*           PLHRDFP=RBUFC;          /* INIT PTR TO RDF SLOT          */ 02890000
         ST    RBUFC,PLHRDFP(,RPLH)                                1237 02891000
*           RBUFC->CIDFOSET=ZERO;   /* INIT CIDF OFFSET              */ 02892000
         SLR   @00,@00                                             1238 02893000
         STH   @00,CIDFOSET(,RBUFC)                                1238 02894000
*           RBUFC->CIDFLL=RWORK3;   /* INIT CIDF LL                  */ 02895000
         STH   RWORK3,CIDFLL(,RBUFC)                               1239 02896000
*           RWORK1=ZERO;            /* PAD WITH ZERO                 */ 02897000
         SLR   RWORK1,RWORK1                                       1240 02898000
*           GEN(MVCL RWORK2,RBUFC); /* ZERO BUFFER AREA              */ 02899000
         MVCL RWORK2,RBUFC                                              02900000
*           PLHINVAL=OFF;           /* RESET INVALID FLAG            */ 02901000
*           PLH1ST=OFF;             /* RESET 1ST REQUEST FLAG        */ 02902000
         NI    PLHINVAL(RPLH),B'10111101'                          1243 02903000
*           AMDASPA=AMDASPA-AMDCINV;/* DECREMENT DATA-SPACE          */ 02904000
         L     @15,AMBDSB(,RAMB)                                   1244 02905000
         L     @00,AMDASPA(,@15)                                   1244 02906000
         SL    @00,AMDCINV(,@15)                                   1244 02907000
         ST    @00,AMDASPA(,@15)                                   1244 02908000
*           RESPECIFY                                              1245 02909000
*            (RWORK1,                                              1245 02910000
*             RWORK2,                                              1245 02911000
*             RWORK3) UNRSTD;                                      1245 02912000
*         END;                      /* END OF CREATE 1ST TIME        */ 02913000
*       ELSE                        /* NOT CREATE                    */ 02914000
*         GO TO SETPST;             /* LOCATE INS PT         @X04SVMR*/ 02915000
*     END;                          /* END OF 1ST TIME               */ 02916000
*SQIEXIT:                                                          1249 02917000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 02918000
@RC01071 DS    0H                                                  1249 02919000
SQIEXIT  BAL   @14,EXIT                                            1249 02920000
*EQSEQ:                             /* NEW KEY = PLHKEY              */ 02921000
*   PLHSAVE1=RPARM1;                /* SET NO. OF = CHARACTERS       */ 02922000
EQSEQ    ST    RPARM1,PLHSAVE1(,RPLH)                              1250 02923000
*   IF AMBCREAT=OFF THEN            /* NOT CREATE AND PREVIOUS       */ 02924000
         TM    AMBCREAT(RAMB),B'10000000'                          1251 02925000
         BNZ   @RF01251                                            1251 02926000
*     IF PLHRCODE=RPLPOINT|         /* REQUEST WAS POINT             */ 02927000
*         PLHRCODE=RPLERASE THEN    /* OR ERASE. CANNOT TELL         */ 02928000
         CLI   PLHRCODE(RPLH),3                                    1252 02929000
         BE    @RT01252                                            1252 02930000
         CLI   PLHRCODE(RPLH),5                                    1252 02931000
         BE    @RT01252                                            1252 02932000
*       GO TO EXCLCK;               /* IF DUPLICATE YET.             */ 02933000
*DUPREC:                            /* DUPLICATE RECORD              */ 02934000
*   RPLERREG='08'X;                 /* LOGICAL ERROR                 */ 02935000
@RF01251 DS    0H                                                  1254 02936000
DUPREC   MVI   RPLERREG(RRPL),X'08'                                1254 02937000
*   RPLERRCD=RPLDUP;                /* DUPLICATE REC. ERROR          */ 02938000
         MVI   RPLERRCD(RRPL),X'08'                                1255 02939000
*   PLHNOADV=ON;                    /* LEAVE POSITION UNCHANGED.   1256 02940000
*                                                            @X04SVRQ*/ 02941000
         OI    PLHNOADV(RPLH),B'00001000'                          1256 02942000
*   CALL MOVEKEY;                   /* SAVE KEY IN PLH       @X04SVRQ*/ 02943000
         BAL   @14,MOVEKEY                                         1257 02944000
*   CALL EXIT;                      /* EXIT                  @X04SVES*/ 02945000
         BAL   @14,EXIT                                            1258 02946000
*ICMPTR1:                                                          1259 02947000
*   GEN(ICM  RWORK2,@00,IBFLP3(RWORK3));/* EXTRACT IX ENTRY PTR      */ 02948000
ICMPTR1  ICM  RWORK2,@00,IBFLP3(RWORK3)                                 02949000
*   END SQICHECK;                                                  1260 02950000
@EL00007 DS    0H                                                  1260 02951000
@EF00007 DS    0H                                                  1260 02952000
@ER00007 BR    @14                                                 1260 02953000
*                                                                  1261 02954000
*   /*****************************************************************/ 02955000
*   /*                                                               */ 02956000
*   /* GET INSERT CONTROL INTERVAL. FOR ADDRESSED INSERT, INSERT     */ 02957000
*   /* POINT IS END OF DATA SET.                                     */ 02958000
*   /*                                                               */ 02959000
*   /*****************************************************************/ 02960000
*                                                                  1261 02961000
*GETINCI:                                                          1261 02962000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               1261 02963000
GETINCI  DS    0H                                                  1262 02964000
*   GEN(IDASVR14);                  /* SAVE R14                      */ 02965000
         IDASVR14                                                       02966000
*   IF AMBINBUF=ON&                 /* IF SHR(4), THEN       @X04SVMR*/ 02967000
*       AMBSCRA=OFF&AMBUCRA=OFF&    /* IF NOT A CATLG,       @X04SVMR*/ 02968000
*       AMBCAT=OFF THEN             /* SET NO SPACE.         @X04SVMR*/ 02969000
         TM    AMBINBUF(RAMB),B'00000001'                          1263 02970000
         BNO   @RF01263                                            1263 02971000
         TM    AMBSCRA(RAMB),B'00011100'                           1263 02972000
         BNZ   @RF01263                                            1263 02973000
*     DO;                           /*                       @X04SVMR*/ 02974000
*       RPLERRCD=RPLNOEXT;          /* UNABLE TO EXTEND      @X04SVMR*/ 02975000
         MVI   RPLERRCD(RRPL),X'1C'                                1265 02976000
*       RPLERREG='08'X;             /* LOGICAL ERROR         @X04SVMR*/ 02977000
         MVI   RPLERREG(RRPL),X'08'                                1266 02978000
*       CALL EXIT;                  /* TAKE ERROR EXIT       @X04SVMR*/ 02979000
         BAL   @14,EXIT                                            1267 02980000
*     END;                          /* END OF SHR(4) CODE    @X04SVMR*/ 02981000
*TEST:                                                             1269 02982000
*   RPARM1=ADDR(IDADIWA);           /* POINT TO DIWA.        @X04SVRQ*/ 02983000
@RF01263 DS    0H                                                  1269 02984000
TEST     L     RPARM1,AMBIWA(,RAMB)                                1269 02985000
*   GEN REFS(DIWATV)(TS DIWATV(RPARM1));/* SEE IF RESOURCE IS AVAIL.    02986000
*                                                            @X04SVRQ*/ 02987000
         TS DIWATV(RPARM1)                                              02988000
*   BC(8,PROCESS);                  /* DIWA LOCKED.          @X04SVRQ*/ 02989000
         BC    8,PROCESS                                           1271 02990000
*   RFY                                                            1272 02991000
*     RWORK0 RSTD;                  /* GET WORK REG.         @X04SVRQ*/ 02992000
*   RWORK0=DEFR0;                   /* SET DEFER PARAM.      @X04SVRQ*/ 02993000
         SLR   RWORK0,RWORK0                                       1273 02994000
*I37:                                                              1274 02995000
*   DO;                             /* IDACALL(IDADRQ)               */ 02996000
I37      DS    0H                                                  1275 02997000
*     CALL IDADRQ;                  /* EXIT TO IDADRQ                */ 02998000
         L     @15,@CV00992                                        1275 02999000
         BALR  @14,@15                                             1275 03000000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 03001000
         BALR @11,0                                                     03002000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 03003000
         USING *,@11                                                    03004000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 03005000
         USING *+4095,@10                                               03006000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 03007000
         LA    @10,4095(@11)                                            03008000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 03009000
         L     @10,=A(@PSTART+4095)                                     03010000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 03011000
         USING @PSTART+4095,@10                                         03012000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 03013000
         L     @11,=A(@PSTART)                                          03014000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 03015000
         USING @PSTART,@11                                              03016000
*   END I37;                        /* DEFER REQUEST.        @X04SVRQ*/ 03017000
*   GOTO TEST;                      /* RETRY RESOURCE.       @X04SVRQ*/ 03018000
         B     TEST                                                1285 03019000
*   RFY                                                            1286 03020000
*     RWORK0 UNRSTD;                /* FREE WORK REG.        @X04SVRQ*/ 03021000
*PROCESS:                           /* DIWA IS NOW LOCKED    @X04SVMR*/ 03022000
*   DIWPLH=RPLH;                    /* SET DIWA OWNERSHIP    @ZA14809*/ 03023000
PROCESS  L     @05,AMBIWA(,RAMB)                                   1287 03024000
         ST    RPLH,DIWPLH(,@05)                                   1287 03025000
*   PLHARDB=0;                      /* RESET PLH POSITION    @ZA07552*/ 03026000
         SLR   @05,@05                                             1288 03027000
         ST    @05,PLHARDB(,RPLH)                                  1288 03028000
*   RPARM1=ARDHRBA;                 /* HIGH USED RBA         @X04SVMR*/ 03029000
         L     @15,AMBDSB(,RAMB)                                   1289 03030000
         L     @14,AMDPARDB(,@15)                                  1289 03031000
         L     RPARM1,ARDHRBA(,@14)                                1289 03032000
*   IF RPARM1^=ZERO THEN            /* IF NON-ZERO,          @X04SVMR*/ 03033000
         CR    RPARM1,@05                                          1290 03034000
         BE    @RF01290                                            1290 03035000
*     RPARM1=RPARM1-AMDCINV;        /* BACK UP 1 CI          @X04SVMR*/ 03036000
         SL    RPARM1,AMDCINV(,@15)                                1291 03037000
*   RPLDDDD=RPARM1;                 /* SET RBA IN RPL        @X04SVMR*/ 03038000
@RF01290 ST    RPARM1,RPLDDDD(,RRPL)                               1292 03039000
*   IF RPLSEQ=OFF|                  /* IF DIR/SKP OR         @X04SVMR*/ 03040000
*       PLHINVAL=ON|                /* PLH NOT VALID OR      @X04SVRQ*/ 03041000
*       PLHDSCAN=ON|                /* EXCL CTL ERROR OR     @X04SVRQ*/ 03042000
*       PLHSKPER=ON|                /* READ SKIP ERROR OR    @X04SVRQ*/ 03043000
*       PLHEODX=ON|                 /* READ END OF DATA OR   @X04SVRQ*/ 03044000
*       PLHBWD=ON|                  /* PREV. BWD REQ OR      @X04SVRQ*/ 03045000
*       PLH1ST=ON|                  /* FIRST TIME OR         @X04SVRQ*/ 03046000
*       BUFCEXC=OFF|                /* BUFFER NOT IN EXCL CNTL     1293 03047000
*                                                            @X04SVMR*/ 03048000
*       BUFCDDDD^=RPARM1|           /* OR NOT RIGHT RBA OR   @X04SVMR*/ 03049000
*       (PLHRCODE=RPLPUT&PLHLRECL>AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF 03050000
*       ))|                         /* PREV PUT S.R. OR      @X04SVRQ*/ 03051000
*       AMBGSR=ON|AMBLSR=ON THEN    /* SHARED RESRC          @X04SVMR*/ 03052000
*                                                                  1293 03053000
         TM    RPLSEQ(RRPL),B'00100000'                            1293 03054000
         BZ    @RT01293                                            1293 03055000
         TM    PLHINVAL(RPLH),B'00100111'                          1293 03056000
         BNZ   @RT01293                                            1293 03057000
         TM    PLHBWD(RPLH),B'00010000'                            1293 03058000
         BO    @RT01293                                            1293 03059000
         TM    PLH1ST(RPLH),B'01000000'                            1293 03060000
         BO    @RT01293                                            1293 03061000
         L     @05,PLHDBUFC(,RPLH)                                 1293 03062000
         TM    BUFCEXC(@05),B'00000010'                            1293 03063000
         BZ    @RT01293                                            1293 03064000
         CL    RPARM1,BUFCDDDD(,@05)                               1293 03065000
         BNE   @RT01293                                            1293 03066000
         CLI   PLHRCODE(RPLH),1                                    1293 03067000
         BNE   @GL00041                                            1293 03068000
         L     @05,AMBDSB(,RAMB)                                   1293 03069000
         L     @05,AMDCINV(,@05)                                   1293 03070000
         SL    @05,@CF00289                                        1293 03071000
         C     @05,PLHLRECL(,RPLH)                                 1293 03072000
         BL    @RT01293                                            1293 03073000
@GL00041 TM    AMBGSR(RAMB),B'01100000'                            1293 03074000
         BZ    @RF01293                                            1293 03075000
@RT01293 DS    0H                                                  1294 03076000
*     /***************************************************************/ 03077000
*     /*                                                             */ 03078000
*     /* CALL DIRECT RECORD LOCATE                                   */ 03079000
*     /*                                                             */ 03080000
*     /***************************************************************/ 03081000
*                                                                  1294 03082000
*I38:                                                              1294 03083000
*     DO;                           /* IDACALL(IDA019RA)             */ 03084000
I38      DS    0H                                                  1295 03085000
*       CALL IDA019RA;              /* EXIT TO IDA019RA              */ 03086000
         L     @15,@CV01000                                        1295 03087000
         BALR  @14,@15                                             1295 03088000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 03089000
         BALR @11,0                                                     03090000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 03091000
         USING *,@11                                                    03092000
*       GEN(USING *+4095,@10);      /* ESTABLISH SECOND BASE         */ 03093000
         USING *+4095,@10                                               03094000
*       GEN(LA    @10,4095(@11));   /* LOAD SECOND BASE              */ 03095000
         LA    @10,4095(@11)                                            03096000
*       GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE        */ 03097000
         L     @10,=A(@PSTART+4095)                                     03098000
*       GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE         */ 03099000
         USING @PSTART+4095,@10                                         03100000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 03101000
         L     @11,=A(@PSTART)                                          03102000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 03103000
         USING @PSTART,@11                                              03104000
*     END I38;                      /*                       @X04SVRQ*/ 03105000
*   IF RPLERREG='00'X               /* LOCATE ERROR                  */ 03106000
*     THEN                          /* NO.                           */ 03107000
@RF01293 CLI   RPLERREG(RRPL),0                                    1305 03108000
         BNE   @RF01305                                            1305 03109000
*     DO;                           /*                               */ 03110000
*       RBUFC=PLHDBUFC->BUFCBAD;    /* LOAD BUFFER ADDRESS           */ 03111000
         L     @15,PLHDBUFC(,RPLH)                                 1307 03112000
         L     RBUFC,BUFCBAD(,@15)                                 1307 03113000
*       BUFCORBA=BUFCDDDD;          /* SET OUTPUT RBA                */ 03114000
         L     @05,BUFCDDDD(,@15)                                  1308 03115000
         ST    @05,BUFCORBA(,@15)                                  1308 03116000
*       RPARM1=RBUFC+AMDCINV        /* POINT TO CIDF                 */ 03117000
*           -LENGTH(IDACIDF);       /*                               */ 03118000
         L     @05,AMBDSB(,RAMB)                                   1309 03119000
         LR    RPARM1,RBUFC                                        1309 03120000
         AL    RPARM1,AMDCINV(,@05)                                1309 03121000
         SL    RPARM1,@CF00068                                     1309 03122000
*       PLHFSP=RPARM1->CIDFOSET+RBUFC;/* INIT. PLH FREE SP PTR       */ 03123000
         LR    @05,RBUFC                                           1310 03124000
         AH    @05,CIDFOSET(,RPARM1)                               1310 03125000
         ST    @05,PLHFSP(,RPLH)                                   1310 03126000
*       PLHRECP=PLHFSP;             /* INIT. PLH RECORD PTR          */ 03127000
         ST    @05,PLHRECP(,RPLH)                                  1311 03128000
*       PLHRDFP=PLHFSP+RPARM1->CIDFLL;/* INIT. PLH RDF PTR           */ 03129000
         AH    @05,CIDFLL(,RPARM1)                                 1312 03130000
         ST    @05,PLHRDFP(,RPLH)                                  1312 03131000
*     END;                          /* END OF NO LOCATE ERROR        */ 03132000
*   ELSE                            /* ERROR.                @X04SVRQ*/ 03133000
*     DIWATV=ZERO;                  /* UNLOCK DIWA.          @X04SVRQ*/ 03134000
         B     @RC01305                                            1314 03135000
@RF01305 L     @05,AMBIWA(,RAMB)                                   1314 03136000
         MVI   DIWATV(@05),X'00'                                   1314 03137000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 03138000
@RC01305 BAL   @14,EXIT                                            1315 03139000
*   END GETINCI;                    /* END OF GETINCI PROC.          */ 03140000
@EL00008 DS    0H                                                  1316 03141000
@EF00008 DS    0H                                                  1316 03142000
@ER00008 BR    @14                                                 1316 03143000
*                                                                  1317 03144000
*   /*****************************************************************/ 03145000
*   /*                                                               */ 03146000
*   /* SCANDATA - REESTABLISH PLH RECORD POSITION AFTER OBTAINING    */ 03147000
*   /* EXCLUSIVE USE OF BUFFER IN SEQUENTIAL MODE.                   */ 03148000
*   /*                                                               */ 03149000
*   /*****************************************************************/ 03150000
*                                                                  1317 03151000
*SCANDATA:                                                         1317 03152000
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                          1317 03153000
SCANDATA DS    0H                                                  1318 03154000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 03155000
         IDASVR14                                                       03156000
*   IF RPLKEY=ON                    /* KEYED REQUEST                 */ 03157000
*     THEN                                                         1319 03158000
         TM    RPLKEY(RRPL),B'10000000'                            1319 03159000
         BNO   @RF01319                                            1319 03160000
*     RPARM1=ADDR(PLHKEY);          /* POINT TO SEARCH ARG           */ 03161000
         L     RPARM1,PLHKEYPT(,RPLH)                              1320 03162000
*   ELSE                            /* NO.                           */ 03163000
*     RPARM1=ADDR(PLHDDDD);         /* USE RBA AS SEARCH ARG         */ 03164000
         B     @RC01319                                            1321 03165000
@RF01319 LA    RPARM1,PLHDDDD(,RPLH)                               1321 03166000
*   IF PLHNOADV=ON                  /* NO ADVANCE SET                */ 03167000
*     THEN                                                         1322 03168000
@RC01319 TM    PLHNOADV(RPLH),B'00001000'                          1322 03169000
         BNO   @RF01322                                            1322 03170000
*     PLHSVADV=ON;                  /* REMEMBER NO ADVANCE           */ 03171000
         OI    PLHSVADV(RPLH),B'00000010'                          1323 03172000
*   ELSE                                                           1324 03173000
*     PLHSVADV=OFF;                 /* REMEMBER ADVANCE              */ 03174000
         B     @RC01322                                            1324 03175000
@RF01322 NI    PLHSVADV(RPLH),B'11111101'                          1324 03176000
*   PLHSAVE2=RPLOPTCD;              /* SAVE OPTCD IN PLH     @XA05682*/ 03177000
@RC01322 L     @05,RPLOPTCD(,RRPL)                                 1325 03178000
         ST    @05,PLHSAVE2(,RPLH)                                 1325 03179000
*   RPLGEN=OFF;                     /* GENERIC OFF           @XA05682*/ 03180000
*   RPLDIR=ON;                      /* FORCE DIRECT          @XA05682*/ 03181000
*   RPLSKP=OFF;                     /* SKP SEQ OFF           @XA05682*/ 03182000
         OI    RPLDIR(RRPL),B'01000000'                            1328 03183000
         NI    RPLGEN(RRPL),B'11101101'                            1328 03184000
*   RPLLRD=OFF;                     /* LRD OFF.              @X04SVRQ*/ 03185000
         NI    RPLLRD(RRPL),B'11110111'                            1329 03186000
*   IF RPLSEQ=ON                    /* SEQ REQUEST           @XA05682*/ 03187000
*     THEN                          /* YES                   @XA05682*/ 03188000
         TM    RPLSEQ(RRPL),B'00100000'                            1330 03189000
         BNO   @RF01330                                            1330 03190000
*     DO;                           /* SET SEARCH            @XA05682*/ 03191000
*       RPLKGE=ON;                  /* KGE ON                @XA05682*/ 03192000
*       RPLSEQ=OFF;                 /* TURN OFF SEQ          @XA05682*/ 03193000
         OI    RPLKGE(RRPL),B'00000100'                            1333 03194000
         NI    RPLSEQ(RRPL),B'11011111'                            1333 03195000
*     END;                          /* END SEQ PATH          @XA05682*/ 03196000
*   ELSE                                                           1335 03197000
*     ;                             /* NULL                  @XA05682*/ 03198000
@RF01330 DS    0H                                                  1336 03199000
*I39:                                                              1336 03200000
*   DO;                             /* IDACALL(IDA019RA)             */ 03201000
I39      DS    0H                                                  1337 03202000
*     CALL IDA019RA;                /* EXIT TO IDA019RA              */ 03203000
         L     @15,@CV01000                                        1337 03204000
         BALR  @14,@15                                             1337 03205000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 03206000
         BALR @11,0                                                     03207000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 03208000
         USING *,@11                                                    03209000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 03210000
         USING *+4095,@10                                               03211000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 03212000
         LA    @10,4095(@11)                                            03213000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 03214000
         L     @10,=A(@PSTART+4095)                                     03215000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 03216000
         USING @PSTART+4095,@10                                         03217000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 03218000
         L     @11,=A(@PSTART)                                          03219000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 03220000
         USING @PSTART,@11                                              03221000
*   END I39;                        /* DIRECT LOCATE         @X04SVRQ*/ 03222000
*   RPLOPTCD=PLHSAVE2;              /* RESTORE RPL           @XA05682*/ 03223000
         L     @05,PLHSAVE2(,RPLH)                                 1347 03224000
         ST    @05,RPLOPTCD(,RRPL)                                 1347 03225000
*   IF RPLERREG='00'X THEN          /* ERROR                         */ 03226000
         CLI   RPLERREG(RRPL),0                                    1348 03227000
         BNE   @RF01348                                            1348 03228000
*     DO;                           /* NO.                           */ 03229000
*       PLHDSCAN=OFF;               /* RESET SCANDATA FLAG           */ 03230000
         NI    PLHDSCAN(RPLH),B'11111110'                          1350 03231000
*       IF PLHSVADV=ON THEN         /* NO ADVANCE PLH BEFORE         */ 03232000
         TM    PLHSVADV(RPLH),B'00000010'                          1351 03233000
         BNO   @RF01351                                            1351 03234000
*         PLHNOADV=ON;              /* SET INDICATOR IN PLH          */ 03235000
         OI    PLHNOADV(RPLH),B'00001000'                          1352 03236000
*       ELSE                        /*                               */ 03237000
*         DO;                       /*                               */ 03238000
         B     @RC01351                                            1353 03239000
@RF01351 DS    0H                                                  1354 03240000
*           RPARM1=PLHRECP+AMDRKP;  /* LOCATE RECORD KEY             */ 03241000
         L     @05,AMBDSB(,RAMB)                                   1354 03242000
         LH    RPARM1,AMDRKP(,@05)                                 1354 03243000
         AL    RPARM1,PLHRECP(,RPLH)                               1354 03244000
*           IF RPLKEY=OFF|          /* ADDRESSED REQUEST             */ 03245000
*               RPLBWD=ON|          /* BWD REQUEST OR        @X04SVRQ*/ 03246000
*               PLHKEY(1:AMDKEYLN)= /* COMPARE WITH PLHKEY           */ 03247000
*               RPARM1->KEY(1:AMDKEYLN) THEN/* IF EQUAL MOVE         */ 03248000
         TM    RPLBWD(RRPL),B'00010000'                            1355 03249000
         BNZ   @RT01355                                            1355 03250000
         TM    RPLKEY(RRPL),B'10000000'                            1355 03251000
         BNO   @RT01355                                            1355 03252000
         L     @15,PLHKEYPT(,RPLH)                                 1355 03253000
         LH    @05,AMDKEYLN(,@05)                                  1355 03254000
         BCTR  @05,0                                               1355 03255000
         EX    @05,@SC01195                                        1355 03256000
         BNE   @RF01355                                            1355 03257000
@RT01355 DS    0H                                                  1356 03258000
*             CALL ADVPLH;          /* FORWARD 1 RECORD              */ 03259000
         BAL   @14,ADVPLH                                          1356 03260000
*         END;                      /* END ADV PLH                   */ 03261000
*     END;                          /* END NO ERROR                  */ 03262000
*   ELSE                                                           1359 03263000
*     IF RPLERREG='08'X THEN        /* LOGIC ERROR?          @ZA07544*/ 03264000
         B     @RC01348                                            1359 03265000
@RF01348 CLI   RPLERREG(RRPL),8                                    1359 03266000
         BNE   @RF01359                                            1359 03267000
*       DO;                         /* YES IF HERE           @ZA07544*/ 03268000
*         IF RPLERRCD=RPLEXCL THEN  /* EXCLUSIVE CTL         @ZA07544*/ 03269000
         CLI   RPLERRCD(RRPL),20                                   1361 03270000
         BNE   @RF01361                                            1361 03271000
*           DO;                     /* PROCESS EXCL CTL      @ZA07544*/ 03272000
*             PLHINVAL=OFF;         /* SET PLH VALID         @ZA07544*/ 03273000
*             PLHDSCAN=ON;          /* SET SCANDATA FLAG             */ 03274000
         OI    PLHDSCAN(RPLH),B'00000001'                          1364 03275000
         NI    PLHINVAL(RPLH),B'11111101'                          1364 03276000
*             IF PLHSVADV=ON THEN   /* ARE WE REMEMBERING TO NOT   1365 03277000
*                                      ADVANCE PLH           @ZA07544*/ 03278000
         TM    PLHSVADV(RPLH),B'00000010'                          1365 03279000
         BNO   @RF01365                                            1365 03280000
*               PLHNOADV=ON;        /* YES, SET FLAG         @ZA07544*/ 03281000
         OI    PLHNOADV(RPLH),B'00001000'                          1366 03282000
*           END;                    /* END EXCL CTL          @ZA07544*/ 03283000
*         ELSE                      /* NOT EXCLUSIVE ERROR   @X04SVRQ*/ 03284000
*           IF RPLBWD=ON&RPLERRCD=RPLNOREC THEN/* BWD/NRF    @ZA07544*/ 03285000
         B     @RC01361                                            1368 03286000
@RF01361 TM    RPLBWD(RRPL),B'00010000'                            1368 03287000
         BNO   @RF01368                                            1368 03288000
         CLI   RPLERRCD(RRPL),16                                   1368 03289000
         BNE   @RF01368                                            1368 03290000
*             DO;                   /* CLEAR NRF ERROR.      @X04SVRQ*/ 03291000
*               RPLERREG='00'X;     /* CLEAR RPL ERROR.      @X04SVRQ*/ 03292000
         MVI   RPLERREG(RRPL),X'00'                                1370 03293000
*               RPLERRCD='00'X;     /* CLEAR RPL ERROR.      @X04SVRQ*/ 03294000
         MVI   RPLERRCD(RRPL),X'00'                                1371 03295000
*               PLHINVAL=OFF;       /* SET PLH VALID.        @X04SVRQ*/ 03296000
*               PLHDSCAN=OFF;       /* RESET SCANDATA FLAG.  @X04SVRQ*/ 03297000
         NI    PLHINVAL(RPLH),B'11111100'                          1373 03298000
*               IF PLHRECP=PLHDBUFC->BUFCBAD|PLHRECP^=PLHFSP THEN/*     03299000
*                                      IF POSITION IS NOT AT END OF     03300000
*                                      BUFFER                @ZA07544*/ 03301000
         L     @05,PLHRECP(,RPLH)                                  1374 03302000
         L     @15,PLHDBUFC(,RPLH)                                 1374 03303000
         C     @05,BUFCBAD(,@15)                                   1374 03304000
         BE    @RT01374                                            1374 03305000
         C     @05,PLHFSP(,RPLH)                                   1374 03306000
         BE    @RF01374                                            1374 03307000
@RT01374 DS    0H                                                  1375 03308000
*                 CALL ADVPLH;      /* ADVANCE POSITION.     @X04SVRQ*/ 03309000
         BAL   @14,ADVPLH                                          1375 03310000
*               ELSE                /* POSITION AT END OF CI @ZA07544*/ 03311000
*                 DO;               /* SO DO SPECIAL HANDLING      1376 03312000
*                                                            @ZA07544*/ 03313000
         B     @RC01374                                            1376 03314000
@RF01374 DS    0H                                                  1377 03315000
*                   IF PLHRDFP->RDF1ST=ON THEN/* IF SPANNED RECORD 1377 03316000
*                                      SEGMENT, POINT        @ZA07544*/ 03317000
         L     @05,PLHRDFP(,RPLH)                                  1377 03318000
         TM    RDF1ST(@05),B'00010000'                             1377 03319000
         BNO   @RF01377                                            1377 03320000
*                     PLHRECP=PLHDBUFC->BUFCBAD;/* BACK TO BEGINNING    03321000
*                                                            @ZA07544*/ 03322000
         L     @05,PLHDBUFC(,RPLH)                                 1378 03323000
         L     @05,BUFCBAD(,@05)                                   1378 03324000
         ST    @05,PLHRECP(,RPLH)                                  1378 03325000
*                   ELSE            /* NOT SPANNED           @ZA07544*/ 03326000
*                     DO;           /* FOR NON SPANNED RECORD BACK UP   03327000
*                                      TO START OF RECORD    @ZA07544*/ 03328000
         B     @RC01377                                            1379 03329000
@RF01377 DS    0H                                                  1380 03330000
*                       PLHRECP=PLHRECP-PLHLRECL;/* MOVE POINTER BACK   03331000
*                                                            @ZA07544*/ 03332000
         L     @05,PLHRECP(,RPLH)                                  1380 03333000
         SL    @05,PLHLRECL(,RPLH)                                 1380 03334000
         ST    @05,PLHRECP(,RPLH)                                  1380 03335000
*                       PLHRDFC=PLHSAVE6;/* SET COUNT FOR BACKWARD 1381 03336000
*                                      DIRECTION             @ZA07544*/ 03337000
         L     @05,PLHSAVE6(,RPLH)                                 1381 03338000
         STH   @05,PLHRDFC(,RPLH)                                  1381 03339000
*                     END;          /*                       @ZA07544*/ 03340000
*                 END;              /* END SPECIAL HANDLING AT END OF   03341000
*                                      CI                    @ZA07544*/ 03342000
*             END;                  /* END CLEAR NRF ERROR.  @X04SVRQ*/ 03343000
*           ELSE                    /* NOT BWD WITH NRF      @ZA07544*/ 03344000
*             IF RPLERRCD=RPLINRBA THEN/* INVALID RBA?       @ZA07544*/ 03345000
         B     @RC01368                                            1385 03346000
@RF01368 CLI   RPLERRCD(RRPL),32                                   1385 03347000
         BNE   @RF01385                                            1385 03348000
*               DO;                 /* CLEAR INVALID RBA ERR @ZA07544*/ 03349000
*                 RPLERREG='00'X;   /* CLEAR RPL ERROR.      @ZA07544*/ 03350000
         MVI   RPLERREG(RRPL),X'00'                                1387 03351000
*                 RPLERRCD='00'X;   /* CLEAR RPL ERROR.      @ZA07544*/ 03352000
         MVI   RPLERRCD(RRPL),X'00'                                1388 03353000
*                 PLHINVAL=OFF;     /* SET PLH VALID.        @ZA07544*/ 03354000
*                 PLHDSCAN=OFF;     /* RESET SCANDATA FLAG.  @ZA07544*/ 03355000
         NI    PLHINVAL(RPLH),B'11111100'                          1390 03356000
*                 CALL ADVPLH;      /* ADVANCE POSITION.     @ZA07544*/ 03357000
         BAL   @14,ADVPLH                                          1391 03358000
*               END;                /* END INVALID RBA       @ZA07544*/ 03359000
*       END;                        /* END LOCATE ERROR.     @X04SVRQ*/ 03360000
@RF01385 DS    0H                                                  1393 03361000
@RC01368 DS    0H                                                  1393 03362000
@RC01361 DS    0H                                                  1394 03363000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 03364000
@RF01359 DS    0H                                                  1394 03365000
@RC01348 BAL   @14,EXIT                                            1394 03366000
*   END SCANDATA;                   /* END OF SCANDATA               */ 03367000
@EL00009 DS    0H                                                  1395 03368000
@EF00009 DS    0H                                                  1395 03369000
@ER00009 BR    @14                                                 1395 03370000
*                                                                  1396 03371000
*   /*****************************************************************/ 03372000
*   /*                                                               */ 03373000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * *     @X04SVES*/ 03374000
*   /*                                                       @X04SVES*/ 03375000
*   /* EXIT SUBROUTINE                                       @X04SVES*/ 03376000
*   /* FUNCTION - RESTORES REGISTER 14 FROM PLH              @X04SVES*/ 03377000
*   /* PUSHDOWN LIST AND RETURNS                             @X04SVES*/ 03378000
*   /*                                                       @X04SVES*/ 03379000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * *     @X04SVES*/ 03380000
*   /*                                                               */ 03381000
*   /*****************************************************************/ 03382000
*                                                                  1396 03383000
*EXIT:                                                             1396 03384000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVES*/ 03385000
EXIT     DS    0H                                                  1397 03386000
*   GEN(IDARST14);                  /* RESTORE REG 14        @X04SVES*/ 03387000
         IDARST14                                                       03388000
*   END EXIT;                       /* RETURN                @X04SVES*/ 03389000
@EL00010 DS    0H                                                  1398 03390000
@EF00010 DS    0H                                                  1398 03391000
@ER00010 BR    @14                                                 1398 03392000
*                                                                  1399 03393000
*   /*****************************************************************/ 03394000
*   /*                                                               */ 03395000
*   /* MODULE EXIT ROUTINE --- IF SHARED RESOURCES, FREES INDEX      */ 03396000
*   /* BUFFER (IF ANY). RESTORES REGISTER 14 & RETURNS TO CALLER.    */ 03397000
*   /* ALSO FREES DATA BUFFER (IF ANY) IF SHROPTION 4        @ZA29446*/ 03398000
*   /*                                                               */ 03399000
*   /*****************************************************************/ 03400000
*                                                                  1399 03401000
*MODEXIT:                                                          1399 03402000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVRQ*/ 03403000
MODEXIT  DS    0H                                                  1400 03404000
*   IF AMBGSR=ON|AMBLSR=ON|AMBINBUF=ON THEN/* SHR RESOURCE OR SHARED    03405000
*                                      DATA SET.             @X04SVRQ*/ 03406000
         TM    AMBGSR(RAMB),B'01100000'                            1400 03407000
         BNZ   @RT01400                                            1400 03408000
         TM    AMBINBUF(RAMB),B'00000001'                          1400 03409000
         BNO   @RF01400                                            1400 03410000
@RT01400 DS    0H                                                  1401 03411000
*     DO;                           /*                       @X04SVRQ*/ 03412000
*       RBUFC=PLHIBUFC;             /* POINT TO IX BUFC      @X04SVRQ*/ 03413000
         L     RBUFC,PLHIBUFC(,RPLH)                               1402 03414000
*       IF RBUFC^=ZERO THEN         /* INDEX BFR PRESENT     @X04SVRQ*/ 03415000
         LTR   RBUFC,RBUFC                                         1403 03416000
         BZ    @RF01403                                            1403 03417000
*         DO;                       /*                       @X04SVRQ*/ 03418000
*           RAMB=AMBLIX;            /* POINT TO INDEX AMB.   @X04SVRQ*/ 03419000
         L     @05,RPLDACB(,RRPL)                                  1405 03420000
         L     @05,ACBAMBL(,@05)                                   1405 03421000
         L     RAMB,AMBLIX(,@05)                                   1405 03422000
*I40:                                                              1406 03423000
*           DO;                     /* IDACALL(IDAFREEB)             */ 03424000
I40      DS    0H                                                  1407 03425000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 03426000
         L     @15,@CV00993                                        1407 03427000
         BALR  @14,@15                                             1407 03428000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 03429000
         BALR @11,0                                                     03430000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 03431000
         USING *,@11                                                    03432000
*             GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE         */ 03433000
         USING *+4095,@10                                               03434000
*             GEN(LA    @10,4095(@11));/* LOAD SECOND BASE           */ 03435000
         LA    @10,4095(@11)                                            03436000
*             GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 03437000
         L     @10,=A(@PSTART+4095)                                     03438000
*             GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE   */ 03439000
         USING @PSTART+4095,@10                                         03440000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 03441000
         L     @11,=A(@PSTART)                                          03442000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 03443000
         USING @PSTART,@11                                              03444000
*           END I40;                /* FREE IX BFR           @X04SVRQ*/ 03445000
*           RAMB=AMBLDTA;           /* POINT TO DATA AMB.    @X04SVRQ*/ 03446000
         L     @05,RPLDACB(,RRPL)                                  1417 03447000
         L     @05,ACBAMBL(,@05)                                   1417 03448000
         L     RAMB,AMBLDTA(,@05)                                  1417 03449000
*         END;                      /*                       @X04SVRQ*/ 03450000
*       IF AMBINBUF=ON THEN         /* ONLY SHR OPTION 4     @ZA29446*/ 03451000
@RF01403 TM    AMBINBUF(RAMB),B'00000001'                          1419 03452000
         BNO   @RF01419                                            1419 03453000
*         DO;                       /*                       @ZA29446*/ 03454000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC    @ZA29446*/ 03455000
         L     RBUFC,PLHDBUFC(,RPLH)                               1421 03456000
*           IF RBUFC^=ZERO&         /* DATA BUFFER PRESENT   @ZA29446*/ 03457000
*               RBUFC->BUFCMW=ON THEN/* AND NEEDS WRITING    @ZA29446*/ 03458000
         LTR   RBUFC,RBUFC                                         1422 03459000
         BZ    @RF01422                                            1422 03460000
         TM    BUFCMW(RBUFC),B'10000000'                           1422 03461000
         BNO   @RF01422                                            1422 03462000
*             DO;                                                  1423 03463000
*I41:                                                              1424 03464000
*               DO;                 /* IDACALL(IDAWRBFR)             */ 03465000
I41      DS    0H                                                  1425 03466000
*                 CALL IDAWRBFR;    /* EXIT TO IDAWRBFR              */ 03467000
         L     @15,@CV00999                                        1425 03468000
         BALR  @14,@15                                             1425 03469000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 03470000
         BALR @11,0                                                     03471000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 03472000
         USING *,@11                                                    03473000
*                 GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE     */ 03474000
         USING *+4095,@10                                               03475000
*                 GEN(LA    @10,4095(@11));/* LOAD SECOND BASE       */ 03476000
         LA    @10,4095(@11)                                            03477000
*                 GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND 1430 03478000
*                                      BASE                          */ 03479000
         L     @10,=A(@PSTART+4095)                                     03480000
*                 GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND  1431 03481000
*                                      BASE                          */ 03482000
         USING @PSTART+4095,@10                                         03483000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 03484000
         L     @11,=A(@PSTART)                                          03485000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 03486000
         USING @PSTART,@11                                              03487000
*               END I41;            /* WRITE THE BUFFER      @ZA29446*/ 03488000
*             END;                                                 1435 03489000
*         END;                      /*                       @ZA29446*/ 03490000
@RF01422 DS    0H                                                  1437 03491000
*     END;                          /*                       @X04SVRQ*/ 03492000
@RF01419 DS    0H                                                  1438 03493000
*   IF RPLERREG^=0&                 /* WAS THERE ANY ERROR   @ZA14809*/ 03494000
*       DIWATV^=0&                  /* IS DIWA LOCKED        @ZA14809*/ 03495000
*       DIWPLH=RPLH THEN            /* DIWA OWNED BY PLH     @ZA14809*/ 03496000
@RF01400 CLI   RPLERREG(RRPL),0                                    1438 03497000
         BE    @RF01438                                            1438 03498000
         L     @05,AMBIWA(,RAMB)                                   1438 03499000
         CLI   DIWATV(@05),0                                       1438 03500000
         BE    @RF01438                                            1438 03501000
         L     @15,DIWPLH(,@05)                                    1438 03502000
         CR    @15,RPLH                                            1438 03503000
         BNE   @RF01438                                            1438 03504000
*     DO;                                                          1439 03505000
*       IF DIWATV^=0&               /* IS DIWA LOCKED        @ZA14809*/ 03506000
*           DIWPLH=RPLH THEN        /* DIWA OWNED BY PLH     @ZA14809*/ 03507000
         CLI   DIWATV(@05),0                                       1440 03508000
         BE    @RF01440                                            1440 03509000
         CR    @15,RPLH                                            1440 03510000
         BNE   @RF01440                                            1440 03511000
*         DIWATV=ZERO;              /* YES, UNLOCK DIWA      @ZA12223*/ 03512000
         MVI   DIWATV(@05),X'00'                                   1441 03513000
*     END;                                                         1442 03514000
@RF01440 DS    0H                                                  1443 03515000
*   GEN(IDARST14);                  /* RESTORE REG 14        @X04SVRQ*/ 03516000
@RF01438 DS    0H                                                  1443 03517000
         IDARST14                                                       03518000
*   RETURN;                         /*                       @X04SVRQ*/ 03519000
@EL00011 DS    0H                                                  1444 03520000
@EF00011 DS    0H                                                  1444 03521000
@ER00011 BR    @14                                                 1444 03522000
*   END MODEXIT;                    /*                       @X04SVRQ*/ 03523000
@PB00011 DS    0H                                                  1446 03524000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA             */ 03525000
         IDAPATCH                                                       03526000
*   END IDA019R4                                                   1447 03527000
*                                                                  1447 03528000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 03529000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 03530000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 03531000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 03532000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 03533000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 03534000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 03535000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 03536000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 03537000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 03538000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 03539000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 03540000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 03541000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 03542000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 03543000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 03544000
*                                                                  1447 03545000
*       ;                                                          1447 03546000
@EL00001 DS    0H                                                  1447 03547000
@EF00001 DS    0H                                                  1447 03548000
@ER00001 BR    @14                                                 1447 03549000
@DATA    DS    0H                                                       03550000
@SM01187 MVC   PLHKEY(0,@15),KEY(RWORK2)                                03551000
@SC01190 CLC   PLHKEY(0,@07),KEY(RWORK2)                                03552000
@SC01195 CLC   PLHKEY(0,@15),KEY(RPARM1)                                03553000
@DATD    DSECT                                                          03554000
         DS    0F                                                       03555000
IDA019R4 CSECT                                                          03556000
         DS    0F                                                       03557000
@CF00054 DC    F'1'                                                     03558000
@CH00054 EQU   @CF00054+2                                               03559000
@CF00158 DC    F'3'                                                     03560000
@CF00068 DC    F'4'                                                     03561000
@CF00289 DC    F'7'                                                     03562000
@DATD    DSECT                                                          03563000
         DS    0D                                                       03564000
IDA019R4 CSECT                                                          03565000
         DS    0F                                                       03566000
@SIZDATD DC    AL1(0)                                                   03567000
         DC    AL3(@ENDDATD-@DATD)                                      03568000
@CV00989 DC    V(IDAABF)                                                03569000
@CV00990 DC    V(IDAADVPH)                                              03570000
@CV00991 DC    V(IDADARTV)                                              03571000
@CV00992 DC    V(IDADRQ)                                                03572000
@CV00993 DC    V(IDAFREEB)                                              03573000
@CV00994 DC    V(IDAGNNFL)                                              03574000
@CV00995 DC    V(IDAGNXT)                                               03575000
@CV00996 DC    V(IDAGRB)                                                03576000
@CV00997 DC    V(IDARXBD)                                               03577000
@CV00998 DC    V(IDATJXIT)                                              03578000
@CV00999 DC    V(IDAWRBFR)                                              03579000
@CV01000 DC    V(IDA019RA)                                              03580000
@CV01002 DC    V(IDA019S6)                                              03581000
@CV01003 DC    V(IDA019RL)                                              03582000
@CV01004 DC    V(IDA019RM)                                              03583000
@CV01005 DC    V(IDA019RU)                                              03584000
@CV01001 DC    V(IDA019RK)                                              03585000
         DS    0D                                                       03586000
HWORD4   DC    H'4'                                                     03587000
@CB01013 DC    X'0000'                                                  03588000
@DATD    DSECT                                                          03589000
*                                                          /*@X04SVLC*/ 03590000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           03591000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              03592000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             03593000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                03594000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 03595000
RDFLEN   EQU   3                        LENGTH OF RDF                   03596000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         03597000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       03598000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  03599000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              03600000
@DATD    DSECT                                                          03601000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                03602000
@ENDDATD EQU   *                                                        03603000
IDA019R4 CSECT                                                          03604000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03605000
@01      EQU   01                                                       03606000
@02      EQU   02                                                       03607000
@03      EQU   03                                                       03608000
@04      EQU   04                                                       03609000
@05      EQU   05                                                       03610000
@06      EQU   06                                                       03611000
@07      EQU   07                                                       03612000
@08      EQU   08                                                       03613000
@09      EQU   09                                                       03614000
@10      EQU   10                                                       03615000
@11      EQU   11                                                       03616000
@12      EQU   12                                                       03617000
@13      EQU   13                                                       03618000
@14      EQU   14                                                       03619000
@15      EQU   15                                                       03620000
RWORK0   EQU   @00                                                      03621000
RRPL     EQU   @01                                                      03622000
RPLH     EQU   @02                                                      03623000
RAMB     EQU   @03                                                      03624000
RBUFC    EQU   @04                                                      03625000
RWORK1   EQU   @05                                                      03626000
RWORK2   EQU   @06                                                      03627000
RWORK3   EQU   @07                                                      03628000
RPARM1   EQU   @12                                                      03629000
R14      EQU   @14                                                      03630000
RWORK4   EQU   @08                                                      03631000
RWORK5   EQU   @09                                                      03632000
R1       EQU   @01                                                      03633000
R10      EQU   @10                                                      03634000
R11      EQU   @11                                                      03635000
R13      EQU   @13                                                      03636000
R15      EQU   @15                                                      03637000
IFGRPL   EQU   0                                                        03638000
RPLCOMN  EQU   IFGRPL                                                   03639000
RPLIDWD  EQU   RPLCOMN                                                  03640000
RPLREQ   EQU   RPLIDWD+2                                                03641000
RPLLEN   EQU   RPLIDWD+3                                                03642000
RPLECB   EQU   RPLCOMN+8                                                03643000
RPLFDBWD EQU   RPLCOMN+12                                               03644000
RPLFDBK  EQU   RPLFDBWD+1                                               03645000
RPLRTNCD EQU   RPLFDBK                                                  03646000
RPLERREG EQU   RPLRTNCD                                                 03647000
RPLCNDCD EQU   RPLFDBK+1                                                03648000
RPLCMPON EQU   RPLCNDCD                                                 03649000
RPLFDB2  EQU   RPLCMPON                                                 03650000
RPLERRCD EQU   RPLCNDCD+1                                               03651000
RPLFDB3  EQU   RPLERRCD                                                 03652000
RPLKEYLE EQU   RPLCOMN+16                                               03653000
RPLDACB  EQU   RPLCOMN+24                                               03654000
RPLAREA  EQU   RPLCOMN+32                                               03655000
RPLARG   EQU   RPLCOMN+36                                               03656000
RPLOPTCD EQU   RPLCOMN+40                                               03657000
RPLOPT1  EQU   RPLOPTCD                                                 03658000
RPLLOC   EQU   RPLOPT1                                                  03659000
RPLDIR   EQU   RPLOPT1                                                  03660000
RPLSEQ   EQU   RPLOPT1                                                  03661000
RPLSKP   EQU   RPLOPT1                                                  03662000
RPLKGE   EQU   RPLOPT1                                                  03663000
RPLGEN   EQU   RPLOPT1                                                  03664000
RPLECBSW EQU   RPLOPT1                                                  03665000
RPLOPT2  EQU   RPLOPTCD+1                                               03666000
RPLKEY   EQU   RPLOPT2                                                  03667000
RPLADR   EQU   RPLOPT2                                                  03668000
RPLBWD   EQU   RPLOPT2                                                  03669000
RPLLRD   EQU   RPLOPT2                                                  03670000
RPLUPD   EQU   RPLOPT2                                                  03671000
RPLNSP   EQU   RPLOPT2                                                  03672000
RPLOPT3  EQU   RPLOPTCD+2                                               03673000
RPLNXTRP EQU   RPLCOMN+44                                               03674000
RPLRLEN  EQU   RPLCOMN+48                                               03675000
RPLBUFL  EQU   RPLCOMN+52                                               03676000
RPLOPTC2 EQU   RPLCOMN+56                                               03677000
RPLOPT5  EQU   RPLOPTC2                                                 03678000
RPLWRTYP EQU   RPLOPT5                                                  03679000
RPLOPT6  EQU   RPLOPTC2+1                                               03680000
RPLUNTYP EQU   RPLOPT6                                                  03681000
RPLOPT7  EQU   RPLOPTC2+2                                               03682000
RPLCNOPT EQU   RPLOPT7                                                  03683000
RPLOPT8  EQU   RPLOPTC2+3                                               03684000
RPLRBAR  EQU   RPLCOMN+60                                               03685000
RPLAIXID EQU   RPLRBAR+2                                                03686000
RPLDDDD  EQU   RPLRBAR+4                                                03687000
RPLEXTDS EQU   RPLCOMN+68                                               03688000
RPLEXTD1 EQU   RPLEXTDS                                                 03689000
IFGACB   EQU   0                                                        03690000
ACBCOMN  EQU   IFGACB                                                   03691000
ACBLENG  EQU   ACBCOMN+2                                                03692000
ACBLENG2 EQU   ACBLENG                                                  03693000
ACBAMBL  EQU   ACBCOMN+4                                                03694000
ACBJWA   EQU   ACBAMBL                                                  03695000
ACBMACRF EQU   ACBCOMN+12                                               03696000
ACBMACR1 EQU   ACBMACRF                                                 03697000
ACBADR   EQU   ACBMACR1                                                 03698000
ACBCNV   EQU   ACBMACR1                                                 03699000
ACBMACR2 EQU   ACBMACRF+1                                               03700000
ACBBUFPL EQU   ACBCOMN+20                                               03701000
ACBMACR3 EQU   ACBBUFPL                                                 03702000
ACBRECFM EQU   ACBCOMN+24                                               03703000
ACBCCTYP EQU   ACBCOMN+25                                               03704000
ACBOPT   EQU   ACBCOMN+26                                               03705000
ACBDSORG EQU   ACBOPT                                                   03706000
ACBCROPS EQU   ACBDSORG                                                 03707000
ACBEXLST EQU   ACBCOMN+36                                               03708000
ACBDDNM  EQU   ACBCOMN+40                                               03709000
ACBAMETH EQU   ACBDDNM+3                                                03710000
ACBOFLGS EQU   ACBCOMN+48                                               03711000
ACBEXFG  EQU   ACBOFLGS                                                 03712000
ACBIOSFG EQU   ACBOFLGS                                                 03713000
ACBINFLG EQU   ACBCOMN+50                                               03714000
ACBUJFCB EQU   ACBCOMN+52                                               03715000
ACBBLKSZ EQU   ACBCOMN+60                                               03716000
IDAAMBL  EQU   0                                                        03717000
AMBLEOV  EQU   IDAAMBL+12                                               03718000
AMBLEFLG EQU   AMBLEOV                                                  03719000
AMBLDDNM EQU   IDAAMBL+16                                               03720000
AMBLIDF  EQU   AMBLDDNM                                                 03721000
AMBLQ    EQU   AMBLIDF+7                                                03722000
AMBLVC   EQU   IDAAMBL+28                                               03723000
AMBLTYPE EQU   IDAAMBL+30                                               03724000
AMBLPATH EQU   AMBLTYPE                                                 03725000
AMBLSHAR EQU   IDAAMBL+33                                               03726000
AMBLWRIT EQU   AMBLSHAR                                                 03727000
AMBLFLG1 EQU   IDAAMBL+35                                               03728000
AMBLFLG2 EQU   IDAAMBL+36                                               03729000
AMBLDTA  EQU   IDAAMBL+52                                               03730000
AMBLIX   EQU   IDAAMBL+56                                               03731000
IDAAMB   EQU   0                                                        03732000
AMBPH    EQU   IDAAMB+12                                                03733000
AMBDSB   EQU   IDAAMB+20                                                03734000
AMBEOVR  EQU   IDAAMB+24                                                03735000
AMBFLG0  EQU   AMBEOVR                                                  03736000
AMBFLG1  EQU   IDAAMB+25                                                03737000
AMBCREAT EQU   AMBFLG1                                                  03738000
AMBSPEED EQU   AMBFLG1                                                  03739000
AMBJRN   EQU   AMBFLG1                                                  03740000
AMBINBUF EQU   AMBFLG1                                                  03741000
AMBDSORG EQU   IDAAMB+26                                                03742000
AMBIOBAD EQU   IDAAMB+28                                                03743000
AMBINFL  EQU   IDAAMB+42                                                03744000
AMBCAT   EQU   AMBINFL                                                  03745000
AMBSCRA  EQU   AMBINFL                                                  03746000
AMBUCRA  EQU   AMBINFL                                                  03747000
AMBUPX   EQU   AMBINFL                                                  03748000
AMBDEBPT EQU   IDAAMB+44                                                03749000
AMBOFLGS EQU   IDAAMB+48                                                03750000
AMBFLG2  EQU   IDAAMB+49                                                03751000
AMBEOVPT EQU   IDAAMB+56                                                03752000
AMBIWA   EQU   IDAAMB+64                                                03753000
AMBCSWD1 EQU   IDAAMB+84                                                03754000
AMBAFLG  EQU   AMBCSWD1                                                 03755000
AMBLSR   EQU   AMBAFLG                                                  03756000
AMBGSR   EQU   AMBAFLG                                                  03757000
AMBDFR   EQU   AMBAFLG                                                  03758000
IDAPLHDR EQU   0                                                        03759000
PLHCNT   EQU   IDAPLHDR+1                                               03760000
IDAPLH   EQU   0                                                        03761000
PLHFLG1  EQU   IDAPLH+2                                                 03762000
PLHASKBF EQU   PLHFLG1                                                  03763000
PLHSSR   EQU   PLHFLG1                                                  03764000
PLHRDEXC EQU   PLHFLG1                                                  03765000
PLHFLG2  EQU   IDAPLH+3                                                 03766000
PLHUPD   EQU   PLHFLG2                                                  03767000
PLHKEYMD EQU   PLHFLG2                                                  03768000
PLHADDTE EQU   PLHFLG2                                                  03769000
PLHSVADV EQU   PLHFLG2                                                  03770000
PLHEFLGS EQU   IDAPLH+4                                                 03771000
PLH1ST   EQU   PLHEFLGS                                                 03772000
PLHSKPER EQU   PLHEFLGS                                                 03773000
PLHSRINV EQU   PLHEFLGS                                                 03774000
PLHNOADV EQU   PLHEFLGS                                                 03775000
PLHEODX  EQU   PLHEFLGS                                                 03776000
PLHINVAL EQU   PLHEFLGS                                                 03777000
PLHDSCAN EQU   PLHEFLGS                                                 03778000
PLHRSTRT EQU   PLHEFLGS+1                                               03779000
PLHFLG3  EQU   IDAPLH+6                                                 03780000
PLHSRBSG EQU   PLHFLG3                                                  03781000
PLHBWD   EQU   PLHFLG3                                                  03782000
PLHAFLGS EQU   IDAPLH+7                                                 03783000
PLHRAE   EQU   PLHAFLGS                                                 03784000
PLHCRBA  EQU   IDAPLH+28                                                03785000
PLHJORBA EQU   PLHCRBA                                                  03786000
PLHJCODE EQU   IDAPLH+40                                                03787000
PLHRCODE EQU   IDAPLH+41                                                03788000
PLHARDB  EQU   IDAPLH+44                                                03789000
PLHLRECL EQU   IDAPLH+48                                                03790000
PLHDBUFC EQU   IDAPLH+52                                                03791000
PLHRECP  EQU   IDAPLH+60                                                03792000
PLHFSP   EQU   IDAPLH+64                                                03793000
PLHRDFP  EQU   IDAPLH+68                                                03794000
PLHRDFC  EQU   IDAPLH+72                                                03795000
PLHDIOB  EQU   IDAPLH+76                                                03796000
PLHSAVE1 EQU   IDAPLH+84                                                03797000
PLHSAVE2 EQU   IDAPLH+88                                                03798000
PLHSAVE6 EQU   IDAPLH+104                                               03799000
PLHRETO  EQU   IDAPLH+116                                               03800000
PLHRET1  EQU   IDAPLH+120                                               03801000
PLHEOVPT EQU   IDAPLH+180                                               03802000
PLHDDDD  EQU   PLHEOVPT                                                 03803000
PLHNRBA  EQU   IDAPLH+184                                               03804000
PLHIBUFC EQU   IDAPLH+188                                               03805000
PLHISPLP EQU   IDAPLH+196                                               03806000
PLHIXSPL EQU   IDAPLH+200                                               03807000
PLHSSRBA EQU   PLHIXSPL                                                 03808000
PLHWAX   EQU   IDAPLH+232                                               03809000
PLHSRCSG EQU   IDAPLH+242                                               03810000
PLHKEYPT EQU   IDAPLH+248                                               03811000
PLHEND   EQU   IDAPLH+280                                               03812000
PLHKEY   EQU   0                                                        03813000
IDABUFDR EQU   0                                                        03814000
BUFDRCIX EQU   IDABUFDR+9                                               03815000
BUFDRFLG EQU   IDABUFDR+11                                              03816000
IDABUFC  EQU   0                                                        03817000
BUFCAVL  EQU   IDABUFC                                                  03818000
BUFCFLG1 EQU   IDABUFC+1                                                03819000
BUFCVAL  EQU   BUFCFLG1                                                 03820000
BUFCEXC  EQU   BUFCFLG1                                                 03821000
BUFCIOFL EQU   IDABUFC+2                                                03822000
BUFCMW   EQU   BUFCIOFL                                                 03823000
BUFCRRD  EQU   BUFCIOFL                                                 03824000
BUFCFLG2 EQU   IDABUFC+3                                                03825000
BUFCPLH  EQU   IDABUFC+4                                                03826000
BUFCDDDD EQU   IDABUFC+8                                                03827000
BUFCORBA EQU   IDABUFC+12                                               03828000
BUFCBAD  EQU   IDABUFC+20                                               03829000
BUFCINV  EQU   IDABUFC+28                                               03830000
BUFXIRBA EQU   IDABUFC+40                                               03831000
IDADIWA  EQU   0                                                        03832000
DIWATV   EQU   IDADIWA+1                                                03833000
DIWFLG1  EQU   IDADIWA+4                                                03834000
DIWFLG2  EQU   IDADIWA+5                                                03835000
DIWPLH   EQU   IDADIWA+16                                               03836000
DIWSAVE  EQU   IDADIWA+28                                               03837000
IDACIDF  EQU   0                                                        03838000
CIDFOSET EQU   IDACIDF                                                  03839000
CIDFLL   EQU   IDACIDF+2                                                03840000
CIDFBUSY EQU   CIDFLL                                                   03841000
IDARDF   EQU   0                                                        03842000
RDFRBYTE EQU   IDARDF                                                   03843000
RDFCTNU  EQU   RDFRBYTE                                                 03844000
RDFSEG   EQU   RDFRBYTE                                                 03845000
RDFNOT1  EQU   RDFSEG                                                   03846000
RDF1ST   EQU   RDFSEG                                                   03847000
RDFLL    EQU   IDARDF+1                                                 03848000
IDADATA  EQU   0                                                        03849000
IDAKEY   EQU   0                                                        03850000
KEY      EQU   IDAKEY                                                   03851000
IDAAMDSB EQU   0                                                        03852000
AMDATTR  EQU   IDAAMDSB+1                                               03853000
AMDDST   EQU   AMDATTR                                                  03854000
AMDNEST  EQU   IDAAMDSB+4                                               03855000
AMDRKP   EQU   IDAAMDSB+6                                               03856000
AMDKEYLN EQU   IDAAMDSB+8                                               03857000
AMDCIPCA EQU   IDAAMDSB+12                                              03858000
AMDCINV  EQU   IDAAMDSB+20                                              03859000
AMDLRECL EQU   IDAAMDSB+24                                              03860000
AMDHLRBA EQU   IDAAMDSB+28                                              03861000
AMDSSRBA EQU   IDAAMDSB+32                                              03862000
AMDPARDB EQU   IDAAMDSB+36                                              03863000
AMDATTR3 EQU   IDAAMDSB+40                                              03864000
AMDSTAT  EQU   IDAAMDSB+48                                              03865000
AMDNLR   EQU   AMDSTAT+12                                               03866000
AMDDELR  EQU   AMDSTAT+16                                               03867000
AMDIREC  EQU   AMDSTAT+20                                               03868000
AMDUPR   EQU   AMDSTAT+24                                               03869000
AMDRETR  EQU   AMDSTAT+28                                               03870000
AMDASPA  EQU   AMDSTAT+32                                               03871000
IDAARDB  EQU   0                                                        03872000
ARDTYPE  EQU   IDAARDB+1                                                03873000
ARDEOD   EQU   ARDTYPE                                                  03874000
ARDNPTR  EQU   IDAARDB+4                                                03875000
ARDHRBA  EQU   IDAARDB+12                                               03876000
ARDERBA  EQU   IDAARDB+16                                               03877000
ARDPRF   EQU   IDAARDB+28                                               03878000
IDAIXSPL EQU   0                                                        03879000
IXSILN   EQU   IDAIXSPL+13                                              03880000
IXSBFLG  EQU   IDAIXSPL+17                                              03881000
IXSHEP   EQU   IDAIXSPL+20                                              03882000
IXSSEP   EQU   IDAIXSPL+24                                              03883000
IXSLEP   EQU   IDAIXSPL+28                                              03884000
IDAIXH   EQU   0                                                        03885000
IXHFLPLN EQU   IDAIXH+2                                                 03886000
IXHPTLS  EQU   IDAIXH+3                                                 03887000
IXHBRBA  EQU   IDAIXH+4                                                 03888000
IXHSEO   EQU   IDAIXH+22                                                03889000
IDAIBFLP EQU   0                                                        03890000
IBFLPF   EQU   IDAIBFLP                                                 03891000
IBFLPL   EQU   IDAIBFLP+1                                               03892000
IBFLP3   EQU   IDAIBFLP+2                                               03893000
IBFLP2   EQU   IBFLP3                                                   03894000
IDASELL  EQU   0                                                        03895000
IDAIXK   EQU   0                                                        03896000
PLHPDL   EQU   0                                                        03897000
PLHPDLE  EQU   0                                                        03898000
PLHRRN   EQU   0                                                        03899000
PLHEXTEN EQU   PLHEND                                                   03900000
PLHBMWRK EQU   PLHEXTEN+5                                               03901000
BUFCRSC1 EQU   BUFCAVL                                                  03902000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03903000
PLHBMSV5 EQU   PLHEXTEN+24                                              03904000
PLHBMSV4 EQU   PLHEXTEN+20                                              03905000
PLHBMSV3 EQU   PLHEXTEN+16                                              03906000
PLHBMSV2 EQU   PLHEXTEN+12                                              03907000
PLHBMSV1 EQU   PLHEXTEN+8                                               03908000
PLHRDCNT EQU   PLHEXTEN+6                                               03909000
PLHBMSOV EQU   PLHBMWRK                                                 03910000
PLHBEUC  EQU   PLHBMWRK                                                 03911000
PLHBMRDF EQU   PLHBMWRK                                                 03912000
@NM00040 EQU   PLHEXTEN+4                                               03913000
PLHRESR1 EQU   PLHEXTEN                                                 03914000
IXKEY    EQU   IDAIXK                                                   03915000
IXSELL   EQU   IDASELL                                                  03916000
IBFLP1   EQU   IBFLP2                                                   03917000
IXHLEO   EQU   IDAIXH+20                                                03918000
IXHFSO   EQU   IDAIXH+18                                                03919000
IXHFLGS  EQU   IDAIXH+17                                                03920000
IXHLV    EQU   IDAIXH+16                                                03921000
IXHXX    EQU   IDAIXH+12                                                03922000
IXHHP    EQU   IDAIXH+8                                                 03923000
IXHLL    EQU   IDAIXH                                                   03924000
IXSPEC   EQU   IDAIXSPL+19                                              03925000
IXSEKON  EQU   IDAIXSPL+18                                              03926000
@NM00059 EQU   IXSBFLG                                                  03927000
IXSLELV  EQU   IXSBFLG                                                  03928000
IXSSSRH  EQU   IXSBFLG                                                  03929000
IXSNOSR  EQU   IDAIXSPL+16                                              03930000
IXSKLEN  EQU   IDAIXSPL+14                                              03931000
IXSTLN   EQU   IDAIXSPL+12                                              03932000
IXSARG   EQU   IDAIXSPL+8                                               03933000
IXSBUFC  EQU   IDAIXSPL+4                                               03934000
IXSSTRBA EQU   IDAIXSPL                                                 03935000
ARDKEYS  EQU   IDAARDB+29                                               03936000
@NM00058 EQU   ARDPRF                                                   03937000
ARDPRFMT EQU   ARDPRF                                                   03938000
ARDPRSS  EQU   ARDPRF                                                   03939000
ARDRELNO EQU   IDAARDB+26                                               03940000
ARDVOLSR EQU   IDAARDB+20                                               03941000
ARDHKRBA EQU   IDAARDB+8                                                03942000
ARDLEN   EQU   IDAARDB+2                                                03943000
ARDUSED  EQU   ARDTYPE                                                  03944000
ARDUOVFL EQU   ARDTYPE                                                  03945000
ARDSS    EQU   ARDTYPE                                                  03946000
ARDHLI   EQU   ARDTYPE                                                  03947000
ARDKR    EQU   ARDTYPE                                                  03948000
ARDID    EQU   IDAARDB                                                  03949000
AMDEXCP  EQU   AMDSTAT+44                                               03950000
AMDNCAS  EQU   AMDSTAT+40                                               03951000
AMDNCIS  EQU   AMDSTAT+36                                               03952000
AMDNEXT  EQU   AMDSTAT+10                                               03953000
AMDNIL   EQU   AMDSTAT+8                                                03954000
AMDSTSP  EQU   AMDSTAT                                                  03955000
@NM00057 EQU   IDAAMDSB+41                                              03956000
@NM00056 EQU   AMDATTR3                                                 03957000
AMDLM    EQU   AMDATTR3                                                 03958000
AMDWAIT  EQU   AMDATTR3                                                 03959000
AMDBIND  EQU   AMDATTR3                                                 03960000
AMDFAULT EQU   AMDATTR3                                                 03961000
AMDUNQ   EQU   AMDATTR3                                                 03962000
AMDMAXRR EQU   AMDSSRBA                                                 03963000
AMDNSLOT EQU   AMDHLRBA                                                 03964000
AMDFSCI  EQU   IDAAMDSB+16                                              03965000
AMDFSCA  EQU   IDAAMDSB+14                                              03966000
AMDPCTCI EQU   IDAAMDSB+11                                              03967000
AMDPCTCA EQU   IDAAMDSB+10                                              03968000
AMDAXRKP EQU   AMDNEST                                                  03969000
AMDLEN   EQU   IDAAMDSB+2                                               03970000
AMDSPAN  EQU   AMDATTR                                                  03971000
AMDRRDS  EQU   AMDATTR                                                  03972000
AMDRANGE EQU   AMDATTR                                                  03973000
AMDORDER EQU   AMDATTR                                                  03974000
AMDREPL  EQU   AMDATTR                                                  03975000
AMDSDT   EQU   AMDATTR                                                  03976000
AMDWCK   EQU   AMDATTR                                                  03977000
AMDSBID  EQU   IDAAMDSB                                                 03978000
AMDATA   EQU   IDADATA                                                  03979000
RDFEMPTY EQU   RDFRBYTE                                                 03980000
RDFREPL  EQU   RDFRBYTE                                                 03981000
RDFTYPE  EQU   RDFRBYTE                                                 03982000
@NM00055 EQU   CIDFLL                                                   03983000
@NM00054 EQU   IDADIWA+92                                               03984000
@NM00053 EQU   IDADIWA+88                                               03985000
@NM00052 EQU   IDADIWA+84                                               03986000
@NM00051 EQU   IDADIWA+80                                               03987000
@NM00050 EQU   IDADIWA+76                                               03988000
@NM00049 EQU   IDADIWA+72                                               03989000
@NM00048 EQU   IDADIWA+68                                               03990000
@NM00047 EQU   IDADIWA+64                                               03991000
@NM00046 EQU   IDADIWA+60                                               03992000
@NM00045 EQU   IDADIWA+56                                               03993000
DIWINRBA EQU   IDADIWA+52                                               03994000
DIWRKCT  EQU   IDADIWA+48                                               03995000
DIWSAVE5 EQU   DIWSAVE+16                                               03996000
DIWSAVE4 EQU   DIWSAVE+12                                               03997000
DIWSAVE3 EQU   DIWSAVE+8                                                03998000
DIWSAVE2 EQU   DIWSAVE+4                                                03999000
DIWSAVE1 EQU   DIWSAVE                                                  04000000
DIWSPLTP EQU   IDADIWA+24                                               04001000
DIWBUFC  EQU   IDADIWA+20                                               04002000
DIWHRBA  EQU   IDADIWA+12                                               04003000
DIWLRBA  EQU   IDADIWA+8                                                04004000
@NM00044 EQU   IDADIWA+6                                                04005000
DIWFSPF  EQU   DIWFLG2                                                  04006000
DIW1ST   EQU   DIWFLG1                                                  04007000
DIWNOT1  EQU   DIWFLG1                                                  04008000
DIWSHIFT EQU   DIWFLG1                                                  04009000
DIWGSPC  EQU   DIWFLG1                                                  04010000
DIWEOKR  EQU   DIWFLG1                                                  04011000
DIWPFERR EQU   DIWFLG1                                                  04012000
DIWCISPL EQU   DIWFLG1                                                  04013000
DIWCAS   EQU   DIWFLG1                                                  04014000
DIWLEN   EQU   IDADIWA+2                                                04015000
DIWID    EQU   IDADIWA                                                  04016000
BUFCEND  EQU   IDABUFC+64                                               04017000
BUFCUCDN EQU   IDABUFC+60                                               04018000
BUFCUCUP EQU   IDABUFC+56                                               04019000
BUFCMDBT EQU   IDABUFC+52                                               04020000
BUFCHAIN EQU   IDABUFC+48                                               04021000
BUFXORBA EQU   IDABUFC+44                                               04022000
BUFCNXT2 EQU   IDABUFC+37                                               04023000
BUFCIDXL EQU   IDABUFC+36                                               04024000
BUFCDSPC EQU   IDABUFC+32                                               04025000
BUFCWLEN EQU   BUFCINV                                                  04026000
BUFCNXT1 EQU   IDABUFC+24                                               04027000
BUFCCPA  EQU   IDABUFC+16                                               04028000
BUFCAMB  EQU   BUFCPLH                                                  04029000
@NM00043 EQU   BUFCFLG2                                                 04030000
BUFCEOD  EQU   BUFCFLG2                                                 04031000
BUFCBSYW EQU   BUFCFLG2                                                 04032000
BUFCBSYR EQU   BUFCFLG2                                                 04033000
BUFCNLAS EQU   BUFCFLG2                                                 04034000
BUFCXDDR EQU   BUFCFLG2                                                 04035000
BUFCFIX  EQU   BUFCIOFL                                                 04036000
BUFCPFCP EQU   BUFCIOFL                                                 04037000
BUFCXEDB EQU   BUFCIOFL                                                 04038000
BUFCWC   EQU   BUFCIOFL                                                 04039000
BUFCREAL EQU   BUFCIOFL                                                 04040000
BUFCFMT  EQU   BUFCIOFL                                                 04041000
BUFCEPT  EQU   BUFCFLG1                                                 04042000
BUFCER2  EQU   BUFCFLG1                                                 04043000
BUFCER1  EQU   BUFCFLG1                                                 04044000
BUFCINS  EQU   BUFCFLG1                                                 04045000
BUFCSEG  EQU   BUFCFLG1                                                 04046000
BUFCUPG  EQU   BUFCFLG1                                                 04047000
BUFCUCNT EQU   BUFCAVL                                                  04048000
@NM00042 EQU   IDABUFDR+16                                              04049000
BUFDBUFC EQU   IDABUFDR+12                                              04050000
@NM00041 EQU   BUFDRFLG                                                 04051000
BUFDRAVL EQU   BUFDRFLG                                                 04052000
BUFDRREL EQU   BUFDRFLG                                                 04053000
BUFDRTSB EQU   IDABUFDR+10                                              04054000
BUFDRMAX EQU   BUFDRCIX                                                 04055000
BUFDRPFN EQU   IDABUFDR+8                                               04056000
BUFDRPFB EQU   IDABUFDR+4                                               04057000
BUFDRLEN EQU   IDABUFDR+2                                               04058000
BUFDRNO  EQU   IDABUFDR+1                                               04059000
BUFDRID  EQU   IDABUFDR                                                 04060000
PLHERRET EQU   IDAPLH+276                                               04061000
PLHASCB  EQU   IDAPLH+272                                               04062000
PLHECB   EQU   IDAPLH+268                                               04063000
@NM00039 EQU   IDAPLH+265                                               04064000
PLHDRMSK EQU   IDAPLH+264                                               04065000
PLHR13   EQU   IDAPLH+260                                               04066000
PLHPARM1 EQU   IDAPLH+256                                               04067000
PLHDRRSC EQU   IDAPLH+252                                               04068000
PLHSLRBA EQU   IDAPLH+244                                               04069000
PLHNOSEG EQU   IDAPLH+240                                               04070000
PLHLLOR  EQU   IDAPLH+236                                               04071000
PLHXPLH  EQU   PLHWAX                                                   04072000
@NM00038 EQU   PLHIXSPL+8                                               04073000
PLHIXBFC EQU   PLHIXSPL+4                                               04074000
PLHHIREC EQU   PLHSSRBA                                                 04075000
PLHRBUFC EQU   IDAPLH+192                                               04076000
PLHAR14  EQU   IDAPLH+176                                               04077000
@NM00037 EQU   IDAPLH+172                                               04078000
@NM00036 EQU   IDAPLH+168                                               04079000
PLHASAVE EQU   IDAPLH+164                                               04080000
PLHRETOS EQU   IDAPLH+118                                               04081000
PLHCHAIN EQU   IDAPLH+112                                               04082000
PLHAMB   EQU   IDAPLH+108                                               04083000
PLHSAVE5 EQU   IDAPLH+100                                               04084000
PLHSAVE4 EQU   IDAPLH+96                                                04085000
PLHSAVE3 EQU   IDAPLH+92                                                04086000
PLHARET  EQU   IDAPLH+80                                                04087000
PLHIIOB  EQU   PLHDIOB                                                  04088000
PLHSRSID EQU   IDAPLH+74                                                04089000
PLHNBUFC EQU   IDAPLH+56                                                04090000
@NM00035 EQU   IDAPLH+43                                                04091000
PLHEOVR  EQU   IDAPLH+42                                                04092000
PLHUCODE EQU   PLHJCODE                                                 04093000
PLHJNRBA EQU   IDAPLH+36                                                04094000
PLHJRNLL EQU   IDAPLH+32                                                04095000
PLHUPECB EQU   PLHJORBA                                                 04096000
PLHDSIDA EQU   IDAPLH+24                                                04097000
PLHCRPL  EQU   IDAPLH+20                                                04098000
PLHMRPL  EQU   IDAPLH+16                                                04099000
PLHBFRNO EQU   IDAPLH+15                                                04100000
PLHFRCNT EQU   IDAPLH+14                                                04101000
PLHRMIN  EQU   IDAPLH+13                                                04102000
PLHDSTYP EQU   IDAPLH+12                                                04103000
PLHACB   EQU   IDAPLH+8                                                 04104000
PLHRABWD EQU   PLHAFLGS                                                 04105000
PLHIOSID EQU   PLHAFLGS                                                 04106000
PLHDBDC  EQU   PLHAFLGS                                                 04107000
PLHVAMB  EQU   PLHAFLGS                                                 04108000
PLHIOSRQ EQU   PLHAFLGS                                                 04109000
PLHDRLM  EQU   PLHAFLGS                                                 04110000
PLHEOVDF EQU   PLHFLG3                                                  04111000
PLHRVRS  EQU   PLHFLG3                                                  04112000
PLHSLVLD EQU   PLHFLG3                                                  04113000
PLHRAHD  EQU   PLHFLG3                                                  04114000
@NM00034 EQU   PLHEFLGS+1                                               04115000
PLHNOSPC EQU   PLHEFLGS                                                 04116000
PLHIWAIT EQU   PLHFLG2                                                  04117000
PLHCIINS EQU   PLHFLG2                                                  04118000
PLHKRE   EQU   PLHFLG2                                                  04119000
PLHSQINS EQU   PLHFLG2                                                  04120000
@NM00033 EQU   PLHFLG1                                                  04121000
PLHDRPND EQU   PLHFLG1                                                  04122000
PLHASYRQ EQU   PLHFLG1                                                  04123000
PLHENDRQ EQU   PLHFLG1                                                  04124000
PLHEOVW  EQU   PLHFLG1                                                  04125000
PLHATV   EQU   IDAPLH+1                                                 04126000
PLHAVL   EQU   IDAPLH                                                   04127000
PLHIOSDQ EQU   IDAPLHDR+12                                              04128000
PLHDRCUR EQU   IDAPLHDR+10                                              04129000
PLHDRMAX EQU   IDAPLHDR+8                                               04130000
PLHDRREQ EQU   IDAPLHDR+4                                               04131000
PLHELTH  EQU   IDAPLHDR+2                                               04132000
PLHID    EQU   IDAPLHDR                                                 04133000
AMBTRACE EQU   IDAAMB+120                                               04134000
AMBVIOT  EQU   IDAAMB+116                                               04135000
AMBSZCP  EQU   IDAAMB+114                                               04136000
AMBSZFW  EQU   IDAAMB+112                                               04137000
AMBSZWR  EQU   IDAAMB+110                                               04138000
AMBSZRD  EQU   IDAAMB+108                                               04139000
AMBEXEX  EQU   IDAAMB+100                                               04140000
AMBWSHD  EQU   IDAAMB+96                                                04141000
AMBCPA   EQU   IDAAMB+92                                                04142000
AMBBM2SH EQU   IDAAMB+88                                                04143000
AMBRDCNT EQU   AMBCSWD1+2                                               04144000
@NM00032 EQU   AMBCSWD1+1                                               04145000
@NM00031 EQU   AMBAFLG                                                  04146000
AMBCFX   EQU   AMBAFLG                                                  04147000
AMBSIS   EQU   AMBAFLG                                                  04148000
AMBICI   EQU   AMBAFLG                                                  04149000
@NM00030 EQU   AMBAFLG                                                  04150000
AMBUPLH  EQU   IDAAMB+80                                                04151000
AMBPAMBL EQU   IDAAMB+76                                                04152000
AMBPIXP  EQU   IDAAMB+72                                                04153000
@NM00029 EQU   IDAAMB+68                                                04154000
AMBWKA   EQU   IDAAMB+60                                                04155000
AMBAMBXN EQU   AMBEOVPT                                                 04156000
AMBEDB   EQU   IDAAMB+52                                                04157000
AMBRPT   EQU   IDAAMB+50                                                04158000
AMBPUG   EQU   AMBFLG2                                                  04159000
AMBBUSY  EQU   AMBOFLGS                                                 04160000
AMBEXFG  EQU   AMBOFLGS                                                 04161000
@NM00028 EQU   AMBOFLGS                                                 04162000
AMBOPEN  EQU   AMBOFLGS                                                 04163000
@NM00027 EQU   AMBOFLGS                                                 04164000
AMBDEBAD EQU   AMBDEBPT+1                                               04165000
AMBIFLGS EQU   AMBDEBPT                                                 04166000
AMBAMETH EQU   IDAAMB+43                                                04167000
@NM00026 EQU   AMBINFL                                                  04168000
@NM00025 EQU   AMBINFL                                                  04169000
AMBTIOT  EQU   IDAAMB+40                                                04170000
@NM00024 EQU   IDAAMB+38                                                04171000
AMBDDSN  EQU   IDAAMB+35                                                04172000
AMBCDSN  EQU   IDAAMB+32                                                04173000
AMBIOMB  EQU   AMBIOBAD                                                 04174000
@NM00023 EQU   AMBDSORG+1                                               04175000
AMBDORGA EQU   AMBDSORG+1                                               04176000
@NM00022 EQU   AMBDSORG                                                 04177000
AMBUBF   EQU   AMBFLG1                                                  04178000
AMBPCAT  EQU   AMBFLG1                                                  04179000
AMBMCAT  EQU   AMBFLG1                                                  04180000
AMBTYPE  EQU   AMBFLG1                                                  04181000
@NM00021 EQU   AMBFLG0                                                  04182000
AMBPSDS  EQU   AMBFLG0                                                  04183000
AMBCACB  EQU   IDAAMB+16                                                04184000
AMBBUFC  EQU   IDAAMB+8                                                 04185000
AMBLINK  EQU   IDAAMB+4                                                 04186000
AMBLEN   EQU   IDAAMB+2                                                 04187000
AMBRSC   EQU   IDAAMB+1                                                 04188000
AMBID    EQU   IDAAMB                                                   04189000
AMBLCMB  EQU   IDAAMBL+64                                               04190000
AMBLBIB  EQU   IDAAMBL+60                                               04191000
AMBLMIDS EQU   IDAAMBL+42                                               04192000
AMBLNIDS EQU   IDAAMBL+41                                               04193000
@NM00020 EQU   IDAAMBL+40                                               04194000
AMBLNUM  EQU   IDAAMBL+38                                               04195000
AMBLNST  EQU   IDAAMBL+37                                               04196000
@NM00019 EQU   AMBLFLG2                                                 04197000
AMBLSTAG EQU   AMBLFLG2                                                 04198000
@NM00018 EQU   AMBLFLG2                                                 04199000
AMBLDUMY EQU   AMBLFLG1                                                 04200000
AMBLCAT  EQU   AMBLFLG1                                                 04201000
AMBLUCRA EQU   AMBLFLG1                                                 04202000
AMBLSCRA EQU   AMBLFLG1                                                 04203000
AMBLVVIC EQU   AMBLFLG1                                                 04204000
AMBLUPD  EQU   AMBLFLG1                                                 04205000
AMBLCINV EQU   AMBLFLG1                                                 04206000
AMBLFULL EQU   AMBLFLG1                                                 04207000
AMBLLEN  EQU   IDAAMBL+34                                               04208000
@NM00017 EQU   AMBLSHAR                                                 04209000
AMBLCATO EQU   AMBLSHAR                                                 04210000
AMBLPRIM EQU   AMBLSHAR                                                 04211000
AMBLID   EQU   IDAAMBL+32                                               04212000
@NM00016 EQU   IDAAMBL+31                                               04213000
@NM00015 EQU   AMBLTYPE                                                 04214000
AMBLFIX  EQU   AMBLTYPE                                                 04215000
AMBLBASE EQU   AMBLTYPE                                                 04216000
AMBLAIX  EQU   AMBLTYPE                                                 04217000
AMBLUPGR EQU   AMBLTYPE                                                 04218000
AMBLENO  EQU   AMBLVC+1                                                 04219000
AMBLVRT  EQU   AMBLVC                                                   04220000
AMBLXPT  EQU   IDAAMBL+24                                               04221000
AMBLDFR  EQU   AMBLQ                                                    04222000
AMBLESDS EQU   AMBLQ                                                    04223000
AMBLKSDS EQU   AMBLQ                                                    04224000
AMBLUBF  EQU   AMBLQ                                                    04225000
AMBLFSTP EQU   AMBLQ                                                    04226000
AMBLLSR  EQU   AMBLQ                                                    04227000
AMBLGSR  EQU   AMBLQ                                                    04228000
AMBLDDC  EQU   AMBLQ                                                    04229000
AMBLDCI  EQU   AMBLIDF+4                                                04230000
AMBLCACB EQU   AMBLIDF                                                  04231000
@NM00014 EQU   AMBLEOV+2                                                04232000
AMBLCOMP EQU   AMBLEOV+1                                                04233000
AMBLESET EQU   AMBLEFLG                                                 04234000
AMBLWAIT EQU   AMBLEFLG                                                 04235000
AMBLACB  EQU   IDAAMBL+8                                                04236000
AMBLSCHN EQU   IDAAMBL+4                                                04237000
AMBLPCHN EQU   IDAAMBL                                                  04238000
ACBAPID  EQU   ACBCOMN+72                                               04239000
ACBCBMWA EQU   ACBCOMN+68                                               04240000
ACBUAPTR EQU   ACBCOMN+64                                               04241000
ACBLRECL EQU   ACBCOMN+62                                               04242000
ACBMSGLN EQU   ACBBLKSZ                                                 04243000
ACBBUFSP EQU   ACBCOMN+56                                               04244000
@NM00013 EQU   ACBUJFCB+1                                               04245000
ACBOPTN  EQU   ACBUJFCB                                                 04246000
ACBVVIC  EQU   ACBINFLG                                                 04247000
ACBUCRA  EQU   ACBINFLG                                                 04248000
ACBSCRA  EQU   ACBINFLG                                                 04249000
ACBCAT   EQU   ACBINFLG                                                 04250000
ACBIJRQE EQU   ACBINFLG                                                 04251000
ACBJEPS  EQU   ACBINFLG                                                 04252000
@NM00012 EQU   ACBINFLG                                                 04253000
ACBERFLG EQU   ACBCOMN+49                                               04254000
ACBBUSY  EQU   ACBIOSFG                                                 04255000
ACBLOCK  EQU   ACBEXFG                                                  04256000
@NM00011 EQU   ACBOFLGS                                                 04257000
ACBDSERR EQU   ACBOFLGS                                                 04258000
ACBOPEN  EQU   ACBOFLGS                                                 04259000
ACBEOV   EQU   ACBOFLGS                                                 04260000
@NM00010 EQU   ACBOFLGS                                                 04261000
ACBDEB   EQU   ACBDDNM+5                                                04262000
ACBERFL  EQU   ACBDDNM+4                                                04263000
ACBAM    EQU   ACBAMETH                                                 04264000
ACBINFL  EQU   ACBDDNM+2                                                04265000
ACBTIOT  EQU   ACBDDNM                                                  04266000
ACBUEL   EQU   ACBEXLST                                                 04267000
ACBPASSW EQU   ACBCOMN+32                                               04268000
ACBMSGAR EQU   ACBCOMN+28                                               04269000
@NM00009 EQU   ACBDSORG+1                                               04270000
ACBDORGA EQU   ACBDSORG+1                                               04271000
@NM00008 EQU   ACBDSORG                                                 04272000
ACBCRNRE EQU   ACBCROPS                                                 04273000
ACBCRNCK EQU   ACBCROPS                                                 04274000
ACBASA   EQU   ACBCCTYP                                                 04275000
@NM00007 EQU   ACBCCTYP                                                 04276000
ACBRECAF EQU   ACBRECFM                                                 04277000
ACBJBUF  EQU   ACBBUFPL+2                                               04278000
ACBMACR4 EQU   ACBBUFPL+1                                               04279000
@NM00006 EQU   ACBMACR3                                                 04280000
ACBNCFX  EQU   ACBMACR3                                                 04281000
ACBSIS   EQU   ACBMACR3                                                 04282000
ACBDFR   EQU   ACBMACR3                                                 04283000
ACBICI   EQU   ACBMACR3                                                 04284000
ACBGSR   EQU   ACBMACR3                                                 04285000
ACBLSR   EQU   ACBMACR3                                                 04286000
@NM00005 EQU   ACBMACR3                                                 04287000
ACBBUFNI EQU   ACBCOMN+18                                               04288000
ACBBUFND EQU   ACBCOMN+16                                               04289000
ACBSTRNO EQU   ACBCOMN+15                                               04290000
ACBBSTNO EQU   ACBCOMN+14                                               04291000
ACBAIX   EQU   ACBMACR2                                                 04292000
ACBDSN   EQU   ACBMACR2                                                 04293000
ACBRST   EQU   ACBMACR2                                                 04294000
ACBLOGON EQU   ACBMACR2                                                 04295000
ACBSKP   EQU   ACBMACR2                                                 04296000
@NM00004 EQU   ACBMACR2                                                 04297000
ACBUBF   EQU   ACBMACR1                                                 04298000
ACBOUT   EQU   ACBMACR1                                                 04299000
ACBIN    EQU   ACBMACR1                                                 04300000
ACBDIR   EQU   ACBMACR1                                                 04301000
ACBSEQ   EQU   ACBMACR1                                                 04302000
ACBBLK   EQU   ACBCNV                                                   04303000
ACBADD   EQU   ACBADR                                                   04304000
ACBKEY   EQU   ACBMACR1                                                 04305000
ACBINRTN EQU   ACBCOMN+8                                                04306000
ACBIBCT  EQU   ACBJWA                                                   04307000
ACBLEN2  EQU   ACBLENG2                                                 04308000
ACBSTYP  EQU   ACBCOMN+1                                                04309000
ACBID    EQU   ACBCOMN                                                  04310000
RPLERMSA EQU   RPLCOMN+72                                               04311000
RPLEMLEN EQU   RPLCOMN+70                                               04312000
RPLACTIV EQU   RPLCOMN+69                                               04313000
RPLBRANC EQU   RPLEXTD1                                                 04314000
RPLNIB   EQU   RPLEXTD1                                                 04315000
@NM00003 EQU   RPLEXTD1                                                 04316000
RPLEXIT  EQU   RPLEXTD1                                                 04317000
RPLNEXIT EQU   RPLEXTD1                                                 04318000
RPLEXSCH EQU   RPLEXTD1                                                 04319000
@NM00002 EQU   RPLRBAR+3                                                04320000
@NM00001 EQU   RPLAIXID                                                 04321000
RPLAXPKP EQU   RPLAIXID                                                 04322000
RPLAIXPC EQU   RPLRBAR                                                  04323000
RPLRSV88 EQU   RPLOPT8                                                  04324000
RPLUNCON EQU   RPLOPT8                                                  04325000
RPLACTV  EQU   RPLOPT8                                                  04326000
RPLSESS  EQU   RPLOPT8                                                  04327000
RPLPEND  EQU   RPLOPT8                                                  04328000
RPLODPRM EQU   RPLOPT8                                                  04329000
RPLODACP EQU   RPLOPT8                                                  04330000
RPLODACQ EQU   RPLOPT8                                                  04331000
RPLRSV78 EQU   RPLOPT7                                                  04332000
RPLRSV77 EQU   RPLOPT7                                                  04333000
RPLRLSOP EQU   RPLOPT7                                                  04334000
RPLTPOST EQU   RPLOPT7                                                  04335000
RPLQOPT  EQU   RPLOPT7                                                  04336000
RPLCNIMM EQU   RPLCNOPT                                                 04337000
RPLCNANY EQU   RPLCNOPT                                                 04338000
RPLCNALL EQU   RPLCNOPT                                                 04339000
RPLRSV68 EQU   RPLOPT6                                                  04340000
RPLRSV67 EQU   RPLOPT6                                                  04341000
RPLLOCK  EQU   RPLOPT6                                                  04342000
RPLNCOND EQU   RPLOPT6                                                  04343000
RPLCOND  EQU   RPLOPT6                                                  04344000
RPLEOT   EQU   RPLUNTYP                                                 04345000
RPLEOM   EQU   RPLUNTYP                                                 04346000
RPLEOB   EQU   RPLUNTYP                                                 04347000
RPLWROPT EQU   RPLOPT5                                                  04348000
RPLNODE  EQU   RPLOPT5                                                  04349000
RPLERACE EQU   RPLWRTYP                                                 04350000
RPLEAU   EQU   RPLWRTYP                                                 04351000
RPLNERAS EQU   RPLWRTYP                                                 04352000
RPLPSOPT EQU   RPLOPT5                                                  04353000
RPLSSNIN EQU   RPLOPT5                                                  04354000
RPLDLGIN EQU   RPLOPT5                                                  04355000
RPLCHAIN EQU   RPLNXTRP                                                 04356000
RPLOPT4  EQU   RPLOPTCD+3                                               04357000
RPLALIGN EQU   RPLOPT3                                                  04358000
RPLFMT   EQU   RPLOPT3                                                  04359000
RPLFLD   EQU   RPLOPT3                                                  04360000
RPLVFY   EQU   RPLOPT3                                                  04361000
RPLBLK   EQU   RPLOPT3                                                  04362000
RPLSFORM EQU   RPLOPT3                                                  04363000
RPLEODS  EQU   RPLOPT3                                                  04364000
RPLWAITX EQU   RPLOPT2                                                  04365000
RPLCNV   EQU   RPLOPT2                                                  04366000
RPLADD   EQU   RPLADR                                                   04367000
RPLECBIN EQU   RPLECBSW                                                 04368000
RPLASY   EQU   RPLOPT1                                                  04369000
RPLDAF   EQU   RPLARG+2                                                 04370000
RPLSAF   EQU   RPLARG                                                   04371000
RPLTCBPT EQU   RPLCOMN+28                                               04372000
RPLCCHAR EQU   RPLCOMN+20                                               04373000
RPLSTRID EQU   RPLCOMN+18                                               04374000
RPLKEYL  EQU   RPLKEYLE                                                 04375000
RPLRDSOH EQU   RPLFDB3                                                  04376000
RPLRLG   EQU   RPLFDB3                                                  04377000
RPLLGFRC EQU   RPLFDB3                                                  04378000
RPLREOT  EQU   RPLFDB3                                                  04379000
RPLREOM  EQU   RPLFDB3                                                  04380000
RPLREOB  EQU   RPLFDB3                                                  04381000
RPLSV32  EQU   RPLFDB3                                                  04382000
RPLUINPT EQU   RPLFDB3                                                  04383000
RPLSTSAV EQU   RPLFDB2                                                  04384000
RPLCUERR EQU   RPLFDB2                                                  04385000
RPLDLGFL EQU   RPLFDB2                                                  04386000
RPLIOERR EQU   RPLFDB2                                                  04387000
RPLDVUNS EQU   RPLFDB2                                                  04388000
RPLATND  EQU   RPLFDB2                                                  04389000
RPLRVID  EQU   RPLFDB2                                                  04390000
RPLERLK  EQU   RPLFDB2                                                  04391000
RPLSTAT  EQU   RPLFDBWD                                                 04392000
RPLPOST  EQU   RPLECB                                                   04393000
RPLWAIT  EQU   RPLECB                                                   04394000
RPLPLHPT EQU   RPLCOMN+4                                                04395000
RPLLEN2  EQU   RPLLEN                                                   04396000
RPLSTYP  EQU   RPLIDWD+1                                                04397000
RPLID    EQU   RPLIDWD                                                  04398000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04399000
@RF00184 EQU   @RC00170                                                 04400000
@RF00190 EQU   @RC00188                                                 04401000
@RF00236 EQU   @RC00234                                                 04402000
@RF00386 EQU   @RC00327                                                 04403000
@RC00356 EQU   @RC00327                                                 04404000
@RF00481 EQU   @RC00472                                                 04405000
@RC00413 EQU   @RC00405                                                 04406000
@RT00597 EQU   @EL00003                                                 04407000
@RT00690 EQU   GETNXBF                                                  04408000
@RF00708 EQU   GETNXBF                                                  04409000
@RT00763 EQU   MVREC                                                    04410000
@RF01058 EQU   @RC01055                                                 04411000
@RT01090 EQU   IPLOCATE                                                 04412000
@RT01095 EQU   SETPST                                                   04413000
@RT01120 EQU   IPLOCATE                                                 04414000
@RT01122 EQU   IPLOCATE                                                 04415000
@RT01124 EQU   IPLOCATE                                                 04416000
@RT01144 EQU   IPLOCATE                                                 04417000
@RC01132 EQU   @RC01071                                                 04418000
@RF01187 EQU   SETPST                                                   04419000
@RT01252 EQU   EXCLCK                                                   04420000
@RC01351 EQU   @RC01348                                                 04421000
@RF01355 EQU   @RC01348                                                 04422000
@RF01365 EQU   @RC01361                                                 04423000
@RC01374 EQU   @RC01368                                                 04424000
@RC01377 EQU   @RC01368                                                 04425000
@PB00010 EQU   @PB00011                                                 04426000
@RF00373 EQU   @RC00356                                                 04427000
@RF00514 EQU   @RC00413                                                 04428000
@PB00009 EQU   @PB00010                                                 04429000
@PB00008 EQU   @PB00009                                                 04430000
@PB00007 EQU   @PB00008                                                 04431000
@PB00006 EQU   @PB00007                                                 04432000
@PB00005 EQU   @PB00006                                                 04433000
@PB00004 EQU   @PB00005                                                 04434000
@PB00003 EQU   @PB00004                                                 04435000
@PB00002 EQU   @PB00003                                                 04436000
@ENDDATA EQU   *                                                        04437000
         END   IDA019R4,(C'PLS2156',0701,78172)                         04438000
