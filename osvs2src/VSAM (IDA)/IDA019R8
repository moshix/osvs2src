         TITLE 'IDA019R8--VSAM CONTROL INTERVAL ACCESSING              *00001000
                        '                                               00002000
IDA019R8 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019R8  78.172'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
         IDASVR14                                                       00013000
*/*  VERIFY THE AMBL FIRST                                   @X04SVMR*/ 00014000
*/*  VERIFY THAT THE PASSWORD ALLOWS CINV ACCESS             @X04SVMR*/ 00015000
*                                                                  0164 00016000
*   IF AMBLCINV=OFF THEN            /* IF NOT, EXIT WITH     @X04SVMR*/ 00017000
         TM    AMBLCINV(RPARM1),B'01000000'                        0164 00018000
         BNZ   @RF00164                                            0164 00019000
*     DO;                           /* AN ERROR.             @X04SVMR*/ 00020000
*       RPLERRCD=RPLINACC;          /* INVALID ACCESS        @X04SVMR*/ 00021000
         MVI   RPLERRCD(RRPL),X'44'                                0166 00022000
*       GO TO ERRORX;               /* LOGIC ERROR           @X04SVMR*/ 00023000
         B     ERRORX                                              0167 00024000
*     END;                          /* END OF INV PASSWD     @X04SVMR*/ 00025000
*   RFY                                                            0169 00026000
*     IDAAMBL BASED(ACBAMBL);       /* RESET AMBL BASE       @X04SVMR*/ 00027000
@RF00164 DS    0H                                                  0170 00028000
*/*  PROHIBIT BACKWARD MODE PROCESSING WITH CNV.             @X04SVMR*/ 00029000
*                                                                  0170 00030000
*   IF RPLBWD=ON THEN               /* TEST FOR BWD          @X04SVMR*/ 00031000
         TM    RPLBWD(RRPL),B'00010000'                            0170 00032000
         BNO   @RF00170                                            0170 00033000
*     DO;                                                          0171 00034000
*       RPLERRCD=RPLINVP;           /* SET INVALID BWD       @X04SVMR*/ 00035000
         MVI   RPLERRCD(RRPL),X'68'                                0172 00036000
*       GO TO ERRORX;               /* LOGICAL ERROR         @X04SVMR*/ 00037000
         B     ERRORX                                              0173 00038000
*     END;                          /* END OF INVAL BWD      @X04SVMR*/ 00039000
*   IF RPLREQ=RPLGETIX|RPLREQ=RPLPUTIX THEN/* GETIX/PUTIX.   @X04SVRQ*/ 00040000
@RF00170 CLI   RPLREQ(RRPL),11                                     0175 00041000
         BE    @RT00175                                            0175 00042000
         CLI   RPLREQ(RRPL),12                                     0175 00043000
         BNE   @RF00175                                            0175 00044000
@RT00175 DS    0H                                                  0176 00045000
*     DO;                           /*                       @X04SVRQ*/ 00046000
*       IF AMBLNUM=ONE THEN         /* NOT OPENED AS KSDS.   @X04SVRQ*/ 00047000
         L     @10,RPLDACB(,RRPL)                                  0177 00048000
         L     @10,ACBAMBL(,@10)                                   0177 00049000
         CLC   AMBLNUM(2,@10),@CH00047                             0177 00050000
         BNE   @RF00177                                            0177 00051000
*         DO;                       /*                       @X04SVRQ*/ 00052000
*           RPLERRCD=RPLINKEY;      /* INVALID REQ ESDS/RRDS @X04SVRQ*/ 00053000
         MVI   RPLERRCD(RRPL),X'48'                                0179 00054000
*           GOTO ERRORX;            /* ERROR EXIT.           @X04SVRQ*/ 00055000
         B     ERRORX                                              0180 00056000
*         END;                      /*                       @X04SVRQ*/ 00057000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB.   @X04SVRQ*/ 00058000
@RF00177 L     @10,RPLDACB(,RRPL)                                  0182 00059000
         L     @10,ACBAMBL(,@10)                                   0182 00060000
         L     RAMB,AMBLIX(,@10)                                   0182 00061000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC.  @X04SVRQ*/ 00062000
         L     RBUFC,PLHIBUFC(,RPLH)                               0183 00063000
*     END;                          /* END GETIX/PUTIX.      @X04SVRQ*/ 00064000
*   ELSE                            /* NOT GETIX/PUTIX.      @X04SVRQ*/ 00065000
*     DO;                           /*                       @X04SVRQ*/ 00066000
         B     @RC00175                                            0185 00067000
@RF00175 DS    0H                                                  0186 00068000
*       RBUFC=PLHDBUFC;             /* POINT TO CURRENT BUFC.        */ 00069000
         L     RBUFC,PLHDBUFC(,RPLH)                               0186 00070000
*/*  INITIALIZE THE VSAM BUFC WITH THE USER BUFFER ADDRESS IF USER 0187 00071000
*    BUFFERING WAS REQUESTED.                                        */ 00072000
*                                                                  0187 00073000
*       IF AMBUBF=ON                /* IF USER BUFFERING, SET        */ 00074000
*         THEN                      /* BUFFER ADDRESS                */ 00075000
         TM    AMBUBF(RAMB),B'00000100'                            0187 00076000
         BNO   @RF00187                                            0187 00077000
*         DO;                       /*                               */ 00078000
*           IF RPLLOC=ON THEN       /* IF LOCATE MODE SET,           */ 00079000
         TM    RPLLOC(RRPL),B'10000000'                            0189 00080000
         BO    @RT00189                                            0189 00081000
*             GO TO INVLOC;         /* FLAG AS INVALID               */ 00082000
*           BUFCVAL=OFF;            /* INVALIDATE BFR        @XA03112*/ 00083000
         NI    BUFCVAL(RBUFC),B'11111011'                          0191 00084000
*           BUFCBAD=RPLAREA;        /* SET BFR TO THAT OF USER       */ 00085000
         L     @10,RPLAREA(,RRPL)                                  0192 00086000
         ST    @10,BUFCBAD(,RBUFC)                                 0192 00087000
*         END;                      /* END OF UBF CODE               */ 00088000
*     END;                          /*                       @X04SVRQ*/ 00089000
@RF00187 DS    0H                                                  0195 00090000
*/*  INVALIDATE THE KEYED POSITION TO PREVENT PLACEHOLDER USE      0195 00091000
*    FOR KEYED RETRIEVAL WITHOUT A KEYED POINT.                      */ 00092000
*                                                                  0195 00093000
*   PLHKEYMD=OFF;                   /* SET KEY POSITION INVAL.       */ 00094000
@RC00175 NI    PLHKEYMD(RPLH),B'11011111'                          0195 00095000
*/*   VALIDATE LOAD REQUESTS                                         */ 00096000
*                                                                  0196 00097000
*   IF AMBCREAT=ON&                 /* IF CREATE MODE, ALLOW         */ 00098000
*       RPLREQ^=RPLVERIF&           /* (EXCLUDE VERIFY)              */ 00099000
*       (RPLREQ^=RPLPUT|            /* ONLY (SKP) SEQ. PUT           */ 00100000
*       RPLDIR=ON)                  /* REQUESTS. SET AN INV-         */ 00101000
*     THEN                          /* VALID LOAD REQUEST            */ 00102000
         TM    AMBCREAT(RAMB),B'10000000'                          0196 00103000
         BNO   @RF00196                                            0196 00104000
         CLI   RPLREQ(RRPL),6                                      0196 00105000
         BE    @RF00196                                            0196 00106000
         CLI   RPLREQ(RRPL),1                                      0196 00107000
         BNE   @RT00196                                            0196 00108000
         TM    RPLDIR(RRPL),B'01000000'                            0196 00109000
         BNO   @RF00196                                            0196 00110000
@RT00196 DS    0H                                                  0197 00111000
*     DO;                           /* OTHERWISE.                    */ 00112000
*       RPLERRCD=RPLINLRQ;          /* SET INVALID LOAD REQ          */ 00113000
         MVI   RPLERRCD(RRPL),X'74'                                0198 00114000
*       GO TO ERRORX;               /* SET LOGIC ERROR & EXIT        */ 00115000
         B     ERRORX                                              0199 00116000
*     END;                          /* END OF INVALID LOAD REQ       */ 00117000
*/*  FIRST CHECK TO SEE WHAT TYPE OF REQUEST--GET, PUT, OR POINT.    */ 00118000
*                                                                  0201 00119000
*   IF RPLREQ=RPLGET|RPLREQ=RPLGETIX/* GET OR GETIX.         @X04SVRQ*/ 00120000
*     THEN                          /* IF SO, COME HERE              */ 00121000
@RF00196 CLI   RPLREQ(RRPL),0                                      0201 00122000
         BE    @RT00201                                            0201 00123000
         CLI   RPLREQ(RRPL),11                                     0201 00124000
         BNE   @RF00201                                            0201 00125000
@RT00201 DS    0H                                                  0202 00126000
*     DO;                                                          0202 00127000
*                                                                  0202 00128000
*       /*************************************************************/ 00129000
*       /*                                                           */ 00130000
*       /* ******************** GET REQUEST ********************     */ 00131000
*       /* VALIDATE THE LENGTH OF THE AREA PROVIDED BY THE USER      */ 00132000
*       /*                                                           */ 00133000
*       /*************************************************************/ 00134000
*                                                                  0203 00135000
*       IF(RPLLOC=OFF&              /* IF MOVE MODE, AREA MUST       */ 00136000
*           RPLBUFL<AMDCINV)        /* BE BIG ENOUGH.        @X04SVMR*/ 00137000
*         THEN                      /* IF NOT, SET ERROR             */ 00138000
         TM    RPLLOC(RRPL),B'10000000'                            0203 00139000
         BNZ   @RF00203                                            0203 00140000
         L     @10,AMBDSB(,RAMB)                                   0203 00141000
         L     @05,RPLBUFL(,RRPL)                                  0203 00142000
         C     @05,AMDCINV(,@10)                                   0203 00143000
         BNL   @RF00203                                            0203 00144000
*         DO;                                                      0204 00145000
*           RPLERRCD=RPLINBUF;      /* SET SHORT BUFL CODE           */ 00146000
         MVI   RPLERRCD(RRPL),X'2C'                                0205 00147000
*           IF RPLDIR=ON THEN       /* FOR DIRECT REQUESTS,          */ 00148000
         TM    RPLDIR(RRPL),B'01000000'                            0206 00149000
         BNO   @RF00206                                            0206 00150000
*             PLHINVAL=ON;          /* INVALIDATE THE PLH.           */ 00151000
         OI    PLHINVAL(RPLH),B'00000010'                          0207 00152000
*ERRORX:                                                           0208 00153000
*           RPLERREG='08'X;         /* GET LOGICAL ERROR             */ 00154000
@RF00206 DS    0H                                                  0208 00155000
ERRORX   MVI   RPLERREG(RRPL),X'08'                                0208 00156000
*           GO TO R8EXIT;           /* RETURN TO CALLER              */ 00157000
         B     R8EXIT                                              0209 00158000
*         END;                      /* END, SHORT BFR CODE           */ 00159000
*                                                                  0210 00160000
*       /*************************************************************/ 00161000
*       /*                                                           */ 00162000
*       /* FOR DIRECT GET REQUESTS, REMOVE ANY BUFCS ADDED FROM PRIOR*/ 00163000
*       /* SEQUENTIAL REQUESTS (PLH VALID), VALIDATE THE             */ 00164000
*       /* USER-SUPPLIED RBA, AND POINT THE PLACEHOLDER TO THE       */ 00165000
*       /* DESIRED RBA.                                              */ 00166000
*       /*                                                           */ 00167000
*       /*************************************************************/ 00168000
*                                                                  0211 00169000
*       IF RPLDIR=ON                /* SEE IF DIRECT REQUEST         */ 00170000
*         THEN                      /* IF SO, COME HERE              */ 00171000
@RF00203 TM    RPLDIR(RRPL),B'01000000'                            0211 00172000
         BNO   @RF00211                                            0211 00173000
*         DO;                                                      0212 00174000
*           IF RBA//AMDCINV^=ZERO THEN/* IF NOT ON CI BDY    @X04SVMR*/ 00175000
         L     @10,RPLARG(,RRPL)                                   0213 00176000
         L     @05,AMBDSB(,RAMB)                                   0213 00177000
         L     @07,RBA(,@10)                                       0213 00178000
         SLR   @06,@06                                             0213 00179000
         D     @06,AMDCINV(,@05)                                   0213 00180000
         LTR   @06,@06                                             0213 00181000
         BZ    @RF00213                                            0213 00182000
*             DO;                   /* SET ERROR             @X04SVMR*/ 00183000
*BADBDY:                                                           0215 00184000
*               PLHINVAL=ON;        /* CAUSE PLH RELEASE     @X04SVMR*/ 00185000
BADBDY   OI    PLHINVAL(RPLH),B'00000010'                          0215 00186000
*               RPLERRCD=RPLINRBA;  /* SET INVALID RBA       @X04SVMR*/ 00187000
         MVI   RPLERRCD(RRPL),X'20'                                0216 00188000
*               GO TO ERRORX;       /* TAKE ERROR EXIT       @X04SVMR*/ 00189000
         B     ERRORX                                              0217 00190000
*             END;                  /* END OF BAD BDY        @X04SVMR*/ 00191000
*           PLHCRBA=RBA;            /* GET USER RBA AS CURRENT       */ 00192000
@RF00213 L     @10,RPLARG(,RRPL)                                   0219 00193000
         L     @10,RBA(,@10)                                       0219 00194000
         ST    @10,PLHCRBA(,RPLH)                                  0219 00195000
*           PLHNOADV=OFF;           /* RESET POINT BIT               */ 00196000
*           PLHSKPER=OFF;           /* RESET ERROR SKIP              */ 00197000
*           PLHEODX=OFF;            /* RESET END OF DATA             */ 00198000
*           PLHDSCAN=OFF;           /* RESET DATA SCAN               */ 00199000
*           PLHINVAL=OFF;           /* MAKE PLH VALID                */ 00200000
*           PLH1ST=ON;              /* INDICATE FIRST TIME           */ 00201000
         OI    PLH1ST(RPLH),B'01000000'                            0225 00202000
         NI    PLHNOADV(RPLH),B'11010000'                          0225 00203000
*         END;                      /* END, DIRECT ONLY CODE         */ 00204000
*       ELSE                        /* NOT DIRECT REQ.       @X04SVRQ*/ 00205000
*         IF RPLREQ=RPLGETIX THEN   /* GETIX REQUEST.        @X04SVRQ*/ 00206000
         B     @RC00211                                            0227 00207000
@RF00211 CLI   RPLREQ(RRPL),11                                     0227 00208000
         BNE   @RF00227                                            0227 00209000
*           DO;                     /*                       @X04SVRQ*/ 00210000
*             RPLERRCD=RPLINVP;     /* SET INVALID RPL OPT.  @X04SVRQ*/ 00211000
         MVI   RPLERRCD(RRPL),X'68'                                0229 00212000
*             PLHINVAL=ON;          /* INVALIDATE PLH.       @X04SVRQ*/ 00213000
         OI    PLHINVAL(RPLH),B'00000010'                          0230 00214000
*             GOTO ERRORX;          /* ERROR EXIT.           @X04SVRQ*/ 00215000
         B     ERRORX                                              0231 00216000
*           END;                    /*                       @X04SVRQ*/ 00217000
*                                                                  0232 00218000
*       /*************************************************************/ 00219000
*       /*                                                           */ 00220000
*       /* FOR ALL GETS, IF UPDATE IS SPECIFIED PUT STRING INTO READ */ 00221000
*       /* EXCLUSIVE MODE IN ANTICIPATION OF PUTS FOR UPDATE.        */ 00222000
*       /*                                                           */ 00223000
*       /*************************************************************/ 00224000
*                                                                  0233 00225000
*       IF RPLUPD=ON                /* SEE IF GET UPD                */ 00226000
*         THEN                                                     0233 00227000
@RF00227 DS    0H                                                  0233 00228000
@RC00211 TM    RPLUPD(RRPL),B'00000010'                            0233 00229000
         BNO   @RF00233                                            0233 00230000
*         PLHRDEXC=ON;              /* IF SO, NEED EXCL CNTL         */ 00231000
         OI    PLHRDEXC(RPLH),B'00001000'                          0234 00232000
*       ELSE                                                       0235 00233000
*         PLHRDEXC=OFF;             /* EXCL CNTL NOT NEEDED          */ 00234000
         B     @RC00233                                            0235 00235000
@RF00233 NI    PLHRDEXC(RPLH),B'11110111'                          0235 00236000
*       PLHUPD=OFF;                 /* NO GOOD GET UPD YET           */ 00237000
@RC00233 NI    PLHUPD(RPLH),B'01111111'                            0236 00238000
*       IF PLHEFLGS^=C2ZERO         /* SEE IF EXCEPTION              */ 00239000
*         THEN                      /* YES, HANDLE EXCEPTION         */ 00240000
         CLC   PLHEFLGS(2,RPLH),C2ZERO                             0237 00241000
         BE    @RF00237                                            0237 00242000
*         DO;                                                      0238 00243000
*                                                                  0238 00244000
*           /*********************************************************/ 00245000
*           /*                                                       */ 00246000
*           /* EXCEPTION PROCESSING--IF PLACEHOLDER IS INVALID OR IF */ 00247000
*           /* END-OF-DATA HAS BEEN REACHED, RETURN WITH AN ERROR    */ 00248000
*           /* CODE SET. IF THIS IS THE FIRST REQUEST AFTER OPEN OR  */ 00249000
*           /* POINT OR IF THIS IS A DIRECT REQUEST, THE FIRST       */ 00250000
*           /* CONTROL INTERVAL MUST BE OBTAINED VIA THE IDAGRB      */ 00251000
*           /* INTERFACE TO BUFFER MANAGER. IF THE PLACEHOLDER       */ 00252000
*           /* ENCOUNTERED AN ERROR PREV- IOUSLY, IT MUST SKIP ACROSS*/ 00253000
*           /* ERROR CONTROL INTERVALS UNTIL A GOOD CONTROL INTERVAL */ 00254000
*           /* IS FOUND OR END-OF-DATA OCCURS.                       */ 00255000
*           /*                                                       */ 00256000
*           /*********************************************************/ 00257000
*                                                                  0239 00258000
*           IF PLH1ST=ON            /* SEE IF FIRST TIME             */ 00259000
*             THEN                  /* YES, COME HERE                */ 00260000
         TM    PLH1ST(RPLH),B'01000000'                            0239 00261000
         BNO   @RF00239                                            0239 00262000
*             DO;                                                  0240 00263000
*                                                                  0240 00264000
*               /*****************************************************/ 00265000
*               /*                                                   */ 00266000
*               /* IF FIRST SEQUENTIAL REQUEST, ADD BFRS     @X04SVMR*/ 00267000
*               /*                                                   */ 00268000
*               /*****************************************************/ 00269000
*                                                                  0241 00270000
*               IF RPLSEQ=ON THEN                                  0241 00271000
         TM    RPLSEQ(RRPL),B'00100000'                            0241 00272000
         BNO   @RF00241                                            0241 00273000
*                 DO;                                              0242 00274000
*                   PLHASKBF=ON;    /* SET ASKBF FLAG        @X04SVMR*/ 00275000
         OI    PLHASKBF(RPLH),B'00100000'                          0243 00276000
*                   RPARM1=ZERO;    /* REQUEST MAXIMUM@X04SVMR       */ 00277000
         SLR   RPARM1,RPARM1                                       0244 00278000
*I01:                                                              0245 00279000
*                   DO;             /* IDACALL(IDAABF)               */ 00280000
I01      DS    0H                                                  0246 00281000
*                     CALL IDAABF;  /* EXIT TO IDAABF                */ 00282000
         L     @15,@CV01045                                        0246 00283000
         BALR  @14,@15                                             0246 00284000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 00285000
         BALR @11,0                                                     00286000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 00287000
         USING *,@11                                                    00288000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 00289000
         L     @11,=A(@PSTART)                                          00290000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 00291000
         USING @PSTART,@11                                              00292000
*                   END I01;        /* ADD BUFFERS           @X04SVMR*/ 00293000
*                 END;              /* END OF ASK BFR        @X04SVMR*/ 00294000
*               PLH1ST=OFF;         /* SET OFF FIRST TIME BIT        */ 00295000
@RF00241 NI    PLH1ST(RPLH),B'10111111'                            0253 00296000
*               RPARM1=PLHCRBA;     /* GET DESIRED RBA               */ 00297000
         L     RPARM1,PLHCRBA(,RPLH)                               0254 00298000
*               IF RPLREQ=RPLGETIX THEN/* GETIX REQUEST.     @X04SVRQ*/ 00299000
         CLI   RPLREQ(RRPL),11                                     0255 00300000
         BNE   @RF00255                                            0255 00301000
*                 DO;               /* YES                   @X04SVES*/ 00302000
*                   RFY                                            0257 00303000
*                     R14 RSTD;     /*                       @X04SVES*/ 00304000
*                   R14=ADDR(PLHIXSPL);/* POINT TO INDEX SEARCH PARM    00305000
*                                      LIST                  @X04SVES*/ 00306000
         LA    R14,PLHIXSPL(,RPLH)                                 0258 00307000
*                   R14->IXSILN=ZERO;/* CLEAR LEVEL          @X04SVES*/ 00308000
         MVI   IXSILN(R14),X'00'                                   0259 00309000
*                   PLHSSR=ON;      /* SET SEQ SET REQ.      @X04SVRQ*/ 00310000
         OI    PLHSSR(RPLH),B'00010000'                            0260 00311000
*                   RFY                                            0261 00312000
*                     R14 UNRSTD;   /*                       @X04SVES*/ 00313000
*                 END;              /*                       @X04SVES*/ 00314000
*                                                                  0262 00315000
*               /*****************************************************/ 00316000
*               /*                                                   */ 00317000
*               /* GET DESIRED RBA INTO CORE                         */ 00318000
*               /*                                                   */ 00319000
*               /*****************************************************/ 00320000
*                                                                  0263 00321000
*I02:                                                              0263 00322000
*               DO;                 /* IDACALL(IDAGRB)               */ 00323000
@RF00255 DS    0H                                                  0263 00324000
I02      DS    0H                                                  0264 00325000
*                 CALL IDAGRB;      /* EXIT TO IDAGRB                */ 00326000
         L     @15,@CV01047                                        0264 00327000
         BALR  @14,@15                                             0264 00328000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00329000
         BALR @11,0                                                     00330000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00331000
         USING *,@11                                                    00332000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00333000
         L     @11,=A(@PSTART)                                          00334000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00335000
         USING @PSTART,@11                                              00336000
*               END I02;                                           0269 00337000
*             END;                  /* END, FIRST TIME CODE          */ 00338000
*           ELSE                    /* NOT 1ST TIME.                 */ 00339000
*             IF PLHNOADV=ON THEN   /* PRIOR POINT           @X04SVMR*/ 00340000
         B     @RC00239                                            0271 00341000
@RF00239 TM    PLHNOADV(RPLH),B'00001000'                          0271 00342000
         BNO   @RF00271                                            0271 00343000
*               PLHNOADV=OFF;       /* RESET FLAG            @X04SVMR*/ 00344000
         NI    PLHNOADV(RPLH),B'11110111'                          0272 00345000
*             ELSE                  /* NOADV OFF             @X04SVMR*/ 00346000
*               IF PLHINVAL=ON      /* CHECK PLH VALIDITY            */ 00347000
*                 THEN              /* IF INVALID, SET ERROR         */ 00348000
         B     @RC00271                                            0273 00349000
@RF00271 TM    PLHINVAL(RPLH),B'00000010'                          0273 00350000
         BNO   @RF00273                                            0273 00351000
*                 DO;                                              0274 00352000
*                   RPLERRCD=RPLNOPTR;/* UNKNOWN POSITION FOR        */ 00353000
         MVI   RPLERRCD(RRPL),X'58'                                0275 00354000
*                   GO TO ERRORX;   /* GET SEQUENTIAL REQUEST        */ 00355000
         B     ERRORX                                              0276 00356000
*                 END;              /* END OF INVALID PLH            */ 00357000
*               ELSE                /* PLH IS VALID.                 */ 00358000
*                 IF PLHEODX=ON     /* SEE IF END OF DATA            */ 00359000
*                   THEN            /* IF SO, SET ERROR              */ 00360000
@RF00273 TM    PLHEODX(RPLH),B'00000100'                           0278 00361000
         BNO   @RF00278                                            0278 00362000
*                   DO;                                            0279 00363000
*                     RPLERRCD=RPLEODER;/* REQUEST AFTER EOD         */ 00364000
         MVI   RPLERRCD(RRPL),X'04'                                0280 00365000
*                     GO TO ERRORX; /* SET ERROR AND EXIT            */ 00366000
         B     ERRORX                                              0281 00367000
*                   END;            /* END, EOD CODE                 */ 00368000
*                 ELSE              /* NOT FIRST TIME THROUGH        */ 00369000
*                   IF PLHSKPER=ON  /* POSITION IF SKIPPING          */ 00370000
*                     THEN          /* ACROSS ERROR CINV.            */ 00371000
@RF00278 TM    PLHSKPER(RPLH),B'00100000'                          0283 00372000
         BNO   @RF00283                                            0283 00373000
*                     DO;                                          0284 00374000
*I03:                                                              0285 00375000
*                       DO;         /* IDACALL(IDAFREEB)             */ 00376000
I03      DS    0H                                                  0286 00377000
*                         CALL IDAFREEB;/* EXIT TO IDAFREEB          */ 00378000
         L     @15,@CV01053                                        0286 00379000
         BALR  @14,@15                                             0286 00380000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00381000
         BALR @11,0                                                     00382000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00383000
         USING *,@11                                                    00384000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00385000
         L     @11,=A(@PSTART)                                          00386000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0290 00387000
*                                      ADDRESSING                    */ 00388000
         USING @PSTART,@11                                              00389000
*                       END I03;    /* FREE OLD BFR          @X04SVLP*/ 00390000
*I04:                                                              0292 00391000
*                       DO;         /* IDACALL(IDAGNXT)              */ 00392000
I04      DS    0H                                                  0293 00393000
*                         CALL IDAGNXT;/* EXIT TO IDAGNXT            */ 00394000
         L     @15,@CV01044                                        0293 00395000
         BALR  @14,@15                                             0293 00396000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00397000
         BALR @11,0                                                     00398000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00399000
         USING *,@11                                                    00400000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00401000
         L     @11,=A(@PSTART)                                          00402000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0297 00403000
*                                      ADDRESSING                    */ 00404000
         USING @PSTART,@11                                              00405000
*                       END I04;    /* GET NEXT RBA                  */ 00406000
*                       IF RPLERREG^='0C'X THEN/* IF NO I/O ERROR,   */ 00407000
         CLI   RPLERREG(RRPL),12                                   0299 00408000
         BE    @RF00299                                            0299 00409000
*                         PLHSKPER=OFF;/* STOP SKIPPING.             */ 00410000
         NI    PLHSKPER(RPLH),B'11011111'                          0300 00411000
*                     END;          /* END OF SKIP CODE              */ 00412000
*         END;                      /* END, EXCEPTION CODE           */ 00413000
*                                                                  0302 00414000
*       /*************************************************************/ 00415000
*       /*                                                           */ 00416000
*       /* NORMAL PROCESSING--ADVANCE THE PLACEHOLDER TO THE NEXT    */ 00417000
*       /* CONTROL INTERVAL IN PHYSICAL SEQUENCE.                    */ 00418000
*       /*                                                           */ 00419000
*       /*************************************************************/ 00420000
*                                                                  0303 00421000
*       ELSE                        /* HERE NO EXCEPT CODES          */ 00422000
*         DO;                                                      0303 00423000
*                                                                  0303 00424000
         B     @RC00237                                            0303 00425000
@RF00237 DS    0H                                                  0304 00426000
*           /*********************************************************/ 00427000
*           /*                                                       */ 00428000
*           /* IF PLH DOES NOT HAVE MAXIMUM BUFFERS, TRY TO ADD SOME */ 00429000
*           /* TO THE I/O CHAIN.                             @X04SVMR*/ 00430000
*           /*                                                       */ 00431000
*           /*********************************************************/ 00432000
*                                                                  0304 00433000
*           IF PLHASKBF=ON THEN     /* TEST FOR MAX BFRS     @X04SVMR*/ 00434000
         TM    PLHASKBF(RPLH),B'00100000'                          0304 00435000
         BNO   @RF00304                                            0304 00436000
*             DO;                                                  0305 00437000
*               RPARM1=ZERO;        /* REQUEST MAX BFRS      @X04SVMR*/ 00438000
         SLR   RPARM1,RPARM1                                       0306 00439000
*I05:                                                              0307 00440000
*               DO;                 /* IDACALL(IDAABF)               */ 00441000
I05      DS    0H                                                  0308 00442000
*                 CALL IDAABF;      /* EXIT TO IDAABF                */ 00443000
         L     @15,@CV01045                                        0308 00444000
         BALR  @14,@15                                             0308 00445000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00446000
         BALR @11,0                                                     00447000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00448000
         USING *,@11                                                    00449000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00450000
         L     @11,=A(@PSTART)                                          00451000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00452000
         USING @PSTART,@11                                              00453000
*               END I05;            /* ADD BUFFERS           @X04SVMR*/ 00454000
*             END;                  /* END OF ADD BFRS       @X04SVMR*/ 00455000
*                                                                  0314 00456000
*           /*********************************************************/ 00457000
*           /*                                                       */ 00458000
*           /* FREE OLD BUFFER                                       */ 00459000
*           /*                                                       */ 00460000
*           /*********************************************************/ 00461000
*                                                                  0315 00462000
*           RBUFC=PLHDBUFC;         /* POINT TO CUR BUFC     @X04SVRQ*/ 00463000
@RF00304 L     RBUFC,PLHDBUFC(,RPLH)                               0315 00464000
*I06:                                                              0316 00465000
*           DO;                     /* IDACALL(IDAFREEB)             */ 00466000
I06      DS    0H                                                  0317 00467000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 00468000
         L     @15,@CV01053                                        0317 00469000
         BALR  @14,@15                                             0317 00470000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00471000
         BALR @11,0                                                     00472000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00473000
         USING *,@11                                                    00474000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00475000
         L     @11,=A(@PSTART)                                          00476000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00477000
         USING @PSTART,@11                                              00478000
*           END I06;                /*                       @X04SVLP*/ 00479000
*                                                                  0322 00480000
*           /*********************************************************/ 00481000
*           /*                                                       */ 00482000
*           /* GET NEXT NEW BUFFER                                   */ 00483000
*           /*                                                       */ 00484000
*           /*********************************************************/ 00485000
*                                                                  0323 00486000
*I07:                                                              0323 00487000
*           DO;                     /* IDACALL(IDAGNXT)              */ 00488000
I07      DS    0H                                                  0324 00489000
*             CALL IDAGNXT;         /* EXIT TO IDAGNXT               */ 00490000
         L     @15,@CV01044                                        0324 00491000
         BALR  @14,@15                                             0324 00492000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00493000
         BALR @11,0                                                     00494000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00495000
         USING *,@11                                                    00496000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00497000
         L     @11,=A(@PSTART)                                          00498000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00499000
         USING @PSTART,@11                                              00500000
*           END I07;                                               0329 00501000
*         END;                      /* END--ADVANCE POSITION         */ 00502000
*       IF RPLERREG^='00'X          /* CHECK FOR ERROR               */ 00503000
*         THEN                      /* IF ANY, COME HERE             */ 00504000
@RC00237 CLI   RPLERREG(RRPL),0                                    0331 00505000
         BE    @RF00331                                            0331 00506000
*         DO;                                                      0332 00507000
*           IF RPLERRCD=RPLEXCL THEN/* IF READ EXCL ERROR,           */ 00508000
         CLI   RPLERRCD(RRPL),20                                   0333 00509000
         BNE   @RF00333                                            0333 00510000
*             DO;                   /* REMEMBER POSITION.    @ZA07544*/ 00511000
*               PLHCRBA=RPARM1;     /* PASS BACK ERROR RBA   @ZA07544*/ 00512000
         ST    RPARM1,PLHCRBA(,RPLH)                               0335 00513000
*               PLH1ST=ON;          /* PREVENT PLH ADVANCE.          */ 00514000
         OI    PLH1ST(RPLH),B'01000000'                            0336 00515000
*             END;                  /* END EXCL CNTL ERROR   @ZA07544*/ 00516000
*           IF RPLDIR=ON THEN       /* IF DIR REQ AND RD EXCL        */ 00517000
@RF00333 TM    RPLDIR(RRPL),B'01000000'                            0338 00518000
         BNO   @RF00338                                            0338 00519000
*             PLHINVAL=ON;          /* OR I/O ERROR, DROP PLH.       */ 00520000
         OI    PLHINVAL(RPLH),B'00000010'                          0339 00521000
*           GO TO R8EXIT;           /* RETURN TO CALLER              */ 00522000
         B     R8EXIT                                              0340 00523000
*         END;                      /* END OF ERROR CHECK            */ 00524000
*       ELSE                        /* HERE IF NO ERROR      @ZA07544*/ 00525000
*         PLHCRBA=BUFCDDDD;         /* SET NEW CURRENT RBA   @ZA07544*/ 00526000
@RF00331 L     @10,BUFCDDDD(,RBUFC)                                0342 00527000
         ST    @10,PLHCRBA(,RPLH)                                  0342 00528000
*/*  PASS THE RBA, LENGTH, AND RECORD OR RECORD POINTER TO THE USER. */ 00529000
*                                                                  0343 00530000
*       RPLDDDD=PLHCRBA;            /* PUT RBA IN RPL                */ 00531000
         ST    @10,RPLDDDD(,RRPL)                                  0343 00532000
*       RPLRLEN=AMDCINV;            /* PUT RECORD LEN IN RPL         */ 00533000
         L     @10,AMBDSB(,RAMB)                                   0344 00534000
         L     @10,AMDCINV(,@10)                                   0344 00535000
         ST    @10,RPLRLEN(,RRPL)                                  0344 00536000
*       IF RPLLOC=ON THEN           /* IF LOCATE MODE,               */ 00537000
         TM    RPLLOC(RRPL),B'10000000'                            0345 00538000
         BNO   @RF00345                                            0345 00539000
*         USERPTR=BUFCBAD;          /* SET POINTER                   */ 00540000
         L     @10,RPLAREA(,RRPL)                                  0346 00541000
         MVC   USERPTR(4,@10),BUFCBAD(RBUFC)                       0346 00542000
*       ELSE                        /* MOVE MODE.            @X04SVRQ*/ 00543000
*         IF AMBUBF=OFF THEN        /* NOT UBF.              @X04SVRQ*/ 00544000
         B     @RC00345                                            0347 00545000
@RF00345 TM    AMBUBF(RAMB),B'00000100'                            0347 00546000
         BNZ   @RF00347                                            0347 00547000
*           DO;                     /* MOVE CINV TO USER AREA      0348 00548000
*                                                            @X04SVRQ*/ 00549000
*             RESPECIFY                                            0349 00550000
*              (RWORK2,                                            0349 00551000
*               RWORK3,                                            0349 00552000
*               RWORK4,                                            0349 00553000
*               RWORK5) RESTRICTED; /* GET REGS                      */ 00554000
*             RWORK3=AMDCINV;       /* GET CINV LENGTH               */ 00555000
         L     @10,AMBDSB(,RAMB)                                   0350 00556000
         L     RWORK3,AMDCINV(,@10)                                0350 00557000
*             RWORK5=RWORK3;        /* INTO ODD REGS                 */ 00558000
         LR    RWORK5,RWORK3                                       0351 00559000
*             RWORK2=ADDR(USERAREA);/* SET UP TO ADDR                */ 00560000
         L     RWORK2,RPLAREA(,RRPL)                               0352 00561000
*             RWORK4=ADDR(AM0AREA); /* SET UP FROM ADDR              */ 00562000
         L     RWORK4,BUFCBAD(,RBUFC)                              0353 00563000
*             GEN(MVCL RWORK2,RWORK4);/* MOVE CINV                   */ 00564000
         MVCL RWORK2,RWORK4                                             00565000
*             RESPECIFY                                            0355 00566000
*              (RWORK2,                                            0355 00567000
*               RWORK3,                                            0355 00568000
*               RWORK4,                                            0355 00569000
*               RWORK5) UNRESTRICTED;/* DROP REGS                    */ 00570000
*           END;                    /* END OF MOVE MODE              */ 00571000
*       PLHRCODE=RPLREQ;            /* SAVE REQUEST CODE     @X04SVMR*/ 00572000
@RF00347 DS    0H                                                  0357 00573000
@RC00345 IC    @10,RPLREQ(,RRPL)                                   0357 00574000
         STC   @10,PLHRCODE(,RPLH)                                 0357 00575000
*       IF RPLREQ=RPLGETIX THEN     /* GETIX REQUEST.        @X04SVRQ*/ 00576000
         CLI   RPLREQ(RRPL),11                                     0358 00577000
         BNE   @RF00358                                            0358 00578000
*         DO;                       /* BYPASS JOURNAL EXIT.  @X04SVRQ*/ 00579000
*           IF RPLUPD=ON THEN       /* UPDATE REQUEST.       @X04SVRQ*/ 00580000
         TM    RPLUPD(RRPL),B'00000010'                            0360 00581000
         BNO   @RF00360                                            0360 00582000
*             PLHUPD=ON;            /* SET PLH UPDATE.       @X04SVRQ*/ 00583000
         OI    PLHUPD(RPLH),B'10000000'                            0361 00584000
*           ELSE                    /* NOT UPDATE REQUEST.   @X04SVRQ*/ 00585000
*             DO;                                                  0362 00586000
         B     @RC00360                                            0362 00587000
@RF00360 DS    0H                                                  0363 00588000
*               PLHINVAL=ON;        /* INVALIDATE PLH        @X04SVMR*/ 00589000
         OI    PLHINVAL(RPLH),B'00000010'                          0363 00590000
*I08:                                                              0364 00591000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00592000
I08      DS    0H                                                  0365 00593000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00594000
         L     @15,@CV01053                                        0365 00595000
         BALR  @14,@15                                             0365 00596000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00597000
         BALR @11,0                                                     00598000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00599000
         USING *,@11                                                    00600000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00601000
         L     @11,=A(@PSTART)                                          00602000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00603000
         USING @PSTART,@11                                              00604000
*               END I08;            /* FREE BUFFER.          @X04SVRQ*/ 00605000
*             END;                  /* END, NON-UPDATE       @X04SVMR*/ 00606000
*           GOTO R8EXIT;            /* RETURN.               @X04SVRQ*/ 00607000
         B     R8EXIT                                              0372 00608000
*         END;                      /* END BYPASS JRN EXIT.  @X04SVRQ*/ 00609000
*/*  JOURNAL THE GET IF JRNAD WAS SPECIFIED.                         */ 00610000
*                                                                  0374 00611000
*       IF AMBJRN=ON                /* IF A JOURNAL EXIT IS          */ 00612000
*         THEN                      /* PRESENT, TAKE IT.             */ 00613000
@RF00358 TM    AMBJRN(RAMB),B'00000010'                            0374 00614000
         BNO   @RF00374                                            0374 00615000
*         DO;                                                      0375 00616000
*           PLHJCODE=PLHJGET;       /* SET CODE FOR GET              */ 00617000
         MVI   PLHJCODE(RPLH),B'00000000'                          0376 00618000
*I09:                                                              0377 00619000
*           DO;                     /* IDACALL(IDATJXIT)             */ 00620000
I09      DS    0H                                                  0378 00621000
*             CALL IDATJXIT;        /* EXIT TO IDATJXIT              */ 00622000
         L     @15,@CV01046                                        0378 00623000
         BALR  @14,@15                                             0378 00624000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00625000
         BALR @11,0                                                     00626000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00627000
         USING *,@11                                                    00628000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00629000
         L     @11,=A(@PSTART)                                          00630000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00631000
         USING @PSTART,@11                                              00632000
*           END I09;                /* TAKE JRNAD EXIT       @X04SVMR*/ 00633000
*         END;                      /* END OF JOURNAL EXIT           */ 00634000
*/*  FORGET THE PLACEHOLDER FOR NORMAL DIRECT REQUESTS SO THAT THE 0385 00635000
*    PLACEHOLDER IS AVAILABLE FOR ASSIGNMENT TO OTHER RPLS WITHOUT THE  00636000
*    USER HAVING TO ISSUE AN ENDREQ AGAINST THE OLD RPL.  IF THE PLACE- 00637000
*    HOLDER IS TO BE RETAINED, SET UPDATE FLAG IF NECESSARY.         */ 00638000
*                                                                  0385 00639000
*       IF RPLDIR=ON THEN           /* IF DIRECT REQUEST     @X04SVMR*/ 00640000
@RF00374 TM    RPLDIR(RRPL),B'01000000'                            0385 00641000
         BNO   @RF00385                                            0385 00642000
*         DO;                                                      0386 00643000
*           IF RPLUPD=OFF&          /* NEITHER UPD NOR       @X04SVMR*/ 00644000
*               RPLNSP=OFF&         /* NOTE STRING POSITION          */ 00645000
*               RPLLOC=OFF          /* NOR LOCATE MODE               */ 00646000
*             THEN                  /* THEN FORGET PLACEHOLDER       */ 00647000
         TM    RPLUPD(RRPL),B'00000011'                            0387 00648000
         BNZ   @RF00387                                            0387 00649000
         TM    RPLLOC(RRPL),B'10000000'                            0387 00650000
         BNZ   @RF00387                                            0387 00651000
*             DO;                                                  0388 00652000
*               PLHINVAL=ON;        /* MAKE PLH INVALID              */ 00653000
         OI    PLHINVAL(RPLH),B'00000010'                          0389 00654000
*I10:                                                              0390 00655000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00656000
I10      DS    0H                                                  0391 00657000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00658000
         L     @15,@CV01053                                        0391 00659000
         BALR  @14,@15                                             0391 00660000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00661000
         BALR @11,0                                                     00662000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00663000
         USING *,@11                                                    00664000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00665000
         L     @11,=A(@PSTART)                                          00666000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00667000
         USING @PSTART,@11                                              00668000
*               END I10;            /* FREE THE BFR          @X04SVLP*/ 00669000
*             END;                  /* END, FORGET PLACEHOLDER       */ 00670000
*                                                                  0397 00671000
*           /*********************************************************/ 00672000
*           /*                                                       */ 00673000
*           /* IF PLH IS TO BE RETAINED, SET ASKBF IN CASE OF A      */ 00674000
*           /* SWITCH TO SEQUENTIAL PROCESSING.              @X04SVMR*/ 00675000
*           /*                                                       */ 00676000
*           /*********************************************************/ 00677000
*                                                                  0398 00678000
*           ELSE                                                   0398 00679000
*             PLHASKBF=ON;                                         0398 00680000
         B     @RC00387                                            0398 00681000
@RF00387 OI    PLHASKBF(RPLH),B'00100000'                          0398 00682000
*         END;                      /* END OF DIR CODE       @X04SVMR*/ 00683000
@RC00387 DS    0H                                                  0400 00684000
*       IF RPLUPD=ON THEN           /* SEE IF UPDATE                 */ 00685000
@RF00385 TM    RPLUPD(RRPL),B'00000010'                            0400 00686000
         BNO   @RF00400                                            0400 00687000
*         PLHUPD=ON;                /* IF SO SET UPDATE IN PLH       */ 00688000
         OI    PLHUPD(RPLH),B'10000000'                            0401 00689000
*     END;                          /* END, GET CINV ACCESSING       */ 00690000
*                                                                  0403 00691000
*/*       ********************  PUT REQUEST  ********************    */ 00692000
*                                                                  0403 00693000
*   ELSE                            /* HERE IF NOT GET               */ 00694000
*     DO;                                                          0403 00695000
         B     @RC00201                                            0403 00696000
@RF00201 DS    0H                                                  0404 00697000
*       IF RPLREQ=RPLPUT|RPLREQ=RPLPUTIX/* SEE IF PUT OR PUTIX.    0404 00698000
*                                                            @X04SVRQ*/ 00699000
*         THEN                      /* HERE IF IT IS                 */ 00700000
         CLI   RPLREQ(RRPL),1                                      0404 00701000
         BE    @RT00404                                            0404 00702000
         CLI   RPLREQ(RRPL),12                                     0404 00703000
         BNE   @RF00404                                            0404 00704000
@RT00404 DS    0H                                                  0405 00705000
*         DO;                                                      0405 00706000
*                                                                  0405 00707000
*           /*********************************************************/ 00708000
*           /*                                                       */ 00709000
*           /* VERIFY THAT OUTPUT WAS SPECIFIED.             @X04SVMR*/ 00710000
*           /*                                                       */ 00711000
*           /*********************************************************/ 00712000
*                                                                  0406 00713000
*           IF AMBLWRIT=OFF THEN    /* OUTPUT?               @X04SVMR*/ 00714000
         L     @10,RPLDACB(,RRPL)                                  0406 00715000
         L     @10,ACBAMBL(,@10)                                   0406 00716000
         TM    AMBLWRIT(@10),B'00100000'                           0406 00717000
         BNZ   @RF00406                                            0406 00718000
*             DO;                   /*                       @X04SVMR*/ 00719000
*               RPLERRCD=RPLINACC;  /* SET INVALID.          @X04SVMR*/ 00720000
         MVI   RPLERRCD(RRPL),X'44'                                0408 00721000
*               GO TO ERRORX;       /* ERROR EXIT.           @X04SVMR*/ 00722000
         B     ERRORX                                              0409 00723000
*             END;                  /* END, ERROR            @X04SVMR*/ 00724000
*                                                                  0410 00725000
*           /*********************************************************/ 00726000
*           /*                                                       */ 00727000
*           /* VALIDATE THE RECORD LENGTH                            */ 00728000
*           /*                                                       */ 00729000
*           /*********************************************************/ 00730000
*                                                                  0411 00731000
*           IF RPLRLEN^=AMDCINV     /* SEE IF RECORD LEN OK          */ 00732000
*             THEN                  /* IF NOT, COME HERE             */ 00733000
@RF00406 L     @10,AMBDSB(,RAMB)                                   0411 00734000
         CLC   RPLRLEN(4,RRPL),AMDCINV(@10)                        0411 00735000
         BE    @RF00411                                            0411 00736000
*             DO;                                                  0412 00737000
*               RPLERRCD=RPLINLEN;  /* SET INVALID LENGTH            */ 00738000
         MVI   RPLERRCD(RRPL),X'6C'                                0413 00739000
*               GO TO ERRORX;       /* TAKE ERROR EXIT               */ 00740000
         B     ERRORX                                              0414 00741000
*             END;                  /* END OF INVALID LENGTH         */ 00742000
*                                                                  0415 00743000
*           /*********************************************************/ 00744000
*           /*                                                       */ 00745000
*           /* ENSURE ONLY MOVE MODE PUTS ARE DONE                   */ 00746000
*           /*                                                       */ 00747000
*           /*********************************************************/ 00748000
*                                                                  0416 00749000
*           IF RPLLOC=ON            /* IF LOCATE MODE WAS            */ 00750000
*             THEN                  /* SPECIFIED FOR PUT, SET        */ 00751000
@RF00411 TM    RPLLOC(RRPL),B'10000000'                            0416 00752000
         BNO   @RF00416                                            0416 00753000
*             DO;                   /* INVALID LOCATE ERROR.         */ 00754000
*INVLOC:                                                           0418 00755000
*               RPLERRCD=RPLINLOC;  /* SET ERROR CODE                */ 00756000
INVLOC   MVI   RPLERRCD(RRPL),X'54'                                0418 00757000
*               GO TO ERRORX;       /* TAKE ERROR RETURN             */ 00758000
         B     ERRORX                                              0419 00759000
*             END;                  /* END OF INVALID LOCATE         */ 00760000
*           IF RPLUPD=ON            /* SEE IF PUT FOR UPDATE         */ 00761000
*             THEN                  /* IF SO, COME HERE              */ 00762000
@RF00416 TM    RPLUPD(RRPL),B'00000010'                            0421 00763000
         BNO   @RF00421                                            0421 00764000
*             DO;                                                  0422 00765000
*                                                                  0422 00766000
*               /*****************************************************/ 00767000
*               /*                                                   */ 00768000
*               /* PUT FOR UPDATE--ALLOW STAND-ALONE PUT FOR UPDATE  */ 00769000
*               /* ONLY IF USER BUFFERING IS SPECIFIED. FOR          */ 00770000
*               /* STAND-ALONE PUT UPD GET THE RBA FROM THE RPL      */ 00771000
*               /* (DIRECT) OR THE PLACE- HOLDER (SEQUENTIAL).       */ 00772000
*               /*                                                   */ 00773000
*               /*****************************************************/ 00774000
*                                                                  0423 00775000
*               IF RPLREQ=RPLPUTIX&RPLDIR=OFF THEN/* PUTIX & NOT   0423 00776000
*                                      DIRECT.               @X04SVRQ*/ 00777000
         CLI   RPLREQ(RRPL),12                                     0423 00778000
         BNE   @RF00423                                            0423 00779000
         TM    RPLDIR(RRPL),B'01000000'                            0423 00780000
         BNZ   @RF00423                                            0423 00781000
*                 DO;               /*                       @X04SVRQ*/ 00782000
*                   RPLERRCD=RPLINVP;/* INVALID RPL OPT      @X04SVRQ*/ 00783000
         MVI   RPLERRCD(RRPL),X'68'                                0425 00784000
*                   GOTO ERRORX;    /* ERROR EXIT.           @X04SVRQ*/ 00785000
         B     ERRORX                                              0426 00786000
*                 END;              /*                       @X04SVRQ*/ 00787000
*               IF PLHUPD=OFF       /* SEE IF LAST REQ GET UPD       */ 00788000
*                 THEN              /* IF NOT, SET ERROR             */ 00789000
@RF00423 TM    PLHUPD(RPLH),B'10000000'                            0428 00790000
         BNZ   @RF00428                                            0428 00791000
*                 DO;                                              0429 00792000
*                   IF AMBUBF=OFF|  /* STAND-ALONE           @X04SVMR*/ 00793000
*                       RPLREQ=RPLPUTIX/* PUT (NO PUTIX)     @X04SVMR*/ 00794000
*                     THEN          /* UPDATE ONLY FOR USER          */ 00795000
         TM    AMBUBF(RAMB),B'00000100'                            0430 00796000
         BZ    @RT00430                                            0430 00797000
         CLI   RPLREQ(RRPL),12                                     0430 00798000
         BNE   @RF00430                                            0430 00799000
@RT00430 DS    0H                                                  0431 00800000
*                     DO;           /* BUFFERING.                    */ 00801000
*                       RPLERRCD=RPLINUPD;/* SET INVALID UPDATE      */ 00802000
         MVI   RPLERRCD(RRPL),X'5C'                                0432 00803000
*                       GO TO ERRORX;/* SET ERROR AND EXIT           */ 00804000
         B     ERRORX                                              0433 00805000
*                     END;          /* END, ERROR CONDITION          */ 00806000
*                   ELSE            /* HERE FOR USER BUFFERING       */ 00807000
*                     DO;           /* AND STAND-ALONE PUT           */ 00808000
*                                                                  0435 00809000
@RF00430 DS    0H                                                  0436 00810000
*                       /*********************************************/ 00811000
*                       /*                                           */ 00812000
*                       /* ESTABLISH POSITION AND BFR COUNT FOR UBF  */ 00813000
*                       /*                                           */ 00814000
*                       /*********************************************/ 00815000
*                                                                  0436 00816000
*                       IF RPLSEQ=OFF/* IF NON-SEQUENTIAL, GET       */ 00817000
*                         THEN      /* THE RBA FROM THE USER.        */ 00818000
         TM    RPLSEQ(RRPL),B'00100000'                            0436 00819000
         BNZ   @RF00436                                            0436 00820000
*                         DO;                                      0437 00821000
*                                                                  0437 00822000
*                           /*****************************************/ 00823000
*                           /*                                       */ 00824000
*                           /* VALIDATE THE USER-SUPPLIED RBA        */ 00825000
*                           /*                               @X04SVMR*/ 00826000
*                           /*                                       */ 00827000
*                           /*****************************************/ 00828000
*                                                                  0438 00829000
*                           IF RBA//AMDCINV^=ZERO THEN/* RBA NOT ON     00830000
*                                      CI BOUNDARY.                  */ 00831000
         L     @10,RPLARG(,RRPL)                                   0438 00832000
         L     @10,RBA(,@10)                                       0438 00833000
         L     @05,AMBDSB(,RAMB)                                   0438 00834000
         LR    @07,@10                                             0438 00835000
         SLR   @06,@06                                             0438 00836000
         D     @06,AMDCINV(,@05)                                   0438 00837000
         LTR   @06,@06                                             0438 00838000
         BNZ   @RT00438                                            0438 00839000
*                             GOTO BADBDY;/* GO SET ERROR.           */ 00840000
*                           BUFCDDDD=RBA;/* GET USER RBA             */ 00841000
         ST    @10,BUFCDDDD(,RBUFC)                                0440 00842000
*                           PLHNRBA=RBA;/* SET RD-AHEAD POINTER      */ 00843000
         ST    @10,PLHNRBA(,RPLH)                                  0441 00844000
*                         END;                                     0442 00845000
*                       ELSE                                       0443 00846000
*                         DO;                                      0443 00847000
         B     @RC00436                                            0443 00848000
@RF00436 DS    0H                                                  0444 00849000
*                           PLHFRCNT=ONE;/* ONE BUFFER IS FREE       */ 00850000
         MVI   PLHFRCNT(RPLH),X'01'                                0444 00851000
*                           IF PLHINVAL=ON/* MAKE SURE THE PLH IS    */ 00852000
*                             THEN  /* VALID.                        */ 00853000
         TM    PLHINVAL(RPLH),B'00000010'                          0445 00854000
         BNO   @RF00445                                            0445 00855000
*                             DO;                                  0446 00856000
*                               RPLERRCD=RPLNOPTR;/* SET INV. PLH    */ 00857000
         MVI   RPLERRCD(RRPL),X'58'                                0447 00858000
*                               GO TO ERRORX;/* EXIT                 */ 00859000
         B     ERRORX                                              0448 00860000
*                             END;  /* END OF INVALID PLH.           */ 00861000
*                           PLHNRBA=PLHCRBA;/* GET IDAFRBA INPUT     */ 00862000
@RF00445 L     @10,PLHCRBA(,RPLH)                                  0450 00863000
         ST    @10,PLHNRBA(,RPLH)                                  0450 00864000
*                           IF PLH1ST=OFF THEN/* IF NOT FIRST TIME,  */ 00865000
         TM    PLH1ST(RPLH),B'01000000'                            0451 00866000
         BNZ   @RF00451                                            0451 00867000
*                             DO;                                  0452 00868000
*I11:                                                              0453 00869000
*                               DO; /* IDACALL(IDAFRBA)              */ 00870000
I11      DS    0H                                                  0454 00871000
*                                 CALL IDAFRBA;/* EXIT TO IDAFRBA    */ 00872000
         L     @15,@CV01042                                        0454 00873000
         BALR  @14,@15                                             0454 00874000
*                                 GEN(BALR @11,0);/* LOAD ADDR OF  0455 00875000
*                                      REENTRY                       */ 00876000
         BALR @11,0                                                     00877000
*                                 GEN(USING *,@11);/* ESTABLISH    0456 00878000
*                                      ADDRESSING                    */ 00879000
         USING *,@11                                                    00880000
*                                 GEN(L     @11,=A(@PSTART));/*    0457 00881000
*                                      RELOAD BASE                   */ 00882000
         L     @11,=A(@PSTART)                                          00883000
*                                 GEN(USING @PSTART,@11);/* ESTABLISH   00884000
*                                      ADDRESSING                    */ 00885000
         USING @PSTART,@11                                              00886000
*                               END I11;/* DETERMINE NEXT RBA        */ 00887000
*                               RFY                                0460 00888000
*                                 R15 RSTD;/* GET RETURN CODE        */ 00889000
*                               IF RPLERREG^='00'X THEN/* IF I/O   0461 00890000
*                                      ERROR                         */ 00891000
         CLI   RPLERREG(RRPL),0                                    0461 00892000
         BNE   @RT00461                                            0461 00893000
*                                 GO TO R8EXIT;/* EXIT FROM ROUTINE. */ 00894000
*                               IF R15=RPLEODER/* SEE IF END OF DATA */ 00895000
*                                 THEN/* IF SO, SET CODE             */ 00896000
         C     R15,@CF00036                                        0463 00897000
         BNE   @RF00463                                            0463 00898000
*                                 DO;/* IN THE RPL.                  */ 00899000
*                                   RPLERRCD=RPLEODER;/* SET END OF     00900000
*                                      DATA                          */ 00901000
         MVI   RPLERRCD(RRPL),X'04'                                0465 00902000
*                                   GO TO ERRORX;/* TAKE ERROR EXIT  */ 00903000
         B     ERRORX                                              0466 00904000
*                                 END;/* END OF EOD CODE             */ 00905000
*                               RFY                                0468 00906000
*                                 R15 UNRSTD;/* RELEASE R15          */ 00907000
@RF00463 DS    0H                                                  0469 00908000
*                             END;  /* END OF NOT 1ST TIME           */ 00909000
*                           ELSE    /* FIRST TIME.                   */ 00910000
*                             PLH1ST=OFF;/* INDICATE NOT FIRST       */ 00911000
         B     @RC00451                                            0470 00912000
@RF00451 NI    PLH1ST(RPLH),B'10111111'                            0470 00913000
*                           BUFCDDDD=PLHNRBA;/* PUT RBA IN BUFFER    */ 00914000
@RC00451 L     @10,PLHNRBA(,RPLH)                                  0471 00915000
         ST    @10,BUFCDDDD(,RBUFC)                                0471 00916000
*                         END;      /* END OF SEQ-USER BFR           */ 00917000
*                       PLHCRBA=BUFCDDDD;/* SAVE NEW RBA IN PLH      */ 00918000
@RC00436 L     @10,BUFCDDDD(,RBUFC)                                0473 00919000
         ST    @10,PLHCRBA(,RPLH)                                  0473 00920000
*                       BUFXORBA=BUFCDDDD;/* & IN SR FIELD   @X04SVMR*/ 00921000
         ST    @10,BUFXORBA(,RBUFC)                                0474 00922000
*                       PLHFRCNT=ZERO;/* BUFFER IS NOT FREE          */ 00923000
         MVI   PLHFRCNT(RPLH),X'00'                                0475 00924000
*                       PLHRDEXC=ON;/* SET PLH READ EXCL.    @X04SVRQ*/ 00925000
         OI    PLHRDEXC(RPLH),B'00001000'                          0476 00926000
*I12:                                                              0477 00927000
*                       DO;         /* IDACALL(IDAEXCL)              */ 00928000
I12      DS    0H                                                  0478 00929000
*                         CALL IDAEXCL;/* EXIT TO IDAEXCL            */ 00930000
         L     @15,@CV01054                                        0478 00931000
         BALR  @14,@15                                             0478 00932000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 00933000
         BALR @11,0                                                     00934000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 00935000
         USING *,@11                                                    00936000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 00937000
         L     @11,=A(@PSTART)                                          00938000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0482 00939000
*                                      ADDRESSING                    */ 00940000
         USING @PSTART,@11                                              00941000
*                       END I12;    /* GET EXCL. CTL.        @X04SVRQ*/ 00942000
*                       IF RPLERREG^='00'X THEN/* ERROR.     @X04SVRQ*/ 00943000
         CLI   RPLERREG(RRPL),0                                    0484 00944000
         BNE   @RT00484                                            0484 00945000
*                         GOTO ERRORX;/* EXIT.               @X04SVRQ*/ 00946000
*                     END;          /* END--USER BUFFER CODE         */ 00947000
*                 END;              /* END STAND-ALONE PUT           */ 00948000
*/*  INDICATE BUFFER CONTENTS UPDATED                                */ 00949000
*                                                                  0488 00950000
*               ELSE                /* PREV REQ WAS UPD.     @X04SVRQ*/ 00951000
*                 DO;               /* VERIFY PREV GET.      @X04SVRQ*/ 00952000
         B     @RC00428                                            0488 00953000
@RF00428 DS    0H                                                  0489 00954000
*                   IF RPLREQ=RPLPUTIX&PLHRCODE^=RPLGETIX THEN/*   0489 00955000
*                                      PUTIX REQ. & NOT PREVIOUS   0489 00956000
*                                      GETIX.                @X04SVRQ*/ 00957000
         CLI   RPLREQ(RRPL),12                                     0489 00958000
         BNE   @RF00489                                            0489 00959000
         CLI   PLHRCODE(RPLH),11                                   0489 00960000
         BE    @RF00489                                            0489 00961000
*                     DO;           /*                       @X04SVRQ*/ 00962000
*                       RPLERRCD=RPLINUPD;/* INVALID UPDATE. @X04SVRQ*/ 00963000
         MVI   RPLERRCD(RRPL),X'5C'                                0491 00964000
*                       GOTO ERRORX;/* ERROR EXIT.           @X04SVRQ*/ 00965000
         B     ERRORX                                              0492 00966000
*                     END;          /*                       @X04SVRQ*/ 00967000
*                   IF RPLREQ=RPLPUT&PLHRCODE=RPLGETIX THEN/* PUT  0494 00968000
*                                      REQ. & PREVIOUS GETIX.      0494 00969000
*                                                            @X04SVRQ*/ 00970000
@RF00489 CLI   RPLREQ(RRPL),1                                      0494 00971000
         BNE   @RF00494                                            0494 00972000
         CLI   PLHRCODE(RPLH),11                                   0494 00973000
         BNE   @RF00494                                            0494 00974000
*                     DO;           /*                       @X04SVRQ*/ 00975000
*                       RPLERRCD=RPLINUPD;/* INVALID UPDATE. @X04SVRQ*/ 00976000
         MVI   RPLERRCD(RRPL),X'5C'                                0496 00977000
*                       GOTO ERRORX;/* ERROR EXIT.           @X04SVRQ*/ 00978000
         B     ERRORX                                              0497 00979000
*                     END;          /*                       @X04SVRQ*/ 00980000
*                 END;              /* END VERIFY PREV GET.  @X04SVRQ*/ 00981000
@RF00494 DS    0H                                                  0500 00982000
*               BUFXORBA=BUFCDDDD;  /* SET EXCL OUTPUT RBA   @ZA17187*/ 00983000
@RC00428 L     @10,BUFCDDDD(,RBUFC)                                0500 00984000
         ST    @10,BUFXORBA(,RBUFC)                                0500 00985000
*               DO;                 /* SET UPDATED BFR               */ 00986000
*                 BUFCORBA=BUFCDDDD;                               0502 00987000
         ST    @10,BUFCORBA(,RBUFC)                                0502 00988000
*                 BUFCMW=ON;                                       0503 00989000
         OI    BUFCMW(RBUFC),B'10000000'                           0503 00990000
*               END;                                               0504 00991000
*               RPLDDDD=BUFCDDDD;   /* PASS RBA BACK TO CALLER       */ 00992000
         ST    @10,RPLDDDD(,RRPL)                                  0505 00993000
*             END;                  /* END, PUT UPDATE CODE          */ 00994000
*           ELSE                    /* HERE IF PUT NUP               */ 00995000
*             DO;                                                  0507 00996000
*                                                                  0507 00997000
         B     @RC00421                                            0507 00998000
@RF00421 DS    0H                                                  0508 00999000
*               /*****************************************************/ 01000000
*               /*                                                   */ 01001000
*               /* PUT FOR INSERT--RELEASE OLD BUFFER, IF NECESSARY  */ 01002000
*               /* AND THEN SERIALIZE THE INSERTS BY ISSUING A TEST  */ 01003000
*               /* AND SET ON THE DATA INSERT WORK AREA. IF THE      */ 01004000
*               /* RESOURCE IS UNAVAILABLE, DEFER THE REQUEST UNTIL  */ 01005000
*               /* THE RESOURCE BECOMES FREE OR WAIT UNTIL THE       */ 01006000
*               /* REQUEST IS COMPLETED AND THEN EXIT. (IDA019R1     */ 01007000
*               /* RESTARTS DEFERRED REQUESTS AFTER POSTING REQUESTS */ 01008000
*               /* THAT HAVE USED THE DIWA.)                         */ 01009000
*               /*                                                   */ 01010000
*               /*****************************************************/ 01011000
*                                                                  0508 01012000
*               IF RPLREQ=RPLPUTIX THEN/* PUTIX REQUEST.     @X04SVRQ*/ 01013000
         CLI   RPLREQ(RRPL),12                                     0508 01014000
         BNE   @RF00508                                            0508 01015000
*                 DO;               /*                       @X04SVRQ*/ 01016000
*                   RPLERRCD=RPLINVP;/* SET INVALID RPL OPT. @X04SVRQ*/ 01017000
         MVI   RPLERRCD(RRPL),X'68'                                0510 01018000
*                   GOTO ERRORX;    /* ERROR EXIT.           @X04SVRQ*/ 01019000
         B     ERRORX                                              0511 01020000
*                 END;              /*                       @X04SVRQ*/ 01021000
*               IF AMDDST='1'B|     /* IF DATA SET           @X04SVMR*/ 01022000
*                   AMDRRDS=ON      /* IS KEY/REL RCD        @X04SVMR*/ 01023000
*                 THEN              /* SEQUENCED, CNV INSERT         */ 01024000
@RF00508 L     @10,AMBDSB(,RAMB)                                   0513 01025000
         TM    AMDDST(@10),B'10000010'                             0513 01026000
         BZ    @RF00513                                            0513 01027000
*                 DO;               /* IS NOT ALLOWED.               */ 01028000
*                   RPLERRCD=RPLINADR;/* SET INVALID INSERT          */ 01029000
         MVI   RPLERRCD(RRPL),X'4C'                                0515 01030000
*                   GO TO ERRORX;   /* TAKE ERROR EXIT               */ 01031000
         B     ERRORX                                              0516 01032000
*                 END;              /* END OF INVALID INSERT         */ 01033000
*               IF AMBINBUF=ON&     /* IF SHR(4), THEN       @X04SVMR*/ 01034000
*                   AMBSCRA=OFF&AMBUCRA=OFF&/* IF NOT A CATLG,     0518 01035000
*                                                            @X04SVMR*/ 01036000
*                   AMBCAT=OFF THEN /* SET NO SPACE.         @X04SVMR*/ 01037000
@RF00513 TM    AMBINBUF(RAMB),B'00000001'                          0518 01038000
         BNO   @RF00518                                            0518 01039000
         TM    AMBSCRA(RAMB),B'00011100'                           0518 01040000
         BNZ   @RF00518                                            0518 01041000
*                 DO;               /*                       @X04SVMR*/ 01042000
*                   RPLERRCD=RPLNOEXT;/* UNABLE TO EXTEND    @X04SVMR*/ 01043000
         MVI   RPLERRCD(RRPL),X'1C'                                0520 01044000
*                   GO TO ERRORX;   /* TAKE ERROR EXIT       @X04SVMR*/ 01045000
         B     ERRORX                                              0521 01046000
*                 END;              /* END OF SHR(4) CODE    @X04SVMR*/ 01047000
*               RBUFC=PLHDBUFC;     /* POINT TO CURRENT BUFC         */ 01048000
*                                                                  0523 01049000
@RF00518 L     RBUFC,PLHDBUFC(,RPLH)                               0523 01050000
*               /*****************************************************/ 01051000
*               /*                                                   */ 01052000
*               /* IF FIRST SEQUENTIAL REQUEST, ADD BFRS     @X04SVMR*/ 01053000
*               /*                                                   */ 01054000
*               /*****************************************************/ 01055000
*                                                                  0524 01056000
*               IF PLH1ST=ON THEN   /* FIRST TIME?           @X04SVMR*/ 01057000
         TM    PLH1ST(RPLH),B'01000000'                            0524 01058000
         BNO   @RF00524                                            0524 01059000
*                 DO;                                              0525 01060000
*                   IF RPLSEQ=ON THEN/* SEE IF SEQ           @X04SVMR*/ 01061000
         TM    RPLSEQ(RRPL),B'00100000'                            0526 01062000
         BNO   @RF00526                                            0526 01063000
*                     DO;                                          0527 01064000
*                       PLHASKBF=ON;/* SET ASKBF FLAG        @X04SVMR*/ 01065000
         OI    PLHASKBF(RPLH),B'00100000'                          0528 01066000
*                       RPARM1=ZERO;/* REQUEST MAXIMUM@X04SVMR       */ 01067000
         SLR   RPARM1,RPARM1                                       0529 01068000
*I14:                                                              0530 01069000
*                       DO;         /* IDACALL(IDAABF)               */ 01070000
I14      DS    0H                                                  0531 01071000
*                         CALL IDAABF;/* EXIT TO IDAABF              */ 01072000
         L     @15,@CV01045                                        0531 01073000
         BALR  @14,@15                                             0531 01074000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 01075000
         BALR @11,0                                                     01076000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 01077000
         USING *,@11                                                    01078000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 01079000
         L     @11,=A(@PSTART)                                          01080000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0535 01081000
*                                      ADDRESSING                    */ 01082000
         USING @PSTART,@11                                              01083000
*                       END I14;    /* ADD BUFFERS           @X04SVMR*/ 01084000
*                     END;          /* END OF ASK BFR        @X04SVMR*/ 01085000
*                   PLH1ST=OFF;     /* RESET 1ST TIME        @X04SVMR*/ 01086000
@RF00526 NI    PLH1ST(RPLH),B'10111111'                            0538 01087000
*                 END;              /* END OF 1ST TIME       @X04SVMR*/ 01088000
*               ELSE                /* NOT 1ST TIME          @X04SVMR*/ 01089000
*                 IF(PLHUPD=ON|     /* SEE IF GET UPD LAST           */ 01090000
*                     PLHINVAL=OFF)&/* OR VALID PLH          @X04SVMR*/ 01091000
*                     RBUFC^=ZERO&  /* NO PRIOR FREE         @X04SVMR*/ 01092000
*                     AMBUBF=OFF THEN/* WITH A SYSTEM BUFFER IF SO,     01093000
*                                      FREE ITS BUFFER               */ 01094000
         B     @RC00524                                            0540 01095000
@RF00524 TM    PLHUPD(RPLH),B'10000000'                            0540 01096000
         BO    @GL00015                                            0540 01097000
         TM    PLHINVAL(RPLH),B'00000010'                          0540 01098000
         BNZ   @RF00540                                            0540 01099000
@GL00015 LTR   RBUFC,RBUFC                                         0540 01100000
         BZ    @RF00540                                            0540 01101000
         TM    AMBUBF(RAMB),B'00000100'                            0540 01102000
         BNZ   @RF00540                                            0540 01103000
*I15:                                                              0541 01104000
*                   DO;             /* IDACALL(IDAFREEB)             */ 01105000
I15      DS    0H                                                  0542 01106000
*                     CALL IDAFREEB;/* EXIT TO IDAFREEB              */ 01107000
         L     @15,@CV01053                                        0542 01108000
         BALR  @14,@15                                             0542 01109000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01110000
         BALR @11,0                                                     01111000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01112000
         USING *,@11                                                    01113000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01114000
         L     @11,=A(@PSTART)                                          01115000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01116000
         USING @PSTART,@11                                              01117000
*                   END I15;        /*                       @X04SVLP*/ 01118000
*TEST:                                                             0548 01119000
*               RPARM1=ADDR(IDADIWA);/* POINT TO DIWA                */ 01120000
@RF00540 DS    0H                                                  0548 01121000
@RC00524 DS    0H                                                  0548 01122000
TEST     L     RPARM1,AMBIWA(,RAMB)                                0548 01123000
*               GEN REFS(DIWATV)(TS DIWATV(RPARM1));/* SEE IF      0549 01124000
*                                      RESOURCE AVAIL                */ 01125000
         TS DIWATV(RPARM1)                                              01126000
*               BC(8,PROCESS);      /* IF SO, PROCESS        @X04SVMR*/ 01127000
         BC    8,PROCESS                                           0550 01128000
*               RFY                                                0551 01129000
*                 RWORK0 RSTD;      /* GET PARAMETER REG     @X04SVMR*/ 01130000
*               RWORK0=DEFR0;       /* SET DEFER PARAMETER           */ 01131000
         SLR   RWORK0,RWORK0                                       0552 01132000
*I16:                                                              0553 01133000
*               DO;                 /* IDACALL(IDADRQ)               */ 01134000
I16      DS    0H                                                  0554 01135000
*                 CALL IDADRQ;      /* EXIT TO IDADRQ                */ 01136000
         L     @15,@CV01050                                        0554 01137000
         BALR  @14,@15                                             0554 01138000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01139000
         BALR @11,0                                                     01140000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01141000
         USING *,@11                                                    01142000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01143000
         L     @11,=A(@PSTART)                                          01144000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01145000
         USING @PSTART,@11                                              01146000
*               END I16;            /* GET USE OF DIWA               */ 01147000
*               GO TO TEST;         /* SEE IF O.K.                   */ 01148000
         B     TEST                                                0560 01149000
*               RFY                                                0561 01150000
*                 RWORK0 UNRSTD;    /* DROP PARAM REG        @X04SVMR*/ 01151000
*PROCESS:                                                          0562 01152000
*               DIWPLH=RPLH;        /* INDICATE OWNER        @X04SVMR*/ 01153000
PROCESS  L     @10,AMBIWA(,RAMB)                                   0562 01154000
         ST    RPLH,DIWPLH(,@10)                                   0562 01155000
*               PLHINVAL=OFF;       /* VALID POSITION        @OX09380*/ 01156000
*                                                                  0563 01157000
         NI    PLHINVAL(RPLH),B'11111101'                          0563 01158000
*               /*****************************************************/ 01159000
*               /*                                                   */ 01160000
*               /* GET THE HIGH RBA AND CHECK IT FOR A BEGINNING OF A*/ 01161000
*               /* CONTROL AREA CONDITION. IF IT IS A NEW CONTROL    */ 01162000
*               /* AREA ENSURE THAT SPACE IS AVAILABLE AND THAT IT IS*/ 01163000
*               /* PREFORMATTED IF NECESSARY.                        */ 01164000
*               /*                                                   */ 01165000
*               /*****************************************************/ 01166000
*                                                                  0564 01167000
*               PLHARDB=ADDR(IDAARDB);/* POINT TO ARDB       @X04SVMR*/ 01168000
         L     @10,AMBDSB(,RAMB)                                   0564 01169000
         L     @05,AMDPARDB(,@10)                                  0564 01170000
         ST    @05,PLHARDB(,RPLH)                                  0564 01171000
*               PLHCRBA=ARDHRBA;    /* PUT IN HIGH WATER RBA         */ 01172000
         L     @05,ARDHRBA(,@05)                                   0565 01173000
         ST    @05,PLHCRBA(,RPLH)                                  0565 01174000
*               RPARM1=(PLHCRBA/AMDCINV)//AMDCIPCA;/* GET # OF CIS 0566 01175000
*                                      USED IN CA                    */ 01176000
         LR    @07,@05                                             0566 01177000
         SLR   @06,@06                                             0566 01178000
         D     @06,AMDCINV(,@10)                                   0566 01179000
         LR    @08,@07                                             0566 01180000
         SRDA  @08,32                                              0566 01181000
         LH    RPARM1,AMDCIPCA(,@10)                               0566 01182000
         DR    @08,RPARM1                                          0566 01183000
         LR    RPARM1,@08                                          0566 01184000
*               IF RPARM1=ZERO      /* IF BEGINNING OF CA, IT        */ 01185000
*                 THEN              /* MAY BE NECESSARY TO           */ 01186000
         SLR   @10,@10                                             0567 01187000
         CR    RPARM1,@10                                          0567 01188000
         BNE   @RF00567                                            0567 01189000
*                 DO;               /* GET MORE SPACE.               */ 01190000
*                   IF AMBDFR=OFF&  /* NOT DEFER WRITE       @X04SVRQ*/ 01191000
*                       PLHDBUFC^=ZERO THEN/* BUFFER IS HERE @ZA07540*/ 01192000
         TM    AMBDFR(RAMB),B'00001000'                            0569 01193000
         BNZ   @RF00569                                            0569 01194000
         L     @05,PLHDBUFC(,RPLH)                                 0569 01195000
         CR    @05,@10                                             0569 01196000
         BE    @RF00569                                            0569 01197000
*                     DO;           /* WRITE OLD BFRS        @ZA07540*/ 01198000
*                                                                  0570 01199000
*                       /*********************************************/ 01200000
*                       /*                                           */ 01201000
*                       /* POINTING TO OLDEST BUFFER, WRITE REST OF  */ 01202000
*                       /* OLD CONTROL AREA                          */ 01203000
*                       /*                                           */ 01204000
*                       /*********************************************/ 01205000
*                                                                  0571 01206000
*                       RBUFC=PLHDBUFC->BUFCNXT2;/* POINT TO OLDEST     01207000
*                                      BUFFER.               @X04SVRQ*/ 01208000
         L     RBUFC,BUFCNXT2-1(,@05)                              0571 01209000
         LA    RBUFC,0(,RBUFC)                                     0571 01210000
*                       IF(AMBGSR=OFF&AMBLSR=OFF)|/* IF NOT SHARED 0572 01211000
*                                                            @ZA07540*/ 01212000
*                           BUFCMW=ON THEN/* RESOURCES OR IF THERE IS   01213000
*                                      A WRITE TO DO,        @ZA07540*/ 01214000
         TM    AMBGSR(RAMB),B'01100000'                            0572 01215000
         BZ    @RT00572                                            0572 01216000
         TM    BUFCMW(RBUFC),B'10000000'                           0572 01217000
         BNO   @RF00572                                            0572 01218000
@RT00572 DS    0H                                                  0573 01219000
*I17:                                                              0573 01220000
*                         DO;       /* IDACALL(IDAWRBFR)             */ 01221000
I17      DS    0H                                                  0574 01222000
*                           CALL IDAWRBFR;/* EXIT TO IDAWRBFR        */ 01223000
         L     @15,@CV01049                                        0574 01224000
         BALR  @14,@15                                             0574 01225000
*                           GEN(BALR @11,0);/* LOAD ADDR OF REENTRY  */ 01226000
         BALR @11,0                                                     01227000
*                           GEN(USING *,@11);/* ESTABLISH ADDRESSING */ 01228000
         USING *,@11                                                    01229000
*                           GEN(L     @11,=A(@PSTART));/* RELOAD BASE*/ 01230000
         L     @11,=A(@PSTART)                                          01231000
*                           GEN(USING @PSTART,@11);/* ESTABLISH    0578 01232000
*                                      ADDRESSING                    */ 01233000
         USING @PSTART,@11                                              01234000
*                         END I17;  /* WRITE BUFFERS                 */ 01235000
*                       IF RPLERREG='0C'X THEN/* IF I/O ERROR, EXIT     01236000
*                                      WITH                          */ 01237000
@RF00572 CLI   RPLERREG(RRPL),12                                   0580 01238000
         BE    @RT00580                                            0580 01239000
*                         GO TO PUTEXIT2;/* DIWA RELEASED.   @X04SVMR*/ 01240000
*                     END;          /* END WRITE             @ZA07540*/ 01241000
*                   IF PLHCRBA>=ARDERBA/* CHECK END OF ALLOCATION    */ 01242000
*                     THEN          /* IF SO, CALL EOV               */ 01243000
@RF00569 L     @10,AMBDSB(,RAMB)                                   0583 01244000
         L     @10,AMDPARDB(,@10)                                  0583 01245000
         CLC   PLHCRBA(4,RPLH),ARDERBA(@10)                        0583 01246000
         BL    @RF00583                                            0583 01247000
*                     DO;                                          0584 01248000
*                       PLHEOVR=AMBEOVAR;/* SET ALLOC BY RBA         */ 01249000
         MVI   PLHEOVR(RPLH),B'10000010'                           0585 01250000
*                       RPARM1=ADDR(ARDERBA);/* POINT TO RBA         */ 01251000
         LA    RPARM1,ARDERBA(,@10)                                0586 01252000
*                       PLHEOVPT=RPARM1;/* POINT TO RBA              */ 01253000
         ST    RPARM1,PLHEOVPT(,RPLH)                              0587 01254000
*I18:                                                              0588 01255000
*                       DO;         /* IDACALL(IDAEOVIF)             */ 01256000
I18      DS    0H                                                  0589 01257000
*                         CALL IDAEOVIF;/* EXIT TO IDAEOVIF          */ 01258000
         L     @15,@CV01041                                        0589 01259000
         BALR  @14,@15                                             0589 01260000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 01261000
         BALR @11,0                                                     01262000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 01263000
         USING *,@11                                                    01264000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 01265000
         L     @11,=A(@PSTART)                                          01266000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0593 01267000
*                                      ADDRESSING                    */ 01268000
         USING @PSTART,@11                                              01269000
*                       END I18;    /* TRY TO GET MORE SPACE         */ 01270000
*                       IF RPLERREG^='00'X/* SEE IF SPACE OBTAINED   */ 01271000
*                         THEN      /* IF NOT SET ERROR              */ 01272000
         CLI   RPLERREG(RRPL),0                                    0595 01273000
         BE    @RF00595                                            0595 01274000
*                         DO;                                      0596 01275000
*PUTEXIT2:                                                         0597 01276000
*                           DIWATV=CZERO;/* FREE RESOURCE            */ 01277000
PUTEXIT2 L     @10,AMBIWA(,RAMB)                                   0597 01278000
         MVI   DIWATV(@10),B'00000000'                             0597 01279000
*                           GO TO PUTEXIT;/* RETURN TO CALLER        */ 01280000
         B     PUTEXIT                                             0598 01281000
*                         END;      /* END, NO SPACE FOUND           */ 01282000
*                       RFY                                        0600 01283000
*                         R15 UNRSTD;/* RELEASE R15                  */ 01284000
@RF00595 DS    0H                                                  0601 01285000
*                     END;          /* END OF EOV CALL               */ 01286000
*                   ELSE            /* IF NOT EOE AND NOT            */ 01287000
*                     IF AMBSPEED=OFF&/* SPEED OPTION, IF IT         */ 01288000
*                         PLHCRBA^=ZERO THEN/* IS NOT 1ST CA IT IS   */ 01289000
         B     @RC00583                                            0602 01290000
@RF00583 TM    AMBSPEED(RAMB),B'00001000'                          0602 01291000
         BNZ   @RF00602                                            0602 01292000
         L     @10,PLHCRBA(,RPLH)                                  0602 01293000
         LTR   @10,@10                                             0602 01294000
         BZ    @RF00602                                            0602 01295000
*                       DO;         /* NECESSARY TO PREFORMAT        */ 01296000
*                         RPARM1=PLHCRBA;/* POINT TO NEXT CA         */ 01297000
         LR    RPARM1,@10                                          0604 01298000
*I19:                                                              0605 01299000
*                         DO;       /* IDACALL(IDA019RK)             */ 01300000
I19      DS    0H                                                  0606 01301000
*                           CALL IDA019RK;/* EXIT TO IDA019RK        */ 01302000
         L     @15,@CV01051                                        0606 01303000
         BALR  @14,@15                                             0606 01304000
*                           GEN(BALR @11,0);/* LOAD ADDR OF REENTRY  */ 01305000
         BALR @11,0                                                     01306000
*                           GEN(USING *,@11);/* ESTABLISH ADDRESSING */ 01307000
         USING *,@11                                                    01308000
*                           GEN(L     @11,=A(@PSTART));/* RELOAD BASE*/ 01309000
         L     @11,=A(@PSTART)                                          01310000
*                           GEN(USING @PSTART,@11);/* ESTABLISH    0610 01311000
*                                      ADDRESSING                    */ 01312000
         USING @PSTART,@11                                              01313000
*                         END I19;  /* PREFORMAT NEW CNTL AREA       */ 01314000
*                         IF RPLERREG^='00'X THEN/* IF AN ERROR    0612 01315000
*                                      OCCURRED,                     */ 01316000
         CLI   RPLERREG(RRPL),0                                    0612 01317000
         BNE   @RT00612                                            0612 01318000
*                           GO TO PUTEXIT2;/* EXIT WITHOUT DIWA    0613 01319000
*                                                            @X04SVMR*/ 01320000
*                       END;        /* END OF PF RTN CALL            */ 01321000
*                 END;              /* END OF BOCA CODE              */ 01322000
*                                                                  0615 01323000
@RF00602 DS    0H                                                  0615 01324000
@RC00583 DS    0H                                                  0616 01325000
*               /*****************************************************/ 01326000
*               /*                                                   */ 01327000
*               /* SET A NEW HIGH RBA AND RELEASE THE DATA INSERT    */ 01328000
*               /* WORK AREA.                                        */ 01329000
*               /*                                                   */ 01330000
*               /*****************************************************/ 01331000
*                                                                  0616 01332000
*               PLHCRBA=ARDHRBA;    /* RESET HI-USED         @ZA17498*/ 01333000
@RF00567 L     @10,AMBDSB(,RAMB)                                   0616 01334000
         L     @05,AMDPARDB(,@10)                                  0616 01335000
         L     @15,ARDHRBA(,@05)                                   0616 01336000
         ST    @15,PLHCRBA(,RPLH)                                  0616 01337000
*               RPLDDDD=ARDHRBA;    /* SAVE HI-USED          @ZA17498*/ 01338000
         ST    @15,RPLDDDD(,RRPL)                                  0617 01339000
*               ARDHRBA=ARDHRBA+AMDCINV;/* ADVANCE HIGH RBA          */ 01340000
         AL    @15,AMDCINV(,@10)                                   0618 01341000
         ST    @15,ARDHRBA(,@05)                                   0618 01342000
*               DIWATV=CZERO;       /* SET HIGH RBA AVAILABLE        */ 01343000
         L     @10,AMBIWA(,RAMB)                                   0619 01344000
         MVI   DIWATV(@10),B'00000000'                             0619 01345000
*I20:                                                              0620 01346000
*               DO;                 /* IDACALL(IDAGNNFL)             */ 01347000
I20      DS    0H                                                  0621 01348000
*                 CALL IDAGNNFL;    /* EXIT TO IDAGNNFL              */ 01349000
         L     @15,@CV01043                                        0621 01350000
         BALR  @14,@15                                             0621 01351000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01352000
         BALR @11,0                                                     01353000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01354000
         USING *,@11                                                    01355000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01356000
         L     @11,=A(@PSTART)                                          01357000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01358000
         USING @PSTART,@11                                              01359000
*               END I20;            /* GET A WORK BUFFER             */ 01360000
*               IF RPLERREG^='00'X THEN/* CHECK FOR ERROR            */ 01361000
         CLI   RPLERREG(RRPL),0                                    0627 01362000
         BNE   @RT00627                                            0627 01363000
*                 GO TO PUTEXIT;    /* EXIT IF ERROR                 */ 01364000
*               RPARM1=RPLDDDD;     /* GET OUTPUT                    */ 01365000
         L     @10,RPLDDDD(,RRPL)                                  0629 01366000
         LR    RPARM1,@10                                          0629 01367000
*               PLHCRBA=RPLDDDD;    /* RESET RBA             @ZA17498*/ 01368000
         ST    @10,PLHCRBA(,RPLH)                                  0630 01369000
*               PLHNRBA=RPARM1;     /* SET POSITION TO EOD SET OUTPUT   01370000
*                                      RBA                           */ 01371000
         ST    RPARM1,PLHNRBA(,RPLH)                               0631 01372000
*               BUFXORBA=RPARM1;    /* SET EXCL OUTPUT       @ZA17187*/ 01373000
         ST    RPARM1,BUFXORBA(,RBUFC)                             0632 01374000
*               DO;                 /* SET OUTPUT RBA                */ 01375000
*                 BUFCORBA=RPARM1;                                 0634 01376000
         ST    RPARM1,BUFCORBA(,RBUFC)                             0634 01377000
*                 BUFCMW=ON;        /* SET MUST WRITE                */ 01378000
         OI    BUFCMW(RBUFC),B'10000000'                           0635 01379000
*               END;                                               0636 01380000
*               BUFXIRBA=BUFCORBA;  /* SET EXCL CNTL RBA     @X04SVMR*/ 01381000
         L     @10,BUFCORBA(,RBUFC)                                0637 01382000
         ST    @10,BUFXIRBA(,RBUFC)                                0637 01383000
*               BUFCDDDD=BUFCORBA;  /* SET RBA ADDRESS       @X04SVMR*/ 01384000
         ST    @10,BUFCDDDD(,RBUFC)                                0638 01385000
*               BUFCVAL=ON;         /* MAKE RBA VALID        @X04SVMR*/ 01386000
*               BUFCEXC=ON;         /* SET BUFC EXCL.        @X04SVRQ*/ 01387000
         OI    BUFCVAL(RBUFC),B'00000110'                          0640 01388000
*             END;                  /* END, PUT NUP                  */ 01389000
*           IF AMBUBF=OFF           /* IF NOT UBF, MUST MOVE         */ 01390000
*             THEN                  /* CINV TO USER AREA.            */ 01391000
@RC00421 TM    AMBUBF(RAMB),B'00000100'                            0642 01392000
         BNZ   @RF00642                                            0642 01393000
*             DO;                                                  0643 01394000
*                                                                  0643 01395000
*/*  MOVE USER DATA TO THE VSAM BUFFER                               */ 01396000
*                                                                  0644 01397000
*               RESPECIFY                                          0644 01398000
*                (RWORK2,                                          0644 01399000
*                 RWORK3,                                          0644 01400000
*                 RWORK4,                                          0644 01401000
*                 RWORK5) RESTRICTED;/* GET REGS                     */ 01402000
*               RWORK3=AMDCINV;     /* GET CINV LENGTH               */ 01403000
         L     @10,AMBDSB(,RAMB)                                   0645 01404000
         L     RWORK3,AMDCINV(,@10)                                0645 01405000
*               RWORK5=RWORK3;      /* INTO ODD REGS                 */ 01406000
         LR    RWORK5,RWORK3                                       0646 01407000
*               RWORK2=ADDR(AM0AREA);/* SET UP TO ADDR               */ 01408000
         L     RWORK2,BUFCBAD(,RBUFC)                              0647 01409000
*               RWORK4=ADDR(USERAREA);/* SET UP FROM ADDR            */ 01410000
         L     RWORK4,RPLAREA(,RRPL)                               0648 01411000
*               GEN(MVCL RWORK2,RWORK4);/* MOVE CINV DROP REGS       */ 01412000
         MVCL RWORK2,RWORK4                                             01413000
*               RESPECIFY                                          0650 01414000
*                (RWORK2,                                          0650 01415000
*                 RWORK3,                                          0650 01416000
*                 RWORK4,                                          0650 01417000
*                 RWORK5) UNRESTRICTED;                            0650 01418000
*             END;                  /* END OF MOVE CINV              */ 01419000
*/*  JOURNAL THIS PUT IF A JRNAD EXIT WAS SPECIFIED                  */ 01420000
*                                                                  0652 01421000
*           IF RPLREQ=RPLPUTIX THEN /* PUTIX REQUEST.        @X04SVRQ*/ 01422000
@RF00642 CLI   RPLREQ(RRPL),12                                     0652 01423000
         BE    @RT00652                                            0652 01424000
*             GOTO CANCPOS;         /* CANCEL POSIT.         @X04SVRQ*/ 01425000
*           IF AMBJRN=ON            /* IF A JOURNAL EXIT IS          */ 01426000
*             THEN                  /* PRESENT, TAKE IT.             */ 01427000
         TM    AMBJRN(RAMB),B'00000010'                            0654 01428000
         BNO   @RF00654                                            0654 01429000
*             DO;                                                  0655 01430000
*               PLHJCODE=PLHJPUT;   /* SET CODE FOR PUT              */ 01431000
         MVI   PLHJCODE(RPLH),B'00000100'                          0656 01432000
*I22:                                                              0657 01433000
*               DO;                 /* IDACALL(IDATJXIT)             */ 01434000
I22      DS    0H                                                  0658 01435000
*                 CALL IDATJXIT;    /* EXIT TO IDATJXIT              */ 01436000
         L     @15,@CV01046                                        0658 01437000
         BALR  @14,@15                                             0658 01438000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01439000
         BALR @11,0                                                     01440000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01441000
         USING *,@11                                                    01442000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01443000
         L     @11,=A(@PSTART)                                          01444000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01445000
         USING @PSTART,@11                                              01446000
*               END I22;            /* TAKE JOURNAL EXIT     @X04SVMR*/ 01447000
*             END;                  /* END OF JOURNAL EXIT           */ 01448000
*/*  IF THE REQUEST NO LONGER NEEDS THIS PLACEHOLDER, FLAG THE PLACE-*/ 01449000
*/*  HOLDER AS INVALID SO THE CHECK ROUTINE WILL MAKE IT AVAILABLE.  */ 01450000
*                                                                  0665 01451000
*           IF RPLSEQ=OFF THEN      /* IF NOT SEQ AND        @X04SVMR*/ 01452000
@RF00654 TM    RPLSEQ(RRPL),B'00100000'                            0665 01453000
         BNZ   @RF00665                                            0665 01454000
*             DO;                                                  0666 01455000
*               IF RPLNSP=OFF       /* NO NSP                @X04SVMR*/ 01456000
*                 THEN              /* THEN FORGET PLH               */ 01457000
         TM    RPLNSP(RRPL),B'00000001'                            0667 01458000
         BNZ   @RF00667                                            0667 01459000
*                 DO;                                              0668 01460000
*CANCPOS:                                                          0669 01461000
*                   PLHINVAL=ON;    /* MAKE PLH INVALID      @X04SVRQ   01462000
*                                      WRITE OUT BUFFER              */ 01463000
CANCPOS  OI    PLHINVAL(RPLH),B'00000010'                          0669 01464000
*                   IF AMBDFR=OFF|  /* NOT DEFER WRITE       @ZA07540*/ 01465000
*                       RPLREQ=RPLPUTIX THEN/* OR IF PUTIX   @ZA07540*/ 01466000
         TM    AMBDFR(RAMB),B'00001000'                            0670 01467000
         BZ    @RT00670                                            0670 01468000
         CLI   RPLREQ(RRPL),12                                     0670 01469000
         BNE   @RF00670                                            0670 01470000
@RT00670 DS    0H                                                  0671 01471000
*I23:                                                              0671 01472000
*                     DO;           /* IDACALL(IDAWRBFR)             */ 01473000
I23      DS    0H                                                  0672 01474000
*                       CALL IDAWRBFR;/* EXIT TO IDAWRBFR            */ 01475000
         L     @15,@CV01049                                        0672 01476000
         BALR  @14,@15                                             0672 01477000
*                       GEN(BALR @11,0);/* LOAD ADDR OF REENTRY      */ 01478000
         BALR @11,0                                                     01479000
*                       GEN(USING *,@11);/* ESTABLISH ADDRESSING     */ 01480000
         USING *,@11                                                    01481000
*                       GEN(L     @11,=A(@PSTART));/* RELOAD BASE    */ 01482000
         L     @11,=A(@PSTART)                                          01483000
*                       GEN(USING @PSTART,@11);/* ESTABLISH        0676 01484000
*                                      ADDRESSING                    */ 01485000
         USING @PSTART,@11                                              01486000
*                     END I23;                                     0677 01487000
*I24:                                                              0678 01488000
*                   DO;             /* IDACALL(IDAFREEB)             */ 01489000
@RF00670 DS    0H                                                  0678 01490000
I24      DS    0H                                                  0679 01491000
*                     CALL IDAFREEB;/* EXIT TO IDAFREEB              */ 01492000
         L     @15,@CV01053                                        0679 01493000
         BALR  @14,@15                                             0679 01494000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01495000
         BALR @11,0                                                     01496000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01497000
         USING *,@11                                                    01498000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01499000
         L     @11,=A(@PSTART)                                          01500000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01501000
         USING @PSTART,@11                                              01502000
*                   END I24;        /* FREE THE BFR          @X04SVLP*/ 01503000
*                 END;              /* END FORGET PLH                */ 01504000
*                                                                  0685 01505000
*               /*****************************************************/ 01506000
*               /*                                                   */ 01507000
*               /* SET FLAG SO BUFFERS WILL BE ADDED IF SWITCH TO SEQ*/ 01508000
*               /*                                           @X04SVMR*/ 01509000
*               /*                                                   */ 01510000
*               /*****************************************************/ 01511000
*                                                                  0686 01512000
*               ELSE                                               0686 01513000
*                 PLHASKBF=ON;                                     0686 01514000
         B     @RC00667                                            0686 01515000
@RF00667 OI    PLHASKBF(RPLH),B'00100000'                          0686 01516000
*             END;                  /* END OF DIR CODE       @X04SVMR*/ 01517000
*/*  IF USER BUFFERING, DO WRITES BEFORE RETURNING TO USER.          */ 01518000
*                                                                  0688 01519000
*           ELSE                                                   0688 01520000
*             IF AMBUBF=ON          /* TEST FOR USER BUFFER          */ 01521000
*               THEN                /* IF PRESENT, DO WRITES.        */ 01522000
         B     @RC00665                                            0688 01523000
@RF00665 TM    AMBUBF(RAMB),B'00000100'                            0688 01524000
         BNO   @RF00688                                            0688 01525000
*               DO;                                                0689 01526000
*I25:                                                              0690 01527000
*                 DO;               /* IDACALL(IDAWRBFR)             */ 01528000
I25      DS    0H                                                  0691 01529000
*                   CALL IDAWRBFR;  /* EXIT TO IDAWRBFR              */ 01530000
         L     @15,@CV01049                                        0691 01531000
         BALR  @14,@15                                             0691 01532000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01533000
         BALR @11,0                                                     01534000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01535000
         USING *,@11                                                    01536000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01537000
         L     @11,=A(@PSTART)                                          01538000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01539000
         USING @PSTART,@11                                              01540000
*                 END I25;          /* CALL WRITE BUFFER RTN         */ 01541000
*                 IF RPLERREG^='00'X/* IF ANY ERRORS,                */ 01542000
*                   THEN            /* RELEASE THE PLH.              */ 01543000
         CLI   RPLERREG(RRPL),0                                    0697 01544000
         BE    @RF00697                                            0697 01545000
*                   DO;                                            0698 01546000
*PUTEXIT:                                                          0699 01547000
*                     PLHINVAL=ON;  /* INVALIDATE THE PLH            */ 01548000
PUTEXIT  OI    PLHINVAL(RPLH),B'00000010'                          0699 01549000
*                   END;            /* END OF DROP PLH               */ 01550000
*               END;                /* END OF UBF CODE               */ 01551000
@RF00697 DS    0H                                                  0702 01552000
*           PLHUPD=OFF;             /* RESET UPDATE FLAG             */ 01553000
@RF00688 DS    0H                                                  0702 01554000
@RC00665 NI    PLHUPD(RPLH),B'01111111'                            0702 01555000
*         END;                      /* END, PUT CODE                 */ 01556000
*       ELSE                        /* HERE IF NOT PUT OR GET        */ 01557000
*         DO;                                                      0704 01558000
*                                                                  0704 01559000
         B     @RC00404                                            0704 01560000
@RF00404 DS    0H                                                  0705 01561000
*           /*********************************************************/ 01562000
*           /*                                                       */ 01563000
*           /* THE REQUEST IS NOT A GET OR PUT. IF IT IS A VERIFY,   */ 01564000
*           /* CALL THE VERIFY ROUTINE. IF IT IS AN ERASE, SET ERASE */ 01565000
*           /* ERROR. IF IT IS NONE OF THESE AND NOT A POINT SET AN  */ 01566000
*           /* INVALID REQUEST.                                      */ 01567000
*           /*                                                       */ 01568000
*           /*********************************************************/ 01569000
*                                                                  0705 01570000
*           IF RPLREQ^=RPLPOINT     /* SEE IF POINT                  */ 01571000
*             THEN                  /* HERE IF NOT                   */ 01572000
         CLI   RPLREQ(RRPL),3                                      0705 01573000
         BE    @RF00705                                            0705 01574000
*             DO;                                                  0706 01575000
*               IF RPLREQ=RPLVERIF  /* SEE IF VERIFY REQUEST         */ 01576000
*                 THEN              /* IF SO, COME HERE TO           */ 01577000
         CLI   RPLREQ(RRPL),6                                      0707 01578000
         BNE   @RF00707                                            0707 01579000
*                 DO;               /* CALL THE VERIFY ROUTINE       */ 01580000
*I26:                                                              0709 01581000
*                   DO;             /* IDACALL(IDA019RO)             */ 01582000
I26      DS    0H                                                  0710 01583000
*                     CALL IDA019RO;/* EXIT TO IDA019RO              */ 01584000
         L     @15,@CV01052                                        0710 01585000
         BALR  @14,@15                                             0710 01586000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01587000
         BALR @11,0                                                     01588000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01589000
         USING *,@11                                                    01590000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01591000
         L     @11,=A(@PSTART)                                          01592000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01593000
         USING @PSTART,@11                                              01594000
*                   END I26;                                       0715 01595000
*                   GEN(IDARST14);  /* RESTORE RETURN REG            */ 01596000
         IDARST14                                                       01597000
*                   RETURN;         /* RETURN TO CALLER              */ 01598000
@EL00001 DS    0H                                                  0717 01599000
@EF00001 DS    0H                                                  0717 01600000
@ER00001 BR    @14                                                 0717 01601000
*                 END;              /* END OF VERIFY CALL            */ 01602000
*               IF RPLREQ=RPLERASE THEN/* SEE IF ERASE               */ 01603000
@RF00707 CLI   RPLREQ(RRPL),5                                      0719 01604000
         BNE   @RF00719                                            0719 01605000
*                 RPLERRCD=RPLERSER;/* YES-INVALID ERASE             */ 01606000
         MVI   RPLERRCD(RRPL),X'50'                                0720 01607000
*               ELSE                /* NOT ERASE.                    */ 01608000
*                 RPLERRCD=RPLINVP; /* NO-INVALID RPL OPTION         */ 01609000
         B     @RC00719                                            0721 01610000
@RF00719 MVI   RPLERRCD(RRPL),X'68'                                0721 01611000
*               GO TO ERRORX;       /* TAKE ERROR EXIT               */ 01612000
         B     ERRORX                                              0722 01613000
*             END;                  /* END, UNKNOWN MACRO            */ 01614000
*                                                                  0723 01615000
*           /*********************************************************/ 01616000
*           /*                                                       */ 01617000
*           /* POINT REQUEST--PUT THE USER-SUPPLIED RBA IN THE       */ 01618000
*           /* PLACEHOLDER AND READ IN THE DESIRED CONTROL INTERVAL. */ 01619000
*           /*                                               @X04SVMR*/ 01620000
*           /*                                                       */ 01621000
*           /*********************************************************/ 01622000
*                                                                  0724 01623000
*           IF RBA//AMDCINV^=ZERO THEN/* VALIDATE USER RBA   @X04SVMR*/ 01624000
@RF00705 L     @10,RPLARG(,RRPL)                                   0724 01625000
         L     @05,AMBDSB(,RAMB)                                   0724 01626000
         L     @07,RBA(,@10)                                       0724 01627000
         SLR   @06,@06                                             0724 01628000
         D     @06,AMDCINV(,@05)                                   0724 01629000
         LTR   @06,@06                                             0724 01630000
         BNZ   @RT00724                                            0724 01631000
*             GO TO BADBDY;         /* SET ERROR IF BAD      @X04SVMR*/ 01632000
*           PLHASKBF=ON;            /* BUFFERS NEEDED        @X04SVMR*/ 01633000
         OI    PLHASKBF(RPLH),B'00100000'                          0726 01634000
*           IF RPLSEQ=ON THEN       /* IF SEQUENTIAL,        @X04SVMR*/ 01635000
         TM    RPLSEQ(RRPL),B'00100000'                            0727 01636000
         BNO   @RF00727                                            0727 01637000
*             DO;                   /* EXTRA BUFFERS.        @X04SVMR*/ 01638000
*               RBUFC=ZERO;         /* MAXIMUM DESIRED       @X04SVMR*/ 01639000
         SLR   RBUFC,RBUFC                                         0729 01640000
*I27:                                                              0730 01641000
*               DO;                 /* IDACALL(IDAABF)               */ 01642000
I27      DS    0H                                                  0731 01643000
*                 CALL IDAABF;      /* EXIT TO IDAABF                */ 01644000
         L     @15,@CV01045                                        0731 01645000
         BALR  @14,@15                                             0731 01646000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01647000
         BALR @11,0                                                     01648000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01649000
         USING *,@11                                                    01650000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01651000
         L     @11,=A(@PSTART)                                          01652000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01653000
         USING @PSTART,@11                                              01654000
*               END I27;            /* ADD BUFFERS           @X04SVMR*/ 01655000
*             END;                  /* END OF SEQ            @X04SVMR*/ 01656000
*           IF RPLUPD=ON THEN       /* IF UPDATE MODE,       @X04SVMR*/ 01657000
@RF00727 TM    RPLUPD(RRPL),B'00000010'                            0738 01658000
         BNO   @RF00738                                            0738 01659000
*             PLHRDEXC=ON;          /* SET EXCL CNTL.        @X04SVMR*/ 01660000
         OI    PLHRDEXC(RPLH),B'00001000'                          0739 01661000
*           ELSE                    /* UPDATE IS OFF         @X04SVMR*/ 01662000
*             PLHRDEXC=OFF;         /* NO EXCL CONTROL       @X04SVMR*/ 01663000
         B     @RC00738                                            0740 01664000
@RF00738 NI    PLHRDEXC(RPLH),B'11110111'                          0740 01665000
*           RPARM1=RBA;             /* PICK UP USER RBA              */ 01666000
@RC00738 L     @10,RPLARG(,RRPL)                                   0741 01667000
         L     RPARM1,RBA(,@10)                                    0741 01668000
*           RPLDDDD=RPARM1;         /* PUT IN FEEDBACK FIELD         */ 01669000
         ST    RPARM1,RPLDDDD(,RRPL)                               0742 01670000
*           PLHCRBA=RPARM1;         /* SET CURRENT RBA               */ 01671000
         ST    RPARM1,PLHCRBA(,RPLH)                               0743 01672000
*I28:                                                              0744 01673000
*           DO;                     /* IDACALL(IDAGRB)               */ 01674000
I28      DS    0H                                                  0745 01675000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 01676000
         L     @15,@CV01047                                        0745 01677000
         BALR  @14,@15                                             0745 01678000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01679000
         BALR @11,0                                                     01680000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01681000
         USING *,@11                                                    01682000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01683000
         L     @11,=A(@PSTART)                                          01684000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01685000
         USING @PSTART,@11                                              01686000
*           END I28;                /* READ IN CINVS         @X04SVMR*/ 01687000
*           IF RPLERREG^='00'X THEN /* IF AN ERROR,                  */ 01688000
         CLI   RPLERREG(RRPL),0                                    0751 01689000
         BNE   @RT00751                                            0751 01690000
*             GO TO PUTEXIT;        /* INVAL PLH EXIT        @X04SVMR*/ 01691000
*           PLHEFLGS=C2ZERO;        /* CLEAR EXCEPTION FLAGS         */ 01692000
         MVC   PLHEFLGS(2,RPLH),C2ZERO                             0753 01693000
*           PLHUPD=OFF;             /* RESET UPDATE FLAG             */ 01694000
         NI    PLHUPD(RPLH),B'01111111'                            0754 01695000
*           PLHNOADV=ON;            /* INDICATE POINT        @X04SVMR*/ 01696000
         OI    PLHNOADV(RPLH),B'00001000'                          0755 01697000
*         END;                      /* END POINT CODE                */ 01698000
*     END;                          /* END, NO GET CODE              */ 01699000
@RC00404 DS    0H                                                  0758 01700000
*R8EXIT:                                                           0758 01701000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB.    @X04SVRQ*/ 01702000
@RC00201 DS    0H                                                  0758 01703000
R8EXIT   L     @10,RPLDACB(,RRPL)                                  0758 01704000
         L     @10,ACBAMBL(,@10)                                   0758 01705000
         L     RAMB,AMBLDTA(,@10)                                  0758 01706000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 01707000
         IDARST14                                                       01708000
*   RETURN;                         /* RETURN TO CALLER              */ 01709000
         B     @EL00001                                            0760 01710000
*   GEN(IDAPATCH);                  /* DEFINE A PATCH AREA           */ 01711000
         IDAPATCH                                                       01712000
*   END IDA019R8                    /* END OF CINV DRIVER            */ 01713000
*                                                                  0762 01714000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01715000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01716000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01717000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01718000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01719000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01720000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01721000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01722000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01723000
*/*%INCLUDE SYSLIB  (IDAEDB  )                                       */ 01724000
*/*%INCLUDE SYSLIB  (IDALPMB )                                       */ 01725000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 01726000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01727000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01728000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 01729000
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */ 01730000
*                                                                  0762 01731000
*       ;                                                          0762 01732000
         B     @EL00001                                            0762 01733000
@DATA    DS    0H                                                       01734000
@CH00047 DC    H'1'                                                     01735000
@DATD    DSECT                                                          01736000
         DS    0F                                                       01737000
IDA019R8 CSECT                                                          01738000
         DS    0F                                                       01739000
@CF00036 DC    F'4'                                                     01740000
@DATD    DSECT                                                          01741000
         DS    0D                                                       01742000
IDA019R8 CSECT                                                          01743000
         DS    0F                                                       01744000
@SIZDATD DC    AL1(0)                                                   01745000
         DC    AL3(@ENDDATD-@DATD)                                      01746000
@CV01041 DC    V(IDAEOVIF)                                              01747000
@CV01042 DC    V(IDAFRBA)                                               01748000
@CV01043 DC    V(IDAGNNFL)                                              01749000
@CV01044 DC    V(IDAGNXT)                                               01750000
@CV01045 DC    V(IDAABF)                                                01751000
@CV01046 DC    V(IDATJXIT)                                              01752000
@CV01047 DC    V(IDAGRB)                                                01753000
@CV01049 DC    V(IDAWRBFR)                                              01754000
@CV01050 DC    V(IDADRQ)                                                01755000
@CV01051 DC    V(IDA019RK)                                              01756000
@CV01052 DC    V(IDA019RO)                                              01757000
@CV01053 DC    V(IDAFREEB)                                              01758000
@CV01054 DC    V(IDAEXCL)                                               01759000
@CV01048 DC    V(IDASBF)                                                01760000
         DS    0D                                                       01761000
HWORD4   DC    H'4'                                                     01762000
C2ZERO   DC    X'0000'                                                  01763000
@DATD    DSECT                                                          01764000
TWELVE   EQU   12                          R14 OFFSET IN USER SAVEAREA  01765000
@DATD    DSECT                                                          01766000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01767000
@ENDDATD EQU   *                                                        01768000
IDA019R8 CSECT                                                          01769000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01770000
@01      EQU   01                                                       01771000
@02      EQU   02                                                       01772000
@03      EQU   03                                                       01773000
@04      EQU   04                                                       01774000
@05      EQU   05                                                       01775000
@06      EQU   06                                                       01776000
@07      EQU   07                                                       01777000
@08      EQU   08                                                       01778000
@09      EQU   09                                                       01779000
@10      EQU   10                                                       01780000
@11      EQU   11                                                       01781000
@12      EQU   12                                                       01782000
@13      EQU   13                                                       01783000
@14      EQU   14                                                       01784000
@15      EQU   15                                                       01785000
RWORK0   EQU   @00                                                      01786000
RRPL     EQU   @01                                                      01787000
R1       EQU   @01                                                      01788000
RPLH     EQU   @02                                                      01789000
RAMB     EQU   @03                                                      01790000
RBUFC    EQU   @04                                                      01791000
RWORK2   EQU   @06                                                      01792000
RWORK3   EQU   @07                                                      01793000
RWORK4   EQU   @08                                                      01794000
RWORK5   EQU   @09                                                      01795000
RPARM1   EQU   @12                                                      01796000
R14      EQU   @14                                                      01797000
R15      EQU   @15                                                      01798000
RWORK1   EQU   @05                                                      01799000
R10      EQU   @10                                                      01800000
R11      EQU   @11                                                      01801000
R13      EQU   @13                                                      01802000
IFGRPL   EQU   0                                                        01803000
RPLCOMN  EQU   IFGRPL                                                   01804000
RPLIDWD  EQU   RPLCOMN                                                  01805000
RPLREQ   EQU   RPLIDWD+2                                                01806000
RPLLEN   EQU   RPLIDWD+3                                                01807000
RPLECB   EQU   RPLCOMN+8                                                01808000
RPLFDBWD EQU   RPLCOMN+12                                               01809000
RPLFDBK  EQU   RPLFDBWD+1                                               01810000
RPLRTNCD EQU   RPLFDBK                                                  01811000
RPLERREG EQU   RPLRTNCD                                                 01812000
RPLCNDCD EQU   RPLFDBK+1                                                01813000
RPLCMPON EQU   RPLCNDCD                                                 01814000
RPLFDB2  EQU   RPLCMPON                                                 01815000
RPLERRCD EQU   RPLCNDCD+1                                               01816000
RPLFDB3  EQU   RPLERRCD                                                 01817000
RPLKEYLE EQU   RPLCOMN+16                                               01818000
RPLDACB  EQU   RPLCOMN+24                                               01819000
RPLAREA  EQU   RPLCOMN+32                                               01820000
RPLARG   EQU   RPLCOMN+36                                               01821000
RPLOPTCD EQU   RPLCOMN+40                                               01822000
RPLOPT1  EQU   RPLOPTCD                                                 01823000
RPLLOC   EQU   RPLOPT1                                                  01824000
RPLDIR   EQU   RPLOPT1                                                  01825000
RPLSEQ   EQU   RPLOPT1                                                  01826000
RPLECBSW EQU   RPLOPT1                                                  01827000
RPLOPT2  EQU   RPLOPTCD+1                                               01828000
RPLADR   EQU   RPLOPT2                                                  01829000
RPLBWD   EQU   RPLOPT2                                                  01830000
RPLUPD   EQU   RPLOPT2                                                  01831000
RPLNSP   EQU   RPLOPT2                                                  01832000
RPLOPT3  EQU   RPLOPTCD+2                                               01833000
RPLNXTRP EQU   RPLCOMN+44                                               01834000
RPLRLEN  EQU   RPLCOMN+48                                               01835000
RPLBUFL  EQU   RPLCOMN+52                                               01836000
RPLOPTC2 EQU   RPLCOMN+56                                               01837000
RPLOPT5  EQU   RPLOPTC2                                                 01838000
RPLWRTYP EQU   RPLOPT5                                                  01839000
RPLOPT6  EQU   RPLOPTC2+1                                               01840000
RPLUNTYP EQU   RPLOPT6                                                  01841000
RPLOPT7  EQU   RPLOPTC2+2                                               01842000
RPLCNOPT EQU   RPLOPT7                                                  01843000
RPLOPT8  EQU   RPLOPTC2+3                                               01844000
RPLRBAR  EQU   RPLCOMN+60                                               01845000
RPLAIXID EQU   RPLRBAR+2                                                01846000
RPLDDDD  EQU   RPLRBAR+4                                                01847000
RPLEXTDS EQU   RPLCOMN+68                                               01848000
RPLEXTD1 EQU   RPLEXTDS                                                 01849000
IFGACB   EQU   0                                                        01850000
ACBCOMN  EQU   IFGACB                                                   01851000
ACBLENG  EQU   ACBCOMN+2                                                01852000
ACBLENG2 EQU   ACBLENG                                                  01853000
ACBAMBL  EQU   ACBCOMN+4                                                01854000
ACBJWA   EQU   ACBAMBL                                                  01855000
ACBMACRF EQU   ACBCOMN+12                                               01856000
ACBMACR1 EQU   ACBMACRF                                                 01857000
ACBADR   EQU   ACBMACR1                                                 01858000
ACBCNV   EQU   ACBMACR1                                                 01859000
ACBMACR2 EQU   ACBMACRF+1                                               01860000
ACBBUFPL EQU   ACBCOMN+20                                               01861000
ACBMACR3 EQU   ACBBUFPL                                                 01862000
ACBRECFM EQU   ACBCOMN+24                                               01863000
ACBCCTYP EQU   ACBCOMN+25                                               01864000
ACBOPT   EQU   ACBCOMN+26                                               01865000
ACBDSORG EQU   ACBOPT                                                   01866000
ACBCROPS EQU   ACBDSORG                                                 01867000
ACBEXLST EQU   ACBCOMN+36                                               01868000
ACBUEL   EQU   ACBEXLST                                                 01869000
ACBDDNM  EQU   ACBCOMN+40                                               01870000
ACBAMETH EQU   ACBDDNM+3                                                01871000
ACBOFLGS EQU   ACBCOMN+48                                               01872000
ACBEXFG  EQU   ACBOFLGS                                                 01873000
ACBIOSFG EQU   ACBOFLGS                                                 01874000
ACBINFLG EQU   ACBCOMN+50                                               01875000
ACBUJFCB EQU   ACBCOMN+52                                               01876000
ACBBLKSZ EQU   ACBCOMN+60                                               01877000
IDAAMBL  EQU   0                                                        01878000
AMBLEOV  EQU   IDAAMBL+12                                               01879000
AMBLEFLG EQU   AMBLEOV                                                  01880000
AMBLDDNM EQU   IDAAMBL+16                                               01881000
AMBLIDF  EQU   AMBLDDNM                                                 01882000
AMBLQ    EQU   AMBLIDF+7                                                01883000
AMBLVC   EQU   IDAAMBL+28                                               01884000
AMBLTYPE EQU   IDAAMBL+30                                               01885000
AMBLSHAR EQU   IDAAMBL+33                                               01886000
AMBLWRIT EQU   AMBLSHAR                                                 01887000
AMBLFLG1 EQU   IDAAMBL+35                                               01888000
AMBLCINV EQU   AMBLFLG1                                                 01889000
AMBLFLG2 EQU   IDAAMBL+36                                               01890000
AMBLNUM  EQU   IDAAMBL+38                                               01891000
AMBLDTA  EQU   IDAAMBL+52                                               01892000
AMBLIX   EQU   IDAAMBL+56                                               01893000
IDABUFDR EQU   0                                                        01894000
BUFDRCIX EQU   IDABUFDR+9                                               01895000
BUFDRFLG EQU   IDABUFDR+11                                              01896000
IDABUFC  EQU   0                                                        01897000
BUFCAVL  EQU   IDABUFC                                                  01898000
BUFCFLG1 EQU   IDABUFC+1                                                01899000
BUFCVAL  EQU   BUFCFLG1                                                 01900000
BUFCEXC  EQU   BUFCFLG1                                                 01901000
BUFCIOFL EQU   IDABUFC+2                                                01902000
BUFCMW   EQU   BUFCIOFL                                                 01903000
BUFCFLG2 EQU   IDABUFC+3                                                01904000
BUFCPLH  EQU   IDABUFC+4                                                01905000
BUFCDDDD EQU   IDABUFC+8                                                01906000
BUFCORBA EQU   IDABUFC+12                                               01907000
BUFCBAD  EQU   IDABUFC+20                                               01908000
BUFCINV  EQU   IDABUFC+28                                               01909000
BUFCNXT2 EQU   IDABUFC+37                                               01910000
BUFXIRBA EQU   IDABUFC+40                                               01911000
BUFXORBA EQU   IDABUFC+44                                               01912000
IDAPLHDR EQU   0                                                        01913000
IDAPLH   EQU   0                                                        01914000
PLHFLG1  EQU   IDAPLH+2                                                 01915000
PLHASKBF EQU   PLHFLG1                                                  01916000
PLHSSR   EQU   PLHFLG1                                                  01917000
PLHRDEXC EQU   PLHFLG1                                                  01918000
PLHFLG2  EQU   IDAPLH+3                                                 01919000
PLHUPD   EQU   PLHFLG2                                                  01920000
PLHKEYMD EQU   PLHFLG2                                                  01921000
PLHEFLGS EQU   IDAPLH+4                                                 01922000
PLH1ST   EQU   PLHEFLGS                                                 01923000
PLHSKPER EQU   PLHEFLGS                                                 01924000
PLHNOADV EQU   PLHEFLGS                                                 01925000
PLHEODX  EQU   PLHEFLGS                                                 01926000
PLHINVAL EQU   PLHEFLGS                                                 01927000
PLHDSCAN EQU   PLHEFLGS                                                 01928000
PLHFLG3  EQU   IDAPLH+6                                                 01929000
PLHAFLGS EQU   IDAPLH+7                                                 01930000
PLHFRCNT EQU   IDAPLH+14                                                01931000
PLHCRBA  EQU   IDAPLH+28                                                01932000
PLHJORBA EQU   PLHCRBA                                                  01933000
PLHJCODE EQU   IDAPLH+40                                                01934000
PLHRCODE EQU   IDAPLH+41                                                01935000
PLHEOVR  EQU   IDAPLH+42                                                01936000
PLHARDB  EQU   IDAPLH+44                                                01937000
PLHDBUFC EQU   IDAPLH+52                                                01938000
PLHDIOB  EQU   IDAPLH+76                                                01939000
PLHRETO  EQU   IDAPLH+116                                               01940000
PLHRET1  EQU   IDAPLH+120                                               01941000
PLHEOVPT EQU   IDAPLH+180                                               01942000
PLHNRBA  EQU   IDAPLH+184                                               01943000
PLHIBUFC EQU   IDAPLH+188                                               01944000
PLHIXSPL EQU   IDAPLH+200                                               01945000
PLHSSRBA EQU   PLHIXSPL                                                 01946000
PLHWAX   EQU   IDAPLH+232                                               01947000
PLHKEYPT EQU   IDAPLH+248                                               01948000
PLHEND   EQU   IDAPLH+280                                               01949000
IDAAMB   EQU   0                                                        01950000
AMBBUFC  EQU   IDAAMB+8                                                 01951000
AMBDSB   EQU   IDAAMB+20                                                01952000
AMBEOVR  EQU   IDAAMB+24                                                01953000
AMBFLG0  EQU   AMBEOVR                                                  01954000
AMBFLG1  EQU   IDAAMB+25                                                01955000
AMBCREAT EQU   AMBFLG1                                                  01956000
AMBSPEED EQU   AMBFLG1                                                  01957000
AMBUBF   EQU   AMBFLG1                                                  01958000
AMBJRN   EQU   AMBFLG1                                                  01959000
AMBINBUF EQU   AMBFLG1                                                  01960000
AMBDSORG EQU   IDAAMB+26                                                01961000
AMBIOBAD EQU   IDAAMB+28                                                01962000
AMBINFL  EQU   IDAAMB+42                                                01963000
AMBCAT   EQU   AMBINFL                                                  01964000
AMBSCRA  EQU   AMBINFL                                                  01965000
AMBUCRA  EQU   AMBINFL                                                  01966000
AMBDEBPT EQU   IDAAMB+44                                                01967000
AMBOFLGS EQU   IDAAMB+48                                                01968000
AMBFLG2  EQU   IDAAMB+49                                                01969000
AMBEDB   EQU   IDAAMB+52                                                01970000
AMBEOVPT EQU   IDAAMB+56                                                01971000
AMBIWA   EQU   IDAAMB+64                                                01972000
AMBCSWD1 EQU   IDAAMB+84                                                01973000
AMBAFLG  EQU   AMBCSWD1                                                 01974000
AMBLSR   EQU   AMBAFLG                                                  01975000
AMBGSR   EQU   AMBAFLG                                                  01976000
AMBDFR   EQU   AMBAFLG                                                  01977000
IDAIXSPL EQU   0                                                        01978000
IXSILN   EQU   IDAIXSPL+13                                              01979000
IXSBFLG  EQU   IDAIXSPL+17                                              01980000
IDAEDBHD EQU   0                                                        01981000
EDBLPMBC EQU   IDAEDBHD+4                                               01982000
IDAEDB   EQU   0                                                        01983000
EDBFLG1  EQU   IDAEDB+2                                                 01984000
IDALPMB  EQU   0                                                        01985000
LPMBFLGS EQU   IDALPMB+1                                                01986000
IDADIWA  EQU   0                                                        01987000
DIWATV   EQU   IDADIWA+1                                                01988000
DIWFLG1  EQU   IDADIWA+4                                                01989000
DIWFLG2  EQU   IDADIWA+5                                                01990000
DIWPLH   EQU   IDADIWA+16                                               01991000
DIWSAVE  EQU   IDADIWA+28                                               01992000
IDAAMDSB EQU   0                                                        01993000
AMDATTR  EQU   IDAAMDSB+1                                               01994000
AMDDST   EQU   AMDATTR                                                  01995000
AMDRRDS  EQU   AMDATTR                                                  01996000
AMDNEST  EQU   IDAAMDSB+4                                               01997000
AMDCIPCA EQU   IDAAMDSB+12                                              01998000
AMDCINV  EQU   IDAAMDSB+20                                              01999000
AMDHLRBA EQU   IDAAMDSB+28                                              02000000
AMDSSRBA EQU   IDAAMDSB+32                                              02001000
AMDPARDB EQU   IDAAMDSB+36                                              02002000
AMDATTR3 EQU   IDAAMDSB+40                                              02003000
AMDSTAT  EQU   IDAAMDSB+48                                              02004000
IDAARDB  EQU   0                                                        02005000
ARDTYPE  EQU   IDAARDB+1                                                02006000
ARDHRBA  EQU   IDAARDB+12                                               02007000
ARDERBA  EQU   IDAARDB+16                                               02008000
ARDPRF   EQU   IDAARDB+28                                               02009000
IFGEXLST EQU   0                                                        02010000
EXLCOMN  EQU   IFGEXLST                                                 02011000
EXLLEN   EQU   EXLCOMN+2                                                02012000
EXLEODF  EQU   EXLCOMN+5                                                02013000
EXLSYNF  EQU   EXLCOMN+10                                               02014000
EXLLERF  EQU   EXLCOMN+15                                               02015000
EXLSCIPF EQU   EXLCOMN+20                                               02016000
EXLUPADF EQU   EXLSCIPF                                                 02017000
EXLSCIPS EQU   EXLUPADF                                                 02018000
EXLSCIPA EQU   EXLUPADF                                                 02019000
EXLSCIPK EQU   EXLUPADF                                                 02020000
EXLSCIPP EQU   EXLCOMN+21                                               02021000
EXLLGNF  EQU   EXLCOMN+25                                               02022000
EXLJRNF  EQU   EXLCOMN+30                                               02023000
EXLOPNF  EQU   EXLCOMN+35                                               02024000
IFGEXLEF EQU   0                                                        02025000
EXLENTRY EQU   IFGEXLEF                                                 02026000
EXLFLAG  EQU   EXLENTRY                                                 02027000
EXLENFL  EQU   EXLFLAG                                                  02028000
EXLEXITP EQU   EXLENTRY+1                                               02029000
AM0AREA  EQU   0                                                        02030000
USERAREA EQU   0                                                        02031000
RBA      EQU   0                                                        02032000
PLHKEY   EQU   0                                                        02033000
PLHPDL   EQU   0                                                        02034000
PLHPDLE  EQU   0                                                        02035000
PLHRRN   EQU   0                                                        02036000
RPLSAVE  EQU   0                                                        02037000
PLHEXTEN EQU   PLHEND                                                   02038000
PLHBMWRK EQU   PLHEXTEN+5                                               02039000
USERPTR  EQU   USERAREA                                                 02040000
BUFCRSC1 EQU   BUFCAVL                                                  02041000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02042000
PLHBMSV5 EQU   PLHEXTEN+24                                              02043000
PLHBMSV4 EQU   PLHEXTEN+20                                              02044000
PLHBMSV3 EQU   PLHEXTEN+16                                              02045000
PLHBMSV2 EQU   PLHEXTEN+12                                              02046000
PLHBMSV1 EQU   PLHEXTEN+8                                               02047000
PLHRDCNT EQU   PLHEXTEN+6                                               02048000
PLHBMSOV EQU   PLHBMWRK                                                 02049000
PLHBEUC  EQU   PLHBMWRK                                                 02050000
PLHBMRDF EQU   PLHBMWRK                                                 02051000
@NM00031 EQU   PLHEXTEN+4                                               02052000
PLHRESR1 EQU   PLHEXTEN                                                 02053000
EXLEADDR EQU   EXLEXITP                                                 02054000
@NM00071 EQU   EXLENFL                                                  02055000
EXLLNK   EQU   EXLENFL                                                  02056000
EXLACTM  EQU   EXLENFL                                                  02057000
EXLSPEC  EQU   EXLENFL                                                  02058000
EXLOPNP  EQU   EXLCOMN+36                                               02059000
@NM00070 EQU   EXLOPNF                                                  02060000
EXLOPNK  EQU   EXLOPNF                                                  02061000
EXLOPNA  EQU   EXLOPNF                                                  02062000
EXLOPNS  EQU   EXLOPNF                                                  02063000
EXLJRNP  EQU   EXLCOMN+31                                               02064000
@NM00069 EQU   EXLJRNF                                                  02065000
EXLJRNK  EQU   EXLJRNF                                                  02066000
EXLJRNA  EQU   EXLJRNF                                                  02067000
EXLJRNS  EQU   EXLJRNF                                                  02068000
EXLLGNP  EQU   EXLCOMN+26                                               02069000
@NM00068 EQU   EXLLGNF                                                  02070000
EXLLGNK  EQU   EXLLGNF                                                  02071000
EXLLGNA  EQU   EXLLGNF                                                  02072000
EXLLGNS  EQU   EXLLGNF                                                  02073000
EXLUPADP EQU   EXLSCIPP                                                 02074000
@NM00067 EQU   EXLUPADF                                                 02075000
EXLUPADK EQU   EXLSCIPK                                                 02076000
EXLUPADA EQU   EXLSCIPA                                                 02077000
EXLUPADS EQU   EXLSCIPS                                                 02078000
EXLLERP  EQU   EXLCOMN+16                                               02079000
@NM00066 EQU   EXLLERF                                                  02080000
EXLLERK  EQU   EXLLERF                                                  02081000
EXLLERA  EQU   EXLLERF                                                  02082000
EXLLERS  EQU   EXLLERF                                                  02083000
EXLSYNP  EQU   EXLCOMN+11                                               02084000
@NM00065 EQU   EXLSYNF                                                  02085000
EXLSYNK  EQU   EXLSYNF                                                  02086000
EXLSYNA  EQU   EXLSYNF                                                  02087000
EXLSYNS  EQU   EXLSYNF                                                  02088000
EXLEODP  EQU   EXLCOMN+6                                                02089000
@NM00064 EQU   EXLEODF                                                  02090000
EXLEODK  EQU   EXLEODF                                                  02091000
EXLEODA  EQU   EXLEODF                                                  02092000
EXLEODS  EQU   EXLEODF                                                  02093000
@NM00063 EQU   EXLCOMN+4                                                02094000
EXLLEN2  EQU   EXLLEN                                                   02095000
EXLSTYP  EQU   EXLCOMN+1                                                02096000
EXLID    EQU   EXLCOMN                                                  02097000
ARDKEYS  EQU   IDAARDB+29                                               02098000
@NM00062 EQU   ARDPRF                                                   02099000
ARDPRFMT EQU   ARDPRF                                                   02100000
ARDPRSS  EQU   ARDPRF                                                   02101000
ARDRELNO EQU   IDAARDB+26                                               02102000
ARDVOLSR EQU   IDAARDB+20                                               02103000
ARDHKRBA EQU   IDAARDB+8                                                02104000
ARDNPTR  EQU   IDAARDB+4                                                02105000
ARDLEN   EQU   IDAARDB+2                                                02106000
ARDUSED  EQU   ARDTYPE                                                  02107000
ARDEOD   EQU   ARDTYPE                                                  02108000
ARDUOVFL EQU   ARDTYPE                                                  02109000
ARDSS    EQU   ARDTYPE                                                  02110000
ARDHLI   EQU   ARDTYPE                                                  02111000
ARDKR    EQU   ARDTYPE                                                  02112000
ARDID    EQU   IDAARDB                                                  02113000
AMDEXCP  EQU   AMDSTAT+44                                               02114000
AMDNCAS  EQU   AMDSTAT+40                                               02115000
AMDNCIS  EQU   AMDSTAT+36                                               02116000
AMDASPA  EQU   AMDSTAT+32                                               02117000
AMDRETR  EQU   AMDSTAT+28                                               02118000
AMDUPR   EQU   AMDSTAT+24                                               02119000
AMDIREC  EQU   AMDSTAT+20                                               02120000
AMDDELR  EQU   AMDSTAT+16                                               02121000
AMDNLR   EQU   AMDSTAT+12                                               02122000
AMDNEXT  EQU   AMDSTAT+10                                               02123000
AMDNIL   EQU   AMDSTAT+8                                                02124000
AMDSTSP  EQU   AMDSTAT                                                  02125000
@NM00061 EQU   IDAAMDSB+41                                              02126000
@NM00060 EQU   AMDATTR3                                                 02127000
AMDLM    EQU   AMDATTR3                                                 02128000
AMDWAIT  EQU   AMDATTR3                                                 02129000
AMDBIND  EQU   AMDATTR3                                                 02130000
AMDFAULT EQU   AMDATTR3                                                 02131000
AMDUNQ   EQU   AMDATTR3                                                 02132000
AMDMAXRR EQU   AMDSSRBA                                                 02133000
AMDNSLOT EQU   AMDHLRBA                                                 02134000
AMDLRECL EQU   IDAAMDSB+24                                              02135000
AMDFSCI  EQU   IDAAMDSB+16                                              02136000
AMDFSCA  EQU   IDAAMDSB+14                                              02137000
AMDPCTCI EQU   IDAAMDSB+11                                              02138000
AMDPCTCA EQU   IDAAMDSB+10                                              02139000
AMDKEYLN EQU   IDAAMDSB+8                                               02140000
AMDRKP   EQU   IDAAMDSB+6                                               02141000
AMDAXRKP EQU   AMDNEST                                                  02142000
AMDLEN   EQU   IDAAMDSB+2                                               02143000
AMDSPAN  EQU   AMDATTR                                                  02144000
AMDRANGE EQU   AMDATTR                                                  02145000
AMDORDER EQU   AMDATTR                                                  02146000
AMDREPL  EQU   AMDATTR                                                  02147000
AMDSDT   EQU   AMDATTR                                                  02148000
AMDWCK   EQU   AMDATTR                                                  02149000
AMDSBID  EQU   IDAAMDSB                                                 02150000
@NM00059 EQU   IDADIWA+92                                               02151000
@NM00058 EQU   IDADIWA+88                                               02152000
@NM00057 EQU   IDADIWA+84                                               02153000
@NM00056 EQU   IDADIWA+80                                               02154000
@NM00055 EQU   IDADIWA+76                                               02155000
@NM00054 EQU   IDADIWA+72                                               02156000
@NM00053 EQU   IDADIWA+68                                               02157000
@NM00052 EQU   IDADIWA+64                                               02158000
@NM00051 EQU   IDADIWA+60                                               02159000
@NM00050 EQU   IDADIWA+56                                               02160000
DIWINRBA EQU   IDADIWA+52                                               02161000
DIWRKCT  EQU   IDADIWA+48                                               02162000
DIWSAVE5 EQU   DIWSAVE+16                                               02163000
DIWSAVE4 EQU   DIWSAVE+12                                               02164000
DIWSAVE3 EQU   DIWSAVE+8                                                02165000
DIWSAVE2 EQU   DIWSAVE+4                                                02166000
DIWSAVE1 EQU   DIWSAVE                                                  02167000
DIWSPLTP EQU   IDADIWA+24                                               02168000
DIWBUFC  EQU   IDADIWA+20                                               02169000
DIWHRBA  EQU   IDADIWA+12                                               02170000
DIWLRBA  EQU   IDADIWA+8                                                02171000
@NM00049 EQU   IDADIWA+6                                                02172000
DIWFSPF  EQU   DIWFLG2                                                  02173000
DIW1ST   EQU   DIWFLG1                                                  02174000
DIWNOT1  EQU   DIWFLG1                                                  02175000
DIWSHIFT EQU   DIWFLG1                                                  02176000
DIWGSPC  EQU   DIWFLG1                                                  02177000
DIWEOKR  EQU   DIWFLG1                                                  02178000
DIWPFERR EQU   DIWFLG1                                                  02179000
DIWCISPL EQU   DIWFLG1                                                  02180000
DIWCAS   EQU   DIWFLG1                                                  02181000
DIWLEN   EQU   IDADIWA+2                                                02182000
DIWID    EQU   IDADIWA                                                  02183000
LPMBSST  EQU   IDALPMB+28                                               02184000
LPMBEXT  EQU   IDALPMB+24                                               02185000
@NM00048 EQU   IDALPMB+22                                               02186000
LPMBLKTR EQU   IDALPMB+20                                               02187000
LPMTPC   EQU   IDALPMB+18                                               02188000
LPMTRKAU EQU   IDALPMB+16                                               02189000
LPMBLKSZ EQU   IDALPMB+12                                               02190000
LPMBPTRK EQU   IDALPMB+8                                                02191000
LPMAUSZ  EQU   IDALPMB+4                                                02192000
LPMBLEN  EQU   IDALPMB+2                                                02193000
@NM00047 EQU   LPMBFLGS                                                 02194000
LPMBSSTH EQU   LPMBFLGS                                                 02195000
LPMBTOFL EQU   LPMBFLGS                                                 02196000
LPMSS    EQU   LPMBFLGS                                                 02197000
LPMREPL  EQU   LPMBFLGS                                                 02198000
LPMBRPS  EQU   LPMBFLGS                                                 02199000
LPMBID   EQU   IDALPMB                                                  02200000
EDBTKBAL EQU   IDAEDB+20                                                02201000
EDBHIRBA EQU   IDAEDB+16                                                02202000
EDBLORBA EQU   IDAEDB+12                                                02203000
EDBSTTRK EQU   IDAEDB+8                                                 02204000
EDBLPMBA EQU   IDAEDB+4                                                 02205000
EDBM     EQU   IDAEDB+3                                                 02206000
@NM00046 EQU   EDBFLG1                                                  02207000
EDBPSDS  EQU   EDBFLG1                                                  02208000
EDBTOFLW EQU   EDBFLG1                                                  02209000
EDBLKR   EQU   EDBFLG1                                                  02210000
@NM00045 EQU   IDAEDB                                                   02211000
EDBLEN   EQU   IDAEDBHD+2                                               02212000
EDBNO    EQU   IDAEDBHD+1                                               02213000
EDBID    EQU   IDAEDBHD                                                 02214000
IXSLEP   EQU   IDAIXSPL+28                                              02215000
IXSSEP   EQU   IDAIXSPL+24                                              02216000
IXSHEP   EQU   IDAIXSPL+20                                              02217000
IXSPEC   EQU   IDAIXSPL+19                                              02218000
IXSEKON  EQU   IDAIXSPL+18                                              02219000
@NM00044 EQU   IXSBFLG                                                  02220000
IXSLELV  EQU   IXSBFLG                                                  02221000
IXSSSRH  EQU   IXSBFLG                                                  02222000
IXSNOSR  EQU   IDAIXSPL+16                                              02223000
IXSKLEN  EQU   IDAIXSPL+14                                              02224000
IXSTLN   EQU   IDAIXSPL+12                                              02225000
IXSARG   EQU   IDAIXSPL+8                                               02226000
IXSBUFC  EQU   IDAIXSPL+4                                               02227000
IXSSTRBA EQU   IDAIXSPL                                                 02228000
AMBTRACE EQU   IDAAMB+120                                               02229000
AMBVIOT  EQU   IDAAMB+116                                               02230000
AMBSZCP  EQU   IDAAMB+114                                               02231000
AMBSZFW  EQU   IDAAMB+112                                               02232000
AMBSZWR  EQU   IDAAMB+110                                               02233000
AMBSZRD  EQU   IDAAMB+108                                               02234000
AMBEXEX  EQU   IDAAMB+100                                               02235000
AMBWSHD  EQU   IDAAMB+96                                                02236000
AMBCPA   EQU   IDAAMB+92                                                02237000
AMBBM2SH EQU   IDAAMB+88                                                02238000
AMBRDCNT EQU   AMBCSWD1+2                                               02239000
@NM00043 EQU   AMBCSWD1+1                                               02240000
@NM00042 EQU   AMBAFLG                                                  02241000
AMBCFX   EQU   AMBAFLG                                                  02242000
AMBSIS   EQU   AMBAFLG                                                  02243000
AMBICI   EQU   AMBAFLG                                                  02244000
@NM00041 EQU   AMBAFLG                                                  02245000
AMBUPLH  EQU   IDAAMB+80                                                02246000
AMBPAMBL EQU   IDAAMB+76                                                02247000
AMBPIXP  EQU   IDAAMB+72                                                02248000
@NM00040 EQU   IDAAMB+68                                                02249000
AMBWKA   EQU   IDAAMB+60                                                02250000
AMBAMBXN EQU   AMBEOVPT                                                 02251000
AMBRPT   EQU   IDAAMB+50                                                02252000
AMBPUG   EQU   AMBFLG2                                                  02253000
AMBBUSY  EQU   AMBOFLGS                                                 02254000
AMBEXFG  EQU   AMBOFLGS                                                 02255000
@NM00039 EQU   AMBOFLGS                                                 02256000
AMBOPEN  EQU   AMBOFLGS                                                 02257000
@NM00038 EQU   AMBOFLGS                                                 02258000
AMBDEBAD EQU   AMBDEBPT+1                                               02259000
AMBIFLGS EQU   AMBDEBPT                                                 02260000
AMBAMETH EQU   IDAAMB+43                                                02261000
AMBUPX   EQU   AMBINFL                                                  02262000
@NM00037 EQU   AMBINFL                                                  02263000
@NM00036 EQU   AMBINFL                                                  02264000
AMBTIOT  EQU   IDAAMB+40                                                02265000
@NM00035 EQU   IDAAMB+38                                                02266000
AMBDDSN  EQU   IDAAMB+35                                                02267000
AMBCDSN  EQU   IDAAMB+32                                                02268000
AMBIOMB  EQU   AMBIOBAD                                                 02269000
@NM00034 EQU   AMBDSORG+1                                               02270000
AMBDORGA EQU   AMBDSORG+1                                               02271000
@NM00033 EQU   AMBDSORG                                                 02272000
AMBPCAT  EQU   AMBFLG1                                                  02273000
AMBMCAT  EQU   AMBFLG1                                                  02274000
AMBTYPE  EQU   AMBFLG1                                                  02275000
@NM00032 EQU   AMBFLG0                                                  02276000
AMBPSDS  EQU   AMBFLG0                                                  02277000
AMBCACB  EQU   IDAAMB+16                                                02278000
AMBPH    EQU   IDAAMB+12                                                02279000
AMBLINK  EQU   IDAAMB+4                                                 02280000
AMBLEN   EQU   IDAAMB+2                                                 02281000
AMBRSC   EQU   IDAAMB+1                                                 02282000
AMBID    EQU   IDAAMB                                                   02283000
PLHERRET EQU   IDAPLH+276                                               02284000
PLHASCB  EQU   IDAPLH+272                                               02285000
PLHECB   EQU   IDAPLH+268                                               02286000
@NM00030 EQU   IDAPLH+265                                               02287000
PLHDRMSK EQU   IDAPLH+264                                               02288000
PLHR13   EQU   IDAPLH+260                                               02289000
PLHPARM1 EQU   IDAPLH+256                                               02290000
PLHDRRSC EQU   IDAPLH+252                                               02291000
PLHSLRBA EQU   IDAPLH+244                                               02292000
PLHSRCSG EQU   IDAPLH+242                                               02293000
PLHNOSEG EQU   IDAPLH+240                                               02294000
PLHLLOR  EQU   IDAPLH+236                                               02295000
PLHXPLH  EQU   PLHWAX                                                   02296000
@NM00029 EQU   PLHIXSPL+8                                               02297000
PLHIXBFC EQU   PLHIXSPL+4                                               02298000
PLHHIREC EQU   PLHSSRBA                                                 02299000
PLHISPLP EQU   IDAPLH+196                                               02300000
PLHRBUFC EQU   IDAPLH+192                                               02301000
PLHDDDD  EQU   PLHEOVPT                                                 02302000
PLHAR14  EQU   IDAPLH+176                                               02303000
@NM00028 EQU   IDAPLH+172                                               02304000
@NM00027 EQU   IDAPLH+168                                               02305000
PLHASAVE EQU   IDAPLH+164                                               02306000
PLHRETOS EQU   IDAPLH+118                                               02307000
PLHCHAIN EQU   IDAPLH+112                                               02308000
PLHAMB   EQU   IDAPLH+108                                               02309000
PLHSAVE6 EQU   IDAPLH+104                                               02310000
PLHSAVE5 EQU   IDAPLH+100                                               02311000
PLHSAVE4 EQU   IDAPLH+96                                                02312000
PLHSAVE3 EQU   IDAPLH+92                                                02313000
PLHSAVE2 EQU   IDAPLH+88                                                02314000
PLHSAVE1 EQU   IDAPLH+84                                                02315000
PLHARET  EQU   IDAPLH+80                                                02316000
PLHIIOB  EQU   PLHDIOB                                                  02317000
PLHSRSID EQU   IDAPLH+74                                                02318000
PLHRDFC  EQU   IDAPLH+72                                                02319000
PLHRDFP  EQU   IDAPLH+68                                                02320000
PLHFSP   EQU   IDAPLH+64                                                02321000
PLHRECP  EQU   IDAPLH+60                                                02322000
PLHNBUFC EQU   IDAPLH+56                                                02323000
PLHLRECL EQU   IDAPLH+48                                                02324000
@NM00026 EQU   IDAPLH+43                                                02325000
PLHUCODE EQU   PLHJCODE                                                 02326000
PLHJNRBA EQU   IDAPLH+36                                                02327000
PLHJRNLL EQU   IDAPLH+32                                                02328000
PLHUPECB EQU   PLHJORBA                                                 02329000
PLHDSIDA EQU   IDAPLH+24                                                02330000
PLHCRPL  EQU   IDAPLH+20                                                02331000
PLHMRPL  EQU   IDAPLH+16                                                02332000
PLHBFRNO EQU   IDAPLH+15                                                02333000
PLHRMIN  EQU   IDAPLH+13                                                02334000
PLHDSTYP EQU   IDAPLH+12                                                02335000
PLHACB   EQU   IDAPLH+8                                                 02336000
PLHRAE   EQU   PLHAFLGS                                                 02337000
PLHRABWD EQU   PLHAFLGS                                                 02338000
PLHIOSID EQU   PLHAFLGS                                                 02339000
PLHDBDC  EQU   PLHAFLGS                                                 02340000
PLHVAMB  EQU   PLHAFLGS                                                 02341000
PLHIOSRQ EQU   PLHAFLGS                                                 02342000
PLHDRLM  EQU   PLHAFLGS                                                 02343000
PLHEOVDF EQU   PLHFLG3                                                  02344000
PLHRVRS  EQU   PLHFLG3                                                  02345000
PLHBWD   EQU   PLHFLG3                                                  02346000
PLHSLVLD EQU   PLHFLG3                                                  02347000
PLHRAHD  EQU   PLHFLG3                                                  02348000
PLHSRBSG EQU   PLHFLG3                                                  02349000
@NM00025 EQU   PLHEFLGS+1                                               02350000
PLHRSTRT EQU   PLHEFLGS+1                                               02351000
PLHSRINV EQU   PLHEFLGS                                                 02352000
PLHNOSPC EQU   PLHEFLGS                                                 02353000
PLHIWAIT EQU   PLHFLG2                                                  02354000
PLHSVADV EQU   PLHFLG2                                                  02355000
PLHCIINS EQU   PLHFLG2                                                  02356000
PLHKRE   EQU   PLHFLG2                                                  02357000
PLHADDTE EQU   PLHFLG2                                                  02358000
PLHSQINS EQU   PLHFLG2                                                  02359000
@NM00024 EQU   PLHFLG1                                                  02360000
PLHDRPND EQU   PLHFLG1                                                  02361000
PLHASYRQ EQU   PLHFLG1                                                  02362000
PLHENDRQ EQU   PLHFLG1                                                  02363000
PLHEOVW  EQU   PLHFLG1                                                  02364000
PLHATV   EQU   IDAPLH+1                                                 02365000
PLHAVL   EQU   IDAPLH                                                   02366000
PLHIOSDQ EQU   IDAPLHDR+12                                              02367000
PLHDRCUR EQU   IDAPLHDR+10                                              02368000
PLHDRMAX EQU   IDAPLHDR+8                                               02369000
PLHDRREQ EQU   IDAPLHDR+4                                               02370000
PLHELTH  EQU   IDAPLHDR+2                                               02371000
PLHCNT   EQU   IDAPLHDR+1                                               02372000
PLHID    EQU   IDAPLHDR                                                 02373000
BUFCEND  EQU   IDABUFC+64                                               02374000
BUFCUCDN EQU   IDABUFC+60                                               02375000
BUFCUCUP EQU   IDABUFC+56                                               02376000
BUFCMDBT EQU   IDABUFC+52                                               02377000
BUFCHAIN EQU   IDABUFC+48                                               02378000
BUFCIDXL EQU   IDABUFC+36                                               02379000
BUFCDSPC EQU   IDABUFC+32                                               02380000
BUFCWLEN EQU   BUFCINV                                                  02381000
BUFCNXT1 EQU   IDABUFC+24                                               02382000
BUFCCPA  EQU   IDABUFC+16                                               02383000
BUFCAMB  EQU   BUFCPLH                                                  02384000
@NM00023 EQU   BUFCFLG2                                                 02385000
BUFCEOD  EQU   BUFCFLG2                                                 02386000
BUFCBSYW EQU   BUFCFLG2                                                 02387000
BUFCBSYR EQU   BUFCFLG2                                                 02388000
BUFCNLAS EQU   BUFCFLG2                                                 02389000
BUFCXDDR EQU   BUFCFLG2                                                 02390000
BUFCFIX  EQU   BUFCIOFL                                                 02391000
BUFCPFCP EQU   BUFCIOFL                                                 02392000
BUFCXEDB EQU   BUFCIOFL                                                 02393000
BUFCWC   EQU   BUFCIOFL                                                 02394000
BUFCREAL EQU   BUFCIOFL                                                 02395000
BUFCRRD  EQU   BUFCIOFL                                                 02396000
BUFCFMT  EQU   BUFCIOFL                                                 02397000
BUFCEPT  EQU   BUFCFLG1                                                 02398000
BUFCER2  EQU   BUFCFLG1                                                 02399000
BUFCER1  EQU   BUFCFLG1                                                 02400000
BUFCINS  EQU   BUFCFLG1                                                 02401000
BUFCSEG  EQU   BUFCFLG1                                                 02402000
BUFCUPG  EQU   BUFCFLG1                                                 02403000
BUFCUCNT EQU   BUFCAVL                                                  02404000
@NM00022 EQU   IDABUFDR+16                                              02405000
BUFDBUFC EQU   IDABUFDR+12                                              02406000
@NM00021 EQU   BUFDRFLG                                                 02407000
BUFDRAVL EQU   BUFDRFLG                                                 02408000
BUFDRREL EQU   BUFDRFLG                                                 02409000
BUFDRTSB EQU   IDABUFDR+10                                              02410000
BUFDRMAX EQU   BUFDRCIX                                                 02411000
BUFDRPFN EQU   IDABUFDR+8                                               02412000
BUFDRPFB EQU   IDABUFDR+4                                               02413000
BUFDRLEN EQU   IDABUFDR+2                                               02414000
BUFDRNO  EQU   IDABUFDR+1                                               02415000
BUFDRID  EQU   IDABUFDR                                                 02416000
AMBLCMB  EQU   IDAAMBL+64                                               02417000
AMBLBIB  EQU   IDAAMBL+60                                               02418000
AMBLMIDS EQU   IDAAMBL+42                                               02419000
AMBLNIDS EQU   IDAAMBL+41                                               02420000
@NM00020 EQU   IDAAMBL+40                                               02421000
AMBLNST  EQU   IDAAMBL+37                                               02422000
@NM00019 EQU   AMBLFLG2                                                 02423000
AMBLSTAG EQU   AMBLFLG2                                                 02424000
@NM00018 EQU   AMBLFLG2                                                 02425000
AMBLDUMY EQU   AMBLFLG1                                                 02426000
AMBLCAT  EQU   AMBLFLG1                                                 02427000
AMBLUCRA EQU   AMBLFLG1                                                 02428000
AMBLSCRA EQU   AMBLFLG1                                                 02429000
AMBLVVIC EQU   AMBLFLG1                                                 02430000
AMBLUPD  EQU   AMBLFLG1                                                 02431000
AMBLFULL EQU   AMBLFLG1                                                 02432000
AMBLLEN  EQU   IDAAMBL+34                                               02433000
@NM00017 EQU   AMBLSHAR                                                 02434000
AMBLCATO EQU   AMBLSHAR                                                 02435000
AMBLPRIM EQU   AMBLSHAR                                                 02436000
AMBLID   EQU   IDAAMBL+32                                               02437000
@NM00016 EQU   IDAAMBL+31                                               02438000
@NM00015 EQU   AMBLTYPE                                                 02439000
AMBLFIX  EQU   AMBLTYPE                                                 02440000
AMBLBASE EQU   AMBLTYPE                                                 02441000
AMBLAIX  EQU   AMBLTYPE                                                 02442000
AMBLUPGR EQU   AMBLTYPE                                                 02443000
AMBLPATH EQU   AMBLTYPE                                                 02444000
AMBLENO  EQU   AMBLVC+1                                                 02445000
AMBLVRT  EQU   AMBLVC                                                   02446000
AMBLXPT  EQU   IDAAMBL+24                                               02447000
AMBLDFR  EQU   AMBLQ                                                    02448000
AMBLESDS EQU   AMBLQ                                                    02449000
AMBLKSDS EQU   AMBLQ                                                    02450000
AMBLUBF  EQU   AMBLQ                                                    02451000
AMBLFSTP EQU   AMBLQ                                                    02452000
AMBLLSR  EQU   AMBLQ                                                    02453000
AMBLGSR  EQU   AMBLQ                                                    02454000
AMBLDDC  EQU   AMBLQ                                                    02455000
AMBLDCI  EQU   AMBLIDF+4                                                02456000
AMBLCACB EQU   AMBLIDF                                                  02457000
@NM00014 EQU   AMBLEOV+2                                                02458000
AMBLCOMP EQU   AMBLEOV+1                                                02459000
AMBLESET EQU   AMBLEFLG                                                 02460000
AMBLWAIT EQU   AMBLEFLG                                                 02461000
AMBLACB  EQU   IDAAMBL+8                                                02462000
AMBLSCHN EQU   IDAAMBL+4                                                02463000
AMBLPCHN EQU   IDAAMBL                                                  02464000
ACBAPID  EQU   ACBCOMN+72                                               02465000
ACBCBMWA EQU   ACBCOMN+68                                               02466000
ACBUAPTR EQU   ACBCOMN+64                                               02467000
ACBLRECL EQU   ACBCOMN+62                                               02468000
ACBMSGLN EQU   ACBBLKSZ                                                 02469000
ACBBUFSP EQU   ACBCOMN+56                                               02470000
@NM00013 EQU   ACBUJFCB+1                                               02471000
ACBOPTN  EQU   ACBUJFCB                                                 02472000
ACBVVIC  EQU   ACBINFLG                                                 02473000
ACBUCRA  EQU   ACBINFLG                                                 02474000
ACBSCRA  EQU   ACBINFLG                                                 02475000
ACBCAT   EQU   ACBINFLG                                                 02476000
ACBIJRQE EQU   ACBINFLG                                                 02477000
ACBJEPS  EQU   ACBINFLG                                                 02478000
@NM00012 EQU   ACBINFLG                                                 02479000
ACBERFLG EQU   ACBCOMN+49                                               02480000
ACBBUSY  EQU   ACBIOSFG                                                 02481000
ACBLOCK  EQU   ACBEXFG                                                  02482000
@NM00011 EQU   ACBOFLGS                                                 02483000
ACBDSERR EQU   ACBOFLGS                                                 02484000
ACBOPEN  EQU   ACBOFLGS                                                 02485000
ACBEOV   EQU   ACBOFLGS                                                 02486000
@NM00010 EQU   ACBOFLGS                                                 02487000
ACBDEB   EQU   ACBDDNM+5                                                02488000
ACBERFL  EQU   ACBDDNM+4                                                02489000
ACBAM    EQU   ACBAMETH                                                 02490000
ACBINFL  EQU   ACBDDNM+2                                                02491000
ACBTIOT  EQU   ACBDDNM                                                  02492000
ACBPASSW EQU   ACBCOMN+32                                               02493000
ACBMSGAR EQU   ACBCOMN+28                                               02494000
@NM00009 EQU   ACBDSORG+1                                               02495000
ACBDORGA EQU   ACBDSORG+1                                               02496000
@NM00008 EQU   ACBDSORG                                                 02497000
ACBCRNRE EQU   ACBCROPS                                                 02498000
ACBCRNCK EQU   ACBCROPS                                                 02499000
ACBASA   EQU   ACBCCTYP                                                 02500000
@NM00007 EQU   ACBCCTYP                                                 02501000
ACBRECAF EQU   ACBRECFM                                                 02502000
ACBJBUF  EQU   ACBBUFPL+2                                               02503000
ACBMACR4 EQU   ACBBUFPL+1                                               02504000
@NM00006 EQU   ACBMACR3                                                 02505000
ACBNCFX  EQU   ACBMACR3                                                 02506000
ACBSIS   EQU   ACBMACR3                                                 02507000
ACBDFR   EQU   ACBMACR3                                                 02508000
ACBICI   EQU   ACBMACR3                                                 02509000
ACBGSR   EQU   ACBMACR3                                                 02510000
ACBLSR   EQU   ACBMACR3                                                 02511000
@NM00005 EQU   ACBMACR3                                                 02512000
ACBBUFNI EQU   ACBCOMN+18                                               02513000
ACBBUFND EQU   ACBCOMN+16                                               02514000
ACBSTRNO EQU   ACBCOMN+15                                               02515000
ACBBSTNO EQU   ACBCOMN+14                                               02516000
ACBAIX   EQU   ACBMACR2                                                 02517000
ACBDSN   EQU   ACBMACR2                                                 02518000
ACBRST   EQU   ACBMACR2                                                 02519000
ACBLOGON EQU   ACBMACR2                                                 02520000
ACBSKP   EQU   ACBMACR2                                                 02521000
@NM00004 EQU   ACBMACR2                                                 02522000
ACBUBF   EQU   ACBMACR1                                                 02523000
ACBOUT   EQU   ACBMACR1                                                 02524000
ACBIN    EQU   ACBMACR1                                                 02525000
ACBDIR   EQU   ACBMACR1                                                 02526000
ACBSEQ   EQU   ACBMACR1                                                 02527000
ACBBLK   EQU   ACBCNV                                                   02528000
ACBADD   EQU   ACBADR                                                   02529000
ACBKEY   EQU   ACBMACR1                                                 02530000
ACBINRTN EQU   ACBCOMN+8                                                02531000
ACBIBCT  EQU   ACBJWA                                                   02532000
ACBLEN2  EQU   ACBLENG2                                                 02533000
ACBSTYP  EQU   ACBCOMN+1                                                02534000
ACBID    EQU   ACBCOMN                                                  02535000
RPLERMSA EQU   RPLCOMN+72                                               02536000
RPLEMLEN EQU   RPLCOMN+70                                               02537000
RPLACTIV EQU   RPLCOMN+69                                               02538000
RPLBRANC EQU   RPLEXTD1                                                 02539000
RPLNIB   EQU   RPLEXTD1                                                 02540000
@NM00003 EQU   RPLEXTD1                                                 02541000
RPLEXIT  EQU   RPLEXTD1                                                 02542000
RPLNEXIT EQU   RPLEXTD1                                                 02543000
RPLEXSCH EQU   RPLEXTD1                                                 02544000
@NM00002 EQU   RPLRBAR+3                                                02545000
@NM00001 EQU   RPLAIXID                                                 02546000
RPLAXPKP EQU   RPLAIXID                                                 02547000
RPLAIXPC EQU   RPLRBAR                                                  02548000
RPLRSV88 EQU   RPLOPT8                                                  02549000
RPLUNCON EQU   RPLOPT8                                                  02550000
RPLACTV  EQU   RPLOPT8                                                  02551000
RPLSESS  EQU   RPLOPT8                                                  02552000
RPLPEND  EQU   RPLOPT8                                                  02553000
RPLODPRM EQU   RPLOPT8                                                  02554000
RPLODACP EQU   RPLOPT8                                                  02555000
RPLODACQ EQU   RPLOPT8                                                  02556000
RPLRSV78 EQU   RPLOPT7                                                  02557000
RPLRSV77 EQU   RPLOPT7                                                  02558000
RPLRLSOP EQU   RPLOPT7                                                  02559000
RPLTPOST EQU   RPLOPT7                                                  02560000
RPLQOPT  EQU   RPLOPT7                                                  02561000
RPLCNIMM EQU   RPLCNOPT                                                 02562000
RPLCNANY EQU   RPLCNOPT                                                 02563000
RPLCNALL EQU   RPLCNOPT                                                 02564000
RPLRSV68 EQU   RPLOPT6                                                  02565000
RPLRSV67 EQU   RPLOPT6                                                  02566000
RPLLOCK  EQU   RPLOPT6                                                  02567000
RPLNCOND EQU   RPLOPT6                                                  02568000
RPLCOND  EQU   RPLOPT6                                                  02569000
RPLEOT   EQU   RPLUNTYP                                                 02570000
RPLEOM   EQU   RPLUNTYP                                                 02571000
RPLEOB   EQU   RPLUNTYP                                                 02572000
RPLWROPT EQU   RPLOPT5                                                  02573000
RPLNODE  EQU   RPLOPT5                                                  02574000
RPLERACE EQU   RPLWRTYP                                                 02575000
RPLEAU   EQU   RPLWRTYP                                                 02576000
RPLNERAS EQU   RPLWRTYP                                                 02577000
RPLPSOPT EQU   RPLOPT5                                                  02578000
RPLSSNIN EQU   RPLOPT5                                                  02579000
RPLDLGIN EQU   RPLOPT5                                                  02580000
RPLCHAIN EQU   RPLNXTRP                                                 02581000
RPLOPT4  EQU   RPLOPTCD+3                                               02582000
RPLALIGN EQU   RPLOPT3                                                  02583000
RPLFMT   EQU   RPLOPT3                                                  02584000
RPLFLD   EQU   RPLOPT3                                                  02585000
RPLVFY   EQU   RPLOPT3                                                  02586000
RPLBLK   EQU   RPLOPT3                                                  02587000
RPLSFORM EQU   RPLOPT3                                                  02588000
RPLEODS  EQU   RPLOPT3                                                  02589000
RPLWAITX EQU   RPLOPT2                                                  02590000
RPLLRD   EQU   RPLOPT2                                                  02591000
RPLCNV   EQU   RPLOPT2                                                  02592000
RPLADD   EQU   RPLADR                                                   02593000
RPLKEY   EQU   RPLOPT2                                                  02594000
RPLECBIN EQU   RPLECBSW                                                 02595000
RPLGEN   EQU   RPLOPT1                                                  02596000
RPLKGE   EQU   RPLOPT1                                                  02597000
RPLASY   EQU   RPLOPT1                                                  02598000
RPLSKP   EQU   RPLOPT1                                                  02599000
RPLDAF   EQU   RPLARG+2                                                 02600000
RPLSAF   EQU   RPLARG                                                   02601000
RPLTCBPT EQU   RPLCOMN+28                                               02602000
RPLCCHAR EQU   RPLCOMN+20                                               02603000
RPLSTRID EQU   RPLCOMN+18                                               02604000
RPLKEYL  EQU   RPLKEYLE                                                 02605000
RPLRDSOH EQU   RPLFDB3                                                  02606000
RPLRLG   EQU   RPLFDB3                                                  02607000
RPLLGFRC EQU   RPLFDB3                                                  02608000
RPLREOT  EQU   RPLFDB3                                                  02609000
RPLREOM  EQU   RPLFDB3                                                  02610000
RPLREOB  EQU   RPLFDB3                                                  02611000
RPLSV32  EQU   RPLFDB3                                                  02612000
RPLUINPT EQU   RPLFDB3                                                  02613000
RPLSTSAV EQU   RPLFDB2                                                  02614000
RPLCUERR EQU   RPLFDB2                                                  02615000
RPLDLGFL EQU   RPLFDB2                                                  02616000
RPLIOERR EQU   RPLFDB2                                                  02617000
RPLDVUNS EQU   RPLFDB2                                                  02618000
RPLATND  EQU   RPLFDB2                                                  02619000
RPLRVID  EQU   RPLFDB2                                                  02620000
RPLERLK  EQU   RPLFDB2                                                  02621000
RPLSTAT  EQU   RPLFDBWD                                                 02622000
RPLPOST  EQU   RPLECB                                                   02623000
RPLWAIT  EQU   RPLECB                                                   02624000
RPLPLHPT EQU   RPLCOMN+4                                                02625000
RPLLEN2  EQU   RPLLEN                                                   02626000
RPLSTYP  EQU   RPLIDWD+1                                                02627000
RPLID    EQU   RPLIDWD                                                  02628000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02629000
@RT00189 EQU   INVLOC                                                   02630000
@RF00283 EQU   @RC00237                                                 02631000
@RC00271 EQU   @RC00237                                                 02632000
@RC00239 EQU   @RC00237                                                 02633000
@RF00299 EQU   @RC00237                                                 02634000
@RF00338 EQU   R8EXIT                                                   02635000
@RC00360 EQU   R8EXIT                                                   02636000
@RF00400 EQU   @RC00201                                                 02637000
@RT00438 EQU   BADBDY                                                   02638000
@RT00461 EQU   R8EXIT                                                   02639000
@RT00484 EQU   ERRORX                                                   02640000
@RT00580 EQU   PUTEXIT2                                                 02641000
@RT00612 EQU   PUTEXIT2                                                 02642000
@RT00627 EQU   PUTEXIT                                                  02643000
@RT00652 EQU   CANCPOS                                                  02644000
@RC00667 EQU   @RC00665                                                 02645000
@RC00719 EQU   ERRORX                                                   02646000
@RT00724 EQU   BADBDY                                                   02647000
@RT00751 EQU   PUTEXIT                                                  02648000
@ENDDATA EQU   *                                                        02649000
         END   IDA019R8,(C'PLS2210',0701,78172)                         02650000
