         TITLE 'IDA019RA - VSAM DIRECT RECORD LOCATE                   *00001000
                        '                                               00002000
IDA019RA CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019RA  78.172'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
         IDASVR14                                                       00013000
*   PLHRDEXC=OFF;                   /* CLEAR EXCLUSIVE CONTROL     0158 00014000
*                                                            @X04SVES*/ 00015000
         NI    PLHRDEXC(RPLH),B'11110111'                          0158 00016000
*   PLHRAE=OFF;                     /* SEARCH EQUAL HISTORY OFF    0159 00017000
*                                                            @ZA14811*/ 00018000
         NI    PLHRAE(RPLH),B'11111101'                            0159 00019000
*   IF RPLREQ=RPLPOINT|RPLUPD=ON|   /* POINT, UPDATE         @X04SVES*/ 00020000
*       RPLNSP=ON THEN              /* OR NSP                @X04SVES*/ 00021000
         CLI   RPLREQ(RRPL),3                                      0160 00022000
         BE    @RT00160                                            0160 00023000
         TM    RPLUPD(RRPL),B'00000011'                            0160 00024000
         BZ    @RF00160                                            0160 00025000
@RT00160 DS    0H                                                  0161 00026000
*     PLHASKBF=ON;                  /* YES, SET ASKBF        @X04SVES*/ 00027000
         OI    PLHASKBF(RPLH),B'00100000'                          0161 00028000
*   IF RPLKEY=ON THEN               /* IS THIS A KEYED REQUEST       */ 00029000
@RF00160 TM    RPLKEY(RRPL),B'10000000'                            0162 00030000
         BNO   @RF00162                                            0162 00031000
*     DO;                           /* YES                           */ 00032000
*       RWORK1=RPARM1;              /* POINT TO SEARCH ARG           */ 00033000
         LR    RWORK1,RPARM1                                       0164 00034000
*       RESPECIFY                                                  0165 00035000
*         RPARM1 UNRSTD;            /* RELEASE REGISTER              */ 00036000
*       RWORK3=ADDR(PLHKEY);        /* POINT TO PLHKEY               */ 00037000
         L     RWORK3,PLHKEYPT(,RPLH)                              0166 00038000
*       PLHISPLP=ADDR(PLHIXSPL);    /* SET PTR. TO WORK AREA         */ 00039000
         LA    @12,PLHIXSPL(,RPLH)                                 0167 00040000
         ST    @12,PLHISPLP(,RPLH)                                 0167 00041000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB            */ 00042000
         L     @12,RPLDACB(,RRPL)                                  0168 00043000
         L     @12,ACBAMBL(,@12)                                   0168 00044000
         L     RAMB,AMBLIX(,@12)                                   0168 00045000
*       IF RPLREQ^=RPLPUT&          /* DIFFERENT FROM PUT REQ.       */ 00046000
*           RWORK1^=RWORK3 THEN     /* AND ARG NOT IN PLHKEY         */ 00047000
         CLI   RPLREQ(RRPL),1                                      0169 00048000
         BE    @RF00169                                            0169 00049000
         CR    RWORK1,RWORK3                                       0169 00050000
         BE    @RF00169                                            0169 00051000
*         DO;                       /* YES, ITS NOT PUT              */ 00052000
*           IF RPLLRD=ON THEN       /* IS LAST RECORD IN DATA SET  0171 00053000
*                                      SPECIFIED             @X04SVES*/ 00054000
         TM    RPLLRD(RRPL),B'00001000'                            0171 00055000
         BNO   @RF00171                                            0171 00056000
*             DO;                   /* YES                   @X04SVES*/ 00057000
*               IF RPLBWD=OFF THEN  /* IS FORWARD MODE SET   @X04SVES*/ 00058000
         TM    RPLBWD(RRPL),B'00010000'                            0173 00059000
         BNZ   @RF00173                                            0173 00060000
*                 DO;               /* YES                   @X04SVES*/ 00061000
*                   RPLERREG='08'X; /* SET LOGICAL ERROR     @X04SVES*/ 00062000
         MVI   RPLERREG(RRPL),X'08'                                0175 00063000
*                   RPLERRCD=RPLINVP;/* SET ILLEGAL OPTIONS  @X04SVES*/ 00064000
         MVI   RPLERRCD(RRPL),X'68'                                0176 00065000
*                   CALL EXIT;      /* EXIT TO CALLER        @X04SVMR*/ 00066000
         BAL   @14,EXIT                                            0177 00067000
*                 END;              /*                       @X04SVES*/ 00068000
*               RWORK2=AMDKEYLN;    /* SET ARGUMENT TO FULL KEY    0179 00069000
*                                                            @X04SVES*/ 00070000
@RF00173 L     @12,AMBDSB(,RAMB)                                   0179 00071000
         LH    RWORK2,AMDKEYLN(,@12)                               0179 00072000
*               DO RWORK1=ONE TO RWORK2;/* LOOP SETS EACH BYTE OF PLH   00073000
*                                                            @X04SVES*/ 00074000
         LA    RWORK1,1                                            0180 00075000
         B     @DE00180                                            0180 00076000
@DL00180 DS    0H                                                  0181 00077000
*                 PLHKEY(RWORK1)=ONEF;/* SET BYTE TO FF      @X04SVES*/ 00078000
         L     @12,PLHKEYPT(,RPLH)                                 0181 00079000
         ALR   @12,RWORK1                                          0181 00080000
         BCTR  @12,0                                               0181 00081000
         MVI   PLHKEY(@12),X'FF'                                   0181 00082000
*               END;                /*                       @X04SVES*/ 00083000
         AL    RWORK1,@CF00053                                     0182 00084000
@DE00180 CLR   RWORK1,RWORK2                                       0182 00085000
         BNH   @DL00180                                            0182 00086000
*               RWORK1=ADDR(PLHKEY);/* SHOW ARGUMENT IS NOW IN PLH 0183 00087000
*                                                            @X04SVES*/ 00088000
         L     RWORK1,PLHKEYPT(,RPLH)                              0183 00089000
*             END;                  /*                       @X04SVES*/ 00090000
*           ELSE                    /*                       @X04SVES*/ 00091000
*             DO;                   /*                       @X04SVES*/ 00092000
         B     @RC00171                                            0185 00093000
@RF00171 DS    0H                                                  0186 00094000
*               IF RPLGEN=ON&RPLBWD=OFF THEN/* GENERIC REQUEST     0186 00095000
*                                                            @X04SVES*/ 00096000
         TM    RPLGEN(RRPL),B'00000010'                            0186 00097000
         BNO   @RF00186                                            0186 00098000
         TM    RPLBWD(RRPL),B'00010000'                            0186 00099000
         BNZ   @RF00186                                            0186 00100000
*                 DO;               /* YES                           */ 00101000
*                   RWORK2=RPLKEYL; /* USE RPL KEY LEMGTH            */ 00102000
         LH    RWORK2,RPLKEYL(,RRPL)                               0188 00103000
*                 END;              /*                               */ 00104000
*               ELSE                /* OTHERWISE                     */ 00105000
*                 DO;               /* USE KEY LENGTH                */ 00106000
         B     @RC00186                                            0190 00107000
@RF00186 DS    0H                                                  0191 00108000
*                   RWORK2=AMDKEYLN;/* FROM AMDSB                    */ 00109000
         L     @12,AMBDSB(,RAMB)                                   0191 00110000
         LH    RWORK2,AMDKEYLN(,@12)                               0191 00111000
*                 END;              /*                               */ 00112000
*             END;                  /*                       @X04SVES*/ 00113000
*         END;                      /*                               */ 00114000
*       ELSE                        /* IN CASE OF A PUT              */ 00115000
*         DO;                       /* REQUEST, KEY ADDRESS          */ 00116000
         B     @RC00169                                            0195 00117000
@RF00169 DS    0H                                                  0196 00118000
*           RWORK2=AMDKEYLN;        /* WITH LENGTH FROM AMD          */ 00119000
         L     @12,AMBDSB(,RAMB)                                   0196 00120000
         LH    RWORK2,AMDKEYLN(,@12)                               0196 00121000
*         END;                      /*                               */ 00122000
*       IF RPLSKP=ON&RPLBWD=ON THEN /* SKP SEQ AND BACKWARD MODE   0198 00123000
*                                                            @X04SVES*/ 00124000
@RC00169 TM    RPLSKP(RRPL),B'00010000'                            0198 00125000
         BNO   @RF00198                                            0198 00126000
         TM    RPLBWD(RRPL),B'00010000'                            0198 00127000
         BNO   @RF00198                                            0198 00128000
*         DO;                       /* YES                   @X04SVES*/ 00129000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR     @X04SVES*/ 00130000
         MVI   RPLERREG(RRPL),X'08'                                0200 00131000
*           RPLERRCD=RPLINVP;       /* SET ILLEGAL OPTIONS   @X04SVES*/ 00132000
         MVI   RPLERRCD(RRPL),X'68'                                0201 00133000
*           CALL EXIT;              /* EXIT TO CALLER        @X04SVMR*/ 00134000
         BAL   @14,EXIT                                            0202 00135000
*         END;                      /*                       @X04SVES*/ 00136000
*       IF RPLSKP=ON&               /* SKIP SEQUENTIAL REQUEST       */ 00137000
*           RPLREQ^=RPLPOINT&       /* AND NOT POINT                 */ 00138000
*           PLHINVAL=OFF&           /* AND POSITION EXISTS           */ 00139000
*           PLHBWD^=ON&             /* AND LAST DIRECTION WASNT    0204 00140000
*                                      BACKWARD              @X04SVES*/ 00141000
*           PLH1ST=OFF THEN         /* AND NOT FIRST TIME            */ 00142000
@RF00198 TM    RPLSKP(RRPL),B'00010000'                            0204 00143000
         BNO   @RF00204                                            0204 00144000
         CLI   RPLREQ(RRPL),3                                      0204 00145000
         BE    @RF00204                                            0204 00146000
         TM    PLHINVAL(RPLH),B'00000010'                          0204 00147000
         BNZ   @RF00204                                            0204 00148000
         TM    PLHBWD(RPLH),B'00010000'                            0204 00149000
         BO    @RF00204                                            0204 00150000
         TM    PLH1ST(RPLH),B'01000000'                            0204 00151000
         BNZ   @RF00204                                            0204 00152000
*         DO;                       /* YES                           */ 00153000
*           IF RWORK1->KEY(1:RWORK2)/* IS KEY LESS THAN OR           */ 00154000
*               ^>PLHKEY(1:RWORK2) THEN/* EQUAL TO KEY IN PLH        */ 00155000
         L     @12,PLHKEYPT(,RPLH)                                 0206 00156000
         LR    @10,RWORK2                                          0206 00157000
         BCTR  @10,0                                               0206 00158000
         EX    @10,@SC01026                                        0206 00159000
         BH    @RF00206                                            0206 00160000
*             DO;                   /* YES                           */ 00161000
*               IF(RWORK1->KEY(1:RWORK2)/* IS KEY SMALLER, OR IF     */ 00162000
*                   <PLHKEY(1:RWORK2))|/* EQUAL IS THIS GET          */ 00163000
*                   (RPLREQ=RPLGET& /* WITHOUT POINT                 */ 00164000
*                   PLHRCODE^=RPLPOINT) THEN/* ON PREVIOUS REQUEST   */ 00165000
         EX    @10,@SC01026                                        0208 00166000
         BL    @RT00208                                            0208 00167000
         CLI   RPLREQ(RRPL),0                                      0208 00168000
         BNE   @RF00208                                            0208 00169000
         CLI   PLHRCODE(RPLH),3                                    0208 00170000
         BE    @RF00208                                            0208 00171000
@RT00208 DS    0H                                                  0209 00172000
*                 DO;               /* YES                           */ 00173000
*                   RPLERREG='08'X; /* SET LOGICAL ERROR             */ 00174000
         MVI   RPLERREG(RRPL),X'08'                                0210 00175000
*                   RPLERRCD=RPLSEQCK;/* SET SEQUENCE ERROR          */ 00176000
         MVI   RPLERRCD(RRPL),X'0C'                                0211 00177000
*                   CALL EXIT;      /* EXIT TO CALLER        @X04SVMR*/ 00178000
         BAL   @14,EXIT                                            0212 00179000
*                 END;              /*                               */ 00180000
*             END;                  /*                               */ 00181000
@RF00208 DS    0H                                                  0215 00182000
*         END;                      /*                               */ 00183000
@RF00206 DS    0H                                                  0216 00184000
*       IF RWORK1^=RWORK3 THEN      /* IS ARG IN PLHKEY              */ 00185000
@RF00204 CR    RWORK1,RWORK3                                       0216 00186000
         BE    @RF00216                                            0216 00187000
*         DO;                       /* NO.                           */ 00188000
*           IF RPLGEN=ON&RPLBWD=OFF THEN/* IS THIS GENERIC REQUEST 0218 00189000
*                                                            @X04SVES*/ 00190000
         TM    RPLGEN(RRPL),B'00000010'                            0218 00191000
         BNO   @RF00218                                            0218 00192000
         TM    RPLBWD(RRPL),B'00010000'                            0218 00193000
         BNZ   @RF00218                                            0218 00194000
*             DO;                   /* YES                           */ 00195000
*               IF AMDKEYLN>RPLKEYL /* IS THE GENERIC KEY LESS       */ 00196000
*                 THEN              /* THAN THE AMD KEY LENGTH       */ 00197000
         L     @12,AMBDSB(,RAMB)                                   0220 00198000
         LH    @12,AMDKEYLN(,@12)                                  0220 00199000
         LH    @10,RPLKEYL(,RRPL)                                  0220 00200000
         CR    @12,@10                                             0220 00201000
         BNH   @RF00220                                            0220 00202000
*                 DO;               /* YES                           */ 00203000
*                   PLHKEY(RPLKEYL+1:AMDKEYLN)=/* ZERO OUT THE BYTES    00204000
*                                      IN                            */ 00205000
*                       PLHKEY(RPLKEYL+1:AMDKEYLN)&&/* THE         0222 00206000
*                                      PLACEHOLDER KEY NOT           */ 00207000
*                       PLHKEY(RPLKEYL+1:AMDKEYLN);/* INCLUDED BY  0222 00208000
*                                      GENERIC LENGTH SPECIFICATION  */ 00209000
         L     @09,PLHKEYPT(,RPLH)                                 0222 00210000
         ALR   @09,@10                                             0222 00211000
         SLR   @12,@10                                             0222 00212000
         BCTR  @12,0                                               0222 00213000
         EX    @12,@SX01028                                        0222 00214000
*                 END;              /*                               */ 00215000
*             END;                  /*                               */ 00216000
@RF00220 DS    0H                                                  0225 00217000
*           PLHKEY(1:RWORK2)=RWORK1->/* MOVE THE KEY INTO            */ 00218000
*               KEY(1:RWORK2);      /* THE PLACEHOLDER               */ 00219000
@RF00218 L     @12,PLHKEYPT(,RPLH)                                 0225 00220000
         LR    @10,RWORK2                                          0225 00221000
         BCTR  @10,0                                               0225 00222000
         EX    @10,@SM01030                                        0225 00223000
*           RWORK1=ADDR(PLHKEY);    /*                               */ 00224000
         LR    RWORK1,@12                                          0226 00225000
*         END;                      /* END OF ARG NOT IN PLH         */ 00226000
*       RESPECIFY                                                  0228 00227000
*         IDAPLHDR BASED(AMBPH);    /*                       @ZA11110*/ 00228000
@RF00216 DS    0H                                                  0229 00229000
*       IF AMBPUG=ON&               /* AIX W/ UPG            @ZA11110*/ 00230000
*           (PLHINVAL=OFF&          /* NO POSITION           @ZA11110*/ 00231000
*           PLH1ST=OFF) THEN        /* NOT FIRST             @ZA11110*/ 00232000
         TM    AMBPUG(RAMB),B'10000000'                            0229 00233000
         BNO   @RF00229                                            0229 00234000
         TM    PLHINVAL(RPLH),B'01000010'                          0229 00235000
         BNZ   @RF00229                                            0229 00236000
*         DO;                       /*                       @ZA11110*/ 00237000
*           IXSARG=RWORK1;          /* SAVE ARG              @ZA11110*/ 00238000
         L     @12,PLHISPLP(,RPLH)                                 0231 00239000
         ST    RWORK1,IXSARG(,@12)                                 0231 00240000
*           RBUFC=0;                /* SUB ALL               @ZA11110*/ 00241000
         SLR   RBUFC,RBUFC                                         0232 00242000
*I01:                                                              0233 00243000
*           DO;                     /* IDACALL(IDASBF)               */ 00244000
I01      DS    0H                                                  0234 00245000
*             CALL IDASBF;          /* EXIT TO IDASBF                */ 00246000
         L     @15,@CV00929                                        0234 00247000
         BALR  @14,@15                                             0234 00248000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00249000
         BALR @11,0                                                     00250000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00251000
         USING *,@11                                                    00252000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00253000
         L     @11,=A(@PSTART)                                          00254000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00255000
         USING @PSTART,@11                                              00256000
*           END I01;                /* SUB BUFFERS           @ZA11110*/ 00257000
*           IF RPLERREG^=0 THEN     /* ANY ERROR             @ZA11110*/ 00258000
         CLI   RPLERREG(RRPL),0                                    0240 00259000
         BE    @RF00240                                            0240 00260000
*             CALL EXIT;            /* EXIT                  @ZA11110*/ 00261000
         BAL   @14,EXIT                                            0241 00262000
*           RWORK1=IXSARG;          /* RESTORE ARG           @ZA11110*/ 00263000
@RF00240 L     @12,PLHISPLP(,RPLH)                                 0242 00264000
         L     RWORK1,IXSARG(,@12)                                 0242 00265000
*         END;                      /*                       @ZA11110*/ 00266000
*       IF RPLSKP=OFF|              /* NOT SKIP SEQUENTIAL           */ 00267000
*           RPLREQ=RPLPOINT|        /* OR IF POINT                   */ 00268000
*           PLHINVAL=ON|            /* OR POSITION NOT SET           */ 00269000
*           PLHKEYMD=OFF|           /* OR NOT KEYED          @XA05682*/ 00270000
*           PLH1ST=ON|              /* OR 1ST REQUEST        @ZA11110*/ 00271000
*           PLHRSTRT=ON             /* OR BAD PUT POSITION   @ZA11110*/ 00272000
*         THEN                      /*                               */ 00273000
@RF00229 TM    RPLSKP(RRPL),B'00010000'                            0244 00274000
         BZ    @RT00244                                            0244 00275000
         CLI   RPLREQ(RRPL),3                                      0244 00276000
         BE    @RT00244                                            0244 00277000
         TM    PLHINVAL(RPLH),B'00000010'                          0244 00278000
         BO    @RT00244                                            0244 00279000
         TM    PLHKEYMD(RPLH),B'00100000'                          0244 00280000
         BZ    @RT00244                                            0244 00281000
         TM    PLH1ST(RPLH),B'01000000'                            0244 00282000
         BO    @RT00244                                            0244 00283000
         TM    PLHRSTRT(RPLH),B'10000000'                          0244 00284000
         BNO   @RF00244                                            0244 00285000
@RT00244 DS    0H                                                  0245 00286000
*         DO;                       /* NO                            */ 00287000
*           RAMB=AMBLIX;            /* GET INDEX AMB         @ZA27964*/ 00288000
         L     @12,RPLDACB(,RRPL)                                  0246 00289000
         L     @12,ACBAMBL(,@12)                                   0246 00290000
         L     RAMB,AMBLIX(,@12)                                   0246 00291000
*           RWORK4=AMDNIL;          /* SET INITIAL LEVEL OF          */ 00292000
         L     @12,AMBDSB(,RAMB)                                   0247 00293000
         LH    RWORK4,AMDNIL(,@12)                                 0247 00294000
*           IXSILN=RWORK4;          /* SEARCH TO TOP OF INDEX        */ 00295000
         L     @10,PLHISPLP(,RPLH)                                 0248 00296000
         STC   RWORK4,IXSILN(,@10)                                 0248 00297000
*           IXSSTRBA=AMDHLRBA;      /* SET RBA INTO WORKAREA         */ 00298000
         L     @12,AMDHLRBA(,@12)                                  0249 00299000
         ST    @12,IXSSTRBA(,@10)                                  0249 00300000
*           PLHRSTRT=OFF;           /* CLEAR BAD PUT FLAG    @ZA11110*/ 00301000
         NI    PLHRSTRT(RPLH),B'01111111'                          0250 00302000
*         END;                      /*                               */ 00303000
*       ELSE                        /*                               */ 00304000
*         DO;                       /* SKIP SEQUENTIAL, SET          */ 00305000
         B     @RC00244                                            0252 00306000
@RF00244 DS    0H                                                  0253 00307000
*           IXSILN=ONE;             /* INITIAL LEVEL AT ONE          */ 00308000
         L     @12,PLHISPLP(,RPLH)                                 0253 00309000
         MVI   IXSILN(@12),X'01'                                   0253 00310000
*           IXSSTRBA=PLHSSRBA;      /* SET RBA FROM PLH              */ 00311000
         L     @10,PLHSSRBA(,RPLH)                                 0254 00312000
         ST    @10,IXSSTRBA(,@12)                                  0254 00313000
*         END;                      /*                               */ 00314000
*DRLA:                                                             0256 00315000
*       IXSTLN=ONE;                 /* SET TERMINAL LVL TO 1         */ 00316000
@RC00244 DS    0H                                                  0256 00317000
DRLA     L     @12,PLHISPLP(,RPLH)                                 0256 00318000
         MVI   IXSTLN(@12),X'01'                                   0256 00319000
*       IXSARG=RWORK1;              /* SET ARG. ADDRESS              */ 00320000
         ST    RWORK1,IXSARG(,@12)                                 0257 00321000
*       RAMB=AMBLDTA;               /* POINT TO DATA AMB             */ 00322000
         L     @12,RPLDACB(,RRPL)                                  0258 00323000
         L     @12,ACBAMBL(,@12)                                   0258 00324000
         L     RAMB,AMBLDTA(,@12)                                  0258 00325000
*       RESPECIFY                                                  0259 00326000
*         RPARM1 RESTRICTED;        /* OBTAIN RPARM1                 */ 00327000
*       RPARM1=PLHDIOB;             /* POINT TO DATA IOB             */ 00328000
*                                                                  0260 00329000
         L     RPARM1,PLHDIOB(,RPLH)                               0260 00330000
*       /*************************************************************/ 00331000
*       /*                                                           */ 00332000
*       /* WAIT ON PREVIOUS I/O BEFORE INDEX SEARCH IF NSR   @ZA07549*/ 00333000
*       /*                                                           */ 00334000
*       /*************************************************************/ 00335000
*                                                                  0261 00336000
*       IF AMBGSR=OFF&              /* NOT GSR OR            @ZA07549*/ 00337000
*           AMBLSR=OFF THEN         /* LSR THEN DO WAIT      @ZA07549*/ 00338000
         TM    AMBGSR(RAMB),B'01100000'                            0261 00339000
         BNZ   @RF00261                                            0261 00340000
*I02:                                                              0262 00341000
*         DO;                       /* IDACALL(IDAWAIT)              */ 00342000
I02      DS    0H                                                  0263 00343000
*           CALL IDAWAIT;           /* EXIT TO IDAWAIT               */ 00344000
         L     @15,@CV00930                                        0263 00345000
         BALR  @14,@15                                             0263 00346000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00347000
         BALR @11,0                                                     00348000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00349000
         USING *,@11                                                    00350000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00351000
         L     @11,=A(@PSTART)                                          00352000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00353000
         USING @PSTART,@11                                              00354000
*         END I02;                                                 0268 00355000
*       RESPECIFY                                                  0269 00356000
*         RPARM1 UNRSTD;            /* RELEASE RPARM1                */ 00357000
@RF00261 DS    0H                                                  0270 00358000
*       RAMB=AMBLIX;                /* POINT AMB REGISTER TO INDEX   */ 00359000
         L     @12,RPLDACB(,RRPL)                                  0270 00360000
         L     @12,ACBAMBL(,@12)                                   0270 00361000
         L     RAMB,AMBLIX(,@12)                                   0270 00362000
*I03:                                                              0271 00363000
*       DO;                         /* IDACALL(IDA019RB)             */ 00364000
I03      DS    0H                                                  0272 00365000
*         CALL IDA019RB;            /* EXIT TO IDA019RB              */ 00366000
         L     @15,@CV00932                                        0272 00367000
         BALR  @14,@15                                             0272 00368000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00369000
         BALR @11,0                                                     00370000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00371000
         USING *,@11                                                    00372000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00373000
         L     @11,=A(@PSTART)                                          00374000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00375000
         USING @PSTART,@11                                              00376000
*       END I03;                    /* CALL INDEX SEARCH             */ 00377000
*       RESPECIFY                                                  0278 00378000
*        (RWORK1,                                                  0278 00379000
*         RWORK2,                                                  0278 00380000
*         RWORK3,                                                  0278 00381000
*         RWORK4) RSTD;                                            0278 00382000
*       IF RPLERREG^=ZERO THEN      /* ANY I/O ERRORS IN RB          */ 00383000
         CLI   RPLERREG(RRPL),0                                    0279 00384000
         BE    @RF00279                                            0279 00385000
*         CALL EXIT;                /* EXIT TO CALLER        @X04SVMR*/ 00386000
         BAL   @14,EXIT                                            0280 00387000
*       RAMB=AMBLDTA;               /* POINT AMB REGISTER BACK TO  0281 00388000
*                                      DATA                          */ 00389000
@RF00279 L     @12,RPLDACB(,RRPL)                                  0281 00390000
         L     @12,ACBAMBL(,@12)                                   0281 00391000
         L     RAMB,AMBLDTA(,@12)                                  0281 00392000
*       RWORK4=IXSHEP+LENGTH(IBFLPF)+/* POINT TO THE POINTER         */ 00393000
*           LENGTH(IBFLPL);         /* FIELD OF THE ENTRY            */ 00394000
         L     @12,PLHISPLP(,RPLH)                                 0282 00395000
         LA    RWORK4,2                                            0282 00396000
         AL    RWORK4,IXSHEP(,@12)                                 0282 00397000
*       RWORK2=RBUFC->IXHPTLS;      /* PICK UP MASK BYTE FROM        */ 00398000
         SLR   RWORK2,RWORK2                                       0283 00399000
         IC    RWORK2,IXHPTLS(,RBUFC)                              0283 00400000
*       RWORK1=ZERO;                /* INDEX HEADER                  */ 00401000
         SLR   RWORK1,RWORK1                                       0284 00402000
*       GEN;                                                       0285 00403000
*                                          /*                        */ 00404000
         EX    RWORK2,INSERT               /* PICK UP INDEX ENTRY    */ 00405000
*       RWORK2=RWORK1*AMDCINV+RBUFC->IXHBRBA;/* CONVERT              */ 00406000
         L     @12,AMBDSB(,RAMB)                                   0286 00407000
         LR    @15,RWORK1                                          0286 00408000
         M     @14,AMDCINV(,@12)                                   0286 00409000
         AL    @15,IXHBRBA(,RBUFC)                                 0286 00410000
         LR    RWORK2,@15                                          0286 00411000
*       RPLDDDD=RWORK2;             /* ENTRY FROM THE INDEX INTO A 0287 00412000
*                                      TRUE RBA                      */ 00413000
         ST    RWORK2,RPLDDDD(,RRPL)                               0287 00414000
*       IF(IXSNOSR^=ZERO&           /* SPANNED RECORD        @X04SVES*/ 00415000
*           RPLREQ=RPLGET)|         /* GET OR                @X04SVES*/ 00416000
*           (RPLREQ=RPLPOINT&       /* POINT                 @X04SVES*/ 00417000
*           RPLSEQ=ON) THEN         /* SEQUENTIAL?           @X04SVMR*/ 00418000
         L     @12,PLHISPLP(,RPLH)                                 0288 00419000
         CLI   IXSNOSR(@12),0                                      0288 00420000
         BE    @GL00018                                            0288 00421000
         CLI   RPLREQ(RRPL),0                                      0288 00422000
         BE    @RT00288                                            0288 00423000
@GL00018 CLI   RPLREQ(RRPL),3                                      0288 00424000
         BNE   @RF00288                                            0288 00425000
         TM    RPLSEQ(RRPL),B'00100000'                            0288 00426000
         BNO   @RF00288                                            0288 00427000
@RT00288 DS    0H                                                  0289 00428000
*         DO;                       /* YES                   @X04SVES*/ 00429000
*           PLHASKBF=ON;            /* ASK FOR BUFFERS       @X04SVES*/ 00430000
         OI    PLHASKBF(RPLH),B'00100000'                          0290 00431000
*           RESPECIFY                                              0291 00432000
*             RPARM1 RSTD;          /*                       @X04SVES*/ 00433000
*           IF(IXSNOSR^=ZERO&       /* SPANNED RECORD        @X04SVMR*/ 00434000
*               RPLREQ=RPLGET) THEN /* GET.                  @X04SVMR*/ 00435000
         L     @10,PLHISPLP(,RPLH)                                 0292 00436000
         CLI   IXSNOSR(@10),0                                      0292 00437000
         BE    @RF00292                                            0292 00438000
         CLI   RPLREQ(RRPL),0                                      0292 00439000
         BNE   @RF00292                                            0292 00440000
*             RPARM1=IXSNOSR+ONE;   /* GET NO. BUFFERS       @X04SVES*/ 00441000
         LA    RPARM1,1                                            0293 00442000
         SLR   @09,@09                                             0293 00443000
         IC    @09,IXSNOSR(,@10)                                   0293 00444000
         ALR   RPARM1,@09                                          0293 00445000
*           ELSE                    /* POINT-SEQ             @X04SVMR*/ 00446000
*             RPARM1=ZERO;          /* ASK FOR MAX.          @X04SVMR*/ 00447000
         B     @RC00292                                            0294 00448000
@RF00292 SLR   RPARM1,RPARM1                                       0294 00449000
*I04:                                                              0295 00450000
*           DO;                     /* IDACALL(IDAABF)               */ 00451000
@RC00292 DS    0H                                                  0295 00452000
I04      DS    0H                                                  0296 00453000
*             CALL IDAABF;          /* EXIT TO IDAABF                */ 00454000
         L     @15,@CV00924                                        0296 00455000
         BALR  @14,@15                                             0296 00456000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00457000
         BALR @11,0                                                     00458000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00459000
         USING *,@11                                                    00460000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00461000
         L     @11,=A(@PSTART)                                          00462000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00463000
         USING @PSTART,@11                                              00464000
*           END I04;                /* GO ADD BUFFERS        @X04SVES*/ 00465000
*           RESPECIFY                                              0302 00466000
*             RPARM1 UNRSTD;        /*                       @X04SVES*/ 00467000
*           IF RPLREQ=RPLPOINT|     /* POINT REQUEST         @X04SVES*/ 00468000
*               RPLUPD=ON|          /* OR UPDATE             @X04SVES*/ 00469000
*               RPLNSP=ON THEN      /* OR NOTE POS.          @X04SVES*/ 00470000
         CLI   RPLREQ(RRPL),3                                      0303 00471000
         BE    @RT00303                                            0303 00472000
         TM    RPLUPD(RRPL),B'00000011'                            0303 00473000
         BZ    @RF00303                                            0303 00474000
@RT00303 DS    0H                                                  0304 00475000
*             PLHASKBF=ON;          /* SET ASK ON            @X04SVES*/ 00476000
         OI    PLHASKBF(RPLH),B'00100000'                          0304 00477000
*           PLHRAHD=ON;             /* SET READ AHEAD        @X04SVES*/ 00478000
@RF00303 OI    PLHRAHD(RPLH),B'01000000'                           0305 00479000
*           RWORK2=RPLDDDD;         /* RESET REG             @X04SVES*/ 00480000
         L     RWORK2,RPLDDDD(,RRPL)                               0306 00481000
*         END;                      /*                       @X04SVES*/ 00482000
*     END;                          /*                               */ 00483000
*   ELSE                            /* REQUEST BY RBA, NOT KEY       */ 00484000
*     DO;                           /*                               */ 00485000
         B     @RC00162                                            0309 00486000
@RF00162 DS    0H                                                  0310 00487000
*       RESPECIFY                                                  0310 00488000
*        (RWORK3,                                                  0310 00489000
*         RWORK4) UNRSTD;           /*                               */ 00490000
*       RFY                                                        0311 00491000
*         RPARM1 RSTD;              /* USE RPARM1                    */ 00492000
*       IF RPLREQ^=RPLPUT THEN      /* IF REQUEST IS NOT PUT         */ 00493000
         CLI   RPLREQ(RRPL),1                                      0312 00494000
         BE    @RF00312                                            0312 00495000
*         DO;                       /* CHECK FOR LAST RECORD       0313 00496000
*                                      POSITIONING           @X04SVES*/ 00497000
*           IF RPLLRD=ON THEN       /* IS IT REQUESTED@X04SVES       */ 00498000
         TM    RPLLRD(RRPL),B'00001000'                            0314 00499000
         BNO   @RF00314                                            0314 00500000
*             DO;                   /* YES                   @X04SVES*/ 00501000
*               IF RPLBWD=OFF THEN  /* IF FORWARD            @X04SVES*/ 00502000
         TM    RPLBWD(RRPL),B'00010000'                            0316 00503000
         BNZ   @RF00316                                            0316 00504000
*                 DO;               /* ERROR CASE            @X04SVES*/ 00505000
*                   RPLERREG='08'X; /* SET LOG ERROR         @X04SVES*/ 00506000
         MVI   RPLERREG(RRPL),X'08'                                0318 00507000
*                   RPLERRCD=RPLINVP;/* SET BAD PARM         @X04SVES*/ 00508000
         MVI   RPLERRCD(RRPL),X'68'                                0319 00509000
*                   CALL EXIT;      /* EXIT TO CALLER        @X04SVMR*/ 00510000
         BAL   @14,EXIT                                            0320 00511000
*                 END;              /*                       @X04SVES*/ 00512000
*               RWORK1=AMDPARDB;    /* POINT TO FIRST ARDB   @X04SVES*/ 00513000
@RF00316 L     @10,AMBDSB(,RAMB)                                   0322 00514000
         L     RWORK1,AMDPARDB(,@10)                               0322 00515000
*               DO WHILE RWORK1->ARDEOD=OFF;/* LOOP TO LOCATE THE  0323 00516000
*                                      ARDB HOLDING END OF DATA    0323 00517000
*                                                            @X04SVES*/ 00518000
         B     @DE00323                                            0323 00519000
@DL00323 DS    0H                                                  0324 00520000
*                 RWORK1=RWORK1->ARDNPTR;/* MOVE TO THE NEXT ARDB  0324 00521000
*                                                            @X04SVES*/ 00522000
         L     RWORK1,ARDNPTR(,RWORK1)                             0324 00523000
*               END;                /*                       @X04SVES*/ 00524000
@DE00323 TM    ARDEOD(RWORK1),B'00001000'                          0325 00525000
         BZ    @DL00323                                            0325 00526000
*               RPLDDDD=RWORK1->ARDHRBA-/* SET RBA TO LAST CI      0326 00527000
*                                                            @X04SVES*/ 00528000
*                   AMDCINV;        /*                       @X04SVES*/ 00529000
         L     @10,AMBDSB(,RAMB)                                   0326 00530000
         L     @07,ARDHRBA(,RWORK1)                                0326 00531000
         SL    @07,AMDCINV(,@10)                                   0326 00532000
         ST    @07,RPLDDDD(,RRPL)                                  0326 00533000
*             END;                  /*                       @X04SVES*/ 00534000
*           ELSE                    /* NO END OF D.S.        @X04SVES*/ 00535000
*             RPLDDDD=RBA;          /* ACCEPT USER RBA@X04SVES       */ 00536000
         B     @RC00314                                            0328 00537000
@RF00314 L     @10,RBA(,RPARM1)                                    0328 00538000
         ST    @10,RPLDDDD(,RRPL)                                  0328 00539000
*         END;                      /*                       @X04SVES*/ 00540000
@RC00314 DS    0H                                                  0330 00541000
*       IF RPLREQ=RPLPOINT&         /* IS IT POINT           @X04SVMR*/ 00542000
*           RPLSEQ=ON THEN          /* SEQ? IF SO,           @X04SVMR*/ 00543000
@RF00312 CLI   RPLREQ(RRPL),3                                      0330 00544000
         BNE   @RF00330                                            0330 00545000
         TM    RPLSEQ(RRPL),B'00100000'                            0330 00546000
         BNO   @RF00330                                            0330 00547000
*         DO;                       /* GET MORE BFRS.        @X04SVMR*/ 00548000
*           RPARM1=ZERO;            /* MAXIMUM REQ           @X04SVMR*/ 00549000
         SLR   RPARM1,RPARM1                                       0332 00550000
*I05:                                                              0333 00551000
*           DO;                     /* IDACALL(IDAABF)               */ 00552000
I05      DS    0H                                                  0334 00553000
*             CALL IDAABF;          /* EXIT TO IDAABF                */ 00554000
         L     @15,@CV00924                                        0334 00555000
         BALR  @14,@15                                             0334 00556000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00557000
         BALR @11,0                                                     00558000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00559000
         USING *,@11                                                    00560000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00561000
         L     @11,=A(@PSTART)                                          00562000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00563000
         USING @PSTART,@11                                              00564000
*           END I05;                /* ADD BUFFERS           @X04SVMR*/ 00565000
*         END;                      /* END POINT SEQ         @X04SVMR*/ 00566000
*       RFY                                                        0341 00567000
*         RPARM1 UNRSTD;            /* RELEASE RPARM1                */ 00568000
@RF00330 DS    0H                                                  0342 00569000
*       RWORK2=RPLDDDD-RPLDDDD//AMDCINV;/* CALCULATE RBA OF THE    0342 00570000
*                                      CONTROL INTERVAL WHICH      0342 00571000
*                                      CONTAINS THE RECORD           */ 00572000
         L     @12,RPLDDDD(,RRPL)                                  0342 00573000
         L     @10,AMBDSB(,RAMB)                                   0342 00574000
         LR    @07,@12                                             0342 00575000
         SLR   RWORK2,RWORK2                                       0342 00576000
         D     RWORK2,AMDCINV(,@10)                                0342 00577000
         SLR   @12,RWORK2                                          0342 00578000
         LR    RWORK2,@12                                          0342 00579000
*       RWORK1=AMDPARDB;            /* POINT TO 1ST ARDB             */ 00580000
         L     RWORK1,AMDPARDB(,@10)                               0343 00581000
*       DO;                         /* CHECK RBA FOR RANGE           */ 00582000
*DRLC0:                                                            0345 00583000
*         IF RWORK1->ARDERBA^=ZERO THEN/* IS SPACE ALLOCATED         */ 00584000
DRLC0    L     @12,ARDERBA(,RWORK1)                                0345 00585000
         LTR   @12,@12                                             0345 00586000
         BZ    @RF00345                                            0345 00587000
*           DO;                     /* YES, PROCEED                  */ 00588000
*             IF RWORK2^<RWORK1->ARDHRBA THEN/* RBA >|= HI USED RBA  */ 00589000
         CL    RWORK2,ARDHRBA(,RWORK1)                             0347 00590000
         BL    @RF00347                                            0347 00591000
*               DO;                 /* YES                           */ 00592000
*                 IF(RWORK2<RWORK1->ARDERBA)|/* RBA < HI ALLOC RBA OR*/ 00593000
*                     ((RWORK2^<RWORK1->ARDERBA)&/* RBA > HIGHEST RBA*/ 00594000
*                     (RWORK1->ARDEOD=ON)) THEN/* IN THE DATA SET    */ 00595000
         CLR   RWORK2,@12                                          0349 00596000
         BL    @RT00349                                            0349 00597000
         CLR   RWORK2,@12                                          0349 00598000
         BL    @RF00349                                            0349 00599000
         TM    ARDEOD(RWORK1),B'00001000'                          0349 00600000
         BNO   @RF00349                                            0349 00601000
@RT00349 DS    0H                                                  0350 00602000
*                   DO;             /* YES                           */ 00603000
*                     RPLERREG='08'X;/* SET LOGICAL ERROR            */ 00604000
         MVI   RPLERREG(RRPL),X'08'                                0351 00605000
*                     RPLERRCD=RPLINRBA;/* SET INVALID RBA           */ 00606000
         MVI   RPLERRCD(RRPL),X'20'                                0352 00607000
*                     CALL EXIT;    /* EXIT TO CALLER        @X04SVMR*/ 00608000
         BAL   @14,EXIT                                            0353 00609000
*                   END;            /*                               */ 00610000
*               END;                /*                               */ 00611000
@RF00349 DS    0H                                                  0356 00612000
*           END;                    /*                               */ 00613000
@RF00347 DS    0H                                                  0357 00614000
*         DO;                       /*                               */ 00615000
@RF00345 DS    0H                                                  0358 00616000
*           IF RWORK1->ARDNPTR=ZERO THEN/* ANOTHER ARDB FOLLOW       */ 00617000
         L     @12,ARDNPTR(,RWORK1)                                0358 00618000
         LTR   @12,@12                                             0358 00619000
         BZ    @RT00358                                            0358 00620000
*             GO TO DRLC;           /* NO, FINISHED HERE             */ 00621000
*           DO;                     /*                               */ 00622000
*             RWORK1=RWORK1->ARDNPTR;/* ADDRESS NEXT ARDB            */ 00623000
         LR    RWORK1,@12                                          0361 00624000
*             GO TO DRLC0;          /* BACK TO TEST NEXT ARDB        */ 00625000
         B     DRLC0                                               0362 00626000
*           END;                    /*                               */ 00627000
*         END;                      /*                               */ 00628000
*       END;                        /*                               */ 00629000
*     END;                          /*                               */ 00630000
*   RESPECIFY                                                      0367 00631000
*    (RWORK1) UNRSTD;               /*                               */ 00632000
@RC00162 DS    0H                                                  0368 00633000
*   RESPECIFY                                                      0368 00634000
*    (RPARM1) RSTD;                 /*                               */ 00635000
*DRLC:                                                             0369 00636000
*   IF RPLREQ=RPLPUT|RPLUPD=ON      /* IS THIS A PUT OR GET FOR    0369 00637000
*                                      UPDATE REQUEST                */ 00638000
*     THEN                          /*                               */ 00639000
DRLC     CLI   RPLREQ(RRPL),1                                      0369 00640000
         BE    @RT00369                                            0369 00641000
         TM    RPLUPD(RRPL),B'00000010'                            0369 00642000
         BNO   @RF00369                                            0369 00643000
@RT00369 DS    0H                                                  0370 00644000
*     DO;                           /* YES, SET PLH IN               */ 00645000
*       PLHRDEXC=ON;                /* EXCLUSIVE USE MODE FLAG       */ 00646000
         OI    PLHRDEXC(RPLH),B'00001000'                          0371 00647000
*     END;                          /*                               */ 00648000
*   ELSE                            /*                               */ 00649000
*     PLHRDEXC=OFF;                 /* ASSURE NO EXCLUSIVE USE       */ 00650000
         B     @RC00369                                            0373 00651000
@RF00369 NI    PLHRDEXC(RPLH),B'11110111'                          0373 00652000
*   RPARM1=RPLDDDD-RPLDDDD//AMDCINV;/* SET RPARM1 TO RBA             */ 00653000
@RC00369 L     @10,RPLDDDD(,RRPL)                                  0374 00654000
         L     @07,AMBDSB(,RAMB)                                   0374 00655000
         LR    @09,@10                                             0374 00656000
         SLR   @08,@08                                             0374 00657000
         D     @08,AMDCINV(,@07)                                   0374 00658000
         SLR   @10,@08                                             0374 00659000
         LR    RPARM1,@10                                          0374 00660000
*I06:                                                              0375 00661000
*   DO;                             /* IDACALL(IDAGRB)               */ 00662000
I06      DS    0H                                                  0376 00663000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 00664000
         L     @15,@CV00928                                        0376 00665000
         BALR  @14,@15                                             0376 00666000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00667000
         BALR @11,0                                                     00668000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00669000
         USING *,@11                                                    00670000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00671000
         L     @11,=A(@PSTART)                                          00672000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00673000
         USING @PSTART,@11                                              00674000
*   END I06;                        /* CALL ON BUFFER MGR TO         */ 00675000
*   RESPECIFY                                                      0382 00676000
*    (RWORK2) RSTD;                 /* READ THE RECORD               */ 00677000
*   PLHRAHD=OFF;                    /* RESET FLAG            @OZ04910*/ 00678000
         NI    PLHRAHD(RPLH),B'10111111'                           0383 00679000
*   IF RPLERREG^='00'X              /* WAS THERE AN ERROR            */ 00680000
*     THEN                          /*                               */ 00681000
         CLI   RPLERREG(RRPL),0                                    0384 00682000
         BE    @RF00384                                            0384 00683000
*     DO;                           /* YES, DROP PLH         @ZA07544*/ 00684000
*       PLHINVAL=ON;                /* MARK INVALID          @ZA07544*/ 00685000
         OI    PLHINVAL(RPLH),B'00000010'                          0386 00686000
*       CALL EXIT;                  /* EXIT TO CALLER        @X04SVMR*/ 00687000
         BAL   @14,EXIT                                            0387 00688000
*     END;                          /* END ERROR CODE        @ZA07544*/ 00689000
*   RESPECIFY                                                      0389 00690000
*    (RPARM1) UNRSTD;                                              0389 00691000
@RF00384 DS    0H                                                  0390 00692000
*DLRB:                                                             0390 00693000
*   PLHRECP=BUFCBAD;                /* INITIALIZE RECORD PTR.        */ 00694000
DLRB     L     @12,PLHDBUFC(,RPLH)                                 0390 00695000
         L     @10,BUFCBAD(,@12)                                   0390 00696000
         ST    @10,PLHRECP(,RPLH)                                  0390 00697000
*   PLHRDFP=BUFCBAD+AMDCINV-        /* INITIALIZE RDF PTR. TO        */ 00698000
*       LENGTH(IDACIDF);            /* BEGINNING OF CIDF             */ 00699000
*                                                                  0391 00700000
         L     @07,AMBDSB(,RAMB)                                   0391 00701000
         AL    @10,AMDCINV(,@07)                                   0391 00702000
         SL    @10,@CF00067                                        0391 00703000
         ST    @10,PLHRDFP(,RPLH)                                  0391 00704000
*   /*****************************************************************/ 00705000
*   /*                                                               */ 00706000
*   /* VALIDATE THE CIDF                                     @ZA31009*/ 00707000
*   /*                                                               */ 00708000
*   /*****************************************************************/ 00709000
*                                                                  0392 00710000
*   IF PLHRDFP->IDACIDF=ZERO THEN   /* IF CIDF IS ZERO THEN  @ZA31009*/ 00711000
         ICM   @07,15,IDACIDF(@10)                                 0392 00712000
         BNZ   @RF00392                                            0392 00713000
*     DO;                           /* TREAT AS IF AN I/0 ERROR    0393 00714000
*                                                            @ZA31009*/ 00715000
*       PLHINVAL=ON;                /* LOSE POSITION         @ZA31009*/ 00716000
         OI    PLHINVAL(RPLH),B'00000010'                          0394 00717000
*       RPLERREG='08';              /* SET LOGICAL ERROR     @ZA31009*/ 00718000
         L     @10,@CF00986                                        0395 00719000
         STC   @10,RPLERREG(,RRPL)                                 0395 00720000
*       RPLERRCD=RPLINCNV;          /* SET INVALID CI        @ZA31009*/ 00721000
         MVI   RPLERRCD(RRPL),X'9C'                                0396 00722000
*       RPLDDDD=BUFCDDDD;           /* PASS BACK CI IN ERROR @ZA31009*/ 00723000
         L     @12,BUFCDDDD(,@12)                                  0397 00724000
         ST    @12,RPLDDDD(,RRPL)                                  0397 00725000
*       CALL EXIT;                  /* EXIT MODULE           @ZA31009*/ 00726000
         BAL   @14,EXIT                                            0398 00727000
*     END;                          /* END OF ZERO CIDF CODE @ZA31009*/ 00728000
*   IF PLHRDFP->CIDFBUSY=ON THEN    /* IF CI SPLIT WAS INTERRUPTED 0400 00729000
*                                                            @ZA31009*/ 00730000
@RF00392 L     @12,PLHRDFP(,RPLH)                                  0400 00731000
         TM    CIDFBUSY(@12),B'10000000'                           0400 00732000
         BNO   @RF00400                                            0400 00733000
*     DO;                           /* TRY TO CORRECT PROBLEM      0401 00734000
*                                                            @ZA31009*/ 00735000
*I07:                                                              0402 00736000
*       DO;                         /* IDACALL(IDA019S6)             */ 00737000
I07      DS    0H                                                  0403 00738000
*         CALL IDA019S6;            /* EXIT TO IDA019S6              */ 00739000
         L     @15,@CV00931                                        0403 00740000
         BALR  @14,@15                                             0403 00741000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00742000
         BALR @11,0                                                     00743000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00744000
         USING *,@11                                                    00745000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00746000
         L     @11,=A(@PSTART)                                          00747000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00748000
         USING @PSTART,@11                                              00749000
*       END I07;                    /* CI REBUILD            @ZA31009*/ 00750000
*       IF RPLERREG^=ZERO THEN      /* IF UNCORRECTABLE      @ZA31009*/ 00751000
         CLI   RPLERREG(RRPL),0                                    0409 00752000
         BE    @RF00409                                            0409 00753000
*         DO;                       /* DONT CONTINUE         @ZA31009*/ 00754000
*           PLHINVAL=ON;            /* LOSE POSITION         @ZA31009*/ 00755000
         OI    PLHINVAL(RPLH),B'00000010'                          0411 00756000
*           CALL EXIT;              /* EXIT MODULE           @ZA31009*/ 00757000
         BAL   @14,EXIT                                            0412 00758000
*         END;                      /* END OF CORRECTABLE CI CODE  0413 00759000
*                                                            @ZA31009*/ 00760000
*       PLHRECP=BUFCBAD;            /* RESTORE RECORD POINTER      0414 00761000
*                                                            @ZA31009*/ 00762000
@RF00409 L     @12,PLHDBUFC(,RPLH)                                 0414 00763000
         L     @12,BUFCBAD(,@12)                                   0414 00764000
         ST    @12,PLHRECP(,RPLH)                                  0414 00765000
*       PLHRDFP=BUFCBAD+AMDCINV-    /* RESTORE RDF POINTER   @ZA31009*/ 00766000
*           LENGTH(IDACIDF);        /* TO START OF CIDF      @ZA31009*/ 00767000
         L     @10,AMBDSB(,RAMB)                                   0415 00768000
         AL    @12,AMDCINV(,@10)                                   0415 00769000
         SL    @12,@CF00067                                        0415 00770000
         ST    @12,PLHRDFP(,RPLH)                                  0415 00771000
*     END;                          /* END OF CIDF BUSY CODE @ZA31009*/ 00772000
*   PLHFSP=BUFCBAD+PLHRDFP->CIDFOSET;/* INIT FREE SPACE PTR          */ 00773000
@RF00400 L     @12,PLHDBUFC(,RPLH)                                 0417 00774000
         L     @10,PLHRDFP(,RPLH)                                  0417 00775000
         LH    @07,CIDFOSET(,@10)                                  0417 00776000
         AL    @07,BUFCBAD(,@12)                                   0417 00777000
         ST    @07,PLHFSP(,RPLH)                                   0417 00778000
*   PLHRDFC=ONE;                    /* FORCE ROUTINE TO MOVE BACK TO    00779000
*                                      FIRST RDF ON FIRST PASS     0418 00780000
*                                      THROUGH                       */ 00781000
         MVC   PLHRDFC(2,RPLH),@CH00053                            0418 00782000
*   PLHLRECL=ZERO;                  /* INITIALIZE TO ZERO            */ 00783000
         SLR   @05,@05                                             0419 00784000
         ST    @05,PLHLRECL(,RPLH)                                 0419 00785000
*   IF RPLKEY=OFF THEN              /* IS THIS A KEYED REQUEST       */ 00786000
         TM    RPLKEY(RRPL),B'10000000'                            0420 00787000
         BNZ   @RF00420                                            0420 00788000
*     DO;                           /*                               */ 00789000
*       PLHKEYMD=OFF;               /* NOT IN KEYED MODE     @ZA14831*/ 00790000
         NI    PLHKEYMD(RPLH),B'11011111'                          0422 00791000
*       IF RPLLRD=ON THEN           /* IS THIS SEARCH FOR LAST     0423 00792000
*                                                            @X04SVES*/ 00793000
         TM    RPLLRD(RRPL),B'00001000'                            0423 00794000
         BNO   @RF00423                                            0423 00795000
*         DO;                       /* YES                   @X04SVES*/ 00796000
*           RESPECIFY                                              0425 00797000
*             RPARM1 RSTD;          /*                       @X04SVES*/ 00798000
*           RPARM1=PLHFSP+PLHRDFP-> /* SET POINTER           @X04SVES*/ 00799000
*               CIDFLL;             /* TO RDF OF LAST RECORD IN THE     00800000
*                                      CI                    @X04SVES*/ 00801000
         LH    RPARM1,CIDFLL(,@10)                                 0426 00802000
         ALR   RPARM1,@07                                          0426 00803000
*           IF PLHRECP=PLHFSP THEN  /* IS CI EMPTY           @X04SVES*/ 00804000
         C     @07,PLHRECP(,RPLH)                                  0427 00805000
         BNE   @RF00427                                            0427 00806000
*             DO;                   /* YES                   @X04SVES*/ 00807000
*               PLHRAHD=ON;         /* SET RD. AHD.          @X04SVES*/ 00808000
         OI    PLHRAHD(RPLH),B'01000000'                           0429 00809000
*               RBUFC=PLHDBUFC;     /* SET RBUFC             @X04SVES*/ 00810000
         L     @10,PLHDBUFC(,RPLH)                                 0430 00811000
         LR    RBUFC,@10                                           0430 00812000
*I08:                                                              0431 00813000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00814000
I08      DS    0H                                                  0432 00815000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00816000
         L     @15,@CV00926                                        0432 00817000
         BALR  @14,@15                                             0432 00818000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00819000
         BALR @11,0                                                     00820000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00821000
         USING *,@11                                                    00822000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00823000
         L     @11,=A(@PSTART)                                          00824000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00825000
         USING @PSTART,@11                                              00826000
*               END I08;            /* FREE BUFFER           @X04SVLP*/ 00827000
*I09:                                                              0438 00828000
*               DO;                 /* IDACALL(IDAGNXT)              */ 00829000
I09      DS    0H                                                  0439 00830000
*                 CALL IDAGNXT;     /* EXIT TO IDAGNXT               */ 00831000
         L     @15,@CV00927                                        0439 00832000
         BALR  @14,@15                                             0439 00833000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00834000
         BALR @11,0                                                     00835000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00836000
         USING *,@11                                                    00837000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00838000
         L     @11,=A(@PSTART)                                          00839000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00840000
         USING @PSTART,@11                                              00841000
*               END I09;            /* GET THE NEXT RECORD IN      0444 00842000
*                                      BACKWARDS SEQUENCE    @X04SVES*/ 00843000
*               IF RPLERREG^=ZERO THEN/* ANY ERRORS          @X04SVES*/ 00844000
         CLI   RPLERREG(RRPL),0                                    0445 00845000
         BE    @RF00445                                            0445 00846000
*                 DO;               /* YES                   @X04SVES*/ 00847000
*                   RPLDDDD=RPARM1; /* PASS BACK RBA         @ZA07544*/ 00848000
         ST    RPARM1,RPLDDDD(,RRPL)                               0447 00849000
*                   PLHRAHD=OFF;    /* CANCEL RD AHD         @X04SVES*/ 00850000
         NI    PLHRAHD(RPLH),B'10111111'                           0448 00851000
*                   PLHINVAL=ON;    /* PLH INVALID           @X04SVES*/ 00852000
         OI    PLHINVAL(RPLH),B'00000010'                          0449 00853000
*                   CALL EXIT;      /* EXIT TO CALLER        @X04SVMR*/ 00854000
         BAL   @14,EXIT                                            0450 00855000
*                 END;              /*                       @X04SVES*/ 00856000
*               GO TO DLRB;         /* GO PROCESS THE RECORD @X04SVES*/ 00857000
         B     DLRB                                                0452 00858000
*             END;                  /*                       @X04SVES*/ 00859000
*           PLHRAHD=OFF;            /* CI IS NOT EMPTY@X04SVES       */ 00860000
@RF00427 NI    PLHRAHD(RPLH),B'10111111'                           0454 00861000
*           RESPECIFY                                              0455 00862000
*            (RPARM1) RSTD;         /*                       @X04SVES*/ 00863000
*           RPARM1=PLHFSP+PLHRDFP-> /* SET POINTER           @X04SVES*/ 00864000
*               CIDFLL;             /* TO RDF OF LAST RECORD IN THE     00865000
*                                      CI                    @X04SVES*/ 00866000
         L     @10,PLHRDFP(,RPLH)                                  0456 00867000
         LH    RPARM1,CIDFLL(,@10)                                 0456 00868000
         AL    RPARM1,PLHFSP(,RPLH)                                0456 00869000
*           IF RPARM1->RDFREPL=ON THEN/* IS THIS A COUNT RDF @X04SVES*/ 00870000
         TM    RDFREPL(RPARM1),B'00001000'                         0457 00871000
         BNO   @RF00457                                            0457 00872000
*             RPARM1=RPARM1+LENGTH(IDARDF);/* YES MOVE TO NEXT RDF 0458 00873000
*                                                            @X04SVES*/ 00874000
         AL    RPARM1,@CF00159                                     0458 00875000
*           RPLDDDD=BUFCDDDD+(PLHRDFP->/* SET RBA TO         @X04SVES*/ 00876000
*               CIDFOSET)-(RPARM1-> /* RBA OF LAST           @X04SVES*/ 00877000
*               RDFLL);             /* RECORD IN CI          @X04SVES*/ 00878000
@RF00457 L     @10,PLHDBUFC(,RPLH)                                 0459 00879000
         L     @07,PLHRDFP(,RPLH)                                  0459 00880000
         LH    @07,CIDFOSET(,@07)                                  0459 00881000
         AL    @07,BUFCDDDD(,@10)                                  0459 00882000
         SLR   @10,@10                                             0459 00883000
         ICM   @10,3,RDFLL(RPARM1)                                 0459 00884000
         SLR   @07,@10                                             0459 00885000
         ST    @07,RPLDDDD(,RRPL)                                  0459 00886000
*         END;                      /*                       @X04SVES*/ 00887000
*       IF RPLREQ=RPLPOINT&         /* IF POINT              @ZA11110*/ 00888000
*           RPLBWD=ON&              /* IF BACKWARD MODE      @ZA11110*/ 00889000
*           (BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF))->RDF1ST=ON 00890000
*         THEN                      /* IF 1ST OR IMMED       @ZA11110*/ 00891000
@RF00423 CLI   RPLREQ(RRPL),3                                      0461 00892000
         BNE   @RF00461                                            0461 00893000
         TM    RPLBWD(RRPL),B'00010000'                            0461 00894000
         BNO   @RF00461                                            0461 00895000
         L     @10,PLHDBUFC(,RPLH)                                 0461 00896000
         L     @07,AMBDSB(,RAMB)                                   0461 00897000
         L     @10,BUFCBAD(,@10)                                   0461 00898000
         AL    @10,AMDCINV(,@07)                                   0461 00899000
         AL    @10,@CF01036                                        0461 00900000
         TM    RDF1ST(@10),B'00010000'                             0461 00901000
         BNO   @RF00461                                            0461 00902000
*         DO;                       /* SEGMENT               @ZA11110*/ 00903000
*           RPLBWD=OFF;             /* READ FORWARD          @ZA11110*/ 00904000
         NI    RPLBWD(RRPL),B'11101111'                            0463 00905000
*           PLHRAHD=ON;             /* START READ AHEAD      @ZA11110*/ 00906000
         OI    PLHRAHD(RPLH),B'01000000'                           0464 00907000
*           PLHNRBA=RPLDDDD;        /* SET FOR READ AHEAD    @ZA11110*/ 00908000
         L     @10,RPLDDDD(,RRPL)                                  0465 00909000
         ST    @10,PLHNRBA(,RPLH)                                  0465 00910000
*           DO WHILE(BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF))->  00911000
*                 RDF1ST=ON;        /* GET LAST SEG          @ZA11110*/ 00912000
         B     @DE00466                                            0466 00913000
@DL00466 DS    0H                                                  0467 00914000
*             RBUFC=PLHDBUFC;       /* LOAD BUFFER ADDRESS   @ZA11110*/ 00915000
         L     RBUFC,PLHDBUFC(,RPLH)                               0467 00916000
*I10:                                                              0468 00917000
*             DO;                   /* IDACALL(IDAFREEB)             */ 00918000
I10      DS    0H                                                  0469 00919000
*               CALL IDAFREEB;      /* EXIT TO IDAFREEB              */ 00920000
         L     @15,@CV00926                                        0469 00921000
         BALR  @14,@15                                             0469 00922000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00923000
         BALR @11,0                                                     00924000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00925000
         USING *,@11                                                    00926000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00927000
         L     @11,=A(@PSTART)                                          00928000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00929000
         USING @PSTART,@11                                              00930000
*             END I10;              /* FREE BUFFER           @ZA11110*/ 00931000
*I11:                                                              0475 00932000
*             DO;                   /* IDACALL(IDAGNXT)              */ 00933000
I11      DS    0H                                                  0476 00934000
*               CALL IDAGNXT;       /* EXIT TO IDAGNXT               */ 00935000
         L     @15,@CV00927                                        0476 00936000
         BALR  @14,@15                                             0476 00937000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00938000
         BALR @11,0                                                     00939000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00940000
         USING *,@11                                                    00941000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00942000
         L     @11,=A(@PSTART)                                          00943000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00944000
         USING @PSTART,@11                                              00945000
*             END I11;              /* GET NEXT CI           @ZA11110*/ 00946000
*             IF RPLERREG^='00'X THEN/* ANY ERROR?           @ZA11110*/ 00947000
         CLI   RPLERREG(RRPL),0                                    0482 00948000
         BE    @RF00482                                            0482 00949000
*               DO;                 /*                       @ZA11110*/ 00950000
*                 PLHINVAL=ON;      /* MARK INVALID          @ZA11110*/ 00951000
         OI    PLHINVAL(RPLH),B'00000010'                          0484 00952000
*                 PLHRAHD=OFF;      /* RESET READ AHEAD      @ZA11110*/ 00953000
         NI    PLHRAHD(RPLH),B'10111111'                           0485 00954000
*                 RPLBWD=ON;        /* RESET BACKWARD        @ZA11110*/ 00955000
         OI    RPLBWD(RRPL),B'00010000'                            0486 00956000
*                 CALL EXIT;        /* EXIT MODULE           @ZA11110*/ 00957000
         BAL   @14,EXIT                                            0487 00958000
*               END;                /*                       @ZA11110*/ 00959000
*           END;                    /*                       @ZA11110*/ 00960000
@RF00482 DS    0H                                                  0489 00961000
@DE00466 L     @10,PLHDBUFC(,RPLH)                                 0489 00962000
         L     @07,BUFCBAD(,@10)                                   0489 00963000
         L     @05,AMBDSB(,RAMB)                                   0489 00964000
         LR    @15,@07                                             0489 00965000
         AL    @15,AMDCINV(,@05)                                   0489 00966000
         LR    @05,@15                                             0489 00967000
         AL    @05,@CF01036                                        0489 00968000
         TM    RDF1ST(@05),B'00010000'                             0489 00969000
         BO    @DL00466                                            0489 00970000
*           RPLDDDD=BUFCDDDD;       /* RESET RBA             @ZA11110*/ 00971000
         L     @10,BUFCDDDD(,@10)                                  0490 00972000
         ST    @10,RPLDDDD(,RRPL)                                  0490 00973000
*           PLHNRBA=RPLDDDD;        /* SET NEXT RBA          @ZA11110*/ 00974000
         ST    @10,PLHNRBA(,RPLH)                                  0491 00975000
*           PLHRAHD=OFF;            /* RESET READ AHEAD      @ZA11110*/ 00976000
         NI    PLHRAHD(RPLH),B'10111111'                           0492 00977000
*           RPLBWD=ON;              /* RESET BACKWARD        @ZA11110*/ 00978000
         OI    RPLBWD(RRPL),B'00010000'                            0493 00979000
*           PLHRECP=BUFCBAD;        /* INIT RECORD PTR       @ZA11110*/ 00980000
         ST    @07,PLHRECP(,RPLH)                                  0494 00981000
*           PLHRDFP=BUFCBAD+AMDCINV-/* INIT RDF PTR TO       @ZA11110*/ 00982000
*               LENGTH(IDACIDF);    /* BEGINNING OF CIDF     @ZA11110*/ 00983000
         SL    @15,@CF00067                                        0495 00984000
         ST    @15,PLHRDFP(,RPLH)                                  0495 00985000
*           PLHFSP=BUFCBAD+PLHRDFP->CIDFOSET;/* INIT         @ZA11110*/ 00986000
         AH    @07,CIDFOSET(,@15)                                  0496 00987000
         ST    @07,PLHFSP(,RPLH)                                   0496 00988000
*           PLHRDFC=ONE;            /* INIT                  @ZA11110*/ 00989000
         MVC   PLHRDFC(2,RPLH),@CH00053                            0497 00990000
*           PLHLRECL=ZERO;          /* ZERO RECORD LENGTH    @ZA11110*/ 00991000
         SLR   @10,@10                                             0498 00992000
         ST    @10,PLHLRECL(,RPLH)                                 0498 00993000
*           PLHFRCNT=PLHBFRNO-1;    /* RESET FREE COUNT      @ZA11110*/ 00994000
         SLR   @10,@10                                             0499 00995000
         IC    @10,PLHBFRNO(,RPLH)                                 0499 00996000
         BCTR  @10,0                                               0499 00997000
         STC   @10,PLHFRCNT(,RPLH)                                 0499 00998000
*         END;                      /*                       @ZA11110*/ 00999000
*       RESPECIFY                                                  0501 01000000
*        (RPARM1) UNRSTD;           /*                       @ZA11110*/ 01001000
@RF00461 DS    0H                                                  0502 01002000
*       DO WHILE PLHRECP<PLHFSP;    /* NO, ITS ADDRESSED             */ 01003000
         B     @DE00502                                            0502 01004000
@DL00502 DS    0H                                                  0503 01005000
*         PLHRDFC=PLHRDFC-ONE;      /* REDUCE REPL. CTR BY 1         */ 01006000
         LH    @12,PLHRDFC(,RPLH)                                  0503 01007000
         BCTR  @12,0                                               0503 01008000
         STH   @12,PLHRDFC(,RPLH)                                  0503 01009000
*         IF PLHRDFC=ZERO THEN      /* ARE THERE OTHER RECDS         */ 01010000
         LTR   @12,@12                                             0504 01011000
         BNZ   @RF00504                                            0504 01012000
*           DO;                     /* OF SAME LENGTH--NO            */ 01013000
*             RWORK2=PLHRDFP-LENGTH(IDARDF);/* MOVE PTR TO NEXT RDF  */ 01014000
         LA    @12,3                                               0506 01015000
         L     RWORK2,PLHRDFP(,RPLH)                               0506 01016000
         SLR   RWORK2,@12                                          0506 01017000
*             PLHLRECL=RWORK2->RDFLL;/* PICK UP RECORD SIZE          */ 01018000
         SLR   @10,@10                                             0507 01019000
         ICM   @10,3,RDFLL(RWORK2)                                 0507 01020000
         ST    @10,PLHLRECL(,RPLH)                                 0507 01021000
*             IF RWORK2->RDFCTNU=ON THEN/* IS THIS A REPLICATED      */ 01022000
         TM    RDFCTNU(RWORK2),B'01000000'                         0508 01023000
         BNO   @RF00508                                            0508 01024000
*               DO;                 /* RECORD--YES                   */ 01025000
*                 RWORK2=RWORK2-LENGTH(IDARDF);/* MOVE TO NEXT RDF   */ 01026000
         SLR   RWORK2,@12                                          0510 01027000
*                 PLHRDFC=RWORK2->RDFLL;/* AND EXTRACT COUNT         */ 01028000
         SLR   @12,@12                                             0511 01029000
         ICM   @12,3,RDFLL(RWORK2)                                 0511 01030000
         STH   @12,PLHRDFC(,RPLH)                                  0511 01031000
*                 PLHSAVE6=PLHRDFC; /* SAVE BEGINNING RDF COUNT    0512 01032000
*                                                            @X04SVES*/ 01033000
         ST    @12,PLHSAVE6(,RPLH)                                 0512 01034000
*               END;                /*                               */ 01035000
*             ELSE                  /*                               */ 01036000
*               DO;                 /* NOT A REPLICATED RECORD       */ 01037000
         B     @RC00508                                            0514 01038000
@RF00508 DS    0H                                                  0515 01039000
*                 PLHRDFC=ONE;      /* SO SET COUNT TO 1             */ 01040000
         LA    @12,1                                               0515 01041000
         STH   @12,PLHRDFC(,RPLH)                                  0515 01042000
*                 PLHSAVE6=ONE;     /* SAVE COUNT            @X04SVES*/ 01043000
         ST    @12,PLHSAVE6(,RPLH)                                 0516 01044000
*               END;                /*                               */ 01045000
*             PLHRDFP=RWORK2;       /* SAVE RDF PTR IN PLH           */ 01046000
@RC00508 ST    RWORK2,PLHRDFP(,RPLH)                               0518 01047000
*           END;                    /*                               */ 01048000
*         DO;                       /*                               */ 01049000
@RF00504 DS    0H                                                  0521 01050000
*           IF BUFCDDDD+(PLHRECP-BUFCBAD)/* DOES THE REQUESTED RBA   */ 01051000
*               =RPLDDDD THEN       /* MATCH THIS RECORD RBA         */ 01052000
         L     @12,PLHDBUFC(,RPLH)                                 0521 01053000
         L     @10,PLHRECP(,RPLH)                                  0521 01054000
         SL    @10,BUFCBAD(,@12)                                   0521 01055000
         AL    @10,BUFCDDDD(,@12)                                  0521 01056000
         CL    @10,RPLDDDD(,RRPL)                                  0521 01057000
         BNE   @RF00521                                            0521 01058000
*             DO;                   /* YES                           */ 01059000
*               IF RPLBWD=ON THEN   /* WAS REQUEST FOR BACKWARD    0523 01060000
*                                      DIRECTION             @X04SVES*/ 01061000
         TM    RPLBWD(RRPL),B'00010000'                            0523 01062000
         BNO   @RF00523                                            0523 01063000
*                 DO;               /*                       @X04SVES*/ 01064000
*                   PLHBWD=ON;      /* YES REMEMBER IT       @X04SVES*/ 01065000
         OI    PLHBWD(RPLH),B'00010000'                            0525 01066000
*                   PLHRDFC=PLHSAVE6-PLHRDFC+ONE;/* RESET COUNT FOR     01067000
*                                      BACKWARDS             @X04SVES*/ 01068000
         L     @12,PLHSAVE6(,RPLH)                                 0526 01069000
         SH    @12,PLHRDFC(,RPLH)                                  0526 01070000
         AL    @12,@CF00053                                        0526 01071000
         STH   @12,PLHRDFC(,RPLH)                                  0526 01072000
*                 END;              /*                       @X04SVES*/ 01073000
*               ELSE                /* NO, SHOW DIRECTION AS @X04SVES*/ 01074000
*                 PLHBWD=OFF;       /* FORWARD               @X04SVES*/ 01075000
         B     @RC00523                                            0528 01076000
@RF00523 NI    PLHBWD(RPLH),B'11101111'                            0528 01077000
*               PLHEFLGS=ZERO;      /* CLEAR PLH ERROR FLAGS         */ 01078000
@RC00523 SLR   @12,@12                                             0529 01079000
         STH   @12,PLHEFLGS(,RPLH)                                 0529 01080000
*               CALL EXIT;          /* EXIT TO CALLER        @X04SVMR*/ 01081000
         BAL   @14,EXIT                                            0530 01082000
*             END;                  /*                               */ 01083000
*         END;                      /*                               */ 01084000
@RF00521 DS    0H                                                  0533 01085000
*         PLHRECP=PLHRECP+PLHLRECL; /* POINT TO NEXT RECORD          */ 01086000
         L     @12,PLHRECP(,RPLH)                                  0533 01087000
         AL    @12,PLHLRECL(,RPLH)                                 0533 01088000
         ST    @12,PLHRECP(,RPLH)                                  0533 01089000
*       END;                        /*                               */ 01090000
@DE00502 CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0534 01091000
         BL    @DL00502                                            0534 01092000
*       DO;                         /* SINCE THE USER ASKED FOR AN 0535 01093000
*                                      RBA WHICH DOES NOT CORRESPOND    01094000
*                                      WITH A RECORD IN THIS DATA SET*/ 01095000
*         RPLERREG='08'X;           /* SET ERROR INFORMATION         */ 01096000
         MVI   RPLERREG(RRPL),X'08'                                0536 01097000
*         RPLERRCD=RPLINRBA;        /* IN RPL                        */ 01098000
         MVI   RPLERRCD(RRPL),X'20'                                0537 01099000
*         GO TO DRL8;               /* SUBTRACT EXCESS BUFFS         */ 01100000
         B     DRL8                                                0538 01101000
*       END;                        /*                               */ 01102000
*     END;                          /*                               */ 01103000
*   ELSE                            /*                               */ 01104000
*     DO;                           /* KEYED REQUEST                 */ 01105000
@RF00420 DS    0H                                                  0542 01106000
*       PLHKEYMD=ON;                /* IN KEYED MODE         @ZA14831*/ 01107000
         OI    PLHKEYMD(RPLH),B'00100000'                          0542 01108000
*       RESPECIFY                                                  0543 01109000
*        (RWORK1,                                                  0543 01110000
*         RWORK2,                                                  0543 01111000
*         RWORK5) RSTD;             /*                               */ 01112000
*       IF RPLGEN=ON&RPLBWD=OFF     /* IS REQUEST GENERIC    @X04SVES*/ 01113000
*           &RPLREQ^=RPLPUT         /* AND NOT PUT           @XM09961*/ 01114000
*         THEN                                                     0544 01115000
         TM    RPLGEN(RRPL),B'00000010'                            0544 01116000
         BNO   @RF00544                                            0544 01117000
         TM    RPLBWD(RRPL),B'00010000'                            0544 01118000
         BNZ   @RF00544                                            0544 01119000
         CLI   RPLREQ(RRPL),1                                      0544 01120000
         BE    @RF00544                                            0544 01121000
*         RWORK5=RPLKEYL;           /* YES--USE RPL KEY SIZE         */ 01122000
         LH    RWORK5,RPLKEYL(,RRPL)                               0545 01123000
*       ELSE                        /* NO--USE THE FULL KEY          */ 01124000
*         RWORK5=AMDKEYLN;          /* LENGTH FROM AMD               */ 01125000
         B     @RC00544                                            0546 01126000
@RF00544 L     @12,AMBDSB(,RAMB)                                   0546 01127000
         LH    RWORK5,AMDKEYLN(,@12)                               0546 01128000
*       DO WHILE PLHRECP<PLHFSP;    /* SET SEARCH LIMIT              */ 01129000
@RC00544 B     @DE00547                                            0547 01130000
@DL00547 DS    0H                                                  0548 01131000
*         PLHRDFC=PLHRDFC-ONE;      /* REDUCE REPL. CTR BY 1         */ 01132000
         LH    @12,PLHRDFC(,RPLH)                                  0548 01133000
         BCTR  @12,0                                               0548 01134000
         STH   @12,PLHRDFC(,RPLH)                                  0548 01135000
*         IF PLHRDFC=ZERO THEN      /* ARE THERE OTHER RECDS         */ 01136000
         LTR   @12,@12                                             0549 01137000
         BNZ   @RF00549                                            0549 01138000
*           DO;                     /* OF SAME LENGTH-NO             */ 01139000
*             RWORK2=PLHRDFP-LENGTH(IDARDF);/* MOVE TO NEXT RDF      */ 01140000
         LA    @12,3                                               0551 01141000
         L     RWORK2,PLHRDFP(,RPLH)                               0551 01142000
         SLR   RWORK2,@12                                          0551 01143000
*             PLHLRECL=RWORK2->RDFLL;/* PICK UP RECORD SIZE          */ 01144000
         SLR   @10,@10                                             0552 01145000
         ICM   @10,3,RDFLL(RWORK2)                                 0552 01146000
         ST    @10,PLHLRECL(,RPLH)                                 0552 01147000
*             IF RWORK2->RDFCTNU=ON THEN/* IS THIS A REPLICATED      */ 01148000
         TM    RDFCTNU(RWORK2),B'01000000'                         0553 01149000
         BNO   @RF00553                                            0553 01150000
*               DO;                 /* RECORD--YES                   */ 01151000
*                 RWORK2=RWORK2-LENGTH(IDARDF);/* MOVE TO NEXT RDF   */ 01152000
         SLR   RWORK2,@12                                          0555 01153000
*                 PLHRDFC=RWORK2->RDFLL;/* AND EXTRACT COUNT         */ 01154000
         SLR   @12,@12                                             0556 01155000
         ICM   @12,3,RDFLL(RWORK2)                                 0556 01156000
         STH   @12,PLHRDFC(,RPLH)                                  0556 01157000
*                 PLHSAVE6=PLHRDFC; /* SAVE BEGINNING RDF COUNT    0557 01158000
*                                                            @X04SVES*/ 01159000
         ST    @12,PLHSAVE6(,RPLH)                                 0557 01160000
*               END;                /*                               */ 01161000
*             ELSE                  /* IF NOT A REPLICATE RDF        */ 01162000
*               DO;                 /* THEN SET THE RECORD           */ 01163000
         B     @RC00553                                            0559 01164000
@RF00553 DS    0H                                                  0560 01165000
*                 PLHRDFC=ONE;      /* COUNT TO ONE.                 */ 01166000
         LA    @12,1                                               0560 01167000
         STH   @12,PLHRDFC(,RPLH)                                  0560 01168000
*                 PLHSAVE6=ONE;     /* SAVE COUNT            @X04SVES*/ 01169000
         ST    @12,PLHSAVE6(,RPLH)                                 0561 01170000
*               END;                /*                               */ 01171000
*             PLHRDFP=RWORK2;       /* SET RDF PTR. IN PLH           */ 01172000
@RC00553 ST    RWORK2,PLHRDFP(,RPLH)                               0563 01173000
*           END;                    /*                               */ 01174000
*         DO;                       /*                               */ 01175000
@RF00549 DS    0H                                                  0566 01176000
*           RWORK1=PLHRECP+AMDRKP;  /* POINT TO START OF KEY         */ 01177000
         L     @12,AMBDSB(,RAMB)                                   0566 01178000
         LH    RWORK1,AMDRKP(,@12)                                 0566 01179000
         AL    RWORK1,PLHRECP(,RPLH)                               0566 01180000
*           IF RWORK1->AMDATA(1:RWORK5)/* IS RECORDED KEY EQUAL      */ 01181000
*               ^<PLHKEY(1:RWORK5) THEN/* OR GREATER THAN THE        */ 01182000
         L     @12,PLHKEYPT(,RPLH)                                 0567 01183000
         LR    @10,RWORK5                                          0567 01184000
         BCTR  @10,0                                               0567 01185000
         EX    @10,@SC01038                                        0567 01186000
         BL    @RF00567                                            0567 01187000
*             DO;                   /* REQUESTED KEY--YES            */ 01188000
*               IF RWORK1->AMDATA(1:RWORK5)/* ARE THE KEYS EQUAL     */ 01189000
*                   =PLHKEY(1:RWORK5) THEN/*                         */ 01190000
         EX    @10,@SC01038                                        0569 01191000
         BNE   @RF00569                                            0569 01192000
*                 DO;               /* YES                           */ 01193000
*                   PLHRAE=ON;      /* SAVE EQUAL FOR RA     @ZA14811*/ 01194000
         OI    PLHRAE(RPLH),B'00000010'                            0571 01195000
*                   PLHEFLGS=ZERO;  /* ZERO ERROR FLG        @X04SVMR*/ 01196000
         SLR   @12,@12                                             0572 01197000
         STH   @12,PLHEFLGS(,RPLH)                                 0572 01198000
*                   IF RPLREQ=RPLPUT THEN/* IS THIS A PUT REQUEST    */ 01199000
         CLI   RPLREQ(RRPL),1                                      0573 01200000
         BNE   @RF00573                                            0573 01201000
*                     DO;           /* YES                           */ 01202000
*                       RPLERREG='08'X;/* SET LOGICAL ERROR          */ 01203000
         MVI   RPLERREG(RRPL),X'08'                                0575 01204000
*                       RPLERRCD=RPLDUP;/* SET DUPLICATE RECORD      */ 01205000
         MVI   RPLERRCD(RRPL),X'08'                                0576 01206000
*                       PLHNOADV=ON;/* SET NO ADVANCE        @X04SVMR*/ 01207000
         OI    PLHNOADV(RPLH),B'00001000'                          0577 01208000
*                       IF RPLDIR=ON THEN/* DIRECT REQUEST           */ 01209000
         TM    RPLDIR(RRPL),B'01000000'                            0578 01210000
         BO    @RT00578                                            0578 01211000
*                         GO TO DRL8;/* SUBTRACT EXCESS BUFFS        */ 01212000
*                     END;          /*                               */ 01213000
*                   IF RPLBWD=ON THEN/* WAS REQUEST FOR BACKWARD   0581 01214000
*                                      DIRECTION             @X04SVES*/ 01215000
@RF00573 TM    RPLBWD(RRPL),B'00010000'                            0581 01216000
         BNO   @RF00581                                            0581 01217000
*                     DO;           /*                       @X04SVES*/ 01218000
*                       PLHBWD=ON;  /* YES, REMEMBER IT      @X04SVES*/ 01219000
         OI    PLHBWD(RPLH),B'00010000'                            0583 01220000
*                       PLHRDFC=PLHSAVE6-PLHRDFC+ONE;/* RESET COUNT     01221000
*                                      FOR BACKWARDS         @X04SVES*/ 01222000
         L     @12,PLHSAVE6(,RPLH)                                 0584 01223000
         SH    @12,PLHRDFC(,RPLH)                                  0584 01224000
         AL    @12,@CF00053                                        0584 01225000
         STH   @12,PLHRDFC(,RPLH)                                  0584 01226000
*                     END;          /*                       @X04SVES*/ 01227000
*                   ELSE            /* NO, SHOW DIRECTION AS @X04SVES*/ 01228000
*                     PLHBWD=OFF;   /* FORWARD               @X04SVES*/ 01229000
         B     @RC00581                                            0586 01230000
@RF00581 NI    PLHBWD(RPLH),B'11101111'                            0586 01231000
*                   CALL EXIT;      /* EXIT TO CALLER        @X04SVMR*/ 01232000
@RC00581 BAL   @14,EXIT                                            0587 01233000
*                 END;              /*                               */ 01234000
*               IF RPLREQ=RPLPUT THEN/* IS THIS A PUT REQUEST        */ 01235000
@RF00569 CLI   RPLREQ(RRPL),1                                      0589 01236000
         BE    @RT00589                                            0589 01237000
*                 GO TO DRL6;       /* INSERT POINT FOUND            */ 01238000
*               IF(RPLKGE=OFF&RPLBWD=OFF)|/* REQUEST KGE             */ 01239000
*                   (RPLBWD=ON&PLHRABWD=OFF) THEN/*          @X04SVES*/ 01240000
         TM    RPLKGE(RRPL),B'00000100'                            0591 01241000
         BNZ   @GL00031                                            0591 01242000
         TM    RPLBWD(RRPL),B'00010000'                            0591 01243000
         BZ    @RT00591                                            0591 01244000
@GL00031 TM    RPLBWD(RRPL),B'00010000'                            0591 01245000
         BNO   @RF00591                                            0591 01246000
         TM    PLHRABWD(RPLH),B'00000100'                          0591 01247000
         BNZ   @RF00591                                            0591 01248000
@RT00591 DS    0H                                                  0592 01249000
*                 DO;               /* NO-                           */ 01250000
*                   IF PLHIBUFC->BUFCRRD=ON THEN/* DID A CONTR. INTV.*/ 01251000
         L     @12,PLHIBUFC(,RPLH)                                 0593 01252000
         TM    BUFCRRD(@12),B'00100000'                            0593 01253000
         BNO   @RF00593                                            0593 01254000
*                     DO;           /* SPLIT INDEX           @ZA09993*/ 01255000
*                       RAMB=AMBLIX;/* GET INDEX AMB         @ZA18995*/ 01256000
         L     @12,RPLDACB(,RRPL)                                  0595 01257000
         L     @12,ACBAMBL(,@12)                                   0595 01258000
         L     RAMB,AMBLIX(,@12)                                   0595 01259000
*                       IXSSTRBA=AMDHLRBA;/* SET RBA HIGH    @ZA09993   01260000
*                                      LEVEL INDEX           @ZA09993*/ 01261000
         L     @12,PLHISPLP(,RPLH)                                 0596 01262000
         L     @10,AMBDSB(,RAMB)                                   0596 01263000
         L     @08,AMDHLRBA(,@10)                                  0596 01264000
         ST    @08,IXSSTRBA(,@12)                                  0596 01265000
*                       RWORK1=AMDNIL;/* START SEARCH FROM   @ZA09993*/ 01266000
         LH    RWORK1,AMDNIL(,@10)                                 0597 01267000
*                       IXSILN=RWORK1;/* TOP OF INDEX        @ZA09993*/ 01268000
         STC   RWORK1,IXSILN(,@12)                                 0598 01269000
*                       RWORK1=ADDR(PLHKEY);/* ADDR KEY      @ZA09993*/ 01270000
         L     RWORK1,PLHKEYPT(,RPLH)                              0599 01271000
*                       GO TO DRLA; /* GO SEARCH INDEX       @ZA09993*/ 01272000
         B     DRLA                                                0600 01273000
*                     END;          /* END CI SPLIT          @ZA09993*/ 01274000
*                   ELSE                                           0602 01275000
*                     GO TO NOREC;  /* NO, SEARCH WAS        @OX10428   01276000
*                                      UNSUCCESSFUL          @OX10428*/ 01277000
*                 END;              /*                               */ 01278000
*DRL6:                                                             0604 01279000
*               DO;                 /* SPECIFIES GTE OR PUT          */ 01280000
@RF00591 DS    0H                                                  0604 01281000
DRL6     DS    0H                                                  0605 01282000
*                 IF RPLBWD=ON THEN /* WAS REQUEST FOR BACKWARD    0605 01283000
*                                      DIRECTION             @X04SVES*/ 01284000
         TM    RPLBWD(RRPL),B'00010000'                            0605 01285000
         BNO   @RF00605                                            0605 01286000
*                   DO;             /*                       @X04SVES*/ 01287000
*                     PLHBWD=ON;    /* YES, REMEMBER IT      @X04SVES*/ 01288000
         OI    PLHBWD(RPLH),B'00010000'                            0607 01289000
*                     PLHRDFC=PLHSAVE6-PLHRDFC+ONE;/* RESET COUNT FOR   01290000
*                                      BACKWARDS             @X04SVES*/ 01291000
         L     @12,PLHSAVE6(,RPLH)                                 0608 01292000
         SH    @12,PLHRDFC(,RPLH)                                  0608 01293000
         AL    @12,@CF00053                                        0608 01294000
         STH   @12,PLHRDFC(,RPLH)                                  0608 01295000
*                   END;            /*                       @X04SVES*/ 01296000
*                 ELSE              /* NO, SHOW DIRECTION AS @X04SVES*/ 01297000
*                   PLHBWD=OFF;     /* FORWARD               @X04SVES*/ 01298000
         B     @RC00605                                            0610 01299000
@RF00605 NI    PLHBWD(RPLH),B'11101111'                            0610 01300000
*                 PLHEFLGS=PLHEFLGS&CLEARERR;/* CLEAR        @ZA11110   01301000
*                                      ERROR EXCEPT PLHRSTRT @ZA11110*/ 01302000
@RC00605 NC    PLHEFLGS(2,RPLH),@CB00951                           0611 01303000
*                 CALL EXIT;        /* EXIT TO CALLER        @X04SVMR*/ 01304000
         BAL   @14,EXIT                                            0612 01305000
*               END;                /*                               */ 01306000
*             END;                  /*                               */ 01307000
*         END;                      /*                               */ 01308000
@RF00567 DS    0H                                                  0616 01309000
*         PLHRECP=PLHRECP+PLHLRECL; /* MOVE TO NEXT RECORD           */ 01310000
         L     @12,PLHRECP(,RPLH)                                  0616 01311000
         AL    @12,PLHLRECL(,RPLH)                                 0616 01312000
         ST    @12,PLHRECP(,RPLH)                                  0616 01313000
*       END;                        /*                               */ 01314000
@DE00547 CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0617 01315000
         BL    @DL00547                                            0617 01316000
*     END;                          /*                               */ 01317000
*                                   /* THE CONTROL INTERVAL HAS BEEN    01318000
*                                      SEARCHED AND NO RECORD KEY  0619 01319000
*                                      GREATER THAN OR EQUAL TO THE     01320000
*                                      PLH KEY HAS BEEN FOUND        */ 01321000
*   RESPECIFY                                                      0619 01322000
*    (RWORK3) RSTD;                 /*                               */ 01323000
*   RESPECIFY                                                      0620 01324000
*    (RWORK2,                                                      0620 01325000
*     RWORK5) UNRSTD;               /*                               */ 01326000
*   IF PLHIBUFC->BUFCRRD=ON THEN    /* HAS A CISPLIT         @OX10428*/ 01327000
         L     @12,PLHIBUFC(,RPLH)                                 0621 01328000
         TM    BUFCRRD(@12),B'00100000'                            0621 01329000
         BNO   @RF00621                                            0621 01330000
*     DO;                           /* ON INDEX OCCUR        @OX10428*/ 01331000
*       RWORK3=PLHISPLP;            /* SET ADDRESSABILITY            */ 01332000
         L     @12,PLHISPLP(,RPLH)                                 0623 01333000
         LR    RWORK3,@12                                          0623 01334000
*       RAMB=AMBLIX;                /* GET INDEX AMB         @ZA18995*/ 01335000
         L     @10,RPLDACB(,RRPL)                                  0624 01336000
         L     @10,ACBAMBL(,@10)                                   0624 01337000
         L     RAMB,AMBLIX(,@10)                                   0624 01338000
*       IXSSTRBA=AMDHLRBA;          /* SET RBA OF HIGH LEVEL INDEX IN   01339000
*                                      WORK AREA                     */ 01340000
         L     @10,AMBDSB(,RAMB)                                   0625 01341000
         L     @06,AMDHLRBA(,@10)                                  0625 01342000
         ST    @06,IXSSTRBA(,@12)                                  0625 01343000
*       RWORK1=AMDNIL;              /* SET INITIAL LEVEL OF          */ 01344000
         LH    RWORK1,AMDNIL(,@10)                                 0626 01345000
*       IXSILN=RWORK1;              /* SEARCH TO TOP OF INDEX        */ 01346000
         STC   RWORK1,IXSILN(,@12)                                 0627 01347000
*       RWORK1=ADDR(PLHKEY);        /* GET ADDRESS OF ARGUMENT       */ 01348000
         L     RWORK1,PLHKEYPT(,RPLH)                              0628 01349000
*       GO TO DRLA;                 /* GO SEARCH INDEX AGAIN         */ 01350000
         B     DRLA                                                0629 01351000
*     END;                          /* END CI SPLIT          @OX10428*/ 01352000
*   ELSE                            /* FOR INDEX             @OX10428*/ 01353000
*     DO;                           /*                               */ 01354000
@RF00621 DS    0H                                                  0632 01355000
*       RESPECIFY                                                  0632 01356000
*        (RWORK1,                                                  0632 01357000
*         RWORK3) UNRSTD;           /*                       @X04SVES*/ 01358000
*       IF PLHRABWD=ON THEN         /* CALL FROM RV          @X04SVES*/ 01359000
         TM    PLHRABWD(RPLH),B'00000100'                          0633 01360000
         BNO   @RF00633                                            0633 01361000
*         CALL EXIT;                /* EXIT TO CALLER        @X04SVMR*/ 01362000
         BAL   @14,EXIT                                            0634 01363000
*       IF RPLLRD=ON THEN           /* IS REQUEST FOR LAST RECORD  0635 01364000
*                                                            @X04SVES*/ 01365000
@RF00633 TM    RPLLRD(RRPL),B'00001000'                            0635 01366000
         BNO   @RF00635                                            0635 01367000
*         DO;                       /* YES (LRD = ON)        @OX10428*/ 01368000
*           DO WHILE PLHRECP=BUFCBAD;/* INSURE THAT THE CI CONTAINS     01369000
*                                      AT LEAST ONE RECORD   @X04SVES*/ 01370000
         B     @DE00637                                            0637 01371000
@DL00637 DS    0H                                                  0638 01372000
*             PLHRAHD=ON;           /* SET READ AHEAD        @X04SVES*/ 01373000
         OI    PLHRAHD(RPLH),B'01000000'                           0638 01374000
*             RBUFC=PLHDBUFC;       /* SET RBUFC             @X04SVES*/ 01375000
         L     RBUFC,PLHDBUFC(,RPLH)                               0639 01376000
*I12:                                                              0640 01377000
*             DO;                   /* IDACALL(IDAFREEB)             */ 01378000
I12      DS    0H                                                  0641 01379000
*               CALL IDAFREEB;      /* EXIT TO IDAFREEB              */ 01380000
         L     @15,@CV00926                                        0641 01381000
         BALR  @14,@15                                             0641 01382000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01383000
         BALR @11,0                                                     01384000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01385000
         USING *,@11                                                    01386000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01387000
         L     @11,=A(@PSTART)                                          01388000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01389000
         USING @PSTART,@11                                              01390000
*             END I12;              /* FREE BUFFER           @X04SVLP*/ 01391000
*I13:                                                              0647 01392000
*             DO;                   /* IDACALL(IDAGNXT)              */ 01393000
I13      DS    0H                                                  0648 01394000
*               CALL IDAGNXT;       /* EXIT TO IDAGNXT               */ 01395000
         L     @15,@CV00927                                        0648 01396000
         BALR  @14,@15                                             0648 01397000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01398000
         BALR @11,0                                                     01399000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01400000
         USING *,@11                                                    01401000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01402000
         L     @11,=A(@PSTART)                                          01403000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01404000
         USING @PSTART,@11                                              01405000
*             END I13;              /* READ RECORD           @X04SVES*/ 01406000
*             RFY                                                  0654 01407000
*               RPARM1 RSTD;        /*                       @ZA07544*/ 01408000
*             IF RPLERREG^=ZERO THEN/* ERROR                 @X04SVES*/ 01409000
         CLI   RPLERREG(RRPL),0                                    0655 01410000
         BE    @RF00655                                            0655 01411000
*               DO;                 /* YES                   @X04SVES*/ 01412000
*                 IF RPLERREG='08'X&/* WAS END OF DATA@X04SVES       */ 01413000
*                     RPLERRCD=RPLEODER THEN/* DETECTED      @X04SVES*/ 01414000
         CLI   RPLERREG(RRPL),8                                    0657 01415000
         BNE   @RF00657                                            0657 01416000
         CLI   RPLERRCD(RRPL),4                                    0657 01417000
         BNE   @RF00657                                            0657 01418000
*                   RPLERRCD=RPLNOREC;/* YES, CHANGE CODE TO NO    0658 01419000
*                                      RECORD FOUND          @X04SVES*/ 01420000
         MVI   RPLERRCD(RRPL),X'10'                                0658 01421000
*                 RPLDDDD=RPARM1;   /* PASS BACK RBA         @ZA07544*/ 01422000
@RF00657 ST    RPARM1,RPLDDDD(,RRPL)                               0659 01423000
*                 RFY                                              0660 01424000
*                   RPARM1 UNRSTD;  /*                       @ZA07544*/ 01425000
*                 PLHRAHD=OFF;      /* CANCEL RD AHD         @X04SVES*/ 01426000
         NI    PLHRAHD(RPLH),B'10111111'                           0661 01427000
*                 PLHINVAL=ON;      /* PLH INVALID           @X04SVES*/ 01428000
         OI    PLHINVAL(RPLH),B'00000010'                          0662 01429000
*                 CALL EXIT;        /* EXIT TO CALLER        @X04SVMR*/ 01430000
         BAL   @14,EXIT                                            0663 01431000
*               END;                /*                       @X04SVES*/ 01432000
*             PLHRAHD=OFF;          /* CANCEL RD. AHD.       @X04SVES*/ 01433000
@RF00655 NI    PLHRAHD(RPLH),B'10111111'                           0665 01434000
*             PLHRDFP=BUFCBAD+AMDCINV/* POINT TO CIDF        @X04SVES*/ 01435000
*                 -LENGTH(IDACIDF); /*                       @X04SVES*/ 01436000
*                                                                  0666 01437000
         L     @12,PLHDBUFC(,RPLH)                                 0666 01438000
         L     @10,AMBDSB(,RAMB)                                   0666 01439000
         L     @12,BUFCBAD(,@12)                                   0666 01440000
         AL    @12,AMDCINV(,@10)                                   0666 01441000
         SL    @12,@CF00067                                        0666 01442000
         ST    @12,PLHRDFP(,RPLH)                                  0666 01443000
*             /*******************************************************/ 01444000
*             /*                                                     */ 01445000
*             /* VALIDATE THE CIDF                           @ZA31009*/ 01446000
*             /*                                                     */ 01447000
*             /*******************************************************/ 01448000
*                                                                  0667 01449000
*             IF PLHRDFP->CIDFBUSY=ON THEN/* IF CI SPLIT WAS       0667 01450000
*                                      INTERRUPTED           @ZA31009*/ 01451000
         TM    CIDFBUSY(@12),B'10000000'                           0667 01452000
         BNO   @RF00667                                            0667 01453000
*               DO;                 /* TRY TO CORRECT THE PROBLEM  0668 01454000
*                                                            @ZA31009*/ 01455000
*I14:                                                              0669 01456000
*                 DO;               /* IDACALL(IDA019S6)             */ 01457000
I14      DS    0H                                                  0670 01458000
*                   CALL IDA019S6;  /* EXIT TO IDA019S6              */ 01459000
         L     @15,@CV00931                                        0670 01460000
         BALR  @14,@15                                             0670 01461000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01462000
         BALR @11,0                                                     01463000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01464000
         USING *,@11                                                    01465000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01466000
         L     @11,=A(@PSTART)                                          01467000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01468000
         USING @PSTART,@11                                              01469000
*                 END I14;          /* CI REBUILD            @ZA31009*/ 01470000
*                 IF RPLERREG^=ZERO THEN/* IF UNCORRECTABLE  @ZA31009*/ 01471000
         CLI   RPLERREG(RRPL),0                                    0676 01472000
         BE    @RF00676                                            0676 01473000
*                   DO;             /* DONT CONTINUE         @ZA31009*/ 01474000
*                     PLHINVAL=ON;  /* LOSE POSITION         @ZA31009*/ 01475000
         OI    PLHINVAL(RPLH),B'00000010'                          0678 01476000
*                     CALL EXIT;    /* EXIT MODULE           @ZA31009*/ 01477000
         BAL   @14,EXIT                                            0679 01478000
*                   END;            /* END OF UNCORRECTABLE CI CODE     01479000
*                                                            @ZA31009*/ 01480000
*                 PLHRDFP=BUFCBAD+AMDCINV-/* POINT TO CIDF   @ZA31009*/ 01481000
*                     LENGTH(IDACIDF);/*                     @ZA31009*/ 01482000
@RF00676 L     @12,PLHDBUFC(,RPLH)                                 0681 01483000
         L     @10,AMBDSB(,RAMB)                                   0681 01484000
         L     @12,BUFCBAD(,@12)                                   0681 01485000
         AL    @12,AMDCINV(,@10)                                   0681 01486000
         SL    @12,@CF00067                                        0681 01487000
         ST    @12,PLHRDFP(,RPLH)                                  0681 01488000
*               END;                /* END CIDF BUSY         @ZA31009*/ 01489000
*             IF PLHRDFP->CIDFOSET=ZERO THEN/* IF CI CONTAINS NO   0683 01490000
*                                      RECORDS THEN          @X04SVES*/ 01491000
@RF00667 SLR   @12,@12                                             0683 01492000
         L     @10,PLHRDFP(,RPLH)                                  0683 01493000
         CH    @12,CIDFOSET(,@10)                                  0683 01494000
         BNE   @RF00683                                            0683 01495000
*               DO;                 /* THE CI COULD BE INCORRECT   0684 01496000
*                                                            @ZA31009*/ 01497000
*                 IF PLHRDFP->IDACIDF=ZERO THEN/* IF CIDF IS ZERO  0685 01498000
*                                      THEN                  @ZA31009*/ 01499000
         ICM   @05,15,IDACIDF(@10)                                 0685 01500000
         CLR   @12,@05                                             0685 01501000
         BNE   @RF00685                                            0685 01502000
*                   DO;             /* TREAT AS IF AN I/0 ERROR    0686 01503000
*                                                            @ZA31009*/ 01504000
*                     PLHINVAL=ON;  /* LOSE POSITION         @ZA31009*/ 01505000
         OI    PLHINVAL(RPLH),B'00000010'                          0687 01506000
*                     RPLERREG='08';/* SET LOGICAL ERROR     @ZA31009*/ 01507000
         L     @12,@CF00986                                        0688 01508000
         STC   @12,RPLERREG(,RRPL)                                 0688 01509000
*                     RPLERRCD=RPLINCNV;/* SET INVALID CI    @ZA31009*/ 01510000
         MVI   RPLERRCD(RRPL),X'9C'                                0689 01511000
*                     RPLDDDD=BUFCDDDD;/* PASS BACK CI IN ERROR    0690 01512000
*                                                            @ZA31009*/ 01513000
         L     @12,PLHDBUFC(,RPLH)                                 0690 01514000
         L     @12,BUFCDDDD(,@12)                                  0690 01515000
         ST    @12,RPLDDDD(,RRPL)                                  0690 01516000
*                     CALL EXIT;    /* EXIT MODULE           @ZA31009*/ 01517000
         BAL   @14,EXIT                                            0691 01518000
*                   END;            /* END OF ZERO CIDF CODE @ZA31009*/ 01519000
*                 PLHRECP=BUFCBAD;  /* POINT TO BEGINNING OF BUFFER     01520000
*                                                            @X04SVES*/ 01521000
@RF00685 L     @12,PLHDBUFC(,RPLH)                                 0693 01522000
         L     @12,BUFCBAD(,@12)                                   0693 01523000
         ST    @12,PLHRECP(,RPLH)                                  0693 01524000
*               END;                /* END OF FREE SPACE OFFSET    0694 01525000
*                                                            @ZA31009*/ 01526000
*             ELSE                  /*                       @X04SVES*/ 01527000
*               PLHRECP=BUFCBAD+ONE;/* OTHERWISE ASSURE A FALL OUT OF   01528000
*                                      THE LOOP@X04SVES              */ 01529000
         B     @RC00683                                            0695 01530000
@RF00683 L     @12,PLHDBUFC(,RPLH)                                 0695 01531000
         LA    @10,1                                               0695 01532000
         AL    @10,BUFCBAD(,@12)                                   0695 01533000
         ST    @10,PLHRECP(,RPLH)                                  0695 01534000
*           END;                    /*                       @X04SVES*/ 01535000
@RC00683 DS    0H                                                  0696 01536000
@DE00637 L     @12,PLHDBUFC(,RPLH)                                 0696 01537000
         L     @12,BUFCBAD(,@12)                                   0696 01538000
         C     @12,PLHRECP(,RPLH)                                  0696 01539000
         BE    @DL00637                                            0696 01540000
*           PLHRDFP=BUFCBAD+AMDCINV-/* POINT TO              @X04SVES*/ 01541000
*               LENGTH(IDACIDF);    /* CIDF                  @X04SVES*/ 01542000
         L     @10,AMBDSB(,RAMB)                                   0697 01543000
         LR    @05,@12                                             0697 01544000
         AL    @05,AMDCINV(,@10)                                   0697 01545000
         SL    @05,@CF00067                                        0697 01546000
         ST    @05,PLHRDFP(,RPLH)                                  0697 01547000
*           PLHFSP=BUFCBAD+PLHRDFP->/* SET FREE SPACE        @X04SVES*/ 01548000
*               CIDFOSET;           /* POINTER IN PLH        @X04SVES*/ 01549000
         AH    @12,CIDFOSET(,@05)                                  0698 01550000
         ST    @12,PLHFSP(,RPLH)                                   0698 01551000
*           PLHRDFP=PLHFSP+PLHRDFP->/* SET RDF               @X04SVES*/ 01552000
*               CIDFLL;             /* POINTER IN PLH        @X04SVES*/ 01553000
         AH    @12,CIDFLL(,@05)                                    0699 01554000
         ST    @12,PLHRDFP(,RPLH)                                  0699 01555000
*           IF PLHRDFP->RDFREPL=ON THEN/* COUNT RDF          @X04SVES*/ 01556000
         TM    RDFREPL(@12),B'00001000'                            0700 01557000
         BNO   @RF00700                                            0700 01558000
*             DO;                   /* YES                   @X04SVES*/ 01559000
*               RESPECIFY                                          0702 01560000
*                (RPARM1) RSTD;     /*                       @X04SVES*/ 01561000
*               PLHRDFC=PLHRDFP->RDFLL;/* SET RECORD COUNT IN PLH  0703 01562000
*                                      FROM RDF              @X04SVES*/ 01563000
         L     @10,PLHRDFP(,RPLH)                                  0703 01564000
         MVC   PLHRDFC(2,RPLH),RDFLL(@10)                          0703 01565000
*               RPARM1=PLHRDFP+     /* POINT TO RDF          @X04SVES*/ 01566000
*                   LENGTH(IDARDF); /* CONTAINING LL         @X04SVES*/ 01567000
         AL    @10,@CF00159                                        0704 01568000
         LR    RPARM1,@10                                          0704 01569000
*               PLHLRECL=RPARM1->RDFLL;/* SET LL IN PLH      @X04SVES*/ 01570000
         SLR   @10,@10                                             0705 01571000
         ICM   @10,3,RDFLL(RPARM1)                                 0705 01572000
         ST    @10,PLHLRECL(,RPLH)                                 0705 01573000
*               RESPECIFY                                          0706 01574000
*                (RPARM1) UNRSTD;   /*                       @X04SVES*/ 01575000
*             END;                  /*                       @X04SVES*/ 01576000
*           ELSE                    /* NOT COUNT RDF         @X04SVES*/ 01577000
*             DO;                   /*                       @X04SVES*/ 01578000
         B     @RC00700                                            0708 01579000
@RF00700 DS    0H                                                  0709 01580000
*               PLHRDFC=ONE;        /* SET COUNT TO 1        @X04SVES*/ 01581000
         MVC   PLHRDFC(2,RPLH),@CH00053                            0709 01582000
*               PLHLRECL=PLHRDFP->RDFLL;/* SET LL IN PLH     @X04SVES*/ 01583000
         L     @12,PLHRDFP(,RPLH)                                  0710 01584000
         SLR   @10,@10                                             0710 01585000
         ICM   @10,3,RDFLL(@12)                                    0710 01586000
         ST    @10,PLHLRECL(,RPLH)                                 0710 01587000
*             END;                  /*                       @X04SVES*/ 01588000
*           PLHRECP=PLHFSP-PLHLRECL;/* SET RECORD POINTER IN PLH   0712 01589000
*                                                            @X04SVES*/ 01590000
@RC00700 L     @12,PLHFSP(,RPLH)                                   0712 01591000
         SL    @12,PLHLRECL(,RPLH)                                 0712 01592000
         ST    @12,PLHRECP(,RPLH)                                  0712 01593000
*           PLHBWD=ON;              /* REMEMBER DIRECTION REQUESTED     01594000
*                                                            @X04SVES*/ 01595000
         OI    PLHBWD(RPLH),B'00010000'                            0713 01596000
*           PLHEFLGS=ZERO;          /* CLR ERROR FLGS        @X04SVES*/ 01597000
         SLR   @10,@10                                             0714 01598000
         STH   @10,PLHEFLGS(,RPLH)                                 0714 01599000
*           RFY                                                    0715 01600000
*            (RWORK2,                                              0715 01601000
*             RWORK3,                                              0715 01602000
*             RWORK4,                                              0715 01603000
*             RWORK5) RSTD;         /*                       @X04SVES*/ 01604000
*           RWORK2=ADDR(PLHKEY);    /* SET 'TO' ADD          @X04SVES*/ 01605000
         L     RWORK2,PLHKEYPT(,RPLH)                              0716 01606000
*           RWORK3=AMDKEYLN;        /* SET MOVE LENGTH@X04SVES       */ 01607000
         L     @10,AMBDSB(,RAMB)                                   0717 01608000
         LH    RWORK3,AMDKEYLN(,@10)                               0717 01609000
*           RWORK4=PLHRECP+AMDRKP;  /* SET 'FROM' ADD        @X04SVES*/ 01610000
         AH    @12,AMDRKP(,@10)                                    0718 01611000
         LR    RWORK4,@12                                          0718 01612000
*           RWORK5=RWORK3;          /* LENGTH                @X04SVES*/ 01613000
         LR    RWORK5,RWORK3                                       0719 01614000
*           GEN(MVCL  RWORK2,RWORK4);/* SAVE KEY IN PLH@X04SVES      */ 01615000
         MVCL  RWORK2,RWORK4                                            01616000
*           RFY                                                    0721 01617000
*            (RWORK2,                                              0721 01618000
*             RWORK3,                                              0721 01619000
*             RWORK4,                                              0721 01620000
*             RWORK5) UNRSTD;       /*                       @X04SVES*/ 01621000
*           CALL EXIT;              /* EXIT TO CALLER        @X04SVMR*/ 01622000
         BAL   @14,EXIT                                            0722 01623000
*         END;                      /* END LRD = ON          @OX10428*/ 01624000
*       IF(RPLREQ=RPLGET&           /* IF A GET WITH         @OX10428*/ 01625000
*           (RPLGEN=ON|             /* GEN KEY OR            @OX10428*/ 01626000
*           RPLKGE=ON)&             /* KGE AND               @OX10428*/ 01627000
*           RPLBWD=OFF)|            /* NOT BWD               @OX10428*/ 01628000
*           (RPLREQ=RPLPOINT&       /* IF A POINT REQ        @OX10428*/ 01629000
*           (RPLGEN=ON|             /* WITH GEN OR           @OX10428*/ 01630000
*           RPLKGE=ON)&             /* KGE AND               @OX10428*/ 01631000
*           RPLBWD=OFF)             /* NOT BWD               @OX10428*/ 01632000
*         THEN                      /* YES DO                @OX10428*/ 01633000
@RF00635 CLI   RPLREQ(RRPL),0                                      0724 01634000
         BNE   @GL00035                                            0724 01635000
         TM    RPLGEN(RRPL),B'00000110'                            0724 01636000
         BZ    @GL00035                                            0724 01637000
         TM    RPLBWD(RRPL),B'00010000'                            0724 01638000
         BZ    @RT00724                                            0724 01639000
@GL00035 CLI   RPLREQ(RRPL),3                                      0724 01640000
         BNE   @RF00724                                            0724 01641000
         TM    RPLGEN(RRPL),B'00000110'                            0724 01642000
         BZ    @RF00724                                            0724 01643000
         TM    RPLBWD(RRPL),B'00010000'                            0724 01644000
         BNZ   @RF00724                                            0724 01645000
@RT00724 DS    0H                                                  0725 01646000
*READMORE:                                                         0725 01647000
*         DO;                       /* SRCH FORWARD          @ZA07544*/ 01648000
READMORE DS    0H                                                  0726 01649000
*           RBUFC=PLHDBUFC;         /* TO NXT RECD           @OX10428*/ 01650000
         L     RBUFC,PLHDBUFC(,RPLH)                               0726 01651000
*           PLHRAHD=ON;             /* DO READ AHEAD         @ZA11054*/ 01652000
         OI    PLHRAHD(RPLH),B'01000000'                           0727 01653000
*I15:                                                              0728 01654000
*           DO;                     /* IDACALL(IDAFREEB)             */ 01655000
I15      DS    0H                                                  0729 01656000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 01657000
         L     @15,@CV00926                                        0729 01658000
         BALR  @14,@15                                             0729 01659000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01660000
         BALR @11,0                                                     01661000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01662000
         USING *,@11                                                    01663000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01664000
         L     @11,=A(@PSTART)                                          01665000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01666000
         USING @PSTART,@11                                              01667000
*           END I15;                /* FREE BUFFER           @OX10428*/ 01668000
*I16:                                                              0735 01669000
*           DO;                     /* IDACALL(IDAGNXT)              */ 01670000
I16      DS    0H                                                  0736 01671000
*             CALL IDAGNXT;         /* EXIT TO IDAGNXT               */ 01672000
         L     @15,@CV00927                                        0736 01673000
         BALR  @14,@15                                             0736 01674000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01675000
         BALR @11,0                                                     01676000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01677000
         USING *,@11                                                    01678000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01679000
         L     @11,=A(@PSTART)                                          01680000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01681000
         USING @PSTART,@11                                              01682000
*           END I16;                /* GET RBA NEXT          @ZA09985*/ 01683000
*           RFY                                                    0742 01684000
*             RPARM1 RSTD;          /*                       @ZA07544*/ 01685000
*           PLHRAHD=OFF;            /* END READ AHEAD        @ZA11054*/ 01686000
         NI    PLHRAHD(RPLH),B'10111111'                           0743 01687000
*           IF RPLERREG^=0 THEN     /* IF ANY ERROR          @ZA09985*/ 01688000
         CLI   RPLERREG(RRPL),0                                    0744 01689000
         BE    @RF00744                                            0744 01690000
*             DO;                   /* ACTION REQD           @ZA07544*/ 01691000
*               IF RPLERREG='08'X&  /* DID GETNEXT           @ZA07544*/ 01692000
*                   RPLERRCD=RPLEODER THEN/* HIT EOD         @ZA07544*/ 01693000
         CLI   RPLERREG(RRPL),8                                    0746 01694000
         BNE   @RF00746                                            0746 01695000
         CLI   RPLERRCD(RRPL),4                                    0746 01696000
         BNE   @RF00746                                            0746 01697000
*                 DO;               /* YES THEN              @ZA11054*/ 01698000
*                   IF RPLKGE=ON&   /* IF KGE AND            @OX10428*/ 01699000
*                       (RPLREQ=RPLPOINT|/* POINT OR         @OX10428*/ 01700000
*                       (RPLREQ=RPLGET&/* GET AND            @ZA11054*/ 01701000
*                       RPLSKP=ON)) THEN/* SKP               @ZA11054*/ 01702000
         TM    RPLKGE(RRPL),B'00000100'                            0748 01703000
         BNO   @RF00748                                            0748 01704000
         CLI   RPLREQ(RRPL),3                                      0748 01705000
         BE    @RT00748                                            0748 01706000
         CLI   RPLREQ(RRPL),0                                      0748 01707000
         BNE   @RF00748                                            0748 01708000
         TM    RPLSKP(RRPL),B'00010000'                            0748 01709000
         BO    @RT00748                                            0748 01710000
*                     GO TO DRL6;   /* EXT W/O SBUF          @OX10428*/ 01711000
*                   ELSE            /* NONE ABOVE            @ZA11054*/ 01712000
*                     DO;           /* SET NRF               @ZA11054*/ 01713000
@RF00748 DS    0H                                                  0751 01714000
*NOREC:                                                            0751 01715000
*                       RPLERREG='08'X;/* SET LOGIC IND      @OX10428*/ 01716000
NOREC    MVI   RPLERREG(RRPL),X'08'                                0751 01717000
*                       RPLERRCD=RPLNOREC;/* SHOW NRF        @OX10428*/ 01718000
         MVI   RPLERRCD(RRPL),X'10'                                0752 01719000
*DRL8:                                                             0753 01720000
*                       RBUFC=ZERO; /* IND SUB ALL           @OX10428*/ 01721000
DRL8     SLR   RBUFC,RBUFC                                         0753 01722000
*I17:                                                              0754 01723000
*                       DO;         /* IDACALL(IDASBF)               */ 01724000
I17      DS    0H                                                  0755 01725000
*                         CALL IDASBF;/* EXIT TO IDASBF              */ 01726000
         L     @15,@CV00929                                        0755 01727000
         BALR  @14,@15                                             0755 01728000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 01729000
         BALR @11,0                                                     01730000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 01731000
         USING *,@11                                                    01732000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 01733000
         L     @11,=A(@PSTART)                                          01734000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0759 01735000
*                                      ADDRESSING                    */ 01736000
         USING @PSTART,@11                                              01737000
*                       END I17;    /* SUB BUFFERS           @OX10428*/ 01738000
*                       PLHINVAL=ON;/* SET PLHINVAL          @OX10428*/ 01739000
         OI    PLHINVAL(RPLH),B'00000010'                          0761 01740000
*                       CALL EXIT;  /* EXIT TO CALLER        @OX10428*/ 01741000
         BAL   @14,EXIT                                            0762 01742000
*                       RESPECIFY                                  0763 01743000
*                        (R15) UNRSTD;/* FREE REG 15         @OX10428*/ 01744000
*                     END;          /* END NRF               @OX10428*/ 01745000
*                 END;              /* NO ERRORS             @OX10428*/ 01746000
*               RPLDDDD=RPARM1;     /* PASS BACK RBA         @ZA07544*/ 01747000
@RF00746 ST    RPARM1,RPLDDDD(,RRPL)                               0766 01748000
*               GO TO DRL8;         /* YES, RETURN           @OX10428*/ 01749000
         B     DRL8                                                0767 01750000
*               RFY                                                0768 01751000
*                 RPARM1 UNRSTD;    /*                       @ZA07544*/ 01752000
*             END;                  /* END ERROR CODE        @ZA07544*/ 01753000
*           IF RPLREQ=RPLPOINT THEN /* IF POINT              @OX10428*/ 01754000
@RF00744 CLI   RPLREQ(RRPL),3                                      0770 01755000
         BNE   @RF00770                                            0770 01756000
*             PLHRSTRT=ON;          /* INV PUTPOS FLG        @OX10428*/ 01757000
         OI    PLHRSTRT(RPLH),B'10000000'                          0771 01758000
*           RFY                                                    0772 01759000
*             RWORK2 RSTD;          /*                       @ZA07544*/ 01760000
@RF00770 DS    0H                                                  0773 01761000
*           RWORK2=BUFCBAD+AMDCINV- /* POINT TO RDF          @ZA07544*/ 01762000
*               LENGTH(IDACIDF)-LENGTH(IDARDF);/* OF FIRST RECORD  0773 01763000
*                                                            @ZA10875*/ 01764000
         L     @12,PLHDBUFC(,RPLH)                                 0773 01765000
         L     @10,AMBDSB(,RAMB)                                   0773 01766000
         L     RWORK2,BUFCBAD(,@12)                                0773 01767000
         AL    RWORK2,AMDCINV(,@10)                                0773 01768000
         SL    RWORK2,@CF00199                                     0773 01769000
*           IF RWORK2->RDFNOT1=ON THEN/* NON 1ST SPANNED     @ZA07544*/ 01770000
         TM    RDFNOT1(RWORK2),B'00100000'                         0774 01771000
         BO    @RT00774                                            0774 01772000
*             GO TO READMORE;       /* RECD SEG? YES,BYPASS IT     0775 01773000
*                                                            @ZA07544*/ 01774000
*           GO TO DLRB;             /* GO SEARCH BUF         @OX10428*/ 01775000
         B     DLRB                                                0776 01776000
*           RFY                                                    0777 01777000
*             RWORK2 UNRSTD;        /*                       @ZA07544*/ 01778000
*         END;                      /* END SRCH FOR          @OX10428*/ 01779000
*       IF RPLREQ=RPLPUT THEN       /* PUT REQ ACCEPT        @OX10428*/ 01780000
@RF00724 CLI   RPLREQ(RRPL),1                                      0779 01781000
         BE    @RT00779                                            0779 01782000
*         GO TO DRL6;               /* POSITION              @OX10428*/ 01783000
*       ELSE                                                       0781 01784000
*         GO TO NOREC;              /* OTHERWISE NRF         @OX10428*/ 01785000
         B     NOREC                                               0781 01786000
*     END;                          /* END NO CISPLIT        @OX10428*/ 01787000
*                                                                  0783 01788000
*/*    EXIT SUBROUTINE                                               */ 01789000
*/*  FUNCTION - RESTORE REGISTER 14 FROM THE PLH AND RETURN          */ 01790000
*/*  INPUT - REGISTER 2 (RPLH) POINTS TO A PLACEHOLDER               */ 01791000
*/*  OUTPUT - REGISTER 14 IS LOADED WITH THE RETURN ADDRESS. #X04SVMR*/ 01792000
*                                                                  0783 01793000
*EXIT:                                                             0783 01794000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       #X04SVMR*/ 01795000
EXIT     DS    0H                                                  0784 01796000
*   GEN(IDARST14);                  /* RESTORE REG 14        #X04SVMR*/ 01797000
         IDARST14                                                       01798000
*   END EXIT;                       /* RETURN TO CALLER      @X04SVMR*/ 01799000
@EL00002 DS    0H                                                  0785 01800000
@EF00002 DS    0H                                                  0785 01801000
@ER00002 BR    @14                                                 0785 01802000
*   GEN;                                                           0786 01803000
*                                          /*                        */ 01804000
         DS    0F                          /* ASSURE WORD BOUNDRY    */ 01805000
MASK03   DC    X'00000003'                 /* MASK SAVES 2 LOW BYTES */ 01806000
INSERT   ICM   RWORK1,@00,@00(RWORK4)      /* MOVES POINTER FROM INDX*/ 01807000
*   GEN(IDAPATCH);                  /* PROVIDE PATCH SPACE           */ 01808000
         IDAPATCH                                                       01809000
*   END IDA019RA                                                   0788 01810000
*                                                                  0788 01811000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01812000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01813000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01814000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01815000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01816000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01817000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01818000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 01819000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 01820000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01821000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01822000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01823000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01824000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01825000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01826000
*                                                                  0788 01827000
*       ;                                                          0788 01828000
@EL00001 DS    0H                                                  0788 01829000
@EF00001 DS    0H                                                  0788 01830000
@ER00001 BR    @14                                                 0788 01831000
@DATA    DS    0H                                                       01832000
@SC01026 CLC   KEY(0,RWORK1),PLHKEY(@12)                                01833000
@SX01028 XC    PLHKEY(0,@09),PLHKEY(@09)                                01834000
@SM01030 MVC   PLHKEY(0,@12),KEY(RWORK1)                                01835000
@SC01038 CLC   AMDATA(0,RWORK1),PLHKEY(@12)                             01836000
@DATD    DSECT                                                          01837000
         DS    0F                                                       01838000
IDA019RA CSECT                                                          01839000
         DS    0F                                                       01840000
@CF00053 DC    F'1'                                                     01841000
@CH00053 EQU   @CF00053+2                                               01842000
@CF00159 DC    F'3'                                                     01843000
@CF00067 DC    F'4'                                                     01844000
@CF00199 DC    F'7'                                                     01845000
@CF01036 DC    F'-7'                                                    01846000
@CF00986 DC    XL2'0'                                                   01847000
         DC    C'08'                                                    01848000
@DATD    DSECT                                                          01849000
         DS    0D                                                       01850000
IDA019RA CSECT                                                          01851000
         DS    0F                                                       01852000
@SIZDATD DC    AL1(0)                                                   01853000
         DC    AL3(@ENDDATD-@DATD)                                      01854000
@CV00924 DC    V(IDAABF)                                                01855000
@CV00926 DC    V(IDAFREEB)                                              01856000
@CV00927 DC    V(IDAGNXT)                                               01857000
@CV00928 DC    V(IDAGRB)                                                01858000
@CV00929 DC    V(IDASBF)                                                01859000
@CV00930 DC    V(IDAWAIT)                                               01860000
@CV00931 DC    V(IDA019S6)                                              01861000
@CV00932 DC    V(IDA019RB)                                              01862000
@CV00925 DC    V(IDAFRBA)                                               01863000
         DS    0D                                                       01864000
HWORD4   DC    H'4'                                                     01865000
@CB00951 DC    X'0080'                                                  01866000
@DATD    DSECT                                                          01867000
*                                                          /*@X04SVLC*/ 01868000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01869000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01870000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01871000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01872000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01873000
RDFLEN   EQU   3                        LENGTH OF RDF                   01874000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01875000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01876000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01877000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01878000
@DATD    DSECT                                                          01879000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01880000
@ENDDATD EQU   *                                                        01881000
IDA019RA CSECT                                                          01882000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01883000
@01      EQU   01                                                       01884000
@02      EQU   02                                                       01885000
@03      EQU   03                                                       01886000
@04      EQU   04                                                       01887000
@05      EQU   05                                                       01888000
@06      EQU   06                                                       01889000
@07      EQU   07                                                       01890000
@08      EQU   08                                                       01891000
@09      EQU   09                                                       01892000
@10      EQU   10                                                       01893000
@11      EQU   11                                                       01894000
@12      EQU   12                                                       01895000
@13      EQU   13                                                       01896000
@14      EQU   14                                                       01897000
@15      EQU   15                                                       01898000
RRPL     EQU   @01                                                      01899000
RPLH     EQU   @02                                                      01900000
RAMB     EQU   @03                                                      01901000
RBUFC    EQU   @04                                                      01902000
RWORK1   EQU   @05                                                      01903000
RWORK2   EQU   @06                                                      01904000
RWORK3   EQU   @07                                                      01905000
RWORK4   EQU   @08                                                      01906000
RWORK5   EQU   @09                                                      01907000
RPARM1   EQU   @12                                                      01908000
R15      EQU   @15                                                      01909000
RWORK0   EQU   @00                                                      01910000
R1       EQU   @01                                                      01911000
R10      EQU   @10                                                      01912000
R11      EQU   @11                                                      01913000
R13      EQU   @13                                                      01914000
R14      EQU   @14                                                      01915000
IFGRPL   EQU   0                                                        01916000
RPLCOMN  EQU   IFGRPL                                                   01917000
RPLIDWD  EQU   RPLCOMN                                                  01918000
RPLREQ   EQU   RPLIDWD+2                                                01919000
RPLLEN   EQU   RPLIDWD+3                                                01920000
RPLECB   EQU   RPLCOMN+8                                                01921000
RPLFDBWD EQU   RPLCOMN+12                                               01922000
RPLFDBK  EQU   RPLFDBWD+1                                               01923000
RPLRTNCD EQU   RPLFDBK                                                  01924000
RPLERREG EQU   RPLRTNCD                                                 01925000
RPLCNDCD EQU   RPLFDBK+1                                                01926000
RPLCMPON EQU   RPLCNDCD                                                 01927000
RPLFDB2  EQU   RPLCMPON                                                 01928000
RPLERRCD EQU   RPLCNDCD+1                                               01929000
RPLFDB3  EQU   RPLERRCD                                                 01930000
RPLKEYLE EQU   RPLCOMN+16                                               01931000
RPLKEYL  EQU   RPLKEYLE                                                 01932000
RPLDACB  EQU   RPLCOMN+24                                               01933000
RPLARG   EQU   RPLCOMN+36                                               01934000
RPLOPTCD EQU   RPLCOMN+40                                               01935000
RPLOPT1  EQU   RPLOPTCD                                                 01936000
RPLDIR   EQU   RPLOPT1                                                  01937000
RPLSEQ   EQU   RPLOPT1                                                  01938000
RPLSKP   EQU   RPLOPT1                                                  01939000
RPLKGE   EQU   RPLOPT1                                                  01940000
RPLGEN   EQU   RPLOPT1                                                  01941000
RPLECBSW EQU   RPLOPT1                                                  01942000
RPLOPT2  EQU   RPLOPTCD+1                                               01943000
RPLKEY   EQU   RPLOPT2                                                  01944000
RPLADR   EQU   RPLOPT2                                                  01945000
RPLBWD   EQU   RPLOPT2                                                  01946000
RPLLRD   EQU   RPLOPT2                                                  01947000
RPLUPD   EQU   RPLOPT2                                                  01948000
RPLNSP   EQU   RPLOPT2                                                  01949000
RPLOPT3  EQU   RPLOPTCD+2                                               01950000
RPLNXTRP EQU   RPLCOMN+44                                               01951000
RPLOPTC2 EQU   RPLCOMN+56                                               01952000
RPLOPT5  EQU   RPLOPTC2                                                 01953000
RPLWRTYP EQU   RPLOPT5                                                  01954000
RPLOPT6  EQU   RPLOPTC2+1                                               01955000
RPLUNTYP EQU   RPLOPT6                                                  01956000
RPLOPT7  EQU   RPLOPTC2+2                                               01957000
RPLCNOPT EQU   RPLOPT7                                                  01958000
RPLOPT8  EQU   RPLOPTC2+3                                               01959000
RPLRBAR  EQU   RPLCOMN+60                                               01960000
RPLAIXID EQU   RPLRBAR+2                                                01961000
RPLDDDD  EQU   RPLRBAR+4                                                01962000
RPLEXTDS EQU   RPLCOMN+68                                               01963000
RPLEXTD1 EQU   RPLEXTDS                                                 01964000
IDAPLHDR EQU   0                                                        01965000
IDAPLH   EQU   0                                                        01966000
PLHFLG1  EQU   IDAPLH+2                                                 01967000
PLHASKBF EQU   PLHFLG1                                                  01968000
PLHRDEXC EQU   PLHFLG1                                                  01969000
PLHFLG2  EQU   IDAPLH+3                                                 01970000
PLHKEYMD EQU   PLHFLG2                                                  01971000
PLHEFLGS EQU   IDAPLH+4                                                 01972000
PLH1ST   EQU   PLHEFLGS                                                 01973000
PLHNOADV EQU   PLHEFLGS                                                 01974000
PLHINVAL EQU   PLHEFLGS                                                 01975000
PLHRSTRT EQU   PLHEFLGS+1                                               01976000
PLHFLG3  EQU   IDAPLH+6                                                 01977000
PLHRAHD  EQU   PLHFLG3                                                  01978000
PLHBWD   EQU   PLHFLG3                                                  01979000
PLHAFLGS EQU   IDAPLH+7                                                 01980000
PLHRABWD EQU   PLHAFLGS                                                 01981000
PLHRAE   EQU   PLHAFLGS                                                 01982000
PLHFRCNT EQU   IDAPLH+14                                                01983000
PLHBFRNO EQU   IDAPLH+15                                                01984000
PLHCRBA  EQU   IDAPLH+28                                                01985000
PLHJORBA EQU   PLHCRBA                                                  01986000
PLHJCODE EQU   IDAPLH+40                                                01987000
PLHRCODE EQU   IDAPLH+41                                                01988000
PLHLRECL EQU   IDAPLH+48                                                01989000
PLHDBUFC EQU   IDAPLH+52                                                01990000
PLHRECP  EQU   IDAPLH+60                                                01991000
PLHFSP   EQU   IDAPLH+64                                                01992000
PLHRDFP  EQU   IDAPLH+68                                                01993000
PLHRDFC  EQU   IDAPLH+72                                                01994000
PLHDIOB  EQU   IDAPLH+76                                                01995000
PLHSAVE6 EQU   IDAPLH+104                                               01996000
PLHRETO  EQU   IDAPLH+116                                               01997000
PLHRET1  EQU   IDAPLH+120                                               01998000
PLHEOVPT EQU   IDAPLH+180                                               01999000
PLHNRBA  EQU   IDAPLH+184                                               02000000
PLHIBUFC EQU   IDAPLH+188                                               02001000
PLHISPLP EQU   IDAPLH+196                                               02002000
PLHIXSPL EQU   IDAPLH+200                                               02003000
PLHSSRBA EQU   PLHIXSPL                                                 02004000
PLHWAX   EQU   IDAPLH+232                                               02005000
PLHKEYPT EQU   IDAPLH+248                                               02006000
PLHEND   EQU   IDAPLH+280                                               02007000
PLHKEY   EQU   0                                                        02008000
IDAIXSPL EQU   0                                                        02009000
IXSSTRBA EQU   IDAIXSPL                                                 02010000
IXSARG   EQU   IDAIXSPL+8                                               02011000
IXSTLN   EQU   IDAIXSPL+12                                              02012000
IXSILN   EQU   IDAIXSPL+13                                              02013000
IXSNOSR  EQU   IDAIXSPL+16                                              02014000
IXSBFLG  EQU   IDAIXSPL+17                                              02015000
IXSHEP   EQU   IDAIXSPL+20                                              02016000
IDABUFDR EQU   0                                                        02017000
BUFDRCIX EQU   IDABUFDR+9                                               02018000
BUFDRFLG EQU   IDABUFDR+11                                              02019000
IDABUFC  EQU   0                                                        02020000
BUFCAVL  EQU   IDABUFC                                                  02021000
BUFCFLG1 EQU   IDABUFC+1                                                02022000
BUFCIOFL EQU   IDABUFC+2                                                02023000
BUFCRRD  EQU   BUFCIOFL                                                 02024000
BUFCFLG2 EQU   IDABUFC+3                                                02025000
BUFCPLH  EQU   IDABUFC+4                                                02026000
BUFCDDDD EQU   IDABUFC+8                                                02027000
BUFCBAD  EQU   IDABUFC+20                                               02028000
BUFCINV  EQU   IDABUFC+28                                               02029000
IDACIDF  EQU   0                                                        02030000
CIDFOSET EQU   IDACIDF                                                  02031000
CIDFLL   EQU   IDACIDF+2                                                02032000
CIDFBUSY EQU   CIDFLL                                                   02033000
IDAIXH   EQU   0                                                        02034000
IXHPTLS  EQU   IDAIXH+3                                                 02035000
IXHBRBA  EQU   IDAIXH+4                                                 02036000
IDAIBFLP EQU   0                                                        02037000
IBFLPF   EQU   IDAIBFLP                                                 02038000
IBFLPL   EQU   IDAIBFLP+1                                               02039000
IBFLP3   EQU   IDAIBFLP+2                                               02040000
IBFLP2   EQU   IBFLP3                                                   02041000
IDASELL  EQU   0                                                        02042000
IDAIXK   EQU   0                                                        02043000
IDAARDB  EQU   0                                                        02044000
ARDTYPE  EQU   IDAARDB+1                                                02045000
ARDEOD   EQU   ARDTYPE                                                  02046000
ARDNPTR  EQU   IDAARDB+4                                                02047000
ARDHRBA  EQU   IDAARDB+12                                               02048000
ARDERBA  EQU   IDAARDB+16                                               02049000
ARDPRF   EQU   IDAARDB+28                                               02050000
IDAAMDSB EQU   0                                                        02051000
AMDATTR  EQU   IDAAMDSB+1                                               02052000
AMDNEST  EQU   IDAAMDSB+4                                               02053000
AMDRKP   EQU   IDAAMDSB+6                                               02054000
AMDKEYLN EQU   IDAAMDSB+8                                               02055000
AMDCINV  EQU   IDAAMDSB+20                                              02056000
AMDHLRBA EQU   IDAAMDSB+28                                              02057000
AMDSSRBA EQU   IDAAMDSB+32                                              02058000
AMDPARDB EQU   IDAAMDSB+36                                              02059000
AMDATTR3 EQU   IDAAMDSB+40                                              02060000
AMDSTAT  EQU   IDAAMDSB+48                                              02061000
AMDNIL   EQU   AMDSTAT+8                                                02062000
IDAAMBL  EQU   0                                                        02063000
AMBLEOV  EQU   IDAAMBL+12                                               02064000
AMBLEFLG EQU   AMBLEOV                                                  02065000
AMBLDDNM EQU   IDAAMBL+16                                               02066000
AMBLIDF  EQU   AMBLDDNM                                                 02067000
AMBLQ    EQU   AMBLIDF+7                                                02068000
AMBLVC   EQU   IDAAMBL+28                                               02069000
AMBLTYPE EQU   IDAAMBL+30                                               02070000
AMBLSHAR EQU   IDAAMBL+33                                               02071000
AMBLFLG1 EQU   IDAAMBL+35                                               02072000
AMBLFLG2 EQU   IDAAMBL+36                                               02073000
AMBLDTA  EQU   IDAAMBL+52                                               02074000
AMBLIX   EQU   IDAAMBL+56                                               02075000
IFGACB   EQU   0                                                        02076000
ACBCOMN  EQU   IFGACB                                                   02077000
ACBLENG  EQU   ACBCOMN+2                                                02078000
ACBLENG2 EQU   ACBLENG                                                  02079000
ACBAMBL  EQU   ACBCOMN+4                                                02080000
ACBJWA   EQU   ACBAMBL                                                  02081000
ACBMACRF EQU   ACBCOMN+12                                               02082000
ACBMACR1 EQU   ACBMACRF                                                 02083000
ACBADR   EQU   ACBMACR1                                                 02084000
ACBCNV   EQU   ACBMACR1                                                 02085000
ACBMACR2 EQU   ACBMACRF+1                                               02086000
ACBBUFPL EQU   ACBCOMN+20                                               02087000
ACBMACR3 EQU   ACBBUFPL                                                 02088000
ACBRECFM EQU   ACBCOMN+24                                               02089000
ACBCCTYP EQU   ACBCOMN+25                                               02090000
ACBOPT   EQU   ACBCOMN+26                                               02091000
ACBDSORG EQU   ACBOPT                                                   02092000
ACBCROPS EQU   ACBDSORG                                                 02093000
ACBEXLST EQU   ACBCOMN+36                                               02094000
ACBDDNM  EQU   ACBCOMN+40                                               02095000
ACBAMETH EQU   ACBDDNM+3                                                02096000
ACBOFLGS EQU   ACBCOMN+48                                               02097000
ACBEXFG  EQU   ACBOFLGS                                                 02098000
ACBIOSFG EQU   ACBOFLGS                                                 02099000
ACBINFLG EQU   ACBCOMN+50                                               02100000
ACBUJFCB EQU   ACBCOMN+52                                               02101000
ACBBLKSZ EQU   ACBCOMN+60                                               02102000
IDAAMB   EQU   0                                                        02103000
AMBPH    EQU   IDAAMB+12                                                02104000
AMBDSB   EQU   IDAAMB+20                                                02105000
AMBEOVR  EQU   IDAAMB+24                                                02106000
AMBFLG0  EQU   AMBEOVR                                                  02107000
AMBFLG1  EQU   IDAAMB+25                                                02108000
AMBDSORG EQU   IDAAMB+26                                                02109000
AMBIOBAD EQU   IDAAMB+28                                                02110000
AMBINFL  EQU   IDAAMB+42                                                02111000
AMBDEBPT EQU   IDAAMB+44                                                02112000
AMBOFLGS EQU   IDAAMB+48                                                02113000
AMBFLG2  EQU   IDAAMB+49                                                02114000
AMBPUG   EQU   AMBFLG2                                                  02115000
AMBEOVPT EQU   IDAAMB+56                                                02116000
AMBCSWD1 EQU   IDAAMB+84                                                02117000
AMBAFLG  EQU   AMBCSWD1                                                 02118000
AMBLSR   EQU   AMBAFLG                                                  02119000
AMBGSR   EQU   AMBAFLG                                                  02120000
RBA      EQU   0                                                        02121000
IDARDF   EQU   0                                                        02122000
RDFRBYTE EQU   IDARDF                                                   02123000
RDFCTNU  EQU   RDFRBYTE                                                 02124000
RDFSEG   EQU   RDFRBYTE                                                 02125000
RDFNOT1  EQU   RDFSEG                                                   02126000
RDF1ST   EQU   RDFSEG                                                   02127000
RDFREPL  EQU   RDFRBYTE                                                 02128000
RDFLL    EQU   IDARDF+1                                                 02129000
IDADATA  EQU   0                                                        02130000
AMDATA   EQU   IDADATA                                                  02131000
IDAKEY   EQU   0                                                        02132000
KEY      EQU   IDAKEY                                                   02133000
PLHPDL   EQU   0                                                        02134000
PLHPDLE  EQU   0                                                        02135000
PLHRRN   EQU   0                                                        02136000
PLHEXTEN EQU   PLHEND                                                   02137000
PLHBMWRK EQU   PLHEXTEN+5                                               02138000
BUFCRSC1 EQU   BUFCAVL                                                  02139000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02140000
PLHBMSV5 EQU   PLHEXTEN+24                                              02141000
PLHBMSV4 EQU   PLHEXTEN+20                                              02142000
PLHBMSV3 EQU   PLHEXTEN+16                                              02143000
PLHBMSV2 EQU   PLHEXTEN+12                                              02144000
PLHBMSV1 EQU   PLHEXTEN+8                                               02145000
PLHRDCNT EQU   PLHEXTEN+6                                               02146000
PLHBMSOV EQU   PLHBMWRK                                                 02147000
PLHBEUC  EQU   PLHBMWRK                                                 02148000
PLHBMRDF EQU   PLHBMWRK                                                 02149000
@NM00011 EQU   PLHEXTEN+4                                               02150000
PLHRESR1 EQU   PLHEXTEN                                                 02151000
RDFEMPTY EQU   RDFRBYTE                                                 02152000
RDFTYPE  EQU   RDFRBYTE                                                 02153000
AMBTRACE EQU   IDAAMB+120                                               02154000
AMBVIOT  EQU   IDAAMB+116                                               02155000
AMBSZCP  EQU   IDAAMB+114                                               02156000
AMBSZFW  EQU   IDAAMB+112                                               02157000
AMBSZWR  EQU   IDAAMB+110                                               02158000
AMBSZRD  EQU   IDAAMB+108                                               02159000
AMBEXEX  EQU   IDAAMB+100                                               02160000
AMBWSHD  EQU   IDAAMB+96                                                02161000
AMBCPA   EQU   IDAAMB+92                                                02162000
AMBBM2SH EQU   IDAAMB+88                                                02163000
AMBRDCNT EQU   AMBCSWD1+2                                               02164000
@NM00048 EQU   AMBCSWD1+1                                               02165000
@NM00047 EQU   AMBAFLG                                                  02166000
AMBCFX   EQU   AMBAFLG                                                  02167000
AMBSIS   EQU   AMBAFLG                                                  02168000
AMBDFR   EQU   AMBAFLG                                                  02169000
AMBICI   EQU   AMBAFLG                                                  02170000
@NM00046 EQU   AMBAFLG                                                  02171000
AMBUPLH  EQU   IDAAMB+80                                                02172000
AMBPAMBL EQU   IDAAMB+76                                                02173000
AMBPIXP  EQU   IDAAMB+72                                                02174000
@NM00045 EQU   IDAAMB+68                                                02175000
AMBIWA   EQU   IDAAMB+64                                                02176000
AMBWKA   EQU   IDAAMB+60                                                02177000
AMBAMBXN EQU   AMBEOVPT                                                 02178000
AMBEDB   EQU   IDAAMB+52                                                02179000
AMBRPT   EQU   IDAAMB+50                                                02180000
AMBBUSY  EQU   AMBOFLGS                                                 02181000
AMBEXFG  EQU   AMBOFLGS                                                 02182000
@NM00044 EQU   AMBOFLGS                                                 02183000
AMBOPEN  EQU   AMBOFLGS                                                 02184000
@NM00043 EQU   AMBOFLGS                                                 02185000
AMBDEBAD EQU   AMBDEBPT+1                                               02186000
AMBIFLGS EQU   AMBDEBPT                                                 02187000
AMBAMETH EQU   IDAAMB+43                                                02188000
AMBUPX   EQU   AMBINFL                                                  02189000
AMBUCRA  EQU   AMBINFL                                                  02190000
AMBSCRA  EQU   AMBINFL                                                  02191000
AMBCAT   EQU   AMBINFL                                                  02192000
@NM00042 EQU   AMBINFL                                                  02193000
@NM00041 EQU   AMBINFL                                                  02194000
AMBTIOT  EQU   IDAAMB+40                                                02195000
@NM00040 EQU   IDAAMB+38                                                02196000
AMBDDSN  EQU   IDAAMB+35                                                02197000
AMBCDSN  EQU   IDAAMB+32                                                02198000
AMBIOMB  EQU   AMBIOBAD                                                 02199000
@NM00039 EQU   AMBDSORG+1                                               02200000
AMBDORGA EQU   AMBDSORG+1                                               02201000
@NM00038 EQU   AMBDSORG                                                 02202000
AMBINBUF EQU   AMBFLG1                                                  02203000
AMBJRN   EQU   AMBFLG1                                                  02204000
AMBUBF   EQU   AMBFLG1                                                  02205000
AMBSPEED EQU   AMBFLG1                                                  02206000
AMBPCAT  EQU   AMBFLG1                                                  02207000
AMBMCAT  EQU   AMBFLG1                                                  02208000
AMBTYPE  EQU   AMBFLG1                                                  02209000
AMBCREAT EQU   AMBFLG1                                                  02210000
@NM00037 EQU   AMBFLG0                                                  02211000
AMBPSDS  EQU   AMBFLG0                                                  02212000
AMBCACB  EQU   IDAAMB+16                                                02213000
AMBBUFC  EQU   IDAAMB+8                                                 02214000
AMBLINK  EQU   IDAAMB+4                                                 02215000
AMBLEN   EQU   IDAAMB+2                                                 02216000
AMBRSC   EQU   IDAAMB+1                                                 02217000
AMBID    EQU   IDAAMB                                                   02218000
ACBAPID  EQU   ACBCOMN+72                                               02219000
ACBCBMWA EQU   ACBCOMN+68                                               02220000
ACBUAPTR EQU   ACBCOMN+64                                               02221000
ACBLRECL EQU   ACBCOMN+62                                               02222000
ACBMSGLN EQU   ACBBLKSZ                                                 02223000
ACBBUFSP EQU   ACBCOMN+56                                               02224000
@NM00036 EQU   ACBUJFCB+1                                               02225000
ACBOPTN  EQU   ACBUJFCB                                                 02226000
ACBVVIC  EQU   ACBINFLG                                                 02227000
ACBUCRA  EQU   ACBINFLG                                                 02228000
ACBSCRA  EQU   ACBINFLG                                                 02229000
ACBCAT   EQU   ACBINFLG                                                 02230000
ACBIJRQE EQU   ACBINFLG                                                 02231000
ACBJEPS  EQU   ACBINFLG                                                 02232000
@NM00035 EQU   ACBINFLG                                                 02233000
ACBERFLG EQU   ACBCOMN+49                                               02234000
ACBBUSY  EQU   ACBIOSFG                                                 02235000
ACBLOCK  EQU   ACBEXFG                                                  02236000
@NM00034 EQU   ACBOFLGS                                                 02237000
ACBDSERR EQU   ACBOFLGS                                                 02238000
ACBOPEN  EQU   ACBOFLGS                                                 02239000
ACBEOV   EQU   ACBOFLGS                                                 02240000
@NM00033 EQU   ACBOFLGS                                                 02241000
ACBDEB   EQU   ACBDDNM+5                                                02242000
ACBERFL  EQU   ACBDDNM+4                                                02243000
ACBAM    EQU   ACBAMETH                                                 02244000
ACBINFL  EQU   ACBDDNM+2                                                02245000
ACBTIOT  EQU   ACBDDNM                                                  02246000
ACBUEL   EQU   ACBEXLST                                                 02247000
ACBPASSW EQU   ACBCOMN+32                                               02248000
ACBMSGAR EQU   ACBCOMN+28                                               02249000
@NM00032 EQU   ACBDSORG+1                                               02250000
ACBDORGA EQU   ACBDSORG+1                                               02251000
@NM00031 EQU   ACBDSORG                                                 02252000
ACBCRNRE EQU   ACBCROPS                                                 02253000
ACBCRNCK EQU   ACBCROPS                                                 02254000
ACBASA   EQU   ACBCCTYP                                                 02255000
@NM00030 EQU   ACBCCTYP                                                 02256000
ACBRECAF EQU   ACBRECFM                                                 02257000
ACBJBUF  EQU   ACBBUFPL+2                                               02258000
ACBMACR4 EQU   ACBBUFPL+1                                               02259000
@NM00029 EQU   ACBMACR3                                                 02260000
ACBNCFX  EQU   ACBMACR3                                                 02261000
ACBSIS   EQU   ACBMACR3                                                 02262000
ACBDFR   EQU   ACBMACR3                                                 02263000
ACBICI   EQU   ACBMACR3                                                 02264000
ACBGSR   EQU   ACBMACR3                                                 02265000
ACBLSR   EQU   ACBMACR3                                                 02266000
@NM00028 EQU   ACBMACR3                                                 02267000
ACBBUFNI EQU   ACBCOMN+18                                               02268000
ACBBUFND EQU   ACBCOMN+16                                               02269000
ACBSTRNO EQU   ACBCOMN+15                                               02270000
ACBBSTNO EQU   ACBCOMN+14                                               02271000
ACBAIX   EQU   ACBMACR2                                                 02272000
ACBDSN   EQU   ACBMACR2                                                 02273000
ACBRST   EQU   ACBMACR2                                                 02274000
ACBLOGON EQU   ACBMACR2                                                 02275000
ACBSKP   EQU   ACBMACR2                                                 02276000
@NM00027 EQU   ACBMACR2                                                 02277000
ACBUBF   EQU   ACBMACR1                                                 02278000
ACBOUT   EQU   ACBMACR1                                                 02279000
ACBIN    EQU   ACBMACR1                                                 02280000
ACBDIR   EQU   ACBMACR1                                                 02281000
ACBSEQ   EQU   ACBMACR1                                                 02282000
ACBBLK   EQU   ACBCNV                                                   02283000
ACBADD   EQU   ACBADR                                                   02284000
ACBKEY   EQU   ACBMACR1                                                 02285000
ACBINRTN EQU   ACBCOMN+8                                                02286000
ACBIBCT  EQU   ACBJWA                                                   02287000
ACBLEN2  EQU   ACBLENG2                                                 02288000
ACBSTYP  EQU   ACBCOMN+1                                                02289000
ACBID    EQU   ACBCOMN                                                  02290000
AMBLCMB  EQU   IDAAMBL+64                                               02291000
AMBLBIB  EQU   IDAAMBL+60                                               02292000
AMBLMIDS EQU   IDAAMBL+42                                               02293000
AMBLNIDS EQU   IDAAMBL+41                                               02294000
@NM00026 EQU   IDAAMBL+40                                               02295000
AMBLNUM  EQU   IDAAMBL+38                                               02296000
AMBLNST  EQU   IDAAMBL+37                                               02297000
@NM00025 EQU   AMBLFLG2                                                 02298000
AMBLSTAG EQU   AMBLFLG2                                                 02299000
@NM00024 EQU   AMBLFLG2                                                 02300000
AMBLDUMY EQU   AMBLFLG1                                                 02301000
AMBLCAT  EQU   AMBLFLG1                                                 02302000
AMBLUCRA EQU   AMBLFLG1                                                 02303000
AMBLSCRA EQU   AMBLFLG1                                                 02304000
AMBLVVIC EQU   AMBLFLG1                                                 02305000
AMBLUPD  EQU   AMBLFLG1                                                 02306000
AMBLCINV EQU   AMBLFLG1                                                 02307000
AMBLFULL EQU   AMBLFLG1                                                 02308000
AMBLLEN  EQU   IDAAMBL+34                                               02309000
@NM00023 EQU   AMBLSHAR                                                 02310000
AMBLWRIT EQU   AMBLSHAR                                                 02311000
AMBLCATO EQU   AMBLSHAR                                                 02312000
AMBLPRIM EQU   AMBLSHAR                                                 02313000
AMBLID   EQU   IDAAMBL+32                                               02314000
@NM00022 EQU   IDAAMBL+31                                               02315000
@NM00021 EQU   AMBLTYPE                                                 02316000
AMBLFIX  EQU   AMBLTYPE                                                 02317000
AMBLBASE EQU   AMBLTYPE                                                 02318000
AMBLAIX  EQU   AMBLTYPE                                                 02319000
AMBLUPGR EQU   AMBLTYPE                                                 02320000
AMBLPATH EQU   AMBLTYPE                                                 02321000
AMBLENO  EQU   AMBLVC+1                                                 02322000
AMBLVRT  EQU   AMBLVC                                                   02323000
AMBLXPT  EQU   IDAAMBL+24                                               02324000
AMBLDFR  EQU   AMBLQ                                                    02325000
AMBLESDS EQU   AMBLQ                                                    02326000
AMBLKSDS EQU   AMBLQ                                                    02327000
AMBLUBF  EQU   AMBLQ                                                    02328000
AMBLFSTP EQU   AMBLQ                                                    02329000
AMBLLSR  EQU   AMBLQ                                                    02330000
AMBLGSR  EQU   AMBLQ                                                    02331000
AMBLDDC  EQU   AMBLQ                                                    02332000
AMBLDCI  EQU   AMBLIDF+4                                                02333000
AMBLCACB EQU   AMBLIDF                                                  02334000
@NM00020 EQU   AMBLEOV+2                                                02335000
AMBLCOMP EQU   AMBLEOV+1                                                02336000
AMBLESET EQU   AMBLEFLG                                                 02337000
AMBLWAIT EQU   AMBLEFLG                                                 02338000
AMBLACB  EQU   IDAAMBL+8                                                02339000
AMBLSCHN EQU   IDAAMBL+4                                                02340000
AMBLPCHN EQU   IDAAMBL                                                  02341000
AMDEXCP  EQU   AMDSTAT+44                                               02342000
AMDNCAS  EQU   AMDSTAT+40                                               02343000
AMDNCIS  EQU   AMDSTAT+36                                               02344000
AMDASPA  EQU   AMDSTAT+32                                               02345000
AMDRETR  EQU   AMDSTAT+28                                               02346000
AMDUPR   EQU   AMDSTAT+24                                               02347000
AMDIREC  EQU   AMDSTAT+20                                               02348000
AMDDELR  EQU   AMDSTAT+16                                               02349000
AMDNLR   EQU   AMDSTAT+12                                               02350000
AMDNEXT  EQU   AMDSTAT+10                                               02351000
AMDSTSP  EQU   AMDSTAT                                                  02352000
@NM00019 EQU   IDAAMDSB+41                                              02353000
@NM00018 EQU   AMDATTR3                                                 02354000
AMDLM    EQU   AMDATTR3                                                 02355000
AMDWAIT  EQU   AMDATTR3                                                 02356000
AMDBIND  EQU   AMDATTR3                                                 02357000
AMDFAULT EQU   AMDATTR3                                                 02358000
AMDUNQ   EQU   AMDATTR3                                                 02359000
AMDMAXRR EQU   AMDSSRBA                                                 02360000
AMDNSLOT EQU   AMDHLRBA                                                 02361000
AMDLRECL EQU   IDAAMDSB+24                                              02362000
AMDFSCI  EQU   IDAAMDSB+16                                              02363000
AMDFSCA  EQU   IDAAMDSB+14                                              02364000
AMDCIPCA EQU   IDAAMDSB+12                                              02365000
AMDPCTCI EQU   IDAAMDSB+11                                              02366000
AMDPCTCA EQU   IDAAMDSB+10                                              02367000
AMDAXRKP EQU   AMDNEST                                                  02368000
AMDLEN   EQU   IDAAMDSB+2                                               02369000
AMDSPAN  EQU   AMDATTR                                                  02370000
AMDRRDS  EQU   AMDATTR                                                  02371000
AMDRANGE EQU   AMDATTR                                                  02372000
AMDORDER EQU   AMDATTR                                                  02373000
AMDREPL  EQU   AMDATTR                                                  02374000
AMDSDT   EQU   AMDATTR                                                  02375000
AMDWCK   EQU   AMDATTR                                                  02376000
AMDDST   EQU   AMDATTR                                                  02377000
AMDSBID  EQU   IDAAMDSB                                                 02378000
ARDKEYS  EQU   IDAARDB+29                                               02379000
@NM00017 EQU   ARDPRF                                                   02380000
ARDPRFMT EQU   ARDPRF                                                   02381000
ARDPRSS  EQU   ARDPRF                                                   02382000
ARDRELNO EQU   IDAARDB+26                                               02383000
ARDVOLSR EQU   IDAARDB+20                                               02384000
ARDHKRBA EQU   IDAARDB+8                                                02385000
ARDLEN   EQU   IDAARDB+2                                                02386000
ARDUSED  EQU   ARDTYPE                                                  02387000
ARDUOVFL EQU   ARDTYPE                                                  02388000
ARDSS    EQU   ARDTYPE                                                  02389000
ARDHLI   EQU   ARDTYPE                                                  02390000
ARDKR    EQU   ARDTYPE                                                  02391000
ARDID    EQU   IDAARDB                                                  02392000
IXKEY    EQU   IDAIXK                                                   02393000
IXSELL   EQU   IDASELL                                                  02394000
IBFLP1   EQU   IBFLP2                                                   02395000
IXHSEO   EQU   IDAIXH+22                                                02396000
IXHLEO   EQU   IDAIXH+20                                                02397000
IXHFSO   EQU   IDAIXH+18                                                02398000
IXHFLGS  EQU   IDAIXH+17                                                02399000
IXHLV    EQU   IDAIXH+16                                                02400000
IXHXX    EQU   IDAIXH+12                                                02401000
IXHHP    EQU   IDAIXH+8                                                 02402000
IXHFLPLN EQU   IDAIXH+2                                                 02403000
IXHLL    EQU   IDAIXH                                                   02404000
@NM00016 EQU   CIDFLL                                                   02405000
BUFCEND  EQU   IDABUFC+64                                               02406000
BUFCUCDN EQU   IDABUFC+60                                               02407000
BUFCUCUP EQU   IDABUFC+56                                               02408000
BUFCMDBT EQU   IDABUFC+52                                               02409000
BUFCHAIN EQU   IDABUFC+48                                               02410000
BUFXORBA EQU   IDABUFC+44                                               02411000
BUFXIRBA EQU   IDABUFC+40                                               02412000
BUFCNXT2 EQU   IDABUFC+37                                               02413000
BUFCIDXL EQU   IDABUFC+36                                               02414000
BUFCDSPC EQU   IDABUFC+32                                               02415000
BUFCWLEN EQU   BUFCINV                                                  02416000
BUFCNXT1 EQU   IDABUFC+24                                               02417000
BUFCCPA  EQU   IDABUFC+16                                               02418000
BUFCORBA EQU   IDABUFC+12                                               02419000
BUFCAMB  EQU   BUFCPLH                                                  02420000
@NM00015 EQU   BUFCFLG2                                                 02421000
BUFCEOD  EQU   BUFCFLG2                                                 02422000
BUFCBSYW EQU   BUFCFLG2                                                 02423000
BUFCBSYR EQU   BUFCFLG2                                                 02424000
BUFCNLAS EQU   BUFCFLG2                                                 02425000
BUFCXDDR EQU   BUFCFLG2                                                 02426000
BUFCFIX  EQU   BUFCIOFL                                                 02427000
BUFCPFCP EQU   BUFCIOFL                                                 02428000
BUFCXEDB EQU   BUFCIOFL                                                 02429000
BUFCWC   EQU   BUFCIOFL                                                 02430000
BUFCREAL EQU   BUFCIOFL                                                 02431000
BUFCFMT  EQU   BUFCIOFL                                                 02432000
BUFCMW   EQU   BUFCIOFL                                                 02433000
BUFCEPT  EQU   BUFCFLG1                                                 02434000
BUFCEXC  EQU   BUFCFLG1                                                 02435000
BUFCVAL  EQU   BUFCFLG1                                                 02436000
BUFCER2  EQU   BUFCFLG1                                                 02437000
BUFCER1  EQU   BUFCFLG1                                                 02438000
BUFCINS  EQU   BUFCFLG1                                                 02439000
BUFCSEG  EQU   BUFCFLG1                                                 02440000
BUFCUPG  EQU   BUFCFLG1                                                 02441000
BUFCUCNT EQU   BUFCAVL                                                  02442000
@NM00014 EQU   IDABUFDR+16                                              02443000
BUFDBUFC EQU   IDABUFDR+12                                              02444000
@NM00013 EQU   BUFDRFLG                                                 02445000
BUFDRAVL EQU   BUFDRFLG                                                 02446000
BUFDRREL EQU   BUFDRFLG                                                 02447000
BUFDRTSB EQU   IDABUFDR+10                                              02448000
BUFDRMAX EQU   BUFDRCIX                                                 02449000
BUFDRPFN EQU   IDABUFDR+8                                               02450000
BUFDRPFB EQU   IDABUFDR+4                                               02451000
BUFDRLEN EQU   IDABUFDR+2                                               02452000
BUFDRNO  EQU   IDABUFDR+1                                               02453000
BUFDRID  EQU   IDABUFDR                                                 02454000
IXSLEP   EQU   IDAIXSPL+28                                              02455000
IXSSEP   EQU   IDAIXSPL+24                                              02456000
IXSPEC   EQU   IDAIXSPL+19                                              02457000
IXSEKON  EQU   IDAIXSPL+18                                              02458000
@NM00012 EQU   IXSBFLG                                                  02459000
IXSLELV  EQU   IXSBFLG                                                  02460000
IXSSSRH  EQU   IXSBFLG                                                  02461000
IXSKLEN  EQU   IDAIXSPL+14                                              02462000
IXSBUFC  EQU   IDAIXSPL+4                                               02463000
PLHERRET EQU   IDAPLH+276                                               02464000
PLHASCB  EQU   IDAPLH+272                                               02465000
PLHECB   EQU   IDAPLH+268                                               02466000
@NM00010 EQU   IDAPLH+265                                               02467000
PLHDRMSK EQU   IDAPLH+264                                               02468000
PLHR13   EQU   IDAPLH+260                                               02469000
PLHPARM1 EQU   IDAPLH+256                                               02470000
PLHDRRSC EQU   IDAPLH+252                                               02471000
PLHSLRBA EQU   IDAPLH+244                                               02472000
PLHSRCSG EQU   IDAPLH+242                                               02473000
PLHNOSEG EQU   IDAPLH+240                                               02474000
PLHLLOR  EQU   IDAPLH+236                                               02475000
PLHXPLH  EQU   PLHWAX                                                   02476000
@NM00009 EQU   PLHIXSPL+8                                               02477000
PLHIXBFC EQU   PLHIXSPL+4                                               02478000
PLHHIREC EQU   PLHSSRBA                                                 02479000
PLHRBUFC EQU   IDAPLH+192                                               02480000
PLHDDDD  EQU   PLHEOVPT                                                 02481000
PLHAR14  EQU   IDAPLH+176                                               02482000
@NM00008 EQU   IDAPLH+172                                               02483000
@NM00007 EQU   IDAPLH+168                                               02484000
PLHASAVE EQU   IDAPLH+164                                               02485000
PLHRETOS EQU   IDAPLH+118                                               02486000
PLHCHAIN EQU   IDAPLH+112                                               02487000
PLHAMB   EQU   IDAPLH+108                                               02488000
PLHSAVE5 EQU   IDAPLH+100                                               02489000
PLHSAVE4 EQU   IDAPLH+96                                                02490000
PLHSAVE3 EQU   IDAPLH+92                                                02491000
PLHSAVE2 EQU   IDAPLH+88                                                02492000
PLHSAVE1 EQU   IDAPLH+84                                                02493000
PLHARET  EQU   IDAPLH+80                                                02494000
PLHIIOB  EQU   PLHDIOB                                                  02495000
PLHSRSID EQU   IDAPLH+74                                                02496000
PLHNBUFC EQU   IDAPLH+56                                                02497000
PLHARDB  EQU   IDAPLH+44                                                02498000
@NM00006 EQU   IDAPLH+43                                                02499000
PLHEOVR  EQU   IDAPLH+42                                                02500000
PLHUCODE EQU   PLHJCODE                                                 02501000
PLHJNRBA EQU   IDAPLH+36                                                02502000
PLHJRNLL EQU   IDAPLH+32                                                02503000
PLHUPECB EQU   PLHJORBA                                                 02504000
PLHDSIDA EQU   IDAPLH+24                                                02505000
PLHCRPL  EQU   IDAPLH+20                                                02506000
PLHMRPL  EQU   IDAPLH+16                                                02507000
PLHRMIN  EQU   IDAPLH+13                                                02508000
PLHDSTYP EQU   IDAPLH+12                                                02509000
PLHACB   EQU   IDAPLH+8                                                 02510000
PLHIOSID EQU   PLHAFLGS                                                 02511000
PLHDBDC  EQU   PLHAFLGS                                                 02512000
PLHVAMB  EQU   PLHAFLGS                                                 02513000
PLHIOSRQ EQU   PLHAFLGS                                                 02514000
PLHDRLM  EQU   PLHAFLGS                                                 02515000
PLHEOVDF EQU   PLHFLG3                                                  02516000
PLHRVRS  EQU   PLHFLG3                                                  02517000
PLHSLVLD EQU   PLHFLG3                                                  02518000
PLHSRBSG EQU   PLHFLG3                                                  02519000
@NM00005 EQU   PLHEFLGS+1                                               02520000
PLHDSCAN EQU   PLHEFLGS                                                 02521000
PLHEODX  EQU   PLHEFLGS                                                 02522000
PLHSRINV EQU   PLHEFLGS                                                 02523000
PLHSKPER EQU   PLHEFLGS                                                 02524000
PLHNOSPC EQU   PLHEFLGS                                                 02525000
PLHIWAIT EQU   PLHFLG2                                                  02526000
PLHSVADV EQU   PLHFLG2                                                  02527000
PLHCIINS EQU   PLHFLG2                                                  02528000
PLHKRE   EQU   PLHFLG2                                                  02529000
PLHADDTE EQU   PLHFLG2                                                  02530000
PLHSQINS EQU   PLHFLG2                                                  02531000
PLHUPD   EQU   PLHFLG2                                                  02532000
@NM00004 EQU   PLHFLG1                                                  02533000
PLHDRPND EQU   PLHFLG1                                                  02534000
PLHASYRQ EQU   PLHFLG1                                                  02535000
PLHSSR   EQU   PLHFLG1                                                  02536000
PLHENDRQ EQU   PLHFLG1                                                  02537000
PLHEOVW  EQU   PLHFLG1                                                  02538000
PLHATV   EQU   IDAPLH+1                                                 02539000
PLHAVL   EQU   IDAPLH                                                   02540000
PLHIOSDQ EQU   IDAPLHDR+12                                              02541000
PLHDRCUR EQU   IDAPLHDR+10                                              02542000
PLHDRMAX EQU   IDAPLHDR+8                                               02543000
PLHDRREQ EQU   IDAPLHDR+4                                               02544000
PLHELTH  EQU   IDAPLHDR+2                                               02545000
PLHCNT   EQU   IDAPLHDR+1                                               02546000
PLHID    EQU   IDAPLHDR                                                 02547000
RPLERMSA EQU   RPLCOMN+72                                               02548000
RPLEMLEN EQU   RPLCOMN+70                                               02549000
RPLACTIV EQU   RPLCOMN+69                                               02550000
RPLBRANC EQU   RPLEXTD1                                                 02551000
RPLNIB   EQU   RPLEXTD1                                                 02552000
@NM00003 EQU   RPLEXTD1                                                 02553000
RPLEXIT  EQU   RPLEXTD1                                                 02554000
RPLNEXIT EQU   RPLEXTD1                                                 02555000
RPLEXSCH EQU   RPLEXTD1                                                 02556000
@NM00002 EQU   RPLRBAR+3                                                02557000
@NM00001 EQU   RPLAIXID                                                 02558000
RPLAXPKP EQU   RPLAIXID                                                 02559000
RPLAIXPC EQU   RPLRBAR                                                  02560000
RPLRSV88 EQU   RPLOPT8                                                  02561000
RPLUNCON EQU   RPLOPT8                                                  02562000
RPLACTV  EQU   RPLOPT8                                                  02563000
RPLSESS  EQU   RPLOPT8                                                  02564000
RPLPEND  EQU   RPLOPT8                                                  02565000
RPLODPRM EQU   RPLOPT8                                                  02566000
RPLODACP EQU   RPLOPT8                                                  02567000
RPLODACQ EQU   RPLOPT8                                                  02568000
RPLRSV78 EQU   RPLOPT7                                                  02569000
RPLRSV77 EQU   RPLOPT7                                                  02570000
RPLRLSOP EQU   RPLOPT7                                                  02571000
RPLTPOST EQU   RPLOPT7                                                  02572000
RPLQOPT  EQU   RPLOPT7                                                  02573000
RPLCNIMM EQU   RPLCNOPT                                                 02574000
RPLCNANY EQU   RPLCNOPT                                                 02575000
RPLCNALL EQU   RPLCNOPT                                                 02576000
RPLRSV68 EQU   RPLOPT6                                                  02577000
RPLRSV67 EQU   RPLOPT6                                                  02578000
RPLLOCK  EQU   RPLOPT6                                                  02579000
RPLNCOND EQU   RPLOPT6                                                  02580000
RPLCOND  EQU   RPLOPT6                                                  02581000
RPLEOT   EQU   RPLUNTYP                                                 02582000
RPLEOM   EQU   RPLUNTYP                                                 02583000
RPLEOB   EQU   RPLUNTYP                                                 02584000
RPLWROPT EQU   RPLOPT5                                                  02585000
RPLNODE  EQU   RPLOPT5                                                  02586000
RPLERACE EQU   RPLWRTYP                                                 02587000
RPLEAU   EQU   RPLWRTYP                                                 02588000
RPLNERAS EQU   RPLWRTYP                                                 02589000
RPLPSOPT EQU   RPLOPT5                                                  02590000
RPLSSNIN EQU   RPLOPT5                                                  02591000
RPLDLGIN EQU   RPLOPT5                                                  02592000
RPLBUFL  EQU   RPLCOMN+52                                               02593000
RPLRLEN  EQU   RPLCOMN+48                                               02594000
RPLCHAIN EQU   RPLNXTRP                                                 02595000
RPLOPT4  EQU   RPLOPTCD+3                                               02596000
RPLALIGN EQU   RPLOPT3                                                  02597000
RPLFMT   EQU   RPLOPT3                                                  02598000
RPLFLD   EQU   RPLOPT3                                                  02599000
RPLVFY   EQU   RPLOPT3                                                  02600000
RPLBLK   EQU   RPLOPT3                                                  02601000
RPLSFORM EQU   RPLOPT3                                                  02602000
RPLEODS  EQU   RPLOPT3                                                  02603000
RPLWAITX EQU   RPLOPT2                                                  02604000
RPLCNV   EQU   RPLOPT2                                                  02605000
RPLADD   EQU   RPLADR                                                   02606000
RPLECBIN EQU   RPLECBSW                                                 02607000
RPLASY   EQU   RPLOPT1                                                  02608000
RPLLOC   EQU   RPLOPT1                                                  02609000
RPLDAF   EQU   RPLARG+2                                                 02610000
RPLSAF   EQU   RPLARG                                                   02611000
RPLAREA  EQU   RPLCOMN+32                                               02612000
RPLTCBPT EQU   RPLCOMN+28                                               02613000
RPLCCHAR EQU   RPLCOMN+20                                               02614000
RPLSTRID EQU   RPLCOMN+18                                               02615000
RPLRDSOH EQU   RPLFDB3                                                  02616000
RPLRLG   EQU   RPLFDB3                                                  02617000
RPLLGFRC EQU   RPLFDB3                                                  02618000
RPLREOT  EQU   RPLFDB3                                                  02619000
RPLREOM  EQU   RPLFDB3                                                  02620000
RPLREOB  EQU   RPLFDB3                                                  02621000
RPLSV32  EQU   RPLFDB3                                                  02622000
RPLUINPT EQU   RPLFDB3                                                  02623000
RPLSTSAV EQU   RPLFDB2                                                  02624000
RPLCUERR EQU   RPLFDB2                                                  02625000
RPLDLGFL EQU   RPLFDB2                                                  02626000
RPLIOERR EQU   RPLFDB2                                                  02627000
RPLDVUNS EQU   RPLFDB2                                                  02628000
RPLATND  EQU   RPLFDB2                                                  02629000
RPLRVID  EQU   RPLFDB2                                                  02630000
RPLERLK  EQU   RPLFDB2                                                  02631000
RPLSTAT  EQU   RPLFDBWD                                                 02632000
RPLPOST  EQU   RPLECB                                                   02633000
RPLWAIT  EQU   RPLECB                                                   02634000
RPLPLHPT EQU   RPLCOMN+4                                                02635000
RPLLEN2  EQU   RPLLEN                                                   02636000
RPLSTYP  EQU   RPLIDWD+1                                                02637000
RPLID    EQU   RPLIDWD                                                  02638000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02639000
@RC00171 EQU   @RC00169                                                 02640000
@RC00186 EQU   @RC00169                                                 02641000
@RF00288 EQU   @RC00162                                                 02642000
@RT00358 EQU   DRLC                                                     02643000
@RF00445 EQU   DLRB                                                     02644000
@RT00578 EQU   DRL8                                                     02645000
@RT00589 EQU   DRL6                                                     02646000
@RF00593 EQU   NOREC                                                    02647000
@RT00748 EQU   DRL6                                                     02648000
@RT00774 EQU   READMORE                                                 02649000
@RT00779 EQU   DRL6                                                     02650000
@RF00779 EQU   NOREC                                                    02651000
@ENDDATA EQU   *                                                        02652000
         END   IDA019RA,(C'PLS1934',0701,78172)                         02653000
