         TITLE 'IDA019RE--CONTROL INTERVAL SPLIT                       *00001000
                        '                                               00002000
IDA019RE CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RE  78.209'                                 0001 00009000
IDAREPOS DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00657-IDAREPOS)                                   00013000
         ENTRY IDAREPOS                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  BALR  @11,0                                               0001 00016000
@PSTART  DS    0H                                                  0001 00017000
         USING @PSTART,@11                                         0001 00018000
         AH    @15,4(,@15)                                         0001 00019000
         BR    @15                                                 0001 00020000
@EP00001 DS    0H                                                  0002 00021000
*                                                                  0173 00022000
         IDASVR14                                                       00023000
*   /*****************************************************************/ 00024000
*   /*                                                               */ 00025000
*   /* IF THIS DATA SET IS USING SHROPT(4), AND DATA SET IS NOT A    */ 00026000
*   /* CATALOG, UCRA OR SCRA THEN PREVENT SPLIT OF HIGH-KEY CINV.    */ 00027000
*   /*                                                               */ 00028000
*   /*****************************************************************/ 00029000
*                                                                  0174 00030000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE?   @ZA29388*/ 00031000
         L     @10,AMBTRACE(,RAMB)                                 0174 00032000
         LTR   @10,@10                                             0174 00033000
         BZ    @RF00174                                            0174 00034000
*     DO;                           /*                       @ZA29388*/ 00035000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 00036000
         L     @15,@CV01034                                        0176 00037000
         BALR  @14,@15                                             0176 00038000
*       GEN(DC X'0006');            /* TRACE ID              @ZA29388*/ 00039000
         DC X'0006'                                                     00040000
*     END;                          /*                       @ZA29388*/ 00041000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC    @ZA13567*/ 00042000
@RF00174 L     RBUFC,PLHDBUFC(,RPLH)                               0179 00043000
*   IF AMBINBUF=ON&                 /* IF SHROPT(4)          @ZA13567*/ 00044000
*       BUFXIRBA=ARDHKRBA&          /* AND HI-KEY CI SPLIT   @ZA13567*/ 00045000
*       AMBSCRA=OFF&                /* AND NOT SCRA          @ZA13567*/ 00046000
*       AMBUCRA=OFF&                /* UCRA                  @ZA13567*/ 00047000
*       AMBCAT=OFF THEN             /* OR CATALOG            @ZA13567*/ 00048000
         TM    AMBINBUF(RAMB),B'00000001'                          0180 00049000
         BNO   @RF00180                                            0180 00050000
         L     @10,PLHARDB(,RPLH)                                  0180 00051000
         CLC   BUFXIRBA(4,RBUFC),ARDHKRBA(@10)                     0180 00052000
         BNE   @RF00180                                            0180 00053000
         TM    AMBSCRA(RAMB),B'00011100'                           0180 00054000
         BNZ   @RF00180                                            0180 00055000
*     DO;                           /* PREVENT CI SPLIT      @ZA13567*/ 00056000
*       RPLERREG='08'X;             /* IND LOGICAL ERROR     @ZA13567*/ 00057000
         MVI   RPLERREG(RRPL),X'08'                                0182 00058000
*       RPLERRCD=RPLNOEXT;          /* UNABLE TO EXTEND ERR  @ZA13567*/ 00059000
         MVI   RPLERRCD(RRPL),X'1C'                                0183 00060000
*       GOTO CISPLERR;              /* EXIT MODULE           @ZA13567*/ 00061000
         B     CISPLERR                                            0184 00062000
*     END;                          /* END ERROR EXIT        @ZA13567*/ 00063000
*                                                                  0185 00064000
*   /*****************************************************************/ 00065000
*   /*                                                               */ 00066000
*   /* IF THE SEQUENCE SET HAS BEEN INVALIDATED BY A CONTROL INTERVAL*/ 00067000
*   /* SPLIT, IT MUST BE REREAD.                                     */ 00068000
*   /*                                                               */ 00069000
*   /*****************************************************************/ 00070000
*                                                                  0186 00071000
*   RBUFC=PLHIBUFC;                 /* POINT TO SEQ SET BUFC         */ 00072000
@RF00180 L     RBUFC,PLHIBUFC(,RPLH)                               0186 00073000
*   IF RBUFC=ZERO|                  /* SEE IF SEQ SET        @X04SVMR*/ 00074000
*       BUFCRRD=ON|                 /* MUST BE REREAD        @X04SVMR*/ 00075000
*       BUFCVAL=OFF|                /* SHR(4) ?              @X04SVMR*/ 00076000
*       BUFCEXC=OFF                 /* NOT UNDER EXCLUSIVE CONTROL 0187 00077000
*                                                            @X04SVMR*/ 00078000
*     THEN                          /* IF SO, COME HERE              */ 00079000
         LTR   RBUFC,RBUFC                                         0187 00080000
         BZ    @RT00187                                            0187 00081000
         TM    BUFCRRD(RBUFC),B'00100000'                          0187 00082000
         BO    @RT00187                                            0187 00083000
         TM    BUFCVAL(RBUFC),B'00000110'                          0187 00084000
         BO    @RF00187                                            0187 00085000
@RT00187 DS    0H                                                  0188 00086000
*     DO;                                                          0188 00087000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB            */ 00088000
         L     @10,RPLDACB(,RRPL)                                  0189 00089000
         L     @10,ACBAMBL(,@10)                                   0189 00090000
         L     RAMB,AMBLIX(,@10)                                   0189 00091000
*       PLHSSR=ON;                  /* INDICATE SEQ SET REQ          */ 00092000
         OI    PLHSSR(RPLH),B'00010000'                            0190 00093000
*       IXSILN=ONE;                 /* SET LEVEL NO.         @ZA02289*/ 00094000
         MVI   IXSILN+200(RPLH),X'01'                              0191 00095000
*       RPARM1=PLHSSRBA;            /* GET DESIRED RBA       @X04SVMR*/ 00096000
         L     RPARM1,PLHSSRBA(,RPLH)                              0192 00097000
*I01:                                                              0193 00098000
*       DO;                         /* IDACALL(IDAGRB)               */ 00099000
I01      DS    0H                                                  0194 00100000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 00101000
         L     @15,@CV01011                                        0194 00102000
         BALR  @14,@15                                             0194 00103000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00104000
         BALR @11,0                                                     00105000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00106000
         USING *,@11                                                    00107000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00108000
         L     @11,=A(@PSTART)                                          00109000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00110000
         USING @PSTART,@11                                              00111000
*       END I01;                    /* CALL BUFFER MANAGER           */ 00112000
*     END;                          /* END, REREAD SEQ SET           */ 00113000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB             */ 00114000
@RF00187 L     @10,RPLDACB(,RRPL)                                  0201 00115000
         L     @10,ACBAMBL(,@10)                                   0201 00116000
         L     RAMB,AMBLDTA(,@10)                                  0201 00117000
*   IF RPLERREG^='00'X THEN                                        0202 00118000
         CLI   RPLERREG(RRPL),0                                    0202 00119000
         BNE   @RT00202                                            0202 00120000
*     GOTO CISPLERR;                /* IF ERROR, EXIT                */ 00121000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC            */ 00122000
         L     RBUFC,PLHDBUFC(,RPLH)                               0204 00123000
*   IF BUFCMW=ON                    /* IF CINV WAS UPDATED,          */ 00124000
*     THEN                          /* WRITE IT BEFORE SPLIT.        */ 00125000
         TM    BUFCMW(RBUFC),B'10000000'                           0205 00126000
         BNO   @RF00205                                            0205 00127000
*I02:                                                              0206 00128000
*     DO;                           /* IDACALL(IDAWRBFR)             */ 00129000
I02      DS    0H                                                  0207 00130000
*       CALL IDAWRBFR;              /* EXIT TO IDAWRBFR              */ 00131000
         L     @15,@CV01014                                        0207 00132000
         BALR  @14,@15                                             0207 00133000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00134000
         BALR @11,0                                                     00135000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00136000
         USING *,@11                                                    00137000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00138000
         L     @11,=A(@PSTART)                                          00139000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00140000
         USING @PSTART,@11                                              00141000
*     END I02;                      /* FORCE OUT WRITES.             */ 00142000
*   ELSE                            /* BUFC MUST WRT NOT ON.         */ 00143000
*     BUFCORBA=BUFCDDDD;            /* MAKE SURE ORBA HAS RBA        */ 00144000
         B     @RC00205                                            0213 00145000
@RF00205 L     @10,BUFCDDDD(,RBUFC)                                0213 00146000
         ST    @10,BUFCORBA(,RBUFC)                                0213 00147000
*   IF PLHRECP=PLHFSP               /* IF AT END OF CI       @ZA10852*/ 00148000
*       &BUFXIRBA=ARDHKRBA THEN     /* & CI AT END OF DS     @ZA10852*/ 00149000
@RC00205 CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0214 00150000
         BNE   @RF00214                                            0214 00151000
         L     @10,PLHARDB(,RPLH)                                  0214 00152000
         CLC   BUFXIRBA(4,RBUFC),ARDHKRBA(@10)                     0214 00153000
         BNE   @RF00214                                            0214 00154000
*     PLHADDTE=ON;                  /* SET ADD TO END ON     @ZA10852*/ 00155000
         OI    PLHADDTE(RPLH),B'00010000'                          0215 00156000
*   ELSE                            /* IF NONE OF THE ABOVE  @ZA10852*/ 00157000
*     PLHADDTE=OFF;                 /* SET ADD TO END OFF    @ZA10852*/ 00158000
         B     @RC00214                                            0216 00159000
@RF00214 NI    PLHADDTE(RPLH),B'11101111'                          0216 00160000
*/*  AT THIS POINT ALL WRITES HAVE BEEN DONE.  CONTROL INTERVALS OR     00161000
*    CONTROL AREAS WILL BE SPLIT (IF NECESSARY) UNTIL A CALL TO DATA    00162000
*    INSERT IS MADE THAT RESULTS IN THE DATA RECORD BEING INSERTED 0217 00163000
*    (PLHCIINS SET ON).                                              */ 00164000
*                                                                  0217 00165000
*   DO WHILE PLHCIINS=OFF;          /* SPLIT CINVS UNTIL INS.        */ 00166000
@RC00214 B     @DE00217                                            0217 00167000
@DL00217 DS    0H                                                  0218 00168000
*/*  DETERMINE NUMBER OF FREE CONTROL INTERVALS IN THE CONTROL AREA.    00169000
*    IF THIS IS A SEQUENTIAL INSERT, ALLOW FOR FREE SPACE IN TESTING    00170000
*    FOR ENOUGH SPACE IN THE CONTROL AREA.  IF NOT ENOUGH FREE CONTROL  00171000
*    INTERVALS, THE CONTROL AREA MUST BE SPLIT.                      */ 00172000
*                                                                  0218 00173000
*     RFY                                                          0218 00174000
*      (RWORK1,                                                    0218 00175000
*       RWORK2) RSTD;               /* GET WORK REGISTERS    @X04SVMR*/ 00176000
*     RBUFC=PLHIBUFC;               /* POINT TO SEQ SET              */ 00177000
         L     RBUFC,PLHIBUFC(,RPLH)                               0219 00178000
*     RWORK2=IXHFSO;                /* PTR TO END OF FS ENTRIE       */ 00179000
         L     @10,BUFCBAD(,RBUFC)                                 0220 00180000
         LH    RWORK2,IXHFSO(,@10)                                 0220 00181000
*     RPARM1=(RWORK2-LENGTH(IDAIXH))/* LENGTH OF FS ENTRIES          */ 00182000
*         /(IXHFLPLN-TWO);          /* DIVIDED BY ENTRY LENGTH       */ 00183000
         LR    RPARM1,RWORK2                                       0221 00184000
         SL    RPARM1,@CF00085                                     0221 00185000
         SLR   @07,@07                                             0221 00186000
         IC    @07,IXHFLPLN(,@10)                                  0221 00187000
         BCTR  @07,0                                               0221 00188000
         BCTR  @07,0                                               0221 00189000
         LR    @09,RPARM1                                          0221 00190000
         SLR   @08,@08                                             0221 00191000
         DR    @08,@07                                             0221 00192000
         LR    RPARM1,@09                                          0221 00193000
*     IF AMBSIS=ON|                 /* IF SEQ. INSERT AND ADDING TO     00194000
*                                      THE END OF CI ON NON-UPDATE 0222 00195000
*                                                            @ZA07541*/ 00196000
*         (RPLSEQ=ON&RPLUPD=OFF&PLHADDTE=ON) THEN/*          @ZA07541*/ 00197000
         TM    AMBSIS(RAMB),B'00000100'                            0222 00198000
         BO    @RT00222                                            0222 00199000
         TM    RPLSEQ(RRPL),B'00100000'                            0222 00200000
         BNO   @RF00222                                            0222 00201000
         TM    RPLUPD(RRPL),B'00000010'                            0222 00202000
         BNZ   @RF00222                                            0222 00203000
         TM    PLHADDTE(RPLH),B'00010000'                          0222 00204000
         BNO   @RF00222                                            0222 00205000
@RT00222 DS    0H                                                  0223 00206000
*       RPARM1=RPARM1-AMDFSCA;      /* LEAVE FREE SPACE              */ 00207000
         L     @10,AMBDSB(,RAMB)                                   0223 00208000
         SH    RPARM1,AMDFSCA(,@10)                                0223 00209000
*     IF ONE>RPARM1                 /* SEE IF ENOUGH ROOM IN CA      */ 00210000
*       THEN                        /* IF NOT, SPLIT CA              */ 00211000
@RF00222 LA    @10,1                                               0224 00212000
         CR    RPARM1,@10                                          0224 00213000
         BNL   @RF00224                                            0224 00214000
*       DO;                                                        0225 00215000
*         RPARM1=ONE;               /* ONE CI TO INSERT      @X04SVMR*/ 00216000
         LR    RPARM1,@10                                          0226 00217000
*I03:                                                              0227 00218000
*         DO;                       /* IDACALL(IDA019RF)             */ 00219000
I03      DS    0H                                                  0228 00220000
*           CALL IDA019RF;          /* EXIT TO IDA019RF              */ 00221000
         L     @15,@CV01016                                        0228 00222000
         BALR  @14,@15                                             0228 00223000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00224000
         BALR @11,0                                                     00225000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00226000
         USING *,@11                                                    00227000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00228000
         L     @11,=A(@PSTART)                                          00229000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00230000
         USING @PSTART,@11                                              00231000
*         END I03;                  /* CALL CA SPLIT         @X04SVMR*/ 00232000
*         IF RPLERREG^='00'X|       /* IF ERROR              @ZA10890*/ 00233000
*             RPARM1^=ZERO THEN     /* IF INSERT OR SPLIT    @ZA10890*/ 00234000
         CLI   RPLERREG(RRPL),0                                    0234 00235000
         BNE   @RT00234                                            0234 00236000
         LTR   RPARM1,RPARM1                                       0234 00237000
         BZ    @RF00234                                            0234 00238000
@RT00234 DS    0H                                                  0235 00239000
*           DO;                     /* NOT REQUIRED          @ZA10890*/ 00240000
*             IF RPLERREG='00'X&    /* IF NO ERROR           @ZA24733*/ 00241000
*                 RPARM1^=0 THEN    /* IF SPLIT NOT REQD     @ZA24733*/ 00242000
         CLI   RPLERREG(RRPL),0                                    0236 00243000
         BNE   @RF00236                                            0236 00244000
         LTR   RPARM1,RPARM1                                       0236 00245000
         BZ    @RF00236                                            0236 00246000
*               CALL IDAREPOS;      /* REPOSITION PLH        @ZA10890*/ 00247000
         L     @15,@CA01045                                        0237 00248000
         BALR  @14,@15                                             0237 00249000
*             GO TO CISPLERR;       /* EXIT FROM MODULE.     @ZA10890*/ 00250000
         B     CISPLERR                                            0238 00251000
*           END;                    /*                       @ZA10890*/ 00252000
*         RBUFC=PLHIBUFC;           /* POINT TO INDEX BUFC           */ 00253000
@RF00234 L     RBUFC,PLHIBUFC(,RPLH)                               0240 00254000
*         RWORK2=IXHFSO;            /* PTR TO END OF FS              */ 00255000
         L     @10,BUFCBAD(,RBUFC)                                 0241 00256000
         LH    RWORK2,IXHFSO(,@10)                                 0241 00257000
*       END;                        /* END OF CA SPLIT CALL          */ 00258000
*/*  DETERMINE THE RBA OF THE NEXT FREE CONTROL INTERVAL.            */ 00259000
*                                                                  0243 00260000
*     RWORK1=RWORK2-IXHFLPLN+TWO+BUFCBAD;/* 1ST FREE CI              */ 00261000
@RF00224 L     @10,BUFCBAD(,RBUFC)                                 0243 00262000
         LR    RWORK1,RWORK2                                       0243 00263000
         SLR   @07,@07                                             0243 00264000
         IC    @07,IXHFLPLN(,@10)                                  0243 00265000
         SLR   RWORK1,@07                                          0243 00266000
         AL    RWORK1,@CF00076                                     0243 00267000
         ALR   RWORK1,@10                                          0243 00268000
*     RWORK2=IXHPTLS;               /* GET RBA PTR MASK              */ 00269000
         SLR   RWORK2,RWORK2                                       0244 00270000
         IC    RWORK2,IXHPTLS(,@10)                                0244 00271000
*     GEN(EX   RWORK2,ICMINS);      /* GET RBA MULTIPLIER            */ 00272000
         EX   RWORK2,ICMINS                                             00273000
*     DIWSAVE3=IXHBRBA+AMDCINV*RWORK2;/* GET DATA CINV RBA           */ 00274000
         L     @10,AMBIWA(,RAMB)                                   0246 00275000
         L     @07,BUFCBAD(,RBUFC)                                 0246 00276000
         L     @15,AMBDSB(,RAMB)                                   0246 00277000
         LR    @09,RWORK2                                          0246 00278000
         M     @08,AMDCINV(,@15)                                   0246 00279000
         AL    @09,IXHBRBA(,@07)                                   0246 00280000
         ST    @09,DIWSAVE3(,@10)                                  0246 00281000
*/*  LOCATE THE SPLIT POINT (IF ANY) WITHIN THE CONTROL INTERVAL BASED  00282000
*    ON THE MODE OF INSERT, THE INSERT POINT, AND THE LENGTH OF THE     00283000
*    RECORD TO BE INSERTED.                                          */ 00284000
*                                                                  0247 00285000
*     RBUFC=PLHDBUFC;               /* POINT TO DATA BUFC            */ 00286000
         L     RBUFC,PLHDBUFC(,RPLH)                               0247 00287000
*     SPLTDPTR=ZERO;                /* ZERO SPLIT POINTER            */ 00288000
         SLR   @07,@07                                             0248 00289000
         ST    @07,SPLTDPTR(,@10)                                  0248 00290000
*     IF(PLHRECP^=PLHFSP|           /* IF THE INSERT IS NOT          */ 00291000
*         PLHADDTE=OFF)&            /* TO THE END AND NOT TO         */ 00292000
*         (PLHRECP^=BUFCBAD|(RPLUPD=ON|/* THE MIDDLE OF A CINV OR    */ 00293000
*         (RPLSEQ=OFF&AMBSIS=OFF))) /* IF IT IS A DIR        @X04SVRQ*/ 00294000
*       THEN                        /* INSERT TO THE BEGINNING       */ 00295000
         CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0249 00296000
         BNE   @GL00011                                            0249 00297000
         TM    PLHADDTE(RPLH),B'00010000'                          0249 00298000
         BNZ   @RF00249                                            0249 00299000
@GL00011 CLC   PLHRECP(4,RPLH),BUFCBAD(RBUFC)                      0249 00300000
         BNE   @RT00249                                            0249 00301000
         TM    RPLUPD(RRPL),B'00000010'                            0249 00302000
         BO    @RT00249                                            0249 00303000
         TM    RPLSEQ(RRPL),B'00100000'                            0249 00304000
         BNZ   @RF00249                                            0249 00305000
         TM    AMBSIS(RAMB),B'00000100'                            0249 00306000
         BNZ   @RF00249                                            0249 00307000
@RT00249 DS    0H                                                  0250 00308000
*       DO;                         /* OF A CINV, SPLIT NEEDED       */ 00309000
*                                                                  0250 00310000
*         /***********************************************************/ 00311000
*         /*                                                         */ 00312000
*         /* LOCATE THE POINT AT WHICH THE CINV SHOULD BE SPLIT      */ 00313000
*         /*                                                         */ 00314000
*         /***********************************************************/ 00315000
*                                                                  0251 00316000
*         RFY                                                      0251 00317000
*          (RWORK3) RSTD;           /* GET WORK REGISTER     @X04SVMR*/ 00318000
*                                                                  0251 00319000
*         /***********************************************************/ 00320000
*         /*                                                         */ 00321000
*         /* INITIALIZE THE SPLIT POINTER TO THE INSERT POINT.       */ 00322000
*         /*                                                         */ 00323000
*         /***********************************************************/ 00324000
*                                                                  0252 00325000
*         IF PLHBWD=ON THEN         /* BACKWARD              @ZA02289*/ 00326000
         TM    PLHBWD(RPLH),B'00010000'                            0252 00327000
         BNO   @RF00252                                            0252 00328000
*           DO;                     /* YES                   @ZA02289*/ 00329000
*             DIWHRBA=PLHRDFC;      /* SAVE COUNT            @ZA02289*/ 00330000
         L     @10,AMBIWA(,RAMB)                                   0254 00331000
         LH    @15,PLHRDFC(,RPLH)                                  0254 00332000
         ST    @15,DIWHRBA(,@10)                                   0254 00333000
*             IF PLHRDFP->RDFREPL=ON THEN/* IF COUNT >1      @ZA02289*/ 00334000
         L     @10,PLHRDFP(,RPLH)                                  0255 00335000
         TM    RDFREPL(@10),B'00001000'                            0255 00336000
         BNO   @RF00255                                            0255 00337000
*               PLHRDFC=PLHRDFP->RDFLL-PLHRDFC+/* SET COUNT FOR    0256 00338000
*                                                            @ZA02289*/ 00339000
*                   ONE;            /* FORWARD               @ZA02289*/ 00340000
         LCR   @15,@15                                             0256 00341000
         SLR   @00,@00                                             0256 00342000
         ICM   @00,3,RDFLL(@10)                                    0256 00343000
         ALR   @15,@00                                             0256 00344000
         AL    @15,@CF00046                                        0256 00345000
         STH   @15,PLHRDFC(,RPLH)                                  0256 00346000
*           END;                    /*                       @ZA02289*/ 00347000
@RF00255 DS    0H                                                  0258 00348000
*         SPLTDPTR=PLHRECP;         /* SET DATA PTR FOR SPLIT        */ 00349000
@RF00252 L     @10,AMBIWA(,RAMB)                                   0258 00350000
         L     @00,PLHRECP(,RPLH)                                  0258 00351000
         ST    @00,SPLTDPTR(,@10)                                  0258 00352000
*         RWORK3=PLHRDFP;           /* SET SPLIT RDF PTR             */ 00353000
         L     RWORK3,PLHRDFP(,RPLH)                               0259 00354000
*         SPLTRDFC=PLHRDFC;         /* SET SPLIT RDF COUNT           */ 00355000
         LH    @00,PLHRDFC(,RPLH)                                  0260 00356000
         ST    @00,SPLTRDFC(,@10)                                  0260 00357000
*         IF RWORK3->RDFREPL=OFF THEN/* GET THE LENGTH OF THE        */ 00358000
         TM    RDFREPL(RWORK3),B'00001000'                         0261 00359000
         BNZ   @RF00261                                            0261 00360000
*           RWORK2=RWORK3->RDFLL;   /* DATA RECORD THAT IS           */ 00361000
         SLR   RWORK2,RWORK2                                       0262 00362000
         ICM   RWORK2,3,RDFLL(RWORK3)                              0262 00363000
*         ELSE                      /* TO THE RIGHT OF THE           */ 00364000
*           DO;                     /* INSERT POINT. IT IS           */ 00365000
         B     @RC00261                                            0263 00366000
@RF00261 DS    0H                                                  0264 00367000
*             RWORK1=RWORK3+LENGTH(IDARDF);/* NEEDED IN CASE THE     */ 00368000
         LA    RWORK1,3                                            0264 00369000
         ALR   RWORK1,RWORK3                                       0264 00370000
*             RWORK2=RWORK1->RDFLL; /* SPLIT POINT SEARCH            */ 00371000
         SLR   RWORK2,RWORK2                                       0265 00372000
         ICM   RWORK2,3,RDFLL(RWORK1)                              0265 00373000
*           END;                    /* STARTS FROM THE INSERT        */ 00374000
*         RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* POINT.           */ 00375000
@RC00261 L     @10,AMBDSB(,RAMB)                                   0267 00376000
         L     @10,AMDCINV(,@10)                                   0267 00377000
         L     RWORK1,BUFCBAD(,RBUFC)                              0267 00378000
         ALR   RWORK1,@10                                          0267 00379000
         SL    RWORK1,@CF00197                                     0267 00380000
*/*  FOR SEQUENTIAL INSERT, SPLIT AT THE INSERT POINT.  FOR NON-   0268 00381000
* SEQUENTIAL INSERT, SPLIT AT THE MIDPOINT.                          */ 00382000
*                                                                  0268 00383000
*         IF(RPLSEQ=OFF&AMBSIS=OFF& /* IF NOT A SEQ INS      @X04SVRQ*/ 00384000
*             (RPLRLEN<=AMDCINV-LENGTH(IDARDF)/* AND NOT A SPANNED   */ 00385000
*             -LENGTH(IDACIDF)))    /* RECORD TO BE INSERTED         */ 00386000
*             |RPLUPD=ON THEN       /* OR UPDATE MODE                */ 00387000
         TM    RPLSEQ(RRPL),B'00100000'                            0268 00388000
         BNZ   @GL00016                                            0268 00389000
         TM    AMBSIS(RAMB),B'00000100'                            0268 00390000
         BNZ   @GL00016                                            0268 00391000
         SL    @10,@CF00050                                        0268 00392000
         C     @10,RPLRLEN(,RRPL)                                  0268 00393000
         BNL   @RT00268                                            0268 00394000
@GL00016 TM    RPLUPD(RRPL),B'00000010'                            0268 00395000
         BNO   @RF00268                                            0268 00396000
@RT00268 DS    0H                                                  0269 00397000
*           DO;                     /* COME HERE TO DO CINV SPLIT FOR   00398000
*                                      DIRECT                        */ 00399000
*             ENDPTR=(AMDCINV-RWORK1->CIDFLL+/* SET MAX VALUE FOR    */ 00400000
*                 RPLRLEN+LENGTH(IDARDF)*FIVE)/* SPLIT POINT ASSUMING*/ 00401000
*                 /TWO+BUFCBAD;     /* MAXIMUM RDF EXPANSION         */ 00402000
         L     @10,AMBIWA(,RAMB)                                   0270 00403000
         L     @15,AMBDSB(,RAMB)                                   0270 00404000
         L     @08,AMDCINV(,@15)                                   0270 00405000
         SH    @08,CIDFLL(,RWORK1)                                 0270 00406000
         AL    @08,RPLRLEN(,RRPL)                                  0270 00407000
         AL    @08,@CF00038                                        0270 00408000
         SRDA  @08,32                                              0270 00409000
         D     @08,@CF00076                                        0270 00410000
         L     @08,BUFCBAD(,RBUFC)                                 0270 00411000
         ALR   @09,@08                                             0270 00412000
         ST    @09,ENDPTR(,@10)                                    0270 00413000
*             IF PLHRECP>ENDPTR     /* IF INSERT POINT AFTER         */ 00414000
*               THEN                /* MIDPOINT, START SEARCH        */ 00415000
         C     @09,PLHRECP(,RPLH)                                  0271 00416000
         BNL   @RF00271                                            0271 00417000
*               DO;                 /* AT CINV BEGINNING             */ 00418000
*                 SPLTDPTR=BUFCBAD; /* POINT TO BEGINNING OF         */ 00419000
         ST    @08,SPLTDPTR(,@10)                                  0273 00420000
*                 RWORK3=RWORK1;    /* CINV AND SET RDF PTR          */ 00421000
         LR    RWORK3,RWORK1                                       0274 00422000
*                 CALL NEXTRDF;     /* ADVANCE RDF POINTER           */ 00423000
         BAL   @14,NEXTRDF                                         0275 00424000
*               END;                /* CINV. END OF SCH INIT         */ 00425000
*             RWORK1=SPLTDPTR;      /* WK1 COUNT INCLUDES INS        */ 00426000
*                                                                  0277 00427000
@RF00271 L     @10,AMBIWA(,RAMB)                                   0277 00428000
         L     RWORK1,SPLTDPTR(,@10)                               0277 00429000
*             /*******************************************************/ 00430000
*             /*                                                     */ 00431000
*             /* LOCATE A SPLIT POINT CLOSE TO THE MIDPOINT OF THE   */ 00432000
*             /* CINV.                                               */ 00433000
*             /*                                                     */ 00434000
*             /*******************************************************/ 00435000
*                                                                  0278 00436000
*             DO WHILE RWORK1<ENDPTR;/* SEARCH FOR SPLIT POINT       */ 00437000
         B     @DE00278                                            0278 00438000
@DL00278 DS    0H                                                  0279 00439000
*               IF RWORK1=PLHRECP THEN/* IF AT INSERT POINT, ADD     */ 00440000
         C     RWORK1,PLHRECP(,RPLH)                               0279 00441000
         BNE   @RF00279                                            0279 00442000
*                 RWORK1=RWORK1+RPLRLEN+LENGTH(IDARDF);/* APPROX LEN */ 00443000
         LR    @10,RWORK1                                          0280 00444000
         AL    @10,RPLRLEN(,RRPL)                                  0280 00445000
         AL    @10,@CF00066                                        0280 00446000
         LR    RWORK1,@10                                          0280 00447000
*               ELSE                /* ADD LENGTH FROM RDF IF        */ 00448000
*                 DO;               /* NOT AT INSERT POINT           */ 00449000
         B     @RC00279                                            0281 00450000
@RF00279 DS    0H                                                  0282 00451000
*                   IF RWORK1+RWORK2>ENDPTR THEN/* IF SP WILL BE   0282 00452000
*                                      PASSED,                       */ 00453000
         LR    @10,RWORK1                                          0282 00454000
         ALR   @10,RWORK2                                          0282 00455000
         L     @15,AMBIWA(,RAMB)                                   0282 00456000
         CL    @10,ENDPTR(,@15)                                    0282 00457000
         BH    @RT00282                                            0282 00458000
*                     GO TO SPFOUND;/* EXIT BEFORE ADD               */ 00459000
*                   RWORK1=RWORK1+RWORK2;/* INCREMENT BY REC LENGTH  */ 00460000
         ALR   RWORK1,RWORK2                                       0284 00461000
*                   SPLTDPTR=SPLTDPTR+RWORK2;/* ADD RECORD LENGTH    */ 00462000
         LR    @10,RWORK2                                          0285 00463000
         AL    @10,SPLTDPTR(,@15)                                  0285 00464000
         ST    @10,SPLTDPTR(,@15)                                  0285 00465000
*                   IF SPLTRDFC^=ONE THEN/* IF NOT THE LAST RDF IN   */ 00466000
         L     @10,SPLTRDFC(,@15)                                  0286 00467000
         C     @10,@CF00046                                        0286 00468000
         BE    @RF00286                                            0286 00469000
*                     SPLTRDFC=SPLTRDFC-ONE;/* A GROUP, DECREMENT CNT*/ 00470000
         BCTR  @10,0                                               0287 00471000
         ST    @10,SPLTRDFC(,@15)                                  0287 00472000
*                   ELSE            /* END OF RDF GROUP.             */ 00473000
*                     CALL NEXTRDF; /* ELSE, ADVANCE RDF             */ 00474000
         B     @RC00286                                            0288 00475000
@RF00286 BAL   @14,NEXTRDF                                         0288 00476000
*                 END;              /* END--LENGTH FROM RDF          */ 00477000
@RC00286 DS    0H                                                  0290 00478000
*             END;                  /* END OF SPLIT PT SEARCH        */ 00479000
@RC00279 DS    0H                                                  0290 00480000
@DE00278 L     @10,AMBIWA(,RAMB)                                   0290 00481000
         C     RWORK1,ENDPTR(,@10)                                 0290 00482000
         BL    @DL00278                                            0290 00483000
*           END;                    /* END OF DIRECT CODE            */ 00484000
*                                                                  0291 00485000
*         /***********************************************************/ 00486000
*         /*                                                         */ 00487000
*         /* COME HERE WHEN THE SPLIT POINT HAS BEEN FOUND.          */ 00488000
*         /*                                                         */ 00489000
*         /***********************************************************/ 00490000
*                                                                  0292 00491000
*SPFOUND:                                                          0292 00492000
*         RFY                                                      0292 00493000
*          (RWORK1) UNRSTD;         /* DROP WORK REGISTER            */ 00494000
@RF00268 DS    0H                                                  0292 00495000
SPFOUND  DS    0H                                                  0293 00496000
*/*  DO A SPECIAL TYPE OF SPLIT FOR A LARGE RECORD TO BE INSERTED OR    00497000
*    A LARGE RECORD AT THE BEGINNING OF A CONTROL INTERVAL.          */ 00498000
*                                                                  0293 00499000
*         IF SPLTDPTR=BUFCBAD       /* IF A LARGE RECORD WAS         */ 00500000
*           THEN                    /* AT BEGINNING OF CINV,         */ 00501000
         L     @10,AMBIWA(,RAMB)                                   0293 00502000
         L     @05,BUFCBAD(,RBUFC)                                 0293 00503000
         C     @05,SPLTDPTR(,@10)                                  0293 00504000
         BNE   @RF00293                                            0293 00505000
*           DO;                     /* SPLIT AT INSERT POINT.        */ 00506000
*             IF RPLUPD=ON THEN     /* UPDATE MODE           @ZA02289*/ 00507000
         TM    RPLUPD(RRPL),B'00000010'                            0295 00508000
         BNO   @RF00295                                            0295 00509000
*               DO;                 /* YES                   @ZA02289*/ 00510000
*                 RWORK3=BUFCBAD+AMDCINV-/* POINT TO RDF     @ZA02289*/ 00511000
*                     LENGTH(IDACIDF)-/* OF FIRST RCD        @ZA02289*/ 00512000
*                     LENGTH(IDARDF);/* IN BUFFER            @ZA02289*/ 00513000
         L     @15,AMBDSB(,RAMB)                                   0297 00514000
         LR    RWORK3,@05                                          0297 00515000
         AL    RWORK3,AMDCINV(,@15)                                0297 00516000
         SL    RWORK3,@CF00050                                     0297 00517000
*                 SPLTDPTR=BUFCBAD+RWORK3->RDFLL;/* SET SPLIT PT   0298 00518000
*                                                            @ZA02289*/ 00519000
         SLR   @00,@00                                             0298 00520000
         ICM   @00,3,RDFLL(RWORK3)                                 0298 00521000
         ALR   @05,@00                                             0298 00522000
         ST    @05,SPLTDPTR(,@10)                                  0298 00523000
*                 IF RWORK3->RDFCTNU=ON THEN/* MULTIPLE RDF  @ZA02289*/ 00524000
         TM    RDFCTNU(RWORK3),B'01000000'                         0299 00525000
         BNO   @RF00299                                            0299 00526000
*                   DO;             /* YES                   @ZA02289*/ 00527000
*                     RWORK3=RWORK3-LENGTH(IDARDF);/* POINT TO COUNT    00528000
*                                      RDF                   @ZA02289*/ 00529000
         SL    RWORK3,@CF00066                                     0301 00530000
*                     SPLTRDFC=RWORK3->RDFLL;/* SET SPLIT COUNT    0302 00531000
*                                                            @ZA02289*/ 00532000
         SLR   @05,@05                                             0302 00533000
         ICM   @05,3,RDFLL(RWORK3)                                 0302 00534000
         ST    @05,SPLTRDFC(,@10)                                  0302 00535000
*                   END;            /*                       @ZA02289*/ 00536000
*                 ELSE              /* NOT MULTIPLE RDF      @ZA02289*/ 00537000
*                   SPLTRDFC=ONE;   /* SET COUNT AT 1        @ZA02289*/ 00538000
         B     @RC00299                                            0304 00539000
@RF00299 L     @10,AMBIWA(,RAMB)                                   0304 00540000
         MVC   SPLTRDFC(4,@10),@CF00046                            0304 00541000
*                 IF SPLTRDFC^=ONE THEN/* IS RECORD A MULTIPLE OF =     00542000
*                                      LENGTH                @ZA02289*/ 00543000
@RC00299 L     @10,AMBIWA(,RAMB)                                   0305 00544000
         L     @05,SPLTRDFC(,@10)                                  0305 00545000
         C     @05,@CF00046                                        0305 00546000
         BE    @RF00305                                            0305 00547000
*                   SPLTRDFC=SPLTRDFC-ONE;/* YES, ADJUST COUNT       */ 00548000
         BCTR  @05,0                                               0306 00549000
         ST    @05,SPLTRDFC(,@10)                                  0306 00550000
*                 ELSE              /*                       @ZA02289*/ 00551000
*                   CALL NEXTRDF;   /* ADJUST RDFS           @ZA02289*/ 00552000
         B     @RC00305                                            0307 00553000
@RF00305 BAL   @14,NEXTRDF                                         0307 00554000
*               END;                /*                       @ZA02289*/ 00555000
*             ELSE                  /* NOT UPDATE            @ZA02289*/ 00556000
*               DO;                 /*                       @ZA02289*/ 00557000
         B     @RC00295                                            0309 00558000
@RF00295 DS    0H                                                  0310 00559000
*                 SPLTDPTR=PLHRECP; /* GET THE THREE                 */ 00560000
         L     @10,AMBIWA(,RAMB)                                   0310 00561000
         L     @05,PLHRECP(,RPLH)                                  0310 00562000
         ST    @05,SPLTDPTR(,@10)                                  0310 00563000
*                 RWORK3=PLHRDFP;   /* SPLIT VALUES FROM             */ 00564000
         L     RWORK3,PLHRDFP(,RPLH)                               0311 00565000
*                 SPLTRDFC=PLHRDFC; /* THE PLH.                      */ 00566000
         LH    @05,PLHRDFC(,RPLH)                                  0312 00567000
         ST    @05,SPLTRDFC(,@10)                                  0312 00568000
*               END;                /*                       @ZA02289*/ 00569000
*           END;                    /* END OF BEG. OF CINV           */ 00570000
@RC00295 DS    0H                                                  0315 00571000
*         IF SPLTDPTR=BUFCBAD|      /* IF LARGE RECORD INS TO        */ 00572000
*             SPLTDPTR=PLHFSP THEN  /* BEGINNING OF CINV OR          */ 00573000
@RF00293 L     @10,AMBIWA(,RAMB)                                   0315 00574000
         L     @10,SPLTDPTR(,@10)                                  0315 00575000
         C     @10,BUFCBAD(,RBUFC)                                 0315 00576000
         BE    @RT00315                                            0315 00577000
         C     @10,PLHFSP(,RPLH)                                   0315 00578000
         BNE   @RF00315                                            0315 00579000
@RT00315 DS    0H                                                  0316 00580000
*           SPLTDPTR=ZERO;          /* EOCI, NO SPLIT NEEDED.        */ 00581000
         L     @10,AMBIWA(,RAMB)                                   0316 00582000
         SLR   @05,@05                                             0316 00583000
         ST    @05,SPLTDPTR(,@10)                                  0316 00584000
*       END;                        /* END OF SPLIT NEEDED           */ 00585000
@RF00315 DS    0H                                                  0318 00586000
*     SPLTRDFP=RWORK3;              /* SAVE RDF POINTER              */ 00587000
@RF00249 L     @10,AMBIWA(,RAMB)                                   0318 00588000
         ST    RWORK3,SPLTRDFP(,@10)                               0318 00589000
*/*  GET A WORK BUFFER, MAKE A FREE SPACE CONTROL INTERVAL, AND SET     00590000
*    THE RBA TO THE NEXT FREE CONTROL INTERVAL.                      */ 00591000
*                                                                  0319 00592000
*I04:                                                              0319 00593000
*     DO;                           /* IDACALL(IDAGNFL)              */ 00594000
I04      DS    0H                                                  0320 00595000
*       CALL IDAGNFL;               /* EXIT TO IDAGNFL               */ 00596000
         L     @15,@CV01010                                        0320 00597000
         BALR  @14,@15                                             0320 00598000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00599000
         BALR @11,0                                                     00600000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00601000
         USING *,@11                                                    00602000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00603000
         L     @11,=A(@PSTART)                                          00604000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00605000
         USING @PSTART,@11                                              00606000
*     END I04;                      /* GET A WORK BUFFER             */ 00607000
*     IF RPLERREG^='00'X THEN       /* BUFFER ERROR          @X04SVRQ*/ 00608000
         CLI   RPLERREG(RRPL),0                                    0326 00609000
         BNE   @RT00326                                            0326 00610000
*       GOTO CISPLERR;              /* EXIT.                 @X04SVRQ*/ 00611000
*     BUFCDDDD=DIWSAVE3;            /* SET INPUT RBA                 */ 00612000
         L     @10,AMBIWA(,RAMB)                                   0328 00613000
         L     @10,DIWSAVE3(,@10)                                  0328 00614000
         ST    @10,BUFCDDDD(,RBUFC)                                0328 00615000
*     BUFCORBA=DIWSAVE3;            /* SET OUTPUT RBA                */ 00616000
         ST    @10,BUFCORBA(,RBUFC)                                0329 00617000
*     BUFXIRBA=DIWSAVE3;            /* SET EXCL INPUT RBA    @X04SVMR*/ 00618000
         ST    @10,BUFXIRBA(,RBUFC)                                0330 00619000
*     BUFXORBA=DIWSAVE3;            /* SET EXCL OUTPUT RBA   @ZA17187*/ 00620000
         ST    @10,BUFXORBA(,RBUFC)                                0331 00621000
*     BUFCEXC=ON;                   /* SET BUFC EXCL.        @X04SVRQ*/ 00622000
*     BUFCVAL=ON;                   /* SET BUFFER VALID              */ 00623000
         OI    BUFCEXC(RBUFC),B'00000110'                          0333 00624000
*     CALL BUILDFS;                 /* BUILD FS CINV                 */ 00625000
         BAL   @14,BUILDFS                                         0334 00626000
*/*  SAVE THE INSERT POINT ADDRESS.                                  */ 00627000
*                                                                  0335 00628000
*     DIWSAVE2=PLHRECP-PLHDBUFC->BUFCBAD;/* SAVE INS PT      @ZA31009*/ 00629000
         L     @10,AMBIWA(,RAMB)                                   0335 00630000
         L     @05,PLHDBUFC(,RPLH)                                 0335 00631000
         L     @05,BUFCBAD(,@05)                                   0335 00632000
         L     @00,PLHRECP(,RPLH)                                  0335 00633000
         SLR   @00,@05                                             0335 00634000
         ST    @00,DIWSAVE2(,@10)                                  0335 00635000
*     DIWSAVE5=PLHFSP-PLHDBUFC->BUFCBAD;/* IN CASE CNTL      @ZA31009*/ 00636000
         L     @00,PLHFSP(,RPLH)                                   0336 00637000
         SLR   @00,@05                                             0336 00638000
         ST    @00,DIWSAVE5(,@10)                                  0336 00639000
*     DIWLRBA=PLHRDFP-PLHDBUFC->BUFCBAD;/* AREA SPLIT.       @ZA31009*/ 00640000
         LCR   @05,@05                                             0337 00641000
         AL    @05,PLHRDFP(,RPLH)                                  0337 00642000
         ST    @05,DIWLRBA(,@10)                                   0337 00643000
*     IF PLHBWD=OFF THEN            /* BACKWARD              @ZA02289*/ 00644000
         TM    PLHBWD(RPLH),B'00010000'                            0338 00645000
         BNZ   @RF00338                                            0338 00646000
*       DIWHRBA=PLHRDFC;            /* NO, SET COUNT                 */ 00647000
         LH    @05,PLHRDFC(,RPLH)                                  0339 00648000
         ST    @05,DIWHRBA(,@10)                                   0339 00649000
*     IF SPLTDPTR=ZERO              /* IF NO SPLIT, MOVE             */ 00650000
*       THEN                        /* INSERT POINT.                 */ 00651000
@RF00338 L     @10,AMBIWA(,RAMB)                                   0340 00652000
         L     @10,SPLTDPTR(,@10)                                  0340 00653000
         LTR   @10,@10                                             0340 00654000
         BNZ   @RF00340                                            0340 00655000
*       DO;                                                        0341 00656000
*                                                                  0341 00657000
*         /***********************************************************/ 00658000
*         /*                                                         */ 00659000
*         /* RESET INSERT POINT TO THE BEGINNING OF THE NEWLY-CREATED*/ 00660000
*         /* FREE SPACE CONTROL INTERVAL IF NO SPLIT IS NECESSARY.   */ 00661000
*         /*                                                         */ 00662000
*         /***********************************************************/ 00663000
*                                                                  0342 00664000
*         PLHFSP=BUFCBAD;           /* ALL FS                        */ 00665000
         L     @10,BUFCBAD(,RBUFC)                                 0342 00666000
         ST    @10,PLHFSP(,RPLH)                                   0342 00667000
*         PLHRECP=BUFCBAD;          /* BOCI                          */ 00668000
         ST    @10,PLHRECP(,RPLH)                                  0343 00669000
*         PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* POINT TO CIDF   */ 00670000
         L     @05,AMBDSB(,RAMB)                                   0344 00671000
         AL    @10,AMDCINV(,@05)                                   0344 00672000
         SL    @10,@CF00197                                        0344 00673000
         ST    @10,PLHRDFP(,RPLH)                                  0344 00674000
*       END;                        /* END OF NON-SPLIT CODE         */ 00675000
*                                                                  0345 00676000
*     /***************************************************************/ 00677000
*     /*                                                             */ 00678000
*     /* SPLIT A CONTROL INTERVAL OF DATA                            */ 00679000
*     /*                                                             */ 00680000
*     /***************************************************************/ 00681000
*                                                                  0346 00682000
*     ELSE                          /* HERE FOR CI SPLIT.            */ 00683000
*       DO;                                                        0346 00684000
*                                                                  0346 00685000
         B     @RC00340                                            0346 00686000
@RF00340 DS    0H                                                  0347 00687000
*         /***********************************************************/ 00688000
*         /*                                                         */ 00689000
*         /* COPY HIGH KEY PORTION OF THE DATA TO THE NEW CI.        */ 00690000
*         /*                                                 @ZA31009*/ 00691000
*         /*                                                         */ 00692000
*         /***********************************************************/ 00693000
*                                                                  0347 00694000
*         RFY                                                      0347 00695000
*          (RWORK4,                                                0347 00696000
*           RWORK5) RSTD;           /* GET REGISTERS         @X04SVMR*/ 00697000
*         RWORK3=PLHFSP-SPLTDPTR;   /* AMT OF DATA TO RIGHT          */ 00698000
         L     @10,AMBIWA(,RAMB)                                   0348 00699000
         L     @10,SPLTDPTR(,@10)                                  0348 00700000
         L     RWORK3,PLHFSP(,RPLH)                                0348 00701000
         SLR   RWORK3,@10                                          0348 00702000
*         RPARM1=RWORK3;            /* SAVE LENGTH OF MOVE           */ 00703000
         LR    RPARM1,RWORK3                                       0349 00704000
*         RWORK5=RWORK3;            /* OF SP IN BOTH ODD REGS        */ 00705000
         LR    RWORK5,RWORK3                                       0350 00706000
*         RWORK2=BUFCBAD;           /* RESET NEW CINV PTR            */ 00707000
         L     RWORK2,BUFCBAD(,RBUFC)                              0351 00708000
*         RWORK4=SPLTDPTR;          /* SPLIT POINT                   */ 00709000
         LR    RWORK4,@10                                          0352 00710000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE DATA TO NEW CINV         */ 00711000
*                                                                  0353 00712000
         MVCL  RWORK2,RWORK4                                            00713000
*         /***********************************************************/ 00714000
*         /*                                                         */ 00715000
*         /* ADJUST DATA-RELATED POINTERS IN THE PLH IF NEEDED.      */ 00716000
*         /*                                                         */ 00717000
*         /***********************************************************/ 00718000
*                                                                  0354 00719000
*         IF PLHRECP>SPLTDPTR|(PLHRECP=/* IF INSERT PT IN THE        */ 00720000
*             SPLTDPTR&RPLUPD=ON)   /* NEW CONTROL           @ZA28147*/ 00721000
*           THEN                    /* INTERVAL, RESET RECORD        */ 00722000
         L     @10,PLHRECP(,RPLH)                                  0354 00723000
         L     @05,AMBIWA(,RAMB)                                   0354 00724000
         L     @05,SPLTDPTR(,@05)                                  0354 00725000
         CR    @10,@05                                             0354 00726000
         BH    @RT00354                                            0354 00727000
         CR    @10,@05                                             0354 00728000
         BNE   @RF00354                                            0354 00729000
         TM    RPLUPD(RRPL),B'00000010'                            0354 00730000
         BNO   @RF00354                                            0354 00731000
@RT00354 DS    0H                                                  0355 00732000
*           DO;                     /* AND FREE SPACE POINTERS       */ 00733000
*             PLHRECP=PLHRECP-SPLTDPTR+BUFCBAD;/* NEW REC PTR        */ 00734000
         L     @10,AMBIWA(,RAMB)                                   0356 00735000
         L     @05,PLHRECP(,RPLH)                                  0356 00736000
         SL    @05,SPLTDPTR(,@10)                                  0356 00737000
         L     @10,BUFCBAD(,RBUFC)                                 0356 00738000
         ALR   @05,@10                                             0356 00739000
         ST    @05,PLHRECP(,RPLH)                                  0356 00740000
*             PLHFSP=BUFCBAD+RPARM1;/* SET NEW FS POINTER            */ 00741000
         ALR   @10,RPARM1                                          0357 00742000
         ST    @10,PLHFSP(,RPLH)                                   0357 00743000
*           END;                    /* END OF NEW IP CODE            */ 00744000
*         ELSE                      /* INSERT PT NOT IN NEW CI       */ 00745000
*           PLHFSP=PLHFSP-RPARM1;   /* IF IN OLD, ADJUST FS PTR      */ 00746000
*                                                                  0359 00747000
         B     @RC00354                                            0359 00748000
@RF00354 L     @10,PLHFSP(,RPLH)                                   0359 00749000
         SLR   @10,RPARM1                                          0359 00750000
         ST    @10,PLHFSP(,RPLH)                                   0359 00751000
*         /***********************************************************/ 00752000
*         /*                                                         */ 00753000
*         /* BUILD CIDF IN NEW CI.                           @ZA31009*/ 00754000
*         /*                                                         */ 00755000
*         /***********************************************************/ 00756000
*                                                                  0360 00757000
*         RWORK2=BUFCBAD;           /* RESET NEW CINV POINTER        */ 00758000
@RC00354 L     RWORK2,BUFCBAD(,RBUFC)                              0360 00759000
*         RWORK3=RWORK2+AMDCINV-LENGTH(IDACIDF);/* NEW CIDF          */ 00760000
         LA    @10,4                                               0361 00761000
         L     @05,AMBDSB(,RAMB)                                   0361 00762000
         L     @05,AMDCINV(,@05)                                   0361 00763000
         LR    RWORK3,RWORK2                                       0361 00764000
         ALR   RWORK3,@05                                          0361 00765000
         SLR   RWORK3,@10                                          0361 00766000
*         RFY                                                      0362 00767000
*           IDACIDF BASED(RWORK3);  /* DEFINE CIDF BASE              */ 00768000
*         CIDFLL=CIDFLL-RPARM1;     /* SPACE IN NEW                  */ 00769000
         LH    @00,CIDFLL(,RWORK3)                                 0363 00770000
         SLR   @00,RPARM1                                          0363 00771000
         STH   @00,CIDFLL(,RWORK3)                                 0363 00772000
*         CIDFOSET=RPARM1;          /* SET FS OFFSET                 */ 00773000
         STH   RPARM1,CIDFOSET(,RWORK3)                            0364 00774000
*         RWORK4=PLHDBUFC->BUFCBAD+AMDCINV-LENGTH(IDACIDF);        0365 00775000
         L     @15,PLHDBUFC(,RPLH)                                 0365 00776000
         L     @15,BUFCBAD(,@15)                                   0365 00777000
         ALR   @05,@15                                             0365 00778000
         SLR   @05,@10                                             0365 00779000
         LR    RWORK4,@05                                          0365 00780000
*         RFY                                                      0366 00781000
*           IDACIDF BASED(RWORK4);  /* POINT TO OLD CINV CIDF        */ 00782000
*                                                                  0366 00783000
*         /***********************************************************/ 00784000
*         /*                                                         */ 00785000
*         /* INITIALIZE RDF POINTERS.                        @ZA31009*/ 00786000
*         /*                                                         */ 00787000
*         /***********************************************************/ 00788000
*                                                                  0367 00789000
*         RWORK2=CIDFLL+CIDFOSET+PLHDBUFC->BUFCBAD;/* A(LAST RDF)    */ 00790000
         LH    RWORK2,CIDFLL(,RWORK4)                              0367 00791000
         AH    RWORK2,CIDFOSET(,RWORK4)                            0367 00792000
         ALR   RWORK2,@15                                          0367 00793000
*         DIWSAVE3=RWORK2;          /* SAVE FOR RDF MOVE     @ZA31009*/ 00794000
         L     @10,AMBIWA(,RAMB)                                   0368 00795000
         ST    RWORK2,DIWSAVE3(,@10)                               0368 00796000
*         RFY                                                      0369 00797000
*           RWORK1 RSTD;            /* GET WORK REGISTER             */ 00798000
*         RWORK1=SPLTRDFP;          /* GET A(SPLIT RDF)              */ 00799000
         L     RWORK1,SPLTRDFP(,@10)                               0370 00800000
*         RWORK5=RWORK1-RWORK2;     /* GET TOTAL RDF LENGTH          */ 00801000
         LR    RWORK5,RWORK1                                       0371 00802000
         SLR   RWORK5,RWORK2                                       0371 00803000
*         RWORK2=RWORK3;            /* PTR TO END OF RDFS            */ 00804000
*                                                                  0372 00805000
         LR    RWORK2,RWORK3                                       0372 00806000
*         /***********************************************************/ 00807000
*         /*                                                         */ 00808000
*         /* COPY THE RDFS REPRESENTING THE DATA SPLIT OFF TO THE NEW*/ 00809000
*         /* CI. STEP 1.) COPY THE RDF AT THE SPLIT POINT. STEP 2.)  */ 00810000
*         /* COPY THE RDFS TO THE LEFT OF THE SPLIT POINT. STEP 1 - -*/ 00811000
*         /* IF THE INSERT POINT FALLS AT A GROUP RDF, COPY THE RDF  */ 00812000
*         /* TO THE NEW CONTROL INTERVAL AND SET ITS COUNT. IF THE   */ 00813000
*         /* COUNT IS ONE, CONVERT IT TO A SINGLE RDF. IF THE OLD    */ 00814000
*         /* GROUP RDF COUNT GOES TO ONE IT MUST BE CONVERTED TO A   */ 00815000
*         /* SINGLE RDF AND IF IT GOES TO ZERO (AT BEGINNING OF THE  */ 00816000
*         /* GROUP) ELIMINATE IT COMPLETELY. ADJUST THE RDF POINTER  */ 00817000
*         /* AND THE RDF COUNT IN THE PLACEHOLDER.                   */ 00818000
*         /*                                                         */ 00819000
*         /***********************************************************/ 00820000
*                                                                  0373 00821000
*         IF RWORK1->RDFREPL=ON     /* IF SPLIT IS AT GROUP          */ 00822000
*           THEN                    /* RDF, COUNTS MUST BE           */ 00823000
         TM    RDFREPL(RWORK1),B'00001000'                         0373 00824000
         BNO   @RF00373                                            0373 00825000
*           DO;                     /* RESET                         */ 00826000
*             RWORK2=RWORK2-LENGTH(GRPRDF);/* POINT TO NEW RDF       */ 00827000
         SL    RWORK2,@CF00356                                     0375 00828000
*             RWORK2->GRPRDF=RWORK1->GRPRDF;/* COPY GROUP RDF        */ 00829000
         MVC   GRPRDF(6,RWORK2),GRPRDF(RWORK1)                     0376 00830000
*             RWORK2->RDFLL=SPLTRDFC;/* NEW CNT                      */ 00831000
         L     @10,SPLTRDFC(,@10)                                  0377 00832000
         STCM  @10,3,RDFLL(RWORK2)                                 0377 00833000
*             IF RWORK2->RDFLL=ONE  /* IF NEW RDF IS A SINGLE        */ 00834000
*               THEN                /* ONE, CONVERT IT               */ 00835000
         C     @10,@CF00046                                        0378 00836000
         BNE   @RF00378                                            0378 00837000
*               DO;                                                0379 00838000
*                 RWORK2->IDARDF=ZERO;/* CLEAR 1ST RDF       @ZA02289*/ 00839000
         SLR   @10,@10                                             0380 00840000
         STCM  @10,7,IDARDF(RWORK2)                                0380 00841000
*                 RWORK2=RWORK2+LENGTH(IDARDF);/* PTR TO 2ND RDF     */ 00842000
         LA    @10,3                                               0381 00843000
         ALR   RWORK2,@10                                          0381 00844000
*                 RWORK2->RDFREPL=OFF;/* INDICATE A NON-GROUP        */ 00845000
*                 RWORK2->RDFCTNU=OFF;/* RDF.                        */ 00846000
         NI    RDFREPL(RWORK2),B'10110111'                         0383 00847000
*                 RPARM1=LENGTH(IDARDF);/* GET FS DECREMENT          */ 00848000
         LR    RPARM1,@10                                          0384 00849000
*               END;                /* END OF SINGLE RDF             */ 00850000
*             ELSE                  /* NOT SINGLE RDF.               */ 00851000
*               RPARM1=LENGTH(GRPRDF);/* GET FS DECREMENT            */ 00852000
*                                                                  0386 00853000
         B     @RC00378                                            0386 00854000
@RF00378 LA    RPARM1,6                                            0386 00855000
*             /*******************************************************/ 00856000
*             /*                                                     */ 00857000
*             /* ADJUST CIDF IN NEW CI TO REFLECT RDF COPIED OVER.   */ 00858000
*             /*                                             @ZA31009*/ 00859000
*             /*                                                     */ 00860000
*             /*******************************************************/ 00861000
*                                                                  0387 00862000
*             RWORK3->CIDFLL=RWORK3->CIDFLL-RPARM1;/* SET FS         */ 00863000
*                                                                  0387 00864000
@RC00378 LH    @10,CIDFLL(,RWORK3)                                 0387 00865000
         SLR   @10,RPARM1                                          0387 00866000
         STH   @10,CIDFLL(,RWORK3)                                 0387 00867000
*             /*******************************************************/ 00868000
*             /*                                                     */ 00869000
*             /* ADJUST RDF POINTER AND COUNTER IN THE PLH IF NEEDED.*/ 00870000
*             /*                                                     */ 00871000
*             /*******************************************************/ 00872000
*                                                                  0388 00873000
*             IF PLHRDFP=RWORK1     /* IF INSERT POINT RDF IS        */ 00874000
*               THEN                /* INVOLVED, ADJUST IT TOO       */ 00875000
         C     RWORK1,PLHRDFP(,RPLH)                               0388 00876000
         BNE   @RF00388                                            0388 00877000
*               DO;                                                0389 00878000
*                                                                  0389 00879000
*                 /***************************************************/ 00880000
*                 /*                                                 */ 00881000
*                 /* DETERMINE PLHRDFP ADJUSTMENT FACTOR     @ZA31009*/ 00882000
*                 /*                                                 */ 00883000
*                 /***************************************************/ 00884000
*                                                                  0390 00885000
*                 RPARM1=ZERO;      /* ASSUME ZERO           @ZA31009*/ 00886000
*                                                                  0390 00887000
         SLR   RPARM1,RPARM1                                       0390 00888000
*                 /***************************************************/ 00889000
*                 /*                                                 */ 00890000
*                 /* DETERMINE WHAT THE REPL COUNT WILL BE   @ZA31009*/ 00891000
*                 /*                                                 */ 00892000
*                 /***************************************************/ 00893000
*                                                                  0391 00894000
*                 RWORK3=RWORK1->RDFLL-SPLTRDFC;/*           @ZA31009*/ 00895000
         L     @10,AMBIWA(,RAMB)                                   0391 00896000
         SLR   RWORK3,RWORK3                                       0391 00897000
         ICM   RWORK3,3,RDFLL(RWORK1)                              0391 00898000
         SL    RWORK3,SPLTRDFC(,@10)                               0391 00899000
*                 IF RWORK3=ONE THEN/* IF REPL WILL SWITCH TO      0392 00900000
*                                                            @ZA31009*/ 00901000
         C     RWORK3,@CF00046                                     0392 00902000
         BNE   @RF00392                                            0392 00903000
*                   RPARM1=LENGTH(IDARDF);/* NONREPL, USE 3  @ZA31009*/ 00904000
         LA    RPARM1,3                                            0393 00905000
*                 ELSE              /* REPL COUNT NOT 1      @ZA31009*/ 00906000
*                   IF RWORK3=ZERO THEN/* IF GROUP RDF WILL  @ZA31009*/ 00907000
         B     @RC00392                                            0394 00908000
@RF00392 LTR   RWORK3,RWORK3                                       0394 00909000
         BNZ   @RF00394                                            0394 00910000
*                     RPARM1=LENGTH(GRPRDF);/* GO, USE 6     @ZA31009*/ 00911000
         LA    RPARM1,6                                            0395 00912000
*                 PLHRDFP=RWORK1+RPARM1;/* NEW PLH RDF PTR           */ 00913000
@RF00394 DS    0H                                                  0396 00914000
@RC00392 LR    @10,RWORK1                                          0396 00915000
         ALR   @10,RPARM1                                          0396 00916000
         ST    @10,PLHRDFP(,RPLH)                                  0396 00917000
*                 IF PLHRDFC>SPLTRDFC/* WAS INSERT RDF MOVED @ZA31009*/ 00918000
*                   THEN            /* TO NEW CONTROL INTERVAL       */ 00919000
         LH    @10,PLHRDFC(,RPLH)                                  0397 00920000
         L     @15,AMBIWA(,RAMB)                                   0397 00921000
         L     @15,SPLTRDFC(,@15)                                  0397 00922000
         CR    @10,@15                                             0397 00923000
         BNH   @RF00397                                            0397 00924000
*                   PLHRDFC=PLHRDFC-SPLTRDFC;/* YES, NEW PLH RDFC  0398 00925000
*                                                            @ZA31009*/ 00926000
         SLR   @10,@15                                             0398 00927000
         STH   @10,PLHRDFC(,RPLH)                                  0398 00928000
*                 ELSE              /* INSERT RDF NOT MOVED.         */ 00929000
*                   IF PLHRDFC<SPLTRDFC|/* SET NEW RDF PTR   @ZA31009*/ 00930000
*                       (PLHRDFC=SPLTRDFC&RPLUPD=ON) THEN/*  @ZA31009*/ 00931000
         B     @RC00397                                            0399 00932000
@RF00397 LH    @10,PLHRDFC(,RPLH)                                  0399 00933000
         L     @15,AMBIWA(,RAMB)                                   0399 00934000
         L     @15,SPLTRDFC(,@15)                                  0399 00935000
         CR    @10,@15                                             0399 00936000
         BL    @RT00399                                            0399 00937000
         CR    @10,@15                                             0399 00938000
         BNE   @RF00399                                            0399 00939000
         TM    RPLUPD(RRPL),B'00000010'                            0399 00940000
         BNO   @RF00399                                            0399 00941000
@RT00399 DS    0H                                                  0400 00942000
*                     PLHRDFP=RWORK2;/* NEW RDF PTR ALSO             */ 00943000
         ST    RWORK2,PLHRDFP(,RPLH)                               0400 00944000
*               END;                /* END OF IP = SP CODE           */ 00945000
*             ELSE                  /* RDF PTR NOT AT SPLIT RDF.     */ 00946000
*               IF PLHRDFP<RWORK1 THEN/* IF RDF IN NEW CINV  @ZA31009*/ 00947000
         B     @RC00388                                            0402 00948000
@RF00388 L     @10,PLHRDFP(,RPLH)                                  0402 00949000
         CR    @10,RWORK1                                          0402 00950000
         BNL   @RF00402                                            0402 00951000
*                 PLHRDFP=PLHRDFP-RWORK1+RWORK2;/* NEW RDF PTR     0403 00952000
*                                                            @ZA31009*/ 00953000
         SLR   @10,RWORK1                                          0403 00954000
         ALR   @10,RWORK2                                          0403 00955000
         ST    @10,PLHRDFP(,RPLH)                                  0403 00956000
*           END;                    /* END OF SPLIT GROUP RDF        */ 00957000
*                                                                  0404 00958000
*         /***********************************************************/ 00959000
*         /*                                                         */ 00960000
*         /* IF SPLITTING AT A SINGLE RDF, INCLUDE THE RDF TO THE    */ 00961000
*         /* RIGHT OF THE SPLIT POINT IN THE MOVE AND ADJUST THE RDF */ 00962000
*         /* POINTER IN THE PLACEHOLDER.                             */ 00963000
*         /*                                                         */ 00964000
*         /***********************************************************/ 00965000
*                                                                  0405 00966000
*         ELSE                      /* HERE IF NON-GROUP RDF         */ 00967000
*           DO;                                                    0405 00968000
         B     @RC00373                                            0405 00969000
@RF00373 DS    0H                                                  0406 00970000
*             RWORK5=RWORK5+LENGTH(IDARDF);/* INCLUDE RDF POINTED    */ 00971000
         LA    @10,3                                               0406 00972000
         ALR   RWORK5,@10                                          0406 00973000
*             IF RWORK1=PLHRDFP     /* IF IP = SP, RESET PLH         */ 00974000
*                 &RPLUPD=OFF THEN  /*                       @ZA02289*/ 00975000
         C     RWORK1,PLHRDFP(,RPLH)                               0407 00976000
         BNE   @RF00407                                            0407 00977000
         TM    RPLUPD(RRPL),B'00000010'                            0407 00978000
         BNZ   @RF00407                                            0407 00979000
*               PLHRDFP=RWORK1+LENGTH(IDARDF);/* ADJUST PTR          */ 00980000
         ALR   @10,RWORK1                                          0408 00981000
         ST    @10,PLHRDFP(,RPLH)                                  0408 00982000
*             ELSE                  /* IP ^= SP.                     */ 00983000
*               IF PLHRDFP^>RWORK1 THEN/* SEE IF RDF IN NEW CINV   0409 00984000
*                                                            @ZA02289*/ 00985000
         B     @RC00407                                            0409 00986000
@RF00407 L     @10,PLHRDFP(,RPLH)                                  0409 00987000
         CR    @10,RWORK1                                          0409 00988000
         BH    @RF00409                                            0409 00989000
*                 PLHRDFP=PLHRDFP-RWORK1+RWORK2-LENGTH(IDARDF);/* NEW*/ 00990000
         SLR   @10,RWORK1                                          0410 00991000
         ALR   @10,RWORK2                                          0410 00992000
         SL    @10,@CF00066                                        0410 00993000
         ST    @10,PLHRDFP(,RPLH)                                  0410 00994000
*           END;                    /* END OF NON-GROUP RDF          */ 00995000
*                                                                  0411 00996000
@RF00409 DS    0H                                                  0411 00997000
@RC00407 DS    0H                                                  0412 00998000
*         /***********************************************************/ 00999000
*         /*                                                         */ 01000000
*         /* STEP 2) COPY RDFS TO THE LEFT OF THE SPLIT POINT.       */ 01001000
*         /*                                                 @ZA31009*/ 01002000
*         /*                                                         */ 01003000
*         /***********************************************************/ 01004000
*                                                                  0412 01005000
*         IF RWORK5>ZERO THEN       /* IS THERE A LENGTH?    @ZA31009*/ 01006000
@RC00373 LTR   RWORK5,RWORK5                                       0412 01007000
         BNP   @RF00412                                            0412 01008000
*           DO;                     /* YES DATA WILL ACTUALLY BE   0413 01009000
*                                      MOVED.                @ZA31009*/ 01010000
*             RWORK2=RWORK2-RWORK5; /* SET UP TO ADDRESS             */ 01011000
         SLR   RWORK2,RWORK5                                       0414 01012000
*             RWORK4=DIWSAVE3;      /* SET UP FROM ADDRESS   @ZA31009*/ 01013000
         L     @10,AMBIWA(,RAMB)                                   0415 01014000
         L     RWORK4,DIWSAVE3(,@10)                               0415 01015000
*             RWORK3=RWORK5;        /* GET LENGTH OF RDFS            */ 01016000
         LR    RWORK3,RWORK5                                       0416 01017000
*             RPARM1=RWORK3;        /* SAVE LENGTH                   */ 01018000
         LR    RPARM1,RWORK3                                       0417 01019000
*             GEN(MVCL  RWORK2,RWORK4);/* MOVE RDFS TO NEW CINV      */ 01020000
         MVCL  RWORK2,RWORK4                                            01021000
*             RWORK3=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* NEW CIDF PTR.   01022000
*                                                            @ZA31009*/ 01023000
         L     @10,AMBDSB(,RAMB)                                   0419 01024000
         L     RWORK3,BUFCBAD(,RBUFC)                              0419 01025000
         AL    RWORK3,AMDCINV(,@10)                                0419 01026000
         SL    RWORK3,@CF00197                                     0419 01027000
*             RWORK3->CIDFLL=RWORK3->CIDFLL-RPARM1;/* NEW FS VALUE   */ 01028000
         LH    @10,CIDFLL(,RWORK3)                                 0420 01029000
         SLR   @10,RPARM1                                          0420 01030000
         STH   @10,CIDFLL(,RWORK3)                                 0420 01031000
*           END;                    /* END OF NON-ZERO LENGTH      0421 01032000
*                                      DETECTION GROUP.      @ZA31009*/ 01033000
*         RFY                                                      0422 01034000
*           IDACIDF;                /* DROP CIDF BASE        @X04SVMR*/ 01035000
@RF00412 DS    0H                                                  0423 01036000
*         RFY                                                      0423 01037000
*          (RWORK2,                                                0423 01038000
*           RWORK4,                                                0423 01039000
*           RWORK5) UNRSTD;         /* DROP REGISTERS        @X04SVMR*/ 01040000
*       END;                        /* END OF SPLIT CINV             */ 01041000
*     PLHCIINS=ON;                  /* INDICATE INS DONE     @X04SVMR*/ 01042000
*                                                                  0425 01043000
@RC00340 OI    PLHCIINS(RPLH),B'00000100'                          0425 01044000
*     /***************************************************************/ 01045000
*     /*                                                             */ 01046000
*     /* IF THE RECORD TO BE INSERTED IS NOT SPANNED,        @X04SVMR*/ 01047000
*     /* AND INSERT IS TO NEW CINV, INSERT                   @ZA31009*/ 01048000
*     /*                                                             */ 01049000
*     /***************************************************************/ 01050000
*                                                                  0426 01051000
*     IF RPLRLEN<=AMDCINV-LENGTH(IDARDF)-LENGTH(IDACIDF)&RPLUPD=OFF     01052000
*       THEN                        /* NOT SPANNED           @ZA02289*/ 01053000
         L     @10,AMBDSB(,RAMB)                                   0426 01054000
         L     @10,AMDCINV(,@10)                                   0426 01055000
         LR    @06,@10                                             0426 01056000
         SL    @06,@CF00050                                        0426 01057000
         C     @06,RPLRLEN(,RRPL)                                  0426 01058000
         BL    @RF00426                                            0426 01059000
         TM    RPLUPD(RRPL),B'00000010'                            0426 01060000
         BNZ   @RF00426                                            0426 01061000
*       DO;                                                        0427 01062000
*         RWORK1=BUFCBAD;           /* POINTER TO NEW CINV           */ 01063000
         L     RWORK1,BUFCBAD(,RBUFC)                              0428 01064000
*         IF PLHRECP>=RWORK1&       /* IF INSERT IS IN NEW           */ 01065000
*             PLHRECP<RWORK1+AMDCINV/* CINV, THEN SWAP               */ 01066000
*           THEN                    /* BUFFERS AND INSERT            */ 01067000
         L     @06,PLHRECP(,RPLH)                                  0429 01068000
         CR    @06,RWORK1                                          0429 01069000
         BL    @RF00429                                            0429 01070000
         ALR   @10,RWORK1                                          0429 01071000
         CR    @06,@10                                             0429 01072000
         BNL   @RF00429                                            0429 01073000
*           DO;                                                    0430 01074000
*             RWORK3=PLHDBUFC;      /* ORIGINAL DATA BUFC            */ 01075000
         L     RWORK3,PLHDBUFC(,RPLH)                              0431 01076000
*             PLHDBUFC=RBUFC;       /* INSERT BUFC                   */ 01077000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0432 01078000
*             DIWBUFC=RWORK3;       /* PLH BUFC                      */ 01079000
         L     @10,AMBIWA(,RAMB)                                   0433 01080000
         ST    RWORK3,DIWBUFC(,@10)                                0433 01081000
*             RFY                                                  0434 01082000
*               RWORK3 UNRSTD;      /* DROP WORK REGISTER    @X04SVMR*/ 01083000
*I05:                                                              0435 01084000
*             DO;                   /* IDACALL(IDA019RM)             */ 01085000
I05      DS    0H                                                  0436 01086000
*               CALL IDA019RM;      /* EXIT TO IDA019RM              */ 01087000
         L     @15,@CV01018                                        0436 01088000
         BALR  @14,@15                                             0436 01089000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01090000
         BALR @11,0                                                     01091000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01092000
         USING *,@11                                                    01093000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01094000
         L     @11,=A(@PSTART)                                          01095000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01096000
         USING @PSTART,@11                                              01097000
*             END I05;              /* CALL DATA INSERT              */ 01098000
*                                                                  0441 01099000
*             /*******************************************************/ 01100000
*             /*                                                     */ 01101000
*             /* IF DATA INSERT RETURNS A NO FIT CODE RESET THE      */ 01102000
*             /* INSERT DONE FLAG SO ANOTHER CONTROL INTERVAL SPLIT  */ 01103000
*             /* WILL OCCUR IN ORDER TO GET ROOM FOR THE RECORD. CALL*/ 01104000
*             /* INDEX INSERT REGARDLESS OF WHETHER OR NOT THE DATA  */ 01105000
*             /* RECORD IS INSERTED IN ORDER TO REFLECT THE NEWLY    */ 01106000
*             /* CREATED DATA CONTROL INTERVAL IN THE INDEX.         */ 01107000
*             /*                                                     */ 01108000
*             /*******************************************************/ 01109000
*                                                                  0442 01110000
*             RFY                                                  0442 01111000
*               R15 RSTD;           /* SAVE RETURN CODE              */ 01112000
*             IF R15^=ZERO THEN     /* IF RECORD TOO BIG,            */ 01113000
         LTR   R15,R15                                             0443 01114000
         BZ    @RF00443                                            0443 01115000
*               PLHCIINS=OFF;       /* NO INSERT YET                 */ 01116000
         NI    PLHCIINS(RPLH),B'11111011'                          0444 01117000
*             RFY                                                  0445 01118000
*               R15 UNRSTD;         /* DROP RETURN CODE      @ZA31009*/ 01119000
@RF00443 DS    0H                                                  0446 01120000
*/*  THE BUFCS WERE SWAPPED FOR DATA INSERT, SWITCH BACK.    @ZA31009*/ 01121000
*                                                                  0446 01122000
*             RBUFC=PLHDBUFC;       /* GET CURRENT DATA BUFC         */ 01123000
         L     RBUFC,PLHDBUFC(,RPLH)                               0446 01124000
*             RFY                                                  0447 01125000
*               RWORK3 RSTD;        /* GET WORK REGISTER             */ 01126000
*             RWORK3=DIWBUFC;       /* GET DATA BUFC                 */ 01127000
         L     @10,AMBIWA(,RAMB)                                   0448 01128000
         L     RWORK3,DIWBUFC(,@10)                                0448 01129000
*             DIWBUFC=RBUFC;        /* GET INSERT BUFC BACK          */ 01130000
         ST    RBUFC,DIWBUFC(,@10)                                 0449 01131000
*             PLHDBUFC=RWORK3;      /* PUT DATA BUFC BACK            */ 01132000
         ST    RWORK3,PLHDBUFC(,RPLH)                              0450 01133000
*             RFY                                                  0451 01134000
*               RWORK3 UNRSTD;      /* DROP WORK REGISTER    @X04SVMR*/ 01135000
*           END;                    /* END OF INSERT IN NEW  @ZA31009*/ 01136000
*       END;                        /* END OF DATA INS CALL  @X04SVMR*/ 01137000
@RF00429 DS    0H                                                  0454 01138000
*     IF SPLTDPTR^=ZERO THEN        /* IF TRUE SPLIT OCCURRED      0454 01139000
*                                                            @ZA31009*/ 01140000
@RF00426 L     @10,AMBIWA(,RAMB)                                   0454 01141000
         L     @10,SPLTDPTR(,@10)                                  0454 01142000
         LTR   @10,@10                                             0454 01143000
         BZ    @RF00454                                            0454 01144000
*       DO;                         /* WRITE OUT PAIR OF CIS @ZA31009*/ 01145000
*         CALL WRTDATA;             /* WRITE OLD/NEW CI      @ZA31009*/ 01146000
*                                                                  0456 01147000
         BAL   @14,WRTDATA                                         0456 01148000
*         /***********************************************************/ 01149000
*         /*                                                         */ 01150000
*         /* POINT TO THE OLD CIDF.                          @ZA31009*/ 01151000
*         /*                                                         */ 01152000
*         /***********************************************************/ 01153000
*                                                                  0457 01154000
*         RBUFC=PLHDBUFC;           /* RESET TO OLD CI BUFC  @ZA31009*/ 01155000
         L     RBUFC,PLHDBUFC(,RPLH)                               0457 01156000
*         RFY                                                      0458 01157000
*           RWORK1 RSTD;            /* GET WORK REG          @ZA31009*/ 01158000
*         RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/*          @ZA31009*/ 01159000
         L     @10,AMBDSB(,RAMB)                                   0459 01160000
         L     RWORK1,BUFCBAD(,RBUFC)                              0459 01161000
         AL    RWORK1,AMDCINV(,@10)                                0459 01162000
         SL    RWORK1,@CF00197                                     0459 01163000
*         RWORK1->CIDFBUSY=OFF;     /* RESET BUSY FLAG       @ZA31009*/ 01164000
         NI    CIDFBUSY(RWORK1),B'01111111'                        0460 01165000
*         RFY                                                      0461 01166000
*           RWORK1 UNRSTD;          /* FREE WORK REG         @ZA31009*/ 01167000
*         IF RPLERREG^='00'X THEN   /* IF ANY ERROR, FREE    @ZA31009*/ 01168000
         CLI   RPLERREG(RRPL),0                                    0462 01169000
         BE    @RF00462                                            0462 01170000
*           CALL CISPLER3;          /* INSERT BFR AND EXIT   @ZA31009*/ 01171000
         BAL   @14,CISPLER3                                        0463 01172000
*         CALL IDASPLT2;            /* ERASE HIGH KEY PART   @ZA31009*/ 01173000
@RF00462 BAL   @14,IDASPLT2                                        0464 01174000
*         IF PLHBWD=ON THEN         /* IF BWD, ADJUST COUNT. @ZA31009*/ 01175000
         TM    PLHBWD(RPLH),B'00010000'                            0465 01176000
         BNO   @RF00465                                            0465 01177000
*           IF PLHRDFP->RDFREPL=ON THEN/* IF REPLICATED THEN @ZA31009*/ 01178000
         L     @10,PLHRDFP(,RPLH)                                  0466 01179000
         TM    RDFREPL(@10),B'00001000'                            0466 01180000
         BNO   @RF00466                                            0466 01181000
*             PLHRDFC=PLHRDFP->RDFLL-/* COMPLIMENT THE       @ZA31009*/ 01182000
*                 PLHRDFC+ONE;      /* RDF COUNT.            @ZA31009*/ 01183000
         SLR   @05,@05                                             0467 01184000
         ICM   @05,3,RDFLL(@10)                                    0467 01185000
         SH    @05,PLHRDFC(,RPLH)                                  0467 01186000
         AL    @05,@CF00046                                        0467 01187000
         STH   @05,PLHRDFC(,RPLH)                                  0467 01188000
*           ELSE                    /* IF NOT REPLICATED THEN      0468 01189000
*                                                            @ZA31009*/ 01190000
*             PLHRDFC=ONE;          /* SET RDF COUNT TO ONE. @ZA31009*/ 01191000
*                                                                  0468 01192000
         B     @RC00466                                            0468 01193000
@RF00466 MVC   PLHRDFC(2,RPLH),@CH00046                            0468 01194000
*         /***********************************************************/ 01195000
*         /*                                                         */ 01196000
*         /* IF THE RECORD TO BE INSERTED IS NOT SPANNED, INSERT.    */ 01197000
*         /*                                                 @ZA31009*/ 01198000
*         /*                                                         */ 01199000
*         /***********************************************************/ 01200000
*                                                                  0469 01201000
*         IF(RPLRLEN<=AMDCINV-LENGTH(IDARDF)-LENGTH(IDACIDF))/* NOT     01202000
*                                      SPANNED               @ZA31009*/ 01203000
*             &RPLUPD=OFF           /* NOT UPDATE            @ZA31009*/ 01204000
*             &((PLHRECP>=BUFCBAD)  /* AND INSERT POINT      @ZA31009*/ 01205000
*             &(PLHRECP<=SPLTRDFP)) /* IN OLD CINV           @ZA31009*/ 01206000
*           THEN                                                   0469 01207000
@RC00466 DS    0H                                                  0469 01208000
@RF00465 L     @10,AMBDSB(,RAMB)                                   0469 01209000
         L     @10,AMDCINV(,@10)                                   0469 01210000
         SL    @10,@CF00050                                        0469 01211000
         C     @10,RPLRLEN(,RRPL)                                  0469 01212000
         BL    @RF00469                                            0469 01213000
         TM    RPLUPD(RRPL),B'00000010'                            0469 01214000
         BNZ   @RF00469                                            0469 01215000
         L     @10,PLHRECP(,RPLH)                                  0469 01216000
         C     @10,BUFCBAD(,RBUFC)                                 0469 01217000
         BL    @RF00469                                            0469 01218000
         L     @05,AMBIWA(,RAMB)                                   0469 01219000
         C     @10,SPLTRDFP(,@05)                                  0469 01220000
         BH    @RF00469                                            0469 01221000
*           DO;                     /*                       @ZA31009*/ 01222000
*I06:                                                              0471 01223000
*             DO;                   /* IDACALL(IDA019RM)             */ 01224000
I06      DS    0H                                                  0472 01225000
*               CALL IDA019RM;      /* EXIT TO IDA019RM              */ 01226000
         L     @15,@CV01018                                        0472 01227000
         BALR  @14,@15                                             0472 01228000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01229000
         BALR @11,0                                                     01230000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01231000
         USING *,@11                                                    01232000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01233000
         L     @11,=A(@PSTART)                                          01234000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01235000
         USING @PSTART,@11                                              01236000
*             END I06;              /* CALL DATA INSERT      @ZA31009*/ 01237000
*             RFY                                                  0478 01238000
*               R15 RSTD;           /* SAVE RETURN CODE      @ZA31009*/ 01239000
*             IF R15^=ZERO THEN     /* IF RECORD TOO BIG,    @ZA31009*/ 01240000
         LTR   R15,R15                                             0479 01241000
         BZ    @RF00479                                            0479 01242000
*               PLHCIINS=OFF;       /* NO INSERT YET         @ZA31009*/ 01243000
         NI    PLHCIINS(RPLH),B'11111011'                          0480 01244000
*           END;                    /* END INS PT IN OLD CI  @ZA31009*/ 01245000
*       END;                        /* END OF WRITE OLD/NEW  @ZA31009*/ 01246000
*/*  IF THE NEW CI CONTAINS ONLY FREE SPACE OR 1 RECORD (INSERTED    */ 01247000
*/*  ABOVE), WRITE IT ANYWAY.  THIS ENSURES THAT A SEQ SET ENTRY     */ 01248000
*/*  WILL NOT BE CREATED THAT POINTS TO AN INVALID CI.       @ZA31009*/ 01249000
*                                                                  0483 01250000
*     ELSE                          /* NOT A TRUE CI SPLIT   @ZA31009*/ 01251000
*       DO;                         /* WRITE OUT NEW CI      @ZA31009*/ 01252000
         B     @RC00454                                            0483 01253000
@RF00454 DS    0H                                                  0484 01254000
*         RBUFC=DIWBUFC;            /* POINT TO INSERT BUFC  @ZA31009*/ 01255000
         L     @14,AMBIWA(,RAMB)                                   0484 01256000
         L     RBUFC,DIWBUFC(,@14)                                 0484 01257000
*         BUFCMW=ON;                /* SET WRITE FLAG        @ZA31009*/ 01258000
         OI    BUFCMW(RBUFC),B'10000000'                           0485 01259000
*I07:                                                              0486 01260000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 01261000
I07      DS    0H                                                  0487 01262000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 01263000
         L     @15,@CV01014                                        0487 01264000
         BALR  @14,@15                                             0487 01265000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01266000
         BALR @11,0                                                     01267000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01268000
         USING *,@11                                                    01269000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01270000
         L     @11,=A(@PSTART)                                          01271000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01272000
         USING @PSTART,@11                                              01273000
*         END I07;                  /* WRITE NEW CI          @ZA31009*/ 01274000
*         IF RPLERREG^='00'X THEN   /* IF ANY ERROR, FREE    @ZA31009*/ 01275000
         CLI   RPLERREG(RRPL),0                                    0493 01276000
         BE    @RF00493                                            0493 01277000
*           CALL CISPLER3;          /* INSERT BFR AND EXIT   @ZA31009*/ 01278000
         BAL   @14,CISPLER3                                        0494 01279000
*       END;                        /* END OF NON-SPLIT CODE @ZA31009*/ 01280000
@RF00493 DS    0H                                                  0496 01281000
*     RPARM1=ZERO;                  /* INDICATE INSERT               */ 01282000
@RC00454 SLR   RPARM1,RPARM1                                       0496 01283000
*I08:                                                              0497 01284000
*     DO;                           /* IDACALL(IDA019RH)             */ 01285000
I08      DS    0H                                                  0498 01286000
*       CALL IDA019RH;              /* EXIT TO IDA019RH              */ 01287000
         L     @15,@CV01017                                        0498 01288000
         BALR  @14,@15                                             0498 01289000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01290000
         BALR @11,0                                                     01291000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01292000
         USING *,@11                                                    01293000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01294000
         L     @11,=A(@PSTART)                                          01295000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01296000
         USING @PSTART,@11                                              01297000
*     END I08;                      /* CALL INDEX INSERT             */ 01298000
*     IF R15^=ZERO                  /* IF ENTRY WILL NOT FIT,        */ 01299000
*       THEN                        /* THE CONTROL AREA MUST         */ 01300000
         SLR   @14,@14                                             0504 01301000
         CR    R15,@14                                             0504 01302000
         BE    @RF00504                                            0504 01303000
*       DO;                         /* MUST BE SPLIT                 */ 01304000
*         RPLERRCD=RPLIXEND;        /* SEQ SET IS FULL       @ZA31009*/ 01305000
         MVI   RPLERRCD(RRPL),X'10'                                0506 01306000
*         IF SPLTDPTR^=ZERO THEN    /* IF A TRUE SPLIT       @ZA31009*/ 01307000
         L     @10,AMBIWA(,RAMB)                                   0507 01308000
         C     @14,SPLTDPTR(,@10)                                  0507 01309000
         BE    @RF00507                                            0507 01310000
*           DO;                     /* BACK OUT BUSY BIT     @ZA31009*/ 01311000
*                                                                  0508 01312000
*             /*******************************************************/ 01313000
*             /*                                                     */ 01314000
*             /* TURN OFF BUSY BIT ON DASD DEVICE. ALSO REFRESH      */ 01315000
*             /* CONTENTS OF THE CI IN STORAGE (HIGH KEY RECORDS HAVE*/ 01316000
*             /* BEEN REMOVED).                              @ZA31009*/ 01317000
*             /*                                                     */ 01318000
*             /*******************************************************/ 01319000
*                                                                  0509 01320000
*             RFY                                                  0509 01321000
*               R15 UNRSTD;         /*                       @ZA31009*/ 01322000
*             RPARM1=PLHDBUFC->BUFCDDDD;/* INSERT RBA VALUE  @ZA31009*/ 01323000
         L     @10,PLHDBUFC(,RPLH)                                 0510 01324000
         L     RPARM1,BUFCDDDD(,@10)                               0510 01325000
*             PLHDBUFC->BUFCVAL=OFF;/* INVALIDATE BUFC       @ZA31009*/ 01326000
         NI    BUFCVAL(@10),B'11111011'                            0511 01327000
*I09:                                                              0512 01328000
*             DO;                   /* IDACALL(IDAGRB)               */ 01329000
I09      DS    0H                                                  0513 01330000
*               CALL IDAGRB;        /* EXIT TO IDAGRB                */ 01331000
         L     @15,@CV01011                                        0513 01332000
         BALR  @14,@15                                             0513 01333000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01334000
         BALR @11,0                                                     01335000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01336000
         USING *,@11                                                    01337000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01338000
         L     @11,=A(@PSTART)                                          01339000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01340000
         USING @PSTART,@11                                              01341000
*             END I09;              /* REREAD OLD CI         @ZA31009*/ 01342000
*             IF RPLERREG^='00'X THEN/* IF ANY ERROR, FREE   @ZA31009*/ 01343000
         CLI   RPLERREG(RRPL),0                                    0519 01344000
         BE    @RF00519                                            0519 01345000
*               CALL CISPLER3;      /* INSERT BFR AND EXIT   @ZA31009*/ 01346000
*                                                                  0520 01347000
         BAL   @14,CISPLER3                                        0520 01348000
*             /*******************************************************/ 01349000
*             /*                                                     */ 01350000
*             /* POINT TO THE OLD CIDF                       @ZA31009*/ 01351000
*             /*                                                     */ 01352000
*             /*******************************************************/ 01353000
*                                                                  0521 01354000
*             RFY                                                  0521 01355000
*               RWORK1 RSTD;        /* GET WORK REGISTER     @ZA31009*/ 01356000
@RF00519 DS    0H                                                  0522 01357000
*             RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/*      @ZA31009*/ 01358000
         L     @10,AMBDSB(,RAMB)                                   0522 01359000
         L     RWORK1,BUFCBAD(,RBUFC)                              0522 01360000
         AL    RWORK1,AMDCINV(,@10)                                0522 01361000
         SL    RWORK1,@CF00197                                     0522 01362000
*             RWORK1->CIDFBUSY=OFF; /* RESET BUSY FLAG       @ZA31009*/ 01363000
         NI    CIDFBUSY(RWORK1),B'01111111'                        0523 01364000
*             RFY                                                  0524 01365000
*               RWORK1 UNRSTD;      /* FREE WORK REG         @ZA31009*/ 01366000
*             BUFXORBA=BUFCDDDD;    /* SET EXCL OUTPUT RBA   @ZA31009*/ 01367000
         L     @10,BUFCDDDD(,RBUFC)                                0525 01368000
         ST    @10,BUFXORBA(,RBUFC)                                0525 01369000
*             BUFCORBA=BUFCDDDD;    /* SET OUTPUT RBA        @ZA31009*/ 01370000
         ST    @10,BUFCORBA(,RBUFC)                                0526 01371000
*             BUFCMW=ON;            /* CAUSE WRITE           @ZA31009*/ 01372000
         OI    BUFCMW(RBUFC),B'10000000'                           0527 01373000
*I10:                                                              0528 01374000
*             DO;                   /* IDACALL(IDAWRBFR)             */ 01375000
I10      DS    0H                                                  0529 01376000
*               CALL IDAWRBFR;      /* EXIT TO IDAWRBFR              */ 01377000
         L     @15,@CV01014                                        0529 01378000
         BALR  @14,@15                                             0529 01379000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01380000
         BALR @11,0                                                     01381000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01382000
         USING *,@11                                                    01383000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01384000
         L     @11,=A(@PSTART)                                          01385000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01386000
         USING @PSTART,@11                                              01387000
*             END I10;              /* REWRITE OLD CI        @ZA31009*/ 01388000
*             IF RPLERREG^='00'X THEN/* IF ANY ERROR, FREE   @ZA31009*/ 01389000
         CLI   RPLERREG(RRPL),0                                    0535 01390000
         BE    @RF00535                                            0535 01391000
*               CALL CISPLER3;      /* INSERT BFR AND EXIT   @ZA31009*/ 01392000
         BAL   @14,CISPLER3                                        0536 01393000
*           END;                    /* END BACK OUT BUSY BIT @ZA31009*/ 01394000
*                                                                  0537 01395000
@RF00535 DS    0H                                                  0538 01396000
*         /***********************************************************/ 01397000
*         /*                                                         */ 01398000
*         /* CONVERT THE NEW CI BACK TO FREE SPACE CI        @ZA31009*/ 01399000
*         /*                                                         */ 01400000
*         /***********************************************************/ 01401000
*                                                                  0538 01402000
*         RBUFC=DIWBUFC;            /* POINT TO INSERT BUFC  @ZA31009*/ 01403000
@RF00507 L     @10,AMBIWA(,RAMB)                                   0538 01404000
         L     RBUFC,DIWBUFC(,@10)                                 0538 01405000
*         CALL BUILDFS;             /* CONVERT TO FREE SPACE @ZA31009*/ 01406000
         BAL   @14,BUILDFS                                         0539 01407000
*         BUFCMW=ON;                /* INDICATE WRITE NEEDED @ZA31009*/ 01408000
         OI    BUFCMW(RBUFC),B'10000000'                           0540 01409000
*I11:                                                              0541 01410000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 01411000
I11      DS    0H                                                  0542 01412000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 01413000
         L     @15,@CV01014                                        0542 01414000
         BALR  @14,@15                                             0542 01415000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01416000
         BALR @11,0                                                     01417000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01418000
         USING *,@11                                                    01419000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01420000
         L     @11,=A(@PSTART)                                          01421000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01422000
         USING @PSTART,@11                                              01423000
*         END I11;                  /* REWRITE THE NEW CI AS FS    0547 01424000
*                                                            @ZA31009*/ 01425000
*         IF RPLERREG^='00'X THEN   /* IF ANY ERROR, FREE    @ZA31009*/ 01426000
         CLI   RPLERREG(RRPL),0                                    0548 01427000
         BE    @RF00548                                            0548 01428000
*           CALL CISPLER3;          /* INSERT BFR AND EXIT   @ZA31009*/ 01429000
*                                                                  0549 01430000
         BAL   @14,CISPLER3                                        0549 01431000
*         /***********************************************************/ 01432000
*         /*                                                         */ 01433000
*         /* RESET THE INSERT POINTERS TO THEIR ORIGINAL VALUES      */ 01434000
*         /* BECAUSE THE CONTROL AREA WILL BE SPLIT AND THEN THE CI  */ 01435000
*         /* SPLIT WILL BE RESTARTED FROM THE BEGINNING.             */ 01436000
*         /*                                                         */ 01437000
*         /***********************************************************/ 01438000
*                                                                  0550 01439000
*         RBUFC=PLHDBUFC;           /* LOAD PTR TO DBUFC     @ZA31009*/ 01440000
@RF00548 L     RBUFC,PLHDBUFC(,RPLH)                               0550 01441000
*         PLHRECP=DIWSAVE2+BUFCBAD; /* RESET INSERT PTRS     @ZA31009*/ 01442000
         L     @10,AMBIWA(,RAMB)                                   0551 01443000
         L     @05,BUFCBAD(,RBUFC)                                 0551 01444000
         L     @00,DIWSAVE2(,@10)                                  0551 01445000
         ALR   @00,@05                                             0551 01446000
         ST    @00,PLHRECP(,RPLH)                                  0551 01447000
*         PLHFSP=DIWSAVE5+BUFCBAD;  /* TO THE SAME VALUES    @ZA31009*/ 01448000
         L     @00,DIWSAVE5(,@10)                                  0552 01449000
         ALR   @00,@05                                             0552 01450000
         ST    @00,PLHFSP(,RPLH)                                   0552 01451000
*         PLHRDFP=DIWLRBA+BUFCBAD;  /* AS AT THE             @ZA31009*/ 01452000
         AL    @05,DIWLRBA(,@10)                                   0553 01453000
         ST    @05,PLHRDFP(,RPLH)                                  0553 01454000
*         PLHRDFC=DIWHRBA;          /* BEGINNING OF CI SPLIT         */ 01455000
         L     @05,DIWHRBA(,@10)                                   0554 01456000
         STH   @05,PLHRDFC(,RPLH)                                  0554 01457000
*         RBUFC=DIWBUFC;            /* POINT TO THE WORK BUFC        */ 01458000
         L     RBUFC,DIWBUFC(,@10)                                 0555 01459000
*I12:                                                              0556 01460000
*         DO;                       /* IDACALL(IDAFREEB)             */ 01461000
I12      DS    0H                                                  0557 01462000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 01463000
         L     @15,@CV01019                                        0557 01464000
         BALR  @14,@15                                             0557 01465000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01466000
         BALR @11,0                                                     01467000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01468000
         USING *,@11                                                    01469000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01470000
         L     @11,=A(@PSTART)                                          01471000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01472000
         USING @PSTART,@11                                              01473000
*         END I12;                  /* FREE WK BUFC          @X04SVLP*/ 01474000
*         PLHCIINS=OFF;             /* INSERT NOT DONE               */ 01475000
         NI    PLHCIINS(RPLH),B'11111011'                          0563 01476000
*         PLHDBUFC->BUFCVAL=OFF;    /* RCD INSERT NOT DONE   @X04SVMR*/ 01477000
         L     @10,PLHDBUFC(,RPLH)                                 0564 01478000
         NI    BUFCVAL(@10),B'11111011'                            0564 01479000
*         RPARM1=ONE;               /* ONE CI TO INSERT      @X04SVMR*/ 01480000
         LA    RPARM1,1                                            0565 01481000
*I13:                                                              0566 01482000
*         DO;                       /* IDACALL(IDA019RF)             */ 01483000
I13      DS    0H                                                  0567 01484000
*           CALL IDA019RF;          /* EXIT TO IDA019RF              */ 01485000
         L     @15,@CV01016                                        0567 01486000
         BALR  @14,@15                                             0567 01487000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01488000
         BALR @11,0                                                     01489000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01490000
         USING *,@11                                                    01491000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01492000
         L     @11,=A(@PSTART)                                          01493000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01494000
         USING @PSTART,@11                                              01495000
*         END I13;                  /* CALL CA SPLIT                 */ 01496000
*         IF RPLERREG^='00'X THEN   /* IF ERROR IN CA SPLIT,         */ 01497000
         CLI   RPLERREG(RRPL),0                                    0573 01498000
         BNE   @RT00573                                            0573 01499000
*           GO TO CISPLERR;         /* GO PREPARE TO EXIT            */ 01500000
*         IF RPARM1^=ZERO THEN      /* IF INSERT OR SPLIT NOT      0575 01501000
*                                      REQUIRED. INSERT      @X04SVRQ*/ 01502000
         LTR   RPARM1,RPARM1                                       0575 01503000
         BNZ   @RT00575                                            0575 01504000
*           GO TO CISPLERR;         /* HAS BEEN DONE.                */ 01505000
*       END;                        /* END OF NO FIT CODE            */ 01506000
*     ELSE                          /* HERE IF THE INDEX             */ 01507000
*       DO;                         /* INSERT WENT OK.               */ 01508000
         B     @RC00504                                            0578 01509000
@RF00504 DS    0H                                                  0579 01510000
*         RFY                                                      0579 01511000
*           R15 UNRSTD;             /* DROP RETURN CODE      @ZA31009*/ 01512000
*                                                                  0579 01513000
*         /***********************************************************/ 01514000
*         /*                                                         */ 01515000
*         /* IF A JOURNAL EXIT IS SPECIFIED, JOURNAL THE CINV SPLIT  */ 01516000
*         /* (IF ANY) AND THE DATA SPREAD (IF ANY)           @ZA31009*/ 01517000
*         /*                                                         */ 01518000
*         /***********************************************************/ 01519000
*                                                                  0580 01520000
*         IF AMBJRN=ON THEN         /* TEST FOR JRNAD        @ZA31009*/ 01521000
         TM    AMBJRN(RAMB),B'00000010'                            0580 01522000
         BNO   @RF00580                                            0580 01523000
*           CALL REJRNAD;           /* TAKE JRNAD            @ZA31009*/ 01524000
*                                                                  0581 01525000
         BAL   @14,REJRNAD                                         0581 01526000
*         /***********************************************************/ 01527000
*         /*                                                         */ 01528000
*         /* CONSIDER NEW CINV TO HAVE A VALID RBA FROM NOW ON       */ 01529000
*         /*                                                 @ZA31009*/ 01530000
*         /*                                                         */ 01531000
*         /***********************************************************/ 01532000
*                                                                  0582 01533000
*         AMDASPA=AMDASPA-AMDCINV;  /* DECREMENT AVAIL SPACE         */ 01534000
@RF00580 L     @10,AMBDSB(,RAMB)                                   0582 01535000
         L     @05,AMDASPA(,@10)                                   0582 01536000
         SL    @05,AMDCINV(,@10)                                   0582 01537000
         ST    @05,AMDASPA(,@10)                                   0582 01538000
*         RPARM1=IXWRITE;           /* SET INDEX WRITE CODE          */ 01539000
         LA    RPARM1,4                                            0583 01540000
*I14:                                                              0584 01541000
*         DO;                       /* IDACALL(IDA019RH)             */ 01542000
I14      DS    0H                                                  0585 01543000
*           CALL IDA019RH;          /* EXIT TO IDA019RH              */ 01544000
         L     @15,@CV01017                                        0585 01545000
         BALR  @14,@15                                             0585 01546000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01547000
         BALR @11,0                                                     01548000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01549000
         USING *,@11                                                    01550000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01551000
         L     @11,=A(@PSTART)                                          01552000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01553000
         USING @PSTART,@11                                              01554000
*         END I14;                  /* CAUSE INDEX INSERT WRT        */ 01555000
*         IF RPLERREG^='00'X THEN   /* IF ANY ERRORS HAVE            */ 01556000
         CLI   RPLERREG(RRPL),0                                    0591 01557000
         BE    @RF00591                                            0591 01558000
*           CALL CISPLER2;          /* OCCURRED, FREE BFR.   @ZA31009*/ 01559000
         BAL   @14,CISPLER2                                        0592 01560000
*         RBUFC=PLHDBUFC;           /* POINT TO OLD CINV             */ 01561000
@RF00591 L     RBUFC,PLHDBUFC(,RPLH)                               0593 01562000
*/*  IF HIGH KEY CI SPLIT OR ADD TO END OF KEY RANGE OR DATA SET,    */ 01563000
*/*  UPDATE ARDHKRBA.                                                */ 01564000
*                                                                  0594 01565000
*         IF(SPLTDPTR^=ZERO&BUFCORBA=ARDHKRBA)|/*            @ZA31009*/ 01566000
*             PLHADDTE=ON THEN      /*                       @ZA31009*/ 01567000
         L     @10,AMBIWA(,RAMB)                                   0594 01568000
         L     @10,SPLTDPTR(,@10)                                  0594 01569000
         LTR   @10,@10                                             0594 01570000
         BZ    @GL00030                                            0594 01571000
         L     @10,PLHARDB(,RPLH)                                  0594 01572000
         CLC   BUFCORBA(4,RBUFC),ARDHKRBA(@10)                     0594 01573000
         BE    @RT00594                                            0594 01574000
@GL00030 TM    PLHADDTE(RPLH),B'00010000'                          0594 01575000
         BNO   @RF00594                                            0594 01576000
@RT00594 DS    0H                                                  0595 01577000
*           ARDHKRBA=DIWBUFC->BUFCDDDD;/* UPDATE HIGH KEY RBA      0595 01578000
*                                                            @ZA31009*/ 01579000
         L     @10,PLHARDB(,RPLH)                                  0595 01580000
         L     @05,AMBIWA(,RAMB)                                   0595 01581000
         L     @05,DIWBUFC(,@05)                                   0595 01582000
         L     @05,BUFCDDDD(,@05)                                  0595 01583000
         ST    @05,ARDHKRBA(,@10)                                  0595 01584000
*         IF SPLTDPTR^=ZERO         /* IF A CINV WAS SPLIT,  @ZA31009*/ 01585000
*           THEN                    /* THE OLD CI MUST BE    @ZA31009*/ 01586000
@RF00594 L     @10,AMBIWA(,RAMB)                                   0596 01587000
         L     @10,SPLTDPTR(,@10)                                  0596 01588000
         LTR   @10,@10                                             0596 01589000
         BZ    @RF00596                                            0596 01590000
*           DO;                     /* REWRITTEN.            @ZA31009*/ 01591000
*             BUFXORBA=BUFCDDDD;    /* SET EXCL OUTPUT RBA   @ZA31009*/ 01592000
         L     @10,BUFCDDDD(,RBUFC)                                0598 01593000
         ST    @10,BUFXORBA(,RBUFC)                                0598 01594000
*             BUFCORBA=BUFCDDDD;    /* SET OUTPUT RBA        @ZA31009*/ 01595000
         ST    @10,BUFCORBA(,RBUFC)                                0599 01596000
*             BUFCMW=ON;            /* SET MUST WRITE                */ 01597000
         OI    BUFCMW(RBUFC),B'10000000'                           0600 01598000
*I15:                                                              0601 01599000
*             DO;                   /* IDACALL(IDAWRBFR)             */ 01600000
I15      DS    0H                                                  0602 01601000
*               CALL IDAWRBFR;      /* EXIT TO IDAWRBFR              */ 01602000
         L     @15,@CV01014                                        0602 01603000
         BALR  @14,@15                                             0602 01604000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01605000
         BALR @11,0                                                     01606000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01607000
         USING *,@11                                                    01608000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01609000
         L     @11,=A(@PSTART)                                          01610000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01611000
         USING @PSTART,@11                                              01612000
*             END I15;              /* WRITE OUT OLD CINV            */ 01613000
*             IF RPLERREG^='00'X THEN/* IF ANY ERROR,        @ZA31009*/ 01614000
         CLI   RPLERREG(RRPL),0                                    0608 01615000
         BE    @RF00608                                            0608 01616000
*               CALL CISPLER2;      /* EXIT.                 @ZA31009*/ 01617000
         BAL   @14,CISPLER2                                        0609 01618000
*             AMDNCIS=AMDNCIS+ONE;  /* ONE MORE CI SPLIT             */ 01619000
@RF00608 L     @10,AMBDSB(,RAMB)                                   0610 01620000
         LA    @05,1                                               0610 01621000
         AL    @05,AMDNCIS(,@10)                                   0610 01622000
         ST    @05,AMDNCIS(,@10)                                   0610 01623000
*           END;                    /* END OF WRITE OLD CINV         */ 01624000
*         RPARM1=DIWBUFC;           /* POINT TO INSERT BUFC          */ 01625000
*                                                                  0612 01626000
@RF00596 L     @10,AMBIWA(,RAMB)                                   0612 01627000
         L     RPARM1,DIWBUFC(,@10)                                0612 01628000
*         /***********************************************************/ 01629000
*         /*                                                         */ 01630000
*         /* IF THE INSERT POINT IS IN THE NEW CONTROL INTERVAL, SWAP*/ 01631000
*         /* THE INPUT RBAS, THE OUTPUT RBAS, THE BUFFER ADDRESSES,  */ 01632000
*         /* AND THE CHANNEL PROGRAM POINTERS. THIS WILL HAVE THE    */ 01633000
*         /* EFFECT OF RETAINING THE INSERT BUFC AS THE PLACEHOLDER  */ 01634000
*         /* BUFC THEREBY KEEPING THE PLACEHOLDER INSERT POINTERS    */ 01635000
*         /* VALID.                                                  */ 01636000
*         /*                                                         */ 01637000
*         /***********************************************************/ 01638000
*                                                                  0613 01639000
*         IF PLHRECP<BUFCBAD|       /* IF INSERT POINT IN NEW        */ 01640000
*             PLHRECP>=BUFCBAD+AMDCINV/* CINV, EXCHANGE BUFFER       */ 01641000
*           THEN                    /* POINTERS SO INSERT CINV       */ 01642000
         L     @10,PLHRECP(,RPLH)                                  0613 01643000
         L     @05,BUFCBAD(,RBUFC)                                 0613 01644000
         CR    @10,@05                                             0613 01645000
         BL    @RT00613                                            0613 01646000
         L     @15,AMBDSB(,RAMB)                                   0613 01647000
         AL    @05,AMDCINV(,@15)                                   0613 01648000
         CR    @10,@05                                             0613 01649000
         BL    @RF00613                                            0613 01650000
@RT00613 DS    0H                                                  0614 01651000
*           DO;                     /* IS IN THE PLH.                */ 01652000
*             IF AMBLSR=ON|AMBGSR=ON THEN/* IF SHR BFRS      @X04SVMR*/ 01653000
         TM    AMBLSR(RAMB),B'01100000'                            0615 01654000
         BZ    @RF00615                                            0615 01655000
*               DO;                 /*                       @X04SVMR*/ 01656000
*                 DIWBUFC=RBUFC;    /* SWAP DATA INSERT      @X04SVMR*/ 01657000
         L     @10,AMBIWA(,RAMB)                                   0617 01658000
         ST    RBUFC,DIWBUFC(,@10)                                 0617 01659000
*                 PLHDBUFC=RPARM1;  /* AND PLH BUFFERS       @X04SVMR*/ 01660000
         ST    RPARM1,PLHDBUFC(,RPLH)                              0618 01661000
*                 BUFCINS=ON;       /* SET DATA INSERT SW    @X04SVMR*/ 01662000
         OI    BUFCINS(RBUFC),B'00100000'                          0619 01663000
*                 RPARM1->BUFCINS=OFF;/* DATA INS OFF IN PLH @X04SVMR*/ 01664000
         NI    BUFCINS(RPARM1),B'11011111'                         0620 01665000
*               END;                /* END SHARED BFR CODE   @X04SVMR*/ 01666000
*             ELSE                  /* HERE IF NOT SHARED    @X04SVMR*/ 01667000
*               DO;                 /*                       @X04SVMR*/ 01668000
         B     @RC00615                                            0622 01669000
@RF00615 DS    0H                                                  0623 01670000
*                 GEN;                                             0623 01671000
K8       EQU   8                         LENGTH OF 2 RBA'S              01672000
K16      EQU  16                         LEN OF 2 RBA'S, CPA & BFR ADR  01673000
         XC    BUFCDDDD(K16,RBUFC),BUFCDDDD(RPARM1)  SWITCH THE         01674000
         XC    BUFCDDDD(K16,RPARM1),BUFCDDDD(RBUFC)  INPUT/OUTPUT RBAS, 01675000
         XC    BUFCDDDD(K16,RBUFC),BUFCDDDD(RPARM1)  CHAN PGMS, BFRS    01676000
         XC    BUFXIRBA(K8,RBUFC),BUFXIRBA(RPARM1)  SWITCH THE          01677000
         XC    BUFXIRBA(K8,RPARM1),BUFXIRBA(RBUFC)  EXCLUSIVE CONTROL   01678000
         XC    BUFXIRBA(K8,RBUFC),BUFXIRBA(RPARM1)  RBAS ALSO.          01679000
*               END;                /* END, NON-SHARED       @X04SVMR*/ 01680000
*           END;                    /* BY THE BUFFER EXCHANGE        */ 01681000
@RC00615 DS    0H                                                  0626 01682000
*         RBUFC=DIWBUFC;            /* POINT TO THE WORK BUFC        */ 01683000
@RF00613 L     @10,AMBIWA(,RAMB)                                   0626 01684000
         L     RBUFC,DIWBUFC(,@10)                                 0626 01685000
*I16:                                                              0627 01686000
*         DO;                       /* IDACALL(IDAFREEB)             */ 01687000
I16      DS    0H                                                  0628 01688000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 01689000
         L     @15,@CV01019                                        0628 01690000
         BALR  @14,@15                                             0628 01691000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01692000
         BALR @11,0                                                     01693000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01694000
         USING *,@11                                                    01695000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01696000
         L     @11,=A(@PSTART)                                          01697000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01698000
         USING @PSTART,@11                                              01699000
*         END I16;                  /* FREE WK BFR           @X04SVLP*/ 01700000
*       END;                        /* END OF INDEX INSERT OK        */ 01701000
*   END;                            /* END OF INSERT OFF CODE        */ 01702000
@RC00504 DS    0H                                                  0635 01703000
@DE00217 TM    PLHCIINS(RPLH),B'00000100'                          0635 01704000
         BZ    @DL00217                                            0635 01705000
*/*  NOW RESET THE SEQUENCE SET OFFSETS TO THE INSERT POINT          */ 01706000
*                                                                  0636 01707000
*   CALL IDAREPOS;                  /* GO REPOSITION         @ZA02289*/ 01708000
         L     @15,@CA01045                                        0636 01709000
         BALR  @14,@15                                             0636 01710000
*   IF PLHBFRNO>ONE                 /* IF ANY READ AHEAD,THE @ZA31009*/ 01711000
*     THEN                          /* BUFFERS MUST          @ZA31009*/ 01712000
         CLI   PLHBFRNO(RPLH),1                                    0637 01713000
         BNH   @RF00637                                            0637 01714000
*     DO;                           /* BE REPOSITIONED.      @ZA31009*/ 01715000
*       RPARM1=PLHDBUFC->BUFCDDDD;  /* INSERT RBA VALUE      @ZA31009*/ 01716000
         L     @10,PLHDBUFC(,RPLH)                                 0639 01717000
         L     RPARM1,BUFCDDDD(,@10)                               0639 01718000
*I17:                                                              0640 01719000
*       DO;                         /* IDACALL(IDAGRB)               */ 01720000
I17      DS    0H                                                  0641 01721000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 01722000
         L     @15,@CV01011                                        0641 01723000
         BALR  @14,@15                                             0641 01724000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01725000
         BALR @11,0                                                     01726000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01727000
         USING *,@11                                                    01728000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01729000
         L     @11,=A(@PSTART)                                          01730000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01731000
         USING @PSTART,@11                                              01732000
*       END I17;                    /* REORDER READ-AHEAD    @ZA31009*/ 01733000
*     END;                          /* END OF SEQ. SET NEW PTR       */ 01734000
*CISPLERR:                                                         0648 01735000
*   PLHCIINS=OFF;                   /* RESET DATA INSERT FLAG        */ 01736000
@RF00637 DS    0H                                                  0648 01737000
CISPLERR NI    PLHCIINS(RPLH),B'11111011'                          0648 01738000
*CISPLITX:                                                         0649 01739000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE?   @ZA29388*/ 01740000
CISPLITX L     @10,AMBTRACE(,RAMB)                                 0649 01741000
         LTR   @10,@10                                             0649 01742000
         BZ    @RF00649                                            0649 01743000
*     DO;                           /*                       @ZA29388*/ 01744000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 01745000
         L     @15,@CV01034                                        0651 01746000
         BALR  @14,@15                                             0651 01747000
*       GEN(DC X'0007');            /* TRACE ID              @ZA29388*/ 01748000
         DC X'0007'                                                     01749000
*     END;                          /*                       @ZA29388*/ 01750000
*   GEN REFS(PLHRETO,PLHRET1)(IDARST14);/* RESTORE REG 14    @X04SVMR*/ 01751000
@RF00649 DS    0H                                                  0654 01752000
         IDARST14                                                       01753000
*   RETURN;                         /* RETURN TO CALLER              */ 01754000
@EL00001 DS    0H                                                  0655 01755000
@EF00001 DS    0H                                                  0655 01756000
@ER00001 BR    @14                                                 0655 01757000
*   GEN;                                                           0656 01758000
ICMINS   ICM   RWORK2,@00,@00(RWORK1)   PICK UP 1, 2, OR 3 BYTE RBA     01759000
ICMINS2 ICM RPARM1,@00,IBFLP3(RWORK3) GET RBA MULT(1,2, OR 3)           01760000
*                                                                  0657 01761000
*   /*****************************************************************/ 01762000
*   /*                                                               */ 01763000
*   /* IDAREPOS SUBROUTINE                                           */ 01764000
*   /*                                                               */ 01765000
*   /*****************************************************************/ 01766000
*                                                                  0657 01767000
*/*  RESETS THE SEQUENCE SET POSITION POINTERS USED BY THE BUFFER  0657 01768000
*    MANAGER, TO THE CURRENT POSITION                                */ 01769000
*                                                                  0657 01770000
*IDAREPOS:                          /*                       @ZA02289*/ 01771000
*   ENTRY;                          /*                       @ZA02289*/ 01772000
@EP00657 DS    0H                                                  0658 01773000
*   GEN(IDASVR14);                  /* SAVE REG14            @ZA02289*/ 01774000
         IDASVR14                                                       01775000
*   RFY                                                            0659 01776000
*    (RWORK1,                                                      0659 01777000
*     RWORK2,                                                      0659 01778000
*     RWORK3) RSTD;                 /* GET WORK REGISTERS            */ 01779000
*   RBUFC=PLHIBUFC;                 /* POINT TO THE SEQ. SET         */ 01780000
         L     RBUFC,PLHIBUFC(,RPLH)                               0660 01781000
*   RWORK3=BUFCBAD+IXHLL-IXHFLPLN;  /* POINT TO THE 1ST ENTRY        */ 01782000
         L     @10,BUFCBAD(,RBUFC)                                 0661 01783000
         LH    RWORK3,IXHLL(,@10)                                  0661 01784000
         N     RWORK3,@CF01143                                     0661 01785000
         ALR   RWORK3,@10                                          0661 01786000
         SLR   @00,@00                                             0661 01787000
         IC    @00,IXHFLPLN(,@10)                                  0661 01788000
         SLR   RWORK3,@00                                          0661 01789000
*   IXSHEP=RWORK3;                  /* CURRENT ENTRY=1ST ENTRY       */ 01790000
         LA    @15,200                                             0662 01791000
         ALR   @15,RPLH                                            0662 01792000
         ST    RWORK3,IXSHEP(,@15)                                 0662 01793000
*   IXSLEP=IXSHEP;                  /* FIRST AS ALSO LOWEST          */ 01794000
         L     @14,IXSHEP+200(,RPLH)                               0663 01795000
         ST    @14,IXSLEP(,@15)                                    0663 01796000
*   IXSSEP=IXHSEO+BUFCBAD;          /* 1ST SECTION ENTRY PTR.        */ 01797000
*                                                                  0664 01798000
         LH    @00,IXHSEO(,@10)                                    0664 01799000
         ALR   @00,@10                                             0664 01800000
         ST    @00,IXSSEP(,@15)                                    0664 01801000
*   /*****************************************************************/ 01802000
*   /*                                                               */ 01803000
*   /* SAVE THE DATA INSERT POINT AS AN RBA MULTIPLIER               */ 01804000
*   /*                                                               */ 01805000
*   /*****************************************************************/ 01806000
*                                                                  0665 01807000
*   RWORK1=(PLHDBUFC->BUFCDDDD-IXHBRBA)/AMDCINV;                   0665 01808000
         L     @15,PLHDBUFC(,RPLH)                                 0665 01809000
         L     RWORK1,BUFCDDDD(,@15)                               0665 01810000
         SL    RWORK1,IXHBRBA(,@10)                                0665 01811000
         L     @15,AMBDSB(,RAMB)                                   0665 01812000
         LR    @09,RWORK1                                          0665 01813000
         SLR   @08,@08                                             0665 01814000
         D     @08,AMDCINV(,@15)                                   0665 01815000
         LR    RWORK1,@09                                          0665 01816000
*   RWORK2=IXHPTLS;                 /* GET RBA POINTER MASK          */ 01817000
         SLR   RWORK2,RWORK2                                       0666 01818000
         IC    RWORK2,IXHPTLS(,@10)                                0666 01819000
*   RPARM1=ZERO;                    /* CLEAR SEARCH ARGUMENT         */ 01820000
         SLR   RPARM1,RPARM1                                       0667 01821000
*   GEN REFS(IBFLP3)(EX    RWORK2,ICMINS2);/* GET RBA MULTIPLIER     */ 01822000
         EX    RWORK2,ICMINS2                                           01823000
*   DO WHILE RPARM1^=RWORK1;        /* SCAN INDEX FOR INS. PT.       */ 01824000
         B     @DE00669                                            0669 01825000
@DL00669 DS    0H                                                  0670 01826000
*     CALL IXINCR;                  /* GO TO NEXT INDEX ENTRY        */ 01827000
         BAL   @14,IXINCR                                          0670 01828000
*     RWORK3=IXSHEP;                /* SET UP FOR ICMINS2            */ 01829000
         L     RWORK3,IXSHEP+200(,RPLH)                            0671 01830000
*     GEN(EX    RWORK2,ICMINS2);    /* GET RBA MULTIPLIER            */ 01831000
         EX    RWORK2,ICMINS2                                           01832000
*   END;                            /* END OF INDEX SEARCH           */ 01833000
@DE00669 CR    RPARM1,RWORK1                                       0673 01834000
         BNE   @DL00669                                            0673 01835000
*   GEN(IDARST14);                  /* RESTORE REG14         @ZA02289*/ 01836000
         IDARST14                                                       01837000
*   RETURN;                         /* BACK TO CALLER        @ZA02289*/ 01838000
         B     @EL00001                                            0675 01839000
*   RFY                                                            0676 01840000
*    (RWORK1,                                                      0676 01841000
*     RWORK2,                                                      0676 01842000
*     RWORK3) UNRSTD;               /* RELEASE WORK REGISTERS        */ 01843000
*                                                                  0677 01844000
*/*  NEXTRDF -- GO TO THE NEXT RDF IN THE DATA CONTROL INTERVAL      */ 01845000
*/*   FUNCTION - TO ADVANCE THE RDF POINTER AND COUNTER.             */ 01846000
*/*   INPUT - RWORK3 = ADDRESS OF LAST RDF OR RDF PAIR USED.         */ 01847000
*/* OUTPUT - RWORK3 = ADDRESS OF NEXT RDF OR RDF PAIR, RWORK2 = LEN. */ 01848000
*/* OF DATA RECORDS REPRESENTED BY RDFS, AND SPLTRDFC = NO. OF DATA  */ 01849000
*/* RECORDS REPRESENTED BY THE RDF OR RDF PAIR.                      */ 01850000
*                                                                  0677 01851000
*NEXTRDF:                                                          0677 01852000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0677 01853000
NEXTRDF  DS    0H                                                  0678 01854000
*   RFY                                                            0678 01855000
*     RWORK1 RSTD;                  /* SAVE REGISTER                 */ 01856000
*   RFY                                                            0679 01857000
*    (RWORK2,                                                      0679 01858000
*     RWORK3,                                                      0679 01859000
*     R14) RSTD;                    /* GET WORK REGS         @X04SVRQ*/ 01860000
*   RWORK3=RWORK3-LENGTH(IDARDF);   /* POINT TO NEXT RDF             */ 01861000
         LA    @15,3                                               0680 01862000
         SLR   RWORK3,@15                                          0680 01863000
*   RWORK2=RDFLL;                   /* GET LENGTH OF DATA            */ 01864000
         SLR   RWORK2,RWORK2                                       0681 01865000
         ICM   RWORK2,3,RDFLL(RWORK3)                              0681 01866000
*   IF RDFCTNU=ON                   /* SEE IF GROUP RDF              */ 01867000
*     THEN                          /* IF SO, GET DATA LENGTH        */ 01868000
         TM    RDFCTNU(RWORK3),B'01000000'                         0682 01869000
         BNO   @RF00682                                            0682 01870000
*     DO;                           /* AND GET NEXT RDF.             */ 01871000
*       RWORK3=RWORK3-LENGTH(IDARDF);/* PTR TO COUNT RDF             */ 01872000
         SLR   RWORK3,@15                                          0684 01873000
*       SPLTRDFC=RDFLL;             /* SET SPLIT RDF COUNT           */ 01874000
         L     @15,AMBIWA(,RAMB)                                   0685 01875000
         SLR   @10,@10                                             0685 01876000
         ICM   @10,3,RDFLL(RWORK3)                                 0685 01877000
         ST    @10,SPLTRDFC(,@15)                                  0685 01878000
*     END;                          /* END OF GROUP RDF CODE         */ 01879000
*   ELSE                            /* IF NOT A GROUP RDF,           */ 01880000
*     SPLTRDFC=ONE;                 /* SET COUNT TO ONE              */ 01881000
         B     @RC00682                                            0687 01882000
@RF00682 L     @15,AMBIWA(,RAMB)                                   0687 01883000
         MVC   SPLTRDFC(4,@15),@CF00046                            0687 01884000
*   END NEXTRDF;                    /* NEXT RDF SET                  */ 01885000
@EL00002 DS    0H                                                  0688 01886000
@EF00002 DS    0H                                                  0688 01887000
@ER00002 BR    @14                                                 0688 01888000
*                                                                  0689 01889000
*/*   BUILDFS -- BUILD A FREE SPACE CONTROL INTERVAL                 */ 01890000
*/*01 FUNCTION - BUILD ONE CONTROL OF FREE SPACE IN A DATA BUFFER    */ 01891000
*/*01 INPUT - RBUFC POINTS TO A DATA BUFC                            */ 01892000
*/*01 OUTPUT - WORK REGISTERS ARE ALTERED AND  A FREE SPACE CINV IS  */ 01893000
*/*            CREATED IN THE DESIRED BUFFER.  RWORK1 = ADDR(CIDF).  */ 01894000
*                                                                  0689 01895000
*BUILDFS:                                                          0689 01896000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0689 01897000
BUILDFS  DS    0H                                                  0690 01898000
*   RFY                                                            0690 01899000
*    (RWORK1,                                                      0690 01900000
*     RWORK2,                                                      0690 01901000
*     RWORK3,                                                      0690 01902000
*     RWORK4,                                                      0690 01903000
*     RWORK5,                                                      0690 01904000
*     R14) RSTD;                    /* GET WORK REGS.        @X04SVRQ*/ 01905000
*   RWORK2=BUFCBAD;                 /* POINT TO CINV                 */ 01906000
         L     RWORK2,BUFCBAD(,RBUFC)                              0691 01907000
*   RWORK3=AMDCINV;                 /* GET LENGTH                    */ 01908000
         L     @15,AMBDSB(,RAMB)                                   0692 01909000
         L     RWORK3,AMDCINV(,@15)                                0692 01910000
*   RWORK5=ZERO;                    /* GET PROPAGATION               */ 01911000
         SLR   RWORK5,RWORK5                                       0693 01912000
*   GEN SETS(RWORK2,RWORK3,RWORK4,RWORK5)(MVCL  RWORK2,RWORK4);/*  0694 01913000
*                                      ZERO                          */ 01914000
         MVCL  RWORK2,RWORK4                                            01915000
*   RFY                                                            0695 01916000
*    (RWORK4,                                                      0695 01917000
*     RWORK5) UNRSTD;               /* RELEASE WORK REGISTERS      0695 01918000
*                                                            @ZA31009*/ 01919000
*   RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* POINT TO CIDF          */ 01920000
         LA    @15,4                                               0696 01921000
         L     @10,AMBDSB(,RAMB)                                   0696 01922000
         L     @10,AMDCINV(,@10)                                   0696 01923000
         L     RWORK1,BUFCBAD(,RBUFC)                              0696 01924000
         ALR   RWORK1,@10                                          0696 01925000
         SLR   RWORK1,@15                                          0696 01926000
*   RWORK1->CIDFLL=AMDCINV-LENGTH(IDACIDF);/* SET FREE SPACE         */ 01927000
         SLR   @10,@15                                             0697 01928000
         STH   @10,CIDFLL(,RWORK1)                                 0697 01929000
*   END BUILDFS;                    /* FS CINV BUILT                 */ 01930000
@EL00003 DS    0H                                                  0698 01931000
@EF00003 DS    0H                                                  0698 01932000
@ER00003 BR    @14                                                 0698 01933000
*                                                                  0699 01934000
*/********************************************************************/ 01935000
*/*   IXINCR -- INCREMENT THE PLACEHOLDER SEQUENCE SET POINTERS      */ 01936000
*/*01 FUNCTION - INCREMENT IXSHEP, IXSSEP, AND IXSLEP.               */ 01937000
*/*01 INPUT - IXSHEP POINTS TO CURRENT INDEX ENTRY, IXSLEP IS A PTR  */ 01938000
*/*           TO THE LOW ENTRY IN THE SECTION, IXSSEP IS A PTR TO    */ 01939000
*/*           THE NEXT SECTION ENTRY.                                */ 01940000
*/*01 OUTPUT - IXSHEP, IXSLEP, AND IXSSEP ARE UPDATED AS NECESSARY.  */ 01941000
*/********************************************************************/ 01942000
*                                                                  0699 01943000
*IXINCR:                                                           0699 01944000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0699 01945000
IXINCR   DS    0H                                                  0700 01946000
*   RFY                                                            0700 01947000
*    (RWORK1,                                                      0700 01948000
*     RWORK2,                                                      0700 01949000
*     RWORK3,                                                      0700 01950000
*     R14) RSTD;                    /* GET REGISTERS                 */ 01951000
*   RWORK3=IXSHEP->IBFLPL;          /* GET VALUE OF CURRENT L        */ 01952000
         LA    @15,200                                             0701 01953000
         ALR   @15,RPLH                                            0701 01954000
         L     @10,IXSHEP(,@15)                                    0701 01955000
         SLR   RWORK3,RWORK3                                       0701 01956000
         IC    RWORK3,IBFLPL(,@10)                                 0701 01957000
*   IF IXSHEP=IXSSEP                /* IF AT A SECTION ENTRY,        */ 01958000
*     THEN                          /* ITS LL MUST BE INCLUDED       */ 01959000
         L     @09,IXSSEP(,@15)                                    0702 01960000
         CR    @10,@09                                             0702 01961000
         BNE   @RF00702                                            0702 01962000
*     DO;                                                          0703 01963000
*                                                                  0703 01964000
*       /*************************************************************/ 01965000
*       /*                                                           */ 01966000
*       /* INCREMENT THE CURRENT ENTRY POINTER                       */ 01967000
*       /*                                                           */ 01968000
*       /*************************************************************/ 01969000
*                                                                  0704 01970000
*       IXSHEP=IXSHEP-IXHFLPLN-LENGTH(IXSELL)-RWORK3;              0704 01971000
         L     @08,BUFCBAD(,RBUFC)                                 0704 01972000
         SLR   @00,@00                                             0704 01973000
         IC    @00,IXHFLPLN(,@08)                                  0704 01974000
         SLR   @10,@00                                             0704 01975000
         BCTR  @10,0                                               0704 01976000
         BCTR  @10,0                                               0704 01977000
         SLR   @10,RWORK3                                          0704 01978000
         ST    @10,IXSHEP(,@15)                                    0704 01979000
*       RWORK3=IXSHEP+IXHFLPLN;     /* POINT TO THE SECTION LL       */ 01980000
         ALR   @00,@10                                             0705 01981000
         LR    RWORK3,@00                                          0705 01982000
*       IXSSEP=IXSSEP-RWORK3->IXSELL;/* ADJUST NEXT SECTION PTR      */ 01983000
         SLR   @00,@00                                             0706 01984000
         ICM   @00,3,IXSELL(RWORK3)                                0706 01985000
         SLR   @09,@00                                             0706 01986000
         ST    @09,IXSSEP(,@15)                                    0706 01987000
*       IXSLEP=IXSHEP;              /* NEW LOW ENTRY                 */ 01988000
         ST    @10,IXSLEP(,@15)                                    0707 01989000
*     END;                          /* END OF SECTION CROSSING       */ 01990000
*   ELSE                            /* NOT AT SECTION ENTRY.         */ 01991000
*     IXSHEP=IXSHEP-RWORK3-IXHFLPLN;/* NORMAL IX INCREMENT           */ 01992000
         B     @RC00702                                            0709 01993000
@RF00702 LA    @15,200                                             0709 01994000
         ALR   @15,RPLH                                            0709 01995000
         L     @10,IXSHEP(,@15)                                    0709 01996000
         SLR   @10,RWORK3                                          0709 01997000
         L     @09,BUFCBAD(,RBUFC)                                 0709 01998000
         SLR   @00,@00                                             0709 01999000
         IC    @00,IXHFLPLN(,@09)                                  0709 02000000
         SLR   @10,@00                                             0709 02001000
         ST    @10,IXSHEP(,@15)                                    0709 02002000
*   RETURN;                         /* RETURN TO CALLER              */ 02003000
@EL00004 DS    0H                                                  0710 02004000
@EF00004 DS    0H                                                  0710 02005000
@ER00004 BR    @14                                                 0710 02006000
*   END IXINCR;                     /* END OF INDEX INCREMENT        */ 02007000
         B     @EL00004                                            0711 02008000
*                                                                  0712 02009000
*/********************************************************************/ 02010000
*/*           IDASPLT2 -- ERASE HIGH HALF OF A CI                    */ 02011000
*/* INPUT - PLHDBUFC POINTS TO THE CI, SPLTRDFP POINTS TO THE        */ 02012000
*/*         RDF SPLIT POINT, SPLTDPTR POINTS TO THE DATA SPLIT       */ 02013000
*/*         POINT, AND SPLTRDFC IS SET.                              */ 02014000
*/* OUTPUT - WORK REGISTERS ARE ALTERED, DATA AND RDFS ARE REMOVED,  */ 02015000
*/*         AND CIDF IS UPDATED.  RBUFC IS UNCHANGED.        @ZA31009*/ 02016000
*/********************************************************************/ 02017000
*                                                                  0712 02018000
*IDASPLT2:                                                         0712 02019000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0712 02020000
IDASPLT2 DS    0H                                                  0713 02021000
*   RFY                                                            0713 02022000
*     R14 RSTD;                     /* SAVE RETURN REG       @ZA31009*/ 02023000
*   RFY                                                            0714 02024000
*    (RWORK1,                                                      0714 02025000
*     RWORK2,                                                      0714 02026000
*     RWORK3,                                                      0714 02027000
*     RWORK4,                                                      0714 02028000
*     RWORK5) RSTD;                 /* REGS                  @ZA31009*/ 02029000
*   RWORK1=SPLTRDFP;                /* POINT TO RDF SPLIT PT @ZA31009*/ 02030000
         L     @15,AMBIWA(,RAMB)                                   0715 02031000
         L     RWORK1,SPLTRDFP(,@15)                               0715 02032000
*   RWORK2=SPLTDPTR;                /* POINT TO DATA SPLIT PT      0716 02033000
*                                                            @ZA31009*/ 02034000
         L     RWORK2,SPLTDPTR(,@15)                               0716 02035000
*/*  UPDATE THE CIDF IN THE OLD CI                           @ZA31009*/ 02036000
*                                                                  0717 02037000
*   RWORK3=RWORK1-RWORK2;           /* LENGTH OF FREE SPACE  @ZA31009*/ 02038000
         LR    RWORK3,RWORK1                                       0717 02039000
         SLR   RWORK3,RWORK2                                       0717 02040000
*/*  POINT TO CIDF                                           @ZA31009*/ 02041000
*                                                                  0718 02042000
*   RWORK5=PLHDBUFC->BUFCBAD+AMDCINV-LENGTH(IDACIDF);              0718 02043000
*                                                                  0718 02044000
         L     @15,PLHDBUFC(,RPLH)                                 0718 02045000
         L     @15,BUFCBAD(,@15)                                   0718 02046000
         L     @10,AMBDSB(,RAMB)                                   0718 02047000
         LR    RWORK5,@15                                          0718 02048000
         AL    RWORK5,AMDCINV(,@10)                                0718 02049000
         SL    RWORK5,@CF00197                                     0718 02050000
*/*  SET NEW FREE SPACE LENGTH AND OFFSET IN THE CIDF        @ZA31009*/ 02051000
*                                                                  0719 02052000
*   RWORK5->CIDFLL=RWORK3;          /* NEW FREE SPACE LENGTH @ZA31009*/ 02053000
         STH   RWORK3,CIDFLL(,RWORK5)                              0719 02054000
*   RWORK5->CIDFOSET=RWORK2-PLHDBUFC->BUFCBAD;/* FSO         @ZA31009*/ 02055000
         LCR   @15,@15                                             0720 02056000
         ALR   @15,RWORK2                                          0720 02057000
         STH   @15,CIDFOSET(,RWORK5)                               0720 02058000
*/*  REMOVE DATA AND RDFS BETWEEN RWORK2 AND RWORK1          @ZA31009*/ 02059000
*                                                                  0721 02060000
*   RWORK5=ZERO;                    /* SET FOR PROPAGATION   @ZA31009*/ 02061000
         SLR   RWORK5,RWORK5                                       0721 02062000
*   MVCL(RWORK2,RWORK4);            /* ZERO FREE SPACE       @ZA31009*/ 02063000
         MVCL  RWORK2,RWORK4                                       0722 02064000
*/*  IF THE SPLIT POINT IS AT A REPLICATED RDF, IT MAY HAVE TO BE    */ 02065000
*/*  CONVERTED TO A NON-REPLICATED ONE.                      @ZA31009*/ 02066000
*                                                                  0723 02067000
*   IF RWORK1->RDFREPL=ON THEN      /* IS IT REPLICATED?     @ZA31009*/ 02068000
         TM    RDFREPL(RWORK1),B'00001000'                         0723 02069000
         BNO   @RF00723                                            0723 02070000
*     DO;                           /* YES, DO THE FOLLOWING @ZA31009*/ 02071000
*       RWORK1->RDFLL=RWORK1->RDFLL-SPLTRDFC;/* RESET COUNT          */ 02072000
         L     @15,AMBIWA(,RAMB)                                   0725 02073000
         SLR   @10,@10                                             0725 02074000
         ICM   @10,3,RDFLL(RWORK1)                                 0725 02075000
         SL    @10,SPLTRDFC(,@15)                                  0725 02076000
         STCM  @10,3,RDFLL(RWORK1)                                 0725 02077000
*       RWORK3=ZERO;                /* INITIALIZE RDF CORRECTION     */ 02078000
         SLR   RWORK3,RWORK3                                       0726 02079000
*       IF RWORK1->RDFLL=ONE        /* IF OLD REPLIC COUNT IS        */ 02080000
*         THEN                      /* NOW ONE, CONVERT RDF          */ 02081000
         C     @10,@CF00046                                        0727 02082000
         BNE   @RF00727                                            0727 02083000
*         DO;                       /* TO A SINGLE ONE.              */ 02084000
*           RWORK3=LENGTH(IDARDF);  /* GET FS INCREMENT              */ 02085000
         LA    @15,3                                               0729 02086000
         LR    RWORK3,@15                                          0729 02087000
*           RWORK1->IDARDF=RWORK1->IDARDF&&/* SET OLD                */ 02088000
*               RWORK1->IDARDF;     /* RDF COUNT TO ZERO             */ 02089000
         XC    IDARDF(3,RWORK1),IDARDF(RWORK1)                     0730 02090000
*           RWORK1=RWORK1+LENGTH(IDARDF);/* POINT TO 2ND RDF         */ 02091000
         ALR   RWORK1,@15                                          0731 02092000
*           RWORK1->RDFREPL=OFF;    /* INDICATE A NON-GROUP          */ 02093000
*           RWORK1->RDFCTNU=OFF;    /* RDF IS HERE                   */ 02094000
         NI    RDFREPL(RWORK1),B'10110111'                         0733 02095000
*         END;                      /* END OF OLD RDF CONVERT        */ 02096000
*       ELSE                        /* HERE IF NOT COUNT OF 1        */ 02097000
*         IF RWORK1->RDFLL=ZERO     /* IF AT BEGINNING OF            */ 02098000
*           THEN                    /* GROUP, ELIMINATE GRP          */ 02099000
         B     @RC00727                                            0735 02100000
@RF00727 ICM   @15,3,RDFLL(RWORK1)                                 0735 02101000
         BNZ   @RF00735                                            0735 02102000
*           DO;                     /* RDF COMPLETELY.               */ 02103000
*             RWORK3=LENGTH(GRPRDF);/* GET FS INCREMENT VALUE        */ 02104000
         LA    RWORK3,6                                            0737 02105000
*             RWORK1->GRPRDF=RWORK1->GRPRDF&&/* CONVERT GROUP        */ 02106000
*                 RWORK1->GRPRDF;   /* RDF TO BINARY ZEROES          */ 02107000
         XC    GRPRDF(6,RWORK1),GRPRDF(RWORK1)                     0738 02108000
*           END;                    /* END OF GRP RDF ELIMINAT       */ 02109000
*     END;                          /* END OF GROUP RDF      @ZA31009*/ 02110000
*   ELSE                            /* HERE IF NON-GROUP RDF @ZA31009*/ 02111000
*     DO;                           /* REMOVE NON-GROUP RDF  @ZA31009*/ 02112000
         B     @RC00723                                            0741 02113000
@RF00723 DS    0H                                                  0742 02114000
*       RWORK3=LENGTH(IDARDF);      /* GET LENGTH OF RDF     @ZA31009*/ 02115000
         LA    RWORK3,3                                            0742 02116000
*       RWORK1->IDARDF=RWORK1->IDARDF&&RWORK1->IDARDF;/*     @ZA31009*/ 02117000
         XC    IDARDF(3,RWORK1),IDARDF(RWORK1)                     0743 02118000
*     END;                          /* END OF NON-GROUP RDF  @ZA31009*/ 02119000
*   RFY                                                            0745 02120000
*    (RWORK1,                                                      0745 02121000
*     RWORK2,                                                      0745 02122000
*     RWORK4) UNRSTD;               /* DROP REGS             @ZA31009*/ 02123000
@RC00723 DS    0H                                                  0746 02124000
*/*  POINT TO AND ADJUST THE OLD CI CIDF.                    @ZA31009*/ 02125000
*                                                                  0746 02126000
*   RWORK5=PLHDBUFC->BUFCBAD+AMDCINV-LENGTH(IDACIDF);/*      @ZA31009*/ 02127000
         L     @15,PLHDBUFC(,RPLH)                                 0746 02128000
         L     @10,AMBDSB(,RAMB)                                   0746 02129000
         L     RWORK5,BUFCBAD(,@15)                                0746 02130000
         AL    RWORK5,AMDCINV(,@10)                                0746 02131000
         SL    RWORK5,@CF00197                                     0746 02132000
*   RWORK5->CIDFLL=RWORK5->CIDFLL+RWORK3;/* ADJUST           @ZA31009*/ 02133000
         LR    @15,RWORK3                                          0747 02134000
         AH    @15,CIDFLL(,RWORK5)                                 0747 02135000
         STH   @15,CIDFLL(,RWORK5)                                 0747 02136000
*   RFY                                                            0748 02137000
*     R14 UNRSTD;                   /* RELEASE RETURN REG    @ZA31009*/ 02138000
*   RFY                                                            0749 02139000
*    (RWORK3,                                                      0749 02140000
*     RWORK5) UNRSTD;               /* DROP REGS             @ZA31009*/ 02141000
*   END IDASPLT2;                   /* END OF FS CONVERT     @ZA31009*/ 02142000
@EL00005 DS    0H                                                  0750 02143000
@EF00005 DS    0H                                                  0750 02144000
@ER00005 BR    @14                                                 0750 02145000
*                                                                  0751 02146000
*   /*****************************************************************/ 02147000
*   /*                                                               */ 02148000
*   /* WRTDATA SUBROUTINE - WRITES OLD CINV WITH BUSY BIT ON AND NEW */ 02149000
*   /* CINV                                                  @ZA31009*/ 02150000
*   /*                                                               */ 02151000
*   /*****************************************************************/ 02152000
*                                                                  0751 02153000
*WRTDATA:                                                          0751 02154000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* WRITE OLD/NEW CIS     @ZA31009*/ 02155000
WRTDATA  DS    0H                                                  0752 02156000
*   GEN(IDASVR14);                  /* SAVE RETURN           @ZA31009*/ 02157000
*                                                                  0752 02158000
         IDASVR14                                                       02159000
*   /*****************************************************************/ 02160000
*   /*                                                               */ 02161000
*   /* SET ON BUSY BIT IN THE OLD CI AND THEN WRITE THE OLD AND THE  */ 02162000
*   /* NEW CONTROL INTERVALS.                                @ZA31009*/ 02163000
*   /*                                                               */ 02164000
*   /*****************************************************************/ 02165000
*                                                                  0753 02166000
*   RBUFC=DIWBUFC;                  /* POINT TO NEW CI BUFC  @ZA31009*/ 02167000
         L     @10,AMBIWA(,RAMB)                                   0753 02168000
         L     RBUFC,DIWBUFC(,@10)                                 0753 02169000
*   BUFCMW=ON;                      /* CAUSE WRITE           @ZA31009*/ 02170000
*                                                                  0754 02171000
         OI    BUFCMW(RBUFC),B'10000000'                           0754 02172000
*   /*****************************************************************/ 02173000
*   /*                                                               */ 02174000
*   /* IF NSR, CHAIN IN THE WORK BUFFER TO SAVE 1 I/O.       @ZA31009*/ 02175000
*   /*                                                               */ 02176000
*   /*****************************************************************/ 02177000
*                                                                  0755 02178000
*   IF AMBLSR=OFF&AMBGSR=OFF THEN   /*                       @ZA31009*/ 02179000
         TM    AMBLSR(RAMB),B'01100000'                            0755 02180000
         BNZ   @RF00755                                            0755 02181000
*I18:                                                              0756 02182000
*     DO;                           /* IDACALL(IDAAIBF)              */ 02183000
I18      DS    0H                                                  0757 02184000
*       CALL IDAAIBF;               /* EXIT TO IDAAIBF               */ 02185000
         L     @15,@CV01015                                        0757 02186000
         BALR  @14,@15                                             0757 02187000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 02188000
         BALR @11,0                                                     02189000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 02190000
         USING *,@11                                                    02191000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 02192000
         L     @11,=A(@PSTART)                                          02193000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 02194000
         USING @PSTART,@11                                              02195000
*     END I18;                      /*                       @ZA31009*/ 02196000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFFER  @ZA31009*/ 02197000
@RF00755 L     RBUFC,PLHDBUFC(,RPLH)                               0763 02198000
*   RFY                                                            0764 02199000
*     RWORK1 RSTD;                  /* GET WORK REG          @ZA31009*/ 02200000
*   RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* CIDF           @ZA31009*/ 02201000
         L     @10,AMBDSB(,RAMB)                                   0765 02202000
         L     RWORK1,BUFCBAD(,RBUFC)                              0765 02203000
         AL    RWORK1,AMDCINV(,@10)                                0765 02204000
         SL    RWORK1,@CF00197                                     0765 02205000
*   RWORK1->CIDFBUSY=ON;            /* MARK CI BUSY          @ZA31009*/ 02206000
         OI    CIDFBUSY(RWORK1),B'10000000'                        0766 02207000
*   BUFXORBA=BUFCDDDD;              /* SET OUTPUT RBA        @ZA31009*/ 02208000
         L     @10,BUFCDDDD(,RBUFC)                                0767 02209000
         ST    @10,BUFXORBA(,RBUFC)                                0767 02210000
*   BUFCORBA=BUFCDDDD;              /* SET OUTPUT RBA        @ZA31009*/ 02211000
         ST    @10,BUFCORBA(,RBUFC)                                0768 02212000
*   BUFCMW=ON;                      /* CAUSE WRITE           @ZA31009*/ 02213000
*                                                                  0769 02214000
         OI    BUFCMW(RBUFC),B'10000000'                           0769 02215000
*   /*****************************************************************/ 02216000
*   /*                                                               */ 02217000
*   /* DO A WRITE NOW. FOR NSR IT WILL WRITE BOTH THE OLD CI WITH THE*/ 02218000
*   /* BUSY BIT ON AND THE NEW CI. (WRITE CHANNEL PROGRAMS ARE       */ 02219000
*   /* CHAINED.) FOR LSR OR GSR, ONLY THE OLD CI WITH THE BIT ON WILL*/ 02220000
*   /* BE WRITTEN. (BUFCS ARE NOT CHAINED.)                  @ZA31009*/ 02221000
*   /*                                                               */ 02222000
*   /*****************************************************************/ 02223000
*                                                                  0770 02224000
*I19:                                                              0770 02225000
*   DO;                             /* IDACALL(IDAWRBFR)             */ 02226000
I19      DS    0H                                                  0771 02227000
*     CALL IDAWRBFR;                /* EXIT TO IDAWRBFR              */ 02228000
         L     @15,@CV01014                                        0771 02229000
         BALR  @14,@15                                             0771 02230000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02231000
         BALR @11,0                                                     02232000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02233000
         USING *,@11                                                    02234000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02235000
         L     @11,=A(@PSTART)                                          02236000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02237000
         USING @PSTART,@11                                              02238000
*   END I19;                        /* WRITE DATA SPLIT OFF          */ 02239000
*   RBUFC=DIWBUFC;                  /* PTR TO WORK BUFFER    @ZA31009*/ 02240000
         L     @10,AMBIWA(,RAMB)                                   0777 02241000
         L     RBUFC,DIWBUFC(,@10)                                 0777 02242000
*   IF AMBLSR=OFF&AMBGSR=OFF THEN   /* IF NSR                @ZA31009*/ 02243000
         TM    AMBLSR(RAMB),B'01100000'                            0778 02244000
         BNZ   @RF00778                                            0778 02245000
*I20:                                                              0779 02246000
*     DO;                           /* IDACALL(IDASBF)               */ 02247000
I20      DS    0H                                                  0780 02248000
*       CALL IDASBF;                /* EXIT TO IDASBF                */ 02249000
         L     @15,@CV01012                                        0780 02250000
         BALR  @14,@15                                             0780 02251000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 02252000
         BALR @11,0                                                     02253000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 02254000
         USING *,@11                                                    02255000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 02256000
         L     @11,=A(@PSTART)                                          02257000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 02258000
         USING @PSTART,@11                                              02259000
*     END I20;                      /* THEN DECHAIN INS BFR  @ZA31009*/ 02260000
*   ELSE                            /* LSR/GSR STILL MUST    @ZA31009*/ 02261000
*     DO;                           /* WRITE INSERT BUFFER.  @ZA31009*/ 02262000
         B     @RC00778                                            0786 02263000
@RF00778 DS    0H                                                  0787 02264000
*       IF RPLERREG='00'X THEN      /* IF NO I/O ERROR,      @ZA31009*/ 02265000
         CLI   RPLERREG(RRPL),0                                    0787 02266000
         BNE   @RF00787                                            0787 02267000
*I21:                                                              0788 02268000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 02269000
I21      DS    0H                                                  0789 02270000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 02271000
         L     @15,@CV01014                                        0789 02272000
         BALR  @14,@15                                             0789 02273000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02274000
         BALR @11,0                                                     02275000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02276000
         USING *,@11                                                    02277000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02278000
         L     @11,=A(@PSTART)                                          02279000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02280000
         USING @PSTART,@11                                              02281000
*         END I21;                  /* WRITE NEW CI          @ZA31009*/ 02282000
*       ELSE                        /* OLD CI WRITE ERROR    @ZA31009*/ 02283000
*         BUFCMW=OFF;               /* DO NOT BOTHER WITH NEW      0795 02284000
*                                                            @ZA31009*/ 02285000
         B     @RC00787                                            0795 02286000
@RF00787 NI    BUFCMW(RBUFC),B'01111111'                           0795 02287000
*     END;                          /* END OF LSR/GSR        @ZA31009*/ 02288000
@RC00787 DS    0H                                                  0797 02289000
*   GEN(IDARST14);                  /* RESTORE RETURN REG    @ZA31009*/ 02290000
@RC00778 DS    0H                                                  0797 02291000
         IDARST14                                                       02292000
*   RETURN;                         /* RETURN TO CALLER      @ZA31009*/ 02293000
@EL00006 DS    0H                                                  0798 02294000
@EF00006 DS    0H                                                  0798 02295000
@ER00006 BR    @14                                                 0798 02296000
*   END WRTDATA;                    /* WRITE OLD/NEW CIS     @ZA31009*/ 02297000
*                                                                  0800 02298000
*   /*****************************************************************/ 02299000
*   /*                                                               */ 02300000
*   /* REJRNAD SUBROUTINE - JOURNALS CINV SPLIT (IF ANY) AND THE DATA*/ 02301000
*   /* SPREAD (IF ANY)                                       @ZA31009*/ 02302000
*   /*                                                               */ 02303000
*   /*****************************************************************/ 02304000
*                                                                  0800 02305000
*REJRNAD:                                                          0800 02306000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0800 02307000
REJRNAD  DS    0H                                                  0801 02308000
*   GEN(IDASVR14);                  /* SAVE RETURN REG       @ZA31009*/ 02309000
         IDASVR14                                                       02310000
*   PLHJCODE=PLHJRBAC;              /* RBA CHANGE            @ZA31009*/ 02311000
         MVI   PLHJCODE(RPLH),B'00001100'                          0802 02312000
*   IF SPLTDPTR^=ZERO THEN          /* TRUE SPLIT            @ZA31009*/ 02313000
         L     @10,AMBIWA(,RAMB)                                   0803 02314000
         L     @00,SPLTDPTR(,@10)                                  0803 02315000
         LTR   @00,@00                                             0803 02316000
         BZ    @RF00803                                            0803 02317000
*     DO;                           /*                       @ZA31009*/ 02318000
*       RFY                                                        0805 02319000
*         RWORK3 RSTD;              /*                       @ZA31009*/ 02320000
*       PLHJNRBA=DIWBUFC->BUFCORBA; /* NEW RBA               @ZA31009*/ 02321000
*                                                                  0806 02322000
         L     @10,DIWBUFC(,@10)                                   0806 02323000
         L     @06,BUFCORBA(,@10)                                  0806 02324000
         ST    @06,PLHJNRBA(,RPLH)                                 0806 02325000
*       /*************************************************************/ 02326000
*       /*                                                           */ 02327000
*       /* SET LENGTH OF DATA MOVED                          @ZA31009*/ 02328000
*       /*                                                           */ 02329000
*       /*************************************************************/ 02330000
*                                                                  0807 02331000
*       RWORK3=DIWBUFC->BUFCBAD+AMDCINV-LENGTH(IDACIDF);           0807 02332000
         LA    @15,4                                               0807 02333000
         L     @14,AMBDSB(,RAMB)                                   0807 02334000
         L     @14,AMDCINV(,@14)                                   0807 02335000
         L     RWORK3,BUFCBAD(,@10)                                0807 02336000
         ALR   RWORK3,@14                                          0807 02337000
         SLR   RWORK3,@15                                          0807 02338000
*       PLHJRNLL=RWORK3->CIDFOSET;  /*                       @ZA31009*/ 02339000
*                                                                  0808 02340000
         LH    @10,CIDFOSET(,RWORK3)                               0808 02341000
         ST    @10,PLHJRNLL(,RPLH)                                 0808 02342000
*       /*************************************************************/ 02343000
*       /*                                                           */ 02344000
*       /* SET OLD RBA                                       @ZA31009*/ 02345000
*       /*                                                           */ 02346000
*       /*************************************************************/ 02347000
*                                                                  0809 02348000
*       RWORK3=PLHDBUFC->BUFCBAD+AMDCINV-LENGTH(IDACIDF);          0809 02349000
         L     @10,PLHDBUFC(,RPLH)                                 0809 02350000
         L     @09,BUFCBAD(,@10)                                   0809 02351000
         ALR   @14,@09                                             0809 02352000
         SLR   @14,@15                                             0809 02353000
         LR    RWORK3,@14                                          0809 02354000
*       PLHJORBA=PLHDBUFC->BUFCORBA+RWORK3->CIDFOSET;              0810 02355000
*                                                                  0810 02356000
         LH    @06,CIDFOSET(,RWORK3)                               0810 02357000
         AL    @06,BUFCORBA(,@10)                                  0810 02358000
         ST    @06,PLHJORBA(,RPLH)                                 0810 02359000
*       /*************************************************************/ 02360000
*       /*                                                           */ 02361000
*       /* ADJUST OLD RBA IF INSERT IS IN THE OLD CINV       @ZA31009*/ 02362000
*       /*                                                           */ 02363000
*       /*************************************************************/ 02364000
*                                                                  0811 02365000
*       IF PLHCIINS=ON&RPLUPD=OFF THEN                             0811 02366000
         TM    PLHCIINS(RPLH),B'00000100'                          0811 02367000
         BNO   @RF00811                                            0811 02368000
         TM    RPLUPD(RRPL),B'00000010'                            0811 02369000
         BNZ   @RF00811                                            0811 02370000
*         DO;                       /* INSERT IN OLD         @ZA31009*/ 02371000
*           IF PLHRECP<=RWORK3&PLHRECP>=PLHDBUFC->BUFCBAD THEN     0813 02372000
         L     @10,PLHRECP(,RPLH)                                  0813 02373000
         CR    @10,RWORK3                                          0813 02374000
         BH    @RF00813                                            0813 02375000
         CR    @10,@09                                             0813 02376000
         BL    @RF00813                                            0813 02377000
*             PLHJORBA=PLHJORBA-RPLRLEN;                           0814 02378000
         SL    @06,RPLRLEN(,RRPL)                                  0814 02379000
         ST    @06,PLHJORBA(,RPLH)                                 0814 02380000
*           ELSE                    /* INSERT IN NEW         @ZA31009*/ 02381000
*             PLHJRNLL=PLHJRNLL-RPLRLEN;                           0815 02382000
         B     @RC00813                                            0815 02383000
@RF00813 L     @10,PLHJRNLL(,RPLH)                                 0815 02384000
         SL    @10,RPLRLEN(,RRPL)                                  0815 02385000
         ST    @10,PLHJRNLL(,RPLH)                                 0815 02386000
*         END;                      /* END INS ADJUST        @ZA31009*/ 02387000
@RC00813 DS    0H                                                  0817 02388000
*I22:                                                              0817 02389000
*       DO;                         /* IDACALL(IDATJXIT)             */ 02390000
@RF00811 DS    0H                                                  0817 02391000
I22      DS    0H                                                  0818 02392000
*         CALL IDATJXIT;            /* EXIT TO IDATJXIT              */ 02393000
         L     @15,@CV01013                                        0818 02394000
         BALR  @14,@15                                             0818 02395000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02396000
         BALR @11,0                                                     02397000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02398000
         USING *,@11                                                    02399000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02400000
         L     @11,=A(@PSTART)                                          02401000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02402000
         USING @PSTART,@11                                              02403000
*       END I22;                    /* JOURNAL THE SPLIT     @ZA31009*/ 02404000
*     END;                          /* END TRUE SPLIT        @ZA31009*/ 02405000
*   IF PLHCIINS=ON&RPLUPD=OFF       /* IF THE DATA RECORD WAS      0825 02406000
*                                                            @ZA31009*/ 02407000
*     THEN                          /* INSERTED, JOURNAL THE @ZA31009*/ 02408000
@RF00803 TM    PLHCIINS(RPLH),B'00000100'                          0825 02409000
         BNO   @RF00825                                            0825 02410000
         TM    RPLUPD(RRPL),B'00000010'                            0825 02411000
         BNZ   @RF00825                                            0825 02412000
*     DO;                           /* INSERT.               @ZA31009*/ 02413000
*       IF PLHRECP^=PLHFSP          /* IF DATA HAD TO BE     @ZA31009*/ 02414000
*         THEN                      /* SPREAD APART FOR INS. @ZA31009*/ 02415000
         L     @10,PLHRECP(,RPLH)                                  0827 02416000
         L     @06,PLHFSP(,RPLH)                                   0827 02417000
         CR    @10,@06                                             0827 02418000
         BE    @RF00827                                            0827 02419000
*         DO;                       /* JOURNAL IT            @ZA31009*/ 02420000
*           PLHJRNLL=PLHFSP-PLHRECP;/* GET SHIFT LENGTH      @ZA31009*/ 02421000
         SLR   @06,@10                                             0829 02422000
         ST    @06,PLHJRNLL(,RPLH)                                 0829 02423000
*           PLHJORBA=RPLDDDD;       /* INSERT DONE AT FRONT  @ZA31009*/ 02424000
         L     @10,RPLDDDD(,RRPL)                                  0830 02425000
         ST    @10,PLHJORBA(,RPLH)                                 0830 02426000
*           PLHJNRBA=RPLDDDD+RPLRLEN;/* NEW RBA AT END       @ZA31009*/ 02427000
         AL    @10,RPLRLEN(,RRPL)                                  0831 02428000
         ST    @10,PLHJNRBA(,RPLH)                                 0831 02429000
*I23:                                                              0832 02430000
*           DO;                     /* IDACALL(IDATJXIT)             */ 02431000
I23      DS    0H                                                  0833 02432000
*             CALL IDATJXIT;        /* EXIT TO IDATJXIT              */ 02433000
         L     @15,@CV01013                                        0833 02434000
         BALR  @14,@15                                             0833 02435000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 02436000
         BALR @11,0                                                     02437000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02438000
         USING *,@11                                                    02439000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02440000
         L     @11,=A(@PSTART)                                          02441000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02442000
         USING @PSTART,@11                                              02443000
*           END I23;                /* JOURNAL SPREAD APART  @ZA31009*/ 02444000
*         END;                      /* END JOURNAL DATA SHFT @ZA31009*/ 02445000
*     END;                          /* END OF JOURNAL INSERT @ZA31009*/ 02446000
@RF00827 DS    0H                                                  0841 02447000
*   GEN(IDARST14);                  /* RESTORE RETURN REG    @ZA31009*/ 02448000
@RF00825 DS    0H                                                  0841 02449000
         IDARST14                                                       02450000
*   RETURN;                         /* RETURN TO CALLER      @ZA31009*/ 02451000
@EL00007 DS    0H                                                  0842 02452000
@EF00007 DS    0H                                                  0842 02453000
@ER00007 BR    @14                                                 0842 02454000
*   END REJRNAD;                    /* END JRNAD SUBROUTINE  @ZA31009*/ 02455000
*                                                                  0844 02456000
*/*  FREE INSERT BUFFER LEAVING CONTENTS VALIDITY UNCHANGED. @ZA31009*/ 02457000
*                                                                  0844 02458000
*CISPLER2:                                                         0844 02459000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0844 02460000
CISPLER2 DS    0H                                                  0845 02461000
*   RBUFC=DIWBUFC;                  /* POINT TO INSERT BUFC  @ZA31009*/ 02462000
         L     @10,AMBIWA(,RAMB)                                   0845 02463000
         L     RBUFC,DIWBUFC(,@10)                                 0845 02464000
*I24:                                                              0846 02465000
*   DO;                             /* IDACALL(IDAFREEB)             */ 02466000
I24      DS    0H                                                  0847 02467000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 02468000
         L     @15,@CV01019                                        0847 02469000
         BALR  @14,@15                                             0847 02470000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02471000
         BALR @11,0                                                     02472000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02473000
         USING *,@11                                                    02474000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02475000
         L     @11,=A(@PSTART)                                          02476000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02477000
         USING @PSTART,@11                                              02478000
*   END I24;                        /* FREE INSERT BUFFER    @ZA31009*/ 02479000
*   PLHCIINS=OFF;                   /* RESET INSERT FLAG     @ZA31009*/ 02480000
         NI    PLHCIINS(RPLH),B'11111011'                          0853 02481000
*   GEN(IDARST14);                  /* RESTORE EXTERNAL R14  @ZA31009*/ 02482000
         IDARST14                                                       02483000
*   END CISPLER2;                   /* END OF FREE INS BFR   @ZA31009*/ 02484000
@EL00008 DS    0H                                                  0855 02485000
@EF00008 DS    0H                                                  0855 02486000
@ER00008 BR    @14                                                 0855 02487000
*                                                                  0856 02488000
*/*  INVALIDATE AND FREE THE INSERT BUFFER.                  @ZA31009*/ 02489000
*                                                                  0856 02490000
*CISPLER3:                                                         0856 02491000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0856 02492000
CISPLER3 DS    0H                                                  0857 02493000
*   DIWBUFC->BUFCVAL=OFF;           /* INVALIDATE INSERT BFR @ZA31009*/ 02494000
         L     @10,AMBIWA(,RAMB)                                   0857 02495000
         L     @10,DIWBUFC(,@10)                                   0857 02496000
         NI    BUFCVAL(@10),B'11111011'                            0857 02497000
*   CALL CISPLER2;                  /* FREE INSERT BUFFER    @ZA31009*/ 02498000
         BAL   @14,CISPLER2                                        0858 02499000
*   END CISPLER3;                   /* END OF FREE INS BFR   @ZA31009*/ 02500000
@EL00009 DS    0H                                                  0859 02501000
@EF00009 DS    0H                                                  0859 02502000
@ER00009 BR    @14                                                 0859 02503000
*   GEN REFS(HWORD4)(IDAPATCH);     /* FURNISH PATCH AREA.   @ZA31009*/ 02504000
         IDAPATCH                                                       02505000
*   END IDA019RE                    /* END OF CI SPLIT               */ 02506000
*                                                                  0861 02507000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02508000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02509000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02510000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02511000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02512000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02513000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02514000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02515000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02516000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02517000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02518000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02519000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02520000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02521000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02522000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02523000
*                                                                  0861 02524000
*       ;                                                          0861 02525000
         B     @EL00001                                            0861 02526000
@DATA    DS    0H                                                       02527000
@DATD    DSECT                                                          02528000
         DS    0F                                                       02529000
IDA019RE CSECT                                                          02530000
         DS    0F                                                       02531000
@CF00046 DC    F'1'                                                     02532000
@CH00046 EQU   @CF00046+2                                               02533000
@CF00076 DC    F'2'                                                     02534000
@CF00066 DC    F'3'                                                     02535000
@CF00197 DC    F'4'                                                     02536000
@CF00356 DC    F'6'                                                     02537000
@CF00050 DC    F'7'                                                     02538000
@CF00038 DC    F'15'                                                    02539000
@CF00085 DC    F'24'                                                    02540000
@CF01143 DC    XL4'0000FFFF'                                            02541000
@DATD    DSECT                                                          02542000
         DS    0D                                                       02543000
IDA019RE CSECT                                                          02544000
         DS    0F                                                       02545000
@SIZDATD DC    AL1(0)                                                   02546000
         DC    AL3(@ENDDATD-@DATD)                                      02547000
@CA01045 DC    A(IDAREPOS)                                              02548000
@CV01010 DC    V(IDAGNFL)                                               02549000
@CV01011 DC    V(IDAGRB)                                                02550000
@CV01012 DC    V(IDASBF)                                                02551000
@CV01013 DC    V(IDATJXIT)                                              02552000
@CV01014 DC    V(IDAWRBFR)                                              02553000
@CV01015 DC    V(IDAAIBF)                                               02554000
@CV01016 DC    V(IDA019RF)                                              02555000
@CV01017 DC    V(IDA019RH)                                              02556000
@CV01018 DC    V(IDA019RM)                                              02557000
@CV01019 DC    V(IDAFREEB)                                              02558000
@CV01034 DC    V(IDA019ST)                                              02559000
         DS    0D                                                       02560000
HWORD4   DC    H'4'                                                     02561000
@DATD    DSECT                                                          02562000
*                                                          /*@X04SVLC*/ 02563000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02564000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02565000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02566000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02567000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02568000
RDFLEN   EQU   3                        LENGTH OF RDF                   02569000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02570000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02571000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02572000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02573000
@DATD    DSECT                                                          02574000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02575000
@ENDDATD EQU   *                                                        02576000
IDA019RE CSECT                                                          02577000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02578000
@01      EQU   01                                                       02579000
@02      EQU   02                                                       02580000
@03      EQU   03                                                       02581000
@04      EQU   04                                                       02582000
@05      EQU   05                                                       02583000
@06      EQU   06                                                       02584000
@07      EQU   07                                                       02585000
@08      EQU   08                                                       02586000
@09      EQU   09                                                       02587000
@10      EQU   10                                                       02588000
@11      EQU   11                                                       02589000
@12      EQU   12                                                       02590000
@13      EQU   13                                                       02591000
@14      EQU   14                                                       02592000
@15      EQU   15                                                       02593000
RRPL     EQU   @01                                                      02594000
RPLH     EQU   @02                                                      02595000
RAMB     EQU   @03                                                      02596000
RBUFC    EQU   @04                                                      02597000
RWORK1   EQU   @05                                                      02598000
RWORK2   EQU   @06                                                      02599000
RWORK3   EQU   @07                                                      02600000
RWORK4   EQU   @08                                                      02601000
RWORK5   EQU   @09                                                      02602000
RPARM1   EQU   @12                                                      02603000
R14      EQU   @14                                                      02604000
R15      EQU   @15                                                      02605000
RWORK0   EQU   @00                                                      02606000
R1       EQU   @01                                                      02607000
R10      EQU   @10                                                      02608000
R11      EQU   @11                                                      02609000
R13      EQU   @13                                                      02610000
IDAAMB   EQU   0                                                        02611000
AMBDSB   EQU   IDAAMB+20                                                02612000
AMBEOVR  EQU   IDAAMB+24                                                02613000
AMBFLG0  EQU   AMBEOVR                                                  02614000
AMBFLG1  EQU   IDAAMB+25                                                02615000
AMBJRN   EQU   AMBFLG1                                                  02616000
AMBINBUF EQU   AMBFLG1                                                  02617000
AMBDSORG EQU   IDAAMB+26                                                02618000
AMBIOBAD EQU   IDAAMB+28                                                02619000
AMBINFL  EQU   IDAAMB+42                                                02620000
AMBCAT   EQU   AMBINFL                                                  02621000
AMBSCRA  EQU   AMBINFL                                                  02622000
AMBUCRA  EQU   AMBINFL                                                  02623000
AMBDEBPT EQU   IDAAMB+44                                                02624000
AMBOFLGS EQU   IDAAMB+48                                                02625000
AMBFLG2  EQU   IDAAMB+49                                                02626000
AMBEOVPT EQU   IDAAMB+56                                                02627000
AMBIWA   EQU   IDAAMB+64                                                02628000
AMBCSWD1 EQU   IDAAMB+84                                                02629000
AMBAFLG  EQU   AMBCSWD1                                                 02630000
AMBLSR   EQU   AMBAFLG                                                  02631000
AMBGSR   EQU   AMBAFLG                                                  02632000
AMBSIS   EQU   AMBAFLG                                                  02633000
AMBTRACE EQU   IDAAMB+120                                               02634000
IDAAMBL  EQU   0                                                        02635000
AMBLEOV  EQU   IDAAMBL+12                                               02636000
AMBLEFLG EQU   AMBLEOV                                                  02637000
AMBLDDNM EQU   IDAAMBL+16                                               02638000
AMBLIDF  EQU   AMBLDDNM                                                 02639000
AMBLQ    EQU   AMBLIDF+7                                                02640000
AMBLVC   EQU   IDAAMBL+28                                               02641000
AMBLTYPE EQU   IDAAMBL+30                                               02642000
AMBLSHAR EQU   IDAAMBL+33                                               02643000
AMBLFLG1 EQU   IDAAMBL+35                                               02644000
AMBLFLG2 EQU   IDAAMBL+36                                               02645000
AMBLDTA  EQU   IDAAMBL+52                                               02646000
AMBLIX   EQU   IDAAMBL+56                                               02647000
IFGRPL   EQU   0                                                        02648000
RPLCOMN  EQU   IFGRPL                                                   02649000
RPLIDWD  EQU   RPLCOMN                                                  02650000
RPLLEN   EQU   RPLIDWD+3                                                02651000
RPLECB   EQU   RPLCOMN+8                                                02652000
RPLFDBWD EQU   RPLCOMN+12                                               02653000
RPLFDBK  EQU   RPLFDBWD+1                                               02654000
RPLRTNCD EQU   RPLFDBK                                                  02655000
RPLERREG EQU   RPLRTNCD                                                 02656000
RPLCNDCD EQU   RPLFDBK+1                                                02657000
RPLCMPON EQU   RPLCNDCD                                                 02658000
RPLFDB2  EQU   RPLCMPON                                                 02659000
RPLERRCD EQU   RPLCNDCD+1                                               02660000
RPLFDB3  EQU   RPLERRCD                                                 02661000
RPLKEYLE EQU   RPLCOMN+16                                               02662000
RPLDACB  EQU   RPLCOMN+24                                               02663000
RPLARG   EQU   RPLCOMN+36                                               02664000
RPLOPTCD EQU   RPLCOMN+40                                               02665000
RPLOPT1  EQU   RPLOPTCD                                                 02666000
RPLSEQ   EQU   RPLOPT1                                                  02667000
RPLECBSW EQU   RPLOPT1                                                  02668000
RPLOPT2  EQU   RPLOPTCD+1                                               02669000
RPLADR   EQU   RPLOPT2                                                  02670000
RPLUPD   EQU   RPLOPT2                                                  02671000
RPLOPT3  EQU   RPLOPTCD+2                                               02672000
RPLNXTRP EQU   RPLCOMN+44                                               02673000
RPLRLEN  EQU   RPLCOMN+48                                               02674000
RPLOPTC2 EQU   RPLCOMN+56                                               02675000
RPLOPT5  EQU   RPLOPTC2                                                 02676000
RPLWRTYP EQU   RPLOPT5                                                  02677000
RPLOPT6  EQU   RPLOPTC2+1                                               02678000
RPLUNTYP EQU   RPLOPT6                                                  02679000
RPLOPT7  EQU   RPLOPTC2+2                                               02680000
RPLCNOPT EQU   RPLOPT7                                                  02681000
RPLOPT8  EQU   RPLOPTC2+3                                               02682000
RPLRBAR  EQU   RPLCOMN+60                                               02683000
RPLAIXID EQU   RPLRBAR+2                                                02684000
RPLDDDD  EQU   RPLRBAR+4                                                02685000
RPLEXTDS EQU   RPLCOMN+68                                               02686000
RPLEXTD1 EQU   RPLEXTDS                                                 02687000
IDAIXH   EQU   0                                                        02688000
IXHLL    EQU   IDAIXH                                                   02689000
IXHFLPLN EQU   IDAIXH+2                                                 02690000
IXHPTLS  EQU   IDAIXH+3                                                 02691000
IXHBRBA  EQU   IDAIXH+4                                                 02692000
IXHFSO   EQU   IDAIXH+18                                                02693000
IXHSEO   EQU   IDAIXH+22                                                02694000
IDAIBFLP EQU   0                                                        02695000
IBFLPL   EQU   IDAIBFLP+1                                               02696000
IBFLP3   EQU   IDAIBFLP+2                                               02697000
IBFLP2   EQU   IBFLP3                                                   02698000
IDASELL  EQU   0                                                        02699000
IXSELL   EQU   IDASELL                                                  02700000
IDAIXK   EQU   0                                                        02701000
IFGACB   EQU   0                                                        02702000
ACBCOMN  EQU   IFGACB                                                   02703000
ACBLENG  EQU   ACBCOMN+2                                                02704000
ACBLENG2 EQU   ACBLENG                                                  02705000
ACBAMBL  EQU   ACBCOMN+4                                                02706000
ACBJWA   EQU   ACBAMBL                                                  02707000
ACBMACRF EQU   ACBCOMN+12                                               02708000
ACBMACR1 EQU   ACBMACRF                                                 02709000
ACBADR   EQU   ACBMACR1                                                 02710000
ACBCNV   EQU   ACBMACR1                                                 02711000
ACBMACR2 EQU   ACBMACRF+1                                               02712000
ACBBUFPL EQU   ACBCOMN+20                                               02713000
ACBMACR3 EQU   ACBBUFPL                                                 02714000
ACBRECFM EQU   ACBCOMN+24                                               02715000
ACBCCTYP EQU   ACBCOMN+25                                               02716000
ACBOPT   EQU   ACBCOMN+26                                               02717000
ACBDSORG EQU   ACBOPT                                                   02718000
ACBCROPS EQU   ACBDSORG                                                 02719000
ACBEXLST EQU   ACBCOMN+36                                               02720000
ACBDDNM  EQU   ACBCOMN+40                                               02721000
ACBAMETH EQU   ACBDDNM+3                                                02722000
ACBOFLGS EQU   ACBCOMN+48                                               02723000
ACBEXFG  EQU   ACBOFLGS                                                 02724000
ACBIOSFG EQU   ACBOFLGS                                                 02725000
ACBINFLG EQU   ACBCOMN+50                                               02726000
ACBUJFCB EQU   ACBCOMN+52                                               02727000
ACBBLKSZ EQU   ACBCOMN+60                                               02728000
IDADIWA  EQU   0                                                        02729000
DIWFLG1  EQU   IDADIWA+4                                                02730000
DIWFLG2  EQU   IDADIWA+5                                                02731000
DIWLRBA  EQU   IDADIWA+8                                                02732000
DIWHRBA  EQU   IDADIWA+12                                               02733000
DIWBUFC  EQU   IDADIWA+20                                               02734000
DIWSPLTP EQU   IDADIWA+24                                               02735000
DIWSAVE  EQU   IDADIWA+28                                               02736000
DIWSAVE1 EQU   DIWSAVE                                                  02737000
DIWSAVE2 EQU   DIWSAVE+4                                                02738000
DIWSAVE3 EQU   DIWSAVE+8                                                02739000
DIWSAVE4 EQU   DIWSAVE+12                                               02740000
DIWSAVE5 EQU   DIWSAVE+16                                               02741000
IDAPLHDR EQU   0                                                        02742000
IDAPLH   EQU   0                                                        02743000
PLHFLG1  EQU   IDAPLH+2                                                 02744000
PLHSSR   EQU   PLHFLG1                                                  02745000
PLHFLG2  EQU   IDAPLH+3                                                 02746000
PLHADDTE EQU   PLHFLG2                                                  02747000
PLHCIINS EQU   PLHFLG2                                                  02748000
PLHEFLGS EQU   IDAPLH+4                                                 02749000
PLHFLG3  EQU   IDAPLH+6                                                 02750000
PLHBWD   EQU   PLHFLG3                                                  02751000
PLHAFLGS EQU   IDAPLH+7                                                 02752000
PLHBFRNO EQU   IDAPLH+15                                                02753000
PLHCRBA  EQU   IDAPLH+28                                                02754000
PLHJORBA EQU   PLHCRBA                                                  02755000
PLHJRNLL EQU   IDAPLH+32                                                02756000
PLHJNRBA EQU   IDAPLH+36                                                02757000
PLHJCODE EQU   IDAPLH+40                                                02758000
PLHRSCS  EQU   IDAPLH+43                                                02759000
PLHARDB  EQU   IDAPLH+44                                                02760000
PLHDBUFC EQU   IDAPLH+52                                                02761000
PLHRECP  EQU   IDAPLH+60                                                02762000
PLHFSP   EQU   IDAPLH+64                                                02763000
PLHRDFP  EQU   IDAPLH+68                                                02764000
PLHRDFC  EQU   IDAPLH+72                                                02765000
PLHDIOB  EQU   IDAPLH+76                                                02766000
PLHRETO  EQU   IDAPLH+116                                               02767000
PLHRET1  EQU   IDAPLH+120                                               02768000
PLHEOVPT EQU   IDAPLH+180                                               02769000
PLHIBUFC EQU   IDAPLH+188                                               02770000
PLHIXSPL EQU   IDAPLH+200                                               02771000
PLHSSRBA EQU   PLHIXSPL                                                 02772000
PLHWAX   EQU   IDAPLH+232                                               02773000
PLHKEYPT EQU   IDAPLH+248                                               02774000
PLHTMRPL EQU   IDAPLH+265                                               02775000
PLHEND   EQU   IDAPLH+280                                               02776000
IDAAMDSB EQU   0                                                        02777000
AMDATTR  EQU   IDAAMDSB+1                                               02778000
AMDNEST  EQU   IDAAMDSB+4                                               02779000
AMDFSCA  EQU   IDAAMDSB+14                                              02780000
AMDCINV  EQU   IDAAMDSB+20                                              02781000
AMDHLRBA EQU   IDAAMDSB+28                                              02782000
AMDSSRBA EQU   IDAAMDSB+32                                              02783000
AMDATTR3 EQU   IDAAMDSB+40                                              02784000
AMDSTAT  EQU   IDAAMDSB+48                                              02785000
AMDASPA  EQU   AMDSTAT+32                                               02786000
AMDNCIS  EQU   AMDSTAT+36                                               02787000
IDABUFDR EQU   0                                                        02788000
BUFDRCIX EQU   IDABUFDR+9                                               02789000
BUFDRFLG EQU   IDABUFDR+11                                              02790000
IDABUFC  EQU   0                                                        02791000
BUFCAVL  EQU   IDABUFC                                                  02792000
BUFCFLG1 EQU   IDABUFC+1                                                02793000
BUFCINS  EQU   BUFCFLG1                                                 02794000
BUFCVAL  EQU   BUFCFLG1                                                 02795000
BUFCEXC  EQU   BUFCFLG1                                                 02796000
BUFCIOFL EQU   IDABUFC+2                                                02797000
BUFCMW   EQU   BUFCIOFL                                                 02798000
BUFCRRD  EQU   BUFCIOFL                                                 02799000
BUFCFLG2 EQU   IDABUFC+3                                                02800000
BUFCPLH  EQU   IDABUFC+4                                                02801000
BUFCDDDD EQU   IDABUFC+8                                                02802000
BUFCORBA EQU   IDABUFC+12                                               02803000
BUFCBAD  EQU   IDABUFC+20                                               02804000
BUFCINV  EQU   IDABUFC+28                                               02805000
BUFXIRBA EQU   IDABUFC+40                                               02806000
BUFXORBA EQU   IDABUFC+44                                               02807000
IDARDF   EQU   0                                                        02808000
RDFRBYTE EQU   IDARDF                                                   02809000
RDFCTNU  EQU   RDFRBYTE                                                 02810000
RDFSEG   EQU   RDFRBYTE                                                 02811000
RDFREPL  EQU   RDFRBYTE                                                 02812000
RDFLL    EQU   IDARDF+1                                                 02813000
IDADATA  EQU   0                                                        02814000
IDAKEY   EQU   0                                                        02815000
IDACIDF  EQU   0                                                        02816000
CIDFOSET EQU   IDACIDF                                                  02817000
CIDFLL   EQU   IDACIDF+2                                                02818000
CIDFBUSY EQU   CIDFLL                                                   02819000
IDAARDB  EQU   0                                                        02820000
ARDTYPE  EQU   IDAARDB+1                                                02821000
ARDHKRBA EQU   IDAARDB+8                                                02822000
ARDPRF   EQU   IDAARDB+28                                               02823000
IDAIXSPL EQU   0                                                        02824000
IXSILN   EQU   IDAIXSPL+13                                              02825000
IXSBFLG  EQU   IDAIXSPL+17                                              02826000
IXSHEP   EQU   IDAIXSPL+20                                              02827000
IXSSEP   EQU   IDAIXSPL+24                                              02828000
IXSLEP   EQU   IDAIXSPL+28                                              02829000
GRPRDF   EQU   0                                                        02830000
PLHKEY   EQU   0                                                        02831000
PLHPDL   EQU   0                                                        02832000
PLHPDLE  EQU   0                                                        02833000
PLHRRN   EQU   0                                                        02834000
PLHEXTEN EQU   PLHEND                                                   02835000
PLHBMWRK EQU   PLHEXTEN+5                                               02836000
SPLTDPTR EQU   DIWSAVE1                                                 02837000
ENDPTR   EQU   DIWSAVE2                                                 02838000
SPLTRDFC EQU   DIWSAVE4                                                 02839000
SPLTRDFP EQU   DIWSPLTP                                                 02840000
BUFCRSC1 EQU   BUFCAVL                                                  02841000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02842000
PLHBMSV5 EQU   PLHEXTEN+24                                              02843000
PLHBMSV4 EQU   PLHEXTEN+20                                              02844000
PLHBMSV3 EQU   PLHEXTEN+16                                              02845000
PLHBMSV2 EQU   PLHEXTEN+12                                              02846000
PLHBMSV1 EQU   PLHEXTEN+8                                               02847000
PLHRDCNT EQU   PLHEXTEN+6                                               02848000
PLHBMSOV EQU   PLHBMWRK                                                 02849000
PLHBEUC  EQU   PLHBMWRK                                                 02850000
PLHBMRDF EQU   PLHBMWRK                                                 02851000
@NM00053 EQU   PLHEXTEN+4                                               02852000
PLHRESR1 EQU   PLHEXTEN                                                 02853000
IXSPEC   EQU   IDAIXSPL+19                                              02854000
IXSEKON  EQU   IDAIXSPL+18                                              02855000
@NM00061 EQU   IXSBFLG                                                  02856000
IXSLELV  EQU   IXSBFLG                                                  02857000
IXSSSRH  EQU   IXSBFLG                                                  02858000
IXSNOSR  EQU   IDAIXSPL+16                                              02859000
IXSKLEN  EQU   IDAIXSPL+14                                              02860000
IXSTLN   EQU   IDAIXSPL+12                                              02861000
IXSARG   EQU   IDAIXSPL+8                                               02862000
IXSBUFC  EQU   IDAIXSPL+4                                               02863000
IXSSTRBA EQU   IDAIXSPL                                                 02864000
ARDKEYS  EQU   IDAARDB+29                                               02865000
@NM00060 EQU   ARDPRF                                                   02866000
ARDPRFMT EQU   ARDPRF                                                   02867000
ARDPRSS  EQU   ARDPRF                                                   02868000
ARDRELNO EQU   IDAARDB+26                                               02869000
ARDVOLSR EQU   IDAARDB+20                                               02870000
ARDERBA  EQU   IDAARDB+16                                               02871000
ARDHRBA  EQU   IDAARDB+12                                               02872000
ARDNPTR  EQU   IDAARDB+4                                                02873000
ARDLEN   EQU   IDAARDB+2                                                02874000
ARDUSED  EQU   ARDTYPE                                                  02875000
ARDEOD   EQU   ARDTYPE                                                  02876000
ARDUOVFL EQU   ARDTYPE                                                  02877000
ARDSS    EQU   ARDTYPE                                                  02878000
ARDHLI   EQU   ARDTYPE                                                  02879000
ARDKR    EQU   ARDTYPE                                                  02880000
ARDID    EQU   IDAARDB                                                  02881000
@NM00059 EQU   CIDFLL                                                   02882000
KEY      EQU   IDAKEY                                                   02883000
AMDATA   EQU   IDADATA                                                  02884000
RDFEMPTY EQU   RDFRBYTE                                                 02885000
RDF1ST   EQU   RDFSEG                                                   02886000
RDFNOT1  EQU   RDFSEG                                                   02887000
RDFTYPE  EQU   RDFRBYTE                                                 02888000
BUFCEND  EQU   IDABUFC+64                                               02889000
BUFCUCDN EQU   IDABUFC+60                                               02890000
BUFCUCUP EQU   IDABUFC+56                                               02891000
BUFCMDBT EQU   IDABUFC+52                                               02892000
BUFCHAIN EQU   IDABUFC+48                                               02893000
BUFCNXT2 EQU   IDABUFC+37                                               02894000
BUFCIDXL EQU   IDABUFC+36                                               02895000
BUFCDSPC EQU   IDABUFC+32                                               02896000
BUFCWLEN EQU   BUFCINV                                                  02897000
BUFCNXT1 EQU   IDABUFC+24                                               02898000
BUFCCPA  EQU   IDABUFC+16                                               02899000
BUFCAMB  EQU   BUFCPLH                                                  02900000
@NM00058 EQU   BUFCFLG2                                                 02901000
BUFCEOD  EQU   BUFCFLG2                                                 02902000
BUFCBSYW EQU   BUFCFLG2                                                 02903000
BUFCBSYR EQU   BUFCFLG2                                                 02904000
BUFCNLAS EQU   BUFCFLG2                                                 02905000
BUFCXDDR EQU   BUFCFLG2                                                 02906000
BUFCFIX  EQU   BUFCIOFL                                                 02907000
BUFCPFCP EQU   BUFCIOFL                                                 02908000
BUFCXEDB EQU   BUFCIOFL                                                 02909000
BUFCWC   EQU   BUFCIOFL                                                 02910000
BUFCREAL EQU   BUFCIOFL                                                 02911000
BUFCFMT  EQU   BUFCIOFL                                                 02912000
BUFCEPT  EQU   BUFCFLG1                                                 02913000
BUFCER2  EQU   BUFCFLG1                                                 02914000
BUFCER1  EQU   BUFCFLG1                                                 02915000
BUFCSEG  EQU   BUFCFLG1                                                 02916000
BUFCUPG  EQU   BUFCFLG1                                                 02917000
BUFCUCNT EQU   BUFCAVL                                                  02918000
@NM00057 EQU   IDABUFDR+16                                              02919000
BUFDBUFC EQU   IDABUFDR+12                                              02920000
@NM00056 EQU   BUFDRFLG                                                 02921000
BUFDRAVL EQU   BUFDRFLG                                                 02922000
BUFDRREL EQU   BUFDRFLG                                                 02923000
BUFDRTSB EQU   IDABUFDR+10                                              02924000
BUFDRMAX EQU   BUFDRCIX                                                 02925000
BUFDRPFN EQU   IDABUFDR+8                                               02926000
BUFDRPFB EQU   IDABUFDR+4                                               02927000
BUFDRLEN EQU   IDABUFDR+2                                               02928000
BUFDRNO  EQU   IDABUFDR+1                                               02929000
BUFDRID  EQU   IDABUFDR                                                 02930000
AMDEXCP  EQU   AMDSTAT+44                                               02931000
AMDNCAS  EQU   AMDSTAT+40                                               02932000
AMDRETR  EQU   AMDSTAT+28                                               02933000
AMDUPR   EQU   AMDSTAT+24                                               02934000
AMDIREC  EQU   AMDSTAT+20                                               02935000
AMDDELR  EQU   AMDSTAT+16                                               02936000
AMDNLR   EQU   AMDSTAT+12                                               02937000
AMDNEXT  EQU   AMDSTAT+10                                               02938000
AMDNIL   EQU   AMDSTAT+8                                                02939000
AMDSTSP  EQU   AMDSTAT                                                  02940000
@NM00055 EQU   IDAAMDSB+41                                              02941000
@NM00054 EQU   AMDATTR3                                                 02942000
AMDLM    EQU   AMDATTR3                                                 02943000
AMDWAIT  EQU   AMDATTR3                                                 02944000
AMDBIND  EQU   AMDATTR3                                                 02945000
AMDFAULT EQU   AMDATTR3                                                 02946000
AMDUNQ   EQU   AMDATTR3                                                 02947000
AMDPARDB EQU   IDAAMDSB+36                                              02948000
AMDMAXRR EQU   AMDSSRBA                                                 02949000
AMDNSLOT EQU   AMDHLRBA                                                 02950000
AMDLRECL EQU   IDAAMDSB+24                                              02951000
AMDFSCI  EQU   IDAAMDSB+16                                              02952000
AMDCIPCA EQU   IDAAMDSB+12                                              02953000
AMDPCTCI EQU   IDAAMDSB+11                                              02954000
AMDPCTCA EQU   IDAAMDSB+10                                              02955000
AMDKEYLN EQU   IDAAMDSB+8                                               02956000
AMDRKP   EQU   IDAAMDSB+6                                               02957000
AMDAXRKP EQU   AMDNEST                                                  02958000
AMDLEN   EQU   IDAAMDSB+2                                               02959000
AMDSPAN  EQU   AMDATTR                                                  02960000
AMDRRDS  EQU   AMDATTR                                                  02961000
AMDRANGE EQU   AMDATTR                                                  02962000
AMDORDER EQU   AMDATTR                                                  02963000
AMDREPL  EQU   AMDATTR                                                  02964000
AMDSDT   EQU   AMDATTR                                                  02965000
AMDWCK   EQU   AMDATTR                                                  02966000
AMDDST   EQU   AMDATTR                                                  02967000
AMDSBID  EQU   IDAAMDSB                                                 02968000
PLHERRET EQU   IDAPLH+276                                               02969000
PLHASCB  EQU   IDAPLH+272                                               02970000
PLHECB   EQU   IDAPLH+268                                               02971000
@NM00052 EQU   IDAPLH+266                                               02972000
@NM00051 EQU   PLHTMRPL                                                 02973000
PLHTMIOB EQU   PLHTMRPL                                                 02974000
PLHTMINX EQU   PLHTMRPL                                                 02975000
PLHTMDTA EQU   PLHTMRPL                                                 02976000
PLHTMDIW EQU   PLHTMRPL                                                 02977000
PLHTMBUF EQU   PLHTMRPL                                                 02978000
PLHTERM  EQU   PLHTMRPL                                                 02979000
PLHDRMSK EQU   IDAPLH+264                                               02980000
PLHR13   EQU   IDAPLH+260                                               02981000
PLHPARM1 EQU   IDAPLH+256                                               02982000
PLHDRRSC EQU   IDAPLH+252                                               02983000
PLHSLRBA EQU   IDAPLH+244                                               02984000
PLHSRCSG EQU   IDAPLH+242                                               02985000
PLHNOSEG EQU   IDAPLH+240                                               02986000
PLHLLOR  EQU   IDAPLH+236                                               02987000
PLHXPLH  EQU   PLHWAX                                                   02988000
@NM00050 EQU   PLHIXSPL+8                                               02989000
PLHIXBFC EQU   PLHIXSPL+4                                               02990000
PLHHIREC EQU   PLHSSRBA                                                 02991000
PLHISPLP EQU   IDAPLH+196                                               02992000
PLHRBUFC EQU   IDAPLH+192                                               02993000
PLHNRBA  EQU   IDAPLH+184                                               02994000
PLHDDDD  EQU   PLHEOVPT                                                 02995000
PLHAR14  EQU   IDAPLH+176                                               02996000
@NM00049 EQU   IDAPLH+172                                               02997000
@NM00048 EQU   IDAPLH+168                                               02998000
PLHASAVE EQU   IDAPLH+164                                               02999000
PLHRETOS EQU   IDAPLH+118                                               03000000
PLHCHAIN EQU   IDAPLH+112                                               03001000
PLHAMB   EQU   IDAPLH+108                                               03002000
PLHSAVE6 EQU   IDAPLH+104                                               03003000
PLHSAVE5 EQU   IDAPLH+100                                               03004000
PLHSAVE4 EQU   IDAPLH+96                                                03005000
PLHSAVE3 EQU   IDAPLH+92                                                03006000
PLHSAVE2 EQU   IDAPLH+88                                                03007000
PLHSAVE1 EQU   IDAPLH+84                                                03008000
PLHARET  EQU   IDAPLH+80                                                03009000
PLHIIOB  EQU   PLHDIOB                                                  03010000
PLHSRSID EQU   IDAPLH+74                                                03011000
PLHNBUFC EQU   IDAPLH+56                                                03012000
PLHLRECL EQU   IDAPLH+48                                                03013000
@NM00047 EQU   PLHRSCS                                                  03014000
PLHDBPER EQU   PLHRSCS                                                  03015000
PLHDSERR EQU   PLHRSCS                                                  03016000
PLHASYER EQU   PLHRSCS                                                  03017000
@NM00046 EQU   PLHRSCS                                                  03018000
PLHBUFHD EQU   PLHRSCS                                                  03019000
PLHINEOV EQU   PLHRSCS                                                  03020000
PLHEOVR  EQU   IDAPLH+42                                                03021000
PLHRCODE EQU   IDAPLH+41                                                03022000
PLHUCODE EQU   PLHJCODE                                                 03023000
PLHUPECB EQU   PLHJORBA                                                 03024000
PLHDSIDA EQU   IDAPLH+24                                                03025000
PLHCRPL  EQU   IDAPLH+20                                                03026000
PLHMRPL  EQU   IDAPLH+16                                                03027000
PLHFRCNT EQU   IDAPLH+14                                                03028000
PLHRMIN  EQU   IDAPLH+13                                                03029000
PLHDSTYP EQU   IDAPLH+12                                                03030000
PLHACB   EQU   IDAPLH+8                                                 03031000
PLHRAE   EQU   PLHAFLGS                                                 03032000
PLHRABWD EQU   PLHAFLGS                                                 03033000
PLHIOSID EQU   PLHAFLGS                                                 03034000
PLHDBDC  EQU   PLHAFLGS                                                 03035000
PLHVAMB  EQU   PLHAFLGS                                                 03036000
PLHIOSRQ EQU   PLHAFLGS                                                 03037000
PLHDRLM  EQU   PLHAFLGS                                                 03038000
PLHEOVDF EQU   PLHFLG3                                                  03039000
PLHRVRS  EQU   PLHFLG3                                                  03040000
PLHSLVLD EQU   PLHFLG3                                                  03041000
PLHRAHD  EQU   PLHFLG3                                                  03042000
PLHSRBSG EQU   PLHFLG3                                                  03043000
@NM00045 EQU   PLHEFLGS+1                                               03044000
PLHRSTRT EQU   PLHEFLGS+1                                               03045000
PLHDSCAN EQU   PLHEFLGS                                                 03046000
PLHINVAL EQU   PLHEFLGS                                                 03047000
PLHEODX  EQU   PLHEFLGS                                                 03048000
PLHNOADV EQU   PLHEFLGS                                                 03049000
PLHSRINV EQU   PLHEFLGS                                                 03050000
PLHSKPER EQU   PLHEFLGS                                                 03051000
PLH1ST   EQU   PLHEFLGS                                                 03052000
PLHNOSPC EQU   PLHEFLGS                                                 03053000
PLHIWAIT EQU   PLHFLG2                                                  03054000
PLHSVADV EQU   PLHFLG2                                                  03055000
PLHKRE   EQU   PLHFLG2                                                  03056000
PLHKEYMD EQU   PLHFLG2                                                  03057000
PLHSQINS EQU   PLHFLG2                                                  03058000
PLHUPD   EQU   PLHFLG2                                                  03059000
@NM00044 EQU   PLHFLG1                                                  03060000
PLHDRPND EQU   PLHFLG1                                                  03061000
PLHASYRQ EQU   PLHFLG1                                                  03062000
PLHRDEXC EQU   PLHFLG1                                                  03063000
PLHASKBF EQU   PLHFLG1                                                  03064000
PLHENDRQ EQU   PLHFLG1                                                  03065000
PLHEOVW  EQU   PLHFLG1                                                  03066000
PLHATV   EQU   IDAPLH+1                                                 03067000
PLHAVL   EQU   IDAPLH                                                   03068000
PLHIOSDQ EQU   IDAPLHDR+12                                              03069000
PLHDRCUR EQU   IDAPLHDR+10                                              03070000
PLHDRMAX EQU   IDAPLHDR+8                                               03071000
PLHDRREQ EQU   IDAPLHDR+4                                               03072000
PLHELTH  EQU   IDAPLHDR+2                                               03073000
PLHCNT   EQU   IDAPLHDR+1                                               03074000
PLHID    EQU   IDAPLHDR                                                 03075000
@NM00043 EQU   IDADIWA+92                                               03076000
@NM00042 EQU   IDADIWA+88                                               03077000
@NM00041 EQU   IDADIWA+84                                               03078000
@NM00040 EQU   IDADIWA+80                                               03079000
@NM00039 EQU   IDADIWA+76                                               03080000
@NM00038 EQU   IDADIWA+72                                               03081000
@NM00037 EQU   IDADIWA+68                                               03082000
@NM00036 EQU   IDADIWA+64                                               03083000
@NM00035 EQU   IDADIWA+60                                               03084000
@NM00034 EQU   IDADIWA+56                                               03085000
DIWINRBA EQU   IDADIWA+52                                               03086000
DIWRKCT  EQU   IDADIWA+48                                               03087000
DIWPLH   EQU   IDADIWA+16                                               03088000
@NM00033 EQU   IDADIWA+6                                                03089000
DIWFSPF  EQU   DIWFLG2                                                  03090000
DIW1ST   EQU   DIWFLG1                                                  03091000
DIWNOT1  EQU   DIWFLG1                                                  03092000
DIWSHIFT EQU   DIWFLG1                                                  03093000
DIWGSPC  EQU   DIWFLG1                                                  03094000
DIWEOKR  EQU   DIWFLG1                                                  03095000
DIWPFERR EQU   DIWFLG1                                                  03096000
DIWCISPL EQU   DIWFLG1                                                  03097000
DIWCAS   EQU   DIWFLG1                                                  03098000
DIWLEN   EQU   IDADIWA+2                                                03099000
DIWATV   EQU   IDADIWA+1                                                03100000
DIWID    EQU   IDADIWA                                                  03101000
ACBAPID  EQU   ACBCOMN+72                                               03102000
ACBCBMWA EQU   ACBCOMN+68                                               03103000
ACBUAPTR EQU   ACBCOMN+64                                               03104000
ACBLRECL EQU   ACBCOMN+62                                               03105000
ACBMSGLN EQU   ACBBLKSZ                                                 03106000
ACBBUFSP EQU   ACBCOMN+56                                               03107000
@NM00032 EQU   ACBUJFCB+1                                               03108000
ACBOPTN  EQU   ACBUJFCB                                                 03109000
ACBVVIC  EQU   ACBINFLG                                                 03110000
ACBUCRA  EQU   ACBINFLG                                                 03111000
ACBSCRA  EQU   ACBINFLG                                                 03112000
ACBCAT   EQU   ACBINFLG                                                 03113000
ACBIJRQE EQU   ACBINFLG                                                 03114000
ACBJEPS  EQU   ACBINFLG                                                 03115000
@NM00031 EQU   ACBINFLG                                                 03116000
ACBERFLG EQU   ACBCOMN+49                                               03117000
ACBBUSY  EQU   ACBIOSFG                                                 03118000
ACBLOCK  EQU   ACBEXFG                                                  03119000
@NM00030 EQU   ACBOFLGS                                                 03120000
ACBDSERR EQU   ACBOFLGS                                                 03121000
ACBOPEN  EQU   ACBOFLGS                                                 03122000
ACBEOV   EQU   ACBOFLGS                                                 03123000
@NM00029 EQU   ACBOFLGS                                                 03124000
ACBDEB   EQU   ACBDDNM+5                                                03125000
ACBERFL  EQU   ACBDDNM+4                                                03126000
ACBAM    EQU   ACBAMETH                                                 03127000
ACBINFL  EQU   ACBDDNM+2                                                03128000
ACBTIOT  EQU   ACBDDNM                                                  03129000
ACBUEL   EQU   ACBEXLST                                                 03130000
ACBPASSW EQU   ACBCOMN+32                                               03131000
ACBMSGAR EQU   ACBCOMN+28                                               03132000
@NM00028 EQU   ACBDSORG+1                                               03133000
ACBDORGA EQU   ACBDSORG+1                                               03134000
@NM00027 EQU   ACBDSORG                                                 03135000
ACBCRNRE EQU   ACBCROPS                                                 03136000
ACBCRNCK EQU   ACBCROPS                                                 03137000
ACBASA   EQU   ACBCCTYP                                                 03138000
@NM00026 EQU   ACBCCTYP                                                 03139000
ACBRECAF EQU   ACBRECFM                                                 03140000
ACBJBUF  EQU   ACBBUFPL+2                                               03141000
ACBMACR4 EQU   ACBBUFPL+1                                               03142000
@NM00025 EQU   ACBMACR3                                                 03143000
ACBNCFX  EQU   ACBMACR3                                                 03144000
ACBSIS   EQU   ACBMACR3                                                 03145000
ACBDFR   EQU   ACBMACR3                                                 03146000
ACBICI   EQU   ACBMACR3                                                 03147000
ACBGSR   EQU   ACBMACR3                                                 03148000
ACBLSR   EQU   ACBMACR3                                                 03149000
@NM00024 EQU   ACBMACR3                                                 03150000
ACBBUFNI EQU   ACBCOMN+18                                               03151000
ACBBUFND EQU   ACBCOMN+16                                               03152000
ACBSTRNO EQU   ACBCOMN+15                                               03153000
ACBBSTNO EQU   ACBCOMN+14                                               03154000
ACBAIX   EQU   ACBMACR2                                                 03155000
ACBDSN   EQU   ACBMACR2                                                 03156000
ACBRST   EQU   ACBMACR2                                                 03157000
ACBLOGON EQU   ACBMACR2                                                 03158000
ACBSKP   EQU   ACBMACR2                                                 03159000
@NM00023 EQU   ACBMACR2                                                 03160000
ACBUBF   EQU   ACBMACR1                                                 03161000
ACBOUT   EQU   ACBMACR1                                                 03162000
ACBIN    EQU   ACBMACR1                                                 03163000
ACBDIR   EQU   ACBMACR1                                                 03164000
ACBSEQ   EQU   ACBMACR1                                                 03165000
ACBBLK   EQU   ACBCNV                                                   03166000
ACBADD   EQU   ACBADR                                                   03167000
ACBKEY   EQU   ACBMACR1                                                 03168000
ACBINRTN EQU   ACBCOMN+8                                                03169000
ACBIBCT  EQU   ACBJWA                                                   03170000
ACBLEN2  EQU   ACBLENG2                                                 03171000
ACBSTYP  EQU   ACBCOMN+1                                                03172000
ACBID    EQU   ACBCOMN                                                  03173000
IXKEY    EQU   IDAIXK                                                   03174000
IBFLP1   EQU   IBFLP2                                                   03175000
IBFLPF   EQU   IDAIBFLP                                                 03176000
IXHLEO   EQU   IDAIXH+20                                                03177000
IXHFLGS  EQU   IDAIXH+17                                                03178000
IXHLV    EQU   IDAIXH+16                                                03179000
IXHXX    EQU   IDAIXH+12                                                03180000
IXHHP    EQU   IDAIXH+8                                                 03181000
RPLERMSA EQU   RPLCOMN+72                                               03182000
RPLEMLEN EQU   RPLCOMN+70                                               03183000
RPLACTIV EQU   RPLCOMN+69                                               03184000
RPLBRANC EQU   RPLEXTD1                                                 03185000
RPLNIB   EQU   RPLEXTD1                                                 03186000
@NM00022 EQU   RPLEXTD1                                                 03187000
RPLEXIT  EQU   RPLEXTD1                                                 03188000
RPLNEXIT EQU   RPLEXTD1                                                 03189000
RPLEXSCH EQU   RPLEXTD1                                                 03190000
@NM00021 EQU   RPLRBAR+3                                                03191000
@NM00020 EQU   RPLAIXID                                                 03192000
RPLAXPKP EQU   RPLAIXID                                                 03193000
RPLAIXPC EQU   RPLRBAR                                                  03194000
RPLRSV88 EQU   RPLOPT8                                                  03195000
RPLUNCON EQU   RPLOPT8                                                  03196000
RPLACTV  EQU   RPLOPT8                                                  03197000
RPLSESS  EQU   RPLOPT8                                                  03198000
RPLPEND  EQU   RPLOPT8                                                  03199000
RPLODPRM EQU   RPLOPT8                                                  03200000
RPLODACP EQU   RPLOPT8                                                  03201000
RPLODACQ EQU   RPLOPT8                                                  03202000
RPLRSV78 EQU   RPLOPT7                                                  03203000
RPLRSV77 EQU   RPLOPT7                                                  03204000
RPLRLSOP EQU   RPLOPT7                                                  03205000
RPLTPOST EQU   RPLOPT7                                                  03206000
RPLQOPT  EQU   RPLOPT7                                                  03207000
RPLCNIMM EQU   RPLCNOPT                                                 03208000
RPLCNANY EQU   RPLCNOPT                                                 03209000
RPLCNALL EQU   RPLCNOPT                                                 03210000
RPLRSV68 EQU   RPLOPT6                                                  03211000
RPLRSV67 EQU   RPLOPT6                                                  03212000
RPLLOCK  EQU   RPLOPT6                                                  03213000
RPLNCOND EQU   RPLOPT6                                                  03214000
RPLCOND  EQU   RPLOPT6                                                  03215000
RPLEOT   EQU   RPLUNTYP                                                 03216000
RPLEOM   EQU   RPLUNTYP                                                 03217000
RPLEOB   EQU   RPLUNTYP                                                 03218000
RPLWROPT EQU   RPLOPT5                                                  03219000
RPLNODE  EQU   RPLOPT5                                                  03220000
RPLERACE EQU   RPLWRTYP                                                 03221000
RPLEAU   EQU   RPLWRTYP                                                 03222000
RPLNERAS EQU   RPLWRTYP                                                 03223000
RPLPSOPT EQU   RPLOPT5                                                  03224000
RPLSSNIN EQU   RPLOPT5                                                  03225000
RPLDLGIN EQU   RPLOPT5                                                  03226000
RPLBUFL  EQU   RPLCOMN+52                                               03227000
RPLCHAIN EQU   RPLNXTRP                                                 03228000
RPLOPT4  EQU   RPLOPTCD+3                                               03229000
RPLALIGN EQU   RPLOPT3                                                  03230000
RPLFMT   EQU   RPLOPT3                                                  03231000
RPLFLD   EQU   RPLOPT3                                                  03232000
RPLVFY   EQU   RPLOPT3                                                  03233000
RPLBLK   EQU   RPLOPT3                                                  03234000
RPLSFORM EQU   RPLOPT3                                                  03235000
RPLEODS  EQU   RPLOPT3                                                  03236000
RPLNSP   EQU   RPLOPT2                                                  03237000
RPLWAITX EQU   RPLOPT2                                                  03238000
RPLLRD   EQU   RPLOPT2                                                  03239000
RPLBWD   EQU   RPLOPT2                                                  03240000
RPLCNV   EQU   RPLOPT2                                                  03241000
RPLADD   EQU   RPLADR                                                   03242000
RPLKEY   EQU   RPLOPT2                                                  03243000
RPLECBIN EQU   RPLECBSW                                                 03244000
RPLGEN   EQU   RPLOPT1                                                  03245000
RPLKGE   EQU   RPLOPT1                                                  03246000
RPLASY   EQU   RPLOPT1                                                  03247000
RPLSKP   EQU   RPLOPT1                                                  03248000
RPLDIR   EQU   RPLOPT1                                                  03249000
RPLLOC   EQU   RPLOPT1                                                  03250000
RPLDAF   EQU   RPLARG+2                                                 03251000
RPLSAF   EQU   RPLARG                                                   03252000
RPLAREA  EQU   RPLCOMN+32                                               03253000
RPLTCBPT EQU   RPLCOMN+28                                               03254000
RPLCCHAR EQU   RPLCOMN+20                                               03255000
RPLSTRID EQU   RPLCOMN+18                                               03256000
RPLKEYL  EQU   RPLKEYLE                                                 03257000
RPLRDSOH EQU   RPLFDB3                                                  03258000
RPLRLG   EQU   RPLFDB3                                                  03259000
RPLLGFRC EQU   RPLFDB3                                                  03260000
RPLREOT  EQU   RPLFDB3                                                  03261000
RPLREOM  EQU   RPLFDB3                                                  03262000
RPLREOB  EQU   RPLFDB3                                                  03263000
RPLSV32  EQU   RPLFDB3                                                  03264000
RPLUINPT EQU   RPLFDB3                                                  03265000
RPLSTSAV EQU   RPLFDB2                                                  03266000
RPLCUERR EQU   RPLFDB2                                                  03267000
RPLDLGFL EQU   RPLFDB2                                                  03268000
RPLIOERR EQU   RPLFDB2                                                  03269000
RPLDVUNS EQU   RPLFDB2                                                  03270000
RPLATND  EQU   RPLFDB2                                                  03271000
RPLRVID  EQU   RPLFDB2                                                  03272000
RPLERLK  EQU   RPLFDB2                                                  03273000
RPLSTAT  EQU   RPLFDBWD                                                 03274000
RPLPOST  EQU   RPLECB                                                   03275000
RPLWAIT  EQU   RPLECB                                                   03276000
RPLPLHPT EQU   RPLCOMN+4                                                03277000
RPLLEN2  EQU   RPLLEN                                                   03278000
RPLREQ   EQU   RPLIDWD+2                                                03279000
RPLSTYP  EQU   RPLIDWD+1                                                03280000
RPLID    EQU   RPLIDWD                                                  03281000
AMBLCMB  EQU   IDAAMBL+64                                               03282000
AMBLBIB  EQU   IDAAMBL+60                                               03283000
AMBLMIDS EQU   IDAAMBL+42                                               03284000
AMBLNIDS EQU   IDAAMBL+41                                               03285000
@NM00019 EQU   IDAAMBL+40                                               03286000
AMBLNUM  EQU   IDAAMBL+38                                               03287000
AMBLNST  EQU   IDAAMBL+37                                               03288000
@NM00018 EQU   AMBLFLG2                                                 03289000
AMBLSTAG EQU   AMBLFLG2                                                 03290000
@NM00017 EQU   AMBLFLG2                                                 03291000
AMBLDUMY EQU   AMBLFLG1                                                 03292000
AMBLCAT  EQU   AMBLFLG1                                                 03293000
AMBLUCRA EQU   AMBLFLG1                                                 03294000
AMBLSCRA EQU   AMBLFLG1                                                 03295000
AMBLVVIC EQU   AMBLFLG1                                                 03296000
AMBLUPD  EQU   AMBLFLG1                                                 03297000
AMBLCINV EQU   AMBLFLG1                                                 03298000
AMBLFULL EQU   AMBLFLG1                                                 03299000
AMBLLEN  EQU   IDAAMBL+34                                               03300000
@NM00016 EQU   AMBLSHAR                                                 03301000
AMBLWRIT EQU   AMBLSHAR                                                 03302000
AMBLCATO EQU   AMBLSHAR                                                 03303000
AMBLPRIM EQU   AMBLSHAR                                                 03304000
AMBLID   EQU   IDAAMBL+32                                               03305000
@NM00015 EQU   IDAAMBL+31                                               03306000
@NM00014 EQU   AMBLTYPE                                                 03307000
AMBLFIX  EQU   AMBLTYPE                                                 03308000
AMBLBASE EQU   AMBLTYPE                                                 03309000
AMBLAIX  EQU   AMBLTYPE                                                 03310000
AMBLUPGR EQU   AMBLTYPE                                                 03311000
AMBLPATH EQU   AMBLTYPE                                                 03312000
AMBLENO  EQU   AMBLVC+1                                                 03313000
AMBLVRT  EQU   AMBLVC                                                   03314000
AMBLXPT  EQU   IDAAMBL+24                                               03315000
AMBLDFR  EQU   AMBLQ                                                    03316000
AMBLESDS EQU   AMBLQ                                                    03317000
AMBLKSDS EQU   AMBLQ                                                    03318000
AMBLUBF  EQU   AMBLQ                                                    03319000
AMBLFSTP EQU   AMBLQ                                                    03320000
AMBLLSR  EQU   AMBLQ                                                    03321000
AMBLGSR  EQU   AMBLQ                                                    03322000
AMBLDDC  EQU   AMBLQ                                                    03323000
AMBLDCI  EQU   AMBLIDF+4                                                03324000
AMBLCACB EQU   AMBLIDF                                                  03325000
@NM00013 EQU   AMBLEOV+2                                                03326000
AMBLCOMP EQU   AMBLEOV+1                                                03327000
AMBLESET EQU   AMBLEFLG                                                 03328000
AMBLWAIT EQU   AMBLEFLG                                                 03329000
AMBLACB  EQU   IDAAMBL+8                                                03330000
AMBLSCHN EQU   IDAAMBL+4                                                03331000
AMBLPCHN EQU   IDAAMBL                                                  03332000
AMBVIOT  EQU   IDAAMB+116                                               03333000
AMBSZCP  EQU   IDAAMB+114                                               03334000
AMBSZFW  EQU   IDAAMB+112                                               03335000
AMBSZWR  EQU   IDAAMB+110                                               03336000
AMBSZRD  EQU   IDAAMB+108                                               03337000
AMBEXEX  EQU   IDAAMB+100                                               03338000
AMBWSHD  EQU   IDAAMB+96                                                03339000
AMBCPA   EQU   IDAAMB+92                                                03340000
AMBBM2SH EQU   IDAAMB+88                                                03341000
AMBRDCNT EQU   AMBCSWD1+2                                               03342000
@NM00012 EQU   AMBCSWD1+1                                               03343000
@NM00011 EQU   AMBAFLG                                                  03344000
AMBCFX   EQU   AMBAFLG                                                  03345000
AMBDFR   EQU   AMBAFLG                                                  03346000
AMBICI   EQU   AMBAFLG                                                  03347000
@NM00010 EQU   AMBAFLG                                                  03348000
AMBUPLH  EQU   IDAAMB+80                                                03349000
AMBPAMBL EQU   IDAAMB+76                                                03350000
AMBPIXP  EQU   IDAAMB+72                                                03351000
@NM00009 EQU   IDAAMB+68                                                03352000
AMBWKA   EQU   IDAAMB+60                                                03353000
AMBAMBXN EQU   AMBEOVPT                                                 03354000
AMBEDB   EQU   IDAAMB+52                                                03355000
AMBRPT   EQU   IDAAMB+50                                                03356000
AMBPUG   EQU   AMBFLG2                                                  03357000
AMBBUSY  EQU   AMBOFLGS                                                 03358000
AMBEXFG  EQU   AMBOFLGS                                                 03359000
@NM00008 EQU   AMBOFLGS                                                 03360000
AMBOPEN  EQU   AMBOFLGS                                                 03361000
@NM00007 EQU   AMBOFLGS                                                 03362000
AMBDEBAD EQU   AMBDEBPT+1                                               03363000
AMBIFLGS EQU   AMBDEBPT                                                 03364000
AMBAMETH EQU   IDAAMB+43                                                03365000
AMBUPX   EQU   AMBINFL                                                  03366000
@NM00006 EQU   AMBINFL                                                  03367000
@NM00005 EQU   AMBINFL                                                  03368000
AMBTIOT  EQU   IDAAMB+40                                                03369000
@NM00004 EQU   IDAAMB+38                                                03370000
AMBDDSN  EQU   IDAAMB+35                                                03371000
AMBCDSN  EQU   IDAAMB+32                                                03372000
AMBIOMB  EQU   AMBIOBAD                                                 03373000
@NM00003 EQU   AMBDSORG+1                                               03374000
AMBDORGA EQU   AMBDSORG+1                                               03375000
@NM00002 EQU   AMBDSORG                                                 03376000
AMBUBF   EQU   AMBFLG1                                                  03377000
AMBSPEED EQU   AMBFLG1                                                  03378000
AMBPCAT  EQU   AMBFLG1                                                  03379000
AMBMCAT  EQU   AMBFLG1                                                  03380000
AMBTYPE  EQU   AMBFLG1                                                  03381000
AMBCREAT EQU   AMBFLG1                                                  03382000
@NM00001 EQU   AMBFLG0                                                  03383000
AMBPSDS  EQU   AMBFLG0                                                  03384000
AMBCACB  EQU   IDAAMB+16                                                03385000
AMBPH    EQU   IDAAMB+12                                                03386000
AMBBUFC  EQU   IDAAMB+8                                                 03387000
AMBLINK  EQU   IDAAMB+4                                                 03388000
AMBLEN   EQU   IDAAMB+2                                                 03389000
AMBRSC   EQU   IDAAMB+1                                                 03390000
AMBID    EQU   IDAAMB                                                   03391000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03392000
@RT00202 EQU   CISPLERR                                                 03393000
@RF00236 EQU   CISPLERR                                                 03394000
@RT00282 EQU   SPFOUND                                                  03395000
@RC00305 EQU   @RC00295                                                 03396000
@RT00326 EQU   CISPLERR                                                 03397000
@RF00402 EQU   @RC00373                                                 03398000
@RC00388 EQU   @RC00373                                                 03399000
@RF00469 EQU   @RC00454                                                 03400000
@RF00479 EQU   @RC00454                                                 03401000
@RT00573 EQU   CISPLERR                                                 03402000
@RT00575 EQU   CISPLERR                                                 03403000
@RC00682 EQU   @EL00002                                                 03404000
@RC00702 EQU   @EL00004                                                 03405000
@RF00735 EQU   @RC00723                                                 03406000
@RC00727 EQU   @RC00723                                                 03407000
@RF00399 EQU   @RC00388                                                 03408000
@RC00397 EQU   @RC00388                                                 03409000
@ENDDATA EQU   *                                                        03410000
         END   IDA019RE,(C'PLS1447',0701,78209)                         03411000
