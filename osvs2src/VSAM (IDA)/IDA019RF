         TITLE 'IDA019RF--CONTROL AREA SPLIT                           *00001000
                        '                                               00002000
IDA019RF CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019RF  78.209'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
         IDASVR14                                                       00013000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE    @ZA29388*/ 00014000
         L     @15,AMBTRACE(,RAMB)                                 0184 00015000
         LTR   @15,@15                                             0184 00016000
         BZ    @RF00184                                            0184 00017000
*     DO;                           /*                       @ZA29388*/ 00018000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 00019000
         L     @15,@CV01134                                        0186 00020000
         BALR  @14,@15                                             0186 00021000
*       GEN(DC X'0009');            /* TRACE ID              @ZA29388*/ 00022000
         DC X'0009'                                                     00023000
*     END;                          /*                       @ZA29388*/ 00024000
*   IF AMBINBUF=ON&                 /* IF SHR(4), THEN       @X04SVMR*/ 00025000
*       AMBSCRA=OFF&AMBUCRA=OFF&    /* IF NOT A CATLG,       @X04SVMR*/ 00026000
*       AMBCAT=OFF THEN             /* SET NO SPACE.         @X04SVMR*/ 00027000
@RF00184 TM    AMBINBUF(RAMB),B'00000001'                          0189 00028000
         BNO   @RF00189                                            0189 00029000
         TM    AMBSCRA(RAMB),B'00011100'                           0189 00030000
         BNZ   @RF00189                                            0189 00031000
*     DO;                           /*                       @X04SVMR*/ 00032000
*       RPLERRCD=RPLNOEXT;          /* UNABLE TO EXTEND      @X04SVMR*/ 00033000
         MVI   RPLERRCD(RRPL),X'1C'                                0191 00034000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR     @X04SVMR*/ 00035000
         MVI   RPLERREG(RRPL),X'08'                                0192 00036000
*       GO TO RFEXIT;               /* TAKE ERROR EXIT       @X04SVMR*/ 00037000
         B     RFEXIT                                              0193 00038000
*     END;                          /* END OF SHR(4) CODE    @X04SVMR*/ 00039000
*   RFY                                                            0195 00040000
*     R14 UNRSTD;                   /* RELEASE REG FOR USE           */ 00041000
@RF00189 DS    0H                                                  0196 00042000
*   PLHRAHD=OFF;                    /* CLEAR READ AHEAD FLAG.      0196 00043000
*                                                            @X04SVRQ*/ 00044000
         NI    PLHRAHD(RPLH),B'10111111'                           0196 00045000
*   CASRPRM1=RPARM1;                /* SAVE RPARM1.          @X04SVRQ*/ 00046000
*                                                                  0197 00047000
         ST    RPARM1,CASRPRM1(,RPLH)                              0197 00048000
*   /*****************************************************************/ 00049000
*   /*                                                               */ 00050000
*   /* BEFORE ACQUIRING SPACE (FROM EITHER IDAEOVIF OR IDAGTSPC), IF */ 00051000
*   /* A TRUE SPLIT ( NOT ADD-TO-END) IS IN PROGRESS, PERFORM AN     */ 00052000
*   /* EXCLUSIVE CONTROL CHECK ON THE RBA'S INVOLVED IN THE CA. THIS */ 00053000
*   /* WILL PREVENT EXCLUSIVE CONTROL ERRORS FROM OCCURRING AFTER    */ 00054000
*   /* SPACE HAS BEEN OBTAINED.                              @ZB02289*/ 00055000
*   /*                                                               */ 00056000
*   /*****************************************************************/ 00057000
*                                                                  0198 00058000
*   RBUFC=PLHDBUFC;                 /* SET DATA BUFFER PTR.  @ZB02289*/ 00059000
         L     RBUFC,PLHDBUFC(,RPLH)                               0198 00060000
*   IF PLHADDTE=OFF|(RPLRLEN>AMDCINV-/* IS THIS A CA SPLIT OR      0199 00061000
*                                                            @ZB02289*/ 00062000
*       LENGTH(IDACIDF)-LENGTH(IDARDF)) THEN/* OR ADD-TO-END?      0199 00063000
*                                                            @ZB02289*/ 00064000
         TM    PLHADDTE(RPLH),B'00010000'                          0199 00065000
         BZ    @RT00199                                            0199 00066000
         L     @10,AMBDSB(,RAMB)                                   0199 00067000
         L     @10,AMDCINV(,@10)                                   0199 00068000
         SL    @10,@CF00170                                        0199 00069000
         C     @10,RPLRLEN(,RRPL)                                  0199 00070000
         BNL   @RF00199                                            0199 00071000
@RT00199 DS    0H                                                  0200 00072000
*     DO;                           /* YES, SPLIT LOGIC WILL BE    0200 00073000
*                                      EXECUTED.             @ZB02289*/ 00074000
*                                                                  0200 00075000
*       /*************************************************************/ 00076000
*       /*                                                           */ 00077000
*       /* CA SPLIT WILL OCCURR, DETERMINE SPLIT BOUNDARIES. @ZB02289*/ 00078000
*       /*                                                           */ 00079000
*       /*************************************************************/ 00080000
*                                                                  0201 00081000
*       RFY                                                        0201 00082000
*         RWORK1 RSTD;              /* KEEP THIS AWAY FROM PLS.    0201 00083000
*                                                            @ZB02289*/ 00084000
*       DIWINRBA=BUFXIRBA;          /* SAVE OFF INSERT RBA/CI.     0202 00085000
*                                                            @ZA25653*/ 00086000
         L     @10,AMBIWA(,RAMB)                                   0202 00087000
         L     @00,BUFXIRBA(,RBUFC)                                0202 00088000
         ST    @00,DIWINRBA(,@10)                                  0202 00089000
*       RWORK1=AMDCIPCA*AMDCINV;    /* COMPUTE CA SIZE.      @ZB02289*/ 00090000
         L     @15,AMBDSB(,RAMB)                                   0203 00091000
         L     @14,AMDCINV(,@15)                                   0203 00092000
         LR    RWORK1,@14                                          0203 00093000
         MH    RWORK1,AMDCIPCA(,@15)                               0203 00094000
*       DIWLRBA=RWORK1*(DIWINRBA/RWORK1);/* LOWER BDY.       @ZA25653*/ 00095000
         LR    @07,@00                                             0204 00096000
         SLR   @06,@06                                             0204 00097000
         DR    @06,RWORK1                                          0204 00098000
         MR    @06,RWORK1                                          0204 00099000
         ST    @07,DIWLRBA(,@10)                                   0204 00100000
*       DIWHRBA=DIWLRBA+RWORK1-AMDCINV;/* UPPER BDY.         @ZB02289*/ 00101000
         ALR   @07,RWORK1                                          0205 00102000
         SLR   @07,@14                                             0205 00103000
         ST    @07,DIWHRBA(,@10)                                   0205 00104000
*       DIWCAS=ON;                  /* INDICATE CA SPLIT FOR CA    0206 00105000
*                                      READERS.              @ZB02289*/ 00106000
         OI    DIWCAS(@10),B'10000000'                             0206 00107000
*       RFY                                                        0207 00108000
*         IDABUFC BASED(RWORK1);    /* USE LOCAL PTR.        @ZB02289*/ 00109000
*       IF AMBGSR=OFF&AMBLSR=OFF THEN/* NOT SHARED RESOURCES?      0208 00110000
*                                                            @ZB02289*/ 00111000
         TM    AMBGSR(RAMB),B'01100000'                            0208 00112000
         BNZ   @RF00208                                            0208 00113000
*         DO;                       /* PERFORM NSR EXCL TEST LOGIC.     00114000
*                                                            @ZB02289*/ 00115000
*                                                                  0209 00116000
*           /*********************************************************/ 00117000
*           /*                                                       */ 00118000
*           /* PERFORM NON-SHARED RESOURCES EXCLUSIVE CONTROL CHECK. */ 00119000
*           /*                                               @ZB02289*/ 00120000
*           /*                                                       */ 00121000
*           /*********************************************************/ 00122000
*                                                                  0210 00123000
*           RWORK1=BUFDBUFC;        /* LOCATE FIRST PHYSICAL BUFC. 0210 00124000
*                                                            @ZB02289*/ 00125000
         L     @10,AMBBUFC(,RAMB)                                  0210 00126000
         L     RWORK1,BUFDBUFC(,@10)                               0210 00127000
*           DO WHILE RWORK1^=ZERO;  /* SEARCH BUFFER POOL.   @ZB02289*/ 00128000
         B     @DE00211                                            0211 00129000
@DL00211 DS    0H                                                  0212 00130000
*             IF BUFCPLH^=RPLH THEN /* IF OTHER PLH, CHECK   @ZB02289*/ 00131000
         C     RPLH,BUFCPLH(,RWORK1)                               0212 00132000
         BE    @RF00212                                            0212 00133000
*               DO;                 /* FOR IT'S EXCL. CTL.   @ZB02289*/ 00134000
*                 IF BUFCEXC=ON&((BUFCDDDD>=DIWLRBA&BUFCDDDD<=DIWHRBA)| 00135000
*                     (BUFXIRBA>=DIWLRBA&BUFXIRBA<=DIWHRBA)) THEN/*     00136000
*                                                            @ZA17187*/ 00137000
         TM    BUFCEXC(RWORK1),B'00000010'                         0214 00138000
         BNO   @RF00214                                            0214 00139000
         L     @10,BUFCDDDD(,RWORK1)                               0214 00140000
         L     @15,AMBIWA(,RAMB)                                   0214 00141000
         CL    @10,DIWLRBA(,@15)                                   0214 00142000
         BL    @GL00004                                            0214 00143000
         CL    @10,DIWHRBA(,@15)                                   0214 00144000
         BNH   @RT00214                                            0214 00145000
@GL00004 L     @10,BUFXIRBA(,RWORK1)                               0214 00146000
         L     @15,AMBIWA(,RAMB)                                   0214 00147000
         CL    @10,DIWLRBA(,@15)                                   0214 00148000
         BL    @RF00214                                            0214 00149000
         CL    @10,DIWHRBA(,@15)                                   0214 00150000
         BH    @RF00214                                            0214 00151000
@RT00214 DS    0H                                                  0215 00152000
*                   DO;             /* SET EXCL. CTL. ERROR  @ZB02289*/ 00153000
*                     RPLERREG='08'X;/* LOGICAL ERROR.       @ZB02289*/ 00154000
         MVI   RPLERREG(RRPL),X'08'                                0216 00155000
*                     RPLERRCD=RPLEXCL;/* READ EXCL. CONFLICT.     0217 00156000
*                                                            @ZB02289*/ 00157000
         MVI   RPLERRCD(RRPL),X'14'                                0217 00158000
*                     RPLDDDD=BUFCDDDD;/* SET RBA NOT OBTAINED     0218 00159000
*                                                            @ZA17187*/ 00160000
         L     @10,BUFCDDDD(,RWORK1)                               0218 00161000
         ST    @10,RPLDDDD(,RRPL)                                  0218 00162000
*                     CALL RFEXITA1;/* TAKE ERROR EXIT.      @ZB02289*/ 00163000
         BAL   @14,RFEXITA1                                        0219 00164000
*                   END;            /* END SET EXCL. ERROR.  @ZB02289*/ 00165000
*                 IF BUFCMW=ON&((BUFCORBA>=DIWLRBA&BUFCORBA<=DIWHRBA)|( 00166000
*                     BUFXORBA>=DIWLRBA&BUFXORBA<=DIWHRBA)) THEN/* 0221 00167000
*                                                            @ZA17187*/ 00168000
@RF00214 TM    BUFCMW(RWORK1),B'10000000'                          0221 00169000
         BNO   @RF00221                                            0221 00170000
         L     @10,BUFCORBA(,RWORK1)                               0221 00171000
         L     @15,AMBIWA(,RAMB)                                   0221 00172000
         CL    @10,DIWLRBA(,@15)                                   0221 00173000
         BL    @GL00008                                            0221 00174000
         CL    @10,DIWHRBA(,@15)                                   0221 00175000
         BNH   @RT00221                                            0221 00176000
@GL00008 L     @10,BUFXORBA(,RWORK1)                               0221 00177000
         L     @15,AMBIWA(,RAMB)                                   0221 00178000
         CL    @10,DIWLRBA(,@15)                                   0221 00179000
         BL    @RF00221                                            0221 00180000
         CL    @10,DIWHRBA(,@15)                                   0221 00181000
         BH    @RF00221                                            0221 00182000
@RT00221 DS    0H                                                  0222 00183000
*                   DO;             /* SET EXCL. CTL. ERROR  @ZB02289*/ 00184000
*                     RPLERREG='08'X;/* LOGICAL ERROR.       @ZB02289*/ 00185000
         MVI   RPLERREG(RRPL),X'08'                                0223 00186000
*                     RPLERRCD=RPLEXCL;/* READ EXCL. CONFLICT.     0224 00187000
*                                                            @ZB02289*/ 00188000
         MVI   RPLERRCD(RRPL),X'14'                                0224 00189000
*                     RPLDDDD=BUFCORBA;/* SET RBA NOT OBTAINED     0225 00190000
*                                                            @ZA17187*/ 00191000
         L     @10,BUFCORBA(,RWORK1)                               0225 00192000
         ST    @10,RPLDDDD(,RRPL)                                  0225 00193000
*                     CALL RFEXITA1;/* TAKE ERROR EXIT.      @ZB02289*/ 00194000
         BAL   @14,RFEXITA1                                        0226 00195000
*                   END;            /* END SET EXCL. ERROR.  @ZB02289*/ 00196000
*               END;                /* END OTHER PLH CHECK.  @ZB02289*/ 00197000
@RF00221 DS    0H                                                  0229 00198000
*             RWORK1=BUFCHAIN;      /* POINT TO NEXT BUFFER. @ZB02289*/ 00199000
@RF00212 L     RWORK1,BUFCHAIN(,RWORK1)                            0229 00200000
*           END;                    /* END SEARCH BFR. POOL. @ZB02289*/ 00201000
@DE00211 LTR   RWORK1,RWORK1                                       0230 00202000
         BNZ   @DL00211                                            0230 00203000
*         END;                      /* END OF NSR EXCL CHECK DO    0231 00204000
*                                      GROUP.                @ZB02289*/ 00205000
*       ELSE                        /* MUST BE GSR OR LSR (SHARED  0232 00206000
*                                      RESOURCES).           @ZB02289*/ 00207000
*         DO;                       /* PERFORM GSR/LSR EXCL CHECK. 0232 00208000
*                                                            @ZB02289*/ 00209000
*                                                                  0232 00210000
         B     @RC00208                                            0232 00211000
@RF00208 DS    0H                                                  0233 00212000
*           /*********************************************************/ 00213000
*           /*                                                       */ 00214000
*           /* PERFORM SHARED RESOURCES EXCLUSIVE CONTROL CHECK.     */ 00215000
*           /*                                               @ZB02289*/ 00216000
*           /*                                                       */ 00217000
*           /*********************************************************/ 00218000
*                                                                  0233 00219000
*           RWORK1=BSPHBUFC;        /* GET FIRST BUFC OFF BSPH.    0233 00220000
*                                                            @ZB02289*/ 00221000
         L     @10,AMBBUFC(,RAMB)                                  0233 00222000
         L     RWORK1,BSPHBUFC(,@10)                               0233 00223000
*           DO WHILE RWORK1^=ZERO;  /* LOOP THROUGH ENTIRE BUFC CHAIN   00224000
*                                                            @ZB02289*/ 00225000
         B     @DE00234                                            0234 00226000
@DL00234 DS    0H                                                  0235 00227000
*             IF BUFCAMB=RAMB&      /* USING THIS DATA SET AND     0235 00228000
*                                                            @ZB02289*/ 00229000
*                 RWORK1^=RBUFC&    /* BUFC FOR SOME OTHER PLH AND 0235 00230000
*                                                            @ZB02289*/ 00231000
*                 BUFCEXC=ON THEN   /* BUFC IN EXCLUSIVE CONTROL.  0235 00232000
*                                                            @ZB02289*/ 00233000
         C     RAMB,BUFCAMB(,RWORK1)                               0235 00234000
         BNE   @RF00235                                            0235 00235000
         CR    RWORK1,RBUFC                                        0235 00236000
         BE    @RF00235                                            0235 00237000
         TM    BUFCEXC(RWORK1),B'00000010'                         0235 00238000
         BNO   @RF00235                                            0235 00239000
*               DO;                 /* LOOK AT THE BUFC FURTHER FOR     00240000
*                                      EXCL PROBLEMS.        @ZB02289*/ 00241000
*                 IF BUFXIRBA>=DIWLRBA&/* IS THE RBA ABOVE LOWER.  0237 00242000
*                                                            @ZB02289*/ 00243000
*                     BUFXIRBA<=DIWHRBA THEN/* AND BELOW HIGHER THEN?   00244000
*                                                            @ZB02289*/ 00245000
         L     @10,BUFXIRBA(,RWORK1)                               0237 00246000
         L     @15,AMBIWA(,RAMB)                                   0237 00247000
         CL    @10,DIWLRBA(,@15)                                   0237 00248000
         BL    @RF00237                                            0237 00249000
         CL    @10,DIWHRBA(,@15)                                   0237 00250000
         BH    @RF00237                                            0237 00251000
*                   DO;             /* YES, EXCLUSIVE CONTROL ERROR.    00252000
*                                                            @ZB02289*/ 00253000
*                     RPLERREG='08'X;/* INDICATE LOGICAL ERROR.    0239 00254000
*                                                            @ZB02289*/ 00255000
         MVI   RPLERREG(RRPL),X'08'                                0239 00256000
*                     RPLERRCD=RPLEXCL;/* SET CODE AS EXCL ERROR.  0240 00257000
*                                                            @ZB02289*/ 00258000
         MVI   RPLERRCD(RRPL),X'14'                                0240 00259000
*                     RPLDDDD=BUFXIRBA;/* SET RBA NOT OBTAINED     0241 00260000
*                                                            @ZA17187*/ 00261000
         ST    @10,RPLDDDD(,RRPL)                                  0241 00262000
*                     CALL RFEXITA1;/* TAKE ERROR EXIT FROM RF.    0242 00263000
*                                                            @ZB02289*/ 00264000
         BAL   @14,RFEXITA1                                        0242 00265000
*                   END;            /* END OF EXCLUSIVE CONTROL ERROR   00266000
*                                      GROUP.                @ZB02289*/ 00267000
*               END;                /* END OF OTHER BUFC FOR OTHER 0244 00268000
*                                      PLH LOGIC.            @ZB02289*/ 00269000
@RF00237 DS    0H                                                  0245 00270000
*             RWORK1=BUFCHAIN;      /* GET NEXT BUFC.        @ZB02289*/ 00271000
@RF00235 L     RWORK1,BUFCHAIN(,RWORK1)                            0245 00272000
*           END;                    /* END OF LOOP THROUGH BUFC CHAIN   00273000
*                                      DO GROUP.             @ZB02289*/ 00274000
*                                                                  0246 00275000
@DE00234 LTR   RWORK1,RWORK1                                       0246 00276000
         BNZ   @DL00234                                            0246 00277000
*           /*********************************************************/ 00278000
*           /*                                                       */ 00279000
*           /* IF JRNAD SPECIFIED, JOURNAL THE CA SPLIT.     @ZB02289*/ 00280000
*           /*                                                       */ 00281000
*           /*********************************************************/ 00282000
*                                                                  0247 00283000
*           IF AMBJRN=ON THEN       /* JOURNAL EXIT,         @ZB02289*/ 00284000
         TM    AMBJRN(RAMB),B'00000010'                            0247 00285000
         BNO   @RF00247                                            0247 00286000
*             DO;                   /* YES, EXIT TO USER.    @ZB02289*/ 00287000
*               PLHJCODE=PLHJCAS;   /* SET CA SPLIT CODE.    @ZB02289*/ 00288000
         MVI   PLHJCODE(RPLH),B'00100000'                          0249 00289000
*               PLHJORBA=DIWLRBA;   /* SET LOW RBA.          @ZB02289*/ 00290000
         L     @10,AMBIWA(,RAMB)                                   0250 00291000
         L     @00,DIWLRBA(,@10)                                   0250 00292000
         ST    @00,PLHJORBA(,RPLH)                                 0250 00293000
*               PLHJNRBA=DIWHRBA+AMDCINV-ONE;/* SET HIGH RBA.      0251 00294000
*                                                            @X04SVRQ*/ 00295000
         L     @15,AMBDSB(,RAMB)                                   0251 00296000
         L     @10,DIWHRBA(,@10)                                   0251 00297000
         AL    @10,AMDCINV(,@15)                                   0251 00298000
         BCTR  @10,0                                               0251 00299000
         ST    @10,PLHJNRBA(,RPLH)                                 0251 00300000
*I01:                                                              0252 00301000
*               DO;                 /* IDACALL(IDATJXIT)             */ 00302000
I01      DS    0H                                                  0253 00303000
*                 CALL IDATJXIT;    /* EXIT TO IDATJXIT              */ 00304000
         L     @15,@CV01109                                        0253 00305000
         BALR  @14,@15                                             0253 00306000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00307000
         BALR @11,0                                                     00308000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00309000
         USING *,@11                                                    00310000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00311000
         L     @11,=A(@PSTART)                                          00312000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00313000
         USING @PSTART,@11                                              00314000
*               END I01;            /* CALL JOURNAL EXIT.    @ZB02289*/ 00315000
*             END;                  /* END - JRNAD GIVEN.    @ZB02289*/ 00316000
*         END;                      /* END OF SHARED RESOURCES EXCL     00317000
*                                      CHECK DO GROUP.       @ZB02289*/ 00318000
@RF00247 DS    0H                                                  0261 00319000
*     END;                          /* END OF SPLIT LOGIC DO GROUP.     00320000
*                                                            @ZB02289*/ 00321000
@RC00208 DS    0H                                                  0262 00322000
*   RFY                                                            0262 00323000
*     IDABUFC BASED(RBUFC);         /* RESET TO STANDARD PTR.      0262 00324000
*                                                            @ZB02289*/ 00325000
@RF00199 DS    0H                                                  0263 00326000
*/* IF NO MORE CONTROL AREAS ARE IN THE EXTENT, CALL END-OF-VOLUME   */ 00327000
*/* TO GET MORE SPACE                                                */ 00328000
*                                                                  0263 00329000
*   RFY                                                            0263 00330000
*     RWORK1 UNRSTD;                /* DROP WORK REGISTER            */ 00331000
*   IF ARDHRBA=ARDERBA              /* IF END-OF-EXTENT, TRY         */ 00332000
*     THEN                          /* TO GET MORE SPACE.            */ 00333000
         L     @10,PLHARDB(,RPLH)                                  0264 00334000
         CLC   ARDHRBA(4,@10),ARDERBA(@10)                         0264 00335000
         BNE   @RF00264                                            0264 00336000
*     DO;                                                          0265 00337000
*       PLHEOVR=AMBEOVAR;           /* ALLOCATE BY RBA               */ 00338000
         MVI   PLHEOVR(RPLH),B'10000010'                           0266 00339000
*       PLHEOVPT=ADDR(ARDERBA);     /* POINT TO ENDING RBA           */ 00340000
         LA    @10,ARDERBA(,@10)                                   0267 00341000
         ST    @10,PLHEOVPT(,RPLH)                                 0267 00342000
*       PLHSSRBA=PLHIBUFC->BUFCDDDD;/* SAVE SEQUENCE SET RBA         */ 00343000
         L     @10,PLHIBUFC(,RPLH)                                 0268 00344000
         L     @10,BUFCDDDD(,@10)                                  0268 00345000
         ST    @10,PLHSSRBA(,RPLH)                                 0268 00346000
*I02:                                                              0269 00347000
*       DO;                         /* IDACALL(IDAEOVIF)             */ 00348000
I02      DS    0H                                                  0270 00349000
*         CALL IDAEOVIF;            /* EXIT TO IDAEOVIF              */ 00350000
         L     @15,@CV01104                                        0270 00351000
         BALR  @14,@15                                             0270 00352000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00353000
         BALR @11,0                                                     00354000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00355000
         USING *,@11                                                    00356000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00357000
         L     @11,=A(@PSTART)                                          00358000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00359000
         USING @PSTART,@11                                              00360000
*       END I02;                    /* GET SPACE                     */ 00361000
*       RPARM1=ADDR(PLHIXSPL);      /* INX SEARCH PARM LIST  @ZA02289*/ 00362000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0276 00363000
*       RPARM1->IXSILN=ONE;         /* SET LEVEL NO.         @ZA02289*/ 00364000
         MVI   IXSILN(RPARM1),X'01'                                0277 00365000
*       RPARM1=PLHSSRBA;            /* GET SEQUENCE SET RBA          */ 00366000
         L     RPARM1,PLHSSRBA(,RPLH)                              0278 00367000
*       PLHSSR=ON;                  /* INDICATE SEQ SET REQ          */ 00368000
         OI    PLHSSR(RPLH),B'00010000'                            0279 00369000
*       RAMB=AMBLIX;                /* INDICATE INDEX REQUEST        */ 00370000
         L     @10,RPLDACB(,RRPL)                                  0280 00371000
         L     @10,ACBAMBL(,@10)                                   0280 00372000
         L     RAMB,AMBLIX(,@10)                                   0280 00373000
*I03:                                                              0281 00374000
*       DO;                         /* IDACALL(IDAGRB)               */ 00375000
I03      DS    0H                                                  0282 00376000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 00377000
         L     @15,@CV01107                                        0282 00378000
         BALR  @14,@15                                             0282 00379000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00380000
         BALR @11,0                                                     00381000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00382000
         USING *,@11                                                    00383000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00384000
         L     @11,=A(@PSTART)                                          00385000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00386000
         USING @PSTART,@11                                              00387000
*       END I03;                    /* GET SEQ SET BACK              */ 00388000
*       RAMB=AMBLDTA;               /* GO BACK TO DATA               */ 00389000
         L     @10,RPLDACB(,RRPL)                                  0288 00390000
         L     @10,ACBAMBL(,@10)                                   0288 00391000
         L     RAMB,AMBLDTA(,@10)                                  0288 00392000
*       RPARM1=ARDHRBA+AMDCINV*AMDCIPCA;/* GET RBA OF SEOF           */ 00393000
         L     @10,PLHARDB(,RPLH)                                  0289 00394000
         L     @05,AMBDSB(,RAMB)                                   0289 00395000
         L     RPARM1,AMDCINV(,@05)                                0289 00396000
         MH    RPARM1,AMDCIPCA(,@05)                               0289 00397000
         AL    RPARM1,ARDHRBA(,@10)                                0289 00398000
*     END;                          /* END OF END-OF-EXTENT          */ 00399000
*   ELSE                            /* NOT EOE, PREFORMAT            */ 00400000
*     DO;                                                          0291 00401000
*                                                                  0291 00402000
         B     @RC00264                                            0291 00403000
@RF00264 DS    0H                                                  0292 00404000
*       /*************************************************************/ 00405000
*       /*                                                           */ 00406000
*       /* PREFORMAT NEW CONTROL AREA                                */ 00407000
*       /*                                                           */ 00408000
*       /*************************************************************/ 00409000
*                                                                  0292 00410000
*       RPARM1=ARDHRBA;             /* POINT TO NEXT NEW RBA         */ 00411000
         L     @10,PLHARDB(,RPLH)                                  0292 00412000
         L     RPARM1,ARDHRBA(,@10)                                0292 00413000
*I04:                                                              0293 00414000
*       DO;                         /* IDACALL(IDA019RK)             */ 00415000
I04      DS    0H                                                  0294 00416000
*         CALL IDA019RK;            /* EXIT TO IDA019RK              */ 00417000
         L     @15,@CV01114                                        0294 00418000
         BALR  @14,@15                                             0294 00419000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00420000
         BALR @11,0                                                     00421000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00422000
         USING *,@11                                                    00423000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00424000
         L     @11,=A(@PSTART)                                          00425000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00426000
         USING @PSTART,@11                                              00427000
*       END I04;                    /* PAD OUT REST OF NEW CA        */ 00428000
*     END;                          /* END OF PREFORMAT CALL         */ 00429000
*   AMBLIX->AMBIWA->ICWTBASE=ARDHRBA;/* BASE RBA FOR IX UPDATE       */ 00430000
@RC00264 L     @10,RPLDACB(,RRPL)                                  0301 00431000
         L     @10,ACBAMBL(,@10)                                   0301 00432000
         L     @10,AMBLIX(,@10)                                    0301 00433000
         L     @10,AMBIWA(,@10)                                    0301 00434000
         L     @05,PLHARDB(,RPLH)                                  0301 00435000
         L     @15,ARDHRBA(,@05)                                   0301 00436000
         ST    @15,ICWTBASE(,@10)                                  0301 00437000
*   DIWSAVE2=ARDHRBA;               /* START OF CNTL AREA            */ 00438000
         L     @10,AMBIWA(,RAMB)                                   0302 00439000
         ST    @15,DIWSAVE2(,@10)                                  0302 00440000
*   IF RPLERREG='00'X THEN          /* IF ANY ERRORS,                */ 00441000
         CLI   RPLERREG(RRPL),0                                    0303 00442000
         BNE   @RF00303                                            0303 00443000
*     ARDHRBA=RPARM1;               /* EXIT. OTHERWISE, SET          */ 00444000
         ST    RPARM1,ARDHRBA(,@05)                                0304 00445000
*   ELSE                            /* ERROR.                        */ 00446000
*     GO TO RFEXITA1;               /* NEW HIGH RBA          @ZB02289*/ 00447000
*/*  FOR NON-ADD TO END OR SPANNED REC., LOCATE SPLIT        @X04SVRQ*/ 00448000
*/*  POINT & MOVE CI'S TO NEW CA.                            @X04SVRQ*/ 00449000
*                                                                  0306 00450000
*   IF PLHADDTE=OFF|RPLRLEN>AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF) THEN 00451000
         TM    PLHADDTE(RPLH),B'00010000'                          0306 00452000
         BZ    @RT00306                                            0306 00453000
         L     @10,AMBDSB(,RAMB)                                   0306 00454000
         L     @10,AMDCINV(,@10)                                   0306 00455000
         SL    @10,@CF00170                                        0306 00456000
         C     @10,RPLRLEN(,RRPL)                                  0306 00457000
         BNL   @RF00306                                            0306 00458000
@RT00306 DS    0H                                                  0307 00459000
*                                   /* NON-A.T.E. OR SPAN. REC     0307 00460000
*                                                            @X04SVRQ*/ 00461000
*     DO;                                                          0307 00462000
*                                                                  0307 00463000
*       /*************************************************************/ 00464000
*       /*                                                           */ 00465000
*       /* SPLIT BOUNDARIES HAVE BEEN CALCULATED AND THE INSERT RBA  */ 00466000
*       /* HAS BEEN SAVED BY THE INITIAL CODE.               @ZB02289*/ 00467000
*       /*                                                           */ 00468000
*       /*************************************************************/ 00469000
*                                                                  0308 00470000
*       RBUFC=PLHDBUFC;             /* POINT TO IP BFR               */ 00471000
*                                                                  0308 00472000
         L     RBUFC,PLHDBUFC(,RPLH)                               0308 00473000
*       /*************************************************************/ 00474000
*       /*                                                           */ 00475000
*       /* CODE TO JOURNAL WAS REMOVED FROM HERE.            @ZB02289*/ 00476000
*       /*                                                           */ 00477000
*       /*************************************************************/ 00478000
*                                                                  0309 00479000
*/* CONVERT INSERT POINTERS TO OFFSETS RATHER THAN ADDRESSES         */ 00480000
*                                                                  0309 00481000
*       PLHRDFP=PLHRDFP-BUFCBAD;    /* CONVERT DATA PTRS IN          */ 00482000
         L     @10,BUFCBAD(,RBUFC)                                 0309 00483000
         L     @05,PLHRDFP(,RPLH)                                  0309 00484000
         SLR   @05,@10                                             0309 00485000
         ST    @05,PLHRDFP(,RPLH)                                  0309 00486000
*       PLHRECP=PLHRECP-BUFCBAD;    /* THE PLH TO OFFSETS FOR        */ 00487000
         L     @05,PLHRECP(,RPLH)                                  0310 00488000
         SLR   @05,@10                                             0310 00489000
         ST    @05,PLHRECP(,RPLH)                                  0310 00490000
*       PLHFSP=PLHFSP-BUFCBAD;      /* LATER.                        */ 00491000
         LCR   @10,@10                                             0311 00492000
         AL    @10,PLHFSP(,RPLH)                                   0311 00493000
         ST    @10,PLHFSP(,RPLH)                                   0311 00494000
*/*  DETERMINE NUMBER OF CONTROL INTERVALS TO MOVE                   */ 00495000
*                                                                  0312 00496000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC           */ 00497000
         L     RBUFC,PLHIBUFC(,RPLH)                               0312 00498000
*/*  SAVE THE NUMBER OF USED CINVS IN THE CONTROL AREA               */ 00499000
*                                                                  0313 00500000
*       DIWSAVE4=AMDCIPCA-(IXHFSO-LENGTH(IDAIXH))/(IXHFLPLN-TWO);  0313 00501000
         L     @10,AMBIWA(,RAMB)                                   0313 00502000
         L     @05,AMBDSB(,RAMB)                                   0313 00503000
         L     @15,BUFCBAD(,RBUFC)                                 0313 00504000
         LH    @00,IXHFSO(,@15)                                    0313 00505000
         SL    @00,@CF00052                                        0313 00506000
         SLR   @14,@14                                             0313 00507000
         IC    @14,IXHFLPLN(,@15)                                  0313 00508000
         LR    @09,@14                                             0313 00509000
         BCTR  @09,0                                               0313 00510000
         BCTR  @09,0                                               0313 00511000
         LR    @06,@00                                             0313 00512000
         SRDA  @06,32                                              0313 00513000
         DR    @06,@09                                             0313 00514000
         LCR   @07,@07                                             0313 00515000
         AH    @07,AMDCIPCA(,@05)                                  0313 00516000
         ST    @07,DIWSAVE4(,@10)                                  0313 00517000
*       RFY                                                        0314 00518000
*        (RWORK1,                                                  0314 00519000
*         RWORK2) RSTD;             /* GET 2 WORK REGISTERS          */ 00520000
*/* POINT TO 1ST ENTRY IN THE SEQUENCE SET                           */ 00521000
*                                                                  0315 00522000
*       RWORK1=BUFCBAD+IXHLL-IXHFLPLN;/*                     @OX02678*/ 00523000
         LH    RWORK1,IXHLL(,@15)                                  0315 00524000
         N     RWORK1,@CF01239                                     0315 00525000
         ALR   RWORK1,@15                                          0315 00526000
         SLR   RWORK1,@14                                          0315 00527000
*       RWORK2=IXHSEO+BUFCBAD;      /* 1ST SECTION ENTRY PTR         */ 00528000
         LH    RWORK2,IXHSEO(,@15)                                 0316 00529000
         ALR   RWORK2,@15                                          0316 00530000
*       IXSLEP=RWORK1;              /* SET LOW ENTRY IN SECT.        */ 00531000
         ST    RWORK1,IXSLEP+200(,RPLH)                            0317 00532000
*       RFY                                                        0318 00533000
*         RWORK3 RSTD;              /* GET WORK REGISTER             */ 00534000
*/* FIND SPLIT POINT --- FOR SEQUENTIAL REQ., SPLIT AT INSERT POINT     00535000
*   UNLESS INSERT POINT IS LAST ENTRY OF SEQ. SET, THEN SPLIT JUST 0319 00536000
*   BEFORE LAST ENTRY.  FOR DIRECT REQ., SPLIT SO THAT OLD & NEW   0319 00537000
*   CA'S HAVE EQUAL FREE SPACE TAKING INTO ACCOUNT NO.'S CI'S      0319 00538000
*   REQUIRED(RPARM1).                                        @X04SVRQ*/ 00539000
*                                                                  0319 00540000
*       IF RPLSEQ=OFF&AMBSIS=OFF THEN/* NOT SEQ. REQ.        @X04SVRQ*/ 00541000
         TM    RPLSEQ(RRPL),B'00100000'                            0319 00542000
         BNZ   @RF00319                                            0319 00543000
         TM    AMBSIS(RAMB),B'00000100'                            0319 00544000
         BNZ   @RF00319                                            0319 00545000
*         CASDIFF=DIWSAVE4+CASRPRM1;/* INIT NO. CI'S DIFFERENCE    0320 00546000
*                                      NEW/OLD CA.           @X04SVRQ*/ 00547000
         L     @10,AMBIWA(,RAMB)                                   0320 00548000
         L     @10,DIWSAVE4(,@10)                                  0320 00549000
         AL    @10,CASRPRM1(,RPLH)                                 0320 00550000
         ST    @10,CASDIFF(,RPLH)                                  0320 00551000
*       DIWSAVE1=(DIWINRBA-IXHBRBA)/AMDCINV;/* CONVERT IP RBA TO   0321 00552000
*                                      MULTIPLIER.           @ZA25653*/ 00553000
@RF00319 L     @10,AMBIWA(,RAMB)                                   0321 00554000
         L     @15,BUFCBAD(,RBUFC)                                 0321 00555000
         L     @00,DIWINRBA(,@10)                                  0321 00556000
         SL    @00,IXHBRBA(,@15)                                   0321 00557000
         L     @15,AMBDSB(,RAMB)                                   0321 00558000
         LR    @09,@00                                             0321 00559000
         SLR   @08,@08                                             0321 00560000
         D     @08,AMDCINV(,@15)                                   0321 00561000
         ST    @09,DIWSAVE1(,@10)                                  0321 00562000
*       CASIPSW=OFF;                /* CLEAR I.P. SWITCH.    @X04SVRQ*/ 00563000
*       CAS1ST=ON;                  /* SET 1ST. ENTRY SW.    @X04SVRQ*/ 00564000
         OI    CAS1ST(RPLH),B'10000000'                            0323 00565000
         NI    CASIPSW(RPLH),B'10111111'                           0323 00566000
*       DIWSAVE3=ZERO;              /* ZERO SKIP CI'S CTR.   @X04SVRQ*/ 00567000
         SLR   @00,@00                                             0324 00568000
         ST    @00,DIWSAVE3(,@10)                                  0324 00569000
*IPSRCH:                            /* SEARCH SEQ. SET FOR I.P. OR 0325 00570000
*                                      LAST ENTRY.           @X04SVRQ*/ 00571000
*       CASCURSS=RWORK1;            /* SAVE CUR. SEQ. SET ENTRY.   0325 00572000
*                                                            @X04SVRQ*/ 00573000
IPSRCH   ST    RWORK1,CASCURSS(,RPLH)                              0325 00574000
*       RFY                                                        0326 00575000
*         RWORK4 RSTD;              /* GET WORK REG.         @X04SVRQ*/ 00576000
*       RWORK4=IXHPTLS;             /* GET RBA PTR. MASK.    @X04SVRQ*/ 00577000
         L     @10,BUFCBAD(,RBUFC)                                 0327 00578000
         SLR   RWORK4,RWORK4                                       0327 00579000
         IC    RWORK4,IXHPTLS(,@10)                                0327 00580000
*       RPARM1=ZERO;                /* ZERO ICM REG.         @X04SVRQ*/ 00581000
         SLR   RPARM1,RPARM1                                       0328 00582000
*       GEN(EX RWORK4,ICMINS);      /* GET RBA MULTIPLIER.   @X04SVRQ*/ 00583000
         EX RWORK4,ICMINS                                               00584000
*       RFY                                                        0330 00585000
*         RWORK4 UNRSTD;            /* FREE WORK REG.        @X04SVRQ*/ 00586000
*       IF RPARM1=DIWSAVE1 THEN     /* AT I.P. RBA.          @X04SVRQ*/ 00587000
         L     @10,AMBIWA(,RAMB)                                   0331 00588000
         C     RPARM1,DIWSAVE1(,@10)                               0331 00589000
         BNE   @RF00331                                            0331 00590000
*         CASIPSW=ON;               /* TURN ON I.P. SW.      @X04SVRQ*/ 00591000
         OI    CASIPSW(RPLH),B'01000000'                           0332 00592000
*       CASSEGCT=ZERO;              /* ZERO SEGMENT CTR.     @X04SVRQ*/ 00593000
@RF00331 SLR   @10,@10                                             0333 00594000
         ST    @10,CASSEGCT(,RPLH)                                 0333 00595000
*       DO WHILE RWORK1->IBFLPF=AMDKEYLN;/* LOOP ON SPANNED RECORD 0334 00596000
*                                      SEGMENT ENTRIES.      @X04SVRQ*/ 00597000
         B     @DE00334                                            0334 00598000
@DL00334 DS    0H                                                  0335 00599000
*         CASSEGCT=CASSEGCT+ONE;    /* INCR. NO. SEGMENTS.   @X04SVRQ*/ 00600000
         LA    @10,1                                               0335 00601000
         AL    @10,CASSEGCT(,RPLH)                                 0335 00602000
         ST    @10,CASSEGCT(,RPLH)                                 0335 00603000
*         CALL IXINCR;              /* INCR. INDEX PTR.      @X04SVRQ*/ 00604000
         BAL   @14,IXINCR                                          0336 00605000
*       END;                        /*                       @X04SVRQ*/ 00606000
@DE00334 L     @10,AMBDSB(,RAMB)                                   0337 00607000
         SLR   @00,@00                                             0337 00608000
         IC    @00,IBFLPF(,RWORK1)                                 0337 00609000
         CH    @00,AMDKEYLN(,@10)                                  0337 00610000
         BE    @DL00334                                            0337 00611000
*       IF(RWORK1-BUFCBAD)^=IXHLEO THEN/* NOT LAST SEQ. SET ENTRY. 0338 00612000
*                                                            @X04SVRQ*/ 00613000
         L     @10,BUFCBAD(,RBUFC)                                 0338 00614000
         LR    @00,RWORK1                                          0338 00615000
         SLR   @00,@10                                             0338 00616000
         CH    @00,IXHLEO(,@10)                                    0338 00617000
         BE    @RF00338                                            0338 00618000
*         DO;                       /*                       @X04SVRQ*/ 00619000
*           CAS1ST=OFF;             /* CLEAR 1ST. ENTRY SW.  @X04SVRQ*/ 00620000
         NI    CAS1ST(RPLH),B'01111111'                            0340 00621000
*           IF RPLSEQ=ON|AMBSIS=ON|PLHADDTE=ON THEN/* SEQ REQ-SPLIT     00622000
*                                      AT INSERT POINT       @X04SVRQ*/ 00623000
         TM    RPLSEQ(RRPL),B'00100000'                            0341 00624000
         BO    @RT00341                                            0341 00625000
         TM    AMBSIS(RAMB),B'00000100'                            0341 00626000
         BO    @RT00341                                            0341 00627000
         TM    PLHADDTE(RPLH),B'00010000'                          0341 00628000
         BNO   @RF00341                                            0341 00629000
@RT00341 DS    0H                                                  0342 00630000
*             DO;                   /*                       @X04SVRQ*/ 00631000
*               DIWSAVE3=DIWSAVE3+CASSEGCT+ONE;/* INCR. SKIP CI CTR     00632000
*                                      BY NO. SEG. ENTRIES + 1 FOR 0343 00633000
*                                      NORMAL ENTRY.         @X04SVRQ*/ 00634000
         L     @10,AMBIWA(,RAMB)                                   0343 00635000
         L     @00,DIWSAVE3(,@10)                                  0343 00636000
         AL    @00,CASSEGCT(,RPLH)                                 0343 00637000
         AL    @00,@CF00047                                        0343 00638000
         ST    @00,DIWSAVE3(,@10)                                  0343 00639000
*               IF CASIPSW=OFF THEN /* NOT AT I.P. YET.      @X04SVRQ*/ 00640000
         TM    CASIPSW(RPLH),B'01000000'                           0344 00641000
         BNZ   @RF00344                                            0344 00642000
*SRCHCTNU:                          /*                       @X04SVRQ*/ 00643000
*                 DO;               /*                       @X04SVRQ*/ 00644000
SRCHCTNU DS    0H                                                  0346 00645000
*                   CASPRVSS=RWORK1;/* SAVE PREV. SEQ. SET ENTRY.  0346 00646000
*                                                            @X04SVRQ*/ 00647000
         ST    RWORK1,CASPRVSS(,RPLH)                              0346 00648000
*                   CALL IXINCR;    /* INCR. INDEX PTR.      @X04SVRQ*/ 00649000
         BAL   @14,IXINCR                                          0347 00650000
*                   GOTO IPSRCH;    /* CONTINUE SEQ. SET SEARCH.   0348 00651000
*                                                            @X04SVRQ*/ 00652000
         B     IPSRCH                                              0348 00653000
*                 END;              /*                       @X04SVRQ*/ 00654000
*             END;                  /*                       @X04SVRQ*/ 00655000
*           ELSE                    /* NON-SEQ. REQ.-SPLIT AT      0351 00656000
*                                      MIDPOINT.             @X04SVRQ*/ 00657000
*             DO;                   /* MIDPOINT SPLIT.       @X04SVRQ*/ 00658000
         B     @RC00341                                            0351 00659000
@RF00341 DS    0H                                                  0352 00660000
*               RFY                                                0352 00661000
*                 RWORK4 RSTD;      /* GET WORK REG.         @X04SVRQ*/ 00662000
*               RWORK4A=CASDIFF-TWO*(CASSEGCT+ONE);/* GET NEW      0353 00663000
*                                      DIFFERENCE.           @X04SVRQ*/ 00664000
         LA    RWORK4A,1                                           0353 00665000
         AL    RWORK4A,CASSEGCT(,RPLH)                             0353 00666000
         ALR   RWORK4A,RWORK4A                                     0353 00667000
         LCR   RWORK4A,RWORK4A                                     0353 00668000
         AL    RWORK4A,CASDIFF(,RPLH)                              0353 00669000
*               IF CASIPSW=ON THEN  /* AT I.P. ENTRY.        @X04SVRQ*/ 00670000
         TM    CASIPSW(RPLH),B'01000000'                           0354 00671000
         BNO   @RF00354                                            0354 00672000
*                 DO;               /*                       @X04SVRQ*/ 00673000
*                   RWORK4A=RWORK4A-TWO*CASRPRM1;/* ADJUST DIFF. BY     00674000
*                                      I.P. CHANGE.          @X04SVRQ*/ 00675000
         L     @10,CASRPRM1(,RPLH)                                 0356 00676000
         ALR   @10,@10                                             0356 00677000
         SLR   RWORK4A,@10                                         0356 00678000
*                   CASIPSW=OFF;    /* TURN OFF I.P. SW.     @X04SVRQ*/ 00679000
         NI    CASIPSW(RPLH),B'10111111'                           0357 00680000
*                 END;              /*                       @X04SVRQ*/ 00681000
*               IF RWORK4A>ZERO THEN/* NOT BALANCED YET.     @X04SVRQ*/ 00682000
@RF00354 LTR   RWORK4A,RWORK4A                                     0359 00683000
         BNP   @RF00359                                            0359 00684000
*                 DO;               /*                       @X04SVRQ*/ 00685000
*                   CASDIFF=RWORK4A;/* SAVE NEW DIFFERENCE.  @X04SVRQ*/ 00686000
         ST    RWORK4A,CASDIFF(,RPLH)                              0361 00687000
*                   DIWSAVE3=DIWSAVE3+CASSEGCT+ONE;/* UPDATE NO. CI'S   00688000
*                                      TO SKIP.              @X04SVRQ*/ 00689000
         L     @10,AMBIWA(,RAMB)                                   0362 00690000
         L     @09,DIWSAVE3(,@10)                                  0362 00691000
         AL    @09,CASSEGCT(,RPLH)                                 0362 00692000
         AL    @09,@CF00047                                        0362 00693000
         ST    @09,DIWSAVE3(,@10)                                  0362 00694000
*                   GOTO SRCHCTNU;  /* CONTINUE SEQ. SET SEARCH.   0363 00695000
*                                                            @X04SVRQ*/ 00696000
         B     SRCHCTNU                                            0363 00697000
*                 END;              /*                       @X04SVRQ*/ 00698000
*               ELSE                /* BALANCED-STOP SEARCH. @X04SVRQ*/ 00699000
*                 DO;               /*                       @X04SVRQ*/ 00700000
@RF00359 DS    0H                                                  0366 00701000
*                   IF ABS(RWORK4A)>CASDIFF THEN/* NEW DIFF. GT OLD     00702000
*                                      DIFF. TOO FAR.        @X04SVRQ*/ 00703000
         LPR   @10,RWORK4A                                         0366 00704000
         C     @10,CASDIFF(,RPLH)                                  0366 00705000
         BH    @RT00366                                            0366 00706000
*                     GOTO BKUPIX;  /* BACKUP INDEX PTR.     @X04SVRQ*/ 00707000
*                   ELSE            /* GOOD SPLIT POINT.     @X04SVRQ*/ 00708000
*                     DIWSAVE3=DIWSAVE3+CASSEGCT+ONE;/* UPDATE NO. 0368 00709000
*                                      CI'S TO SKIP.         @X04SVRQ*/ 00710000
         L     @10,AMBIWA(,RAMB)                                   0368 00711000
         L     @09,DIWSAVE3(,@10)                                  0368 00712000
         AL    @09,CASSEGCT(,RPLH)                                 0368 00713000
         AL    @09,@CF00047                                        0368 00714000
         ST    @09,DIWSAVE3(,@10)                                  0368 00715000
*                 END;              /*                       @X04SVRQ*/ 00716000
*               RFY                                                0370 00717000
*                 RWORK4 UNRSTD;    /* FREE WORK REG.        @X04SVRQ*/ 00718000
*             END;                  /* END MIDPOINT SPLIT.   @X04SVRQ*/ 00719000
*           AMBLIX->AMBIWA->ICWTPTR=RWORK1-BUFCBAD;/* FOR INDEX    0372 00720000
*                                      RTN.-LAST ENTRY TO REMAIN IN     00721000
*                                      OLD CA (POINTS TO LAST SEG. 0372 00722000
*                                      ENTRY IF S.R.)        @X04SVRQ*/ 00723000
@RC00341 L     @10,RPLDACB(,RRPL)                                  0372 00724000
         L     @10,ACBAMBL(,@10)                                   0372 00725000
         L     @10,AMBLIX(,@10)                                    0372 00726000
         L     @10,AMBIWA(,@10)                                    0372 00727000
         LR    @00,RWORK1                                          0372 00728000
         SL    @00,BUFCBAD(,RBUFC)                                 0372 00729000
         ST    @00,ICWTPTR(,@10)                                   0372 00730000
*           CALL IXINCR;            /* INCR. INDEX PTR TO 1ST ENTRY     00731000
*                                      MOVE TO NEW CA.       @X04SVRQ*/ 00732000
         BAL   @14,IXINCR                                          0373 00733000
*         END;                      /*                       @X04SVRQ*/ 00734000
*       ELSE                        /* LAST SEQ. SET ENTRY.  @X04SVRQ*/ 00735000
*         DO;                       /*                       @X04SVRQ*/ 00736000
         B     @RC00338                                            0375 00737000
@RF00338 DS    0H                                                  0376 00738000
*           IF CAS1ST=ON THEN       /* 1ST SEQ. SET ENTRY.   @X04SVRQ*/ 00739000
         TM    CAS1ST(RPLH),B'10000000'                            0376 00740000
         BNO   @RF00376                                            0376 00741000
*             DO;                   /*                       @X04SVRQ*/ 00742000
*I05:                                                              0378 00743000
*               DO;                 /* IDACALL(IDA019SF)             */ 00744000
I05      DS    0H                                                  0379 00745000
*                 CALL IDA019SF;    /* EXIT TO IDA019SF              */ 00746000
         L     @15,@CV01110                                        0379 00747000
         BALR  @14,@15                                             0379 00748000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00749000
         BALR @11,0                                                     00750000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00751000
         USING *,@11                                                    00752000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00753000
         L     @11,=A(@PSTART)                                          00754000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00755000
         USING @PSTART,@11                                              00756000
*               END I05;            /* SINGLE RECORD CA - GO ADD NEW    00757000
*                                      CA.                   @X04SVRQ*/ 00758000
*               GOTO RFEXITA1;      /* RETURN.               @ZB02289*/ 00759000
         B     RFEXITA1                                            0385 00760000
*             END;                  /*                       @X04SVRQ*/ 00761000
*BKUPIX:                                                           0387 00762000
*           RWORK1=CASCURSS;        /* RESET INDEX PTR. TO START OF     00763000
*                                      COMPLEX ENTRY.        @X04SVRQ*/ 00764000
@RF00376 DS    0H                                                  0387 00765000
BKUPIX   L     RWORK1,CASCURSS(,RPLH)                              0387 00766000
*           AMBLIX->AMBIWA->ICWTPTR=CASPRVSS-BUFCBAD;/* FOR INDEX  0388 00767000
*                                      RTN.-LAST ENTRY OF OLD CA IS     00768000
*                                      PREVIOUS ENTRY.       @X04SVRQ*/ 00769000
         L     @10,RPLDACB(,RRPL)                                  0388 00770000
         L     @10,ACBAMBL(,@10)                                   0388 00771000
         L     @10,AMBLIX(,@10)                                    0388 00772000
         L     @10,AMBIWA(,@10)                                    0388 00773000
         L     @00,CASPRVSS(,RPLH)                                 0388 00774000
         SL    @00,BUFCBAD(,RBUFC)                                 0388 00775000
         ST    @00,ICWTPTR(,@10)                                   0388 00776000
*         END;                      /*                       @X04SVRQ*/ 00777000
*       DIWSAVE3=DIWSAVE4-DIWSAVE3; /* SET NO. CI'S TO MOVE = NO.  0390 00778000
*                                      USED CI'S - NO. CI'S SKIPPED.    00779000
*                                                            @X04SVRQ*/ 00780000
@RC00338 L     @10,AMBIWA(,RAMB)                                   0390 00781000
         L     @00,DIWSAVE4(,@10)                                  0390 00782000
         SL    @00,DIWSAVE3(,@10)                                  0390 00783000
         ST    @00,DIWSAVE3(,@10)                                  0390 00784000
*       IXSHEP=RWORK1;              /* SAVE CURR ENTRY PTR           */ 00785000
         LA    @10,200                                             0391 00786000
         ALR   @10,RPLH                                            0391 00787000
         ST    RWORK1,IXSHEP(,@10)                                 0391 00788000
*       IXSSEP=RWORK2;              /* NEXT SECTION ENTRY PTR        */ 00789000
         ST    RWORK2,IXSSEP(,@10)                                 0392 00790000
*       RFY                                                        0393 00791000
*         RWORK3 UNRSTD;            /* DROP WORK REGISTER            */ 00792000
*       RPARM1=DIWSAVE3;            /* GET MOVE COUNT                */ 00793000
         LR    RPARM1,@00                                          0394 00794000
*       RFY                                                        0395 00795000
*        (RWORK1,                                                  0395 00796000
*         RWORK2) UNRSTD;           /* DROP WORK REGISTERS           */ 00797000
*       RBUFC=PLHDBUFC;             /* POINT TO DATA BUFC.   @X04SVRQ*/ 00798000
         L     RBUFC,PLHDBUFC(,RPLH)                               0396 00799000
*I06:                                                              0397 00800000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00801000
I06      DS    0H                                                  0398 00802000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00803000
         L     @15,@CV01116                                        0398 00804000
         BALR  @14,@15                                             0398 00805000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00806000
         BALR @11,0                                                     00807000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00808000
         USING *,@11                                                    00809000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00810000
         L     @11,=A(@PSTART)                                          00811000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00812000
         USING @PSTART,@11                                              00813000
*       END I06;                    /* FREE DATA BUFFER.     @X04SVRQ*/ 00814000
*/*  ADD BUFFERS UNTIL EITHER ALL IN POOL OBTAINED OR NO MORE NEEDED */ 00815000
*                                                                  0404 00816000
*I07:                                                              0404 00817000
*       DO;                         /* IDACALL(IDAABF)               */ 00818000
I07      DS    0H                                                  0405 00819000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 00820000
         L     @15,@CV01103                                        0405 00821000
         BALR  @14,@15                                             0405 00822000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00823000
         BALR @11,0                                                     00824000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00825000
         USING *,@11                                                    00826000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00827000
         L     @11,=A(@PSTART)                                          00828000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00829000
         USING @PSTART,@11                                              00830000
*       END I07;                    /* ADD BUFFERS           @X04SVMR*/ 00831000
*       IF AMBGSR=OFF&AMBLSR=OFF THEN/* NOT SHR RESOURCE.    @X04SVRQ*/ 00832000
         TM    AMBGSR(RAMB),B'01100000'                            0411 00833000
         BNZ   @RF00411                                            0411 00834000
*         DO;                       /* AIBF.                 @ZB02289*/ 00835000
*I08:                                                              0413 00836000
*           DO;                     /* IDACALL(IDAAIBF)              */ 00837000
I08      DS    0H                                                  0414 00838000
*             CALL IDAAIBF;         /* EXIT TO IDAAIBF               */ 00839000
         L     @15,@CV01112                                        0414 00840000
         BALR  @14,@15                                             0414 00841000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00842000
         BALR @11,0                                                     00843000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00844000
         USING *,@11                                                    00845000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00846000
         L     @11,=A(@PSTART)                                          00847000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00848000
         USING @PSTART,@11                                              00849000
*           END I08;                /* ADD THE INSERT BFR    @X04SVMR*/ 00850000
*                                                                  0419 00851000
*           /*********************************************************/ 00852000
*           /*                                                       */ 00853000
*           /* EXCL CHECK WAS REMOVED FROM HERE.             @ZB02289*/ 00854000
*           /*                                                       */ 00855000
*           /*********************************************************/ 00856000
*                                                                  0420 00857000
*         END;                      /* END AIBF.             @ZB02289*/ 00858000
*       DIWSAVE4=ARDHKRBA;          /* SAVE HIGH KEY RBA             */ 00859000
@RF00411 L     @10,AMBIWA(,RAMB)                                   0421 00860000
         L     @05,PLHARDB(,RPLH)                                  0421 00861000
         L     @05,ARDHKRBA(,@05)                                  0421 00862000
         ST    @05,DIWSAVE4(,@10)                                  0421 00863000
*       PLHRAHD=ON;                 /* FORCE READ AHEAD      @X04SVMR*/ 00864000
         OI    PLHRAHD(RPLH),B'01000000'                           0422 00865000
*       PLHSAVE2=RPLOPTCD;          /* SAVE RPL OPTIONS.     @X04SVRQ*/ 00866000
         L     @05,RPLOPTCD(,RRPL)                                 0423 00867000
         ST    @05,PLHSAVE2(,RPLH)                                 0423 00868000
*       RPLBWD=OFF;                 /* FORCE FWD. DIRECTION. @X04SVRQ*/ 00869000
         NI    RPLBWD(RRPL),B'11101111'                            0424 00870000
*/*  MOVE DATA CONTROL INTERVALS TO THE NEW CONTROL AREA             */ 00871000
*                                                                  0425 00872000
*       DO DIWSAVE1=DIWSAVE3 TO 1 BY-1;/* LOOP UNTIL ALL MOVED       */ 00873000
         L     @10,DIWSAVE3(,@10)                                  0425 00874000
         L     @05,AMBIWA(,RAMB)                                   0425 00875000
         ST    @10,DIWSAVE1(,@05)                                  0425 00876000
         B     @DE00425                                            0425 00877000
@DL00425 DS    0H                                                  0426 00878000
*         IF DIWSAVE1=DIWSAVE3      /* IF FIRST TIME THROUGH         */ 00879000
*           THEN                    /* MUST GET BY RBA               */ 00880000
         L     @10,AMBIWA(,RAMB)                                   0426 00881000
         CLC   DIWSAVE1(4,@10),DIWSAVE3(@10)                       0426 00882000
         BNE   @RF00426                                            0426 00883000
*           DO;                                                    0427 00884000
*                                                                  0427 00885000
*             /*******************************************************/ 00886000
*             /*                                                     */ 00887000
*             /* GET THE RBA OF THE FIRST CINV TO MOVE TO THE NEW    */ 00888000
*             /* CNTL AREA                                           */ 00889000
*             /*                                                     */ 00890000
*             /*******************************************************/ 00891000
*                                                                  0428 00892000
*             RFY                                                  0428 00893000
*               RWORK1 RSTD;        /* RESTRICT REG.         @X04SVRQ*/ 00894000
*             RBUFC=PLHIBUFC;       /* POINT TO THE SEQ SET          */ 00895000
         L     RBUFC,PLHIBUFC(,RPLH)                               0429 00896000
*             RPARM1=IXHPTLS;       /* GET RBA POINTER MASK          */ 00897000
         L     @10,BUFCBAD(,RBUFC)                                 0430 00898000
         SLR   RPARM1,RPARM1                                       0430 00899000
         IC    RPARM1,IXHPTLS(,@10)                                0430 00900000
*             RWORK1=IXSHEP;        /* GET CURR ENTRY PTR            */ 00901000
         L     RWORK1,IXSHEP+200(,RPLH)                            0431 00902000
*             GEN(EX    RPARM1,ICMINS);/* GET RBA MULTIPLIER         */ 00903000
         EX    RPARM1,ICMINS                                            00904000
*             RFY                                                  0433 00905000
*               RWORK1 UNRSTD;      /* FREE REGISTER.        @X04SVRQ*/ 00906000
*             RPARM1=RPARM1*AMDCINV+IXHBRBA;/* GET SP CINV RBA       */ 00907000
         L     @10,AMBDSB(,RAMB)                                   0434 00908000
         LR    @07,RPARM1                                          0434 00909000
         M     @06,AMDCINV(,@10)                                   0434 00910000
         L     @10,BUFCBAD(,RBUFC)                                 0434 00911000
         AL    @07,IXHBRBA(,@10)                                   0434 00912000
         LR    RPARM1,@07                                          0434 00913000
*I09:                                                              0435 00914000
*             DO;                   /* IDACALL(IDAGRB)               */ 00915000
I09      DS    0H                                                  0436 00916000
*               CALL IDAGRB;        /* EXIT TO IDAGRB                */ 00917000
         L     @15,@CV01107                                        0436 00918000
         BALR  @14,@15                                             0436 00919000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00920000
         BALR @11,0                                                     00921000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00922000
         USING *,@11                                                    00923000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00924000
         L     @11,=A(@PSTART)                                          00925000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00926000
         USING @PSTART,@11                                              00927000
*             END I09;              /* READ RBA                      */ 00928000
*           END;                    /* END OF FIRST TIME CODE        */ 00929000
*         ELSE                      /* IF NOT THE FIRST TIME,        */ 00930000
*I10:                                                              0443 00931000
*           DO;                     /* IDACALL(IDAGNXT)              */ 00932000
         B     @RC00426                                            0443 00933000
@RF00426 DS    0H                                                  0443 00934000
I10      DS    0H                                                  0444 00935000
*             CALL IDAGNXT;         /* EXIT TO IDAGNXT               */ 00936000
         L     @15,@CV01106                                        0444 00937000
         BALR  @14,@15                                             0444 00938000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00939000
         BALR @11,0                                                     00940000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00941000
         USING *,@11                                                    00942000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00943000
         L     @11,=A(@PSTART)                                          00944000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00945000
         USING @PSTART,@11                                              00946000
*           END I10;                /* GET THE NEXT RBA.             */ 00947000
*         IF RPLERREG^='00'X THEN   /* IF ANY ERROR OCCURRED,        */ 00948000
@RC00426 CLI   RPLERREG(RRPL),0                                    0450 00949000
         BNE   @RT00450                                            0450 00950000
*           GO TO CASPLERR;         /* EXIT.                         */ 00951000
*         BUFCER2=OFF;              /* TURN OFF WRT ERR.     @X04SVRQ*/ 00952000
         NI    BUFCER2(RBUFC),B'11110111'                          0452 00953000
*         BUFCMW=ON;                /* INDICATE WRITE REQUIRED       */ 00954000
         OI    BUFCMW(RBUFC),B'10000000'                           0453 00955000
*         BUFCORBA=DIWSAVE2;        /* SET OUTPUT RBA                */ 00956000
         L     @10,AMBIWA(,RAMB)                                   0454 00957000
         L     @10,DIWSAVE2(,@10)                                  0454 00958000
         ST    @10,BUFCORBA(,RBUFC)                                0454 00959000
*/*  SET A POINTER TO THE FIRST RDF IN THE BUFFER.           @X04SVMR*/ 00960000
*                                                                  0455 00961000
*         RPARM1=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);   0455 00962000
         L     @10,AMBDSB(,RAMB)                                   0455 00963000
         L     RPARM1,BUFCBAD(,RBUFC)                              0455 00964000
         AL    RPARM1,AMDCINV(,@10)                                0455 00965000
         SL    RPARM1,@CF00170                                     0455 00966000
*         IF RPARM1->RDFNOT1=ON THEN/* IF LAST OR MIDDLE     @X04SVMR*/ 00967000
         TM    RDFNOT1(RPARM1),B'00100000'                         0456 00968000
         BNO   @RF00456                                            0456 00969000
*           BUFXIRBA=PLHSAVE5;      /* SEG SET TO 1ST RBA    @X04SVMR*/ 00970000
         L     @10,PLHSAVE5(,RPLH)                                 0457 00971000
         ST    @10,BUFXIRBA(,RBUFC)                                0457 00972000
*         ELSE                      /* IF NOT SPANNED, OR IF @X04SVMR*/ 00973000
*           DO;                     /* 1ST SEGMENT OF S.R.   @X04SVMR*/ 00974000
         B     @RC00456                                            0458 00975000
@RF00456 DS    0H                                                  0459 00976000
*             PLHSAVE5=BUFCORBA;    /* REMEMBER 1ST SEG RBA  @X04SVMR*/ 00977000
         L     @10,BUFCORBA(,RBUFC)                                0459 00978000
         ST    @10,PLHSAVE5(,RPLH)                                 0459 00979000
*             BUFXIRBA=BUFCORBA;    /* SET IN EXCL FIELD     @X04SVMR*/ 00980000
         ST    @10,BUFXIRBA(,RBUFC)                                0460 00981000
*           END;                    /* END 1ST/NON-S.R. CODE @X04SVMR*/ 00982000
*         IF BUFCDDDD=DIWINRBA THEN /* IF INSERT RBA         @ZA25653*/ 00983000
@RC00456 L     @10,AMBIWA(,RAMB)                                   0462 00984000
         CLC   BUFCDDDD(4,RBUFC),DIWINRBA(@10)                     0462 00985000
         BNE   @RF00462                                            0462 00986000
*           DO;                     /* MOVED,                @OX02678*/ 00987000
*             DIWINRBA=BUFCORBA;    /* RESET POINTER.        @ZA25653*/ 00988000
         L     @05,BUFCORBA(,RBUFC)                                0464 00989000
         ST    @05,DIWINRBA(,@10)                                  0464 00990000
*             DIWSHIFT=ON;          /* SET IP MOVE           @OX02678*/ 00991000
         OI    DIWSHIFT(@10),B'00000100'                           0465 00992000
*           END;                    /* END OF IP SHIFT@OX02678       */ 00993000
*         IF AMBGSR=ON|AMBLSR=ON THEN/* SHR RESOURCE.        @ZA14823*/ 00994000
@RF00462 TM    AMBGSR(RAMB),B'01100000'                            0467 00995000
         BZ    @RF00467                                            0467 00996000
*           DO;                     /*                       @ZA14823*/ 00997000
*I11:                                                              0469 00998000
*             DO;                   /* IDACALL(IDAWRBFR)             */ 00999000
I11      DS    0H                                                  0470 01000000
*               CALL IDAWRBFR;      /* EXIT TO IDAWRBFR              */ 01001000
         L     @15,@CV01111                                        0470 01002000
         BALR  @14,@15                                             0470 01003000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01004000
         BALR @11,0                                                     01005000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01006000
         USING *,@11                                                    01007000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01008000
         L     @11,=A(@PSTART)                                          01009000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01010000
         USING @PSTART,@11                                              01011000
*             END I11;              /* WRT BACK CI.          @ZA14823*/ 01012000
*             IF RPLERREG^='00'X THEN/* ERROR.               @ZA14823*/ 01013000
         CLI   RPLERREG(RRPL),0                                    0476 01014000
         BNE   @RT00476                                            0476 01015000
*               GOTO CASPLERR;      /* EXIT.                 @ZA14823*/ 01016000
*           END;                    /* END OF DBDC CODE.     @ZA14823*/ 01017000
*         IF BUFCDDDD=DIWSAVE4 THEN /* IF HIGH KEYED CINV            */ 01018000
@RF00467 L     @10,AMBIWA(,RAMB)                                   0479 01019000
         CLC   BUFCDDDD(4,RBUFC),DIWSAVE4(@10)                     0479 01020000
         BNE   @RF00479                                            0479 01021000
*           DIWSAVE4=BUFCORBA;      /* MOVED, CHANGE POINTER.        */ 01022000
         L     @05,BUFCORBA(,RBUFC)                                0480 01023000
         ST    @05,DIWSAVE4(,@10)                                  0480 01024000
*         BUFCDDDD=BUFCORBA;        /* COPY OUTPUT RBA       @ZA19625*/ 01025000
@RF00479 L     @10,BUFCORBA(,RBUFC)                                0481 01026000
         ST    @10,BUFCDDDD(,RBUFC)                                0481 01027000
*I12:                                                              0482 01028000
*         DO;                       /* IDACALL(IDAFREEB)             */ 01029000
I12      DS    0H                                                  0483 01030000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 01031000
         L     @15,@CV01116                                        0483 01032000
         BALR  @14,@15                                             0483 01033000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01034000
         BALR @11,0                                                     01035000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01036000
         USING *,@11                                                    01037000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01038000
         L     @11,=A(@PSTART)                                          01039000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01040000
         USING @PSTART,@11                                              01041000
*         END I12;                  /* FREE THE BFR          @X04SVLP*/ 01042000
*         DIWSAVE2=DIWSAVE2+AMDCINV;/* NEXT NEW CONTROL INTVL        */ 01043000
         L     @10,AMBIWA(,RAMB)                                   0489 01044000
         L     @05,AMBDSB(,RAMB)                                   0489 01045000
         L     @00,DIWSAVE2(,@10)                                  0489 01046000
         AL    @00,AMDCINV(,@05)                                   0489 01047000
         ST    @00,DIWSAVE2(,@10)                                  0489 01048000
*       END;                        /* END OF DATA MOVEMENT          */ 01049000
         L     @05,AMBIWA(,RAMB)                                   0490 01050000
         SLR   @10,@10                                             0490 01051000
         BCTR  @10,0                                               0490 01052000
         AL    @10,DIWSAVE1(,@05)                                  0490 01053000
         L     @05,AMBIWA(,RAMB)                                   0490 01054000
         ST    @10,DIWSAVE1(,@05)                                  0490 01055000
@DE00425 LTR   @10,@10                                             0490 01056000
         BP    @DL00425                                            0490 01057000
*       PLHRAHD=OFF;                /* NORMAL READ AHEAD     @X04SVMR*/ 01058000
         NI    PLHRAHD(RPLH),B'10111111'                           0491 01059000
*       RPLOPTCD=PLHSAVE2;          /* RESTORE RPL OPTIONS.  @X04SVRQ*/ 01060000
         L     @10,PLHSAVE2(,RPLH)                                 0492 01061000
         ST    @10,RPLOPTCD(,RRPL)                                 0492 01062000
*       IF AMBLSR=OFF&AMBGSR=OFF THEN/* NOT SHARED RESOURCES         */ 01063000
         TM    AMBLSR(RAMB),B'01100000'                            0493 01064000
         BNZ   @RF00493                                            0493 01065000
*         DO;                                                      0494 01066000
*I13:                                                              0495 01067000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 01068000
I13      DS    0H                                                  0496 01069000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 01070000
         L     @15,@CV01111                                        0496 01071000
         BALR  @14,@15                                             0496 01072000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01073000
         BALR @11,0                                                     01074000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01075000
         USING *,@11                                                    01076000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01077000
         L     @11,=A(@PSTART)                                          01078000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01079000
         USING @PSTART,@11                                              01080000
*           END I13;                /* FINISH WRITES                 */ 01081000
*           IF RPLERREG^='00'X THEN /* IF ANY ERRORS, TERMIN-        */ 01082000
         CLI   RPLERREG(RRPL),0                                    0502 01083000
         BNE   @RT00502                                            0502 01084000
*             GO TO CASPLERR;       /* ATE THE CA SPLIT.             */ 01085000
*         END;                                                     0504 01086000
*       DIWSAVE2=DIWSAVE4;          /* SAVE HI KEY RBA       @ZA02289*/ 01087000
@RF00493 L     @10,AMBIWA(,RAMB)                                   0505 01088000
         L     @05,DIWSAVE4(,@10)                                  0505 01089000
         ST    @05,DIWSAVE2(,@10)                                  0505 01090000
*     END;                          /* END OF NON-A.T.E.             */ 01091000
*   ELSE                            /* ADD TO END CASE       @ZA25653*/ 01092000
*     DO;                           /* DO ADD TO END         @ZA25653*/ 01093000
         B     @RC00306                                            0507 01094000
@RF00306 DS    0H                                                  0508 01095000
*       DIWINRBA=DIWSAVE2;          /* POINT TO SPLIT POINT  @ZA25653*/ 01096000
         L     @10,AMBIWA(,RAMB)                                   0508 01097000
         L     @05,DIWSAVE2(,@10)                                  0508 01098000
         ST    @05,DIWINRBA(,@10)                                  0508 01099000
*       DIWSHIFT=ON;                /* SPLIT POINT SHIFTING  @ZA25653*/ 01100000
         OI    DIWSHIFT(@10),B'00000100'                           0509 01101000
*     END;                          /* END ADD TO END        @ZA25653*/ 01102000
*/* CALL INDEX UPDATE TO SPLIT THE SEQUENCE SET OF THE OLD         0511 01103000
*   CONTROL AREA                                                     */ 01104000
*                                                                  0511 01105000
*   RAMB=AMBLIX;                    /* POINT TO INDEX AMB            */ 01106000
@RC00306 L     @10,RPLDACB(,RRPL)                                  0511 01107000
         L     @10,ACBAMBL(,@10)                                   0511 01108000
         L     RAMB,AMBLIX(,@10)                                   0511 01109000
*I14:                                                              0512 01110000
*   DO;                             /* IDACALL(IDA019RI)             */ 01111000
I14      DS    0H                                                  0513 01112000
*     CALL IDA019RI;                /* EXIT TO IDA019RI              */ 01113000
         L     @15,@CV01113                                        0513 01114000
         BALR  @14,@15                                             0513 01115000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01116000
         BALR @11,0                                                     01117000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01118000
         USING *,@11                                                    01119000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01120000
         L     @11,=A(@PSTART)                                          01121000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01122000
         USING @PSTART,@11                                              01123000
*   END I14;                        /* CALL INDEX UPDATE             */ 01124000
*   RFY                                                            0519 01125000
*     R15 RSTD;                     /* GET RETURN CODE REG           */ 01126000
*   IF R15=FOUR                     /* FIRST, CHECK REG 15           */ 01127000
*     THEN                          /* FOR I/O ERROR.                */ 01128000
         C     R15,@CF00036                                        0520 01129000
         BE    @RT00520                                            0520 01130000
*     GO TO CASPLERR;               /* EXIT                          */ 01131000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB             */ 01132000
         L     @14,RPLDACB(,RRPL)                                  0522 01133000
         L     @14,ACBAMBL(,@14)                                   0522 01134000
         L     RAMB,AMBLDTA(,@14)                                  0522 01135000
*   DIWSAVE1=RPARM1;                /* SAVE SP SHIFT COUNT           */ 01136000
         L     @10,AMBIWA(,RAMB)                                   0523 01137000
         ST    RPARM1,DIWSAVE1(,@10)                               0523 01138000
*   RFY                                                            0524 01139000
*     R15 UNRSTD;                   /* RELEASE RETURN CODE REG       */ 01140000
*/* READ THE SEQUENCE SET OF THE OLD CONTROL AREA.                   */ 01141000
*                                                                  0525 01142000
*   RAMB=AMBLIX;                    /* POINT TO INDEX AMB            */ 01143000
         L     RAMB,AMBLIX(,@14)                                   0525 01144000
*   PLHSSR=ON;                      /* FLAG SEQUENCE SET REQ         */ 01145000
         OI    PLHSSR(RPLH),B'00010000'                            0526 01146000
*   RPARM1=ADDR(PLHIXSPL);          /* POINT TO INDX SEARCH PARM LIST   01147000
*                                                            @ZA02289*/ 01148000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0527 01149000
*   RPARM1->IXSILN=ONE;             /* SET LEVEL NO.         @ZA02289*/ 01150000
         MVI   IXSILN(RPARM1),X'01'                                0528 01151000
*   RPARM1=PLHSSRBA;                /* OLD CA SEQ SET RBA            */ 01152000
         L     RPARM1,PLHSSRBA(,RPLH)                              0529 01153000
*I15:                                                              0530 01154000
*   DO;                             /* IDACALL(IDAGRB)               */ 01155000
I15      DS    0H                                                  0531 01156000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 01157000
         L     @15,@CV01107                                        0531 01158000
         BALR  @14,@15                                             0531 01159000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01160000
         BALR @11,0                                                     01161000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01162000
         USING *,@11                                                    01163000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01164000
         L     @11,=A(@PSTART)                                          01165000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01166000
         USING @PSTART,@11                                              01167000
*   END I15;                        /* REACQUIRE OLD SEQ SET         */ 01168000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB             */ 01169000
         L     @10,RPLDACB(,RRPL)                                  0537 01170000
         L     @10,ACBAMBL(,@10)                                   0537 01171000
         L     RAMB,AMBLDTA(,@10)                                  0537 01172000
*   IF RPLERREG^='00'X THEN         /* IF ANY ERROR,                 */ 01173000
         CLI   RPLERREG(RRPL),0                                    0538 01174000
         BNE   @RT00538                                            0538 01175000
*     GO TO CASPLERR;               /* EXIT.                         */ 01176000
*   IF PLHADDTE=OFF|RPLRLEN>AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF)/*    01177000
*                                      FOR NON-A.T.E. OR SPANNED REC.   01178000
*                                      SPLIT PT              @X04SVRQ*/ 01179000
*     THEN                          /* SHIFT MAY HAVE OCCURRED       */ 01180000
         TM    PLHADDTE(RPLH),B'00010000'                          0540 01181000
         BZ    @RT00540                                            0540 01182000
         L     @10,AMBDSB(,RAMB)                                   0540 01183000
         L     @10,AMDCINV(,@10)                                   0540 01184000
         SL    @10,@CF00170                                        0540 01185000
         C     @10,RPLRLEN(,RRPL)                                  0540 01186000
         BNL   @RF00540                                            0540 01187000
@RT00540 DS    0H                                                  0541 01188000
*     DO;                           /* AND FS MUST BE WRITTEN        */ 01189000
*/* IF INDEX UPDATE SHIFTED THE SPLIT POINT, CONVERT THE DATA CONTROL   01190000
*   INTERVALS INVOLVED IN THE NEW CONTROL AREA TO FREE SPACE         */ 01191000
*                                                                  0542 01192000
*       RPARM1=DIWSAVE1;            /* GET SHIFT COUNT               */ 01193000
         L     @10,AMBIWA(,RAMB)                                   0542 01194000
         L     @05,DIWSAVE1(,@10)                                  0542 01195000
         LR    RPARM1,@05                                          0542 01196000
*       ARDHKRBA=DIWSAVE2;          /* RESET HIGH KEY RBA    @ZA02289*/ 01197000
         L     @15,PLHARDB(,RPLH)                                  0543 01198000
         L     @00,DIWSAVE2(,@10)                                  0543 01199000
         ST    @00,ARDHKRBA(,@15)                                  0543 01200000
*/* ADJUST THE NUMBER OF CONTROL INTERVALS MOVED BY THE AMOUNT     0544 01201000
*   OF THE SPLIT POINT SHIFT                                         */ 01202000
*                                                                  0544 01203000
*       DIWSAVE4=DIWSAVE3-RPARM1;   /* # OF OLD CA CIS TO FS         */ 01204000
         L     @00,DIWSAVE3(,@10)                                  0544 01205000
         SLR   @00,RPARM1                                          0544 01206000
         ST    @00,DIWSAVE4(,@10)                                  0544 01207000
*       IF AMBJRN=ON THEN           /* JOURNAL EXIT.         @X04SVRQ*/ 01208000
         TM    AMBJRN(RAMB),B'00000010'                            0545 01209000
         BNO   @RF00545                                            0545 01210000
*         DO;                       /* JOURNAL RBA CHANGE.   @X04SVRQ*/ 01211000
*           RBUFC=PLHIBUFC;         /* POINT TO SEQ SET BUFC @X04SVRQ*/ 01212000
         L     RBUFC,PLHIBUFC(,RPLH)                               0547 01213000
*           PLHSAVE1=ARDHRBA-(AMDCINV*AMDCIPCA)+(DIWSAVE1*AMDCINV);/*   01214000
*                                      NEW RBA = NEW CA RBA + ANY  0548 01215000
*                                      SHIFTED CI'S.         @X04SVRQ*/ 01216000
         L     @14,AMBDSB(,RAMB)                                   0548 01217000
         L     @09,AMDCINV(,@14)                                   0548 01218000
         LR    @08,@09                                             0548 01219000
         MH    @08,AMDCIPCA(,@14)                                  0548 01220000
         LCR   @08,@08                                             0548 01221000
         AL    @08,ARDHRBA(,@15)                                   0548 01222000
         LR    @07,@05                                             0548 01223000
         MR    @06,@09                                             0548 01224000
         ALR   @08,@07                                             0548 01225000
         ST    @08,PLHSAVE1(,RPLH)                                 0548 01226000
*           DIWSAVE3=BUFCBAD+IXHFSO;/* POINT TO END OF FS ENTRIES. 0549 01227000
*                                                            @X04SVRQ*/ 01228000
         L     @05,BUFCBAD(,RBUFC)                                 0549 01229000
         LH    @15,IXHFSO(,@05)                                    0549 01230000
         ALR   @15,@05                                             0549 01231000
         ST    @15,DIWSAVE3(,@10)                                  0549 01232000
*/* JOURNAL ALL CI'S WHOSE RBA'S CHANGED.                          0550 01233000
*   LOOP THROUGH OLD CA FS PTRS BY NO. OF CI'S MOVED.        @X04SVRQ*/ 01234000
*                                                                  0550 01235000
*           DO DIWSAVE2=DIWSAVE4 TO ONE BY-ONE;/*            @X04SVRQ*/ 01236000
         L     @10,AMBIWA(,RAMB)                                   0550 01237000
         ST    @00,DIWSAVE2(,@10)                                  0550 01238000
         B     @DE00550                                            0550 01239000
@DL00550 DS    0H                                                  0551 01240000
*             RFY                                                  0551 01241000
*               RWORK1 RSTD;        /* GET WORK REG.         @X04SVRQ*/ 01242000
*             RWORK1=DIWSAVE3-(IXHFLPLN-TWO);/* GET NEXT FS PTR.   0552 01243000
*                                                            @X04SVRQ*/ 01244000
         L     @10,AMBIWA(,RAMB)                                   0552 01245000
         L     @15,BUFCBAD(,RBUFC)                                 0552 01246000
         SLR   RWORK1,RWORK1                                       0552 01247000
         IC    RWORK1,IXHFLPLN(,@15)                               0552 01248000
         BCTR  RWORK1,0                                            0552 01249000
         BCTR  RWORK1,0                                            0552 01250000
         LCR   RWORK1,RWORK1                                       0552 01251000
         AL    RWORK1,DIWSAVE3(,@10)                               0552 01252000
*             DIWSAVE3=RWORK1;      /* STORE NEW FS PTR.     @X04SVRQ*/ 01253000
         ST    RWORK1,DIWSAVE3(,@10)                               0553 01254000
*             RPARM1=IXHPTLS;       /* GET RBA PTR MASK.     @X04SVRQ*/ 01255000
         SLR   RPARM1,RPARM1                                       0554 01256000
         IC    RPARM1,IXHPTLS(,@15)                                0554 01257000
*             GEN(EX RPARM1,ICMINS2);/* GET RBA MULTIPLIER.  @X04SVRQ*/ 01258000
         EX RPARM1,ICMINS2                                              01259000
*             RFY                                                  0556 01260000
*               RWORK1 UNRSTD;      /* FREE WORK REG.        @X04SVRQ*/ 01261000
*             PLHJORBA=(RPARM1*AMDCINV)+IXHBRBA;/* SET OLD CI RBA. 0557 01262000
*                                                            @X04SVRQ*/ 01263000
         L     @10,AMBDSB(,RAMB)                                   0557 01264000
         L     @10,AMDCINV(,@10)                                   0557 01265000
         LR    @07,RPARM1                                          0557 01266000
         MR    @06,@10                                             0557 01267000
         L     @05,BUFCBAD(,RBUFC)                                 0557 01268000
         AL    @07,IXHBRBA(,@05)                                   0557 01269000
         ST    @07,PLHJORBA(,RPLH)                                 0557 01270000
*             PLHJNRBA=PLHSAVE1;    /* SET NEW CI RBA.       @X04SVRQ*/ 01271000
         L     @05,PLHSAVE1(,RPLH)                                 0558 01272000
         ST    @05,PLHJNRBA(,RPLH)                                 0558 01273000
*             PLHJRNLL=AMDCINV;     /* SET JOURNAL LENGTH.   @X04SVRQ*/ 01274000
         ST    @10,PLHJRNLL(,RPLH)                                 0559 01275000
*             PLHJCODE=PLHJRBAC;    /* SET RBA CHANGE CODE.  @X04SVRQ*/ 01276000
         MVI   PLHJCODE(RPLH),B'00001100'                          0560 01277000
*I16:                                                              0561 01278000
*             DO;                   /* IDACALL(IDATJXIT)             */ 01279000
I16      DS    0H                                                  0562 01280000
*               CALL IDATJXIT;      /* EXIT TO IDATJXIT              */ 01281000
         L     @15,@CV01109                                        0562 01282000
         BALR  @14,@15                                             0562 01283000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01284000
         BALR @11,0                                                     01285000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01286000
         USING *,@11                                                    01287000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01288000
         L     @11,=A(@PSTART)                                          01289000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01290000
         USING @PSTART,@11                                              01291000
*             END I16;              /* CALL JOURNAL EXIT.    @X04SVRQ*/ 01292000
*             PLHSAVE1=PLHSAVE1+AMDCINV;/* INCR. TO NEXT NEW CI RBA.    01293000
*                                                            @X04SVRQ*/ 01294000
         L     @10,AMBDSB(,RAMB)                                   0568 01295000
         L     @05,PLHSAVE1(,RPLH)                                 0568 01296000
         AL    @05,AMDCINV(,@10)                                   0568 01297000
         ST    @05,PLHSAVE1(,RPLH)                                 0568 01298000
*           END;                    /* END DO LOOP.          @X04SVRQ*/ 01299000
         L     @10,AMBIWA(,RAMB)                                   0569 01300000
         SLR   @00,@00                                             0569 01301000
         BCTR  @00,0                                               0569 01302000
         AL    @00,DIWSAVE2(,@10)                                  0569 01303000
         L     @10,AMBIWA(,RAMB)                                   0569 01304000
         ST    @00,DIWSAVE2(,@10)                                  0569 01305000
@DE00550 LTR   @00,@00                                             0569 01306000
         BP    @DL00550                                            0569 01307000
*         END;                      /* END JRN RBA CHANGE.   @X04SVRQ*/ 01308000
*       RPARM1=DIWSAVE1;            /* GET SHIFT COUNT       @X04SVMR*/ 01309000
@RF00545 L     @10,AMBIWA(,RAMB)                                   0571 01310000
         L     RPARM1,DIWSAVE1(,@10)                               0571 01311000
*       IF RPARM1^=ZERO             /* SEE IF SP SHIFTED. IF         */ 01312000
*         THEN                      /* SO MAKE FS IN NEW CA.         */ 01313000
         LTR   RPARM1,RPARM1                                       0572 01314000
         BZ    @RF00572                                            0572 01315000
*         DO;                                                      0573 01316000
*                                                                  0573 01317000
*/*  POINT TO THE START OF THE NEW CONTROL AREA                      */ 01318000
*                                                                  0574 01319000
*           DIWSAVE2=ARDHRBA-(AMDCINV*AMDCIPCA);/*           @X04SVRQ*/ 01320000
         L     @05,PLHARDB(,RPLH)                                  0574 01321000
         L     @15,AMBDSB(,RAMB)                                   0574 01322000
         LH    @14,AMDCIPCA(,@15)                                  0574 01323000
         L     @07,AMDCINV(,@15)                                   0574 01324000
         MR    @06,@14                                             0574 01325000
         LCR   @07,@07                                             0574 01326000
         AL    @07,ARDHRBA(,@05)                                   0574 01327000
         ST    @07,DIWSAVE2(,@10)                                  0574 01328000
*/*  POSITION TO START OF SEQUENCE SET IN ORDER TO EXTRACT JRNAD RBAS*/ 01329000
*                                                                  0575 01330000
*           RBUFC=PLHIBUFC;         /* GET SEQ SET BUFC              */ 01331000
         L     RBUFC,PLHIBUFC(,RPLH)                               0575 01332000
*/*  SAVE FIRST SEQUENCE SET ENTRY AS THE CURR ENTRY PTR             */ 01333000
*                                                                  0576 01334000
*           IXSHEP=BUFCBAD+IXHLL-IXHFLPLN;/*                 @OX02678*/ 01335000
         LA    @10,200                                             0576 01336000
         ALR   @10,RPLH                                            0576 01337000
         L     @05,BUFCBAD(,RBUFC)                                 0576 01338000
         LH    @00,IXHLL(,@05)                                     0576 01339000
         N     @00,@CF01239                                        0576 01340000
         ALR   @00,@05                                             0576 01341000
         SLR   @15,@15                                             0576 01342000
         IC    @15,IXHFLPLN(,@05)                                  0576 01343000
         SLR   @00,@15                                             0576 01344000
         ST    @00,IXSHEP(,@10)                                    0576 01345000
*           IXSSEP=IXHSEO+BUFCBAD;  /* NEXT SECTION ENTRY PTR        */ 01346000
         LH    @00,IXHSEO(,@05)                                    0577 01347000
         ALR   @00,@05                                             0577 01348000
         ST    @00,IXSSEP(,@10)                                    0577 01349000
*/*  POSITION THE INDEX POINTERS TO THE FIRST RBA THAT WAS SHIFTED   */ 01350000
*                                                                  0578 01351000
*           DO RPARM1=AMDCIPCA-(IXHFSO-LENGTH(IDAIXH))/(IXHFLPLN-TWO)-  01352000
*                 RPARM1 TO ONE BY-ONE;/* LOCATE THE FIRST SHIFT     */ 01353000
         LH    @10,IXHFSO(,@05)                                    0578 01354000
         SL    @10,@CF00052                                        0578 01355000
         BCTR  @15,0                                               0578 01356000
         BCTR  @15,0                                               0578 01357000
         LR    @06,@10                                             0578 01358000
         SRDA  @06,32                                              0578 01359000
         DR    @06,@15                                             0578 01360000
         SLR   @14,@07                                             0578 01361000
         SLR   @14,RPARM1                                          0578 01362000
         LR    RPARM1,@14                                          0578 01363000
         B     @DE00578                                            0578 01364000
@DL00578 DS    0H                                                  0579 01365000
*             RFY                                                  0579 01366000
*              (RWORK1,                                            0579 01367000
*               RWORK2,                                            0579 01368000
*               RWORK3) RSTD;       /* GET WORK REGISTERS            */ 01369000
*             RWORK1=IXSHEP;        /* GET OLD ENTRY PTR             */ 01370000
         LA    @10,200                                             0580 01371000
         ALR   @10,RPLH                                            0580 01372000
         L     RWORK1,IXSHEP(,@10)                                 0580 01373000
*             RWORK2=IXSSEP;        /* GET OLD SECTION PTR           */ 01374000
         L     RWORK2,IXSSEP(,@10)                                 0581 01375000
*             CALL IXINCR;          /* ADVANCE INDEX PTRS            */ 01376000
         BAL   @14,IXINCR                                          0582 01377000
*             IXSHEP=RWORK1;        /* SAVE NEW ENTRY PTR            */ 01378000
         LA    @10,200                                             0583 01379000
         ALR   @10,RPLH                                            0583 01380000
         ST    RWORK1,IXSHEP(,@10)                                 0583 01381000
*             IXSSEP=RWORK2;        /* SAVE NEW SECTION PTR          */ 01382000
         ST    RWORK2,IXSSEP(,@10)                                 0584 01383000
*             RFY                                                  0585 01384000
*              (RWORK1,                                            0585 01385000
*               RWORK2,                                            0585 01386000
*               RWORK3) UNRSTD;     /* RELEASE REGISTERS             */ 01387000
*           END;                    /* END OF SHIFT LOCATE           */ 01388000
         BCTR  RPARM1,0                                            0586 01389000
@DE00578 LTR   RPARM1,RPARM1                                       0586 01390000
         BP    @DL00578                                            0586 01391000
*/*  CONVERT THE SHIFTED CINVS IN THE NEW CONTROL AREA TO FREE SPACE    01392000
*    SINCE THE DATA WILL REMAIN IN THE OLD CONTROL AREA.             */ 01393000
*                                                                  0587 01394000
*           DO DIWSAVE1=DIWSAVE1 TO ONE BY-ONE;/* IF SP SHIFT, WRITE    01395000
*                                      FS                            */ 01396000
         L     @10,AMBIWA(,RAMB)                                   0587 01397000
         L     @10,DIWSAVE1(,@10)                                  0587 01398000
         B     @DE00587                                            0587 01399000
@DL00587 DS    0H                                                  0588 01400000
*             RFY                                                  0588 01401000
*              (RWORK1,                                            0588 01402000
*               RWORK2) RSTD;       /* GET WORK REGS.        @X04SVRQ*/ 01403000
*             RWORK1=IXSHEP;        /* PTR TO CURRENT IX ENTRY.    0589 01404000
*                                                            @X04SVRQ*/ 01405000
         L     RWORK1,IXSHEP+200(,RPLH)                            0589 01406000
*             RWORK2=PLHIBUFC->BUFCBAD;/* PTR TO INDEX BFR.  @X04SVRQ*/ 01407000
         L     @10,PLHIBUFC(,RPLH)                                 0590 01408000
         L     RWORK2,BUFCBAD(,@10)                                0590 01409000
*             RPARM1=RWORK2->IXHPTLS;/* GET RBA PTR MASK     @X04SVRQ*/ 01410000
         SLR   RPARM1,RPARM1                                       0591 01411000
         IC    RPARM1,IXHPTLS(,RWORK2)                             0591 01412000
*             GEN(EX RPARM1,ICMINS);/* GET RBA MULTI.        @X04SVRQ*/ 01413000
         EX RPARM1,ICMINS                                               01414000
*             DIWSAVE3=RPARM1*AMDCINV+RWORK2->IXHBRBA;/* GET OLD RBA    01415000
*                                                            @X04SVRQ*/ 01416000
         L     @10,AMBIWA(,RAMB)                                   0593 01417000
         L     @07,AMBDSB(,RAMB)                                   0593 01418000
         LR    @09,RPARM1                                          0593 01419000
         M     @08,AMDCINV(,@07)                                   0593 01420000
         AL    @09,IXHBRBA(,RWORK2)                                0593 01421000
         ST    @09,DIWSAVE3(,@10)                                  0593 01422000
*             IF AMBGSR=ON|AMBLSR=ON THEN/* SHR RESOURCE.    @X04SVRQ*/ 01423000
         TM    AMBGSR(RAMB),B'01100000'                            0594 01424000
         BZ    @RF00594                                            0594 01425000
*               DO;                 /* RESET OUTPUT RBA IN BFR FOR 0595 01426000
*                                      SHIFTED CI.           @X04SVRQ*/ 01427000
*                 RPARM1=DIWSAVE2;  /* RBA OF SHIFTED CI.    @X04SVRQ*/ 01428000
         L     RPARM1,DIWSAVE2(,@10)                               0596 01429000
*I17:                                                              0597 01430000
*                 DO;               /* IDACALL(IDAGRB)               */ 01431000
I17      DS    0H                                                  0598 01432000
*                   CALL IDAGRB;    /* EXIT TO IDAGRB                */ 01433000
         L     @15,@CV01107                                        0598 01434000
         BALR  @14,@15                                             0598 01435000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01436000
         BALR @11,0                                                     01437000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01438000
         USING *,@11                                                    01439000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01440000
         L     @11,=A(@PSTART)                                          01441000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01442000
         USING @PSTART,@11                                              01443000
*                 END I17;          /* GET NEW SHIFTED CI.   @X04SVRQ*/ 01444000
*                 IF RPLERREG^='00'X THEN/* ERROR.           @X04SVRQ*/ 01445000
         CLI   RPLERREG(RRPL),0                                    0604 01446000
         BNE   @RT00604                                            0604 01447000
*                   GOTO CASPLERR;  /* EXIT.                 @X04SVRQ*/ 01448000
*                 BUFCER2=OFF;      /* TURN OFF WRT ERR.     @X04SVRQ*/ 01449000
         NI    BUFCER2(RBUFC),B'11110111'                          0606 01450000
*                 RPARM1=DIWSAVE3;  /* RBA OF OLD CI.        @X04SVRQ*/ 01451000
         L     @10,AMBIWA(,RAMB)                                   0607 01452000
         L     RPARM1,DIWSAVE3(,@10)                               0607 01453000
*                 DO;               /* SET OUTPUT RBA                */ 01454000
*                   BUFCORBA=RPARM1;                               0609 01455000
         ST    RPARM1,BUFCORBA(,RBUFC)                             0609 01456000
*                   BUFCMW=ON;      /* SET MUST WRITE                */ 01457000
         OI    BUFCMW(RBUFC),B'10000000'                           0610 01458000
*                 END;              /* SET MUST WRT & ORBA.  @X04SVRQ*/ 01459000
*                 BUFXIRBA=RPARM1;  /* SET EXCL CNTL RBA     @X04SVMR*/ 01460000
         ST    RPARM1,BUFXIRBA(,RBUFC)                             0612 01461000
*                 BUFCDDDD=RPARM1;  /* SET LOOK-ASIDE RBA    @X04SVMR*/ 01462000
         ST    RPARM1,BUFCDDDD(,RBUFC)                             0613 01463000
*I19:                                                              0614 01464000
*                 DO;               /* IDACALL(IDAFREEB)             */ 01465000
I19      DS    0H                                                  0615 01466000
*                   CALL IDAFREEB;  /* EXIT TO IDAFREEB              */ 01467000
         L     @15,@CV01116                                        0615 01468000
         BALR  @14,@15                                             0615 01469000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01470000
         BALR @11,0                                                     01471000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01472000
         USING *,@11                                                    01473000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01474000
         L     @11,=A(@PSTART)                                          01475000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01476000
         USING @PSTART,@11                                              01477000
*                 END I19;          /* FREE BUFFER.          @X04SVRQ*/ 01478000
*               END;                /* END RESET OUTPUT RBA. @X04SVRQ*/ 01479000
*I20:                                                              0622 01480000
*             DO;                   /* IDACALL(IDAGNNFL)             */ 01481000
@RF00594 DS    0H                                                  0622 01482000
I20      DS    0H                                                  0623 01483000
*               CALL IDAGNNFL;      /* EXIT TO IDAGNNFL              */ 01484000
         L     @15,@CV01105                                        0623 01485000
         BALR  @14,@15                                             0623 01486000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01487000
         BALR @11,0                                                     01488000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01489000
         USING *,@11                                                    01490000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01491000
         L     @11,=A(@PSTART)                                          01492000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01493000
         USING @PSTART,@11                                              01494000
*             END I20;              /* GET NEXT WORK BUFFER          */ 01495000
*             IF RPLERREG^='00'X THEN/* IF AN I/O ERROR,     @X04SVMR*/ 01496000
         CLI   RPLERREG(RRPL),0                                    0629 01497000
         BNE   @RT00629                                            0629 01498000
*               GO TO CASPLERR;     /* EXIT MODULE.          @X04SVMR*/ 01499000
*             BUFCMW=ON;            /* SET WRITE REQUIRED            */ 01500000
         OI    BUFCMW(RBUFC),B'10000000'                           0631 01501000
*             BUFCORBA=DIWSAVE2;    /* SET OUTPUT RBA                */ 01502000
         L     @10,AMBIWA(,RAMB)                                   0632 01503000
         L     @10,DIWSAVE2(,@10)                                  0632 01504000
         ST    @10,BUFCORBA(,RBUFC)                                0632 01505000
*             CALL BFRFS;           /* SET FS IN BUFFER.     @X04SVRQ*/ 01506000
         BAL   @14,BFRFS                                           0633 01507000
*             IF AMBGSR=ON|AMBLSR=ON THEN/* SHR RESOURCE.    @X04SVRQ*/ 01508000
         TM    AMBGSR(RAMB),B'01100000'                            0634 01509000
         BZ    @RF00634                                            0634 01510000
*               DO;                 /*                       @X04SVRQ*/ 01511000
*I21:                                                              0636 01512000
*                 DO;               /* IDACALL(IDAWRBFR)             */ 01513000
I21      DS    0H                                                  0637 01514000
*                   CALL IDAWRBFR;  /* EXIT TO IDAWRBFR              */ 01515000
         L     @15,@CV01111                                        0637 01516000
         BALR  @14,@15                                             0637 01517000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01518000
         BALR @11,0                                                     01519000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01520000
         USING *,@11                                                    01521000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01522000
         L     @11,=A(@PSTART)                                          01523000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01524000
         USING @PSTART,@11                                              01525000
*                 END I21;          /* WRT BACK FS CI.       @X04SVRQ*/ 01526000
*                 IF RPLERREG^='00'X THEN/* ERROR.           @X04SVRQ*/ 01527000
         CLI   RPLERREG(RRPL),0                                    0643 01528000
         BNE   @RT00643                                            0643 01529000
*                   GOTO CASPLERR;  /* EXIT.                 @X04SVRQ*/ 01530000
*               END;                /* END OF DBDC CODE.     @X04SVMR*/ 01531000
*             IF BUFCORBA=DIWINRBA THEN/* IF IP WAS MOVED BACK     0646 01532000
*                                                            @ZA25653*/ 01533000
@RF00634 L     @10,AMBIWA(,RAMB)                                   0646 01534000
         CLC   BUFCORBA(4,RBUFC),DIWINRBA(@10)                     0646 01535000
         BNE   @RF00646                                            0646 01536000
*               DIWINRBA=DIWSAVE3;  /* SET NEW INSERT POINT  @ZA25653*/ 01537000
         L     @07,DIWSAVE3(,@10)                                  0647 01538000
         ST    @07,DIWINRBA(,@10)                                  0647 01539000
*             DIWSAVE2=DIWSAVE2+AMDCINV;/* GO TO NEXT RBA            */ 01540000
@RF00646 L     @10,AMBIWA(,RAMB)                                   0648 01541000
         L     @07,AMBDSB(,RAMB)                                   0648 01542000
         L     @00,DIWSAVE2(,@10)                                  0648 01543000
         AL    @00,AMDCINV(,@07)                                   0648 01544000
         ST    @00,DIWSAVE2(,@10)                                  0648 01545000
*             RFY                                                  0649 01546000
*              (RWORK1,                                            0649 01547000
*               RWORK2,                                            0649 01548000
*               RWORK3) RSTD;       /* GET REGISTERS                 */ 01549000
*             RBUFC=PLHIBUFC;       /* POINT TO SEQUENCE SET         */ 01550000
         L     RBUFC,PLHIBUFC(,RPLH)                               0650 01551000
*             RWORK1=IXSHEP;        /* GET OLD ENTRY PTR             */ 01552000
         LA    @10,200                                             0651 01553000
         ALR   @10,RPLH                                            0651 01554000
         L     RWORK1,IXSHEP(,@10)                                 0651 01555000
*             RWORK2=IXSSEP;        /* GET OLD SECTION PTR           */ 01556000
         L     RWORK2,IXSSEP(,@10)                                 0652 01557000
*             CALL IXINCR;          /* INCREMENT INDEX PTRS          */ 01558000
         BAL   @14,IXINCR                                          0653 01559000
*             IXSHEP=RWORK1;        /* SAVE NEW ENTRY PTR            */ 01560000
         LA    @10,200                                             0654 01561000
         ALR   @10,RPLH                                            0654 01562000
         ST    RWORK1,IXSHEP(,@10)                                 0654 01563000
*             IXSSEP=RWORK2;        /* SAVE NEW SECTION PTR          */ 01564000
         ST    RWORK2,IXSSEP(,@10)                                 0655 01565000
*             RBUFC=PLHDBUFC;       /* POINT TO DATA                 */ 01566000
         L     RBUFC,PLHDBUFC(,RPLH)                               0656 01567000
*             RFY                                                  0657 01568000
*              (RWORK1,                                            0657 01569000
*               RWORK2,                                            0657 01570000
*               RWORK3) UNRSTD;     /* RELEASE REGISTERS             */ 01571000
*I22:                                                              0658 01572000
*             DO;                   /* IDACALL(IDAFREEB)             */ 01573000
I22      DS    0H                                                  0659 01574000
*               CALL IDAFREEB;      /* EXIT TO IDAFREEB              */ 01575000
         L     @15,@CV01116                                        0659 01576000
         BALR  @14,@15                                             0659 01577000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01578000
         BALR @11,0                                                     01579000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01580000
         USING *,@11                                                    01581000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01582000
         L     @11,=A(@PSTART)                                          01583000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01584000
         USING @PSTART,@11                                              01585000
*             END I22;              /* FREE WK BFR           @X04SVLP*/ 01586000
*           END;                    /* END OF SP SHIFT WRITE         */ 01587000
         L     @05,AMBIWA(,RAMB)                                   0665 01588000
         SLR   @10,@10                                             0665 01589000
         BCTR  @10,0                                               0665 01590000
         AL    @10,DIWSAVE1(,@05)                                  0665 01591000
         L     @05,AMBIWA(,RAMB)                                   0665 01592000
         ST    @10,DIWSAVE1(,@05)                                  0665 01593000
@DE00587 LTR   @10,@10                                             0665 01594000
         BP    @DL00587                                            0665 01595000
*           IF AMBGSR=OFF&AMBLSR=OFF THEN/* IF NOT DBDC,     @X04SVMR*/ 01596000
         TM    AMBGSR(RAMB),B'01100000'                            0666 01597000
         BNZ   @RF00666                                            0666 01598000
*/*  FORCE OUT ALL WRITES FOR THE NEW CONTROL AREA                   */ 01599000
*                                                                  0667 01600000
*I23:                                                              0667 01601000
*             DO;                   /* IDACALL(IDAWRBFR)             */ 01602000
I23      DS    0H                                                  0668 01603000
*               CALL IDAWRBFR;      /* EXIT TO IDAWRBFR              */ 01604000
         L     @15,@CV01111                                        0668 01605000
         BALR  @14,@15                                             0668 01606000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01607000
         BALR @11,0                                                     01608000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01609000
         USING *,@11                                                    01610000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01611000
         L     @11,=A(@PSTART)                                          01612000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01613000
         USING @PSTART,@11                                              01614000
*             END I23;              /* REMOVE CINVS IN NEW CA        */ 01615000
*           IF RPLERREG^='00'X THEN /* IF ANY ERROR, EXIT            */ 01616000
@RF00666 CLI   RPLERREG(RRPL),0                                    0674 01617000
         BNE   @RT00674                                            0674 01618000
*             GO TO CASPLERR;       /* FROM CA SPLIT                 */ 01619000
*         END;                      /* END OF FS CREATE              */ 01620000
*       RBUFC=PLHIBUFC;             /* POINT TO SEQ. SET             */ 01621000
@RF00572 L     RBUFC,PLHIBUFC(,RPLH)                               0677 01622000
*/* CONVERT THE COPIED DATA CONTROL INTERVALS IN THE OLD CONTROL   0678 01623000
*   AREA TO FREE SPACE                                               */ 01624000
*                                                                  0678 01625000
*       DIWHPTLS=IXHPTLS;           /* GET RBA PTR MASK              */ 01626000
         L     @10,AMBIWA(,RAMB)                                   0678 01627000
         L     @05,BUFCBAD(,RBUFC)                                 0678 01628000
         MVC   DIWHPTLS(1,@10),IXHPTLS(@05)                        0678 01629000
*       DIWFLPLN=IXHFLPLN-TWO;      /* GET FS ENTRY LENGTH           */ 01630000
         SLR   @00,@00                                             0679 01631000
         IC    @00,IXHFLPLN(,@05)                                  0679 01632000
         BCTR  @00,0                                               0679 01633000
         BCTR  @00,0                                               0679 01634000
         STC   @00,DIWFLPLN(,@10)                                  0679 01635000
*       DIWSAVE3=BUFCBAD+IXHFSO;    /* PTR TO END OF FS ENTRY        */ 01636000
         LH    @00,IXHFSO(,@05)                                    0680 01637000
         ALR   @00,@05                                             0680 01638000
         ST    @00,DIWSAVE3(,@10)                                  0680 01639000
*       RFY                                                        0681 01640000
*         RWORK1 UNRSTD;            /* DROP WORK REGISTER            */ 01641000
*       RFY                                                        0682 01642000
*        (RWORK2,                                                  0682 01643000
*         RWORK3) UNRSTD;           /* DROP WORK REGISTERS           */ 01644000
*       DO DIWSAVE4=DIWSAVE4 TO ONE BY-ONE;/* SET UP FS IN OLD CA    */ 01645000
         L     @10,DIWSAVE4(,@10)                                  0683 01646000
         B     @DE00683                                            0683 01647000
@DL00683 DS    0H                                                  0684 01648000
*I24:                                                              0684 01649000
*         DO;                       /* IDACALL(IDAGNNFL)             */ 01650000
I24      DS    0H                                                  0685 01651000
*           CALL IDAGNNFL;          /* EXIT TO IDAGNNFL              */ 01652000
         L     @15,@CV01105                                        0685 01653000
         BALR  @14,@15                                             0685 01654000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01655000
         BALR @11,0                                                     01656000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01657000
         USING *,@11                                                    01658000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01659000
         L     @11,=A(@PSTART)                                          01660000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01661000
         USING @PSTART,@11                                              01662000
*         END I24;                  /* GET WORK BUFC                 */ 01663000
*         IF RPLERREG^='00'X THEN   /* IF AN I/O ERROR,      @X04SVMR*/ 01664000
         CLI   RPLERREG(RRPL),0                                    0691 01665000
         BNE   @RT00691                                            0691 01666000
*           GO TO CASPLERR;         /* EXIT MODULE.          @X04SVMR*/ 01667000
*         RFY                                                      0693 01668000
*           RWORK1 RSTD;            /* GET WORK REGISTER             */ 01669000
*         RWORK1=DIWSAVE3-DIWFLPLN; /* GET NEXT FS PTR               */ 01670000
         L     @10,AMBIWA(,RAMB)                                   0694 01671000
         L     RWORK1,DIWSAVE3(,@10)                               0694 01672000
         SLR   @00,@00                                             0694 01673000
         IC    @00,DIWFLPLN(,@10)                                  0694 01674000
         SLR   RWORK1,@00                                          0694 01675000
*         DIWSAVE3=RWORK1;          /* STORE NEW FS PTR              */ 01676000
         ST    RWORK1,DIWSAVE3(,@10)                               0695 01677000
*         RPARM1=DIWHPTLS;          /* GET RBA PTR MASK              */ 01678000
         SLR   RPARM1,RPARM1                                       0696 01679000
         IC    RPARM1,DIWHPTLS(,@10)                               0696 01680000
*         GEN(EX  RPARM1,ICMINS2);  /* GET RBA MULTIPLIER            */ 01681000
         EX  RPARM1,ICMINS2                                             01682000
*         RFY                                                      0698 01683000
*           RWORK1 UNRSTD;          /* DROP WORK REGISTER            */ 01684000
*         BUFCORBA=RPARM1*AMDCINV+PLHIBUFC->BUFCBAD->IXHBRBA;/* SET     01685000
*                                      RBA                           */ 01686000
         L     @10,AMBDSB(,RAMB)                                   0699 01687000
         LR    @07,RPARM1                                          0699 01688000
         M     @06,AMDCINV(,@10)                                   0699 01689000
         L     @10,PLHIBUFC(,RPLH)                                 0699 01690000
         L     @10,BUFCBAD(,@10)                                   0699 01691000
         AL    @07,IXHBRBA(,@10)                                   0699 01692000
         ST    @07,BUFCORBA(,RBUFC)                                0699 01693000
*         BUFCMW=ON;                /* SET MUST WRITE                */ 01694000
         OI    BUFCMW(RBUFC),B'10000000'                           0700 01695000
*         CALL BFRFS;               /* SET FS IN BUFFER.     @X04SVRQ*/ 01696000
         BAL   @14,BFRFS                                           0701 01697000
*         IF AMBGSR=ON|AMBLSR=ON THEN/* SHR RESOURCE.        @X04SVRQ*/ 01698000
         TM    AMBGSR(RAMB),B'01100000'                            0702 01699000
         BZ    @RF00702                                            0702 01700000
*I25:                                                              0703 01701000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 01702000
I25      DS    0H                                                  0704 01703000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 01704000
         L     @15,@CV01111                                        0704 01705000
         BALR  @14,@15                                             0704 01706000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01707000
         BALR @11,0                                                     01708000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01709000
         USING *,@11                                                    01710000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01711000
         L     @11,=A(@PSTART)                                          01712000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01713000
         USING @PSTART,@11                                              01714000
*           END I25;                /* WRT BACK OLD CI.      @X04SVRQ*/ 01715000
*I26:                                                              0710 01716000
*         DO;                       /* IDACALL(IDAFREEB)             */ 01717000
@RF00702 DS    0H                                                  0710 01718000
I26      DS    0H                                                  0711 01719000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 01720000
         L     @15,@CV01116                                        0711 01721000
         BALR  @14,@15                                             0711 01722000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01723000
         BALR @11,0                                                     01724000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01725000
         USING *,@11                                                    01726000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01727000
         L     @11,=A(@PSTART)                                          01728000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01729000
         USING @PSTART,@11                                              01730000
*         END I26;                  /* FREE DATA BUFC        @X04SVLP*/ 01731000
*       END;                        /* END OF OLD CA FS CHANGE       */ 01732000
         L     @05,AMBIWA(,RAMB)                                   0717 01733000
         SLR   @10,@10                                             0717 01734000
         BCTR  @10,0                                               0717 01735000
         AL    @10,DIWSAVE4(,@05)                                  0717 01736000
         L     @05,AMBIWA(,RAMB)                                   0717 01737000
         ST    @10,DIWSAVE4(,@05)                                  0717 01738000
@DE00683 LTR   @10,@10                                             0717 01739000
         BP    @DL00683                                            0717 01740000
*       IF AMBLSR=OFF&AMBGSR=OFF THEN/* IF NOT DBDC,         @X04SVMR*/ 01741000
         TM    AMBLSR(RAMB),B'01100000'                            0718 01742000
         BNZ   @RF00718                                            0718 01743000
*I27:                                                              0719 01744000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 01745000
I27      DS    0H                                                  0720 01746000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 01747000
         L     @15,@CV01111                                        0720 01748000
         BALR  @14,@15                                             0720 01749000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01750000
         BALR @11,0                                                     01751000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01752000
         USING *,@11                                                    01753000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01754000
         L     @11,=A(@PSTART)                                          01755000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01756000
         USING @PSTART,@11                                              01757000
*         END I27;                  /* FINISH WRITING                */ 01758000
*/*  ENSURE THAT THE PLACEHOLDER CONTAINS THE INSERT SEQUENCE SET    */ 01759000
*                                                                  0726 01760000
*       IF DIWINRBA>DIWHRBA THEN    /*                       @ZA25653   01761000
*                                      IF THE INSERT POINT IS IN THE    01762000
*                                      NEW CONTROL AREA,GO           */ 01763000
@RF00718 L     @10,AMBIWA(,RAMB)                                   0726 01764000
         CLC   DIWINRBA(4,@10),DIWHRBA(@10)                        0726 01765000
         BNH   @RF00726                                            0726 01766000
*         DO;                       /* TO THE NEXT SEQ. SET          */ 01767000
*           RBUFC=PLHIBUFC;         /* POINT TO THE OLD SS BUFC      */ 01768000
         L     RBUFC,PLHIBUFC(,RPLH)                               0728 01769000
*           DIWSAVE2=IXHHP;         /* SAVE RBA OF NEW CA SS         */ 01770000
         L     @05,BUFCBAD(,RBUFC)                                 0729 01771000
         L     @05,IXHHP(,@05)                                     0729 01772000
         ST    @05,DIWSAVE2(,@10)                                  0729 01773000
*           RAMB=AMBLIX;            /* POINT TO THE INDEX AMB        */ 01774000
         L     @10,RPLDACB(,RRPL)                                  0730 01775000
         L     @10,ACBAMBL(,@10)                                   0730 01776000
         L     RAMB,AMBLIX(,@10)                                   0730 01777000
*           PLHSSR=ON;              /* INDICATE SEQUENCE SET         */ 01778000
         OI    PLHSSR(RPLH),B'00010000'                            0731 01779000
*I28:                                                              0732 01780000
*           DO;                     /* IDACALL(IDAFREEB)             */ 01781000
I28      DS    0H                                                  0733 01782000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 01783000
         L     @15,@CV01116                                        0733 01784000
         BALR  @14,@15                                             0733 01785000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01786000
         BALR @11,0                                                     01787000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01788000
         USING *,@11                                                    01789000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01790000
         L     @11,=A(@PSTART)                                          01791000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01792000
         USING @PSTART,@11                                              01793000
*           END I28;                /* FREE OLD SEQ SET      @X04SVLP*/ 01794000
*           RPARM1=ADDR(PLHIXSPL);  /* POINT TO INDEX SEARCH PARM  0739 01795000
*                                      LIST                  @ZA02289*/ 01796000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0739 01797000
*           RPARM1->IXSILN=ONE;     /* SET LEVEL NO.         @ZA02289*/ 01798000
         MVI   IXSILN(RPARM1),X'01'                                0740 01799000
*           RPARM1=AMBLDTA->AMBIWA->DIWSAVE2;/* GET THE RBA OF NEW SS*/ 01800000
         L     @10,RPLDACB(,RRPL)                                  0741 01801000
         L     @10,ACBAMBL(,@10)                                   0741 01802000
         L     @10,AMBLDTA(,@10)                                   0741 01803000
         L     @10,AMBIWA(,@10)                                    0741 01804000
         L     RPARM1,DIWSAVE2(,@10)                               0741 01805000
*           PLHSSRBA=RPARM1;        /* SAVE SEQ SET RBA      @X04SVMR*/ 01806000
         ST    RPARM1,PLHSSRBA(,RPLH)                              0742 01807000
*I29:                                                              0743 01808000
*           DO;                     /* IDACALL(IDAGRB)               */ 01809000
I29      DS    0H                                                  0744 01810000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 01811000
         L     @15,@CV01107                                        0744 01812000
         BALR  @14,@15                                             0744 01813000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01814000
         BALR @11,0                                                     01815000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01816000
         USING *,@11                                                    01817000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01818000
         L     @11,=A(@PSTART)                                          01819000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01820000
         USING @PSTART,@11                                              01821000
*           END I29;                /* ACQUIRE NEW SEQ SET           */ 01822000
*           RAMB=AMBLDTA;           /* GO BACK TO DATA               */ 01823000
         L     @10,RPLDACB(,RRPL)                                  0750 01824000
         L     @10,ACBAMBL(,@10)                                   0750 01825000
         L     RAMB,AMBLDTA(,@10)                                  0750 01826000
*         END;                      /* END OF INSERT IN NEW CA       */ 01827000
*       IF RPLERREG^='00'X THEN     /* ANY ERRORS IN FS CREATE       */ 01828000
@RF00726 CLI   RPLERREG(RRPL),0                                    0752 01829000
         BNE   @RT00752                                            0752 01830000
*         GO TO CASPLERR;           /* WILL CAUSE AN EXIT            */ 01831000
*/* INCREMENT CONTROL AREA SPLIT COUNT                               */ 01832000
*                                                                  0754 01833000
*       AMDNCAS=AMDNCAS+ONE;        /* INDICATE ONE MORE CA SP       */ 01834000
         L     @10,AMBDSB(,RAMB)                                   0754 01835000
         LA    @05,1                                               0754 01836000
         AL    @05,AMDNCAS(,@10)                                   0754 01837000
         ST    @05,AMDNCAS(,@10)                                   0754 01838000
*     END;                          /* SP SHIFT/FS WRITE END         */ 01839000
*CASPLERR:                          /* COMMON EXIT POINT             */ 01840000
*/*  IF ADD-TO-END, INITIALIZE THE PLACEHOLDER INSERT POINTERS TO  0756 01841000
*    THE FREE SPACE CONTROL INTERVAL, SET THE RBA TO THAT OF THE   0756 01842000
*    BEGINNING OF THE NEW CONTROL AREA, AND CALL DATA INSERT.        */ 01843000
*                                                                  0756 01844000
*   IF PLHADDTE=ON&RPLRLEN<=AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF)/*    01845000
*                                      IF ADD TO END & NOT SPANNED 0756 01846000
*                                      REC., POINT TO        @X04SVRQ*/ 01847000
*     THEN                          /* A FREE SPACE CINV AND         */ 01848000
@RF00540 DS    0H                                                  0756 01849000
CASPLERR TM    PLHADDTE(RPLH),B'00010000'                          0756 01850000
         BNO   @RF00756                                            0756 01851000
         L     @10,AMBDSB(,RAMB)                                   0756 01852000
         L     @10,AMDCINV(,@10)                                   0756 01853000
         SL    @10,@CF00170                                        0756 01854000
         C     @10,RPLRLEN(,RRPL)                                  0756 01855000
         BL    @RF00756                                            0756 01856000
*     DO;                           /* INSERT RECORD.                */ 01857000
*                                                                  0757 01858000
*       /*************************************************************/ 01859000
*       /*                                                           */ 01860000
*       /* IF NO ERRORS, INSERT THE RECORD.                          */ 01861000
*       /*                                                           */ 01862000
*       /*************************************************************/ 01863000
*                                                                  0758 01864000
*       IF RPLERREG='00'X           /* IF NO ERROR, UPDATE INS       */ 01865000
*         THEN                      /* PT AND INSERT RECORD.         */ 01866000
         CLI   RPLERREG(RRPL),0                                    0758 01867000
         BNE   @RF00758                                            0758 01868000
*         DO;                                                      0759 01869000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC            */ 01870000
         L     RBUFC,PLHDBUFC(,RPLH)                               0760 01871000
*I30:                                                              0761 01872000
*           DO;                     /* IDACALL(IDAFREEB)             */ 01873000
I30      DS    0H                                                  0762 01874000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 01875000
         L     @15,@CV01116                                        0762 01876000
         BALR  @14,@15                                             0762 01877000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01878000
         BALR @11,0                                                     01879000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01880000
         USING *,@11                                                    01881000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01882000
         L     @11,=A(@PSTART)                                          01883000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01884000
         USING @PSTART,@11                                              01885000
*           END I30;                /* FREE DATA BUFFER.     @X04SVRQ*/ 01886000
*I31:                                                              0768 01887000
*           DO;                     /* IDACALL(IDAGNNFL)             */ 01888000
I31      DS    0H                                                  0769 01889000
*             CALL IDAGNNFL;        /* EXIT TO IDAGNNFL              */ 01890000
         L     @15,@CV01105                                        0769 01891000
         BALR  @14,@15                                             0769 01892000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01893000
         BALR @11,0                                                     01894000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01895000
         USING *,@11                                                    01896000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01897000
         L     @11,=A(@PSTART)                                          01898000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01899000
         USING @PSTART,@11                                              01900000
*           END I31;                /* GET NEXT NO FILL.     @X04SVRQ*/ 01901000
*           IF RPLERREG^='00'X THEN /* ERROR.                @X04SVRQ*/ 01902000
         CLI   RPLERREG(RRPL),0                                    0775 01903000
         BNE   @RT00775                                            0775 01904000
*             GOTO RFEXITA1;        /* RETURN.               @ZB02289*/ 01905000
*           BUFCMW=ON;              /* CAUSE WRITE TO OCCUR          */ 01906000
         OI    BUFCMW(RBUFC),B'10000000'                           0777 01907000
*           BUFCORBA=DIWSAVE2;      /* SET TO FIRST RBA OF CA        */ 01908000
         L     @10,AMBIWA(,RAMB)                                   0778 01909000
         L     @05,DIWSAVE2(,@10)                                  0778 01910000
         ST    @05,BUFCORBA(,RBUFC)                                0778 01911000
*           BUFCDDDD=BUFCORBA;      /* SET BUFC INPUT RBA.   @X04SVRQ*/ 01912000
         ST    @05,BUFCDDDD(,RBUFC)                                0779 01913000
*           BUFXIRBA=BUFCORBA;      /* SET EXCL INPUT RBA.   @X04SVRQ*/ 01914000
         ST    @05,BUFXIRBA(,RBUFC)                                0780 01915000
*           BUFCVAL=ON;             /* SET BUFC VALID.       @X04SVRQ*/ 01916000
*           BUFCEXC=ON;             /* SET BUFC EXCL.        @X04SVRQ*/ 01917000
         OI    BUFCVAL(RBUFC),B'00000110'                          0782 01918000
*           DIWSHIFT=OFF;           /* OK TO DROP SHIFT      @ZA25653*/ 01919000
         NI    DIWSHIFT(@10),B'11111011'                           0783 01920000
*           CALL BFRFS;             /* SET FS IN BUFFER.     @X04SVRQ*/ 01921000
         BAL   @14,BFRFS                                           0784 01922000
*           ARDHKRBA=DIWSAVE2;      /* SET NEW HIGH KEY              */ 01923000
         L     @10,PLHARDB(,RPLH)                                  0785 01924000
         L     @05,AMBIWA(,RAMB)                                   0785 01925000
         L     @05,DIWSAVE2(,@05)                                  0785 01926000
         ST    @05,ARDHKRBA(,@10)                                  0785 01927000
*           PLHFSP=BUFCBAD;         /* BUFFER IS ALL FREE            */ 01928000
         L     @10,BUFCBAD(,RBUFC)                                 0786 01929000
         ST    @10,PLHFSP(,RPLH)                                   0786 01930000
*           PLHRECP=BUFCBAD;        /* NO RECORDS IN BUFFER          */ 01931000
         ST    @10,PLHRECP(,RPLH)                                  0787 01932000
*           PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* NO RDFS       */ 01933000
         L     @05,AMBDSB(,RAMB)                                   0788 01934000
         AL    @10,AMDCINV(,@05)                                   0788 01935000
         SL    @10,@CF00036                                        0788 01936000
         ST    @10,PLHRDFP(,RPLH)                                  0788 01937000
*I32:                                                              0789 01938000
*           DO;                     /* IDACALL(IDA019RM)             */ 01939000
I32      DS    0H                                                  0790 01940000
*             CALL IDA019RM;        /* EXIT TO IDA019RM              */ 01941000
         L     @15,@CV01115                                        0790 01942000
         BALR  @14,@15                                             0790 01943000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01944000
         BALR @11,0                                                     01945000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01946000
         USING *,@11                                                    01947000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01948000
         L     @11,=A(@PSTART)                                          01949000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01950000
         USING @PSTART,@11                                              01951000
*           END I32;                /* CALL DATA INSERT              */ 01952000
*           RPARM1=ONE;             /* INDICATE TO RE, SPLIT OR    0796 01953000
*                                      INSERT NOT REQUIRED.  @X04SVRQ*/ 01954000
         LA    RPARM1,1                                            0796 01955000
*         END;                      /* END OF NO ERROR/A.T.E.        */ 01956000
*       ELSE                        /* ERROR ATE             @ZA25653*/ 01957000
*         DO;                       /*                       @ZA25653*/ 01958000
         B     @RC00758                                            0798 01959000
@RF00758 DS    0H                                                  0799 01960000
*           DIWSHIFT=OFF;           /* DROP SHIFT            @ZA25653*/ 01961000
         L     @10,AMBIWA(,RAMB)                                   0799 01962000
         NI    DIWSHIFT(@10),B'11111011'                           0799 01963000
*           RPARM1=ZERO;            /* INSERT NOT DONE       @ZA25653*/ 01964000
         SLR   RPARM1,RPARM1                                       0800 01965000
*         END;                      /*                       @ZA25653*/ 01966000
*     END;                          /* END OF ADD-TO-END INS.        */ 01967000
*/*  IF NOT ADD-TO-END, THROW AWAY READ-AHEAD BUFFERS AND RESET THE     01968000
*    INSERT POINTERS FOR CONTROL INTERVAL SPLIT.                     */ 01969000
*                                                                  0803 01970000
*   ELSE                            /* HERE FOR NON ADD TO END       */ 01971000
*     DO;                           /* TO RESET THE INSERT PT        */ 01972000
*                                                                  0803 01973000
         B     @RC00756                                            0803 01974000
@RF00756 DS    0H                                                  0804 01975000
*       /*************************************************************/ 01976000
*       /*                                                           */ 01977000
*       /* AVOID RETENTION OF INSERT BUFC                            */ 01978000
*       /*                                                           */ 01979000
*       /*************************************************************/ 01980000
*                                                                  0804 01981000
*       IF AMBGSR=OFF&AMBLSR=OFF THEN/* NOT SHR RESOURCE     @X04SVRQ*/ 01982000
         TM    AMBGSR(RAMB),B'01100000'                            0804 01983000
         BNZ   @RF00804                                            0804 01984000
*         DO;                                                      0805 01985000
*           RAMB=AMBLDTA;           /* RELOAD AMB POINTER    @ZA10869*/ 01986000
         L     @10,RPLDACB(,RRPL)                                  0806 01987000
         L     @10,ACBAMBL(,@10)                                   0806 01988000
         L     RAMB,AMBLDTA(,@10)                                  0806 01989000
*           RBUFC=BUFDBUFC;         /* POINT TO INS BFR      @X04SVRQ*/ 01990000
         L     @10,AMBBUFC(,RAMB)                                  0807 01991000
         L     RBUFC,BUFDBUFC(,@10)                                0807 01992000
*I33:                                                              0808 01993000
*           DO;                     /* IDACALL(IDASBF)               */ 01994000
I33      DS    0H                                                  0809 01995000
*             CALL IDASBF;          /* EXIT TO IDASBF                */ 01996000
         L     @15,@CV01108                                        0809 01997000
         BALR  @14,@15                                             0809 01998000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01999000
         BALR @11,0                                                     02000000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 02001000
         USING *,@11                                                    02002000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 02003000
         L     @11,=A(@PSTART)                                          02004000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 02005000
         USING @PSTART,@11                                              02006000
*           END I33;                /* REMOVE FROM CHAIN             */ 02007000
*/* REMOVE ALL BUT ONE BUFFER FROM THE PLACEHOLDER                   */ 02008000
*                                                                  0815 02009000
*           IF RPLERREG='00'X THEN  /* IF NO ERRORS,                 */ 02010000
         CLI   RPLERREG(RRPL),0                                    0815 02011000
         BNE   @RF00815                                            0815 02012000
*             DO;                   /* SUBTRACT EXCESS BUFFERS       */ 02013000
*               RBUFC=ZERO;         /* SET SUBTRACT ALL              */ 02014000
         SLR   RBUFC,RBUFC                                         0817 02015000
*I34:                                                              0818 02016000
*               DO;                 /* IDACALL(IDASBF)               */ 02017000
I34      DS    0H                                                  0819 02018000
*                 CALL IDASBF;      /* EXIT TO IDASBF                */ 02019000
         L     @15,@CV01108                                        0819 02020000
         BALR  @14,@15                                             0819 02021000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 02022000
         BALR @11,0                                                     02023000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 02024000
         USING *,@11                                                    02025000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 02026000
         L     @11,=A(@PSTART)                                          02027000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 02028000
         USING @PSTART,@11                                              02029000
*               END I34;            /* SUBTRACT A BUFFER             */ 02030000
*               PLHASKBF=ON;        /* ADD BUFFER LATER      @X04SVMR*/ 02031000
         OI    PLHASKBF(RPLH),B'00100000'                          0825 02032000
*             END;                  /* END OF BUFFER SUBTRACT        */ 02033000
*         END;                      /* END NON-DB/DC         @X04SVMR*/ 02034000
@RF00815 DS    0H                                                  0828 02035000
*/* CONVERT THE INSERT POINTERS BACK TO ADDRESSES RATHER THAN OFFSETS*/ 02036000
*                                                                  0828 02037000
*       RPARM1=DIWINRBA;            /* PT TO IP RBA          @ZA25653*/ 02038000
@RF00804 L     @10,AMBIWA(,RAMB)                                   0828 02039000
         L     RPARM1,DIWINRBA(,@10)                               0828 02040000
*I35:                                                              0829 02041000
*       DO;                         /* IDACALL(IDAGRB)               */ 02042000
I35      DS    0H                                                  0830 02043000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 02044000
         L     @15,@CV01107                                        0830 02045000
         BALR  @14,@15                                             0830 02046000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02047000
         BALR @11,0                                                     02048000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02049000
         USING *,@11                                                    02050000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02051000
         L     @11,=A(@PSTART)                                          02052000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02053000
         USING @PSTART,@11                                              02054000
*       END I35;                    /* READ IN IP CINV               */ 02055000
*       DIWSHIFT=OFF;               /* SHIFT IS THRU         @OX02678*/ 02056000
         L     @10,AMBIWA(,RAMB)                                   0836 02057000
         NI    DIWSHIFT(@10),B'11111011'                           0836 02058000
*       BUFCORBA=BUFCDDDD;          /* CORRECT OUTPUT RBA            */ 02059000
         L     @10,BUFCDDDD(,RBUFC)                                0837 02060000
         ST    @10,BUFCORBA(,RBUFC)                                0837 02061000
*       PLHRDFP=PLHRDFP+BUFCBAD;    /* CONVERT OFFSETS BACK          */ 02062000
         L     @10,BUFCBAD(,RBUFC)                                 0838 02063000
         L     @05,PLHRDFP(,RPLH)                                  0838 02064000
         ALR   @05,@10                                             0838 02065000
         ST    @05,PLHRDFP(,RPLH)                                  0838 02066000
*       PLHRECP=PLHRECP+BUFCBAD;    /* TO ADDRESSES.                 */ 02067000
         L     @05,PLHRECP(,RPLH)                                  0839 02068000
         ALR   @05,@10                                             0839 02069000
         ST    @05,PLHRECP(,RPLH)                                  0839 02070000
*       PLHFSP=PLHFSP+BUFCBAD;      /*                               */ 02071000
         AL    @10,PLHFSP(,RPLH)                                   0840 02072000
         ST    @10,PLHFSP(,RPLH)                                   0840 02073000
*       RPARM1=ZERO;                /* INDICATE TO RE, INSERT NOT  0841 02074000
*                                      DONE.                 @X04SVRQ*/ 02075000
         SLR   RPARM1,RPARM1                                       0841 02076000
*     END;                          /* END OF INSERT PT RESET        */ 02077000
*RFEXITA1:                                                         0843 02078000
*   ;                               /* EXIT LABEL FOR EXCL ERROR.  0843 02079000
*                                                            @ZB02289*/ 02080000
@RC00756 DS    0H                                                  0843 02081000
RFEXITA1 DS    0H                                                  0844 02082000
*   DIWCAS=OFF;                     /* CA SPLIT FINISHED     @X04SVRQ*/ 02083000
         L     @10,AMBIWA(,RAMB)                                   0844 02084000
         NI    DIWCAS(@10),B'01111111'                             0844 02085000
*RFEXIT:                                                           0845 02086000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE    @ZA29388*/ 02087000
RFEXIT   L     @10,AMBTRACE(,RAMB)                                 0845 02088000
         LTR   @10,@10                                             0845 02089000
         BZ    @RF00845                                            0845 02090000
*     DO;                           /*                       @ZA29388*/ 02091000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 02092000
         L     @15,@CV01134                                        0847 02093000
         BALR  @14,@15                                             0847 02094000
*       GEN(DC X'000A');            /* TRACE ID              @ZA29388*/ 02095000
         DC X'000A'                                                     02096000
*     END;                          /*                       @ZA29388*/ 02097000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 02098000
@RF00845 DS    0H                                                  0850 02099000
         IDARST14                                                       02100000
*   RETURN;                         /* EXIT FROM CA SPLIT            */ 02101000
@EL00001 DS    0H                                                  0851 02102000
@EF00001 DS    0H                                                  0851 02103000
@ER00001 BR    @14                                                 0851 02104000
*   GEN;                                                           0852 02105000
ICMINS   ICM   RPARM1,@00,IBFLP3(RWORK1)   GET 1, 2, OR 3 BYTE RBA      02106000
ICMINS2  ICM   RPARM1,@00,@00(RWORK1)   GET RBA(FREE SPACE)             02107000
*                                                                  0853 02108000
*/* FUNCTION - INCREMENT ONE INDEX ENTRY                             */ 02109000
*/* INPUT -- RWORK1 = A(LAST ENTRY), RWORK2 = A(NEXT SECTION ENTRY)  */ 02110000
*/* OUTPUT -- RWORK1 = A(NEXT ENTRY), RWORK2 = A(NEXT SECTION ENTRY),*/ 02111000
*/*           AND RWORK3 = L OF LAST ENTRY.                          */ 02112000
*                                                                  0853 02113000
*IXINCR:                                                           0853 02114000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* INDEX INCREMENT               */ 02115000
         B     @PB00002                                            0853 02116000
IXINCR   DS    0H                                                  0854 02117000
*   RFY                                                            0854 02118000
*     R14 RSTD;                     /* SAVE RETURN REGISTER          */ 02119000
*   RFY                                                            0855 02120000
*    (RWORK1,                                                      0855 02121000
*     RWORK2,                                                      0855 02122000
*     RWORK3) RSTD;                 /* GET WORK REGISTERS            */ 02123000
*   RWORK3=RWORK1->IBFLPL;          /* GET L BYTE INTO REG           */ 02124000
         SLR   RWORK3,RWORK3                                       0856 02125000
         IC    RWORK3,IBFLPL(,RWORK1)                              0856 02126000
*   IF RWORK1^=RWORK2 THEN          /* IF NOT SECTION ENTRY,         */ 02127000
         CLR   RWORK1,RWORK2                                       0857 02128000
         BE    @RF00857                                            0857 02129000
*     RWORK1=RWORK1-IXHFLPLN-RWORK3;/* NORMAL INCREMENT              */ 02130000
         L     @15,BUFCBAD(,RBUFC)                                 0858 02131000
         LR    @10,RWORK1                                          0858 02132000
         SLR   @00,@00                                             0858 02133000
         IC    @00,IXHFLPLN(,@15)                                  0858 02134000
         SLR   @10,@00                                             0858 02135000
         SLR   @10,RWORK3                                          0858 02136000
         LR    RWORK1,@10                                          0858 02137000
*   ELSE                            /* IF SECTION ENTRY, LL          */ 02138000
*     DO;                           /* MUST BE INCLUDED.             */ 02139000
         B     @RC00857                                            0859 02140000
@RF00857 DS    0H                                                  0860 02141000
*       RWORK1=RWORK1-IXHFLPLN-RWORK3/* GOING TO NEXT ENTRY          */ 02142000
*           -LENGTH(IXSELL);        /* REQUIRES LL INCLUSION         */ 02143000
         L     @15,BUFCBAD(,RBUFC)                                 0860 02144000
         SLR   @10,@10                                             0860 02145000
         IC    @10,IXHFLPLN(,@15)                                  0860 02146000
         LR    @15,RWORK1                                          0860 02147000
         SLR   @15,@10                                             0860 02148000
         SLR   @15,RWORK3                                          0860 02149000
         BCTR  @15,0                                               0860 02150000
         BCTR  @15,0                                               0860 02151000
         LR    RWORK1,@15                                          0860 02152000
*       RWORK3=RWORK1+IXHFLPLN;     /* POINT TO LL FIELD             */ 02153000
         ALR   @10,RWORK1                                          0861 02154000
         LR    RWORK3,@10                                          0861 02155000
*       RWORK2=RWORK2-RWORK3->IXSELL;/* ADJUST SECT ENTRY PTR        */ 02156000
         SLR   @15,@15                                             0862 02157000
         ICM   @15,3,IXSELL(RWORK3)                                0862 02158000
         SLR   RWORK2,@15                                          0862 02159000
*       IXSLEP=RWORK1;              /* NEW LOW ENTRY PTR             */ 02160000
         ST    RWORK1,IXSLEP+200(,RPLH)                            0863 02161000
*     END;                          /* END OF CROSSING SECT.         */ 02162000
*   RETURN;                         /* RETURN TO CALLER              */ 02163000
@EL00002 DS    0H                                                  0865 02164000
@EF00002 DS    0H                                                  0865 02165000
@ER00002 BR    @14                                                 0865 02166000
*   RFY                                                            0866 02167000
*     R14 UNRSTD;                   /* RELEASE REG.          @X04SVRQ*/ 02168000
*   END IXINCR;                     /* END OF INDEX INCREMENT        */ 02169000
         B     @EL00002                                            0867 02170000
*                                                                  0868 02171000
*   /*****************************************************************/ 02172000
*   /*                                                               */ 02173000
*   /* BUFFER FREE SPACE --- INPUT - RBUFC. SETS BUFFER TO FREE      */ 02174000
*   /* SPACE.                                                @X04SVRQ*/ 02175000
*   /*                                                               */ 02176000
*   /*****************************************************************/ 02177000
*                                                                  0868 02178000
*BFRFS:                                                            0868 02179000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVRQ*/ 02180000
BFRFS    DS    0H                                                  0869 02181000
*   RFY                                                            0869 02182000
*     R14 RSTD;                     /* SAVE RETURN REG.      @X04SVRQ*/ 02183000
*   RFY                                                            0870 02184000
*    (RWORK2,                                                      0870 02185000
*     RWORK3,                                                      0870 02186000
*     RWORK5) RSTD;                 /* GET WORK REGS.        @X04SVRQ*/ 02187000
*   RWORK2=BUFCBAD;                 /* TO ADDRESS.           @X04SVRQ*/ 02188000
         L     RWORK2,BUFCBAD(,RBUFC)                              0871 02189000
*   RWORK3=AMDCINV;                 /* TO LENGTH.            @X04SVRQ*/ 02190000
         L     @15,AMBDSB(,RAMB)                                   0872 02191000
         L     RWORK3,AMDCINV(,@15)                                0872 02192000
*   RWORK5=ZERO;                    /* PAD CHAR.             @X04SVRQ*/ 02193000
         SLR   RWORK5,RWORK5                                       0873 02194000
*   GEN(MVCL RWORK2,RWORK4);        /* ZERO BUFFER.          @X04SVRQ*/ 02195000
         MVCL RWORK2,RWORK4                                             02196000
*   RWORK3=AMDCINV-LENGTH(IDACIDF); /* GET FS COUNT.         @X04SVRQ*/ 02197000
         L     @15,AMBDSB(,RAMB)                                   0875 02198000
         L     RWORK3,AMDCINV(,@15)                                0875 02199000
         SL    RWORK3,@CF00036                                     0875 02200000
*   RWORK5=BUFCBAD+RWORK3;          /* POINT TO CIDF.        @X04SVRQ*/ 02201000
         LR    RWORK5,RWORK3                                       0876 02202000
         AL    RWORK5,BUFCBAD(,RBUFC)                              0876 02203000
*   RWORK5->CIDFLL=RWORK3;          /* SET CIDF FS LENGTH.   @X04SVRQ*/ 02204000
         STH   RWORK3,CIDFLL(,RWORK5)                              0877 02205000
*   RFY                                                            0878 02206000
*    (RWORK2,                                                      0878 02207000
*     RWORK3,                                                      0878 02208000
*     RWORK5) UNRSTD;               /* FREE WORK REGS.       @X04SVRQ*/ 02209000
*   RETURN;                         /* RETURN TO CALLER.     @X04SVRQ*/ 02210000
@EL00003 DS    0H                                                  0879 02211000
@EF00003 DS    0H                                                  0879 02212000
@ER00003 BR    @14                                                 0879 02213000
*   RFY                                                            0880 02214000
*     R14 UNRSTD;                   /* FREE RETURN REG.      @X04SVRQ*/ 02215000
*   END BFRFS;                      /* END PROC. BFRFS.      @X04SVRQ*/ 02216000
@PB00003 DS    0H                                                  0882 02217000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA             */ 02218000
         IDAPATCH                                                       02219000
*   END IDA019RF                    /* END OF CA SPLIT               */ 02220000
*                                                                  0883 02221000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02222000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02223000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02224000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02225000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02226000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02227000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02228000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02229000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02230000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02231000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02232000
*/*%INCLUDE SYSLIB  (IDABSPH )                                       */ 02233000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02234000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02235000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02236000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 02237000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 02238000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02239000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02240000
*                                                                  0883 02241000
*       ;                                                          0883 02242000
         B     @EL00001                                            0883 02243000
@DATA    DS    0H                                                       02244000
@DATD    DSECT                                                          02245000
         DS    0F                                                       02246000
IDA019RF CSECT                                                          02247000
         DS    0F                                                       02248000
@CF00047 DC    F'1'                                                     02249000
@CF00036 DC    F'4'                                                     02250000
@CF00170 DC    F'7'                                                     02251000
@CF00052 DC    F'24'                                                    02252000
@CF01239 DC    XL4'0000FFFF'                                            02253000
@DATD    DSECT                                                          02254000
         DS    0D                                                       02255000
IDA019RF CSECT                                                          02256000
         DS    0F                                                       02257000
@SIZDATD DC    AL1(0)                                                   02258000
         DC    AL3(@ENDDATD-@DATD)                                      02259000
@CV01103 DC    V(IDAABF)                                                02260000
@CV01104 DC    V(IDAEOVIF)                                              02261000
@CV01105 DC    V(IDAGNNFL)                                              02262000
@CV01106 DC    V(IDAGNXT)                                               02263000
@CV01107 DC    V(IDAGRB)                                                02264000
@CV01108 DC    V(IDASBF)                                                02265000
@CV01109 DC    V(IDATJXIT)                                              02266000
@CV01110 DC    V(IDA019SF)                                              02267000
@CV01111 DC    V(IDAWRBFR)                                              02268000
@CV01112 DC    V(IDAAIBF)                                               02269000
@CV01113 DC    V(IDA019RI)                                              02270000
@CV01114 DC    V(IDA019RK)                                              02271000
@CV01115 DC    V(IDA019RM)                                              02272000
@CV01116 DC    V(IDAFREEB)                                              02273000
@CV01134 DC    V(IDA019ST)                                              02274000
         DS    0D                                                       02275000
HWORD4   DC    H'4'                                                     02276000
@DATD    DSECT                                                          02277000
*                                                          /*@X04SVLC*/ 02278000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02279000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02280000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02281000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02282000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02283000
RDFLEN   EQU   3                        LENGTH OF RDF                   02284000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02285000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02286000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02287000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02288000
@DATD    DSECT                                                          02289000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02290000
@ENDDATD EQU   *                                                        02291000
IDA019RF CSECT                                                          02292000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02293000
@01      EQU   01                                                       02294000
@02      EQU   02                                                       02295000
@03      EQU   03                                                       02296000
@04      EQU   04                                                       02297000
@05      EQU   05                                                       02298000
@06      EQU   06                                                       02299000
@07      EQU   07                                                       02300000
@08      EQU   08                                                       02301000
@09      EQU   09                                                       02302000
@10      EQU   10                                                       02303000
@11      EQU   11                                                       02304000
@12      EQU   12                                                       02305000
@13      EQU   13                                                       02306000
@14      EQU   14                                                       02307000
@15      EQU   15                                                       02308000
RRPL     EQU   @01                                                      02309000
RPLH     EQU   @02                                                      02310000
RAMB     EQU   @03                                                      02311000
RBUFC    EQU   @04                                                      02312000
RWORK1   EQU   @05                                                      02313000
RWORK2   EQU   @06                                                      02314000
RWORK3   EQU   @07                                                      02315000
RWORK4   EQU   @08                                                      02316000
RWORK5   EQU   @09                                                      02317000
RPARM1   EQU   @12                                                      02318000
R14      EQU   @14                                                      02319000
R15      EQU   @15                                                      02320000
RWORK4A  EQU   @08                                                      02321000
RWORK0   EQU   @00                                                      02322000
R1       EQU   @01                                                      02323000
R10      EQU   @10                                                      02324000
R11      EQU   @11                                                      02325000
R13      EQU   @13                                                      02326000
IFGRPL   EQU   0                                                        02327000
RPLCOMN  EQU   IFGRPL                                                   02328000
RPLIDWD  EQU   RPLCOMN                                                  02329000
RPLLEN   EQU   RPLIDWD+3                                                02330000
RPLECB   EQU   RPLCOMN+8                                                02331000
RPLFDBWD EQU   RPLCOMN+12                                               02332000
RPLFDBK  EQU   RPLFDBWD+1                                               02333000
RPLRTNCD EQU   RPLFDBK                                                  02334000
RPLERREG EQU   RPLRTNCD                                                 02335000
RPLCNDCD EQU   RPLFDBK+1                                                02336000
RPLCMPON EQU   RPLCNDCD                                                 02337000
RPLFDB2  EQU   RPLCMPON                                                 02338000
RPLERRCD EQU   RPLCNDCD+1                                               02339000
RPLFDB3  EQU   RPLERRCD                                                 02340000
RPLKEYLE EQU   RPLCOMN+16                                               02341000
RPLDACB  EQU   RPLCOMN+24                                               02342000
RPLARG   EQU   RPLCOMN+36                                               02343000
RPLOPTCD EQU   RPLCOMN+40                                               02344000
RPLOPT1  EQU   RPLOPTCD                                                 02345000
RPLSEQ   EQU   RPLOPT1                                                  02346000
RPLECBSW EQU   RPLOPT1                                                  02347000
RPLOPT2  EQU   RPLOPTCD+1                                               02348000
RPLADR   EQU   RPLOPT2                                                  02349000
RPLBWD   EQU   RPLOPT2                                                  02350000
RPLOPT3  EQU   RPLOPTCD+2                                               02351000
RPLNXTRP EQU   RPLCOMN+44                                               02352000
RPLRLEN  EQU   RPLCOMN+48                                               02353000
RPLOPTC2 EQU   RPLCOMN+56                                               02354000
RPLOPT5  EQU   RPLOPTC2                                                 02355000
RPLWRTYP EQU   RPLOPT5                                                  02356000
RPLOPT6  EQU   RPLOPTC2+1                                               02357000
RPLUNTYP EQU   RPLOPT6                                                  02358000
RPLOPT7  EQU   RPLOPTC2+2                                               02359000
RPLCNOPT EQU   RPLOPT7                                                  02360000
RPLOPT8  EQU   RPLOPTC2+3                                               02361000
RPLRBAR  EQU   RPLCOMN+60                                               02362000
RPLAIXID EQU   RPLRBAR+2                                                02363000
RPLDDDD  EQU   RPLRBAR+4                                                02364000
RPLEXTDS EQU   RPLCOMN+68                                               02365000
RPLEXTD1 EQU   RPLEXTDS                                                 02366000
IDAAMB   EQU   0                                                        02367000
AMBBUFC  EQU   IDAAMB+8                                                 02368000
AMBDSB   EQU   IDAAMB+20                                                02369000
AMBEOVR  EQU   IDAAMB+24                                                02370000
AMBFLG0  EQU   AMBEOVR                                                  02371000
AMBFLG1  EQU   IDAAMB+25                                                02372000
AMBJRN   EQU   AMBFLG1                                                  02373000
AMBINBUF EQU   AMBFLG1                                                  02374000
AMBDSORG EQU   IDAAMB+26                                                02375000
AMBIOBAD EQU   IDAAMB+28                                                02376000
AMBINFL  EQU   IDAAMB+42                                                02377000
AMBCAT   EQU   AMBINFL                                                  02378000
AMBSCRA  EQU   AMBINFL                                                  02379000
AMBUCRA  EQU   AMBINFL                                                  02380000
AMBDEBPT EQU   IDAAMB+44                                                02381000
AMBOFLGS EQU   IDAAMB+48                                                02382000
AMBFLG2  EQU   IDAAMB+49                                                02383000
AMBEOVPT EQU   IDAAMB+56                                                02384000
AMBIWA   EQU   IDAAMB+64                                                02385000
AMBCSWD1 EQU   IDAAMB+84                                                02386000
AMBAFLG  EQU   AMBCSWD1                                                 02387000
AMBLSR   EQU   AMBAFLG                                                  02388000
AMBGSR   EQU   AMBAFLG                                                  02389000
AMBSIS   EQU   AMBAFLG                                                  02390000
AMBTRACE EQU   IDAAMB+120                                               02391000
IDAAMBL  EQU   0                                                        02392000
AMBLEOV  EQU   IDAAMBL+12                                               02393000
AMBLEFLG EQU   AMBLEOV                                                  02394000
AMBLDDNM EQU   IDAAMBL+16                                               02395000
AMBLIDF  EQU   AMBLDDNM                                                 02396000
AMBLQ    EQU   AMBLIDF+7                                                02397000
AMBLVC   EQU   IDAAMBL+28                                               02398000
AMBLTYPE EQU   IDAAMBL+30                                               02399000
AMBLSHAR EQU   IDAAMBL+33                                               02400000
AMBLFLG1 EQU   IDAAMBL+35                                               02401000
AMBLFLG2 EQU   IDAAMBL+36                                               02402000
AMBLDTA  EQU   IDAAMBL+52                                               02403000
AMBLIX   EQU   IDAAMBL+56                                               02404000
IFGACB   EQU   0                                                        02405000
ACBCOMN  EQU   IFGACB                                                   02406000
ACBLENG  EQU   ACBCOMN+2                                                02407000
ACBLENG2 EQU   ACBLENG                                                  02408000
ACBAMBL  EQU   ACBCOMN+4                                                02409000
ACBJWA   EQU   ACBAMBL                                                  02410000
ACBMACRF EQU   ACBCOMN+12                                               02411000
ACBMACR1 EQU   ACBMACRF                                                 02412000
ACBADR   EQU   ACBMACR1                                                 02413000
ACBCNV   EQU   ACBMACR1                                                 02414000
ACBMACR2 EQU   ACBMACRF+1                                               02415000
ACBBUFPL EQU   ACBCOMN+20                                               02416000
ACBMACR3 EQU   ACBBUFPL                                                 02417000
ACBRECFM EQU   ACBCOMN+24                                               02418000
ACBCCTYP EQU   ACBCOMN+25                                               02419000
ACBOPT   EQU   ACBCOMN+26                                               02420000
ACBDSORG EQU   ACBOPT                                                   02421000
ACBCROPS EQU   ACBDSORG                                                 02422000
ACBEXLST EQU   ACBCOMN+36                                               02423000
ACBDDNM  EQU   ACBCOMN+40                                               02424000
ACBAMETH EQU   ACBDDNM+3                                                02425000
ACBOFLGS EQU   ACBCOMN+48                                               02426000
ACBEXFG  EQU   ACBOFLGS                                                 02427000
ACBIOSFG EQU   ACBOFLGS                                                 02428000
ACBINFLG EQU   ACBCOMN+50                                               02429000
ACBUJFCB EQU   ACBCOMN+52                                               02430000
ACBBLKSZ EQU   ACBCOMN+60                                               02431000
IDADIWA  EQU   0                                                        02432000
DIWFLG1  EQU   IDADIWA+4                                                02433000
DIWCAS   EQU   DIWFLG1                                                  02434000
DIWSHIFT EQU   DIWFLG1                                                  02435000
DIWFLG2  EQU   IDADIWA+5                                                02436000
DIWLRBA  EQU   IDADIWA+8                                                02437000
DIWHRBA  EQU   IDADIWA+12                                               02438000
DIWSAVE  EQU   IDADIWA+28                                               02439000
DIWSAVE1 EQU   DIWSAVE                                                  02440000
DIWSAVE2 EQU   DIWSAVE+4                                                02441000
DIWSAVE3 EQU   DIWSAVE+8                                                02442000
DIWSAVE4 EQU   DIWSAVE+12                                               02443000
DIWINRBA EQU   IDADIWA+52                                               02444000
IDAPLHDR EQU   0                                                        02445000
IDAPLH   EQU   0                                                        02446000
PLHFLG1  EQU   IDAPLH+2                                                 02447000
PLHASKBF EQU   PLHFLG1                                                  02448000
PLHSSR   EQU   PLHFLG1                                                  02449000
PLHFLG2  EQU   IDAPLH+3                                                 02450000
PLHADDTE EQU   PLHFLG2                                                  02451000
PLHEFLGS EQU   IDAPLH+4                                                 02452000
PLHFLG3  EQU   IDAPLH+6                                                 02453000
PLHRAHD  EQU   PLHFLG3                                                  02454000
PLHAFLGS EQU   IDAPLH+7                                                 02455000
PLHCRBA  EQU   IDAPLH+28                                                02456000
PLHJORBA EQU   PLHCRBA                                                  02457000
PLHJRNLL EQU   IDAPLH+32                                                02458000
PLHJNRBA EQU   IDAPLH+36                                                02459000
PLHJCODE EQU   IDAPLH+40                                                02460000
PLHEOVR  EQU   IDAPLH+42                                                02461000
PLHRSCS  EQU   IDAPLH+43                                                02462000
PLHARDB  EQU   IDAPLH+44                                                02463000
PLHDBUFC EQU   IDAPLH+52                                                02464000
PLHRECP  EQU   IDAPLH+60                                                02465000
PLHFSP   EQU   IDAPLH+64                                                02466000
PLHRDFP  EQU   IDAPLH+68                                                02467000
PLHDIOB  EQU   IDAPLH+76                                                02468000
PLHSAVE1 EQU   IDAPLH+84                                                02469000
PLHSAVE2 EQU   IDAPLH+88                                                02470000
PLHSAVE3 EQU   IDAPLH+92                                                02471000
PLHSAVE4 EQU   IDAPLH+96                                                02472000
PLHSAVE5 EQU   IDAPLH+100                                               02473000
PLHSAVE6 EQU   IDAPLH+104                                               02474000
PLHRETO  EQU   IDAPLH+116                                               02475000
PLHRET1  EQU   IDAPLH+120                                               02476000
PLHEOVPT EQU   IDAPLH+180                                               02477000
PLHIBUFC EQU   IDAPLH+188                                               02478000
PLHIXSPL EQU   IDAPLH+200                                               02479000
PLHSSRBA EQU   PLHIXSPL                                                 02480000
PLHWAX   EQU   IDAPLH+232                                               02481000
PLHKEYPT EQU   IDAPLH+248                                               02482000
PLHTMRPL EQU   IDAPLH+265                                               02483000
PLHEND   EQU   IDAPLH+280                                               02484000
IDAAMDSB EQU   0                                                        02485000
AMDATTR  EQU   IDAAMDSB+1                                               02486000
AMDNEST  EQU   IDAAMDSB+4                                               02487000
AMDKEYLN EQU   IDAAMDSB+8                                               02488000
AMDCIPCA EQU   IDAAMDSB+12                                              02489000
AMDCINV  EQU   IDAAMDSB+20                                              02490000
AMDHLRBA EQU   IDAAMDSB+28                                              02491000
AMDSSRBA EQU   IDAAMDSB+32                                              02492000
AMDATTR3 EQU   IDAAMDSB+40                                              02493000
AMDSTAT  EQU   IDAAMDSB+48                                              02494000
AMDNCAS  EQU   AMDSTAT+40                                               02495000
IDABUFDR EQU   0                                                        02496000
BUFDRCIX EQU   IDABUFDR+9                                               02497000
BUFDRFLG EQU   IDABUFDR+11                                              02498000
BUFDBUFC EQU   IDABUFDR+12                                              02499000
IDABUFC  EQU   0                                                        02500000
BUFCAVL  EQU   IDABUFC                                                  02501000
BUFCFLG1 EQU   IDABUFC+1                                                02502000
BUFCER2  EQU   BUFCFLG1                                                 02503000
BUFCVAL  EQU   BUFCFLG1                                                 02504000
BUFCEXC  EQU   BUFCFLG1                                                 02505000
BUFCIOFL EQU   IDABUFC+2                                                02506000
BUFCMW   EQU   BUFCIOFL                                                 02507000
BUFCFLG2 EQU   IDABUFC+3                                                02508000
BUFCPLH  EQU   IDABUFC+4                                                02509000
BUFCAMB  EQU   BUFCPLH                                                  02510000
BUFCDDDD EQU   IDABUFC+8                                                02511000
BUFCORBA EQU   IDABUFC+12                                               02512000
BUFCBAD  EQU   IDABUFC+20                                               02513000
BUFCINV  EQU   IDABUFC+28                                               02514000
BUFXIRBA EQU   IDABUFC+40                                               02515000
BUFXORBA EQU   IDABUFC+44                                               02516000
BUFCHAIN EQU   IDABUFC+48                                               02517000
IDABSPH  EQU   0                                                        02518000
BSPHFLG1 EQU   IDABSPH+1                                                02519000
BSPHBUFC EQU   IDABSPH+16                                               02520000
BSPHCSRC EQU   IDABSPH+28                                               02521000
BSPHFLG2 EQU   BSPHCSRC                                                 02522000
IDAARDB  EQU   0                                                        02523000
ARDTYPE  EQU   IDAARDB+1                                                02524000
ARDHKRBA EQU   IDAARDB+8                                                02525000
ARDHRBA  EQU   IDAARDB+12                                               02526000
ARDERBA  EQU   IDAARDB+16                                               02527000
ARDPRF   EQU   IDAARDB+28                                               02528000
IDAIXH   EQU   0                                                        02529000
IXHLL    EQU   IDAIXH                                                   02530000
IXHFLPLN EQU   IDAIXH+2                                                 02531000
IXHPTLS  EQU   IDAIXH+3                                                 02532000
IXHBRBA  EQU   IDAIXH+4                                                 02533000
IXHHP    EQU   IDAIXH+8                                                 02534000
IXHFSO   EQU   IDAIXH+18                                                02535000
IXHLEO   EQU   IDAIXH+20                                                02536000
IXHSEO   EQU   IDAIXH+22                                                02537000
IDAIBFLP EQU   0                                                        02538000
IBFLPF   EQU   IDAIBFLP                                                 02539000
IBFLPL   EQU   IDAIBFLP+1                                               02540000
IBFLP3   EQU   IDAIBFLP+2                                               02541000
IBFLP2   EQU   IBFLP3                                                   02542000
IDASELL  EQU   0                                                        02543000
IXSELL   EQU   IDASELL                                                  02544000
IDAIXK   EQU   0                                                        02545000
IDAIXSPL EQU   0                                                        02546000
IXSILN   EQU   IDAIXSPL+13                                              02547000
IXSBFLG  EQU   IDAIXSPL+17                                              02548000
IXSHEP   EQU   IDAIXSPL+20                                              02549000
IXSSEP   EQU   IDAIXSPL+24                                              02550000
IXSLEP   EQU   IDAIXSPL+28                                              02551000
IDAICWA  EQU   0                                                        02552000
ICWFLG1  EQU   IDAICWA+1                                                02553000
ICWCHN   EQU   IDAICWA+4                                                02554000
ICWTBASE EQU   IDAICWA+28                                               02555000
ICWTPTR  EQU   IDAICWA+32                                               02556000
IDAIMWA  EQU   0                                                        02557000
IMWFLAGS EQU   IDAIMWA+1                                                02558000
IDACIDF  EQU   0                                                        02559000
CIDFLL   EQU   IDACIDF+2                                                02560000
IDARDF   EQU   0                                                        02561000
RDFRBYTE EQU   IDARDF                                                   02562000
RDFSEG   EQU   RDFRBYTE                                                 02563000
RDFNOT1  EQU   RDFSEG                                                   02564000
IDADATA  EQU   0                                                        02565000
IDAKEY   EQU   0                                                        02566000
ICWKEY2  EQU   0                                                        02567000
ICWKEY3  EQU   0                                                        02568000
PLHKEY   EQU   0                                                        02569000
PLHPDL   EQU   0                                                        02570000
PLHPDLE  EQU   0                                                        02571000
PLHRRN   EQU   0                                                        02572000
PLHEXTEN EQU   PLHEND                                                   02573000
PLHBMWRK EQU   PLHEXTEN+5                                               02574000
DIWIHX   EQU   DIWSAVE2                                                 02575000
DIWHPTLS EQU   DIWIHX                                                   02576000
DIWFLPLN EQU   DIWIHX+1                                                 02577000
CASRPRM1 EQU   PLHSAVE1                                                 02578000
CASCURSS EQU   PLHSAVE2                                                 02579000
CASPRVSS EQU   PLHSAVE3                                                 02580000
CASSEGCT EQU   PLHSAVE4                                                 02581000
CASDIFF  EQU   PLHSAVE5                                                 02582000
CASSW    EQU   PLHSAVE6                                                 02583000
CAS1ST   EQU   CASSW                                                    02584000
CASIPSW  EQU   CASSW                                                    02585000
BUFCRSC1 EQU   BUFCAVL                                                  02586000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02587000
PLHBMSV5 EQU   PLHEXTEN+24                                              02588000
PLHBMSV4 EQU   PLHEXTEN+20                                              02589000
PLHBMSV3 EQU   PLHEXTEN+16                                              02590000
PLHBMSV2 EQU   PLHEXTEN+12                                              02591000
PLHBMSV1 EQU   PLHEXTEN+8                                               02592000
PLHRDCNT EQU   PLHEXTEN+6                                               02593000
PLHBMSOV EQU   PLHBMWRK                                                 02594000
PLHBEUC  EQU   PLHBMWRK                                                 02595000
PLHBMRDF EQU   PLHBMWRK                                                 02596000
@NM00053 EQU   PLHEXTEN+4                                               02597000
PLHRESR1 EQU   PLHEXTEN                                                 02598000
KEY      EQU   IDAKEY                                                   02599000
AMDATA   EQU   IDADATA                                                  02600000
RDFLL    EQU   IDARDF+1                                                 02601000
RDFEMPTY EQU   RDFRBYTE                                                 02602000
RDFREPL  EQU   RDFRBYTE                                                 02603000
RDF1ST   EQU   RDFSEG                                                   02604000
RDFCTNU  EQU   RDFRBYTE                                                 02605000
RDFTYPE  EQU   RDFRBYTE                                                 02606000
@NM00064 EQU   CIDFLL                                                   02607000
CIDFBUSY EQU   CIDFLL                                                   02608000
CIDFOSET EQU   IDACIDF                                                  02609000
IMWKEY1  EQU   IDAIMWA+76                                               02610000
@NM00063 EQU   IDAIMWA+72                                               02611000
IMWNSOFF EQU   IDAIMWA+70                                               02612000
IMWCIMVN EQU   IDAIMWA+68                                               02613000
@NM00062 EQU   IDAIMWA+67                                               02614000
IMWSVIEL EQU   IDAIMWA+66                                               02615000
IMWIEL   EQU   IDAIMWA+65                                               02616000
IMWFGAIN EQU   IDAIMWA+64                                               02617000
IMWBUFP  EQU   IDAIMWA+60                                               02618000
IMWLBUFC EQU   IDAIMWA+56                                               02619000
IMWIPTR  EQU   IDAIMWA+52                                               02620000
IMWXPTR  EQU   IDAIMWA+48                                               02621000
IMWIKEYP EQU   IDAIMWA+44                                               02622000
IMWXKEYP EQU   IDAIMWA+40                                               02623000
IMWISWKA EQU   IDAIMWA+8                                                02624000
IMWIXSP  EQU   IDAIMWA+4                                                02625000
IMWLEN   EQU   IDAIMWA+2                                                02626000
IMWBSE   EQU   IMWFLAGS                                                 02627000
IMWRIPL  EQU   IMWFLAGS                                                 02628000
IMWNEWHL EQU   IMWFLAGS                                                 02629000
IMWID    EQU   IDAIMWA                                                  02630000
ICWKEY1  EQU   IDAICWA+60                                               02631000
ICWCERP  EQU   IDAICWA+59                                               02632000
ICWCEL   EQU   IDAICWA+58                                               02633000
ICWCEF   EQU   IDAICWA+57                                               02634000
ICWCER   EQU   IDAICWA+56                                               02635000
ICWPTL   EQU   IDAICWA+55                                               02636000
ICWREQ   EQU   IDAICWA+54                                               02637000
ICWCRSEG EQU   IDAICWA+52                                               02638000
ICWNOSEG EQU   IDAICWA+50                                               02639000
ICWNEST  EQU   IDAICWA+48                                               02640000
ICWKEY3L EQU   IDAICWA+46                                               02641000
ICWKEY2L EQU   IDAICWA+44                                               02642000
ICWKEY1L EQU   IDAICWA+42                                               02643000
ICWLN    EQU   IDAICWA+40                                               02644000
ICWARDBP EQU   IDAICWA+36                                               02645000
ICWADD   EQU   IDAICWA+24                                               02646000
ICWSCNT  EQU   IDAICWA+22                                               02647000
ICWPSEO  EQU   IDAICWA+20                                               02648000
ICWPRBA  EQU   IDAICWA+16                                               02649000
ICWCRBA  EQU   IDAICWA+12                                               02650000
ICWBUFC  EQU   IDAICWA+8                                                02651000
ICWLEN   EQU   IDAICWA+2                                                02652000
ICWENDRQ EQU   ICWFLG1                                                  02653000
ICWSPLIT EQU   ICWFLG1                                                  02654000
ICWKRDS  EQU   ICWFLG1                                                  02655000
ICWVNE   EQU   ICWFLG1                                                  02656000
ICWVSE   EQU   ICWFLG1                                                  02657000
ICWRBAOK EQU   ICWFLG1                                                  02658000
ICWWAGM  EQU   ICWFLG1                                                  02659000
ICWWNF   EQU   ICWFLG1                                                  02660000
ICWID    EQU   IDAICWA                                                  02661000
IXSPEC   EQU   IDAIXSPL+19                                              02662000
IXSEKON  EQU   IDAIXSPL+18                                              02663000
@NM00061 EQU   IXSBFLG                                                  02664000
IXSLELV  EQU   IXSBFLG                                                  02665000
IXSSSRH  EQU   IXSBFLG                                                  02666000
IXSNOSR  EQU   IDAIXSPL+16                                              02667000
IXSKLEN  EQU   IDAIXSPL+14                                              02668000
IXSTLN   EQU   IDAIXSPL+12                                              02669000
IXSARG   EQU   IDAIXSPL+8                                               02670000
IXSBUFC  EQU   IDAIXSPL+4                                               02671000
IXSSTRBA EQU   IDAIXSPL                                                 02672000
IXKEY    EQU   IDAIXK                                                   02673000
IBFLP1   EQU   IBFLP2                                                   02674000
IXHFLGS  EQU   IDAIXH+17                                                02675000
IXHLV    EQU   IDAIXH+16                                                02676000
IXHXX    EQU   IDAIXH+12                                                02677000
ARDKEYS  EQU   IDAARDB+29                                               02678000
@NM00060 EQU   ARDPRF                                                   02679000
ARDPRFMT EQU   ARDPRF                                                   02680000
ARDPRSS  EQU   ARDPRF                                                   02681000
ARDRELNO EQU   IDAARDB+26                                               02682000
ARDVOLSR EQU   IDAARDB+20                                               02683000
ARDNPTR  EQU   IDAARDB+4                                                02684000
ARDLEN   EQU   IDAARDB+2                                                02685000
ARDUSED  EQU   ARDTYPE                                                  02686000
ARDEOD   EQU   ARDTYPE                                                  02687000
ARDUOVFL EQU   ARDTYPE                                                  02688000
ARDSS    EQU   ARDTYPE                                                  02689000
ARDHLI   EQU   ARDTYPE                                                  02690000
ARDKR    EQU   ARDTYPE                                                  02691000
ARDID    EQU   IDAARDB                                                  02692000
BSPH1ST  EQU   IDABSPH+60                                               02693000
BSPHUBTM EQU   IDABSPH+56                                               02694000
BSPHUTOP EQU   IDABSPH+52                                               02695000
BSPHNUIW EQU   IDABSPH+48                                               02696000
BSPHUIW  EQU   IDABSPH+44                                               02697000
BSPHFND  EQU   IDABSPH+40                                               02698000
BSPHRDS  EQU   IDABSPH+36                                               02699000
BSPHCPLH EQU   IDABSPH+32                                               02700000
BSPHPSUC EQU   BSPHCSRC+2                                               02701000
@NM00059 EQU   BSPHCSRC+1                                               02702000
BSPHPCUC EQU   BSPHFLG2                                                 02703000
BSPHAPRT EQU   BSPHFLG2                                                 02704000
BSPHBSZ  EQU   IDABSPH+24                                               02705000
BSPHMDBT EQU   IDABSPH+20                                               02706000
BSPHERCT EQU   IDABSPH+14                                               02707000
BSPHBFNO EQU   IDABSPH+12                                               02708000
BSPHNBSP EQU   IDABSPH+8                                                02709000
BSPHNM   EQU   IDABSPH+4                                                02710000
BSPHLEN  EQU   IDABSPH+2                                                02711000
BSPHBFRF EQU   BSPHFLG1                                                 02712000
BSPHIOBF EQU   BSPHFLG1                                                 02713000
BSPHID   EQU   IDABSPH                                                  02714000
BUFCEND  EQU   IDABUFC+64                                               02715000
BUFCUCDN EQU   IDABUFC+60                                               02716000
BUFCUCUP EQU   IDABUFC+56                                               02717000
BUFCMDBT EQU   IDABUFC+52                                               02718000
BUFCNXT2 EQU   IDABUFC+37                                               02719000
BUFCIDXL EQU   IDABUFC+36                                               02720000
BUFCDSPC EQU   IDABUFC+32                                               02721000
BUFCWLEN EQU   BUFCINV                                                  02722000
BUFCNXT1 EQU   IDABUFC+24                                               02723000
BUFCCPA  EQU   IDABUFC+16                                               02724000
@NM00058 EQU   BUFCFLG2                                                 02725000
BUFCEOD  EQU   BUFCFLG2                                                 02726000
BUFCBSYW EQU   BUFCFLG2                                                 02727000
BUFCBSYR EQU   BUFCFLG2                                                 02728000
BUFCNLAS EQU   BUFCFLG2                                                 02729000
BUFCXDDR EQU   BUFCFLG2                                                 02730000
BUFCFIX  EQU   BUFCIOFL                                                 02731000
BUFCPFCP EQU   BUFCIOFL                                                 02732000
BUFCXEDB EQU   BUFCIOFL                                                 02733000
BUFCWC   EQU   BUFCIOFL                                                 02734000
BUFCREAL EQU   BUFCIOFL                                                 02735000
BUFCRRD  EQU   BUFCIOFL                                                 02736000
BUFCFMT  EQU   BUFCIOFL                                                 02737000
BUFCEPT  EQU   BUFCFLG1                                                 02738000
BUFCER1  EQU   BUFCFLG1                                                 02739000
BUFCINS  EQU   BUFCFLG1                                                 02740000
BUFCSEG  EQU   BUFCFLG1                                                 02741000
BUFCUPG  EQU   BUFCFLG1                                                 02742000
BUFCUCNT EQU   BUFCAVL                                                  02743000
@NM00057 EQU   IDABUFDR+16                                              02744000
@NM00056 EQU   BUFDRFLG                                                 02745000
BUFDRAVL EQU   BUFDRFLG                                                 02746000
BUFDRREL EQU   BUFDRFLG                                                 02747000
BUFDRTSB EQU   IDABUFDR+10                                              02748000
BUFDRMAX EQU   BUFDRCIX                                                 02749000
BUFDRPFN EQU   IDABUFDR+8                                               02750000
BUFDRPFB EQU   IDABUFDR+4                                               02751000
BUFDRLEN EQU   IDABUFDR+2                                               02752000
BUFDRNO  EQU   IDABUFDR+1                                               02753000
BUFDRID  EQU   IDABUFDR                                                 02754000
AMDEXCP  EQU   AMDSTAT+44                                               02755000
AMDNCIS  EQU   AMDSTAT+36                                               02756000
AMDASPA  EQU   AMDSTAT+32                                               02757000
AMDRETR  EQU   AMDSTAT+28                                               02758000
AMDUPR   EQU   AMDSTAT+24                                               02759000
AMDIREC  EQU   AMDSTAT+20                                               02760000
AMDDELR  EQU   AMDSTAT+16                                               02761000
AMDNLR   EQU   AMDSTAT+12                                               02762000
AMDNEXT  EQU   AMDSTAT+10                                               02763000
AMDNIL   EQU   AMDSTAT+8                                                02764000
AMDSTSP  EQU   AMDSTAT                                                  02765000
@NM00055 EQU   IDAAMDSB+41                                              02766000
@NM00054 EQU   AMDATTR3                                                 02767000
AMDLM    EQU   AMDATTR3                                                 02768000
AMDWAIT  EQU   AMDATTR3                                                 02769000
AMDBIND  EQU   AMDATTR3                                                 02770000
AMDFAULT EQU   AMDATTR3                                                 02771000
AMDUNQ   EQU   AMDATTR3                                                 02772000
AMDPARDB EQU   IDAAMDSB+36                                              02773000
AMDMAXRR EQU   AMDSSRBA                                                 02774000
AMDNSLOT EQU   AMDHLRBA                                                 02775000
AMDLRECL EQU   IDAAMDSB+24                                              02776000
AMDFSCI  EQU   IDAAMDSB+16                                              02777000
AMDFSCA  EQU   IDAAMDSB+14                                              02778000
AMDPCTCI EQU   IDAAMDSB+11                                              02779000
AMDPCTCA EQU   IDAAMDSB+10                                              02780000
AMDRKP   EQU   IDAAMDSB+6                                               02781000
AMDAXRKP EQU   AMDNEST                                                  02782000
AMDLEN   EQU   IDAAMDSB+2                                               02783000
AMDSPAN  EQU   AMDATTR                                                  02784000
AMDRRDS  EQU   AMDATTR                                                  02785000
AMDRANGE EQU   AMDATTR                                                  02786000
AMDORDER EQU   AMDATTR                                                  02787000
AMDREPL  EQU   AMDATTR                                                  02788000
AMDSDT   EQU   AMDATTR                                                  02789000
AMDWCK   EQU   AMDATTR                                                  02790000
AMDDST   EQU   AMDATTR                                                  02791000
AMDSBID  EQU   IDAAMDSB                                                 02792000
PLHERRET EQU   IDAPLH+276                                               02793000
PLHASCB  EQU   IDAPLH+272                                               02794000
PLHECB   EQU   IDAPLH+268                                               02795000
@NM00052 EQU   IDAPLH+266                                               02796000
@NM00051 EQU   PLHTMRPL                                                 02797000
PLHTMIOB EQU   PLHTMRPL                                                 02798000
PLHTMINX EQU   PLHTMRPL                                                 02799000
PLHTMDTA EQU   PLHTMRPL                                                 02800000
PLHTMDIW EQU   PLHTMRPL                                                 02801000
PLHTMBUF EQU   PLHTMRPL                                                 02802000
PLHTERM  EQU   PLHTMRPL                                                 02803000
PLHDRMSK EQU   IDAPLH+264                                               02804000
PLHR13   EQU   IDAPLH+260                                               02805000
PLHPARM1 EQU   IDAPLH+256                                               02806000
PLHDRRSC EQU   IDAPLH+252                                               02807000
PLHSLRBA EQU   IDAPLH+244                                               02808000
PLHSRCSG EQU   IDAPLH+242                                               02809000
PLHNOSEG EQU   IDAPLH+240                                               02810000
PLHLLOR  EQU   IDAPLH+236                                               02811000
PLHXPLH  EQU   PLHWAX                                                   02812000
@NM00050 EQU   PLHIXSPL+8                                               02813000
PLHIXBFC EQU   PLHIXSPL+4                                               02814000
PLHHIREC EQU   PLHSSRBA                                                 02815000
PLHISPLP EQU   IDAPLH+196                                               02816000
PLHRBUFC EQU   IDAPLH+192                                               02817000
PLHNRBA  EQU   IDAPLH+184                                               02818000
PLHDDDD  EQU   PLHEOVPT                                                 02819000
PLHAR14  EQU   IDAPLH+176                                               02820000
@NM00049 EQU   IDAPLH+172                                               02821000
@NM00048 EQU   IDAPLH+168                                               02822000
PLHASAVE EQU   IDAPLH+164                                               02823000
PLHRETOS EQU   IDAPLH+118                                               02824000
PLHCHAIN EQU   IDAPLH+112                                               02825000
PLHAMB   EQU   IDAPLH+108                                               02826000
PLHARET  EQU   IDAPLH+80                                                02827000
PLHIIOB  EQU   PLHDIOB                                                  02828000
PLHSRSID EQU   IDAPLH+74                                                02829000
PLHRDFC  EQU   IDAPLH+72                                                02830000
PLHNBUFC EQU   IDAPLH+56                                                02831000
PLHLRECL EQU   IDAPLH+48                                                02832000
@NM00047 EQU   PLHRSCS                                                  02833000
PLHDBPER EQU   PLHRSCS                                                  02834000
PLHDSERR EQU   PLHRSCS                                                  02835000
PLHASYER EQU   PLHRSCS                                                  02836000
@NM00046 EQU   PLHRSCS                                                  02837000
PLHBUFHD EQU   PLHRSCS                                                  02838000
PLHINEOV EQU   PLHRSCS                                                  02839000
PLHRCODE EQU   IDAPLH+41                                                02840000
PLHUCODE EQU   PLHJCODE                                                 02841000
PLHUPECB EQU   PLHJORBA                                                 02842000
PLHDSIDA EQU   IDAPLH+24                                                02843000
PLHCRPL  EQU   IDAPLH+20                                                02844000
PLHMRPL  EQU   IDAPLH+16                                                02845000
PLHBFRNO EQU   IDAPLH+15                                                02846000
PLHFRCNT EQU   IDAPLH+14                                                02847000
PLHRMIN  EQU   IDAPLH+13                                                02848000
PLHDSTYP EQU   IDAPLH+12                                                02849000
PLHACB   EQU   IDAPLH+8                                                 02850000
PLHRAE   EQU   PLHAFLGS                                                 02851000
PLHRABWD EQU   PLHAFLGS                                                 02852000
PLHIOSID EQU   PLHAFLGS                                                 02853000
PLHDBDC  EQU   PLHAFLGS                                                 02854000
PLHVAMB  EQU   PLHAFLGS                                                 02855000
PLHIOSRQ EQU   PLHAFLGS                                                 02856000
PLHDRLM  EQU   PLHAFLGS                                                 02857000
PLHEOVDF EQU   PLHFLG3                                                  02858000
PLHRVRS  EQU   PLHFLG3                                                  02859000
PLHBWD   EQU   PLHFLG3                                                  02860000
PLHSLVLD EQU   PLHFLG3                                                  02861000
PLHSRBSG EQU   PLHFLG3                                                  02862000
@NM00045 EQU   PLHEFLGS+1                                               02863000
PLHRSTRT EQU   PLHEFLGS+1                                               02864000
PLHDSCAN EQU   PLHEFLGS                                                 02865000
PLHINVAL EQU   PLHEFLGS                                                 02866000
PLHEODX  EQU   PLHEFLGS                                                 02867000
PLHNOADV EQU   PLHEFLGS                                                 02868000
PLHSRINV EQU   PLHEFLGS                                                 02869000
PLHSKPER EQU   PLHEFLGS                                                 02870000
PLH1ST   EQU   PLHEFLGS                                                 02871000
PLHNOSPC EQU   PLHEFLGS                                                 02872000
PLHIWAIT EQU   PLHFLG2                                                  02873000
PLHSVADV EQU   PLHFLG2                                                  02874000
PLHCIINS EQU   PLHFLG2                                                  02875000
PLHKRE   EQU   PLHFLG2                                                  02876000
PLHKEYMD EQU   PLHFLG2                                                  02877000
PLHSQINS EQU   PLHFLG2                                                  02878000
PLHUPD   EQU   PLHFLG2                                                  02879000
@NM00044 EQU   PLHFLG1                                                  02880000
PLHDRPND EQU   PLHFLG1                                                  02881000
PLHASYRQ EQU   PLHFLG1                                                  02882000
PLHRDEXC EQU   PLHFLG1                                                  02883000
PLHENDRQ EQU   PLHFLG1                                                  02884000
PLHEOVW  EQU   PLHFLG1                                                  02885000
PLHATV   EQU   IDAPLH+1                                                 02886000
PLHAVL   EQU   IDAPLH                                                   02887000
PLHIOSDQ EQU   IDAPLHDR+12                                              02888000
PLHDRCUR EQU   IDAPLHDR+10                                              02889000
PLHDRMAX EQU   IDAPLHDR+8                                               02890000
PLHDRREQ EQU   IDAPLHDR+4                                               02891000
PLHELTH  EQU   IDAPLHDR+2                                               02892000
PLHCNT   EQU   IDAPLHDR+1                                               02893000
PLHID    EQU   IDAPLHDR                                                 02894000
@NM00043 EQU   IDADIWA+92                                               02895000
@NM00042 EQU   IDADIWA+88                                               02896000
@NM00041 EQU   IDADIWA+84                                               02897000
@NM00040 EQU   IDADIWA+80                                               02898000
@NM00039 EQU   IDADIWA+76                                               02899000
@NM00038 EQU   IDADIWA+72                                               02900000
@NM00037 EQU   IDADIWA+68                                               02901000
@NM00036 EQU   IDADIWA+64                                               02902000
@NM00035 EQU   IDADIWA+60                                               02903000
@NM00034 EQU   IDADIWA+56                                               02904000
DIWRKCT  EQU   IDADIWA+48                                               02905000
DIWSAVE5 EQU   DIWSAVE+16                                               02906000
DIWSPLTP EQU   IDADIWA+24                                               02907000
DIWBUFC  EQU   IDADIWA+20                                               02908000
DIWPLH   EQU   IDADIWA+16                                               02909000
@NM00033 EQU   IDADIWA+6                                                02910000
DIWFSPF  EQU   DIWFLG2                                                  02911000
DIW1ST   EQU   DIWFLG1                                                  02912000
DIWNOT1  EQU   DIWFLG1                                                  02913000
DIWGSPC  EQU   DIWFLG1                                                  02914000
DIWEOKR  EQU   DIWFLG1                                                  02915000
DIWPFERR EQU   DIWFLG1                                                  02916000
DIWCISPL EQU   DIWFLG1                                                  02917000
DIWLEN   EQU   IDADIWA+2                                                02918000
DIWATV   EQU   IDADIWA+1                                                02919000
DIWID    EQU   IDADIWA                                                  02920000
ACBAPID  EQU   ACBCOMN+72                                               02921000
ACBCBMWA EQU   ACBCOMN+68                                               02922000
ACBUAPTR EQU   ACBCOMN+64                                               02923000
ACBLRECL EQU   ACBCOMN+62                                               02924000
ACBMSGLN EQU   ACBBLKSZ                                                 02925000
ACBBUFSP EQU   ACBCOMN+56                                               02926000
@NM00032 EQU   ACBUJFCB+1                                               02927000
ACBOPTN  EQU   ACBUJFCB                                                 02928000
ACBVVIC  EQU   ACBINFLG                                                 02929000
ACBUCRA  EQU   ACBINFLG                                                 02930000
ACBSCRA  EQU   ACBINFLG                                                 02931000
ACBCAT   EQU   ACBINFLG                                                 02932000
ACBIJRQE EQU   ACBINFLG                                                 02933000
ACBJEPS  EQU   ACBINFLG                                                 02934000
@NM00031 EQU   ACBINFLG                                                 02935000
ACBERFLG EQU   ACBCOMN+49                                               02936000
ACBBUSY  EQU   ACBIOSFG                                                 02937000
ACBLOCK  EQU   ACBEXFG                                                  02938000
@NM00030 EQU   ACBOFLGS                                                 02939000
ACBDSERR EQU   ACBOFLGS                                                 02940000
ACBOPEN  EQU   ACBOFLGS                                                 02941000
ACBEOV   EQU   ACBOFLGS                                                 02942000
@NM00029 EQU   ACBOFLGS                                                 02943000
ACBDEB   EQU   ACBDDNM+5                                                02944000
ACBERFL  EQU   ACBDDNM+4                                                02945000
ACBAM    EQU   ACBAMETH                                                 02946000
ACBINFL  EQU   ACBDDNM+2                                                02947000
ACBTIOT  EQU   ACBDDNM                                                  02948000
ACBUEL   EQU   ACBEXLST                                                 02949000
ACBPASSW EQU   ACBCOMN+32                                               02950000
ACBMSGAR EQU   ACBCOMN+28                                               02951000
@NM00028 EQU   ACBDSORG+1                                               02952000
ACBDORGA EQU   ACBDSORG+1                                               02953000
@NM00027 EQU   ACBDSORG                                                 02954000
ACBCRNRE EQU   ACBCROPS                                                 02955000
ACBCRNCK EQU   ACBCROPS                                                 02956000
ACBASA   EQU   ACBCCTYP                                                 02957000
@NM00026 EQU   ACBCCTYP                                                 02958000
ACBRECAF EQU   ACBRECFM                                                 02959000
ACBJBUF  EQU   ACBBUFPL+2                                               02960000
ACBMACR4 EQU   ACBBUFPL+1                                               02961000
@NM00025 EQU   ACBMACR3                                                 02962000
ACBNCFX  EQU   ACBMACR3                                                 02963000
ACBSIS   EQU   ACBMACR3                                                 02964000
ACBDFR   EQU   ACBMACR3                                                 02965000
ACBICI   EQU   ACBMACR3                                                 02966000
ACBGSR   EQU   ACBMACR3                                                 02967000
ACBLSR   EQU   ACBMACR3                                                 02968000
@NM00024 EQU   ACBMACR3                                                 02969000
ACBBUFNI EQU   ACBCOMN+18                                               02970000
ACBBUFND EQU   ACBCOMN+16                                               02971000
ACBSTRNO EQU   ACBCOMN+15                                               02972000
ACBBSTNO EQU   ACBCOMN+14                                               02973000
ACBAIX   EQU   ACBMACR2                                                 02974000
ACBDSN   EQU   ACBMACR2                                                 02975000
ACBRST   EQU   ACBMACR2                                                 02976000
ACBLOGON EQU   ACBMACR2                                                 02977000
ACBSKP   EQU   ACBMACR2                                                 02978000
@NM00023 EQU   ACBMACR2                                                 02979000
ACBUBF   EQU   ACBMACR1                                                 02980000
ACBOUT   EQU   ACBMACR1                                                 02981000
ACBIN    EQU   ACBMACR1                                                 02982000
ACBDIR   EQU   ACBMACR1                                                 02983000
ACBSEQ   EQU   ACBMACR1                                                 02984000
ACBBLK   EQU   ACBCNV                                                   02985000
ACBADD   EQU   ACBADR                                                   02986000
ACBKEY   EQU   ACBMACR1                                                 02987000
ACBINRTN EQU   ACBCOMN+8                                                02988000
ACBIBCT  EQU   ACBJWA                                                   02989000
ACBLEN2  EQU   ACBLENG2                                                 02990000
ACBSTYP  EQU   ACBCOMN+1                                                02991000
ACBID    EQU   ACBCOMN                                                  02992000
AMBLCMB  EQU   IDAAMBL+64                                               02993000
AMBLBIB  EQU   IDAAMBL+60                                               02994000
AMBLMIDS EQU   IDAAMBL+42                                               02995000
AMBLNIDS EQU   IDAAMBL+41                                               02996000
@NM00022 EQU   IDAAMBL+40                                               02997000
AMBLNUM  EQU   IDAAMBL+38                                               02998000
AMBLNST  EQU   IDAAMBL+37                                               02999000
@NM00021 EQU   AMBLFLG2                                                 03000000
AMBLSTAG EQU   AMBLFLG2                                                 03001000
@NM00020 EQU   AMBLFLG2                                                 03002000
AMBLDUMY EQU   AMBLFLG1                                                 03003000
AMBLCAT  EQU   AMBLFLG1                                                 03004000
AMBLUCRA EQU   AMBLFLG1                                                 03005000
AMBLSCRA EQU   AMBLFLG1                                                 03006000
AMBLVVIC EQU   AMBLFLG1                                                 03007000
AMBLUPD  EQU   AMBLFLG1                                                 03008000
AMBLCINV EQU   AMBLFLG1                                                 03009000
AMBLFULL EQU   AMBLFLG1                                                 03010000
AMBLLEN  EQU   IDAAMBL+34                                               03011000
@NM00019 EQU   AMBLSHAR                                                 03012000
AMBLWRIT EQU   AMBLSHAR                                                 03013000
AMBLCATO EQU   AMBLSHAR                                                 03014000
AMBLPRIM EQU   AMBLSHAR                                                 03015000
AMBLID   EQU   IDAAMBL+32                                               03016000
@NM00018 EQU   IDAAMBL+31                                               03017000
@NM00017 EQU   AMBLTYPE                                                 03018000
AMBLFIX  EQU   AMBLTYPE                                                 03019000
AMBLBASE EQU   AMBLTYPE                                                 03020000
AMBLAIX  EQU   AMBLTYPE                                                 03021000
AMBLUPGR EQU   AMBLTYPE                                                 03022000
AMBLPATH EQU   AMBLTYPE                                                 03023000
AMBLENO  EQU   AMBLVC+1                                                 03024000
AMBLVRT  EQU   AMBLVC                                                   03025000
AMBLXPT  EQU   IDAAMBL+24                                               03026000
AMBLDFR  EQU   AMBLQ                                                    03027000
AMBLESDS EQU   AMBLQ                                                    03028000
AMBLKSDS EQU   AMBLQ                                                    03029000
AMBLUBF  EQU   AMBLQ                                                    03030000
AMBLFSTP EQU   AMBLQ                                                    03031000
AMBLLSR  EQU   AMBLQ                                                    03032000
AMBLGSR  EQU   AMBLQ                                                    03033000
AMBLDDC  EQU   AMBLQ                                                    03034000
AMBLDCI  EQU   AMBLIDF+4                                                03035000
AMBLCACB EQU   AMBLIDF                                                  03036000
@NM00016 EQU   AMBLEOV+2                                                03037000
AMBLCOMP EQU   AMBLEOV+1                                                03038000
AMBLESET EQU   AMBLEFLG                                                 03039000
AMBLWAIT EQU   AMBLEFLG                                                 03040000
AMBLACB  EQU   IDAAMBL+8                                                03041000
AMBLSCHN EQU   IDAAMBL+4                                                03042000
AMBLPCHN EQU   IDAAMBL                                                  03043000
AMBVIOT  EQU   IDAAMB+116                                               03044000
AMBSZCP  EQU   IDAAMB+114                                               03045000
AMBSZFW  EQU   IDAAMB+112                                               03046000
AMBSZWR  EQU   IDAAMB+110                                               03047000
AMBSZRD  EQU   IDAAMB+108                                               03048000
AMBEXEX  EQU   IDAAMB+100                                               03049000
AMBWSHD  EQU   IDAAMB+96                                                03050000
AMBCPA   EQU   IDAAMB+92                                                03051000
AMBBM2SH EQU   IDAAMB+88                                                03052000
AMBRDCNT EQU   AMBCSWD1+2                                               03053000
@NM00015 EQU   AMBCSWD1+1                                               03054000
@NM00014 EQU   AMBAFLG                                                  03055000
AMBCFX   EQU   AMBAFLG                                                  03056000
AMBDFR   EQU   AMBAFLG                                                  03057000
AMBICI   EQU   AMBAFLG                                                  03058000
@NM00013 EQU   AMBAFLG                                                  03059000
AMBUPLH  EQU   IDAAMB+80                                                03060000
AMBPAMBL EQU   IDAAMB+76                                                03061000
AMBPIXP  EQU   IDAAMB+72                                                03062000
@NM00012 EQU   IDAAMB+68                                                03063000
AMBWKA   EQU   IDAAMB+60                                                03064000
AMBAMBXN EQU   AMBEOVPT                                                 03065000
AMBEDB   EQU   IDAAMB+52                                                03066000
AMBRPT   EQU   IDAAMB+50                                                03067000
AMBPUG   EQU   AMBFLG2                                                  03068000
AMBBUSY  EQU   AMBOFLGS                                                 03069000
AMBEXFG  EQU   AMBOFLGS                                                 03070000
@NM00011 EQU   AMBOFLGS                                                 03071000
AMBOPEN  EQU   AMBOFLGS                                                 03072000
@NM00010 EQU   AMBOFLGS                                                 03073000
AMBDEBAD EQU   AMBDEBPT+1                                               03074000
AMBIFLGS EQU   AMBDEBPT                                                 03075000
AMBAMETH EQU   IDAAMB+43                                                03076000
AMBUPX   EQU   AMBINFL                                                  03077000
@NM00009 EQU   AMBINFL                                                  03078000
@NM00008 EQU   AMBINFL                                                  03079000
AMBTIOT  EQU   IDAAMB+40                                                03080000
@NM00007 EQU   IDAAMB+38                                                03081000
AMBDDSN  EQU   IDAAMB+35                                                03082000
AMBCDSN  EQU   IDAAMB+32                                                03083000
AMBIOMB  EQU   AMBIOBAD                                                 03084000
@NM00006 EQU   AMBDSORG+1                                               03085000
AMBDORGA EQU   AMBDSORG+1                                               03086000
@NM00005 EQU   AMBDSORG                                                 03087000
AMBUBF   EQU   AMBFLG1                                                  03088000
AMBSPEED EQU   AMBFLG1                                                  03089000
AMBPCAT  EQU   AMBFLG1                                                  03090000
AMBMCAT  EQU   AMBFLG1                                                  03091000
AMBTYPE  EQU   AMBFLG1                                                  03092000
AMBCREAT EQU   AMBFLG1                                                  03093000
@NM00004 EQU   AMBFLG0                                                  03094000
AMBPSDS  EQU   AMBFLG0                                                  03095000
AMBCACB  EQU   IDAAMB+16                                                03096000
AMBPH    EQU   IDAAMB+12                                                03097000
AMBLINK  EQU   IDAAMB+4                                                 03098000
AMBLEN   EQU   IDAAMB+2                                                 03099000
AMBRSC   EQU   IDAAMB+1                                                 03100000
AMBID    EQU   IDAAMB                                                   03101000
RPLERMSA EQU   RPLCOMN+72                                               03102000
RPLEMLEN EQU   RPLCOMN+70                                               03103000
RPLACTIV EQU   RPLCOMN+69                                               03104000
RPLBRANC EQU   RPLEXTD1                                                 03105000
RPLNIB   EQU   RPLEXTD1                                                 03106000
@NM00003 EQU   RPLEXTD1                                                 03107000
RPLEXIT  EQU   RPLEXTD1                                                 03108000
RPLNEXIT EQU   RPLEXTD1                                                 03109000
RPLEXSCH EQU   RPLEXTD1                                                 03110000
@NM00002 EQU   RPLRBAR+3                                                03111000
@NM00001 EQU   RPLAIXID                                                 03112000
RPLAXPKP EQU   RPLAIXID                                                 03113000
RPLAIXPC EQU   RPLRBAR                                                  03114000
RPLRSV88 EQU   RPLOPT8                                                  03115000
RPLUNCON EQU   RPLOPT8                                                  03116000
RPLACTV  EQU   RPLOPT8                                                  03117000
RPLSESS  EQU   RPLOPT8                                                  03118000
RPLPEND  EQU   RPLOPT8                                                  03119000
RPLODPRM EQU   RPLOPT8                                                  03120000
RPLODACP EQU   RPLOPT8                                                  03121000
RPLODACQ EQU   RPLOPT8                                                  03122000
RPLRSV78 EQU   RPLOPT7                                                  03123000
RPLRSV77 EQU   RPLOPT7                                                  03124000
RPLRLSOP EQU   RPLOPT7                                                  03125000
RPLTPOST EQU   RPLOPT7                                                  03126000
RPLQOPT  EQU   RPLOPT7                                                  03127000
RPLCNIMM EQU   RPLCNOPT                                                 03128000
RPLCNANY EQU   RPLCNOPT                                                 03129000
RPLCNALL EQU   RPLCNOPT                                                 03130000
RPLRSV68 EQU   RPLOPT6                                                  03131000
RPLRSV67 EQU   RPLOPT6                                                  03132000
RPLLOCK  EQU   RPLOPT6                                                  03133000
RPLNCOND EQU   RPLOPT6                                                  03134000
RPLCOND  EQU   RPLOPT6                                                  03135000
RPLEOT   EQU   RPLUNTYP                                                 03136000
RPLEOM   EQU   RPLUNTYP                                                 03137000
RPLEOB   EQU   RPLUNTYP                                                 03138000
RPLWROPT EQU   RPLOPT5                                                  03139000
RPLNODE  EQU   RPLOPT5                                                  03140000
RPLERACE EQU   RPLWRTYP                                                 03141000
RPLEAU   EQU   RPLWRTYP                                                 03142000
RPLNERAS EQU   RPLWRTYP                                                 03143000
RPLPSOPT EQU   RPLOPT5                                                  03144000
RPLSSNIN EQU   RPLOPT5                                                  03145000
RPLDLGIN EQU   RPLOPT5                                                  03146000
RPLBUFL  EQU   RPLCOMN+52                                               03147000
RPLCHAIN EQU   RPLNXTRP                                                 03148000
RPLOPT4  EQU   RPLOPTCD+3                                               03149000
RPLALIGN EQU   RPLOPT3                                                  03150000
RPLFMT   EQU   RPLOPT3                                                  03151000
RPLFLD   EQU   RPLOPT3                                                  03152000
RPLVFY   EQU   RPLOPT3                                                  03153000
RPLBLK   EQU   RPLOPT3                                                  03154000
RPLSFORM EQU   RPLOPT3                                                  03155000
RPLEODS  EQU   RPLOPT3                                                  03156000
RPLNSP   EQU   RPLOPT2                                                  03157000
RPLUPD   EQU   RPLOPT2                                                  03158000
RPLWAITX EQU   RPLOPT2                                                  03159000
RPLLRD   EQU   RPLOPT2                                                  03160000
RPLCNV   EQU   RPLOPT2                                                  03161000
RPLADD   EQU   RPLADR                                                   03162000
RPLKEY   EQU   RPLOPT2                                                  03163000
RPLECBIN EQU   RPLECBSW                                                 03164000
RPLGEN   EQU   RPLOPT1                                                  03165000
RPLKGE   EQU   RPLOPT1                                                  03166000
RPLASY   EQU   RPLOPT1                                                  03167000
RPLSKP   EQU   RPLOPT1                                                  03168000
RPLDIR   EQU   RPLOPT1                                                  03169000
RPLLOC   EQU   RPLOPT1                                                  03170000
RPLDAF   EQU   RPLARG+2                                                 03171000
RPLSAF   EQU   RPLARG                                                   03172000
RPLAREA  EQU   RPLCOMN+32                                               03173000
RPLTCBPT EQU   RPLCOMN+28                                               03174000
RPLCCHAR EQU   RPLCOMN+20                                               03175000
RPLSTRID EQU   RPLCOMN+18                                               03176000
RPLKEYL  EQU   RPLKEYLE                                                 03177000
RPLRDSOH EQU   RPLFDB3                                                  03178000
RPLRLG   EQU   RPLFDB3                                                  03179000
RPLLGFRC EQU   RPLFDB3                                                  03180000
RPLREOT  EQU   RPLFDB3                                                  03181000
RPLREOM  EQU   RPLFDB3                                                  03182000
RPLREOB  EQU   RPLFDB3                                                  03183000
RPLSV32  EQU   RPLFDB3                                                  03184000
RPLUINPT EQU   RPLFDB3                                                  03185000
RPLSTSAV EQU   RPLFDB2                                                  03186000
RPLCUERR EQU   RPLFDB2                                                  03187000
RPLDLGFL EQU   RPLFDB2                                                  03188000
RPLIOERR EQU   RPLFDB2                                                  03189000
RPLDVUNS EQU   RPLFDB2                                                  03190000
RPLATND  EQU   RPLFDB2                                                  03191000
RPLRVID  EQU   RPLFDB2                                                  03192000
RPLERLK  EQU   RPLFDB2                                                  03193000
RPLSTAT  EQU   RPLFDBWD                                                 03194000
RPLPOST  EQU   RPLECB                                                   03195000
RPLWAIT  EQU   RPLECB                                                   03196000
RPLPLHPT EQU   RPLCOMN+4                                                03197000
RPLLEN2  EQU   RPLLEN                                                   03198000
RPLREQ   EQU   RPLIDWD+2                                                03199000
RPLSTYP  EQU   RPLIDWD+1                                                03200000
RPLID    EQU   RPLIDWD                                                  03201000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03202000
@RF00303 EQU   RFEXITA1                                                 03203000
@RF00344 EQU   @RC00341                                                 03204000
@RT00366 EQU   BKUPIX                                                   03205000
@RT00450 EQU   CASPLERR                                                 03206000
@RT00476 EQU   CASPLERR                                                 03207000
@RT00502 EQU   CASPLERR                                                 03208000
@RT00520 EQU   CASPLERR                                                 03209000
@RT00538 EQU   CASPLERR                                                 03210000
@RT00604 EQU   CASPLERR                                                 03211000
@RT00629 EQU   CASPLERR                                                 03212000
@RT00643 EQU   CASPLERR                                                 03213000
@RT00674 EQU   CASPLERR                                                 03214000
@RT00691 EQU   CASPLERR                                                 03215000
@RT00752 EQU   CASPLERR                                                 03216000
@RT00775 EQU   RFEXITA1                                                 03217000
@RC00758 EQU   @RC00756                                                 03218000
@RC00857 EQU   @EL00002                                                 03219000
@PB00002 EQU   @PB00003                                                 03220000
@ENDDATA EQU   *                                                        03221000
         END   IDA019RF,(C'PLS1634',0701,78209)                         03222000
