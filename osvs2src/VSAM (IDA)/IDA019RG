         TITLE 'IDA019RG--VSAM   I N D E X   C R E A T E               *00001000
                        '                                               00002000
IDA019RG CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RG  78.172'                                 0001 00009000
IDAIST   DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00579-IDAIST)                                     00013000
         ENTRY IDAIST                                                   00014000
         DROP  @15                                                      00015000
@PROLOG  BALR  @11,0                                               0001 00016000
@PSTART  DS    0H                                                  0001 00017000
         USING @PSTART,@11                                         0001 00018000
         AH    @15,4(,@15)                                         0001 00019000
         BR    @15                                                 0001 00020000
@EP00001 DS    0H                                                  0002 00021000
         IDASVR14                                                       00022000
*   RAMB=AMBLIX;                    /* SET RAMB TO INDEX SIDE        */ 00023000
         L     @10,RPLDACB(,RRPL)                                  0163 00024000
         L     @10,ACBAMBL(,@10)                                   0163 00025000
         L     RAMB,AMBLIX(,@10)                                   0163 00026000
*   RWORK1=AMBIWA;                  /* RWORK1 - WORK AREA BASE       */ 00027000
         L     RWORK1,AMBIWA(,RAMB)                                0164 00028000
*   ICWADD=RWORK1;                  /* ICWADD IN FIRST WORK AREA   0165 00029000
*                                      CONTAINS POINTER TO CURRENT 0165 00030000
*                                      W.A.                          */ 00031000
         ST    RWORK1,ICWADD(,RWORK1)                              0165 00032000
*   ICWREQ=RPARM1;                  /* SAVE REQUEST TYPE             */ 00033000
         STC   RPARM1,ICWREQ(,RWORK1)                              0166 00034000
*   IF PLHLRECL^>AMBLDTA->AMBDSB->AMDCINV/* IS LAST          @X04SVES*/ 00035000
*       -LENGTH(IDACIDF)            /* RECORD A              @X04SVES*/ 00036000
*       -LENGTH(IDARDF) THEN        /* SPANNED RECORD        @X04SVES*/ 00037000
         L     @10,AMBLDTA(,@10)                                   0167 00038000
         L     @10,AMBDSB(,@10)                                    0167 00039000
         L     @10,AMDCINV(,@10)                                   0167 00040000
         SL    @10,@CF00199                                        0167 00041000
         C     @10,PLHLRECL(,RPLH)                                 0167 00042000
         BL    @RF00167                                            0167 00043000
*     ICWNOSEG=ZERO;                /* NO                    @X04SVES*/ 00044000
         SLR   @10,@10                                             0168 00045000
         STH   @10,ICWNOSEG(,RWORK1)                               0168 00046000
*   ELSE                            /* YES                   @X04SVES*/ 00047000
*     ICWNOSEG=PLHNOSEG;            /* SAVE NO. SEGS         @X04SVES*/ 00048000
         B     @RC00167                                            0169 00049000
@RF00167 LH    @10,PLHNOSEG(,RPLH)                                 0169 00050000
         STH   @10,ICWNOSEG(,RWORK1)                               0169 00051000
*   IF ICWLN=ZERO THEN              /* IS THIS FIRST ENTRY           */ 00052000
@RC00167 LH    @10,ICWLN(,RWORK1)                                  0170 00053000
         LTR   @10,@10                                             0170 00054000
         BNZ   @RF00170                                            0170 00055000
*     DO;                           /*                               */ 00056000
*       ICWLN=ICWSS;                /* INITIALIZE WORKAREA LVL       */ 00057000
         MVC   ICWLN(2,RWORK1),@CH00053                            0172 00058000
*       IF PLHARDB->ARDKR=ON THEN   /* IS THIS A KEY RANGE DS        */ 00059000
         L     @10,PLHARDB(,RPLH)                                  0173 00060000
         TM    ARDKR(@10),B'10000000'                              0173 00061000
         BNO   @RF00173                                            0173 00062000
*         ICWKRDS=ON;               /* YES- SET FLAG IN WA           */ 00063000
         OI    ICWKRDS(RWORK1),B'00000100'                         0174 00064000
*I01:                                                              0175 00065000
*       DO;                         /* IDACALL(IDAAQR)               */ 00066000
@RF00173 DS    0H                                                  0175 00067000
I01      DS    0H                                                  0176 00068000
*         CALL IDAAQR;              /* EXIT TO IDAAQR                */ 00069000
         L     @15,@CV00945                                        0176 00070000
         BALR  @14,@15                                             0176 00071000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00072000
         BALR @11,0                                                     00073000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00074000
         USING *,@11                                                    00075000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00076000
         L     @11,=A(@PSTART)                                          00077000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00078000
         USING @PSTART,@11                                              00079000
*       END I01;                    /* OBTAIN AN RBA                 */ 00080000
*       RESPECIFY                                                  0182 00081000
*        (RWORK1) RSTD;             /*                               */ 00082000
*       CALL INTNEWRC;              /* GO INITIALIZE A BUFFER        */ 00083000
         BAL   @14,INTNEWRC                                        0183 00084000
*       AMDNIL=ICWSS;               /* SET AMDSB NO. LVLS TO 1       */ 00085000
         L     @10,AMBDSB(,RAMB)                                   0184 00086000
         MVC   AMDNIL(2,@10),@CH00053                              0184 00087000
*       AMDSSRBA=ICWCRBA;           /* SET SS RBA IN AMDSB           */ 00088000
         L     @15,ICWCRBA(,RWORK1)                                0185 00089000
         ST    @15,AMDSSRBA(,@10)                                  0185 00090000
*       AMDHLRBA=ICWCRBA;           /* SET HI LVL RBA IN AMDSB       */ 00091000
         ST    @15,AMDHLRBA(,@10)                                  0186 00092000
*       ICWKEY1L=AMDKEYLN;          /* SET KEY LEN FROM AMDSB        */ 00093000
         LH    @00,AMDKEYLN(,@10)                                  0187 00094000
         STH   @00,ICWKEY1L(,RWORK1)                               0187 00095000
*       ICWNEST=AMDNEST;            /* MOVE NO. ENTRYS/SECT.         */ 00096000
         LH    @10,AMDNEST(,@10)                                   0188 00097000
         STH   @10,ICWNEST(,RWORK1)                                0188 00098000
*     END;                          /* FROM AMDSB TO W.A.            */ 00099000
*   IF ICWREQ=ZERO THEN             /* THIS A NORMAL REQUEST         */ 00100000
@RF00170 CLI   ICWREQ(RWORK1),0                                    0190 00101000
         BNE   @RF00190                                            0190 00102000
*     DO;                           /* YES                           */ 00103000
*       IF ICWENDRQ=ON THEN         /* IS THIS A CLOSE        SITUAT.*/ 00104000
         TM    ICWENDRQ(RWORK1),B'00000001'                        0192 00105000
         BNO   @RF00192                                            0192 00106000
*         DO;                       /* YES                           */ 00107000
*           RESPECIFY                                              0194 00108000
*            (R15) RSTD;            /*                               */ 00109000
*           R15=ICWNOFIT;           /* SET RETURN CODE- NO FIT       */ 00110000
         LA    R15,8                                               0195 00111000
*           RAMB=AMBLDTA;           /* RESTORE AMB REG               */ 00112000
         L     @14,RPLDACB(,RRPL)                                  0196 00113000
         L     @14,ACBAMBL(,@14)                                   0196 00114000
         L     RAMB,AMBLDTA(,@14)                                  0196 00115000
*           CALL EXIT;              /* RETURN                @X04SVES*/ 00116000
         BAL   @14,EXIT                                            0197 00117000
*           RESPECIFY                                              0198 00118000
*            (R15) UNRSTD;          /*                               */ 00119000
*         END;                      /*                               */ 00120000
*       DO;                         /*                               */ 00121000
@RF00192 DS    0H                                                  0201 00122000
*         RESPECIFY                                                0201 00123000
*          (RWORK2,                                                0201 00124000
*           RWORK3,                                                0201 00125000
*           RWORK4,                                                0201 00126000
*           RWORK5) RSTD;           /*                               */ 00127000
*         RWORK4=ADDR(ICWKEY1);     /* POINT TO CURRENT KEY          */ 00128000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0202 00129000
*         RWORK2=RWORK4+AMDKEYLN;   /* POINT TO PREVIOUS KEY         */ 00130000
         L     @10,AMBDSB(,RAMB)                                   0203 00131000
         LR    RWORK2,RWORK4                                       0203 00132000
         AH    RWORK2,AMDKEYLN(,@10)                               0203 00133000
*         RWORK3=ICWKEY1L;          /* SET MOVE LENGTH EQUAL         */ 00134000
         LH    RWORK3,ICWKEY1L(,RWORK1)                            0204 00135000
*         RWORK5=RWORK3;            /* TO LENGTH OF KEY              */ 00136000
         LR    RWORK5,RWORK3                                       0205 00137000
*         GEN(MVCL  RWORK2,RWORK4); /* REPLACE PREVIOUS KEY          */ 00138000
         MVCL  RWORK2,RWORK4                                            00139000
*         RWORK2=ADDR(ICWKEY1);     /* POINT TO CURR KEY AREA        */ 00140000
         LA    RWORK2,ICWKEY1(,RWORK1)                             0207 00141000
*         RWORK4=ADDR(PLHKEY);      /* POINT TO KEY IN PLH           */ 00142000
         L     RWORK4,PLHKEYPT(,RPLH)                              0208 00143000
*         RWORK3=AMDKEYLN;          /* GET KEY LENGTH                */ 00144000
         L     @10,AMBDSB(,RAMB)                                   0209 00145000
         LH    RWORK3,AMDKEYLN(,@10)                               0209 00146000
*         RWORK5=RWORK3;            /* SAME LENGTH IN RWORK5         */ 00147000
         LR    RWORK5,RWORK3                                       0210 00148000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE KEY TO WORK AREA         */ 00149000
         MVCL  RWORK2,RWORK4                                            00150000
*         RESPECIFY                                                0212 00151000
*          (RWORK2,                                                0212 00152000
*           RWORK3,                                                0212 00153000
*           RWORK4,                                                0212 00154000
*           RWORK5) UNRSTD;         /*                               */ 00155000
*         ICWKEY2L=ICWKEY1L;        /* CURRENT LEN.TO PREV LEN       */ 00156000
         LH    @10,ICWKEY1L(,RWORK1)                               0213 00157000
         STH   @10,ICWKEY2L(,RWORK1)                               0213 00158000
*         CALL IDAIST;              /* GO INSERT KEY IN RECORD       */ 00159000
         L     @15,@CA00988                                        0214 00160000
         BALR  @14,@15                                             0214 00161000
*         RESPECIFY                                                0215 00162000
*          (R15) RSTD;              /*                               */ 00163000
*         IF ICWWNF=ON THEN         /* DID THE RECORD FIT            */ 00164000
         TM    ICWWNF(RWORK1),B'10000000'                          0216 00165000
         BNO   @RF00216                                            0216 00166000
*           R15=ICWNOFIT;           /* NO, SET RETURN CODE           */ 00167000
         LA    R15,8                                               0217 00168000
*         ELSE                      /* YES, RECORD FIT SO            */ 00169000
*           R15=ZERO;               /* CLEAR RETURN REGISTER         */ 00170000
         B     @RC00216                                            0218 00171000
@RF00216 SLR   R15,R15                                             0218 00172000
*         RAMB=AMBLDTA;             /* RESET AMB FOR CALLER          */ 00173000
@RC00216 L     @14,RPLDACB(,RRPL)                                  0219 00174000
         L     @14,ACBAMBL(,@14)                                   0219 00175000
         L     RAMB,AMBLDTA(,@14)                                  0219 00176000
*         CALL EXIT;                /* RETURN                @X04SVES*/ 00177000
         BAL   @14,EXIT                                            0220 00178000
*         RESPECIFY                                                0221 00179000
*          (R15) UNRSTD;            /*                               */ 00180000
*       END;                        /*                               */ 00181000
*     END;                          /*                               */ 00182000
*   ELSE                            /*                               */ 00183000
*     IF ICWREQ=ICWCLOSE THEN       /* IS THIS A CLOSE REQUEST       */ 00184000
         B     @RC00190                                            0224 00185000
@RF00190 CLI   ICWREQ(RWORK1),8                                    0224 00186000
         BNE   @RF00224                                            0224 00187000
*       DO;                         /* YES                           */ 00188000
*         RESPECIFY                                                0226 00189000
*          (RWORK1,                                                0226 00190000
*           RWORK2) RSTD;           /*                               */ 00191000
*         RWORK2=ICWBUFC->BUFCBAD;  /* POINT TO BUFFER               */ 00192000
         L     @10,ICWBUFC(,RWORK1)                                0227 00193000
         L     RWORK2,BUFCBAD(,@10)                                0227 00194000
*         IF ICWENDRQ=OFF THEN      /* FIRST ENTRY AT CLOSE          */ 00195000
         TM    ICWENDRQ(RWORK1),B'00000001'                        0228 00196000
         BNZ   @RF00228                                            0228 00197000
*           DO;                     /* YES                           */ 00198000
*             RESPECIFY                                            0230 00199000
*               RWORK0 RSTD;        /*                       @X04SVES*/ 00200000
*             IF ICWNOSEG^=ZERO THEN/* SPANNED RECD          @X04SVES*/ 00201000
         LH    @10,ICWNOSEG(,RWORK1)                               0231 00202000
         LTR   @10,@10                                             0231 00203000
         BZ    @RF00231                                            0231 00204000
*               RWORK0=(RWORK2->IXHFLPLN)*/* YES, COMPUTE    @X04SVES*/ 00205000
*                   (ICWNOSEG-ONE); /* SPACE FOR IT          @X04SVES*/ 00206000
         BCTR  @10,0                                               0232 00207000
         LR    @09,@10                                             0232 00208000
         SLR   RWORK0,RWORK0                                       0232 00209000
         IC    RWORK0,IXHFLPLN(,RWORK2)                            0232 00210000
         MR    @08,RWORK0                                          0232 00211000
         LR    RWORK0,@09                                          0232 00212000
*             ELSE                  /* NO                    @X04SVES*/ 00213000
*               RWORK0=ZERO;        /* NO SPACE REQD         @X04SVES*/ 00214000
         B     @RC00231                                            0233 00215000
@RF00231 SLR   RWORK0,RWORK0                                       0233 00216000
*             IF(RWORK2->IXHLEO-RWORK2->IXHFSO/* IS THERE ROOM FOR   */ 00217000
*                 -LENGTH(IXSELL))<ICWKEY1L/* AN UNCOMPRESSED KEY    */ 00218000
*                 +RWORK0 THEN      /* AND SPN RCD           @X04SVES*/ 00219000
@RC00231 LH    @10,IXHLEO(,RWORK2)                                 0234 00220000
         SH    @10,IXHFSO(,RWORK2)                                 0234 00221000
         BCTR  @10,0                                               0234 00222000
         BCTR  @10,0                                               0234 00223000
         LR    @07,RWORK0                                          0234 00224000
         LH    @15,ICWKEY1L(,RWORK1)                               0234 00225000
         ALR   @07,@15                                             0234 00226000
         CLR   @10,@07                                             0234 00227000
         BNL   @RF00234                                            0234 00228000
*               DO;                 /* NO                            */ 00229000
*                 RESPECIFY                                        0236 00230000
*                   RWORK0 UNRSTD;  /*                       @X04SVES*/ 00231000
*                 RESPECIFY                                        0237 00232000
*                  (R15) RSTD;      /*                               */ 00233000
*                 R15=ICWNOFIT;     /* SET WONT FIT INDICATION       */ 00234000
         LA    R15,8                                               0238 00235000
*                 ICWENDRQ=ON;      /* SET FLAG                      */ 00236000
         OI    ICWENDRQ(RWORK1),B'00000001'                        0239 00237000
*                 RAMB=AMBLDTA;     /* RESTORE AMB REGISTER          */ 00238000
         L     @14,RPLDACB(,RRPL)                                  0240 00239000
         L     @14,ACBAMBL(,@14)                                   0240 00240000
         L     RAMB,AMBLDTA(,@14)                                  0240 00241000
*                 CALL EXIT;        /* RETURN                @X04SVES*/ 00242000
         BAL   @14,EXIT                                            0241 00243000
*                 RESPECIFY                                        0242 00244000
*                  (R15) UNRSTD;    /*                               */ 00245000
*               END;                /*                               */ 00246000
*           END;                    /*                               */ 00247000
*         ELSE                      /* NOT FIRST CLOSE ENTRY         */ 00248000
*           ICWENDRQ=OFF;           /* RESET FLAG                    */ 00249000
         B     @RC00228                                            0245 00250000
@RF00228 NI    ICWENDRQ(RWORK1),B'11111110'                        0245 00251000
*         IF ICWVSE=OFF&ICWVNE=OFF THEN/* HAS ANY ENTRY BEEN MADE IN    00252000
*                                      THIS RECORD BESIDES THE DUMMY */ 00253000
@RC00228 TM    ICWVSE(RWORK1),B'00011000'                          0246 00254000
         BNZ   @RF00246                                            0246 00255000
*           CALL SETBASE;           /* SET BASE RBA          @X04SVES*/ 00256000
         BAL   @14,SETBASE                                         0247 00257000
*         IF ICWNOSEG^=ZERO THEN    /* LAST RCD SPN          @X04SVES*/ 00258000
@RF00246 LH    @10,ICWNOSEG(,RWORK1)                               0248 00259000
         LTR   @10,@10                                             0248 00260000
         BZ    @RF00248                                            0248 00261000
*           DO ICWCRSEG=ONE TO ICWNOSEG-ONE;/* YES           @X04SVES*/ 00262000
         LA    @10,1                                               0249 00263000
         B     @DE00249                                            0249 00264000
@DL00249 DS    0H                                                  0250 00265000
*I02:                                                              0250 00266000
*             DO;                   /* IDACALL(IDASPNPT)             */ 00267000
I02      DS    0H                                                  0251 00268000
*               CALL IDASPNPT;      /* EXIT TO IDASPNPT              */ 00269000
         L     @15,@CV00950                                        0251 00270000
         BALR  @14,@15                                             0251 00271000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00272000
         BALR @11,0                                                     00273000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00274000
         USING *,@11                                                    00275000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00276000
         L     @11,=A(@PSTART)                                          00277000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00278000
         USING @PSTART,@11                                              00279000
*             END I02;              /* MAKE SR ENTRY         @X04SVES*/ 00280000
*           END;                    /*                       @X04SVES*/ 00281000
         LA    @10,1                                               0257 00282000
         AH    @10,ICWCRSEG(,RWORK1)                               0257 00283000
@DE00249 STH   @10,ICWCRSEG(,RWORK1)                               0257 00284000
         LH    @07,ICWNOSEG(,RWORK1)                               0257 00285000
         BCTR  @07,0                                               0257 00286000
         CR    @10,@07                                             0257 00287000
         BNH   @DL00249                                            0257 00288000
*I03:                                                              0258 00289000
*         DO;                       /* IDACALL(IDAWR)                */ 00290000
@RF00248 DS    0H                                                  0258 00291000
I03      DS    0H                                                  0259 00292000
*           CALL IDAWR;             /* EXIT TO IDAWR                 */ 00293000
         L     @15,@CV00951                                        0259 00294000
         BALR  @14,@15                                             0259 00295000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00296000
         BALR @11,0                                                     00297000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00298000
         USING *,@11                                                    00299000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00300000
         L     @11,=A(@PSTART)                                          00301000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00302000
         USING @PSTART,@11                                              00303000
*         END I03;                  /* GO WRITE OUT THE BUFFER       */ 00304000
*         RESPECIFY                                                0265 00305000
*          (RWORK1,                                                0265 00306000
*           RWORK2) RSTD;           /*                               */ 00307000
*         DO RWORK2=1 TO AMDNIL;    /* LOOP COVERS ALL LEVELS        */ 00308000
         LA    RWORK2,1                                            0266 00309000
         B     @DE00266                                            0266 00310000
@DL00266 DS    0H                                                  0267 00311000
*           RPARM1=ICWCHN;          /* SAVE NEXT LEVEL               */ 00312000
         L     RPARM1,ICWCHN(,RWORK1)                              0267 00313000
*           IF ICWWAGM=ON THEN      /* DID WE BUILD THE WA           */ 00314000
         TM    ICWWAGM(RWORK1),B'01000000'                         0268 00315000
         BNO   @RF00268                                            0268 00316000
*             DO;                   /* YES                           */ 00317000
*               RESPECIFY                                          0270 00318000
*                (RWORK0) RSTD;     /*                               */ 00319000
*               R1=RWORK1;          /* POINT TO WORK AREA            */ 00320000
         LR    R1,RWORK1                                           0271 00321000
*               RWORK0=ICWLEN;      /* SET LENGTH OF WORK AREA       */ 00322000
         LH    RWORK0,ICWLEN(,RWORK1)                              0272 00323000
*               GEN(FREEMAIN R,LV=(0),A=(1));/* FREE WORK AREA SPACE */ 00324000
         FREEMAIN R,LV=(0),A=(1)                                        00325000
*               RRPL=PLHCRPL;       /* RESTORE RPL REGISTER          */ 00326000
         L     RRPL,PLHCRPL(,RPLH)                                 0274 00327000
*               RESPECIFY                                          0275 00328000
*                (RWORK0) UNRSTD;   /*                               */ 00329000
*             END;                  /*                               */ 00330000
*           RWORK1=RPARM1;          /* MOVE TO NEXT WA LEVEL         */ 00331000
@RF00268 LR    RWORK1,RPARM1                                       0277 00332000
*         END;                      /*                               */ 00333000
         AL    RWORK2,@CF00053                                     0278 00334000
@DE00266 L     @10,AMBDSB(,RAMB)                                   0278 00335000
         LH    @10,AMDNIL(,@10)                                    0278 00336000
         CLR   RWORK2,@10                                          0278 00337000
         BNH   @DL00266                                            0278 00338000
*         RWORK1=AMBIWA;            /* POINT BACK TO LVL ONE         */ 00339000
         L     RWORK1,AMBIWA(,RAMB)                                0279 00340000
*         RAMB=AMBLDTA;             /* RESET AMB FOR CALLER          */ 00341000
         L     @10,RPLDACB(,RRPL)                                  0280 00342000
         L     @10,ACBAMBL(,@10)                                   0280 00343000
         L     RAMB,AMBLDTA(,@10)                                  0280 00344000
*         RESPECIFY                                                0281 00345000
*          (R15) RSTD;              /*                               */ 00346000
*         R15=ZERO;                 /* CLEAR RETURN REG              */ 00347000
         SLR   R15,R15                                             0282 00348000
*         CALL EXIT;                /* RETURN                @X04SVES*/ 00349000
         BAL   @14,EXIT                                            0283 00350000
*         RESPECIFY                                                0284 00351000
*          (RWORK2,                                                0284 00352000
*           R15) UNRSTD;            /*                               */ 00353000
*       END;                        /* ENTRY REQUESTS BUFFER BE    0285 00354000
*                                      WRITTEN OUT AND UPPER LEVELS     00355000
*                                      OF INDEX UPDATED IF NECESSARY */ 00356000
*I04:                                                              0286 00357000
*   DO;                             /* IDACALL(IDAWR)                */ 00358000
@RF00224 DS    0H                                                  0286 00359000
@RC00190 DS    0H                                                  0286 00360000
I04      DS    0H                                                  0287 00361000
*     CALL IDAWR;                   /* EXIT TO IDAWR                 */ 00362000
         L     @15,@CV00951                                        0287 00363000
         BALR  @14,@15                                             0287 00364000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00365000
         BALR @11,0                                                     00366000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00367000
         USING *,@11                                                    00368000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00369000
         L     @11,=A(@PSTART)                                          00370000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00371000
         USING @PSTART,@11                                              00372000
*   END I04;                        /* WRITE OUT INDEX RECORD        */ 00373000
*   RESPECIFY                                                      0293 00374000
*    (RWORK1) RSTD;                 /*                               */ 00375000
*ICA5:                              /*                               */ 00376000
*I05:                                                              0294 00377000
*   DO;                             /* IDACALL(IDAAQR)               */ 00378000
ICA5     DS    0H                                                  0294 00379000
I05      DS    0H                                                  0295 00380000
*     CALL IDAAQR;                  /* EXIT TO IDAAQR                */ 00381000
         L     @15,@CV00945                                        0295 00382000
         BALR  @14,@15                                             0295 00383000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00384000
         BALR @11,0                                                     00385000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00386000
         USING *,@11                                                    00387000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00388000
         L     @11,=A(@PSTART)                                          00389000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00390000
         USING @PSTART,@11                                              00391000
*   END I05;                        /* GET AN RBA                    */ 00392000
*   RESPECIFY                                                      0301 00393000
*    (RWORK1) RSTD;                 /*                               */ 00394000
*   CALL INTNEWRC;                  /* INITIALIZE A BUFFER           */ 00395000
         BAL   @14,INTNEWRC                                        0302 00396000
*   IF ICWREQ^=ZERO THEN            /* IS THIS 1ST TIME HERE         */ 00397000
         CLI   ICWREQ(RWORK1),0                                    0303 00398000
         BE    @RF00303                                            0303 00399000
*     DO;                           /* YES                           */ 00400000
*       ICWREQ=ZERO;                /* AVOID THIS ON NEXT TIME       */ 00401000
         MVI   ICWREQ(RWORK1),X'00'                                0305 00402000
*       RESPECIFY                                                  0306 00403000
*        (RWORK2) RSTD;             /*                               */ 00404000
*       RWORK2=ICWBUFC->BUFCBAD;    /* POINT TO INDEX BUFFER         */ 00405000
         L     @10,ICWBUFC(,RWORK1)                                0307 00406000
         L     RWORK2,BUFCBAD(,@10)                                0307 00407000
*       CALL SETBASE;               /* SET BASE RBA          @X04SVES*/ 00408000
         BAL   @14,SETBASE                                         0308 00409000
*     END;                          /*                               */ 00410000
*   ELSE                            /*                               */ 00411000
*     CALL IDAIST;                  /* PLACE ENTRY WHICH DID NOT FIT */ 00412000
         B     @RC00303                                            0310 00413000
@RF00303 L     @15,@CA00988                                        0310 00414000
         BALR  @14,@15                                             0310 00415000
*I06:                                                              0311 00416000
*   DO;                             /* IDACALL(IDAWR)                */ 00417000
@RC00303 DS    0H                                                  0311 00418000
I06      DS    0H                                                  0312 00419000
*     CALL IDAWR;                   /* EXIT TO IDAWR                 */ 00420000
         L     @15,@CV00951                                        0312 00421000
         BALR  @14,@15                                             0312 00422000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00423000
         BALR @11,0                                                     00424000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00425000
         USING *,@11                                                    00426000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00427000
         L     @11,=A(@PSTART)                                          00428000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00429000
         USING @PSTART,@11                                              00430000
*   END I06;                        /* WRITE OUT THE RECORD          */ 00431000
*   RESPECIFY                                                      0318 00432000
*    (RWORK1) RSTD;                 /*                               */ 00433000
*   RPARM1=ICWPRBA;                 /* PICK UP RBA OF PREVIOUS       */ 00434000
         L     RPARM1,ICWPRBA(,RWORK1)                             0319 00435000
*I07:                                                              0320 00436000
*   DO;                             /* IDACALL(IDAR)                 */ 00437000
I07      DS    0H                                                  0321 00438000
*     CALL IDAR;                    /* EXIT TO IDAR                  */ 00439000
         L     @15,@CV00949                                        0321 00440000
         BALR  @14,@15                                             0321 00441000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00442000
         BALR @11,0                                                     00443000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00444000
         USING *,@11                                                    00445000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00446000
         L     @11,=A(@PSTART)                                          00447000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00448000
         USING @PSTART,@11                                              00449000
*   END I07;                        /* INDEX RECD, READ IT           */ 00450000
*   RESPECIFY                                                      0327 00451000
*    (RWORK1,                                                      0327 00452000
*     RWORK2) RSTD;                 /*                               */ 00453000
*   RWORK2=ICWBUFC->BUFCBAD;        /* POINT TO BUFFER               */ 00454000
         L     @10,ICWBUFC(,RWORK1)                                0328 00455000
         L     RWORK2,BUFCBAD(,@10)                                0328 00456000
*   RWORK2->IXHHP=ICWCRBA;          /* SET HORIZ. PTR. IN HDR.       */ 00457000
         L     @10,ICWCRBA(,RWORK1)                                0329 00458000
         ST    @10,IXHHP(,RWORK2)                                  0329 00459000
*I08:                                                              0330 00460000
*   DO;                             /* IDACALL(IDAER)                */ 00461000
I08      DS    0H                                                  0331 00462000
*     CALL IDAER;                   /* EXIT TO IDAER                 */ 00463000
         L     @15,@CV00952                                        0331 00464000
         BALR  @14,@15                                             0331 00465000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00466000
         BALR @11,0                                                     00467000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00468000
         USING *,@11                                                    00469000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00470000
         L     @11,=A(@PSTART)                                          00471000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00472000
         USING @PSTART,@11                                              00473000
*   END I08;                        /* GO ERASE DUMMY ENTRY          */ 00474000
*I09:                                                              0337 00475000
*   DO;                             /* IDACALL(IDAWR)                */ 00476000
I09      DS    0H                                                  0338 00477000
*     CALL IDAWR;                   /* EXIT TO IDAWR                 */ 00478000
         L     @15,@CV00951                                        0338 00479000
         BALR  @14,@15                                             0338 00480000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00481000
         BALR @11,0                                                     00482000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00483000
         USING *,@11                                                    00484000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00485000
         L     @11,=A(@PSTART)                                          00486000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00487000
         USING @PSTART,@11                                              00488000
*   END I09;                        /* THEN GO WRITE IT              */ 00489000
*   RESPECIFY                                                      0344 00490000
*    (RWORK1) RSTD;                 /*                               */ 00491000
*   IF ICWLN=AMDNIL THEN            /* IS THIS TOP INDEX LEVEL       */ 00492000
         L     @10,AMBDSB(,RAMB)                                   0345 00493000
         CLC   ICWLN(2,RWORK1),AMDNIL(@10)                         0345 00494000
         BNE   @RF00345                                            0345 00495000
*     DO;                           /* YES                           */ 00496000
*       IF ICWCHN=ZERO THEN         /* IS THERE A WORKAREA AT NEXT 0347 00497000
*                                      HIGHER LEVEL                  */ 00498000
         L     @10,ICWCHN(,RWORK1)                                 0347 00499000
         LTR   @10,@10                                             0347 00500000
         BNZ   @RF00347                                            0347 00501000
*         DO;                       /* NO                            */ 00502000
*           RESPECIFY                                              0349 00503000
*            (RWORK2,                                              0349 00504000
*             R15) RSTD;            /*                               */ 00505000
*           RPARM1=ICWLEN;          /* SET LENGTH OF WORK AREA       */ 00506000
         LH    RPARM1,ICWLEN(,RWORK1)                              0350 00507000
*           RWORK2=ADDR(ICWCHN);    /* POINT TO CHAIN FIELD          */ 00508000
         LA    RWORK2,ICWCHN(,RWORK1)                              0351 00509000
*           R1=ADDR(PLHSAVE1);      /* POINT TO PARAM. AREA          */ 00510000
         LA    R1,PLHSAVE1(,RPLH)                                  0352 00511000
*           GEN(GETMAIN EC,LV=(RPARM1),A=(RWORK2),SP=0,MF=(E,(1)));/**/ 00512000
         GETMAIN EC,LV=(RPARM1),A=(RWORK2),SP=0,MF=(E,(1))              00513000
*           IF R15^=ZERO THEN       /* WAS SPACE AVAILABLE           */ 00514000
         LTR   R15,R15                                             0354 00515000
         BZ    @RF00354                                            0354 00516000
*             DO;                   /* NO                            */ 00517000
*               RPLERREG='08'X;     /*                               */ 00518000
         MVI   RPLERREG(RRPL),X'08'                                0356 00519000
*               RPLERRCD=RPLNOVRT;  /*                               */ 00520000
         MVI   RPLERRCD(RRPL),X'28'                                0357 00521000
*               R15=IOERR;          /* SET REG 15 TO ERROR           */ 00522000
         LA    R15,4                                               0358 00523000
*               RAMB=AMBLDTA;       /* RESTORE AMB REG TO DATA       */ 00524000
         L     @14,RPLDACB(,RRPL)                                  0359 00525000
         L     @14,ACBAMBL(,@14)                                   0359 00526000
         L     RAMB,AMBLDTA(,@14)                                  0359 00527000
*               CALL EXIT;          /* RETURN                @X04SVES*/ 00528000
         BAL   @14,EXIT                                            0360 00529000
*               RESPECIFY                                          0361 00530000
*                (R15) UNRSTD;      /*                               */ 00531000
*             END;                  /*                               */ 00532000
*           RESPECIFY                                              0363 00533000
*            (RWORK3,                                              0363 00534000
*             RWORK4,                                              0363 00535000
*             RWORK5) RSTD;         /*                               */ 00536000
@RF00354 DS    0H                                                  0364 00537000
*           RWORK2=ICWCHN;          /* POINT TO NEW BLOCK            */ 00538000
         L     RWORK2,ICWCHN(,RWORK1)                              0364 00539000
*           RWORK5=ZERO;            /* SET PADDING CHARACTER         */ 00540000
         SLR   RWORK5,RWORK5                                       0365 00541000
*           RWORK3=ICWLEN;          /* SET LENGTH                    */ 00542000
         LH    RWORK3,ICWLEN(,RWORK1)                              0366 00543000
*           GEN(MVCL RWORK2,RWORK4);/* CLEAR THE BLOCK               */ 00544000
         MVCL RWORK2,RWORK4                                             00545000
*           RESPECIFY                                              0368 00546000
*            (RWORK2,                                              0368 00547000
*             RWORK3,                                              0368 00548000
*             RWORK4,                                              0368 00549000
*             RWORK5) UNRSTD;       /*                               */ 00550000
*           R1=ICWCHN;              /* BASE TO NEW WORK AREA         */ 00551000
         L     R1,ICWCHN(,RWORK1)                                  0369 00552000
*           R1->ICWWAGM=ON;         /* MARK AS NOT AN OPEN BLK       */ 00553000
         OI    ICWWAGM(R1),B'01000000'                             0370 00554000
*           R1->ICWLEN=ICWLEN;      /* SET LENGTH FIELD IN WA        */ 00555000
         LH    @10,ICWLEN(,RWORK1)                                 0371 00556000
         STH   @10,ICWLEN(,R1)                                     0371 00557000
*           R1->ICWID=ICWID;        /* SET ID FIELD IN WA            */ 00558000
         MVC   ICWID(1,R1),ICWID(RWORK1)                           0372 00559000
*           RRPL=PLHCRPL;           /* RESTORE RPL REGISTER          */ 00560000
         L     RRPL,PLHCRPL(,RPLH)                                 0373 00561000
*         END;                      /*                               */ 00562000
*     END;                          /*                               */ 00563000
@RF00347 DS    0H                                                  0376 00564000
*   RESPECIFY                                                      0376 00565000
*    (RWORK2,                                                      0376 00566000
*     RWORK3) RSTD;                 /*                               */ 00567000
@RF00345 DS    0H                                                  0377 00568000
*   RWORK2=ICWLN;                   /* SAVE LEVEL NO.                */ 00569000
         LH    RWORK2,ICWLN(,RWORK1)                               0377 00570000
*   RWORK1=ICWCHN;                  /* MOVE TO NEXT LEVEL            */ 00571000
         L     RWORK1,ICWCHN(,RWORK1)                              0378 00572000
*   RWORK3=AMBIWA;                  /* ADDRESS TO LVL 1 WA           */ 00573000
         L     RWORK3,AMBIWA(,RAMB)                                0379 00574000
*   RWORK3->ICWADD=RWORK1;          /* SET NEW CURRENT LVL           */ 00575000
         ST    RWORK1,ICWADD(,RWORK3)                              0380 00576000
*   IF ICWLN=ZERO THEN              /* WAS WA PREVIOUSLY USED        */ 00577000
         LH    @10,ICWLN(,RWORK1)                                  0381 00578000
         LTR   @10,@10                                             0381 00579000
         BNZ   @RF00381                                            0381 00580000
*     DO;                           /* NO                            */ 00581000
*       ICWLN=RWORK2+ONE;           /* PUT IN NEW LEVEL NO.          */ 00582000
         LA    @10,1                                               0383 00583000
         ALR   @10,RWORK2                                          0383 00584000
         STH   @10,ICWLN(,RWORK1)                                  0383 00585000
*       RESPECIFY                                                  0384 00586000
*        (RWORK2,                                                  0384 00587000
*         RWORK3) UNRSTD;           /*                               */ 00588000
*       ICWNEST=AMDNEST;            /* INITIALIZE NO. ENTRYS PER   0385 00589000
*                                      SECTION                       */ 00590000
         L     @15,AMBDSB(,RAMB)                                   0385 00591000
         LH    @00,AMDNEST(,@15)                                   0385 00592000
         STH   @00,ICWNEST(,RWORK1)                                0385 00593000
*       AMDNIL=ICWLN;               /* SHOW HI LEVEL IN AMDSB        */ 00594000
         STH   @10,AMDNIL(,@15)                                    0386 00595000
*I10:                                                              0387 00596000
*       DO;                         /* IDACALL(IDAAQR)               */ 00597000
I10      DS    0H                                                  0388 00598000
*         CALL IDAAQR;              /* EXIT TO IDAAQR                */ 00599000
         L     @15,@CV00945                                        0388 00600000
         BALR  @14,@15                                             0388 00601000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00602000
         BALR @11,0                                                     00603000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00604000
         USING *,@11                                                    00605000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00606000
         L     @11,=A(@PSTART)                                          00607000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00608000
         USING @PSTART,@11                                              00609000
*       END I10;                    /*                               */ 00610000
*       RESPECIFY                                                  0394 00611000
*        (RWORK1) RSTD;             /*                               */ 00612000
*       CALL INTNEWRC;              /* GO INITIALIZE A NEW BUF       */ 00613000
         BAL   @14,INTNEWRC                                        0395 00614000
*       AMDHLRBA=ICWCRBA;           /* SET HI LVL RBA IN AMDSB       */ 00615000
         L     @10,AMBDSB(,RAMB)                                   0396 00616000
         L     @00,ICWCRBA(,RWORK1)                                0396 00617000
         ST    @00,AMDHLRBA(,@10)                                  0396 00618000
*       IF AMBLCAT=OFF THEN         /* CREATING CATALOG              */ 00619000
         L     @10,RPLDACB(,RRPL)                                  0397 00620000
         L     @10,ACBAMBL(,@10)                                   0397 00621000
         TM    AMBLCAT(@10),B'00000010'                            0397 00622000
         BNZ   @RF00397                                            0397 00623000
*         DO;                       /* NO                            */ 00624000
*           PLHEOVR=AMBEOVUC;       /* SET CODE TO UPDATE THE CATALOG*/ 00625000
         MVI   PLHEOVR(RPLH),B'00000100'                           0399 00626000
*I11:                                                              0400 00627000
*           DO;                     /* IDACALL(IDAEOVIF)             */ 00628000
I11      DS    0H                                                  0401 00629000
*             CALL IDAEOVIF;        /* EXIT TO IDAEOVIF              */ 00630000
         L     @15,@CV00946                                        0401 00631000
         BALR  @14,@15                                             0401 00632000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00633000
         BALR @11,0                                                     00634000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00635000
         USING *,@11                                                    00636000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00637000
         L     @11,=A(@PSTART)                                          00638000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00639000
         USING @PSTART,@11                                              00640000
*           END I11;                /* AND GO TO END OF VOL.         */ 00641000
*           RFY                                                    0407 00642000
*            (RWORK1,                                              0407 00643000
*             RWORK2) RSTD;         /*                       @X04SVES*/ 00644000
*           RWORK1=AMBIWA;          /* POINT TO FIRST WORK AREA    0408 00645000
*                                                            @X04SVES*/ 00646000
         L     RWORK1,AMBIWA(,RAMB)                                0408 00647000
*           RWORK2=ICWADD;          /* PICK UP CURRENT POINTER     0409 00648000
*                                                            @X04SVES*/ 00649000
         L     RWORK2,ICWADD(,RWORK1)                              0409 00650000
*           RWORK1=RWORK2;          /* REESTABLISH BASE OF WORK AREA    00651000
*                                                            @X04SVES*/ 00652000
         LR    RWORK1,RWORK2                                       0410 00653000
*           RFY                                                    0411 00654000
*             RWORK2 RSTD;          /*                       @X04SVES*/ 00655000
*         END;                      /*                               */ 00656000
*     END;                          /*                               */ 00657000
*   ELSE                            /* A RECORD WAS WRITTEN          */ 00658000
*     DO;                           /* AT THIS LEVEL                 */ 00659000
         B     @RC00381                                            0414 00660000
@RF00381 DS    0H                                                  0415 00661000
*       RPARM1=ICWCRBA;             /* GET CURRENT RECORD RBA        */ 00662000
         L     RPARM1,ICWCRBA(,RWORK1)                             0415 00663000
*I12:                                                              0416 00664000
*       DO;                         /* IDACALL(IDAR)                 */ 00665000
I12      DS    0H                                                  0417 00666000
*         CALL IDAR;                /* EXIT TO IDAR                  */ 00667000
         L     @15,@CV00949                                        0417 00668000
         BALR  @14,@15                                             0417 00669000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00670000
         BALR @11,0                                                     00671000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00672000
         USING *,@11                                                    00673000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00674000
         L     @11,=A(@PSTART)                                          00675000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00676000
         USING @PSTART,@11                                              00677000
*       END I12;                    /* AND READ IT                   */ 00678000
*       RESPECIFY                                                  0423 00679000
*        (RWORK1,                                                  0423 00680000
*         RWORK2,                                                  0423 00681000
*         RWORK3,                                                  0423 00682000
*         RWORK4,                                                  0423 00683000
*         RWORK5) RSTD;             /*                               */ 00684000
*       RWORK4=ADDR(ICWKEY1);       /* SET 'FROM' TO PRES. KEY       */ 00685000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0424 00686000
*       RWORK2=RWORK4+AMDKEYLN;     /* SET 'TO' TO PREV. KEY         */ 00687000
         L     @10,AMBDSB(,RAMB)                                   0425 00688000
         LR    RWORK2,RWORK4                                       0425 00689000
         AH    RWORK2,AMDKEYLN(,@10)                               0425 00690000
*       RWORK3=ICWKEY1L;            /* SET LENGTH OF KEY             */ 00691000
         LH    RWORK3,ICWKEY1L(,RWORK1)                            0426 00692000
*       ICWKEY2L=RWORK3;            /* PRES. LEN. TO PREV. LEN       */ 00693000
         STH   RWORK3,ICWKEY2L(,RWORK1)                            0427 00694000
*       RWORK5=RWORK3;              /*                               */ 00695000
         LR    RWORK5,RWORK3                                       0428 00696000
*       GEN(MVCL  RWORK2,RWORK4);   /* MOVE PRES. TO PREVIOUS        */ 00697000
         MVCL  RWORK2,RWORK4                                            00698000
*       ICWCERP=ICWCER;             /* SAVE REAR COMPRESSION         */ 00699000
         IC    @10,ICWCER(,RWORK1)                                 0430 00700000
         STC   @10,ICWCERP(,RWORK1)                                0430 00701000
*       RESPECIFY                                                  0431 00702000
*        (RWORK2,                                                  0431 00703000
*         RWORK3,                                                  0431 00704000
*         RWORK4,                                                  0431 00705000
*         RWORK5) UNRSTD;           /*                               */ 00706000
*     END;                          /*                               */ 00707000
*   RPARM1=AMBIWA;                  /* POINT TO LOWEST LEVEL         */ 00708000
@RC00381 L     RPARM1,AMBIWA(,RAMB)                                0433 00709000
*   DO WHILE RPARM1->ICWLN^=ICWLN-ONE;/* FIND NEXT LOWER WA          */ 00710000
         B     @DE00434                                            0434 00711000
@DL00434 DS    0H                                                  0435 00712000
*     RPARM1=RPARM1->ICWCHN;        /* RPARM1 WILL ADDRESS THE       */ 00713000
         L     RPARM1,ICWCHN(,RPARM1)                              0435 00714000
*   END;                            /* WA AT THE LOWER LEVEL         */ 00715000
@DE00434 LH    @10,ICWLN(,RWORK1)                                  0436 00716000
         BCTR  @10,0                                               0436 00717000
         CH    @10,ICWLN(,RPARM1)                                  0436 00718000
         BNE   @DL00434                                            0436 00719000
*   RESPECIFY                                                      0437 00720000
*    (RWORK0,                                                      0437 00721000
*     RWORK2,                                                      0437 00722000
*     RWORK3,                                                      0437 00723000
*     RWORK4,                                                      0437 00724000
*     RWORK5) RSTD;                 /*                               */ 00725000
*   RWORK0=ZERO;                    /*                               */ 00726000
         SLR   RWORK0,RWORK0                                       0438 00727000
*   RWORK2=RWORK1;                  /* POINT RWORK1 AT THE           */ 00728000
         LR    RWORK2,RWORK1                                       0439 00729000
*   RWORK1=RPARM1;                  /* LOWER LEVEL                   */ 00730000
         LR    RWORK1,RPARM1                                       0440 00731000
*   IF ICWWNF=ON THEN               /* IS THIS A NO FIT CASE         */ 00732000
         TM    ICWWNF(RWORK1),B'10000000'                          0441 00733000
         BNO   @RF00441                                            0441 00734000
*     DO;                           /* YES                           */ 00735000
*       RWORK0=AMDKEYLN;            /* SET FOR PREVIOUS KEY          */ 00736000
         L     @10,AMBDSB(,RAMB)                                   0443 00737000
         LH    RWORK0,AMDKEYLN(,@10)                               0443 00738000
*       RWORK5=ICWCERP;             /* GET LENGTH OF PREV. KEY       */ 00739000
         SLR   RWORK5,RWORK5                                       0444 00740000
         IC    RWORK5,ICWCERP(,RWORK1)                             0444 00741000
*       ICWWNF=OFF;                 /* HOUSEKEEP FLAG                */ 00742000
         NI    ICWWNF(RWORK1),B'01111111'                          0445 00743000
*     END;                          /*                               */ 00744000
*   ELSE                            /* NOT A NO FIT CASE             */ 00745000
*     RWORK5=ICWCER;                /* SET LENGTH OF CURR. KEY       */ 00746000
         B     @RC00441                                            0447 00747000
@RF00441 SLR   RWORK5,RWORK5                                       0447 00748000
         IC    RWORK5,ICWCER(,RWORK1)                              0447 00749000
*   RWORK4=ADDR(ICWKEY1)+RWORK0;    /* SET 'FROM' ADDRESS            */ 00750000
@RC00441 LA    RWORK4,ICWKEY1(,RWORK1)                             0448 00751000
         ALR   RWORK4,RWORK0                                       0448 00752000
*   RESPECIFY                                                      0449 00753000
*    (RWORK0) UNRSTD;               /*                               */ 00754000
*   RWORK1=RWORK2;                  /* SET RWORK1 TO CURR. LVL       */ 00755000
         LR    RWORK1,RWORK2                                       0450 00756000
*   RWORK2=ADDR(ICWKEY1);           /* TO ADD. = CURR. PRES          */ 00757000
         LA    RWORK2,ICWKEY1(,RWORK1)                             0451 00758000
*   RWORK3=RWORK5;                  /* SET LENGTH                    */ 00759000
         LR    RWORK3,RWORK5                                       0452 00760000
*   ICWKEY1L=RWORK5;                /* SET KEY LENGTH IN WA          */ 00761000
         STH   RWORK5,ICWKEY1L(,RWORK1)                            0453 00762000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE KEY UP ONE LVL           */ 00763000
         MVCL  RWORK2,RWORK4                                            00764000
*   RESPECIFY                                                      0455 00765000
*    (RWORK2,                                                      0455 00766000
*     RWORK3,                                                      0455 00767000
*     RWORK4,                                                      0455 00768000
*     RWORK5) UNRSTD;               /*                               */ 00769000
*   CALL IDAIST;                    /* PLACE ENTRY IN BUFFER         */ 00770000
         L     @15,@CA00988                                        0456 00771000
         BALR  @14,@15                                             0456 00772000
*   IF ICWWNF=ON THEN               /* DID THE ENTRY FIT             */ 00773000
         TM    ICWWNF(RWORK1),B'10000000'                          0457 00774000
         BNO   @RF00457                                            0457 00775000
*     DO;                           /* NO                            */ 00776000
*       ICWBUFC->BUFCMW=OFF;        /* TURN OFF MUST WRITE FLG       */ 00777000
         L     @10,ICWBUFC(,RWORK1)                                0459 00778000
         NI    BUFCMW(@10),B'01111111'                             0459 00779000
*I13:                                                              0460 00780000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00781000
I13      DS    0H                                                  0461 00782000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00783000
         L     @15,@CV00947                                        0461 00784000
         BALR  @14,@15                                             0461 00785000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00786000
         BALR @11,0                                                     00787000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00788000
         USING *,@11                                                    00789000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00790000
         L     @11,=A(@PSTART)                                          00791000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00792000
         USING @PSTART,@11                                              00793000
*       END I13;                    /* FREE THE BFR          @X04SVLP*/ 00794000
*       RESPECIFY                                                  0467 00795000
*        (RWORK1,                                                  0467 00796000
*         RWORK2) RSTD;             /*                               */ 00797000
*       RWORK1=AMBIWA;              /* FIRST ICWA            @X04SVES*/ 00798000
         L     RWORK1,AMBIWA(,RAMB)                                0468 00799000
*       RWORK2=ICWADD;              /* OBTAIN CURRENT ICWA   @X04SVES*/ 00800000
         L     RWORK2,ICWADD(,RWORK1)                              0469 00801000
*       RWORK1=RWORK2;              /* SET BASE              @X04SVES*/ 00802000
         LR    RWORK1,RWORK2                                       0470 00803000
*       RESPECIFY                                                  0471 00804000
*         RWORK2 UNRSTD;            /*                       @X04SVES*/ 00805000
*       GO TO ICA5;                 /* BACK TO MOVE UP A LEVEL       */ 00806000
         B     ICA5                                                0472 00807000
*     END;                                                         0473 00808000
*   ELSE                            /* THE RECORD FIT                */ 00809000
*     DO;                           /*                               */ 00810000
@RF00457 DS    0H                                                  0475 00811000
*I14:                                                              0475 00812000
*       DO;                         /* IDACALL(IDAWR)                */ 00813000
I14      DS    0H                                                  0476 00814000
*         CALL IDAWR;               /* EXIT TO IDAWR                 */ 00815000
         L     @15,@CV00951                                        0476 00816000
         BALR  @14,@15                                             0476 00817000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00818000
         BALR @11,0                                                     00819000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00820000
         USING *,@11                                                    00821000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00822000
         L     @11,=A(@PSTART)                                          00823000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00824000
         USING @PSTART,@11                                              00825000
*       END I14;                    /* WRITE OUT THE RECORD          */ 00826000
*       RESPECIFY                                                  0482 00827000
*        (RWORK1) RSTD;             /*                               */ 00828000
*       RWORK1=AMBIWA;              /* POINT BACK TO SS LEVEL        */ 00829000
         L     RWORK1,AMBIWA(,RAMB)                                0483 00830000
*       ICWADD=RWORK1;              /* SAVE LEVEL                    */ 00831000
         ST    RWORK1,ICWADD(,RWORK1)                              0484 00832000
*       CALL INTNEWRC;              /* GET AND INIT A BUFFER         */ 00833000
         BAL   @14,INTNEWRC                                        0485 00834000
*       RESPECIFY                                                  0486 00835000
*        (R15) RSTD;                /*                               */ 00836000
*       R15=ZERO;                   /*                               */ 00837000
         SLR   R15,R15                                             0487 00838000
*       RAMB=AMBLDTA;               /*                               */ 00839000
         L     @14,RPLDACB(,RRPL)                                  0488 00840000
         L     @14,ACBAMBL(,@14)                                   0488 00841000
         L     RAMB,AMBLDTA(,@14)                                  0488 00842000
*       CALL EXIT;                  /* RETURN                @X04SVES*/ 00843000
         BAL   @14,EXIT                                            0489 00844000
*     END;                          /*                               */ 00845000
*   RESPECIFY                                                      0491 00846000
*    (R15) UNRSTD;                  /*                               */ 00847000
*                                                                  0492 00848000
*/*                                                                  */ 00849000
*/*    INTNEWRC SUBROUTINE                                           */ 00850000
*/*       FUNCTION -                                                 */ 00851000
*/*        OBTAINS A BUFFER FOR A NEW RECORD.                        */ 00852000
*/*        CLEARS THE BUFFER TO ZEROS.                               */ 00853000
*/*        INITIALIZES HEADER.                                       */ 00854000
*/*        INITIALIZES DUMMY.                                        */ 00855000
*/*        INITIALIZES CIDF AND RDF.                                 */ 00856000
*/*        INITIALIZES FREE CI POINTERS, IF SEQ SET.                 */ 00857000
*/*       INPUT -                                                    */ 00858000
*/*        RWORK1 = POINTER TO CURRENT WORK AREA.                    */ 00859000
*/*       OUTPUT- NONE                                               */ 00860000
*/*       RETURN-                                                    */ 00861000
*/*        TO CALLER IF NO ERRORS WERE ENCOUNTERED.                  */ 00862000
*/*        TO CALLER OF INDEX CREATE IN CASE OF I/O ERROR.           */ 00863000
*/*                                                                  */ 00864000
*                                                                  0492 00865000
*INTNEWRC:                                                         0492 00866000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 00867000
         B     @PB00002                                            0492 00868000
INTNEWRC DS    0H                                                  0493 00869000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 00870000
         IDASVR14                                                       00871000
*I15:                                                              0494 00872000
*   DO;                             /* IDACALL(IDAGNFL)              */ 00873000
I15      DS    0H                                                  0495 00874000
*     CALL IDAGNFL;                 /* EXIT TO IDAGNFL               */ 00875000
         L     @15,@CV00948                                        0495 00876000
         BALR  @14,@15                                             0495 00877000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00878000
         BALR @11,0                                                     00879000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00880000
         USING *,@11                                                    00881000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00882000
         L     @11,=A(@PSTART)                                          00883000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00884000
         USING @PSTART,@11                                              00885000
*   END I15;                        /* GET A BUFFER                  */ 00886000
*   RESPECIFY                                                      0501 00887000
*    (RWORK1,                                                      0501 00888000
*     RWORK2) RSTD;                 /*                               */ 00889000
*   RWORK1=AMBIWA;                  /* POINT TO FIRST W.A.           */ 00890000
         L     RWORK1,AMBIWA(,RAMB)                                0502 00891000
*   RWORK2=ICWADD;                  /* PICK UP SAVED POINTER         */ 00892000
         L     RWORK2,ICWADD(,RWORK1)                              0503 00893000
*   RWORK1=RWORK2;                  /* REESTABLISH BASE              */ 00894000
         LR    RWORK1,RWORK2                                       0504 00895000
*   ICWBUFC=RBUFC;                  /* SAVE BUFC POINTER             */ 00896000
         ST    RBUFC,ICWBUFC(,RWORK1)                              0505 00897000
*   RPARM1=ICWCRBA;                 /* GET CURRENT RBA               */ 00898000
         L     RPARM1,ICWCRBA(,RWORK1)                             0506 00899000
*   BUFCVAL=ON;                     /* MARK BUFFER VALID             */ 00900000
         L     @10,ICWBUFC(,RWORK1)                                0507 00901000
         OI    BUFCVAL(@10),B'00000100'                            0507 00902000
*   BUFCDDDD=RPARM1;                /* SET RBA TO CURRENT            */ 00903000
         ST    RPARM1,BUFCDDDD(,@10)                               0508 00904000
*   DO;                             /* SET UPDATED BFR               */ 00905000
*     BUFCORBA=BUFCDDDD;                                           0510 00906000
         L     @07,ICWBUFC(,RWORK1)                                0510 00907000
         L     @07,BUFCDDDD(,@07)                                  0510 00908000
         ST    @07,BUFCORBA(,@10)                                  0510 00909000
*     BUFCMW=ON;                                                   0511 00910000
         OI    BUFCMW(@10),B'10000000'                             0511 00911000
*   END;                            /* SET MUST WRITE FLAG           */ 00912000
*   BUFXIRBA=RPARM1;                /* SET XCL RBA           @X04SVES*/ 00913000
         ST    RPARM1,BUFXIRBA(,@10)                               0513 00914000
*   BUFCEXC=ON;                     /* SET XCL CTL ON        @X04SVES*/ 00915000
         OI    BUFCEXC(@10),B'00000010'                            0514 00916000
*   RESPECIFY                                                      0515 00917000
*    (RWORK3,                                                      0515 00918000
*     RWORK4,                                                      0515 00919000
*     RWORK5) RSTD;                 /* PROTECT REGISTERS             */ 00920000
*   RWORK2=RBUFC->BUFCBAD;          /* POINT TO BUFFER               */ 00921000
         L     RWORK2,BUFCBAD(,RBUFC)                              0516 00922000
*   RWORK3=AMDCINV;                 /* SET LENGTH                    */ 00923000
         L     @10,AMBDSB(,RAMB)                                   0517 00924000
         L     RWORK3,AMDCINV(,@10)                                0517 00925000
*   RWORK5=ZERO;                    /* ESTABLISH FILL CHAR.          */ 00926000
         SLR   RWORK5,RWORK5                                       0518 00927000
*   GEN(MVCL  RWORK2,RWORK4);       /* ZERO OUT BUFFER               */ 00928000
         MVCL  RWORK2,RWORK4                                            00929000
*   RESPECIFY                                                      0520 00930000
*    (RWORK3,                                                      0520 00931000
*     RWORK4,                                                      0520 00932000
*     RWORK5) UNRSTD;               /*                               */ 00933000
*   RWORK2=RBUFC->BUFCBAD;          /* POINT TO BUFFER               */ 00934000
         L     RWORK2,BUFCBAD(,RBUFC)                              0521 00935000
*   RESPECIFY                                                      0522 00936000
*     IDAIXH BASED(RWORK2);         /* SET BASE FOR HEADER           */ 00937000
*   IXHLL=AMDCINV-LENGTH(IDACIDF)-  /* SET RECORD LENGTH IN          */ 00938000
*       LENGTH(IDARDF);             /* HEADER                        */ 00939000
         L     @10,AMBDSB(,RAMB)                                   0523 00940000
         L     @10,AMDCINV(,@10)                                   0523 00941000
         SL    @10,@CF00199                                        0523 00942000
         STH   @10,IXHLL(,RWORK2)                                  0523 00943000
*   IF ICWLN=ICWSS THEN             /* IS THIS SEQ SET LEVEL         */ 00944000
         CLC   ICWLN(2,RWORK1),@CH00053                            0524 00945000
         BNE   @RF00524                                            0524 00946000
*     DO;                           /* YES                           */ 00947000
*       RESPECIFY                                                  0526 00948000
*        (RWORK0) RSTD;             /*                               */ 00949000
*       RWORK0=AMBLDTA->AMBDSB->AMDCIPCA;/* GET NO. CI/CA            */ 00950000
         L     @10,RPLDACB(,RRPL)                                  0527 00951000
         L     @10,ACBAMBL(,@10)                                   0527 00952000
         L     @10,AMBLDTA(,@10)                                   0527 00953000
         L     @10,AMBDSB(,@10)                                    0527 00954000
         LH    RWORK0,AMDCIPCA(,@10)                               0527 00955000
*       IF RWORK0^>T56 THEN         /* WHEN CI/CA IS 256 OR          */ 00956000
         CL    RWORK0,@CF00958                                     0528 00957000
         BH    @RF00528                                            0528 00958000
*         ICWPTL=ONE;               /* LESS, PTL IS 1                */ 00959000
         MVI   ICWPTL(RWORK1),X'01'                                0529 00960000
*       ELSE                        /* IF GREATER THAN 256           */ 00961000
*         ICWPTL=TWO;               /* PTL IS TWO                    */ 00962000
         B     @RC00528                                            0530 00963000
@RF00528 MVI   ICWPTL(RWORK1),X'02'                                0530 00964000
*     END;                          /*                               */ 00965000
*   ELSE                            /* NO, HIGHER LEVEL SO           */ 00966000
*     ICWPTL=THREE;                 /* SET PTR LENGTH TO 3           */ 00967000
         B     @RC00524                                            0532 00968000
@RF00524 MVI   ICWPTL(RWORK1),X'03'                                0532 00969000
*   IXHFLPLN=ICWPTL+LENGTH(IBFLPF)+ /* SET LENGTH OF F + L +         */ 00970000
*       LENGTH(IBFLPL);             /* POINTER IN HEADER             */ 00971000
@RC00524 LA    @10,2                                               0533 00972000
         SLR   @07,@07                                             0533 00973000
         IC    @07,ICWPTL(,RWORK1)                                 0533 00974000
         ALR   @10,@07                                             0533 00975000
         STC   @10,IXHFLPLN(,RWORK2)                               0533 00976000
*   IF ICWPTL=ONE THEN              /* IS POINTER LENGTH 1           */ 00977000
         CLI   ICWPTL(RWORK1),1                                    0534 00978000
         BNE   @RF00534                                            0534 00979000
*     IXHPTLS='01'X;                /* YES, SET MASK TO X'01'        */ 00980000
         MVI   IXHPTLS(RWORK2),X'01'                               0535 00981000
*   ELSE                            /*                               */ 00982000
*     DO;                           /* NO                            */ 00983000
         B     @RC00534                                            0536 00984000
@RF00534 DS    0H                                                  0537 00985000
*       IF ICWPTL=TWO THEN          /* IS POINTER LENGTH 2           */ 00986000
         CLI   ICWPTL(RWORK1),2                                    0537 00987000
         BNE   @RF00537                                            0537 00988000
*         IXHPTLS='03'X;            /* YES, SET MASK TO X'03'        */ 00989000
         MVI   IXHPTLS(RWORK2),X'03'                               0538 00990000
*       ELSE                        /* NO, IT MUST BE 3 SO           */ 00991000
*         IXHPTLS='07'X;            /* SET MASK TO X'07'             */ 00992000
         B     @RC00537                                            0539 00993000
@RF00537 MVI   IXHPTLS(RWORK2),X'07'                               0539 00994000
*     END;                          /*                               */ 00995000
@RC00537 DS    0H                                                  0541 00996000
*   IXHLV=ICWLN;                    /* PLACE LEVEL NO. IN HDR        */ 00997000
@RC00534 LH    @10,ICWLN(,RWORK1)                                  0541 00998000
         STC   @10,IXHLV(,RWORK2)                                  0541 00999000
*   IF ICWLN^=ICWSS THEN            /* IS THIS A HIGHER LEVEL        */ 01000000
         C     @10,@CF00053                                        0542 01001000
         BE    @RF00542                                            0542 01002000
*     IXHFSO=LENGTH(IDAIXH);        /* YES, SET INSERT OFFSET JUST 0543 01003000
*                                      AFTER HEADER                  */ 01004000
         MVC   IXHFSO(2,RWORK2),@CH00083                           0543 01005000
*   ELSE                            /* SEQ. SET LEVEL                */ 01006000
*     DO;                           /*                               */ 01007000
         B     @RC00542                                            0544 01008000
@RF00542 DS    0H                                                  0545 01009000
*       RESPECIFY                                                  0545 01010000
*        (RWORK3,                                                  0545 01011000
*         RWORK4) RSTD;             /* PROTECT REGISTERS             */ 01012000
*       RWORK4=IXHPTLS;             /* PICK UP PTR MASK              */ 01013000
         SLR   RWORK4,RWORK4                                       0546 01014000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0546 01015000
*       RWORK3=RWORK2+LENGTH(IDAIXH);/* SET 'TO' ADD. AFTER HDR      */ 01016000
         LA    RWORK3,24                                           0547 01017000
         ALR   RWORK3,RWORK2                                       0547 01018000
*       DO RPARM1=(AMBLDTA->AMBDSB->AMDCIPCA)-1/* LOOP TO PLACE      */ 01019000
*             BY-ONE TO ZERO;       /* UNUSED PTRS INTO RECD.        */ 01020000
         L     @10,RPLDACB(,RRPL)                                  0548 01021000
         L     @10,ACBAMBL(,@10)                                   0548 01022000
         L     @10,AMBLDTA(,@10)                                   0548 01023000
         L     @10,AMBDSB(,@10)                                    0548 01024000
         LH    RPARM1,AMDCIPCA(,@10)                               0548 01025000
         BCTR  RPARM1,0                                            0548 01026000
         B     @DE00548                                            0548 01027000
@DL00548 DS    0H                                                  0549 01028000
*         GEN(EX  RWORK4,STOREPT);  /* STORE A PTR                   */ 01029000
         EX  RWORK4,STOREPT                                             01030000
*         RWORK3=RWORK3+ICWPTL;     /* ADJUST 'TO' ADDRESS           */ 01031000
         SLR   @10,@10                                             0550 01032000
         IC    @10,ICWPTL(,RWORK1)                                 0550 01033000
         ALR   RWORK3,@10                                          0550 01034000
*       END;                        /*                               */ 01035000
         BCTR  RPARM1,0                                            0551 01036000
@DE00548 LTR   RPARM1,RPARM1                                       0551 01037000
         BNM   @DL00548                                            0551 01038000
*       IXHFSO=RWORK3-RWORK2-ICWPTL;/* MAKE INSERT OFFSET TO FIRST 0552 01039000
*                                      UNUSED BYTE AFTER POINTERS    */ 01040000
         LR    @10,RWORK3                                          0552 01041000
         SLR   @10,RWORK2                                          0552 01042000
         SLR   @09,@09                                             0552 01043000
         IC    @09,ICWPTL(,RWORK1)                                 0552 01044000
         SLR   @10,@09                                             0552 01045000
         STH   @10,IXHFSO(,RWORK2)                                 0552 01046000
*     END;                          /*                               */ 01047000
*   IXHLEO=IXHLL-IXHFLPLN;          /* SET LAST ENTRY TO DUMMY       */ 01048000
@RC00542 LH    @10,IXHLL(,RWORK2)                                  0554 01049000
         N     @10,@CF01050                                        0554 01050000
         SLR   @09,@09                                             0554 01051000
         IC    @09,IXHFLPLN(,RWORK2)                               0554 01052000
         SLR   @10,@09                                             0554 01053000
         STH   @10,IXHLEO(,RWORK2)                                 0554 01054000
*   IXHSEO=IXHLEO;                  /* SET 1ST SECT TO DUMMY         */ 01055000
         STH   @10,IXHSEO(,RWORK2)                                 0555 01056000
*   IF ICWLN^=ICWSS THEN            /* IS THIS HIGH LEVEL            */ 01057000
         CLC   ICWLN(2,RWORK1),@CH00053                            0556 01058000
         BE    @RF00556                                            0556 01059000
*     DO;                           /* YES                           */ 01060000
*       RWORK3=AMBIWA;              /* POINT TO LOWEST LVL WA        */ 01061000
         L     RWORK3,AMBIWA(,RAMB)                                0558 01062000
*       DO WHILE RWORK3->ICWCHN^=RWORK1;/* LOOP TO FIND PREVIOUS     */ 01063000
         B     @DE00559                                            0559 01064000
@DL00559 DS    0H                                                  0560 01065000
*         RWORK3=RWORK3->ICWCHN;    /* LEVEL                         */ 01066000
         L     RWORK3,ICWCHN(,RWORK3)                              0560 01067000
*       END;                        /*                               */ 01068000
@DE00559 C     RWORK1,ICWCHN(,RWORK3)                              0561 01069000
         BNE   @DL00559                                            0561 01070000
*       RPARM1=(RWORK3->ICWPRBA)/AMDCINV;/* REDUCE DDDD TO DDD       */ 01071000
         L     @10,AMBDSB(,RAMB)                                   0562 01072000
         L     @15,ICWPRBA(,RWORK3)                                0562 01073000
         SLR   @14,@14                                             0562 01074000
         D     @14,AMDCINV(,@10)                                   0562 01075000
         LR    RPARM1,@15                                          0562 01076000
*       RWORK3=RWORK2+IXHLEO+       /* POINT TO DUMMYS POINTER       */ 01077000
*           LENGTH(IBFLPF)+         /*                               */ 01078000
*           LENGTH(IBFLPL);         /*                               */ 01079000
         LR    RWORK3,RWORK2                                       0563 01080000
         LH    @10,IXHLEO(,RWORK2)                                 0563 01081000
         ALR   RWORK3,@10                                          0563 01082000
         AL    RWORK3,@CF00146                                     0563 01083000
*       RWORK4=IXHPTLS;             /* PICK UP MASK FROM HDR         */ 01084000
         SLR   RWORK4,RWORK4                                       0564 01085000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0564 01086000
*       GEN(EX  RWORK4,STOREPT);    /* PLACE DUMMYS POINTER          */ 01087000
         EX  RWORK4,STOREPT                                             01088000
*     END;                          /*                               */ 01089000
*   RESPECIFY                                                      0567 01090000
*    (RWORK3,                                                      0567 01091000
*     RWORK4) UNRSTD;               /* FREE REGISTERS                */ 01092000
@RF00556 DS    0H                                                  0568 01093000
*   RPARM1=RWORK2+IXHLL;            /* POINT TO RDF POSITION         */ 01094000
         LH    @10,IXHLL(,RWORK2)                                  0568 01095000
         N     @10,@CF01050                                        0568 01096000
         LR    RPARM1,RWORK2                                       0568 01097000
         ALR   RPARM1,@10                                          0568 01098000
*   RPARM1->RDFLL=IXHLL;            /* SET RDF LL TO RECD LEN        */ 01099000
         MVC   RDFLL(2,RPARM1),IXHLL(RWORK2)                       0569 01100000
*   RPARM1=RPARM1+LENGTH(IDARDF);   /* POINT TO CIDF                 */ 01101000
         AL    RPARM1,@CF00159                                     0570 01102000
*   RPARM1->CIDFOSET=IXHLL;         /* SET FREE SPACE OFFSET         */ 01103000
         STH   @10,CIDFOSET(,RPARM1)                               0571 01104000
*   ICWVSE=OFF;                     /* MARK SECT ENTRY INVALID       */ 01105000
*   ICWVNE=OFF;                     /* MARK PREV ENTRY INVALID       */ 01106000
         NI    ICWVSE(RWORK1),B'11100111'                          0573 01107000
*   ICWPSEO=ZERO;                   /* CLEAR SECTION OFFSET          */ 01108000
         SLR   @10,@10                                             0574 01109000
         STH   @10,ICWPSEO(,RWORK1)                                0574 01110000
*   ICWSCNT=ZERO;                   /* CLEAR ENTRIES PER SECT.       */ 01111000
         STH   @10,ICWSCNT(,RWORK1)                                0575 01112000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 01113000
         BAL   @14,EXIT                                            0576 01114000
*   RESPECIFY                                                      0577 01115000
*    (RWORK2) UNRSTD;               /* FREE REGISTER                 */ 01116000
*   END INTNEWRC;                   /* END OF INTNEWRC SUBR.         */ 01117000
@EL00002 DS    0H                                                  0578 01118000
@EF00002 DS    0H                                                  0578 01119000
@ER00002 BR    @14                                                 0578 01120000
*                                                                  0579 01121000
*/*                                                                  */ 01122000
*/*    IDAIST SUBROUTINE                                             */ 01123000
*/*                                                                  */ 01124000
*/*       FUNCTION -                                                 */ 01125000
*/*        INSERTS AN ENTRY INTO THE CURRENT INDEX BUFFER RESIDING   */ 01126000
*/*        IN MEMORY.  IF THE ENTRY WILL NOT FIT INTO THE BUFFER,    */ 01127000
*/*        FLAG ICWWNF IS SET ON AND CONTROL RETURNED TO THE USER.   */ 01128000
*/*        IF THE INDEX ENTRY WILL FIT, IT IS INSERTED AND RECORD    */ 01129000
*/*        HEADER FIELDS WILL BE UPDATED.                            */ 01130000
*/*                                                                  */ 01131000
*                                                                  0579 01132000
*IDAIST:                                                           0579 01133000
*   ENTRY;                          /*                               */ 01134000
@EP00579 DS    0H                                                  0579 01135000
@EC00579 DS    0H                                                  0580 01136000
*   RESPECIFY                                                      0580 01137000
*    (RWORK2,                                                      0580 01138000
*     RWORK3,                                                      0580 01139000
*     RWORK4,                                                      0580 01140000
*     RWORK5) RSTD;                                                0580 01141000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 01142000
         IDASVR14                                                       01143000
*   IF ICWLN=ICWSS THEN             /* IF SEQ SET LEVEL              */ 01144000
         CLC   ICWLN(2,RWORK1),@CH00053                            0582 01145000
         BNE   @RF00582                                            0582 01146000
*     ICWCERP=ICWCER;               /* SAVE REAR COMPRESSION         */ 01147000
         IC    @10,ICWCER(,RWORK1)                                 0583 01148000
         STC   @10,ICWCERP(,RWORK1)                                0583 01149000
*   IF ICWVSE=ON THEN               /* IS THERE A VALID SECT.        */ 01150000
@RF00582 TM    ICWVSE(RWORK1),B'00010000'                          0584 01151000
         BNO   @RF00584                                            0584 01152000
*     DO;                           /* YES                           */ 01153000
*       RWORK4=ADDR(ICWKEY1);       /* POINT TO CURRENT KEY          */ 01154000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0586 01155000
*       IF ICWSCNT=ICWNEST-ONE THEN /* WILL THIS BE A SECTION KEY  0587 01156000
*                                                            @ZA14835*/ 01157000
         LH    @10,ICWNEST(,RWORK1)                                0587 01158000
         BCTR  @10,0                                               0587 01159000
         CH    @10,ICWSCNT(,RWORK1)                                0587 01160000
         BNE   @RF00587                                            0587 01161000
*         RWORK2=RWORK4+TWO*AMDKEYLN;/* POINT TO SECTION KEY         */ 01162000
         L     @10,AMBDSB(,RAMB)                                   0588 01163000
         LH    RWORK2,AMDKEYLN(,@10)                               0588 01164000
         ALR   RWORK2,RWORK2                                       0588 01165000
         ALR   RWORK2,RWORK4                                       0588 01166000
*       ELSE                        /* NOT SECTION KEY       @ZA14835*/ 01167000
*         RWORK2=RWORK4+AMDKEYLN;   /* POINT TO PREV         @ZA14835*/ 01168000
         B     @RC00587                                            0589 01169000
@RF00587 L     @10,AMBDSB(,RAMB)                                   0589 01170000
         LR    RWORK2,RWORK4                                       0589 01171000
         AH    RWORK2,AMDKEYLN(,@10)                               0589 01172000
*       RESPECIFY                                                  0590 01173000
*        (RWORK0) RSTD;             /* IN CASE KEYS ARE NOT          */ 01174000
@RC00587 DS    0H                                                  0591 01175000
*       RWORK0=MIN(ICWKEY1L,ICWKEY3L);/* SAME LENGTH (SPLIT)         */ 01176000
         LH    RWORK0,ICWKEY1L(,RWORK1)                            0591 01177000
         LH    @10,ICWKEY3L(,RWORK1)                               0591 01178000
         CR    RWORK0,@10                                          0591 01179000
         BNH   *+6                                                      01180000
         LR    RWORK0,@10                                          0591 01181000
*       RWORK3=RWORK0;              /* USE SMALLEST LENGTH           */ 01182000
         LR    RWORK3,RWORK0                                       0592 01183000
*       RWORK5=RWORK3;              /* SAME LENGTH IN RWORK5         */ 01184000
         LR    RWORK5,RWORK3                                       0593 01185000
*       GEN(CLCL  RWORK2,RWORK4);   /* COMPARE CURRENT KEY TO SECT 0594 01186000
*                                      KEY TO DETERMINE FRONT      0594 01187000
*                                      COMPRESSION                   */ 01188000
         CLCL  RWORK2,RWORK4                                            01189000
*       ICWCEF=RWORK0-RWORK3;       /* SAVE FRONT COMPRESSION        */ 01190000
         LR    @10,RWORK0                                          0595 01191000
         SLR   @10,RWORK3                                          0595 01192000
         STC   @10,ICWCEF(,RWORK1)                                 0595 01193000
*       RESPECIFY                                                  0596 01194000
*        (RWORK0) UNRSTD;           /* IN WORK AREA                  */ 01195000
*     END;                          /*                               */ 01196000
*   ELSE                            /* NO PREVIOUS SECTION           */ 01197000
*     DO;                                                          0598 01198000
         B     @RC00584                                            0598 01199000
@RF00584 DS    0H                                                  0599 01200000
*       IF ICWSCNT^=ICWNEST-ONE&    /* NOT A SECTION ENTRY           */ 01201000
*           ICWSPLIT=ON&            /* AND PREVIOUS EXISTS           */ 01202000
*           ICWVNE=ON&              /* AND WILL NOT BE THE LAST ENTRY   01203000
*                                      IN 1ST SECT                   */ 01204000
*           PLHSAVE2>PLHSAVE1 THEN  /* DURING SPLIT.         @ZA18510*/ 01205000
         LH    @10,ICWNEST(,RWORK1)                                0599 01206000
         BCTR  @10,0                                               0599 01207000
         CH    @10,ICWSCNT(,RWORK1)                                0599 01208000
         BE    @RF00599                                            0599 01209000
         TM    ICWSPLIT(RWORK1),B'00001010'                        0599 01210000
         BNO   @RF00599                                            0599 01211000
         CLC   PLHSAVE2(4,RPLH),PLHSAVE1(RPLH)                     0599 01212000
         BNH   @RF00599                                            0599 01213000
*         DO;                                                      0600 01214000
*           RWORK4=ADDR(ICWKEY1);   /* PT TO CURR KEY        @ZA18510*/ 01215000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0601 01216000
*           RWORK2=RWORK4+AMDKEYLN; /* PT TO PREV KEY        @ZA18510*/ 01217000
         L     @10,AMBDSB(,RAMB)                                   0602 01218000
         LR    RWORK2,RWORK4                                       0602 01219000
         AH    RWORK2,AMDKEYLN(,@10)                               0602 01220000
*           RESPECIFY               /* IN CASE KEYS          @ZA18510*/ 01221000
*            (RWORK0) RSTD;         /* LEN. DIFFER           @ZA18510*/ 01222000
*           RWORK0=MIN(ICWKEY1L,ICWKEY2L);/* USE THE SMALLEST        */ 01223000
         LH    RWORK0,ICWKEY1L(,RWORK1)                            0604 01224000
         LH    @10,ICWKEY2L(,RWORK1)                               0604 01225000
         CR    RWORK0,@10                                          0604 01226000
         BNH   *+6                                                      01227000
         LR    RWORK0,@10                                          0604 01228000
*           RWORK3=RWORK0;          /* LENGTH                @ZA18510*/ 01229000
         LR    RWORK3,RWORK0                                       0605 01230000
*           RWORK5=RWORK3;          /* RWORK5= LENGTH        @ZA18510*/ 01231000
         LR    RWORK5,RWORK3                                       0606 01232000
*           GEN(CLCL RWORK2,RWORK4);/* COMPARE KEY TO PREVIOUS FOR 0607 01233000
*                                      FRONT COMPRESSION     @ZA18510*/ 01234000
         CLCL RWORK2,RWORK4                                             01235000
*           ICWCEF=RWORK0-RWORK3;   /* SAVE FRONT COMPRESS LEN       */ 01236000
         LR    @10,RWORK0                                          0608 01237000
         SLR   @10,RWORK3                                          0608 01238000
         STC   @10,ICWCEF(,RWORK1)                                 0608 01239000
*           RESPECIFY               /* IN WORK AREA.         @ZA18510*/ 01240000
*            (RWORK0) UNRSTD;                                      0609 01241000
*         END;                                                     0610 01242000
*       ELSE                                                       0611 01243000
*         ICWCEF=ZERO;              /* SET FRONT COMP. TO ZERO       */ 01244000
         B     @RC00599                                            0611 01245000
@RF00599 MVI   ICWCEF(RWORK1),X'00'                                0611 01246000
*     END;                                                         0612 01247000
@RC00599 DS    0H                                                  0613 01248000
*   IF ICWLN=ICWSS&PLHKRE=OFF&      /* IS THIS SEQ SET, NOT KR       */ 01249000
*       ICWSPLIT=OFF THEN           /* AND NOT SPLIT INDX RCD        */ 01250000
@RC00584 CLC   ICWLN(2,RWORK1),@CH00053                            0613 01251000
         BNE   @RF00613                                            0613 01252000
         TM    PLHKRE(RPLH),B'00001000'                            0613 01253000
         BNZ   @RF00613                                            0613 01254000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0613 01255000
         BNZ   @RF00613                                            0613 01256000
*     DO;                           /* YES                           */ 01257000
*       RWORK2=RPLAREA+AMDRKP;      /* POINT TO NEXT KEY WHICH IS IN    01258000
*                                      USERS AREA                    */ 01259000
         L     @10,AMBDSB(,RAMB)                                   0615 01260000
         LH    RWORK2,AMDRKP(,@10)                                 0615 01261000
         AL    RWORK2,RPLAREA(,RRPL)                               0615 01262000
*       RWORK4=ADDR(ICWKEY1);       /* POINT TO CURRENT KEY          */ 01263000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0616 01264000
*       RWORK3=ICWKEY1L;            /* SET KEY LENGTH                */ 01265000
         LH    RWORK3,ICWKEY1L(,RWORK1)                            0617 01266000
*       RWORK5=RWORK3;              /* SAME LENGTH IN RWORK5         */ 01267000
         LR    RWORK5,RWORK3                                       0618 01268000
*       GEN(CLCL  RWORK2,RWORK4);   /* COMPARE CURRENT KEY TO NEXT 0619 01269000
*                                      KEY FOR REAR COMPRESSION    0619 01270000
*                                      PURPOSES                      */ 01271000
         CLCL  RWORK2,RWORK4                                            01272000
*       ICWCER=RWORK4-ADDR(ICWKEY1)+ONE;/* SAVE CHAR. POSITION OF  0620 01273000
*                                      DIFFERING CHARACTERS          */ 01274000
         LA    @10,ICWKEY1(,RWORK1)                                0620 01275000
         LCR   @10,@10                                             0620 01276000
         ALR   @10,RWORK4                                          0620 01277000
         AL    @10,@CF00053                                        0620 01278000
         STC   @10,ICWCER(,RWORK1)                                 0620 01279000
*     END;                                                         0621 01280000
*   ELSE                            /* NOT A SEQ SET INSERT SO       */ 01281000
*     ICWCER=ICWKEY1L;              /* SHOW NO REAR COMPR.           */ 01282000
         B     @RC00613                                            0622 01283000
@RF00613 LH    @10,ICWKEY1L(,RWORK1)                               0622 01284000
         STC   @10,ICWCER(,RWORK1)                                 0622 01285000
*   RESPECIFY                                                      0623 01286000
*    (RWORK2,                                                      0623 01287000
*     RWORK3,                                                      0623 01288000
*     RWORK4,                                                      0623 01289000
*     RWORK5) UNRSTD;               /* FREE REGS                     */ 01290000
@RC00613 DS    0H                                                  0624 01291000
*   IF ICWCER>ICWCEF THEN           /* DOES REAR COMPRESSION POSITION   01292000
*                                      EXCEED FRONT COMPRESSION      */ 01293000
         CLC   ICWCER(1,RWORK1),ICWCEF(RWORK1)                     0624 01294000
         BNH   @RF00624                                            0624 01295000
*     ICWCEL=ICWCER-ICWCEF;         /* YES, LENGTH=DIFFERENCE        */ 01296000
         SLR   @10,@10                                             0625 01297000
         IC    @10,ICWCER(,RWORK1)                                 0625 01298000
         SLR   @00,@00                                             0625 01299000
         IC    @00,ICWCEF(,RWORK1)                                 0625 01300000
         SLR   @10,@00                                             0625 01301000
         STC   @10,ICWCEL(,RWORK1)                                 0625 01302000
*   ELSE                            /* IF NOT, SET THE               */ 01303000
*     DO;                           /*                       @ZA05901*/ 01304000
         B     @RC00624                                            0626 01305000
@RF00624 DS    0H                                                  0627 01306000
*       ICWCEL=ZERO;                /* LENGTH TO ZERO                */ 01307000
         MVI   ICWCEL(RWORK1),X'00'                                0627 01308000
*       ICWCER=ICWCEF;              /* ADJ REAR POS          @ZA05901*/ 01309000
         IC    @10,ICWCEF(,RWORK1)                                 0628 01310000
         STC   @10,ICWCER(,RWORK1)                                 0628 01311000
*     END;                          /* END OF <=             @ZA05901*/ 01312000
*   RESPECIFY                                                      0630 01313000
*    (RWORK2,                                                      0630 01314000
*     RWORK3,                                                      0630 01315000
*     RWORK4) RSTD;                 /* PROTECT REGISTERS             */ 01316000
@RC00624 DS    0H                                                  0631 01317000
*   RWORK2=ICWBUFC->BUFCBAD;        /* POINT TO BUFFER               */ 01318000
         L     @10,ICWBUFC(,RWORK1)                                0631 01319000
         L     RWORK2,BUFCBAD(,@10)                                0631 01320000
*   RWORK3=ICWCEL+                  /* COMPUTE SPACE REQUIRED        */ 01321000
*       RWORK2->IXHFLPLN+           /* TO MAKE AN ENTRY IN           */ 01322000
*       LENGTH(IXSELL);             /* THE INDEX RECORD              */ 01323000
         LA    @10,2                                               0632 01324000
         SLR   RWORK3,RWORK3                                       0632 01325000
         IC    RWORK3,ICWCEL(,RWORK1)                              0632 01326000
         SLR   @09,@09                                             0632 01327000
         IC    @09,IXHFLPLN(,RWORK2)                               0632 01328000
         ALR   RWORK3,@09                                          0632 01329000
         ALR   RWORK3,@10                                          0632 01330000
*   IF ICWSPLIT=OFF THEN            /* IS THIS A SPLIT OF RECD       */ 01331000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0633 01332000
         BNZ   @RF00633                                            0633 01333000
*     DO;                           /* NO, ITS CREATE TIME SO        */ 01334000
*       RWORK4=RWORK2->IXHLEO-      /* COMPUTE SPACE                 */ 01335000
*           RWORK2->IXHFSO-         /* REMAINING TO THE FREE         */ 01336000
*           LENGTH(IXSELL);         /* SPACE AREA OF BUFFER          */ 01337000
         LH    RWORK4,IXHLEO(,RWORK2)                              0635 01338000
         SH    RWORK4,IXHFSO(,RWORK2)                              0635 01339000
         SLR   RWORK4,@10                                          0635 01340000
*       RWORK3=RWORK3+ICWCEF;       /* ASSURE SPACE FOR FRONT      0636 01341000
*                                      UNCOMPRESSED KEY              */ 01342000
         SLR   @10,@10                                             0636 01343000
         IC    @10,ICWCEF(,RWORK1)                                 0636 01344000
         ALR   RWORK3,@10                                          0636 01345000
*       IF ICWLN=ICWSS THEN         /* IS THIS SS NOT SPLIT  @ZA30108*/ 01346000
         CLC   ICWLN(2,RWORK1),@CH00053                            0637 01347000
         BNE   @RF00637                                            0637 01348000
*         RWORK4=RWORK4+ICWPTL;     /* YES, BUMP AVAILABLE   @ZA30108   01349000
*                                      SPACE BY PTR LENGTH   @ZA30108*/ 01350000
         SLR   @10,@10                                             0638 01351000
         IC    @10,ICWPTL(,RWORK1)                                 0638 01352000
         ALR   RWORK4,@10                                          0638 01353000
*     END;                          /*                               */ 01354000
*   ELSE                            /* INDEX RECORD BEING SPLT       */ 01355000
*     RWORK4=RWORK2->IXHLEO-        /* SO COMPUTE SPACE              */ 01356000
*         (PLHSAVE2-RWORK2);        /* AVAILABLE BASED ON THE      0640 01357000
*                                      POSITION OF THE BLOCK OF INDEX   01358000
*                                      ENTRYS IN THE BUFFER          */ 01359000
         B     @RC00633                                            0640 01360000
@RF00633 L     RWORK4,PLHSAVE2(,RPLH)                              0640 01361000
         SLR   RWORK4,RWORK2                                       0640 01362000
         LCR   RWORK4,RWORK4                                       0640 01363000
         LH    @10,IXHLEO(,RWORK2)                                 0640 01364000
         ALR   RWORK4,@10                                          0640 01365000
*   IF ICWNOSEG^=ZERO THEN          /* IS ENTRY FOR SPANNED RECORD 0641 01366000
*                                                            @X04SVES*/ 01367000
@RC00633 LH    @10,ICWNOSEG(,RWORK1)                               0641 01368000
         LTR   @10,@10                                             0641 01369000
         BZ    @RF00641                                            0641 01370000
*     DO;                           /* YES                   @X04SVES*/ 01371000
*       RWORK3=RWORK3+(ICWNOSEG-ONE)/* COMPUTE SPACE         @X04SVES*/ 01372000
*           *(RWORK2->IXHFLPLN);    /* FOR FIRST THRU N-1 ST SEGMENTS   01373000
*                                                            @X04SVES*/ 01374000
         LR    @15,@10                                             0643 01375000
         BCTR  @15,0                                               0643 01376000
         SLR   @10,@10                                             0643 01377000
         IC    @10,IXHFLPLN(,RWORK2)                               0643 01378000
         MR    @14,@10                                             0643 01379000
         ALR   RWORK3,@15                                          0643 01380000
*     END;                          /*                       @X04SVES*/ 01381000
*   IF RWORK3>RWORK4 THEN           /* WILL THE ENTRY FIT            */ 01382000
@RF00641 CR    RWORK3,RWORK4                                       0645 01383000
         BNH   @RF00645                                            0645 01384000
*     DO;                           /* NO                            */ 01385000
*       ICWWNF=ON;                  /* SET WONT FIT FLAG ON          */ 01386000
         OI    ICWWNF(RWORK1),B'10000000'                          0647 01387000
*       CALL EXIT;                  /* RETURN                @X04SVES*/ 01388000
         BAL   @14,EXIT                                            0648 01389000
*     END;                          /*                               */ 01390000
*   ELSE                            /* ENTRY WILL FIT                */ 01391000
*     IF ICWSCNT=ICWNEST-ONE THEN   /* SHOULD THIS BE A SECT.        */ 01392000
         B     @RC00645                                            0650 01393000
@RF00645 LH    @10,ICWNEST(,RWORK1)                                0650 01394000
         BCTR  @10,0                                               0650 01395000
         CH    @10,ICWSCNT(,RWORK1)                                0650 01396000
         BNE   @RF00650                                            0650 01397000
*       DO;                         /* YES                           */ 01398000
*         RESPECIFY                                                0652 01399000
*          (RWORK5) RSTD;           /*                               */ 01400000
*         IF ICWNOSEG^=ZERO THEN    /* SPANNED RECORD        @X04SVES*/ 01401000
         LH    @10,ICWNOSEG(,RWORK1)                               0653 01402000
         LTR   @10,@10                                             0653 01403000
         BZ    @RF00653                                            0653 01404000
*           DO ICWCRSEG=ONE TO ICWNOSEG-ONE;/* YES           @X04SVES*/ 01405000
         LA    @10,1                                               0654 01406000
         B     @DE00654                                            0654 01407000
@DL00654 DS    0H                                                  0655 01408000
*I17:                                                              0655 01409000
*             DO;                   /* IDACALL(IDASPNPT)             */ 01410000
I17      DS    0H                                                  0656 01411000
*               CALL IDASPNPT;      /* EXIT TO IDASPNPT              */ 01412000
         L     @15,@CV00950                                        0656 01413000
         BALR  @14,@15                                             0656 01414000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01415000
         BALR @11,0                                                     01416000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01417000
         USING *,@11                                                    01418000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01419000
         L     @11,=A(@PSTART)                                          01420000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01421000
         USING @PSTART,@11                                              01422000
*             END I17;              /* MAKE NULL ENTRY@X04SVES       */ 01423000
*           END;                    /*                       @X04SVES*/ 01424000
         LA    @10,1                                               0662 01425000
         AH    @10,ICWCRSEG(,RWORK1)                               0662 01426000
@DE00654 STH   @10,ICWCRSEG(,RWORK1)                               0662 01427000
         LH    @00,ICWNOSEG(,RWORK1)                               0662 01428000
         BCTR  @00,0                                               0662 01429000
         CR    @10,@00                                             0662 01430000
         BNH   @DL00654                                            0662 01431000
*         RWORK3=RWORK2+RWORK2->IXHLEO;/* POINT TO INSERTION PT.     */ 01432000
@RF00653 LR    RWORK3,RWORK2                                       0663 01433000
         LH    @10,IXHLEO(,RWORK2)                                 0663 01434000
         ALR   RWORK3,@10                                          0663 01435000
*         RWORK3->IBFLPF=ICWCEF;    /* PLACE F INTO RECORD           */ 01436000
         SLR   @10,@10                                             0664 01437000
         IC    @10,ICWCEF(,RWORK1)                                 0664 01438000
         STC   @10,IBFLPF(,RWORK3)                                 0664 01439000
*         RWORK3->IBFLPL=ICWCEL;    /* PLACE L INTO RECORD           */ 01440000
         SLR   @15,@15                                             0665 01441000
         IC    @15,ICWCEL(,RWORK1)                                 0665 01442000
         STC   @15,IBFLPL(,RWORK3)                                 0665 01443000
*         RWORK2=RWORK3-ICWCEL;     /* POINT TO FIRST BYTE OF KEY  0666 01444000
*                                      POSITION IN RECD.             */ 01445000
         LR    RWORK2,RWORK3                                       0666 01446000
         SLR   RWORK2,@15                                          0666 01447000
*         RWORK4=ADDR(ICWKEY1)+ICWCEF;/* POINT TO FIRST BYTE OF KEY     01448000
*                                      TO BE STORED                  */ 01449000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0667 01450000
         ALR   RWORK4,@10                                          0667 01451000
*         RWORK5=ICWCEL;            /* SET LENGTH OF MOVE            */ 01452000
         LR    RWORK5,@15                                          0668 01453000
*         RWORK3=RWORK5;            /* SAME LENGTH IN RWORK3         */ 01454000
         LR    RWORK3,RWORK5                                       0669 01455000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE KEY TO INDX BUFFER       */ 01456000
         MVCL  RWORK2,RWORK4                                            01457000
*         RESPECIFY                                                0671 01458000
*          (RWORK5) UNRSTD;         /*                               */ 01459000
*         RWORK2=ICWBUFC->BUFCBAD;  /* POINT TO BUFFER               */ 01460000
         L     @10,ICWBUFC(,RWORK1)                                0672 01461000
         L     RWORK2,BUFCBAD(,@10)                                0672 01462000
*         RPARM1=ICWCEL+            /* COMPUTE OFFSET FROM           */ 01463000
*             LENGTH(IXSELL)+       /* THIS SECT. ENTRY TO           */ 01464000
*             RWORK2->IXHFLPLN;     /* THE DUMMY ENTRY               */ 01465000
         LA    @10,2                                               0673 01466000
         SLR   @09,@09                                             0673 01467000
         IC    @09,ICWCEL(,RWORK1)                                 0673 01468000
         LR    RPARM1,@09                                          0673 01469000
         ALR   RPARM1,@10                                          0673 01470000
         SLR   @00,@00                                             0673 01471000
         IC    @00,IXHFLPLN(,RWORK2)                               0673 01472000
         ALR   RPARM1,@00                                          0673 01473000
*         RWORK4='03'X;             /* SET MASK FOR TWO BYTES        */ 01474000
         LA    RWORK4,3                                            0674 01475000
*         RWORK3=RWORK2+            /* POINT TO SECTION FIELD        */ 01476000
*             RWORK2->IXHLEO-       /* WHICH POINTS FORWARD          */ 01477000
*             ICWCEL-               /* TO NEXT SECTION               */ 01478000
*             LENGTH(IXSELL);       /*                               */ 01479000
         LR    RWORK3,RWORK2                                       0675 01480000
         LH    @00,IXHLEO(,RWORK2)                                 0675 01481000
         ALR   RWORK3,@00                                          0675 01482000
         SLR   RWORK3,@09                                          0675 01483000
         SLR   RWORK3,@10                                          0675 01484000
*         GEN(EX  RWORK4,STOREPT);  /* MOVE POINTER TO RECD          */ 01485000
         EX  RWORK4,STOREPT                                             01486000
*         IF ICWVSE=OFF THEN        /* IS THIS 1ST. SECT.            */ 01487000
         TM    ICWVSE(RWORK1),B'00010000'                          0677 01488000
         BNZ   @RF00677                                            0677 01489000
*           DO;                     /* YES                           */ 01490000
*             ICWVSE=ON;            /* SET FLAG ON                   */ 01491000
         OI    ICWVSE(RWORK1),B'00010000'                          0679 01492000
*             RWORK2->IXHSEO=RWORK2->IXHLEO;/* SET OFFSET TO THE   0680 01493000
*                                      FIRST SECTION IN THE INDEX  0680 01494000
*                                      RECORD.                       */ 01495000
         LH    @10,IXHLEO(,RWORK2)                                 0680 01496000
         STH   @10,IXHSEO(,RWORK2)                                 0680 01497000
*             IF ICWNEST=ONE&ICWLN=ICWSS/* IN CASE 1 ENTRY/SECT      */ 01498000
*                 &ICWSPLIT=OFF THEN/* CREATE & SS LEVEL             */ 01499000
         LA    @10,1                                               0681 01500000
         CH    @10,ICWNEST(,RWORK1)                                0681 01501000
         BNE   @RF00681                                            0681 01502000
         CH    @10,ICWLN(,RWORK1)                                  0681 01503000
         BNE   @RF00681                                            0681 01504000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0681 01505000
         BNZ   @RF00681                                            0681 01506000
*               CALL SETBASE;       /* SET BASE RBA          @X04SVES*/ 01507000
         BAL   @14,SETBASE                                         0682 01508000
*           END;                    /*                               */ 01509000
*         ELSE                      /* NOT FIRST SECTION             */ 01510000
*           DO;                     /*                               */ 01511000
         B     @RC00677                                            0684 01512000
@RF00677 DS    0H                                                  0685 01513000
*             RWORK4=RWORK2+ICWPSEO;/* POINT TO PREV. SECTION        */ 01514000
         LH    @10,ICWPSEO(,RWORK1)                                0685 01515000
         LR    RWORK4,RWORK2                                       0685 01516000
         ALR   RWORK4,@10                                          0685 01517000
*             RWORK3=RWORK4-        /* POINT TO FORWARD CHAIN        */ 01518000
*                 RWORK4->IBFLPL-   /* POINTER OF THAT SECT          */ 01519000
*                 LENGTH(IXSELL);   /* ENTRY                         */ 01520000
         LR    RWORK3,RWORK4                                       0686 01521000
         SLR   @09,@09                                             0686 01522000
         IC    @09,IBFLPL(,RWORK4)                                 0686 01523000
         SLR   RWORK3,@09                                          0686 01524000
         BCTR  RWORK3,0                                            0686 01525000
         BCTR  RWORK3,0                                            0686 01526000
*             RWORK4='03'X;         /* SET MASK FOR TWO BYTES        */ 01527000
         LA    RWORK4,3                                            0687 01528000
*             RPARM1=ICWPSEO-       /* COMPUTE OFFSET BETWEEN        */ 01529000
*                 RWORK2->IXHLEO;   /* SECTIONS                      */ 01530000
         SH    @10,IXHLEO(,RWORK2)                                 0688 01531000
         LR    RPARM1,@10                                          0688 01532000
*             GEN(EX  RWORK4,STOREPT);/* STORE OFFSET IN PREV.     0689 01533000
*                                      SECTION                       */ 01534000
         EX  RWORK4,STOREPT                                             01535000
*           END;                    /*                               */ 01536000
*         RESPECIFY                                                0691 01537000
*          (RWORK5) RSTD;           /*                               */ 01538000
@RC00677 DS    0H                                                  0692 01539000
*         RWORK4=ADDR(ICWKEY1);     /* SET 'FROM' ADDRESS            */ 01540000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0692 01541000
*         RWORK2=RWORK4+TWO*AMDKEYLN;/* SET 'TO' ADDRESS             */ 01542000
         L     @10,AMBDSB(,RAMB)                                   0693 01543000
         LH    RWORK2,AMDKEYLN(,@10)                               0693 01544000
         ALR   RWORK2,RWORK2                                       0693 01545000
         ALR   RWORK2,RWORK4                                       0693 01546000
*         RWORK5=ICWKEY1L;          /* SET LENGTH OF MOVE            */ 01547000
         LH    RWORK5,ICWKEY1L(,RWORK1)                            0694 01548000
*         RWORK3=RWORK5;            /* DITTO                         */ 01549000
         LR    RWORK3,RWORK5                                       0695 01550000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE KEY TO SECTION KEY       */ 01551000
         MVCL  RWORK2,RWORK4                                            01552000
*         RESPECIFY                                                0697 01553000
*          (RWORK5) UNRSTD;         /*                               */ 01554000
*         ICWKEY3L=ICWKEY1L;        /* SAVE SECTION LENGTH           */ 01555000
         LH    @10,ICWKEY1L(,RWORK1)                               0698 01556000
         STH   @10,ICWKEY3L(,RWORK1)                               0698 01557000
*         RWORK2=ICWBUFC->BUFCBAD;  /* POINT BACK TO BUFFER          */ 01558000
         L     @10,ICWBUFC(,RWORK1)                                0699 01559000
         L     RWORK2,BUFCBAD(,@10)                                0699 01560000
*         ICWPSEO=RWORK2->IXHLEO;   /* SET NEW OFFSET TO SECT        */ 01561000
         LH    @10,IXHLEO(,RWORK2)                                 0700 01562000
         STH   @10,ICWPSEO(,RWORK1)                                0700 01563000
*         RWORK2->IXHLEO=RWORK2->IXHLEO-/* REESTABLISH NEW           */ 01564000
*             ICWCEL-               /* OFFSET TO LAST                */ 01565000
*             RWORK2->IXHFLPLN-     /* ENTRY                         */ 01566000
*             LENGTH(IXSELL);       /*                               */ 01567000
         SLR   @09,@09                                             0701 01568000
         IC    @09,ICWCEL(,RWORK1)                                 0701 01569000
         SLR   @10,@09                                             0701 01570000
         SLR   @09,@09                                             0701 01571000
         IC    @09,IXHFLPLN(,RWORK2)                               0701 01572000
         SLR   @10,@09                                             0701 01573000
         BCTR  @10,0                                               0701 01574000
         BCTR  @10,0                                               0701 01575000
         STH   @10,IXHLEO(,RWORK2)                                 0701 01576000
*         IF ICWLN=ICWSS|ICWSPLIT=ON THEN/* SEQ SET OR SPLIT         */ 01577000
         CLC   ICWLN(2,RWORK1),@CH00053                            0702 01578000
         BE    @RT00702                                            0702 01579000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0702 01580000
         BNO   @RF00702                                            0702 01581000
@RT00702 DS    0H                                                  0703 01582000
*           DO;                     /* YES                           */ 01583000
*             RWORK3=RWORK2+        /* POINT TO FIRST UNUSED         */ 01584000
*                 RWORK2->IXHFSO-   /* CI POINTER IN THE             */ 01585000
*                 ICWPTL;           /* RECORD                        */ 01586000
         LR    RWORK3,RWORK2                                       0704 01587000
         LH    @10,IXHFSO(,RWORK2)                                 0704 01588000
         ALR   RWORK3,@10                                          0704 01589000
         SLR   @10,@10                                             0704 01590000
         IC    @10,ICWPTL(,RWORK1)                                 0704 01591000
         SLR   RWORK3,@10                                          0704 01592000
*             RESPECIFY                                            0705 01593000
*              (RWORK0) RSTD;       /*                               */ 01594000
*             RWORK0=RWORK3;        /* SAVE LOCATION OF PTR.         */ 01595000
         LR    RWORK0,RWORK3                                       0706 01596000
*             RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HEADER         */ 01597000
         SLR   RWORK4,RWORK4                                       0707 01598000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0707 01599000
*             IF RWORK0^<RWORK2+LENGTH(IDAIXH) THEN/* ANY PTRS LEFT  */ 01600000
         LA    @10,24                                              0708 01601000
         ALR   @10,RWORK2                                          0708 01602000
         CLR   RWORK0,@10                                          0708 01603000
         BL    @RF00708                                            0708 01604000
*               GEN(EX  RWORK4,PICKPT);/* YES, PICK UP ONE           */ 01605000
         EX  RWORK4,PICKPT                                              01606000
*             ELSE                  /* NO                            */ 01607000
*               RPARM1=AMBLDTA->AMBDSB->AMDCIPCA-ONE;/* GENERATE IT  */ 01608000
         B     @RC00708                                            0710 01609000
@RF00708 L     @10,RPLDACB(,RRPL)                                  0710 01610000
         L     @10,ACBAMBL(,@10)                                   0710 01611000
         L     @10,AMBLDTA(,@10)                                   0710 01612000
         L     @10,AMBDSB(,@10)                                    0710 01613000
         LH    RPARM1,AMDCIPCA(,@10)                               0710 01614000
         BCTR  RPARM1,0                                            0710 01615000
*             RWORK3=RWORK2+        /* POINT TO THE DUMMY            */ 01616000
*                 RWORK2->IXHLEO+   /* ENTRYS POINTER                */ 01617000
*                 LENGTH(IBFLPF)+   /* FIELD                         */ 01618000
*                 LENGTH(IBFLPL);   /*                               */ 01619000
@RC00708 LR    RWORK3,RWORK2                                       0711 01620000
         LH    @10,IXHLEO(,RWORK2)                                 0711 01621000
         ALR   RWORK3,@10                                          0711 01622000
         AL    RWORK3,@CF00146                                     0711 01623000
*             GEN(EX  RWORK4,STOREPT);/* PLACE NEW DUMMY POINTER     */ 01624000
         EX  RWORK4,STOREPT                                             01625000
*             RWORK2->IXHFSO=RWORK2->IXHFSO/* UPDATE FREESPACE       */ 01626000
*                 -ICWPTL;          /* OFFSET                        */ 01627000
         LH    @10,IXHFSO(,RWORK2)                                 0713 01628000
         SLR   @09,@09                                             0713 01629000
         IC    @09,ICWPTL(,RWORK1)                                 0713 01630000
         SLR   @10,@09                                             0713 01631000
         STH   @10,IXHFSO(,RWORK2)                                 0713 01632000
*             IF RWORK0^<RWORK2+LENGTH(IDAIXH) THEN/* IF HEADER IS 0714 01633000
*                                      SAFE FROM VIOLATION FOR SPLIT    01634000
*                                      CASE, THEN                    */ 01635000
         LA    @10,24                                              0714 01636000
         ALR   @10,RWORK2                                          0714 01637000
         CLR   RWORK0,@10                                          0714 01638000
         BL    @RF00714                                            0714 01639000
*               DO;                 /* CLEAR PTR. JUST TAKEN         */ 01640000
*                 RPARM1=ZERO;      /* CLEAR REGISTER                */ 01641000
         SLR   RPARM1,RPARM1                                       0716 01642000
*                 RWORK3=RWORK0;    /* POINT BACK TO PTR AREA        */ 01643000
         LR    RWORK3,RWORK0                                       0717 01644000
*                 GEN(EX  RWORK4,STOREPT);/* CLEAR USED POINTER      */ 01645000
         EX  RWORK4,STOREPT                                             01646000
*                 RESPECIFY                                        0719 01647000
*                  (RWORK0) UNRSTD; /*                               */ 01648000
*               END;                /*                               */ 01649000
*           END;                    /*                               */ 01650000
*         ELSE                      /* HIGHER LEVEL ENTRY            */ 01651000
*           DO;                                                    0722 01652000
         B     @RC00702                                            0722 01653000
@RF00702 DS    0H                                                  0723 01654000
*             RWORK3=AMBIWA;        /* POINT TO LOW LEVEL            */ 01655000
         L     RWORK3,AMBIWA(,RAMB)                                0723 01656000
*             DO WHILE RWORK3->ICWCHN^=RWORK1;/* LOOP TO FIND PREV.     01657000
*                                      LEVEL                         */ 01658000
         B     @DE00724                                            0724 01659000
@DL00724 DS    0H                                                  0725 01660000
*               RWORK3=RWORK3->ICWCHN;/*                             */ 01661000
         L     RWORK3,ICWCHN(,RWORK3)                              0725 01662000
*             END;                  /*                               */ 01663000
@DE00724 C     RWORK1,ICWCHN(,RWORK3)                              0726 01664000
         BNE   @DL00724                                            0726 01665000
*             RPARM1=(RWORK3->ICWCRBA)/AMDCINV;/* REDUCE DDDD        */ 01666000
         L     @10,AMBDSB(,RAMB)                                   0727 01667000
         L     @15,ICWCRBA(,RWORK3)                                0727 01668000
         SLR   @14,@14                                             0727 01669000
         D     @14,AMDCINV(,@10)                                   0727 01670000
         LR    RPARM1,@15                                          0727 01671000
*             RWORK3=RWORK2+        /* POINT TO DUMMYS POINTER       */ 01672000
*                 RWORK2->IXHLEO+   /*                               */ 01673000
*                 LENGTH(IBFLPF)+   /*                               */ 01674000
*                 LENGTH(IBFLPL);   /*                               */ 01675000
         LR    RWORK3,RWORK2                                       0728 01676000
         LH    @10,IXHLEO(,RWORK2)                                 0728 01677000
         ALR   RWORK3,@10                                          0728 01678000
         AL    RWORK3,@CF00146                                     0728 01679000
*             RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HDR            */ 01680000
         SLR   RWORK4,RWORK4                                       0729 01681000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0729 01682000
*             GEN(EX  RWORK4,STOREPT);/* MOVE IN DUMMYS PTR          */ 01683000
         EX  RWORK4,STOREPT                                             01684000
*           END;                    /*                               */ 01685000
*         ICWSCNT=ZERO;             /* RESET ENTRYS IN        SECTION*/ 01686000
@RC00702 SLR   @10,@10                                             0732 01687000
         STH   @10,ICWSCNT(,RWORK1)                                0732 01688000
*       END;                                                       0733 01689000
*     ELSE                          /* NORMAL ENTRY                  */ 01690000
*       DO;                         /*                               */ 01691000
         B     @RC00650                                            0734 01692000
@RF00650 DS    0H                                                  0735 01693000
*         ICWSCNT=ICWSCNT+ONE;      /* INCREASE COUNT IN SECT.       */ 01694000
         LA    @10,1                                               0735 01695000
         AH    @10,ICWSCNT(,RWORK1)                                0735 01696000
         STH   @10,ICWSCNT(,RWORK1)                                0735 01697000
*         IF ICWVNE=ON THEN         /* IS THERE A PREVIOUS ENTRY     */ 01698000
         TM    ICWVNE(RWORK1),B'00001000'                          0736 01699000
         BNO   @RF00736                                            0736 01700000
*           DO;                     /* YES                           */ 01701000
*             RESPECIFY                                            0738 01702000
*              (RWORK5) RSTD;       /*                               */ 01703000
*             RWORK4=ADDR(ICWKEY1); /* POINT TO CURRENT KEY          */ 01704000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0739 01705000
*             RWORK2=RWORK4+AMDKEYLN;/* POINT TO PREVIOUS KEY        */ 01706000
         L     @10,AMBDSB(,RAMB)                                   0740 01707000
         LR    RWORK2,RWORK4                                       0740 01708000
         AH    RWORK2,AMDKEYLN(,@10)                               0740 01709000
*             RESPECIFY                                            0741 01710000
*              (RWORK0) RSTD;       /* IN CASE KEYS ARE NOT          */ 01711000
*             RWORK0=MIN(ICWKEY1L,ICWKEY2L);/* SAME LENGTH (SPLIT)   */ 01712000
         LH    RWORK0,ICWKEY1L(,RWORK1)                            0742 01713000
         LH    @10,ICWKEY2L(,RWORK1)                               0742 01714000
         CR    RWORK0,@10                                          0742 01715000
         BNH   *+6                                                      01716000
         LR    RWORK0,@10                                          0742 01717000
*             RWORK3=RWORK0;        /* USE SMALLEST LENGTH           */ 01718000
         LR    RWORK3,RWORK0                                       0743 01719000
*             RWORK5=RWORK3;        /* SAME LENGTH IN RWORK5         */ 01720000
         LR    RWORK5,RWORK3                                       0744 01721000
*             GEN(CLCL  RWORK2,RWORK4);/* COMPARE KEY TO PREVIOUS KEY   01722000
*                                      FOR FRONT COMPRESS            */ 01723000
         CLCL  RWORK2,RWORK4                                            01724000
*             RESPECIFY                                            0746 01725000
*              (RWORK5) UNRSTD;     /*                               */ 01726000
*             ICWCEF=RWORK0-RWORK3; /* SAVE FRONT COMPRESSION        */ 01727000
         LR    @10,RWORK0                                          0747 01728000
         SLR   @10,RWORK3                                          0747 01729000
         STC   @10,ICWCEF(,RWORK1)                                 0747 01730000
*             RESPECIFY                                            0748 01731000
*              (RWORK0) UNRSTD;     /* IN WORK AREA                  */ 01732000
*           END;                                                   0749 01733000
*         ELSE                      /* NO PREVIOUS ENTRY SO          */ 01734000
*           ICWCEF=ZERO;            /* SET COMPRESSION TO 0          */ 01735000
         B     @RC00736                                            0750 01736000
@RF00736 MVI   ICWCEF(RWORK1),X'00'                                0750 01737000
*         ICWVNE=ON;                /* SHOW PREV. ENTRY VALID        */ 01738000
@RC00736 OI    ICWVNE(RWORK1),B'00001000'                          0751 01739000
*         IF ICWCER>ICWCEF THEN     /* REAR COMP. PTR > FR.          */ 01740000
         CLC   ICWCER(1,RWORK1),ICWCEF(RWORK1)                     0752 01741000
         BNH   @RF00752                                            0752 01742000
*           ICWCEL=ICWCER-ICWCEF;   /* COMP. YES- LEN = DIFF.        */ 01743000
         SLR   @10,@10                                             0753 01744000
         IC    @10,ICWCER(,RWORK1)                                 0753 01745000
         SLR   @09,@09                                             0753 01746000
         IC    @09,ICWCEF(,RWORK1)                                 0753 01747000
         SLR   @10,@09                                             0753 01748000
         STC   @10,ICWCEL(,RWORK1)                                 0753 01749000
*         ELSE                      /* OTHERWISE THE LENGTH          */ 01750000
*           DO;                     /*                       @ZA05901*/ 01751000
         B     @RC00752                                            0754 01752000
@RF00752 DS    0H                                                  0755 01753000
*             ICWCEL=ZERO;          /* IS ZERO                       */ 01754000
         MVI   ICWCEL(RWORK1),X'00'                                0755 01755000
*             ICWCER=ICWCEF;        /* ADJ REAR POS.         @ZA05901*/ 01756000
         IC    @10,ICWCEF(,RWORK1)                                 0756 01757000
         STC   @10,ICWCER(,RWORK1)                                 0756 01758000
*           END;                    /* END OF <=             @ZA05901*/ 01759000
*         RESPECIFY                                                0758 01760000
*          (RWORK5) RSTD;           /*                               */ 01761000
@RC00752 DS    0H                                                  0759 01762000
*         RWORK2=ICWBUFC->BUFCBAD;  /* POINT TO BUFFER               */ 01763000
         L     @10,ICWBUFC(,RWORK1)                                0759 01764000
         L     RWORK2,BUFCBAD(,@10)                                0759 01765000
*         IF ICWNOSEG^=ZERO THEN    /* SPANNED RCD           @X04SVES*/ 01766000
         LH    @10,ICWNOSEG(,RWORK1)                               0760 01767000
         LTR   @10,@10                                             0760 01768000
         BZ    @RF00760                                            0760 01769000
*           DO ICWCRSEG=ONE TO ICWNOSEG-ONE;/* YES           @X04SVES*/ 01770000
         LA    @10,1                                               0761 01771000
         B     @DE00761                                            0761 01772000
@DL00761 DS    0H                                                  0762 01773000
*I18:                                                              0762 01774000
*             DO;                   /* IDACALL(IDASPNPT)             */ 01775000
I18      DS    0H                                                  0763 01776000
*               CALL IDASPNPT;      /* EXIT TO IDASPNPT              */ 01777000
         L     @15,@CV00950                                        0763 01778000
         BALR  @14,@15                                             0763 01779000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01780000
         BALR @11,0                                                     01781000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01782000
         USING *,@11                                                    01783000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01784000
         L     @11,=A(@PSTART)                                          01785000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01786000
         USING @PSTART,@11                                              01787000
*             END I18;              /* MAKE NULL ENTRY@X04SVES       */ 01788000
*           END;                    /*                       @X04SVES*/ 01789000
         LA    @10,1                                               0769 01790000
         AH    @10,ICWCRSEG(,RWORK1)                               0769 01791000
@DE00761 STH   @10,ICWCRSEG(,RWORK1)                               0769 01792000
         LH    @00,ICWNOSEG(,RWORK1)                               0769 01793000
         BCTR  @00,0                                               0769 01794000
         CR    @10,@00                                             0769 01795000
         BNH   @DL00761                                            0769 01796000
*         RWORK3=RWORK2+RWORK2->IXHLEO;/* POINT TO INSERT POINT      */ 01797000
@RF00760 LR    RWORK3,RWORK2                                       0770 01798000
         LH    @10,IXHLEO(,RWORK2)                                 0770 01799000
         ALR   RWORK3,@10                                          0770 01800000
*         RWORK3->IBFLPF=ICWCEF;    /* PLACE F INTO RECORD           */ 01801000
         SLR   @10,@10                                             0771 01802000
         IC    @10,ICWCEF(,RWORK1)                                 0771 01803000
         STC   @10,IBFLPF(,RWORK3)                                 0771 01804000
*         RWORK3->IBFLPL=ICWCEL;    /* PLACE L INTO RECORD           */ 01805000
         SLR   @15,@15                                             0772 01806000
         IC    @15,ICWCEL(,RWORK1)                                 0772 01807000
         STC   @15,IBFLPL(,RWORK3)                                 0772 01808000
*         RWORK2=RWORK3-ICWCEL;     /* POINT TO FIRST BYTE OF KEY  0773 01809000
*                                      POSITION IN RECD.             */ 01810000
         LR    RWORK2,RWORK3                                       0773 01811000
         SLR   RWORK2,@15                                          0773 01812000
*         RWORK4=ADDR(ICWKEY1)+ICWCEF;/* POINT TO FIRST BYTE OF KEY     01813000
*                                      TO BE STORED                  */ 01814000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0774 01815000
         ALR   RWORK4,@10                                          0774 01816000
*         RWORK5=ICWCEL;            /* SET LENGTH                    */ 01817000
         LR    RWORK5,@15                                          0775 01818000
*         RWORK3=RWORK5;            /* SAME LENGTH TO RWORK3         */ 01819000
         LR    RWORK3,RWORK5                                       0776 01820000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE KEY TO RECORD            */ 01821000
         MVCL  RWORK2,RWORK4                                            01822000
*         RESPECIFY                                                0778 01823000
*          (RWORK5) UNRSTD;         /*                               */ 01824000
*         RWORK2=ICWBUFC->BUFCBAD;  /* POINT TO BUFFER               */ 01825000
         L     @10,ICWBUFC(,RWORK1)                                0779 01826000
         L     RWORK2,BUFCBAD(,@10)                                0779 01827000
*         RWORK2->IXHLEO=RWORK2->IXHLEO-/* REESTABLISH NEW           */ 01828000
*             ICWCEL-               /* OFFSET TO LAST                */ 01829000
*             RWORK2->IXHFLPLN;     /* ENTRY                         */ 01830000
         LH    @10,IXHLEO(,RWORK2)                                 0780 01831000
         SLR   @09,@09                                             0780 01832000
         IC    @09,ICWCEL(,RWORK1)                                 0780 01833000
         SLR   @10,@09                                             0780 01834000
         SLR   @09,@09                                             0780 01835000
         IC    @09,IXHFLPLN(,RWORK2)                               0780 01836000
         SLR   @10,@09                                             0780 01837000
         STH   @10,IXHLEO(,RWORK2)                                 0780 01838000
*         IF ICWVSE=OFF THEN        /* IF FIRST SECTION HAS          */ 01839000
         TM    ICWVSE(RWORK1),B'00010000'                          0781 01840000
         BNZ   @RF00781                                            0781 01841000
*           RWORK2->IXHSEO=RWORK2->IXHLEO;/* NOT BEEN WRITTEN, POINT    01842000
*                                      FIRST SECTION DISPLACEMENT TO    01843000
*                                      THE DUMMY ENTRY               */ 01844000
         STH   @10,IXHSEO(,RWORK2)                                 0782 01845000
*         ELSE                      /* UPDATE SECTION CHAIN          */ 01846000
*           DO;                     /* AFTER FIRST SECTION           */ 01847000
         B     @RC00781                                            0783 01848000
@RF00781 DS    0H                                                  0784 01849000
*             RWORK4=RWORK2+ICWPSEO;/* POINT TO SECTION ENTRY        */ 01850000
         LR    RWORK4,RWORK2                                       0784 01851000
         LH    @10,ICWPSEO(,RWORK1)                                0784 01852000
         ALR   RWORK4,@10                                          0784 01853000
*             RWORK3=RWORK4-        /* POINT TO THE FORWARD          */ 01854000
*                 RWORK4->IBFLPL-   /* CHAINING FIELD OF             */ 01855000
*                 LENGTH(IXSELL);   /* THAT SECTION ENTRY            */ 01856000
         LR    RWORK3,RWORK4                                       0785 01857000
         SLR   @10,@10                                             0785 01858000
         IC    @10,IBFLPL(,RWORK4)                                 0785 01859000
         SLR   RWORK3,@10                                          0785 01860000
         BCTR  RWORK3,0                                            0785 01861000
         BCTR  RWORK3,0                                            0785 01862000
*             RWORK4='03'X;         /* MASK FOR TWO BYTES            */ 01863000
         LA    RWORK4,3                                            0786 01864000
*             RPARM1=ZERO;          /* ASSURE A CLEAN REGISTER       */ 01865000
         SLR   RPARM1,RPARM1                                       0787 01866000
*             GEN(EX  RWORK4,PICKPT);/* GET PTR. FLD. IN RPARM1      */ 01867000
         EX  RWORK4,PICKPT                                              01868000
*             RPARM1=RPARM1+ICWCEL+ /* INCREMENT THE POINTER         */ 01869000
*                 RWORK2->IXHFLPLN; /* BY LENGTH OF ENTRY            */ 01870000
         LR    @10,RPARM1                                          0789 01871000
         SLR   @09,@09                                             0789 01872000
         IC    @09,ICWCEL(,RWORK1)                                 0789 01873000
         ALR   @10,@09                                             0789 01874000
         SLR   @09,@09                                             0789 01875000
         IC    @09,IXHFLPLN(,RWORK2)                               0789 01876000
         ALR   @10,@09                                             0789 01877000
         LR    RPARM1,@10                                          0789 01878000
*             GEN(EX  RWORK4,STOREPT);/* REPLACE THE POINTER         */ 01879000
         EX  RWORK4,STOREPT                                             01880000
*           END;                    /*                               */ 01881000
*         IF ICWLN=ICWSS|ICWSPLIT=ON THEN/* SEQ SET OR SPLIT         */ 01882000
@RC00781 CLC   ICWLN(2,RWORK1),@CH00053                            0792 01883000
         BE    @RT00792                                            0792 01884000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0792 01885000
         BNO   @RF00792                                            0792 01886000
@RT00792 DS    0H                                                  0793 01887000
*           DO;                     /* YES                           */ 01888000
*             RWORK3=RWORK2+        /* POINT TO FIRST UNUSED         */ 01889000
*                 RWORK2->IXHFSO-   /* CI POINTER IN THE             */ 01890000
*                 ICWPTL;           /* RECORD                        */ 01891000
         LR    RWORK3,RWORK2                                       0794 01892000
         LH    @10,IXHFSO(,RWORK2)                                 0794 01893000
         ALR   RWORK3,@10                                          0794 01894000
         SLR   @10,@10                                             0794 01895000
         IC    @10,ICWPTL(,RWORK1)                                 0794 01896000
         SLR   RWORK3,@10                                          0794 01897000
*             RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HEADER         */ 01898000
         SLR   RWORK4,RWORK4                                       0795 01899000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0795 01900000
*             RESPECIFY                                            0796 01901000
*              (RWORK0) RSTD;       /*                               */ 01902000
*             RWORK0=RWORK3;        /* SAVE LOCATION OF PTR.         */ 01903000
         LR    RWORK0,RWORK3                                       0797 01904000
*             IF RWORK0^<RWORK2+LENGTH(IDAIXH) THEN/* ANY PTRS LEFT  */ 01905000
         LA    @10,24                                              0798 01906000
         ALR   @10,RWORK2                                          0798 01907000
         CLR   RWORK0,@10                                          0798 01908000
         BL    @RF00798                                            0798 01909000
*               GEN(EX  RWORK4,PICKPT);/* YES, PICK UP ONE           */ 01910000
         EX  RWORK4,PICKPT                                              01911000
*             ELSE                  /* NO                            */ 01912000
*               RPARM1=AMBLDTA->AMBDSB->AMDCIPCA-ONE;/* GENERATE IT  */ 01913000
         B     @RC00798                                            0800 01914000
@RF00798 L     @10,RPLDACB(,RRPL)                                  0800 01915000
         L     @10,ACBAMBL(,@10)                                   0800 01916000
         L     @10,AMBLDTA(,@10)                                   0800 01917000
         L     @10,AMBDSB(,@10)                                    0800 01918000
         LH    RPARM1,AMDCIPCA(,@10)                               0800 01919000
         BCTR  RPARM1,0                                            0800 01920000
*             RWORK3=RWORK2+        /* POINT TO THE DUMMY            */ 01921000
*                 RWORK2->IXHLEO+   /* ENTRYS POINTER                */ 01922000
*                 LENGTH(IBFLPF)+   /* FIELD                         */ 01923000
*                 LENGTH(IBFLPL);   /*                               */ 01924000
@RC00798 LR    RWORK3,RWORK2                                       0801 01925000
         LH    @10,IXHLEO(,RWORK2)                                 0801 01926000
         ALR   RWORK3,@10                                          0801 01927000
         AL    RWORK3,@CF00146                                     0801 01928000
*             GEN(EX  RWORK4,STOREPT);/* PLACE NEW DUMMY POINTER     */ 01929000
         EX  RWORK4,STOREPT                                             01930000
*             RWORK2->IXHFSO=RWORK2->IXHFSO/* UPDATE FREESPACE       */ 01931000
*                 -ICWPTL;          /* OFFSET                        */ 01932000
         LH    @10,IXHFSO(,RWORK2)                                 0803 01933000
         SLR   @09,@09                                             0803 01934000
         IC    @09,ICWPTL(,RWORK1)                                 0803 01935000
         SLR   @10,@09                                             0803 01936000
         STH   @10,IXHFSO(,RWORK2)                                 0803 01937000
*             IF RWORK0^<RWORK2+LENGTH(IDAIXH) THEN/* IF HEADER IS 0804 01938000
*                                      SAFE FROM VIOLATION FOR SPLIT    01939000
*                                      CASE, THEN                    */ 01940000
         LA    @10,24                                              0804 01941000
         ALR   @10,RWORK2                                          0804 01942000
         CLR   RWORK0,@10                                          0804 01943000
         BL    @RF00804                                            0804 01944000
*               DO;                 /* CLEAR PTR. JUST TAKEN         */ 01945000
*                 RPARM1=ZERO;      /* CLEAR REGISTER                */ 01946000
         SLR   RPARM1,RPARM1                                       0806 01947000
*                 RWORK3=RWORK0;    /* POINT BACK TO PTR AREA        */ 01948000
         LR    RWORK3,RWORK0                                       0807 01949000
*                 GEN(EX  RWORK4,STOREPT);/* CLEAR USED POINTER      */ 01950000
         EX  RWORK4,STOREPT                                             01951000
*                 RESPECIFY                                        0809 01952000
*                  (RWORK0) UNRSTD; /*                               */ 01953000
*               END;                /*                               */ 01954000
*             IF ICWVSE=OFF&ICWSCNT=ONE&/* FIRST ENTRY IN RECD.      */ 01955000
*                 ICWSPLIT=OFF THEN /* AND CREATE MODE               */ 01956000
@RF00804 TM    ICWVSE(RWORK1),B'00010000'                          0811 01957000
         BNZ   @RF00811                                            0811 01958000
         CLC   ICWSCNT(2,RWORK1),@CH00053                          0811 01959000
         BNE   @RF00811                                            0811 01960000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0811 01961000
         BNZ   @RF00811                                            0811 01962000
*               CALL SETBASE;       /* SET BASE RBA          @X04SVES*/ 01963000
         BAL   @14,SETBASE                                         0812 01964000
*           END;                    /*                               */ 01965000
*         ELSE                      /* NOT SEQ SET LEVEL             */ 01966000
*           DO;                                                    0814 01967000
         B     @RC00792                                            0814 01968000
@RF00792 DS    0H                                                  0815 01969000
*             RWORK3=AMBIWA;        /* POINT TO LOW LEVEL            */ 01970000
         L     RWORK3,AMBIWA(,RAMB)                                0815 01971000
*             DO WHILE RWORK3->ICWCHN^=RWORK1;/* LOOP TO FIND PREV.  */ 01972000
         B     @DE00816                                            0816 01973000
@DL00816 DS    0H                                                  0817 01974000
*               RWORK3=RWORK3->ICWCHN;/* LEVEL                       */ 01975000
         L     RWORK3,ICWCHN(,RWORK3)                              0817 01976000
*             END;                  /*                               */ 01977000
@DE00816 C     RWORK1,ICWCHN(,RWORK3)                              0818 01978000
         BNE   @DL00816                                            0818 01979000
*             RPARM1=(RWORK3->ICWCRBA)/AMDCINV;/* REDUCE DDDD        */ 01980000
         L     @10,AMBDSB(,RAMB)                                   0819 01981000
         L     @15,ICWCRBA(,RWORK3)                                0819 01982000
         SLR   @14,@14                                             0819 01983000
         D     @14,AMDCINV(,@10)                                   0819 01984000
         LR    RPARM1,@15                                          0819 01985000
*             RWORK3=RWORK2+        /* POINT TO DUMMYS POINTER       */ 01986000
*                 RWORK2->IXHLEO+   /*                               */ 01987000
*                 LENGTH(IBFLPF)+   /*                               */ 01988000
*                 LENGTH(IBFLPL);   /*                               */ 01989000
         LR    RWORK3,RWORK2                                       0820 01990000
         LH    @10,IXHLEO(,RWORK2)                                 0820 01991000
         ALR   RWORK3,@10                                          0820 01992000
         AL    RWORK3,@CF00146                                     0820 01993000
*             RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HEADER         */ 01994000
         SLR   RWORK4,RWORK4                                       0821 01995000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0821 01996000
*             GEN(EX  RWORK4,STOREPT);/* MOVE IN DUMMYS PTR          */ 01997000
         EX  RWORK4,STOREPT                                             01998000
*             RESPECIFY                                            0823 01999000
*              (RWORK2,                                            0823 02000000
*               RWORK3,                                            0823 02001000
*               RWORK4) UNRSTD;     /*                               */ 02002000
*           END;                    /*                               */ 02003000
*       END;                        /*                               */ 02004000
@RC00792 DS    0H                                                  0826 02005000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 02006000
@RC00650 DS    0H                                                  0826 02007000
@RC00645 BAL   @14,EXIT                                            0826 02008000
*                                                                  0827 02009000
*   /*****************************************************************/ 02010000
*   /*                                                               */ 02011000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * @X04SVES*/ 02012000
*   /* SETBASE SUBROUTINE                                    @X04SVES*/ 02013000
*   /*                                                       @X04SVES*/ 02014000
*   /* FUNCTION                                              @X04SVES*/ 02015000
*   /* SETS BASE RBA IN THE INDEX RECORD ADDRESSED           @X04SVES*/ 02016000
*   /* BY RWORK2. THE BASE RBA IS TAKEN FROM THE DATA        @X04SVES*/ 02017000
*   /* BUFCORBA IF THE FIRST RECORD ADDRESSED IS NOT         @X04SVES*/ 02018000
*   /* SPANNED. THE BASE RBA IS TAKEN FROM BUFXIRBA          @X04SVES*/ 02019000
*   /* IF THE FIRST RECORD IS A SPANNED RECORD.              @X04SVES*/ 02020000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * @X04SVES*/ 02021000
*   /*                                                               */ 02022000
*   /*****************************************************************/ 02023000
*                                                                  0827 02024000
*SETBASE:                                                          0827 02025000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVES*/ 02026000
         B     @PB00003                                            0827 02027000
SETBASE  DS    0H                                                  0828 02028000
*   RESPECIFY                                                      0828 02029000
*    (RWORK1,                                                      0828 02030000
*     RWORK2,                                                      0828 02031000
*     R14) RSTD;                    /*                       @X04SVES*/ 02032000
*   IF ICWNOSEG=ZERO THEN           /* SPND RECORD           @X04SVES*/ 02033000
         LH    @15,ICWNOSEG(,RWORK1)                               0829 02034000
         LTR   @15,@15                                             0829 02035000
         BNZ   @RF00829                                            0829 02036000
*     RWORK2->IXHBRBA=PLHDBUFC->BUFCORBA;/* NO, USE ORBA     @X04SVES*/ 02037000
         L     @15,PLHDBUFC(,RPLH)                                 0830 02038000
         L     @15,BUFCORBA(,@15)                                  0830 02039000
         ST    @15,IXHBRBA(,RWORK2)                                0830 02040000
*   ELSE                            /* FOR SPND RECDS        @X04SVES*/ 02041000
*     RWORK2->IXHBRBA=PLHDBUFC->BUFXIRBA;/* USE XIRBA        @X04SVES*/ 02042000
         B     @RC00829                                            0831 02043000
@RF00829 L     @15,PLHDBUFC(,RPLH)                                 0831 02044000
         L     @15,BUFXIRBA(,@15)                                  0831 02045000
         ST    @15,IXHBRBA(,RWORK2)                                0831 02046000
*   END SETBASE;                    /* RETURN                @X04SVES*/ 02047000
@EL00003 DS    0H                                                  0832 02048000
@EF00003 DS    0H                                                  0832 02049000
@ER00003 BR    @14                                                 0832 02050000
*   RESPECIFY                                                      0833 02051000
*    (RWORK1,                                                      0833 02052000
*     RWORK2,                                                      0833 02053000
*     R14) UNRSTD;                  /*                       @X04SVES*/ 02054000
*                                                                  0834 02055000
*   /*****************************************************************/ 02056000
*   /*                                                               */ 02057000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * *@X04SVES */ 02058000
*   /* EXIT SUBROUTINE                                       @X04SVES*/ 02059000
*   /*                                                       @X04SVES*/ 02060000
*   /* FUNCTION:                                             @X04SVES*/ 02061000
*   /* RESTORES REGISTER 14 FROM THE PLACEHOLDER             @X04SVES*/ 02062000
*   /* PUSH DOWN LIST AND RETURNS                            @X04SVES*/ 02063000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * *@X04SVES */ 02064000
*   /*                                                               */ 02065000
*   /*****************************************************************/ 02066000
*                                                                  0834 02067000
*EXIT:                                                             0834 02068000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVES*/ 02069000
EXIT     DS    0H                                                  0835 02070000
*   GEN(IDARST14);                  /* RESTORE R14           @X04SVES*/ 02071000
         IDARST14                                                       02072000
*   END EXIT;                       /* RETURN                @X04SVES*/ 02073000
@EL00004 DS    0H                                                  0836 02074000
@EF00004 DS    0H                                                  0836 02075000
@ER00004 BR    @14                                                 0836 02076000
@PB00004 DS    0H                                                  0837 02077000
*   GEN;                                                           0837 02078000
*                                          /*                        */ 02079000
PICKPT   ICM   RPARM1,@00,@00(RWORK3)      /* OBTAINS POINTER        */ 02080000
STOREPT  STCM  RPARM1,@00,@00(RWORK3)      /* STORES POINTER         */ 02081000
*   GEN(IDAPATCH);                  /*                               */ 02082000
         IDAPATCH                                                       02083000
*   END IDA019RG                    /*                               */ 02084000
*                                                                  0839 02085000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02086000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02087000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02088000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02089000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02090000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02091000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02092000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02093000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02094000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 02095000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02096000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02097000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02098000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02099000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02100000
*                                                                  0839 02101000
*       ;                                                          0839 02102000
@EL00001 DS    0H                                                  0839 02103000
@EF00001 DS    0H                                                  0839 02104000
@ER00001 BR    @14                                                 0839 02105000
@DATA    DS    0H                                                       02106000
@CH00083 DC    H'24'                                                    02107000
@DATD    DSECT                                                          02108000
         DS    0F                                                       02109000
IDA019RG CSECT                                                          02110000
         DS    0F                                                       02111000
@CF00053 DC    F'1'                                                     02112000
@CH00053 EQU   @CF00053+2                                               02113000
@CF00146 DC    F'2'                                                     02114000
@CF00159 DC    F'3'                                                     02115000
@CF00199 DC    F'7'                                                     02116000
@CF00958 DC    F'256'                                                   02117000
@CF01050 DC    XL4'0000FFFF'                                            02118000
@DATD    DSECT                                                          02119000
         DS    0D                                                       02120000
IDA019RG CSECT                                                          02121000
         DS    0F                                                       02122000
@SIZDATD DC    AL1(0)                                                   02123000
         DC    AL3(@ENDDATD-@DATD)                                      02124000
@CA00988 DC    A(IDAIST)                                                02125000
@CV00945 DC    V(IDAAQR)                                                02126000
@CV00946 DC    V(IDAEOVIF)                                              02127000
@CV00947 DC    V(IDAFREEB)                                              02128000
@CV00948 DC    V(IDAGNFL)                                               02129000
@CV00949 DC    V(IDAR)                                                  02130000
@CV00950 DC    V(IDASPNPT)                                              02131000
@CV00951 DC    V(IDAWR)                                                 02132000
@CV00952 DC    V(IDAER)                                                 02133000
         DS    0D                                                       02134000
HWORD4   DC    H'4'                                                     02135000
@DATD    DSECT                                                          02136000
*                                                          /*@X04SVLC*/ 02137000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02138000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02139000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02140000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02141000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02142000
RDFLEN   EQU   3                        LENGTH OF RDF                   02143000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02144000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02145000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02146000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02147000
@DATD    DSECT                                                          02148000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02149000
@ENDDATD EQU   *                                                        02150000
IDA019RG CSECT                                                          02151000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02152000
@01      EQU   01                                                       02153000
@02      EQU   02                                                       02154000
@03      EQU   03                                                       02155000
@04      EQU   04                                                       02156000
@05      EQU   05                                                       02157000
@06      EQU   06                                                       02158000
@07      EQU   07                                                       02159000
@08      EQU   08                                                       02160000
@09      EQU   09                                                       02161000
@10      EQU   10                                                       02162000
@11      EQU   11                                                       02163000
@12      EQU   12                                                       02164000
@13      EQU   13                                                       02165000
@14      EQU   14                                                       02166000
@15      EQU   15                                                       02167000
RWORK0   EQU   @00                                                      02168000
RRPL     EQU   @01                                                      02169000
R1       EQU   @01                                                      02170000
RPLH     EQU   @02                                                      02171000
RAMB     EQU   @03                                                      02172000
RBUFC    EQU   @04                                                      02173000
RWORK1   EQU   @05                                                      02174000
RWORK2   EQU   @06                                                      02175000
RWORK3   EQU   @07                                                      02176000
RWORK4   EQU   @08                                                      02177000
RWORK5   EQU   @09                                                      02178000
RPARM1   EQU   @12                                                      02179000
R14      EQU   @14                                                      02180000
R15      EQU   @15                                                      02181000
R10      EQU   @10                                                      02182000
R11      EQU   @11                                                      02183000
R13      EQU   @13                                                      02184000
IFGRPL   EQU   0                                                        02185000
RPLCOMN  EQU   IFGRPL                                                   02186000
RPLIDWD  EQU   RPLCOMN                                                  02187000
RPLLEN   EQU   RPLIDWD+3                                                02188000
RPLECB   EQU   RPLCOMN+8                                                02189000
RPLFDBWD EQU   RPLCOMN+12                                               02190000
RPLFDBK  EQU   RPLFDBWD+1                                               02191000
RPLRTNCD EQU   RPLFDBK                                                  02192000
RPLERREG EQU   RPLRTNCD                                                 02193000
RPLCNDCD EQU   RPLFDBK+1                                                02194000
RPLCMPON EQU   RPLCNDCD                                                 02195000
RPLFDB2  EQU   RPLCMPON                                                 02196000
RPLERRCD EQU   RPLCNDCD+1                                               02197000
RPLFDB3  EQU   RPLERRCD                                                 02198000
RPLKEYLE EQU   RPLCOMN+16                                               02199000
RPLDACB  EQU   RPLCOMN+24                                               02200000
RPLAREA  EQU   RPLCOMN+32                                               02201000
RPLARG   EQU   RPLCOMN+36                                               02202000
RPLOPTCD EQU   RPLCOMN+40                                               02203000
RPLOPT1  EQU   RPLOPTCD                                                 02204000
RPLECBSW EQU   RPLOPT1                                                  02205000
RPLOPT2  EQU   RPLOPTCD+1                                               02206000
RPLADR   EQU   RPLOPT2                                                  02207000
RPLOPT3  EQU   RPLOPTCD+2                                               02208000
RPLNXTRP EQU   RPLCOMN+44                                               02209000
RPLOPTC2 EQU   RPLCOMN+56                                               02210000
RPLOPT5  EQU   RPLOPTC2                                                 02211000
RPLWRTYP EQU   RPLOPT5                                                  02212000
RPLOPT6  EQU   RPLOPTC2+1                                               02213000
RPLUNTYP EQU   RPLOPT6                                                  02214000
RPLOPT7  EQU   RPLOPTC2+2                                               02215000
RPLCNOPT EQU   RPLOPT7                                                  02216000
RPLOPT8  EQU   RPLOPTC2+3                                               02217000
RPLRBAR  EQU   RPLCOMN+60                                               02218000
RPLAIXID EQU   RPLRBAR+2                                                02219000
RPLEXTDS EQU   RPLCOMN+68                                               02220000
RPLEXTD1 EQU   RPLEXTDS                                                 02221000
IDAAMBL  EQU   0                                                        02222000
AMBLEOV  EQU   IDAAMBL+12                                               02223000
AMBLEFLG EQU   AMBLEOV                                                  02224000
AMBLDDNM EQU   IDAAMBL+16                                               02225000
AMBLIDF  EQU   AMBLDDNM                                                 02226000
AMBLQ    EQU   AMBLIDF+7                                                02227000
AMBLVC   EQU   IDAAMBL+28                                               02228000
AMBLTYPE EQU   IDAAMBL+30                                               02229000
AMBLSHAR EQU   IDAAMBL+33                                               02230000
AMBLFLG1 EQU   IDAAMBL+35                                               02231000
AMBLCAT  EQU   AMBLFLG1                                                 02232000
AMBLFLG2 EQU   IDAAMBL+36                                               02233000
AMBLDTA  EQU   IDAAMBL+52                                               02234000
AMBLIX   EQU   IDAAMBL+56                                               02235000
IDAPLHDR EQU   0                                                        02236000
IDAPLH   EQU   0                                                        02237000
PLHFLG1  EQU   IDAPLH+2                                                 02238000
PLHFLG2  EQU   IDAPLH+3                                                 02239000
PLHKRE   EQU   PLHFLG2                                                  02240000
PLHEFLGS EQU   IDAPLH+4                                                 02241000
PLHFLG3  EQU   IDAPLH+6                                                 02242000
PLHAFLGS EQU   IDAPLH+7                                                 02243000
PLHCRPL  EQU   IDAPLH+20                                                02244000
PLHCRBA  EQU   IDAPLH+28                                                02245000
PLHJORBA EQU   PLHCRBA                                                  02246000
PLHJCODE EQU   IDAPLH+40                                                02247000
PLHEOVR  EQU   IDAPLH+42                                                02248000
PLHARDB  EQU   IDAPLH+44                                                02249000
PLHLRECL EQU   IDAPLH+48                                                02250000
PLHDBUFC EQU   IDAPLH+52                                                02251000
PLHDIOB  EQU   IDAPLH+76                                                02252000
PLHSAVE1 EQU   IDAPLH+84                                                02253000
PLHSAVE2 EQU   IDAPLH+88                                                02254000
PLHRETO  EQU   IDAPLH+116                                               02255000
PLHRET1  EQU   IDAPLH+120                                               02256000
PLHEOVPT EQU   IDAPLH+180                                               02257000
PLHIXSPL EQU   IDAPLH+200                                               02258000
PLHSSRBA EQU   PLHIXSPL                                                 02259000
PLHWAX   EQU   IDAPLH+232                                               02260000
PLHNOSEG EQU   IDAPLH+240                                               02261000
PLHKEYPT EQU   IDAPLH+248                                               02262000
PLHEND   EQU   IDAPLH+280                                               02263000
PLHKEY   EQU   0                                                        02264000
IDABUFDR EQU   0                                                        02265000
BUFDRCIX EQU   IDABUFDR+9                                               02266000
BUFDRFLG EQU   IDABUFDR+11                                              02267000
IDABUFC  EQU   0                                                        02268000
BUFCAVL  EQU   IDABUFC                                                  02269000
BUFCFLG1 EQU   IDABUFC+1                                                02270000
BUFCVAL  EQU   BUFCFLG1                                                 02271000
BUFCEXC  EQU   BUFCFLG1                                                 02272000
BUFCIOFL EQU   IDABUFC+2                                                02273000
BUFCMW   EQU   BUFCIOFL                                                 02274000
BUFCFLG2 EQU   IDABUFC+3                                                02275000
BUFCPLH  EQU   IDABUFC+4                                                02276000
BUFCDDDD EQU   IDABUFC+8                                                02277000
BUFCORBA EQU   IDABUFC+12                                               02278000
BUFCBAD  EQU   IDABUFC+20                                               02279000
BUFCINV  EQU   IDABUFC+28                                               02280000
BUFXIRBA EQU   IDABUFC+40                                               02281000
IDACIDF  EQU   0                                                        02282000
CIDFOSET EQU   IDACIDF                                                  02283000
CIDFLL   EQU   IDACIDF+2                                                02284000
IDAAMDSB EQU   0                                                        02285000
AMDATTR  EQU   IDAAMDSB+1                                               02286000
AMDNEST  EQU   IDAAMDSB+4                                               02287000
AMDRKP   EQU   IDAAMDSB+6                                               02288000
AMDKEYLN EQU   IDAAMDSB+8                                               02289000
AMDCIPCA EQU   IDAAMDSB+12                                              02290000
AMDCINV  EQU   IDAAMDSB+20                                              02291000
AMDHLRBA EQU   IDAAMDSB+28                                              02292000
AMDSSRBA EQU   IDAAMDSB+32                                              02293000
AMDATTR3 EQU   IDAAMDSB+40                                              02294000
AMDSTAT  EQU   IDAAMDSB+48                                              02295000
AMDNIL   EQU   AMDSTAT+8                                                02296000
IDAARDB  EQU   0                                                        02297000
ARDTYPE  EQU   IDAARDB+1                                                02298000
ARDKR    EQU   ARDTYPE                                                  02299000
ARDPRF   EQU   IDAARDB+28                                               02300000
IDAICWA  EQU   0                                                        02301000
ICWID    EQU   IDAICWA                                                  02302000
ICWFLG1  EQU   IDAICWA+1                                                02303000
ICWWNF   EQU   ICWFLG1                                                  02304000
ICWWAGM  EQU   ICWFLG1                                                  02305000
ICWVSE   EQU   ICWFLG1                                                  02306000
ICWVNE   EQU   ICWFLG1                                                  02307000
ICWKRDS  EQU   ICWFLG1                                                  02308000
ICWSPLIT EQU   ICWFLG1                                                  02309000
ICWENDRQ EQU   ICWFLG1                                                  02310000
ICWLEN   EQU   IDAICWA+2                                                02311000
ICWCHN   EQU   IDAICWA+4                                                02312000
ICWBUFC  EQU   IDAICWA+8                                                02313000
ICWCRBA  EQU   IDAICWA+12                                               02314000
ICWPRBA  EQU   IDAICWA+16                                               02315000
ICWPSEO  EQU   IDAICWA+20                                               02316000
ICWSCNT  EQU   IDAICWA+22                                               02317000
ICWADD   EQU   IDAICWA+24                                               02318000
ICWLN    EQU   IDAICWA+40                                               02319000
ICWKEY1L EQU   IDAICWA+42                                               02320000
ICWKEY2L EQU   IDAICWA+44                                               02321000
ICWKEY3L EQU   IDAICWA+46                                               02322000
ICWNEST  EQU   IDAICWA+48                                               02323000
ICWNOSEG EQU   IDAICWA+50                                               02324000
ICWCRSEG EQU   IDAICWA+52                                               02325000
ICWREQ   EQU   IDAICWA+54                                               02326000
ICWPTL   EQU   IDAICWA+55                                               02327000
ICWCER   EQU   IDAICWA+56                                               02328000
ICWCEF   EQU   IDAICWA+57                                               02329000
ICWCEL   EQU   IDAICWA+58                                               02330000
ICWCERP  EQU   IDAICWA+59                                               02331000
ICWKEY1  EQU   IDAICWA+60                                               02332000
IDAIXH   EQU   0                                                        02333000
IXHLL    EQU   IDAIXH                                                   02334000
IXHFLPLN EQU   IDAIXH+2                                                 02335000
IXHPTLS  EQU   IDAIXH+3                                                 02336000
IXHBRBA  EQU   IDAIXH+4                                                 02337000
IXHHP    EQU   IDAIXH+8                                                 02338000
IXHLV    EQU   IDAIXH+16                                                02339000
IXHFSO   EQU   IDAIXH+18                                                02340000
IXHLEO   EQU   IDAIXH+20                                                02341000
IXHSEO   EQU   IDAIXH+22                                                02342000
IDAIBFLP EQU   0                                                        02343000
IBFLPF   EQU   IDAIBFLP                                                 02344000
IBFLPL   EQU   IDAIBFLP+1                                               02345000
IBFLP3   EQU   IDAIBFLP+2                                               02346000
IBFLP2   EQU   IBFLP3                                                   02347000
IDASELL  EQU   0                                                        02348000
IXSELL   EQU   IDASELL                                                  02349000
IDAIXK   EQU   0                                                        02350000
IFGACB   EQU   0                                                        02351000
ACBCOMN  EQU   IFGACB                                                   02352000
ACBLENG  EQU   ACBCOMN+2                                                02353000
ACBLENG2 EQU   ACBLENG                                                  02354000
ACBAMBL  EQU   ACBCOMN+4                                                02355000
ACBJWA   EQU   ACBAMBL                                                  02356000
ACBMACRF EQU   ACBCOMN+12                                               02357000
ACBMACR1 EQU   ACBMACRF                                                 02358000
ACBADR   EQU   ACBMACR1                                                 02359000
ACBCNV   EQU   ACBMACR1                                                 02360000
ACBMACR2 EQU   ACBMACRF+1                                               02361000
ACBBUFPL EQU   ACBCOMN+20                                               02362000
ACBMACR3 EQU   ACBBUFPL                                                 02363000
ACBRECFM EQU   ACBCOMN+24                                               02364000
ACBCCTYP EQU   ACBCOMN+25                                               02365000
ACBOPT   EQU   ACBCOMN+26                                               02366000
ACBDSORG EQU   ACBOPT                                                   02367000
ACBCROPS EQU   ACBDSORG                                                 02368000
ACBEXLST EQU   ACBCOMN+36                                               02369000
ACBDDNM  EQU   ACBCOMN+40                                               02370000
ACBAMETH EQU   ACBDDNM+3                                                02371000
ACBOFLGS EQU   ACBCOMN+48                                               02372000
ACBEXFG  EQU   ACBOFLGS                                                 02373000
ACBIOSFG EQU   ACBOFLGS                                                 02374000
ACBINFLG EQU   ACBCOMN+50                                               02375000
ACBUJFCB EQU   ACBCOMN+52                                               02376000
ACBBLKSZ EQU   ACBCOMN+60                                               02377000
IDAAMB   EQU   0                                                        02378000
AMBDSB   EQU   IDAAMB+20                                                02379000
AMBEOVR  EQU   IDAAMB+24                                                02380000
AMBFLG0  EQU   AMBEOVR                                                  02381000
AMBFLG1  EQU   IDAAMB+25                                                02382000
AMBDSORG EQU   IDAAMB+26                                                02383000
AMBIOBAD EQU   IDAAMB+28                                                02384000
AMBINFL  EQU   IDAAMB+42                                                02385000
AMBDEBPT EQU   IDAAMB+44                                                02386000
AMBOFLGS EQU   IDAAMB+48                                                02387000
AMBFLG2  EQU   IDAAMB+49                                                02388000
AMBEOVPT EQU   IDAAMB+56                                                02389000
AMBIWA   EQU   IDAAMB+64                                                02390000
AMBCSWD1 EQU   IDAAMB+84                                                02391000
AMBAFLG  EQU   AMBCSWD1                                                 02392000
IDARDF   EQU   0                                                        02393000
RDFRBYTE EQU   IDARDF                                                   02394000
RDFSEG   EQU   RDFRBYTE                                                 02395000
RDFLL    EQU   IDARDF+1                                                 02396000
IDADATA  EQU   0                                                        02397000
IDAKEY   EQU   0                                                        02398000
ICWKEY2  EQU   0                                                        02399000
ICWKEY3  EQU   0                                                        02400000
PLHPDL   EQU   0                                                        02401000
PLHPDLE  EQU   0                                                        02402000
PLHRRN   EQU   0                                                        02403000
PLHEXTEN EQU   PLHEND                                                   02404000
PLHBMWRK EQU   PLHEXTEN+5                                               02405000
BUFCRSC1 EQU   BUFCAVL                                                  02406000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02407000
PLHBMSV5 EQU   PLHEXTEN+24                                              02408000
PLHBMSV4 EQU   PLHEXTEN+20                                              02409000
PLHBMSV3 EQU   PLHEXTEN+16                                              02410000
PLHBMSV2 EQU   PLHEXTEN+12                                              02411000
PLHBMSV1 EQU   PLHEXTEN+8                                               02412000
PLHRDCNT EQU   PLHEXTEN+6                                               02413000
PLHBMSOV EQU   PLHBMWRK                                                 02414000
PLHBEUC  EQU   PLHBMWRK                                                 02415000
PLHBMRDF EQU   PLHBMWRK                                                 02416000
@NM00018 EQU   PLHEXTEN+4                                               02417000
PLHRESR1 EQU   PLHEXTEN                                                 02418000
KEY      EQU   IDAKEY                                                   02419000
AMDATA   EQU   IDADATA                                                  02420000
RDFEMPTY EQU   RDFRBYTE                                                 02421000
RDFREPL  EQU   RDFRBYTE                                                 02422000
RDF1ST   EQU   RDFSEG                                                   02423000
RDFNOT1  EQU   RDFSEG                                                   02424000
RDFCTNU  EQU   RDFRBYTE                                                 02425000
RDFTYPE  EQU   RDFRBYTE                                                 02426000
AMBTRACE EQU   IDAAMB+120                                               02427000
AMBVIOT  EQU   IDAAMB+116                                               02428000
AMBSZCP  EQU   IDAAMB+114                                               02429000
AMBSZFW  EQU   IDAAMB+112                                               02430000
AMBSZWR  EQU   IDAAMB+110                                               02431000
AMBSZRD  EQU   IDAAMB+108                                               02432000
AMBEXEX  EQU   IDAAMB+100                                               02433000
AMBWSHD  EQU   IDAAMB+96                                                02434000
AMBCPA   EQU   IDAAMB+92                                                02435000
AMBBM2SH EQU   IDAAMB+88                                                02436000
AMBRDCNT EQU   AMBCSWD1+2                                               02437000
@NM00047 EQU   AMBCSWD1+1                                               02438000
@NM00046 EQU   AMBAFLG                                                  02439000
AMBCFX   EQU   AMBAFLG                                                  02440000
AMBSIS   EQU   AMBAFLG                                                  02441000
AMBDFR   EQU   AMBAFLG                                                  02442000
AMBICI   EQU   AMBAFLG                                                  02443000
AMBGSR   EQU   AMBAFLG                                                  02444000
AMBLSR   EQU   AMBAFLG                                                  02445000
@NM00045 EQU   AMBAFLG                                                  02446000
AMBUPLH  EQU   IDAAMB+80                                                02447000
AMBPAMBL EQU   IDAAMB+76                                                02448000
AMBPIXP  EQU   IDAAMB+72                                                02449000
@NM00044 EQU   IDAAMB+68                                                02450000
AMBWKA   EQU   IDAAMB+60                                                02451000
AMBAMBXN EQU   AMBEOVPT                                                 02452000
AMBEDB   EQU   IDAAMB+52                                                02453000
AMBRPT   EQU   IDAAMB+50                                                02454000
AMBPUG   EQU   AMBFLG2                                                  02455000
AMBBUSY  EQU   AMBOFLGS                                                 02456000
AMBEXFG  EQU   AMBOFLGS                                                 02457000
@NM00043 EQU   AMBOFLGS                                                 02458000
AMBOPEN  EQU   AMBOFLGS                                                 02459000
@NM00042 EQU   AMBOFLGS                                                 02460000
AMBDEBAD EQU   AMBDEBPT+1                                               02461000
AMBIFLGS EQU   AMBDEBPT                                                 02462000
AMBAMETH EQU   IDAAMB+43                                                02463000
AMBUPX   EQU   AMBINFL                                                  02464000
AMBUCRA  EQU   AMBINFL                                                  02465000
AMBSCRA  EQU   AMBINFL                                                  02466000
AMBCAT   EQU   AMBINFL                                                  02467000
@NM00041 EQU   AMBINFL                                                  02468000
@NM00040 EQU   AMBINFL                                                  02469000
AMBTIOT  EQU   IDAAMB+40                                                02470000
@NM00039 EQU   IDAAMB+38                                                02471000
AMBDDSN  EQU   IDAAMB+35                                                02472000
AMBCDSN  EQU   IDAAMB+32                                                02473000
AMBIOMB  EQU   AMBIOBAD                                                 02474000
@NM00038 EQU   AMBDSORG+1                                               02475000
AMBDORGA EQU   AMBDSORG+1                                               02476000
@NM00037 EQU   AMBDSORG                                                 02477000
AMBINBUF EQU   AMBFLG1                                                  02478000
AMBJRN   EQU   AMBFLG1                                                  02479000
AMBUBF   EQU   AMBFLG1                                                  02480000
AMBSPEED EQU   AMBFLG1                                                  02481000
AMBPCAT  EQU   AMBFLG1                                                  02482000
AMBMCAT  EQU   AMBFLG1                                                  02483000
AMBTYPE  EQU   AMBFLG1                                                  02484000
AMBCREAT EQU   AMBFLG1                                                  02485000
@NM00036 EQU   AMBFLG0                                                  02486000
AMBPSDS  EQU   AMBFLG0                                                  02487000
AMBCACB  EQU   IDAAMB+16                                                02488000
AMBPH    EQU   IDAAMB+12                                                02489000
AMBBUFC  EQU   IDAAMB+8                                                 02490000
AMBLINK  EQU   IDAAMB+4                                                 02491000
AMBLEN   EQU   IDAAMB+2                                                 02492000
AMBRSC   EQU   IDAAMB+1                                                 02493000
AMBID    EQU   IDAAMB                                                   02494000
ACBAPID  EQU   ACBCOMN+72                                               02495000
ACBCBMWA EQU   ACBCOMN+68                                               02496000
ACBUAPTR EQU   ACBCOMN+64                                               02497000
ACBLRECL EQU   ACBCOMN+62                                               02498000
ACBMSGLN EQU   ACBBLKSZ                                                 02499000
ACBBUFSP EQU   ACBCOMN+56                                               02500000
@NM00035 EQU   ACBUJFCB+1                                               02501000
ACBOPTN  EQU   ACBUJFCB                                                 02502000
ACBVVIC  EQU   ACBINFLG                                                 02503000
ACBUCRA  EQU   ACBINFLG                                                 02504000
ACBSCRA  EQU   ACBINFLG                                                 02505000
ACBCAT   EQU   ACBINFLG                                                 02506000
ACBIJRQE EQU   ACBINFLG                                                 02507000
ACBJEPS  EQU   ACBINFLG                                                 02508000
@NM00034 EQU   ACBINFLG                                                 02509000
ACBERFLG EQU   ACBCOMN+49                                               02510000
ACBBUSY  EQU   ACBIOSFG                                                 02511000
ACBLOCK  EQU   ACBEXFG                                                  02512000
@NM00033 EQU   ACBOFLGS                                                 02513000
ACBDSERR EQU   ACBOFLGS                                                 02514000
ACBOPEN  EQU   ACBOFLGS                                                 02515000
ACBEOV   EQU   ACBOFLGS                                                 02516000
@NM00032 EQU   ACBOFLGS                                                 02517000
ACBDEB   EQU   ACBDDNM+5                                                02518000
ACBERFL  EQU   ACBDDNM+4                                                02519000
ACBAM    EQU   ACBAMETH                                                 02520000
ACBINFL  EQU   ACBDDNM+2                                                02521000
ACBTIOT  EQU   ACBDDNM                                                  02522000
ACBUEL   EQU   ACBEXLST                                                 02523000
ACBPASSW EQU   ACBCOMN+32                                               02524000
ACBMSGAR EQU   ACBCOMN+28                                               02525000
@NM00031 EQU   ACBDSORG+1                                               02526000
ACBDORGA EQU   ACBDSORG+1                                               02527000
@NM00030 EQU   ACBDSORG                                                 02528000
ACBCRNRE EQU   ACBCROPS                                                 02529000
ACBCRNCK EQU   ACBCROPS                                                 02530000
ACBASA   EQU   ACBCCTYP                                                 02531000
@NM00029 EQU   ACBCCTYP                                                 02532000
ACBRECAF EQU   ACBRECFM                                                 02533000
ACBJBUF  EQU   ACBBUFPL+2                                               02534000
ACBMACR4 EQU   ACBBUFPL+1                                               02535000
@NM00028 EQU   ACBMACR3                                                 02536000
ACBNCFX  EQU   ACBMACR3                                                 02537000
ACBSIS   EQU   ACBMACR3                                                 02538000
ACBDFR   EQU   ACBMACR3                                                 02539000
ACBICI   EQU   ACBMACR3                                                 02540000
ACBGSR   EQU   ACBMACR3                                                 02541000
ACBLSR   EQU   ACBMACR3                                                 02542000
@NM00027 EQU   ACBMACR3                                                 02543000
ACBBUFNI EQU   ACBCOMN+18                                               02544000
ACBBUFND EQU   ACBCOMN+16                                               02545000
ACBSTRNO EQU   ACBCOMN+15                                               02546000
ACBBSTNO EQU   ACBCOMN+14                                               02547000
ACBAIX   EQU   ACBMACR2                                                 02548000
ACBDSN   EQU   ACBMACR2                                                 02549000
ACBRST   EQU   ACBMACR2                                                 02550000
ACBLOGON EQU   ACBMACR2                                                 02551000
ACBSKP   EQU   ACBMACR2                                                 02552000
@NM00026 EQU   ACBMACR2                                                 02553000
ACBUBF   EQU   ACBMACR1                                                 02554000
ACBOUT   EQU   ACBMACR1                                                 02555000
ACBIN    EQU   ACBMACR1                                                 02556000
ACBDIR   EQU   ACBMACR1                                                 02557000
ACBSEQ   EQU   ACBMACR1                                                 02558000
ACBBLK   EQU   ACBCNV                                                   02559000
ACBADD   EQU   ACBADR                                                   02560000
ACBKEY   EQU   ACBMACR1                                                 02561000
ACBINRTN EQU   ACBCOMN+8                                                02562000
ACBIBCT  EQU   ACBJWA                                                   02563000
ACBLEN2  EQU   ACBLENG2                                                 02564000
ACBSTYP  EQU   ACBCOMN+1                                                02565000
ACBID    EQU   ACBCOMN                                                  02566000
IXKEY    EQU   IDAIXK                                                   02567000
IBFLP1   EQU   IBFLP2                                                   02568000
IXHFLGS  EQU   IDAIXH+17                                                02569000
IXHXX    EQU   IDAIXH+12                                                02570000
ICWARDBP EQU   IDAICWA+36                                               02571000
ICWTPTR  EQU   IDAICWA+32                                               02572000
ICWTBASE EQU   IDAICWA+28                                               02573000
ICWRBAOK EQU   ICWFLG1                                                  02574000
ARDKEYS  EQU   IDAARDB+29                                               02575000
@NM00025 EQU   ARDPRF                                                   02576000
ARDPRFMT EQU   ARDPRF                                                   02577000
ARDPRSS  EQU   ARDPRF                                                   02578000
ARDRELNO EQU   IDAARDB+26                                               02579000
ARDVOLSR EQU   IDAARDB+20                                               02580000
ARDERBA  EQU   IDAARDB+16                                               02581000
ARDHRBA  EQU   IDAARDB+12                                               02582000
ARDHKRBA EQU   IDAARDB+8                                                02583000
ARDNPTR  EQU   IDAARDB+4                                                02584000
ARDLEN   EQU   IDAARDB+2                                                02585000
ARDUSED  EQU   ARDTYPE                                                  02586000
ARDEOD   EQU   ARDTYPE                                                  02587000
ARDUOVFL EQU   ARDTYPE                                                  02588000
ARDSS    EQU   ARDTYPE                                                  02589000
ARDHLI   EQU   ARDTYPE                                                  02590000
ARDID    EQU   IDAARDB                                                  02591000
AMDEXCP  EQU   AMDSTAT+44                                               02592000
AMDNCAS  EQU   AMDSTAT+40                                               02593000
AMDNCIS  EQU   AMDSTAT+36                                               02594000
AMDASPA  EQU   AMDSTAT+32                                               02595000
AMDRETR  EQU   AMDSTAT+28                                               02596000
AMDUPR   EQU   AMDSTAT+24                                               02597000
AMDIREC  EQU   AMDSTAT+20                                               02598000
AMDDELR  EQU   AMDSTAT+16                                               02599000
AMDNLR   EQU   AMDSTAT+12                                               02600000
AMDNEXT  EQU   AMDSTAT+10                                               02601000
AMDSTSP  EQU   AMDSTAT                                                  02602000
@NM00024 EQU   IDAAMDSB+41                                              02603000
@NM00023 EQU   AMDATTR3                                                 02604000
AMDLM    EQU   AMDATTR3                                                 02605000
AMDWAIT  EQU   AMDATTR3                                                 02606000
AMDBIND  EQU   AMDATTR3                                                 02607000
AMDFAULT EQU   AMDATTR3                                                 02608000
AMDUNQ   EQU   AMDATTR3                                                 02609000
AMDPARDB EQU   IDAAMDSB+36                                              02610000
AMDMAXRR EQU   AMDSSRBA                                                 02611000
AMDNSLOT EQU   AMDHLRBA                                                 02612000
AMDLRECL EQU   IDAAMDSB+24                                              02613000
AMDFSCI  EQU   IDAAMDSB+16                                              02614000
AMDFSCA  EQU   IDAAMDSB+14                                              02615000
AMDPCTCI EQU   IDAAMDSB+11                                              02616000
AMDPCTCA EQU   IDAAMDSB+10                                              02617000
AMDAXRKP EQU   AMDNEST                                                  02618000
AMDLEN   EQU   IDAAMDSB+2                                               02619000
AMDSPAN  EQU   AMDATTR                                                  02620000
AMDRRDS  EQU   AMDATTR                                                  02621000
AMDRANGE EQU   AMDATTR                                                  02622000
AMDORDER EQU   AMDATTR                                                  02623000
AMDREPL  EQU   AMDATTR                                                  02624000
AMDSDT   EQU   AMDATTR                                                  02625000
AMDWCK   EQU   AMDATTR                                                  02626000
AMDDST   EQU   AMDATTR                                                  02627000
AMDSBID  EQU   IDAAMDSB                                                 02628000
@NM00022 EQU   CIDFLL                                                   02629000
CIDFBUSY EQU   CIDFLL                                                   02630000
BUFCEND  EQU   IDABUFC+64                                               02631000
BUFCUCDN EQU   IDABUFC+60                                               02632000
BUFCUCUP EQU   IDABUFC+56                                               02633000
BUFCMDBT EQU   IDABUFC+52                                               02634000
BUFCHAIN EQU   IDABUFC+48                                               02635000
BUFXORBA EQU   IDABUFC+44                                               02636000
BUFCNXT2 EQU   IDABUFC+37                                               02637000
BUFCIDXL EQU   IDABUFC+36                                               02638000
BUFCDSPC EQU   IDABUFC+32                                               02639000
BUFCWLEN EQU   BUFCINV                                                  02640000
BUFCNXT1 EQU   IDABUFC+24                                               02641000
BUFCCPA  EQU   IDABUFC+16                                               02642000
BUFCAMB  EQU   BUFCPLH                                                  02643000
@NM00021 EQU   BUFCFLG2                                                 02644000
BUFCEOD  EQU   BUFCFLG2                                                 02645000
BUFCBSYW EQU   BUFCFLG2                                                 02646000
BUFCBSYR EQU   BUFCFLG2                                                 02647000
BUFCNLAS EQU   BUFCFLG2                                                 02648000
BUFCXDDR EQU   BUFCFLG2                                                 02649000
BUFCFIX  EQU   BUFCIOFL                                                 02650000
BUFCPFCP EQU   BUFCIOFL                                                 02651000
BUFCXEDB EQU   BUFCIOFL                                                 02652000
BUFCWC   EQU   BUFCIOFL                                                 02653000
BUFCREAL EQU   BUFCIOFL                                                 02654000
BUFCRRD  EQU   BUFCIOFL                                                 02655000
BUFCFMT  EQU   BUFCIOFL                                                 02656000
BUFCEPT  EQU   BUFCFLG1                                                 02657000
BUFCER2  EQU   BUFCFLG1                                                 02658000
BUFCER1  EQU   BUFCFLG1                                                 02659000
BUFCINS  EQU   BUFCFLG1                                                 02660000
BUFCSEG  EQU   BUFCFLG1                                                 02661000
BUFCUPG  EQU   BUFCFLG1                                                 02662000
BUFCUCNT EQU   BUFCAVL                                                  02663000
@NM00020 EQU   IDABUFDR+16                                              02664000
BUFDBUFC EQU   IDABUFDR+12                                              02665000
@NM00019 EQU   BUFDRFLG                                                 02666000
BUFDRAVL EQU   BUFDRFLG                                                 02667000
BUFDRREL EQU   BUFDRFLG                                                 02668000
BUFDRTSB EQU   IDABUFDR+10                                              02669000
BUFDRMAX EQU   BUFDRCIX                                                 02670000
BUFDRPFN EQU   IDABUFDR+8                                               02671000
BUFDRPFB EQU   IDABUFDR+4                                               02672000
BUFDRLEN EQU   IDABUFDR+2                                               02673000
BUFDRNO  EQU   IDABUFDR+1                                               02674000
BUFDRID  EQU   IDABUFDR                                                 02675000
PLHERRET EQU   IDAPLH+276                                               02676000
PLHASCB  EQU   IDAPLH+272                                               02677000
PLHECB   EQU   IDAPLH+268                                               02678000
@NM00017 EQU   IDAPLH+265                                               02679000
PLHDRMSK EQU   IDAPLH+264                                               02680000
PLHR13   EQU   IDAPLH+260                                               02681000
PLHPARM1 EQU   IDAPLH+256                                               02682000
PLHDRRSC EQU   IDAPLH+252                                               02683000
PLHSLRBA EQU   IDAPLH+244                                               02684000
PLHSRCSG EQU   IDAPLH+242                                               02685000
PLHLLOR  EQU   IDAPLH+236                                               02686000
PLHXPLH  EQU   PLHWAX                                                   02687000
@NM00016 EQU   PLHIXSPL+8                                               02688000
PLHIXBFC EQU   PLHIXSPL+4                                               02689000
PLHHIREC EQU   PLHSSRBA                                                 02690000
PLHISPLP EQU   IDAPLH+196                                               02691000
PLHRBUFC EQU   IDAPLH+192                                               02692000
PLHIBUFC EQU   IDAPLH+188                                               02693000
PLHNRBA  EQU   IDAPLH+184                                               02694000
PLHDDDD  EQU   PLHEOVPT                                                 02695000
PLHAR14  EQU   IDAPLH+176                                               02696000
@NM00015 EQU   IDAPLH+172                                               02697000
@NM00014 EQU   IDAPLH+168                                               02698000
PLHASAVE EQU   IDAPLH+164                                               02699000
PLHRETOS EQU   IDAPLH+118                                               02700000
PLHCHAIN EQU   IDAPLH+112                                               02701000
PLHAMB   EQU   IDAPLH+108                                               02702000
PLHSAVE6 EQU   IDAPLH+104                                               02703000
PLHSAVE5 EQU   IDAPLH+100                                               02704000
PLHSAVE4 EQU   IDAPLH+96                                                02705000
PLHSAVE3 EQU   IDAPLH+92                                                02706000
PLHARET  EQU   IDAPLH+80                                                02707000
PLHIIOB  EQU   PLHDIOB                                                  02708000
PLHSRSID EQU   IDAPLH+74                                                02709000
PLHRDFC  EQU   IDAPLH+72                                                02710000
PLHRDFP  EQU   IDAPLH+68                                                02711000
PLHFSP   EQU   IDAPLH+64                                                02712000
PLHRECP  EQU   IDAPLH+60                                                02713000
PLHNBUFC EQU   IDAPLH+56                                                02714000
@NM00013 EQU   IDAPLH+43                                                02715000
PLHRCODE EQU   IDAPLH+41                                                02716000
PLHUCODE EQU   PLHJCODE                                                 02717000
PLHJNRBA EQU   IDAPLH+36                                                02718000
PLHJRNLL EQU   IDAPLH+32                                                02719000
PLHUPECB EQU   PLHJORBA                                                 02720000
PLHDSIDA EQU   IDAPLH+24                                                02721000
PLHMRPL  EQU   IDAPLH+16                                                02722000
PLHBFRNO EQU   IDAPLH+15                                                02723000
PLHFRCNT EQU   IDAPLH+14                                                02724000
PLHRMIN  EQU   IDAPLH+13                                                02725000
PLHDSTYP EQU   IDAPLH+12                                                02726000
PLHACB   EQU   IDAPLH+8                                                 02727000
PLHRAE   EQU   PLHAFLGS                                                 02728000
PLHRABWD EQU   PLHAFLGS                                                 02729000
PLHIOSID EQU   PLHAFLGS                                                 02730000
PLHDBDC  EQU   PLHAFLGS                                                 02731000
PLHVAMB  EQU   PLHAFLGS                                                 02732000
PLHIOSRQ EQU   PLHAFLGS                                                 02733000
PLHDRLM  EQU   PLHAFLGS                                                 02734000
PLHEOVDF EQU   PLHFLG3                                                  02735000
PLHRVRS  EQU   PLHFLG3                                                  02736000
PLHBWD   EQU   PLHFLG3                                                  02737000
PLHSLVLD EQU   PLHFLG3                                                  02738000
PLHRAHD  EQU   PLHFLG3                                                  02739000
PLHSRBSG EQU   PLHFLG3                                                  02740000
@NM00012 EQU   PLHEFLGS+1                                               02741000
PLHRSTRT EQU   PLHEFLGS+1                                               02742000
PLHDSCAN EQU   PLHEFLGS                                                 02743000
PLHINVAL EQU   PLHEFLGS                                                 02744000
PLHEODX  EQU   PLHEFLGS                                                 02745000
PLHNOADV EQU   PLHEFLGS                                                 02746000
PLHSRINV EQU   PLHEFLGS                                                 02747000
PLHSKPER EQU   PLHEFLGS                                                 02748000
PLH1ST   EQU   PLHEFLGS                                                 02749000
PLHNOSPC EQU   PLHEFLGS                                                 02750000
PLHIWAIT EQU   PLHFLG2                                                  02751000
PLHSVADV EQU   PLHFLG2                                                  02752000
PLHCIINS EQU   PLHFLG2                                                  02753000
PLHADDTE EQU   PLHFLG2                                                  02754000
PLHKEYMD EQU   PLHFLG2                                                  02755000
PLHSQINS EQU   PLHFLG2                                                  02756000
PLHUPD   EQU   PLHFLG2                                                  02757000
@NM00011 EQU   PLHFLG1                                                  02758000
PLHDRPND EQU   PLHFLG1                                                  02759000
PLHASYRQ EQU   PLHFLG1                                                  02760000
PLHRDEXC EQU   PLHFLG1                                                  02761000
PLHSSR   EQU   PLHFLG1                                                  02762000
PLHASKBF EQU   PLHFLG1                                                  02763000
PLHENDRQ EQU   PLHFLG1                                                  02764000
PLHEOVW  EQU   PLHFLG1                                                  02765000
PLHATV   EQU   IDAPLH+1                                                 02766000
PLHAVL   EQU   IDAPLH                                                   02767000
PLHIOSDQ EQU   IDAPLHDR+12                                              02768000
PLHDRCUR EQU   IDAPLHDR+10                                              02769000
PLHDRMAX EQU   IDAPLHDR+8                                               02770000
PLHDRREQ EQU   IDAPLHDR+4                                               02771000
PLHELTH  EQU   IDAPLHDR+2                                               02772000
PLHCNT   EQU   IDAPLHDR+1                                               02773000
PLHID    EQU   IDAPLHDR                                                 02774000
AMBLCMB  EQU   IDAAMBL+64                                               02775000
AMBLBIB  EQU   IDAAMBL+60                                               02776000
AMBLMIDS EQU   IDAAMBL+42                                               02777000
AMBLNIDS EQU   IDAAMBL+41                                               02778000
@NM00010 EQU   IDAAMBL+40                                               02779000
AMBLNUM  EQU   IDAAMBL+38                                               02780000
AMBLNST  EQU   IDAAMBL+37                                               02781000
@NM00009 EQU   AMBLFLG2                                                 02782000
AMBLSTAG EQU   AMBLFLG2                                                 02783000
@NM00008 EQU   AMBLFLG2                                                 02784000
AMBLDUMY EQU   AMBLFLG1                                                 02785000
AMBLUCRA EQU   AMBLFLG1                                                 02786000
AMBLSCRA EQU   AMBLFLG1                                                 02787000
AMBLVVIC EQU   AMBLFLG1                                                 02788000
AMBLUPD  EQU   AMBLFLG1                                                 02789000
AMBLCINV EQU   AMBLFLG1                                                 02790000
AMBLFULL EQU   AMBLFLG1                                                 02791000
AMBLLEN  EQU   IDAAMBL+34                                               02792000
@NM00007 EQU   AMBLSHAR                                                 02793000
AMBLWRIT EQU   AMBLSHAR                                                 02794000
AMBLCATO EQU   AMBLSHAR                                                 02795000
AMBLPRIM EQU   AMBLSHAR                                                 02796000
AMBLID   EQU   IDAAMBL+32                                               02797000
@NM00006 EQU   IDAAMBL+31                                               02798000
@NM00005 EQU   AMBLTYPE                                                 02799000
AMBLFIX  EQU   AMBLTYPE                                                 02800000
AMBLBASE EQU   AMBLTYPE                                                 02801000
AMBLAIX  EQU   AMBLTYPE                                                 02802000
AMBLUPGR EQU   AMBLTYPE                                                 02803000
AMBLPATH EQU   AMBLTYPE                                                 02804000
AMBLENO  EQU   AMBLVC+1                                                 02805000
AMBLVRT  EQU   AMBLVC                                                   02806000
AMBLXPT  EQU   IDAAMBL+24                                               02807000
AMBLDFR  EQU   AMBLQ                                                    02808000
AMBLESDS EQU   AMBLQ                                                    02809000
AMBLKSDS EQU   AMBLQ                                                    02810000
AMBLUBF  EQU   AMBLQ                                                    02811000
AMBLFSTP EQU   AMBLQ                                                    02812000
AMBLLSR  EQU   AMBLQ                                                    02813000
AMBLGSR  EQU   AMBLQ                                                    02814000
AMBLDDC  EQU   AMBLQ                                                    02815000
AMBLDCI  EQU   AMBLIDF+4                                                02816000
AMBLCACB EQU   AMBLIDF                                                  02817000
@NM00004 EQU   AMBLEOV+2                                                02818000
AMBLCOMP EQU   AMBLEOV+1                                                02819000
AMBLESET EQU   AMBLEFLG                                                 02820000
AMBLWAIT EQU   AMBLEFLG                                                 02821000
AMBLACB  EQU   IDAAMBL+8                                                02822000
AMBLSCHN EQU   IDAAMBL+4                                                02823000
AMBLPCHN EQU   IDAAMBL                                                  02824000
RPLERMSA EQU   RPLCOMN+72                                               02825000
RPLEMLEN EQU   RPLCOMN+70                                               02826000
RPLACTIV EQU   RPLCOMN+69                                               02827000
RPLBRANC EQU   RPLEXTD1                                                 02828000
RPLNIB   EQU   RPLEXTD1                                                 02829000
@NM00003 EQU   RPLEXTD1                                                 02830000
RPLEXIT  EQU   RPLEXTD1                                                 02831000
RPLNEXIT EQU   RPLEXTD1                                                 02832000
RPLEXSCH EQU   RPLEXTD1                                                 02833000
RPLDDDD  EQU   RPLRBAR+4                                                02834000
@NM00002 EQU   RPLRBAR+3                                                02835000
@NM00001 EQU   RPLAIXID                                                 02836000
RPLAXPKP EQU   RPLAIXID                                                 02837000
RPLAIXPC EQU   RPLRBAR                                                  02838000
RPLRSV88 EQU   RPLOPT8                                                  02839000
RPLUNCON EQU   RPLOPT8                                                  02840000
RPLACTV  EQU   RPLOPT8                                                  02841000
RPLSESS  EQU   RPLOPT8                                                  02842000
RPLPEND  EQU   RPLOPT8                                                  02843000
RPLODPRM EQU   RPLOPT8                                                  02844000
RPLODACP EQU   RPLOPT8                                                  02845000
RPLODACQ EQU   RPLOPT8                                                  02846000
RPLRSV78 EQU   RPLOPT7                                                  02847000
RPLRSV77 EQU   RPLOPT7                                                  02848000
RPLRLSOP EQU   RPLOPT7                                                  02849000
RPLTPOST EQU   RPLOPT7                                                  02850000
RPLQOPT  EQU   RPLOPT7                                                  02851000
RPLCNIMM EQU   RPLCNOPT                                                 02852000
RPLCNANY EQU   RPLCNOPT                                                 02853000
RPLCNALL EQU   RPLCNOPT                                                 02854000
RPLRSV68 EQU   RPLOPT6                                                  02855000
RPLRSV67 EQU   RPLOPT6                                                  02856000
RPLLOCK  EQU   RPLOPT6                                                  02857000
RPLNCOND EQU   RPLOPT6                                                  02858000
RPLCOND  EQU   RPLOPT6                                                  02859000
RPLEOT   EQU   RPLUNTYP                                                 02860000
RPLEOM   EQU   RPLUNTYP                                                 02861000
RPLEOB   EQU   RPLUNTYP                                                 02862000
RPLWROPT EQU   RPLOPT5                                                  02863000
RPLNODE  EQU   RPLOPT5                                                  02864000
RPLERACE EQU   RPLWRTYP                                                 02865000
RPLEAU   EQU   RPLWRTYP                                                 02866000
RPLNERAS EQU   RPLWRTYP                                                 02867000
RPLPSOPT EQU   RPLOPT5                                                  02868000
RPLSSNIN EQU   RPLOPT5                                                  02869000
RPLDLGIN EQU   RPLOPT5                                                  02870000
RPLBUFL  EQU   RPLCOMN+52                                               02871000
RPLRLEN  EQU   RPLCOMN+48                                               02872000
RPLCHAIN EQU   RPLNXTRP                                                 02873000
RPLOPT4  EQU   RPLOPTCD+3                                               02874000
RPLALIGN EQU   RPLOPT3                                                  02875000
RPLFMT   EQU   RPLOPT3                                                  02876000
RPLFLD   EQU   RPLOPT3                                                  02877000
RPLVFY   EQU   RPLOPT3                                                  02878000
RPLBLK   EQU   RPLOPT3                                                  02879000
RPLSFORM EQU   RPLOPT3                                                  02880000
RPLEODS  EQU   RPLOPT3                                                  02881000
RPLNSP   EQU   RPLOPT2                                                  02882000
RPLUPD   EQU   RPLOPT2                                                  02883000
RPLWAITX EQU   RPLOPT2                                                  02884000
RPLLRD   EQU   RPLOPT2                                                  02885000
RPLBWD   EQU   RPLOPT2                                                  02886000
RPLCNV   EQU   RPLOPT2                                                  02887000
RPLADD   EQU   RPLADR                                                   02888000
RPLKEY   EQU   RPLOPT2                                                  02889000
RPLECBIN EQU   RPLECBSW                                                 02890000
RPLGEN   EQU   RPLOPT1                                                  02891000
RPLKGE   EQU   RPLOPT1                                                  02892000
RPLASY   EQU   RPLOPT1                                                  02893000
RPLSKP   EQU   RPLOPT1                                                  02894000
RPLSEQ   EQU   RPLOPT1                                                  02895000
RPLDIR   EQU   RPLOPT1                                                  02896000
RPLLOC   EQU   RPLOPT1                                                  02897000
RPLDAF   EQU   RPLARG+2                                                 02898000
RPLSAF   EQU   RPLARG                                                   02899000
RPLTCBPT EQU   RPLCOMN+28                                               02900000
RPLCCHAR EQU   RPLCOMN+20                                               02901000
RPLSTRID EQU   RPLCOMN+18                                               02902000
RPLKEYL  EQU   RPLKEYLE                                                 02903000
RPLRDSOH EQU   RPLFDB3                                                  02904000
RPLRLG   EQU   RPLFDB3                                                  02905000
RPLLGFRC EQU   RPLFDB3                                                  02906000
RPLREOT  EQU   RPLFDB3                                                  02907000
RPLREOM  EQU   RPLFDB3                                                  02908000
RPLREOB  EQU   RPLFDB3                                                  02909000
RPLSV32  EQU   RPLFDB3                                                  02910000
RPLUINPT EQU   RPLFDB3                                                  02911000
RPLSTSAV EQU   RPLFDB2                                                  02912000
RPLCUERR EQU   RPLFDB2                                                  02913000
RPLDLGFL EQU   RPLFDB2                                                  02914000
RPLIOERR EQU   RPLFDB2                                                  02915000
RPLDVUNS EQU   RPLFDB2                                                  02916000
RPLATND  EQU   RPLFDB2                                                  02917000
RPLRVID  EQU   RPLFDB2                                                  02918000
RPLERLK  EQU   RPLFDB2                                                  02919000
RPLSTAT  EQU   RPLFDBWD                                                 02920000
RPLPOST  EQU   RPLECB                                                   02921000
RPLWAIT  EQU   RPLECB                                                   02922000
RPLPLHPT EQU   RPLCOMN+4                                                02923000
RPLLEN2  EQU   RPLLEN                                                   02924000
RPLREQ   EQU   RPLIDWD+2                                                02925000
RPLSTYP  EQU   RPLIDWD+1                                                02926000
RPLID    EQU   RPLIDWD                                                  02927000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02928000
@RF00234 EQU   @RC00228                                                 02929000
@RF00397 EQU   @RC00381                                                 02930000
@RC00528 EQU   @RC00524                                                 02931000
@PB00002 EQU   @EC00579                                                 02932000
@RF00637 EQU   @RC00633                                                 02933000
@RF00681 EQU   @RC00677                                                 02934000
@RF00714 EQU   @RC00702                                                 02935000
@RF00811 EQU   @RC00792                                                 02936000
@RC00829 EQU   @EL00003                                                 02937000
@PB00003 EQU   @PB00004                                                 02938000
@ENDDATA EQU   *                                                        02939000
         END   IDA019RG,(C'PLS2014',0701,78172)                         02940000
