         TITLE 'IDA019RH--VSAM INDEX INSERT                            *00001000
                        '                                               00002000
IDA019RH CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RH  78.172'                                 0001 00009000
IDAIVIXB DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00531-IDAIVIXB)                                   00013000
         ENTRY IDAIVIXB                                                 00014000
IDASPACE DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00545-IDASPACE)                                   00018000
         ENTRY IDASPACE                                                 00019000
IDAIXCHK DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00564-IDAIXCHK)                                   00023000
         ENTRY IDAIXCHK                                                 00024000
         DROP  @15                                                      00025000
@PROLOG  BALR  @11,0                                               0001 00026000
@PSTART  DS    0H                                                  0001 00027000
         USING @PSTART,@11                                         0001 00028000
         AH    @15,4(,@15)                                         0001 00029000
         BR    @15                                                 0001 00030000
@EP00001 DS    0H                                                  0002 00031000
         IDASVR14                                                       00032000
*   RAMB=AMBLIX;                    /* POINT TO INDEX AMB            */ 00033000
         L     @10,RPLDACB(,RRPL)                                  0166 00034000
         L     @10,ACBAMBL(,@10)                                   0166 00035000
         L     RAMB,AMBLIX(,@10)                                   0166 00036000
*   IF RPARM1=IXENTRY THEN          /* SEQ. SET INSERT REQUEST       */ 00037000
         LTR   RPARM1,RPARM1                                       0167 00038000
         BNZ   @RF00167                                            0167 00039000
*     DO;                           /* YES.                          */ 00040000
*                                                                  0168 00041000
*       /*************************************************************/ 00042000
*       /*                                                           */ 00043000
*       /* INITIALIZE IMWA POINTERS                                  */ 00044000
*       /*                                                           */ 00045000
*       /*************************************************************/ 00046000
*                                                                  0169 00047000
*       IMWIXSP=ADDR(IMWISWKA);     /* POINT TO IX SEARCH WA         */ 00048000
         L     @15,AMBIWA(,RAMB)                                   0169 00049000
         L     @15,ICWCHN(,@15)                                    0169 00050000
         LA    @14,IMWISWKA(,@15)                                  0169 00051000
         ST    @14,IMWIXSP(,@15)                                   0169 00052000
*       IXSBUFC=PLHIBUFC;           /* SET IX BUFC POINTER           */ 00053000
         L     @09,PLHIBUFC(,RPLH)                                 0170 00054000
         ST    @09,IXSBUFC(,@14)                                   0170 00055000
*       IMWBUFP=IXSBUFC->BUFCBAD;   /* SET IX REC POINTER            */ 00056000
         L     @14,BUFCBAD(,@09)                                   0171 00057000
         ST    @14,IMWBUFP(,@15)                                   0171 00058000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00059000
*/*   THERE ARE TWO CONTROL INTERVALS OF DATA SET BY CONTROL INTERVAL*/ 00060000
*/*   SPLIT. THE TWO BUFFERS ARE LOCATED VIA PLHDBUFC AND DIWBUFC.   */ 00061000
*/*   DETERMINE WHICH BUFFER CONTAINS THE LOWEST KEY VALUES. SET     */ 00062000
*/*   PLHSAVE1 TO POINT TO LOW KEY BUFC AND PLHSAVE2 TO POINT TO HIGH*/ 00063000
*/*   KEY BUFC.                                                      */ 00064000
*/*   ALSO, SET IMWXKEYP TO POINT TO THE KEY OF THE FIRST (LOWEST    */ 00065000
*/*   KEY) RECORD OF THE HIGH KEY BUFFER. THIS WILL BE USED TO       */ 00066000
*/*   DETERMINE REAR COMPRESSION OF THE SEQUENCE SET ENTRY.          */ 00067000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00068000
*                                                                  0172 00069000
*       RPARM1=AMDKEYLN;            /* PICK UP KEY LENGTH            */ 00070000
         L     @14,AMBDSB(,RAMB)                                   0172 00071000
         LH    RPARM1,AMDKEYLN(,@14)                               0172 00072000
*       RWORK1=PLHDBUFC;            /* POINT TO BOTH DATA            */ 00073000
         L     RWORK1,PLHDBUFC(,RPLH)                              0173 00074000
*       RWORK2=AMBLDTA;             /* POINT TO DATA AMB             */ 00075000
         L     RWORK2,AMBLDTA(,@10)                                0174 00076000
*       RWORK3=RWORK2->AMBDSB;      /* POINT TO DATA AMDSB           */ 00077000
         L     RWORK3,AMBDSB(,RWORK2)                              0175 00078000
*       RESPECIFY                                                  0176 00079000
*         IDAAMDSB BASED(RWORK3);   /* LOCATE AMDSB VIA RWORK3       */ 00080000
*       RWORK2=RWORK2->AMBIWA->DIWBUFC;/* WORK AREA DATA BUFC        */ 00081000
         L     @10,AMBIWA(,RWORK2)                                 0177 00082000
         L     @10,DIWBUFC(,@10)                                   0177 00083000
         LR    RWORK2,@10                                          0177 00084000
*       PLHSAVE1=RWORK1;            /* SAVE PTRS                     */ 00085000
         ST    RWORK1,PLHSAVE1(,RPLH)                              0178 00086000
*       RFY                                                        0179 00087000
*         RWORK4 RSTD;              /*                       @ZA02289*/ 00088000
*       RWORK0=AMDCINV-LENGTH(IDACIDF);/* GET CI LENGTH - CIDF     0180 00089000
*                                                            @ZA02289*/ 00090000
         L     RWORK0,AMDCINV(,RWORK3)                             0180 00091000
         SL    RWORK0,@CF00067                                     0180 00092000
*       RWORK4=RWORK2->BUFCBAD+RWORK0;/* POINT TO WORK CIDF  @ZA02289*/ 00093000
         L     @10,BUFCBAD(,RWORK2)                                0181 00094000
         LR    RWORK4,RWORK0                                       0181 00095000
         ALR   RWORK4,@10                                          0181 00096000
*       IF RWORK4->CIDFLL^=RWORK0 THEN/* WORK BFR EMPTY      @ZA02289*/ 00097000
         LH    @09,CIDFLL(,RWORK4)                                 0182 00098000
         CLR   RWORK0,@09                                          0182 00099000
         BE    @RF00182                                            0182 00100000
*         DO;                       /* NO, NOT SPND RECORD CASE    0183 00101000
*                                                            @ZA02289*/ 00102000
*           PLHSAVE2=RWORK2;        /* SAVE POINTER                  */ 00103000
         ST    RWORK2,PLHSAVE2(,RPLH)                              0184 00104000
*           RWORK1=RWORK1->BUFCBAD+AMDRKP;/* POINT TO BUF1 LOW KEY   */ 00105000
         LH    @09,AMDRKP(,RWORK3)                                 0185 00106000
         L     @14,BUFCBAD(,RWORK1)                                0185 00107000
         ALR   @14,@09                                             0185 00108000
         LR    RWORK1,@14                                          0185 00109000
*           RWORK2=RWORK2->BUFCBAD+AMDRKP;/* POINT TO BUF2 LOW KEY   */ 00110000
         ALR   @10,@09                                             0186 00111000
         LR    RWORK2,@10                                          0186 00112000
*           IF RWORK1->KEY(1:RPARM1)>/* IS BUF1 KEY GREATER          */ 00113000
*               RWORK2->KEY(1:RPARM1) THEN/* THAN BUF2 KEY           */ 00114000
         LR    @10,RPARM1                                          0187 00115000
         BCTR  @10,0                                               0187 00116000
         EX    @10,@SC01071                                        0187 00117000
         BNH   @RF00187                                            0187 00118000
*             DO;                   /* YES.                          */ 00119000
*               RWORK0=PLHSAVE1;    /* EXCHANGE PTRS SO THAT         */ 00120000
         L     @10,PLHSAVE1(,RPLH)                                 0189 00121000
         LR    RWORK0,@10                                          0189 00122000
*               PLHSAVE1=PLHSAVE2;  /* PLHSAVE1 POINTS TO BUFC       */ 00123000
         L     @10,PLHSAVE2(,RPLH)                                 0190 00124000
         ST    @10,PLHSAVE1(,RPLH)                                 0190 00125000
*               PLHSAVE2=RWORK0;    /* CONTAINING INSERT KEY         */ 00126000
         ST    RWORK0,PLHSAVE2(,RPLH)                              0191 00127000
*               IMWXKEYP=RWORK1;    /* SET PTR TO NEXT KEY           */ 00128000
         ST    RWORK1,IMWXKEYP(,@15)                               0192 00129000
*             END;                  /* END OF EXCHANGE               */ 00130000
*           ELSE                    /*                               */ 00131000
*             IMWXKEYP=RWORK2;      /* SET PTR TO NEXT KEY           */ 00132000
         B     @RC00187                                            0194 00133000
@RF00187 L     @10,AMBIWA(,RAMB)                                   0194 00134000
         L     @10,ICWCHN(,@10)                                    0194 00135000
         ST    RWORK2,IMWXKEYP(,@10)                               0194 00136000
*         END;                      /*                       @ZA02289*/ 00137000
*       ELSE                        /*                       @ZA02289*/ 00138000
*         DO;                       /* SPANNED RECORD CASE   @ZA02289*/ 00139000
         B     @RC00182                                            0196 00140000
@RF00182 DS    0H                                                  0197 00141000
*           RESPECIFY                                              0197 00142000
*             RWORK4 UNRSTD;        /*                       @ZA02289*/ 00143000
*           PLHSAVE2=ZERO;          /* SET SPND RECD INDICATOR     0198 00144000
*                                                            @ZA02289*/ 00145000
         SLR   @10,@10                                             0198 00146000
         ST    @10,PLHSAVE2(,RPLH)                                 0198 00147000
*         END;                      /*                       @ZA02289*/ 00148000
*                                                                  0200 00149000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00150000
*/*   SET RPARM1 TO POINT TO THE KEY OF THE LAST (HIGHEST KEY) RECORD*/ 00151000
*/*   OF THE LOW KEY BUFFER. THIS KEY WILL BE THE NEW KEY INSERTED   */ 00152000
*/*   INTO THE SEQUENCE SET.                                         */ 00153000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00154000
*                                                                  0200 00155000
*       RWORK1=PLHSAVE1->BUFCBAD;   /* START OF LOW KEY BUFFER       */ 00156000
@RC00182 L     @10,PLHSAVE1(,RPLH)                                 0200 00157000
         L     RWORK1,BUFCBAD(,@10)                                0200 00158000
*       RWORK2=RWORK1+              /* LOW KEY BUFFER                */ 00159000
*           AMDCINV-                /* CIDF                          */ 00160000
*           LENGTH(IDACIDF);        /*                               */ 00161000
         LR    RWORK2,RWORK1                                       0201 00162000
         AL    RWORK2,AMDCINV(,RWORK3)                             0201 00163000
         SL    RWORK2,@CF00067                                     0201 00164000
*       RWORK1=RWORK1+RWORK2->CIDFOSET;/* START OF FREE SPACE        */ 00165000
         AH    RWORK1,CIDFOSET(,RWORK2)                            0202 00166000
*       RWORK2=RWORK1+RWORK2->CIDFLL;/* POINT TO LAST RDF            */ 00167000
         LR    @10,RWORK1                                          0203 00168000
         AH    @10,CIDFLL(,RWORK2)                                 0203 00169000
         LR    RWORK2,@10                                          0203 00170000
*       IF RWORK2->RDFREPL=ON THEN  /* LOCATE RDF CONTAINING         */ 00171000
         TM    RDFREPL(RWORK2),B'00001000'                         0204 00172000
         BNO   @RF00204                                            0204 00173000
*         RWORK2=RWORK2+LENGTH(IDARDF);/* LENGTH OF LAST RECORD      */ 00174000
         AL    RWORK2,@CF00157                                     0205 00175000
*       RPARM1=RWORK1-RWORK2->RDFLL+/* POINT TO KEY OF LAST          */ 00176000
*           AMDRKP;                 /* RECORD IN BUFFER.             */ 00177000
@RF00204 LR    RPARM1,RWORK1                                       0206 00178000
         SLR   @10,@10                                             0206 00179000
         ICM   @10,3,RDFLL(RWORK2)                                 0206 00180000
         SLR   RPARM1,@10                                          0206 00181000
         LH    @10,AMDRKP(,RWORK3)                                 0206 00182000
         ALR   RPARM1,@10                                          0206 00183000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00184000
*/*   CONVERT THE DATA RBAS INTO SEQUENCE SET POINTER VALUES.        */ 00185000
*/*      SET IMWIPTR = LOW KEY BUFFER SEQ. SET PTR VALUE.            */ 00186000
*/*      SET IMWXPTR = HIGH KEY BUFFER SEQ. SET PTR VALUE.           */ 00187000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00188000
*                                                                  0207 00189000
*       RWORK2=AMDCINV;             /* DATA CONTROL INTV SIZE        */ 00190000
         L     RWORK2,AMDCINV(,RWORK3)                             0207 00191000
*       RBUFC=IMWBUFP;              /* POINT SCIB TO RECORD          */ 00192000
         L     @15,AMBIWA(,RAMB)                                   0208 00193000
         L     @15,ICWCHN(,@15)                                    0208 00194000
         L     RBUFC,IMWBUFP(,@15)                                 0208 00195000
*       RWORK1=RBUFC->IXHBRBA;      /* PICK UP BASE RBA              */ 00196000
         L     RWORK1,IXHBRBA(,RBUFC)                              0209 00197000
*       IF PLHSAVE2=ZERO THEN       /* SPANNED RECORD        @ZA02289*/ 00198000
         L     @14,PLHSAVE2(,RPLH)                                 0210 00199000
         LTR   @14,@14                                             0210 00200000
         BNZ   @RF00210                                            0210 00201000
*         DO;                       /* YES                   @ZA02289*/ 00202000
*           PLHSAVE5=(PLHSAVE1->BUFCORBA-/* COMPUTE PTR.     @ZA02289*/ 00203000
*               RWORK1)/RWORK2;     /* VALUE FOR CURRENT BUFFER    0212 00204000
*                                                            @ZA02289*/ 00205000
         L     @14,PLHSAVE1(,RPLH)                                 0212 00206000
         L     @08,BUFCORBA(,@14)                                  0212 00207000
         SLR   @08,RWORK1                                          0212 00208000
         LR    @15,@08                                             0212 00209000
         SLR   @14,@14                                             0212 00210000
         DR    @14,RWORK2                                          0212 00211000
         ST    @15,PLHSAVE5(,RPLH)                                 0212 00212000
*           PLHSAVE6=(AMBLDTA->AMBIWA->/* COMPUTE PTR.       @ZA02289*/ 00213000
*               DIWBUFC->BUFCORBA-  /* VALUE FOR DI          @ZA02289*/ 00214000
*               RWORK1)/RWORK2;     /* WORK BUFFER           @ZA02289*/ 00215000
         L     @14,RPLDACB(,RRPL)                                  0213 00216000
         L     @14,ACBAMBL(,@14)                                   0213 00217000
         L     @14,AMBLDTA(,@14)                                   0213 00218000
         L     @14,AMBIWA(,@14)                                    0213 00219000
         L     @14,DIWBUFC(,@14)                                   0213 00220000
         L     @08,BUFCORBA(,@14)                                  0213 00221000
         SLR   @08,RWORK1                                          0213 00222000
         LR    @15,@08                                             0213 00223000
         SLR   @14,@14                                             0213 00224000
         DR    @14,RWORK2                                          0213 00225000
         ST    @15,PLHSAVE6(,RPLH)                                 0213 00226000
*           RFY                                                    0214 00227000
*             RWORK4 RSTD;          /*                       @ZA02289*/ 00228000
*           RWORK4=RPLAREA+AMDRKP;  /* POINT TO KEY OF RECORD TO BE     00229000
*                                      INSERTED              @ZA02289*/ 00230000
         AL    @10,RPLAREA(,RRPL)                                  0215 00231000
         LR    RWORK4,@10                                          0215 00232000
*           IF RPARM1->KEY(1:AMDKEYLN)</* IS HI KEY OF       @ZA02289*/ 00233000
*               RWORK4->KEY(1:AMDKEYLN) THEN/* DATA BUFFER LESS THAN    00234000
*                                      KEY OF RECORD BEING INSERTED     00235000
*                                                            @ZA02289*/ 00236000
         LH    @10,AMDKEYLN(,RWORK3)                               0216 00237000
         BCTR  @10,0                                               0216 00238000
         EX    @10,@SC01073                                        0216 00239000
         BNL   @RF00216                                            0216 00240000
*             DO;                   /* YES                   @ZA02289*/ 00241000
*               IMWXKEYP=RWORK4;    /* NEXT KEY IS KEY OF RECORD   0218 00242000
*                                      BEING INSERTED        @ZA02289*/ 00243000
         L     @10,AMBIWA(,RAMB)                                   0218 00244000
         L     @10,ICWCHN(,@10)                                    0218 00245000
         ST    RWORK4,IMWXKEYP(,@10)                               0218 00246000
*               IMWXPTR=PLHSAVE6;   /* SET NEXT POINTER TO DI WORK 0219 00247000
*                                      BUFFER                @ZA02289*/ 00248000
         ST    @15,IMWXPTR(,@10)                                   0219 00249000
*               IMWIPTR=PLHSAVE5;   /* SET INSERT POINTER TO CURRENT    00250000
*                                      DATA BF@ZA02289               */ 00251000
         L     @15,PLHSAVE5(,RPLH)                                 0220 00252000
         ST    @15,IMWIPTR(,@10)                                   0220 00253000
*             END;                  /*                       @ZA02289*/ 00254000
*           ELSE                    /*                       @ZA02289*/ 00255000
*             DO;                   /* DATA BUFFER KEY GREATER     0222 00256000
*                                                            @ZA02289*/ 00257000
         B     @RC00216                                            0222 00258000
@RF00216 DS    0H                                                  0223 00259000
*               IMWXKEYP=PLHSAVE1->BUFCBAD+/* SET NEXT TO LOW KEY OF    00260000
*                                      DATA BUFFER           @ZA28175*/ 00261000
*                   AMDRKP;                                        0223 00262000
         L     @10,AMBIWA(,RAMB)                                   0223 00263000
         L     @10,ICWCHN(,@10)                                    0223 00264000
         L     @15,PLHSAVE1(,RPLH)                                 0223 00265000
         LH    @14,AMDRKP(,RWORK3)                                 0223 00266000
         AL    @14,BUFCBAD(,@15)                                   0223 00267000
         ST    @14,IMWXKEYP(,@10)                                  0223 00268000
*               RPARM1=RWORK4;      /* SET INSERT KEY TO KEY OF    0224 00269000
*                                      RECORD BEING STORED   @ZA02289*/ 00270000
         LR    RPARM1,RWORK4                                       0224 00271000
*               IMWXPTR=PLHSAVE5;   /* SET NEXT POINTER TO CURRENT 0225 00272000
*                                      DATA BF@ZA02289               */ 00273000
         L     @15,PLHSAVE5(,RPLH)                                 0225 00274000
         ST    @15,IMWXPTR(,@10)                                   0225 00275000
*               IMWIPTR=PLHSAVE6;   /* SET INSERT POINTER TO DI WORK    00276000
*                                      BUFFER                @ZA02289*/ 00277000
         L     @15,PLHSAVE6(,RPLH)                                 0226 00278000
         ST    @15,IMWIPTR(,@10)                                   0226 00279000
*             END;                  /*                       @ZA02289*/ 00280000
*         END;                      /*                       @ZA02289*/ 00281000
*       ELSE                        /* NOT SR                @ZA02289*/ 00282000
*         DO;                       /*                       @ZA02289*/ 00283000
         B     @RC00210                                            0229 00284000
@RF00210 DS    0H                                                  0230 00285000
*           RESPECIFY                                              0230 00286000
*             RWORK4 UNRSTD;        /*                       @ZA02289*/ 00287000
*           IMWIPTR=(PLHSAVE1->BUFCORBA-RWORK1)/* COMPUTE SEQ. SET 0231 00288000
*                                      PTR                           */ 00289000
*               /RWORK2;            /* OF NEW ENTRY                  */ 00290000
         L     @10,AMBIWA(,RAMB)                                   0231 00291000
         L     @10,ICWCHN(,@10)                                    0231 00292000
         L     @08,PLHSAVE1(,RPLH)                                 0231 00293000
         L     @14,BUFCORBA(,@08)                                  0231 00294000
         SLR   @14,RWORK1                                          0231 00295000
         LR    @09,@14                                             0231 00296000
         SLR   @08,@08                                             0231 00297000
         DR    @08,RWORK2                                          0231 00298000
         ST    @09,IMWIPTR(,@10)                                   0231 00299000
*           IMWXPTR=(PLHSAVE2->BUFCORBA-RWORK1)/* COMPUTE SEQ. SET 0232 00300000
*                                      PTR                           */ 00301000
*               /RWORK2;            /* OF FOLLOWING ENTRY            */ 00302000
         L     @14,PLHSAVE2(,RPLH)                                 0232 00303000
         L     @08,BUFCORBA(,@14)                                  0232 00304000
         SLR   @08,RWORK1                                          0232 00305000
         LR    @15,@08                                             0232 00306000
         SLR   @14,@14                                             0232 00307000
         DR    @14,RWORK2                                          0232 00308000
         ST    @15,IMWXPTR(,@10)                                   0232 00309000
*         END;                      /*                       @ZA02289*/ 00310000
*       IMWLBUFC=PLHSAVE1;          /* SET LOW KEY BUFC              */ 00311000
@RC00210 L     @10,AMBIWA(,RAMB)                                   0234 00312000
         L     @10,ICWCHN(,@10)                                    0234 00313000
         L     @08,PLHSAVE1(,RPLH)                                 0234 00314000
         ST    @08,IMWLBUFC(,@10)                                  0234 00315000
*                                                                  0235 00316000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00317000
*/*   FOR A DIRECT INSERT REQUEST WITH THE INSERT POINT AT THE END   */ 00318000
*/*   OF THE LOW KEY BUFFER, USE THE KEY FROM THE RECORD LOCATED VIA */ 00319000
*/*   RPLAREA AS THE INSERT KEY. NORMALLY THIS IS THE SAME AS THE    */ 00320000
*/*   KEY OF THE LAST RECORD IN THE LOW KEY BUFFER, BECAUSE THE      */ 00321000
*/*   DATA INSERT WAS PERFORMED BEFORE CALLING THIS MODULE. IN THE   */ 00322000
*/*   CASE WHERE THE NEW (INSERT) RECORD IS TOO LARGE TO FIT IN      */ 00323000
*/*   EITHER CONTROL INTERVAL AFTER THE SPLIT, THE INSERT HAS NOT    */ 00324000
*/*   BEEN MADE BEFORE ENTRY TO THIS MODULE. USING THE KEY FROM THE  */ 00325000
*/*   RPLAREA RECORD INSURES THAT THE CORRECT INDEX KEY IS BUILT     */ 00326000
*/*   IN ALL CASES.                                                  */ 00327000
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/ 00328000
*                                                                  0235 00329000
*       IF AMBSIS=OFF&              /* IF NON-SIS OR         @ZA31009*/ 00330000
*           RPLSEQ=OFF&PLHRECP=PLHFSP/* FOR DIRECT ADD TO END        */ 00331000
*           &PLHRECP>=IMWLBUFC->BUFCBAD/* OF THE LOW KEY     @ZA31009*/ 00332000
*           &PLHRECP<=(IMWLBUFC->BUFCBAD+AMDCINV)/* BUFFER   @ZA31009*/ 00333000
*           &PLHSAVE2^=ZERO THEN    /* NOT SPN RCD.          @ZA02289*/ 00334000
         TM    AMBSIS(RAMB),B'00000100'                            0235 00335000
         BNZ   @RF00235                                            0235 00336000
         TM    RPLSEQ(RRPL),B'00100000'                            0235 00337000
         BNZ   @RF00235                                            0235 00338000
         L     @10,PLHRECP(,RPLH)                                  0235 00339000
         C     @10,PLHFSP(,RPLH)                                   0235 00340000
         BNE   @RF00235                                            0235 00341000
         L     @08,BUFCBAD(,@08)                                   0235 00342000
         CR    @10,@08                                             0235 00343000
         BL    @RF00235                                            0235 00344000
         AL    @08,AMDCINV(,RWORK3)                                0235 00345000
         CR    @10,@08                                             0235 00346000
         BH    @RF00235                                            0235 00347000
         L     @10,PLHSAVE2(,RPLH)                                 0235 00348000
         LTR   @10,@10                                             0235 00349000
         BZ    @RF00235                                            0235 00350000
*         RPARM1=RPLAREA+AMDRKP;    /* NEW RECORD KEY                */ 00351000
         LH    RPARM1,AMDRKP(,RWORK3)                              0236 00352000
         AL    RPARM1,RPLAREA(,RRPL)                               0236 00353000
*       IMWIKEYP=RPARM1;                                           0237 00354000
@RF00235 L     @10,AMBIWA(,RAMB)                                   0237 00355000
         L     @10,ICWCHN(,@10)                                    0237 00356000
         ST    RPARM1,IMWIKEYP(,@10)                               0237 00357000
*                                                                  0238 00358000
*       /*************************************************************/ 00359000
*       /*                                                           */ 00360000
*       /* CALL SCIB TO LOCATE INSERT POINT WITHIN INDEX RECORD AND  */ 00361000
*       /* TO DETERMINE F-VALUE FOR THE INSERT ENTRY.                */ 00362000
*       /*                                                           */ 00363000
*       /*************************************************************/ 00364000
*                                                                  0238 00365000
*       RWORK3=ADDR(IMWISWKA);      /* POINT TO PARM AREA            */ 00366000
         LA    RWORK3,IMWISWKA(,@10)                               0238 00367000
*       RESPECIFY                                                  0239 00368000
*         IDAAMDSB BASED(AMBDSB);                                  0239 00369000
*I01:                                                              0240 00370000
*       DO;                         /* IDACALL(IDA019RC)             */ 00371000
I01      DS    0H                                                  0241 00372000
*         CALL IDA019RC;            /* EXIT TO IDA019RC              */ 00373000
         L     @15,@CV01004                                        0241 00374000
         BALR  @14,@15                                             0241 00375000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00376000
         BALR @11,0                                                     00377000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00378000
         USING *,@11                                                    00379000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00380000
         L     @11,=A(@PSTART)                                          00381000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00382000
         USING @PSTART,@11                                              00383000
*       END I01;                                                   0246 00384000
*       RESPECIFY                                                  0247 00385000
*        (RWORK1,                                                  0247 00386000
*         RWORK2,                                                  0247 00387000
*         RWORK3) RSTD;                                            0247 00388000
*       IF(RPLSEQ=ON|AMBSIS=ON)&    /* SEQUENTIAL INSERT,    @ZA31009*/ 00389000
*           PLHSAVE2^=ZERO&         /* NOT SPANNED RECORD    @ZA31009*/ 00390000
*           PLHRECP>=IMWLBUFC->BUFCBAD&/* INTO LOW KEY       @ZA31009*/ 00391000
*           PLHRECP<=(IMWLBUFC->BUFCBAD+/* BUFFER            @ZA31009*/ 00392000
*           AMBLDTA->AMBDSB->AMDCINV)&/*                     @ZA31009*/ 00393000
*           RPLUPD=OFF THEN         /* AND NOT UPD           @ZA02289*/ 00394000
         TM    RPLSEQ(RRPL),B'00100000'                            0248 00395000
         BO    @GL00009                                            0248 00396000
         TM    AMBSIS(RAMB),B'00000100'                            0248 00397000
         BNO   @RF00248                                            0248 00398000
@GL00009 L     @10,PLHSAVE2(,RPLH)                                 0248 00399000
         LTR   @10,@10                                             0248 00400000
         BZ    @RF00248                                            0248 00401000
         L     @10,PLHRECP(,RPLH)                                  0248 00402000
         L     @08,AMBIWA(,RAMB)                                   0248 00403000
         L     @08,ICWCHN(,@08)                                    0248 00404000
         L     @15,IMWLBUFC(,@08)                                  0248 00405000
         L     @15,BUFCBAD(,@15)                                   0248 00406000
         CR    @10,@15                                             0248 00407000
         BL    @RF00248                                            0248 00408000
         L     @14,RPLDACB(,RRPL)                                  0248 00409000
         L     @14,ACBAMBL(,@14)                                   0248 00410000
         L     @14,AMBLDTA(,@14)                                   0248 00411000
         L     @14,AMBDSB(,@14)                                    0248 00412000
         AL    @15,AMDCINV(,@14)                                   0248 00413000
         CR    @10,@15                                             0248 00414000
         BH    @RF00248                                            0248 00415000
         TM    RPLUPD(RRPL),B'00000010'                            0248 00416000
         BNZ   @RF00248                                            0248 00417000
*         DO;                       /* YES.                          */ 00418000
*                                                                  0249 00419000
*           /*********************************************************/ 00420000
*           /*                                                       */ 00421000
*           /* THIS IS THE INITIAL CONTROL INTERVAL SPLIT FOR A MASS */ 00422000
*           /* INSERT. MAKE THE INDEX ENTRY SO THAT THERE ARE NO KEY */ 00423000
*           /* VALUES BETWEEN IT AND THE NEXT EXISTING DATA KEY.     */ 00424000
*           /*                                                       */ 00425000
*           /*********************************************************/ 00426000
*                                                                  0250 00427000
*           RPARM1=AMDKEYLN;        /* KEY LENGTH                    */ 00428000
         L     @10,AMBDSB(,RAMB)                                   0250 00429000
         LH    RPARM1,AMDKEYLN(,@10)                               0250 00430000
*           IMWKEY1(1:RPARM1)=IMWXKEYP->KEY(1:RPARM1);/* MOVE NEXT   */ 00431000
         LR    @10,RPARM1                                          0251 00432000
         BCTR  @10,0                                               0251 00433000
         L     @15,IMWXKEYP(,@08)                                  0251 00434000
         EX    @10,@SM01075                                        0251 00435000
*           RWORK2=ADDR(IMWKEY1);   /* POINT TO INSERT KEY           */ 00436000
         LA    RWORK2,IMWKEY1(,@08)                                0252 00437000
*           RWORK1=RWORK2+RPARM1-ONE;/* LAST CHARACTER OF KEY        */ 00438000
         LR    RWORK1,RWORK2                                       0253 00439000
         ALR   RWORK1,RPARM1                                       0253 00440000
         BCTR  RWORK1,0                                            0253 00441000
*           GEN;                                                   0254 00442000
             SR    RWORK3,RWORK3            CLEAR REGISTER              00443000
ZLOOP        IC    RWORK3,D0(,RWORK1)       PICK UP KEY CHARACTER       00444000
             LTR   RWORK3,RWORK3            VALUE ZERO                  00445000
             BNZ   ZEXIT                    NO.                         00446000
             MVI   D0(RWORK1),MONE          SET CHAR = -1               00447000
             BCTR  RWORK1,D0                DECREMENT POINTER           00448000
             B     ZLOOP                    LOOP                        00449000
ZEXIT        BCTR  RWORK3,D0                DECREMENT KEY CHARACTER     00450000
             STC   RWORK3,D0(,RWORK1)       SET NEW VALUE               00451000
D0           EQU   0                   ZERO DISPLACEMENT                00452000
MONE         EQU  X'FF'                MINUS ONE                        00453000
*           RBUFC=IMWIKEYP;         /* PTR TO SCIB ARG               */ 00454000
         L     @10,AMBIWA(,RAMB)                                   0255 00455000
         L     @10,ICWCHN(,@10)                                    0255 00456000
         L     RBUFC,IMWIKEYP(,@10)                                0255 00457000
*           RWORK1=RPARM1;          /* KEY LENGTH FOR CLCL           */ 00458000
         LR    RWORK1,RPARM1                                       0256 00459000
*           IMWIKEYP=RWORK2;        /* SET PTR TO INSERT KEY         */ 00460000
         ST    RWORK2,IMWIKEYP(,@10)                               0257 00461000
*           RWORK3=RPARM1;          /* KEY LENGTH FOR CLCL           */ 00462000
         LR    RWORK3,RPARM1                                       0258 00463000
*           GEN(CLCL  RBUFC,RWORK2);/* COMPARE KEYS                  */ 00464000
         CLCL  RBUFC,RWORK2                                             00465000
*           RWORK1=RPARM1-RWORK1;   /* NUMBER OF EQUAL BYTES         */ 00466000
         LR    @10,RPARM1                                          0260 00467000
         SLR   @10,RWORK1                                          0260 00468000
         LR    RWORK1,@10                                          0260 00469000
*           IF RWORK1<IXSPEC THEN   /* IF LESS THAN SCIB VALUE       */ 00470000
         L     @10,AMBIWA(,RAMB)                                   0261 00471000
         L     @10,ICWCHN(,@10)                                    0261 00472000
         L     @10,IMWIXSP(,@10)                                   0261 00473000
         SLR   @08,@08                                             0261 00474000
         IC    @08,IXSPEC(,@10)                                    0261 00475000
         CR    RWORK1,@08                                          0261 00476000
         BNL   @RF00261                                            0261 00477000
*             IXSPEC=RWORK1;        /* USE NEW VALUE                 */ 00478000
         STC   RWORK1,IXSPEC(,@10)                                 0262 00479000
*           IMWIEL=RPARM1-IXSPEC;   /* NO REAR COMPRESSION           */ 00480000
@RF00261 L     @10,AMBIWA(,RAMB)                                   0263 00481000
         L     @10,ICWCHN(,@10)                                    0263 00482000
         L     @08,IMWIXSP(,@10)                                   0263 00483000
         LR    @15,RPARM1                                          0263 00484000
         SLR   @14,@14                                             0263 00485000
         IC    @14,IXSPEC(,@08)                                    0263 00486000
         SLR   @15,@14                                             0263 00487000
         STC   @15,IMWIEL(,@10)                                    0263 00488000
*         END;                      /* END OF MI ENTRY ADJUST        */ 00489000
*       ELSE                        /*                               */ 00490000
*         DO;                       /*                               */ 00491000
*                                                                  0265 00492000
         B     @RC00248                                            0265 00493000
@RF00248 DS    0H                                                  0266 00494000
*           /*********************************************************/ 00495000
*           /*                                                       */ 00496000
*           /* NORMAL ENTRY PROCESSING. DETERMINE REAR COMPRESSION   */ 00497000
*           /* BASED ON LOW KEY IN FOLLOWING CONTROL INTERVAL.       */ 00498000
*           /*                                                       */ 00499000
*           /*********************************************************/ 00500000
*                                                                  0266 00501000
*           CALL COMPRS;            /* SUBROUTINE COMPRESSES         */ 00502000
         BAL   @14,COMPRS                                          0266 00503000
*         END;                      /* END OF REAR COMPRESSION       */ 00504000
*HLINSERT:                                                         0268 00505000
*       IMWFGAIN=ZERO;              /* SET F-GAIN = 0                */ 00506000
@RC00248 DS    0H                                                  0268 00507000
HLINSERT L     @10,AMBIWA(,RAMB)                                   0268 00508000
         L     @10,ICWCHN(,@10)                                    0268 00509000
         MVI   IMWFGAIN(@10),X'00'                                 0268 00510000
*       RESPECIFY                                                  0269 00511000
*         RWORK4 RSTD;                                             0269 00512000
*       IMWBSE=OFF;                 /* SHOW SECTION NOT REQD.        */ 00513000
         NI    IMWBSE(@10),B'11011111'                             0270 00514000
*       RWORK4=IXSHEP-IXSNOSR*IXHFLPLN;/* POINT TO HIT ENTRY @ZA02289*/ 00515000
         L     @15,IMWIXSP(,@10)                                   0271 00516000
         L     @10,IMWBUFP(,@10)                                   0271 00517000
         SLR   @09,@09                                             0271 00518000
         IC    @09,IXHFLPLN(,@10)                                  0271 00519000
         SLR   @14,@14                                             0271 00520000
         IC    @14,IXSNOSR(,@15)                                   0271 00521000
         MR    RWORK4,@14                                          0271 00522000
         LCR   @09,@09                                             0271 00523000
         AL    @09,IXSHEP(,@15)                                    0271 00524000
         LR    RWORK4,@09                                          0271 00525000
*       IF IXSSEP=RWORK4 THEN       /* HIT ENTRY A SECTION           */ 00526000
         C     RWORK4,IXSSEP(,@15)                                 0272 00527000
         BNE   @RF00272                                            0272 00528000
*         DO;                       /* ROUTINE TO MAKE        SECTION*/ 00529000
*           IF(PLHADDTE=ON&IXHLV=ONE)|/* IF ADD TO END AND SS        */ 00530000
*               (IXHLV^=ONE&        /* OR NOT SEQ SET AND            */ 00531000
*               (IXSHEP->IBFLPL=ZERO&/* SEARCH FOUND END OF          */ 00532000
*               (IXSHEP->IBFLPF=ZERO))) THEN/* DATA SET, THEN WE MAY    00533000
*                                      BUILD A SECTION ENTRY         */ 00534000
         TM    PLHADDTE(RPLH),B'00010000'                          0274 00535000
         BNO   @GL00011                                            0274 00536000
         CLI   IXHLV(@10),1                                        0274 00537000
         BE    @RT00274                                            0274 00538000
@GL00011 L     @10,AMBIWA(,RAMB)                                   0274 00539000
         L     @10,ICWCHN(,@10)                                    0274 00540000
         L     @09,IMWBUFP(,@10)                                   0274 00541000
         CLI   IXHLV(@09),1                                        0274 00542000
         BE    @RF00274                                            0274 00543000
         L     @10,IMWIXSP(,@10)                                   0274 00544000
         L     @10,IXSHEP(,@10)                                    0274 00545000
         CLI   IBFLPL(@10),0                                       0274 00546000
         BNE   @RF00274                                            0274 00547000
         CLI   IBFLPF(@10),0                                       0274 00548000
         BNE   @RF00274                                            0274 00549000
@RT00274 DS    0H                                                  0275 00550000
*             DO;                   /*                               */ 00551000
*               RESPECIFY                                          0276 00552000
*                (RWORK0) RSTD;     /*                               */ 00553000
*               IF IXHSEO>RWORK4-IMWBUFP THEN/* OTHER SECTIONS BEFORE   00554000
*                                      THE LAST                      */ 00555000
         L     @10,AMBIWA(,RAMB)                                   0277 00556000
         L     @10,ICWCHN(,@10)                                    0277 00557000
         L     @09,IMWBUFP(,@10)                                   0277 00558000
         LR    @15,RWORK4                                          0277 00559000
         SLR   @15,@09                                             0277 00560000
         CH    @15,IXHSEO(,@09)                                    0277 00561000
         BNL   @RF00277                                            0277 00562000
*                 RWORK0=IXSLEP;    /* YES, COUNT FROM LOW ENTRY IN     00563000
*                                      THIS SECTION                  */ 00564000
         L     @10,IMWIXSP(,@10)                                   0278 00565000
         L     RWORK0,IXSLEP(,@10)                                 0278 00566000
*               ELSE                /* NO, START AT BEGINNING        */ 00567000
*                 RWORK0=IMWBUFP+IXHLL-IXHFLPLN;/* OF INDEX RECORD   */ 00568000
         B     @RC00277                                            0279 00569000
@RF00277 L     @10,AMBIWA(,RAMB)                                   0279 00570000
         L     @10,ICWCHN(,@10)                                    0279 00571000
         L     @10,IMWBUFP(,@10)                                   0279 00572000
         LH    RWORK0,IXHLL(,@10)                                  0279 00573000
         N     RWORK0,@CF01078                                     0279 00574000
         ALR   RWORK0,@10                                          0279 00575000
         SLR   @09,@09                                             0279 00576000
         IC    @09,IXHFLPLN(,@10)                                  0279 00577000
         SLR   RWORK0,@09                                          0279 00578000
*               RWORK1=RWORK0;      /* SAVE BEGINNING ADDRESS        */ 00579000
@RC00277 LR    RWORK1,RWORK0                                       0280 00580000
*               RWORK2=ZERO;        /* CLEAR ENTRY COUNT             */ 00581000
         SLR   RWORK2,RWORK2                                       0281 00582000
*               DO WHILE RWORK1^<RWORK4;/* LOOP COUNTS ENTRYS        */ 00583000
         B     @DE00282                                            0282 00584000
@DL00282 DS    0H                                                  0283 00585000
*                 IF RWORK1->IBFLPF^=/* IF NOT               @ZA02289*/ 00586000
*                     AMDKEYLN THEN /* SR ENTRY              @ZA02289*/ 00587000
         L     @10,AMBDSB(,RAMB)                                   0283 00588000
         SLR   @09,@09                                             0283 00589000
         IC    @09,IBFLPF(,RWORK1)                                 0283 00590000
         CH    @09,AMDKEYLN(,@10)                                  0283 00591000
         BE    @RF00283                                            0283 00592000
*                   RWORK2=RWORK2+ONE;/* BUMP COUNT OF ENTRYS        */ 00593000
         AL    RWORK2,@CF00053                                     0284 00594000
*                 RWORK1=RWORK1-(RWORK1->/* POINT BACK TO NEXT       */ 00595000
*                     IBFLPL+IXHFLPLN);/* INDEX ENTRY                */ 00596000
@RF00283 L     @10,AMBIWA(,RAMB)                                   0285 00597000
         L     @10,ICWCHN(,@10)                                    0285 00598000
         L     @10,IMWBUFP(,@10)                                   0285 00599000
         SLR   @09,@09                                             0285 00600000
         IC    @09,IBFLPL(,RWORK1)                                 0285 00601000
         SLR   @15,@15                                             0285 00602000
         IC    @15,IXHFLPLN(,@10)                                  0285 00603000
         ALR   @09,@15                                             0285 00604000
         SLR   RWORK1,@09                                          0285 00605000
*               END;                /* END OF COUNT ENTRY LOOP       */ 00606000
@DE00282 CR    RWORK1,RWORK4                                       0286 00607000
         BNL   @DL00282                                            0286 00608000
*               IF RWORK2^<AMDNEST THEN/* TIME FOR SECTION ENTRY     */ 00609000
         L     @10,AMBDSB(,RAMB)                                   0287 00610000
         LH    @10,AMDNEST(,@10)                                   0287 00611000
         CLR   RWORK2,@10                                          0287 00612000
         BL    @RF00287                                            0287 00613000
*                 DO;               /* YES, ITS JUST TIME            */ 00614000
*                   IMWIEL=IMWIEL+IXSPEC;/* SET TOTAL LENGTH         */ 00615000
         L     @10,AMBIWA(,RAMB)                                   0289 00616000
         L     @10,ICWCHN(,@10)                                    0289 00617000
         L     @09,IMWIXSP(,@10)                                   0289 00618000
         SLR   @15,@15                                             0289 00619000
         IC    @15,IMWIEL(,@10)                                    0289 00620000
         SLR   @14,@14                                             0289 00621000
         IC    @14,IXSPEC(,@09)                                    0289 00622000
         ALR   @15,@14                                             0289 00623000
         STC   @15,IMWIEL(,@10)                                    0289 00624000
*                   IXSPEC=ZERO;    /* RESET COMPARE COUNT           */ 00625000
         MVI   IXSPEC(@09),X'00'                                   0290 00626000
*                   RWORK1=IMWBUFP+IXHSEO;/* POINT TO FIRST SECTION  */ 00627000
         L     @09,IMWBUFP(,@10)                                   0291 00628000
         LH    RWORK1,IXHSEO(,@09)                                 0291 00629000
         ALR   RWORK1,@09                                          0291 00630000
*                   RWORK2=IMWIKEYP;/* POINT TO ARGUMENT             */ 00631000
         L     RWORK2,IMWIKEYP(,@10)                               0292 00632000
*                   DO WHILE RWORK1>IXSSEP;/* SET LOOP TO SCAN FROM     00633000
*                                      FIRST SECTION TO SECTION    0293 00634000
*                                      PRECEEDING ENTRY POINT        */ 00635000
         B     @DE00293                                            0293 00636000
@DL00293 DS    0H                                                  0294 00637000
*                     RWORK0=RWORK1->IBFLPL;/* PICK UP LENGTH OF   0294 00638000
*                                      ENTRY                         */ 00639000
         SLR   RWORK0,RWORK0                                       0294 00640000
         IC    RWORK0,IBFLPL(,RWORK1)                              0294 00641000
*                     RWORK3=RWORK1-RWORK0;/* POINT TO BEGINNING OF     00642000
*                                      STORED KEY                    */ 00643000
         LR    RWORK3,RWORK1                                       0295 00644000
         SLR   RWORK3,RWORK0                                       0295 00645000
*                     IF RWORK1->IBFLPF=IXSPEC THEN/* NEW F = THIS F */ 00646000
         L     @10,AMBIWA(,RAMB)                                   0296 00647000
         L     @10,ICWCHN(,@10)                                    0296 00648000
         L     @10,IMWIXSP(,@10)                                   0296 00649000
         CLC   IBFLPF(1,RWORK1),IXSPEC(@10)                        0296 00650000
         BNE   @RF00296                                            0296 00651000
*                       DO WHILE RWORK0>ZERO;/* LOOP TO COMPARE INDEX   00652000
*                                      ENTRY WITH ARGUMENT           */ 00653000
         B     @DE00297                                            0297 00654000
@DL00297 DS    0H                                                  0298 00655000
*                         IF RWORK2->KEY(1)=/* COMPARE A BYTE OF   0298 00656000
*                                      INDEX                         */ 00657000
*                             RWORK3->KEY(1) THEN/* WITH AN ARGUMENT    00658000
*                                      BYTE                          */ 00659000
         CLC   KEY(1,RWORK2),KEY(RWORK3)                           0298 00660000
         BNE   @RF00298                                            0298 00661000
*                           DO;     /*                               */ 00662000
*                             IXSPEC=IXSPEC+ONE;/* BUMP COMPARE COUNT*/ 00663000
         L     @10,AMBIWA(,RAMB)                                   0300 00664000
         L     @10,ICWCHN(,@10)                                    0300 00665000
         L     @10,IMWIXSP(,@10)                                   0300 00666000
         LA    @09,1                                               0300 00667000
         SLR   @15,@15                                             0300 00668000
         IC    @15,IXSPEC(,@10)                                    0300 00669000
         ALR   @15,@09                                             0300 00670000
         STC   @15,IXSPEC(,@10)                                    0300 00671000
*                             RWORK2=RWORK2+ONE;/* ADDRESS NEXT ARG.    00672000
*                                      BYTE                          */ 00673000
         ALR   RWORK2,@09                                          0301 00674000
*                             RWORK3=RWORK3+ONE;/* ADDRESS NEXT ENTRY   00675000
*                                      BYTE                          */ 00676000
         ALR   RWORK3,@09                                          0302 00677000
*                             RWORK0=RWORK0-ONE;/* COUNT OFF ONE MORE   00678000
*                                      BYTE                          */ 00679000
         BCTR  RWORK0,0                                            0303 00680000
*                           END;    /*                               */ 00681000
*                         ELSE      /*                               */ 00682000
*                           RWORK0=ZERO;/* NO MATCH, FORCE END OF  0305 00683000
*                                      LOOP                          */ 00684000
         B     @RC00298                                            0305 00685000
@RF00298 SLR   RWORK0,RWORK0                                       0305 00686000
*                       END;        /*                               */ 00687000
@RC00298 DS    0H                                                  0306 00688000
@DE00297 CL    RWORK0,@CF00059                                     0306 00689000
         BH    @DL00297                                            0306 00690000
*                     RWORK3=RWORK1-(RWORK1->IBFLPL+/* SET REGISTER  */ 00691000
*                         LENGTH(IXSELL));/* TO POINT TO SECT LL     */ 00692000
@RF00296 LA    RWORK3,2                                            0307 00693000
         SLR   @10,@10                                             0307 00694000
         IC    @10,IBFLPL(,RWORK1)                                 0307 00695000
         ALR   RWORK3,@10                                          0307 00696000
         LCR   RWORK3,RWORK3                                       0307 00697000
         ALR   RWORK3,RWORK1                                       0307 00698000
*                     RWORK1=RWORK1-/* BACK UP POINTER TO            */ 00699000
*                         RWORK3->IXSELL;/* NEXT SECTION ENTRY       */ 00700000
         SLR   @10,@10                                             0308 00701000
         ICM   @10,3,IXSELL(RWORK3)                                0308 00702000
         SLR   RWORK1,@10                                          0308 00703000
*                   END;            /*                               */ 00704000
@DE00293 L     @10,AMBIWA(,RAMB)                                   0309 00705000
         L     @10,ICWCHN(,@10)                                    0309 00706000
         L     @09,IMWIXSP(,@10)                                   0309 00707000
         C     RWORK1,IXSSEP(,@09)                                 0309 00708000
         BH    @DL00293                                            0309 00709000
*                   RESPECIFY                                      0310 00710000
*                    (RWORK0) UNRSTD;/*                              */ 00711000
*                   IMWIEL=IMWIEL-IXSPEC;/* SET TOTAL KEY LENGTH     */ 00712000
         SLR   @00,@00                                             0311 00713000
         IC    @00,IMWIEL(,@10)                                    0311 00714000
         SLR   @15,@15                                             0311 00715000
         IC    @15,IXSPEC(,@09)                                    0311 00716000
         SLR   @00,@15                                             0311 00717000
         STC   @00,IMWIEL(,@10)                                    0311 00718000
*                   IF IXHLV=ONE THEN/* IS THIS SEQ SET LEVEL        */ 00719000
         L     @10,IMWBUFP(,@10)                                   0312 00720000
         CLI   IXHLV(@10),1                                        0312 00721000
         BNE   @RF00312                                            0312 00722000
*                     DO;           /* YES, REDETERMINE REAR         */ 00723000
*                       CALL COMPRS;/* COMPRESSION                   */ 00724000
         BAL   @14,COMPRS                                          0314 00725000
*                     END;          /*                               */ 00726000
*                   IMWBSE=ON;      /* SHOW SECTION CREATED          */ 00727000
@RF00312 L     @10,AMBIWA(,RAMB)                                   0316 00728000
         L     @10,ICWCHN(,@10)                                    0316 00729000
         OI    IMWBSE(@10),B'00100000'                             0316 00730000
*                   GO TO INS1;     /*                               */ 00731000
         B     INS1                                                0317 00732000
*                 END;              /* END OF SECTION ENTRY          */ 00733000
*             END;                  /*                               */ 00734000
*         END;                      /*                               */ 00735000
*       ELSE                        /*                               */ 00736000
*INS1:                                                             0321 00737000
*         DO;                       /*                               */ 00738000
         B     @RC00272                                            0321 00739000
@RF00272 DS    0H                                                  0321 00740000
INS1     DS    0H                                                  0322 00741000
*           RPARM1=RWORK4->IBFLPL;  /* PICK UP ENTRY L VALUE         */ 00742000
         SLR   RPARM1,RPARM1                                       0322 00743000
         IC    RPARM1,IBFLPL(,RWORK4)                              0322 00744000
*           RWORK2=RWORK4->IBFLPF;  /* PICK UP ENTRY F VALUE         */ 00745000
         SLR   RWORK2,RWORK2                                       0323 00746000
         IC    RWORK2,IBFLPF(,RWORK4)                              0323 00747000
*           RWORK1=IXSPEC+IMWIEL;   /* NEW ENTRY F + L               */ 00748000
         L     @10,AMBIWA(,RAMB)                                   0324 00749000
         L     @10,ICWCHN(,@10)                                    0324 00750000
         L     @09,IMWIXSP(,@10)                                   0324 00751000
         SLR   RWORK1,RWORK1                                       0324 00752000
         IC    RWORK1,IXSPEC(,@09)                                 0324 00753000
         SLR   @09,@09                                             0324 00754000
         IC    @09,IMWIEL(,@10)                                    0324 00755000
         ALR   RWORK1,@09                                          0324 00756000
*           IF RWORK1<RWORK2 THEN   /* NEW LENGTH < OLD F            */ 00757000
         CLR   RWORK1,RWORK2                                       0325 00758000
         BNL   @RF00325                                            0325 00759000
*             RPARM1=ZERO;          /* YES. NO RECOMPRESSION         */ 00760000
         SLR   RPARM1,RPARM1                                       0326 00761000
*           RWORK1=RWORK1-RWORK2;   /* REDUCE LENGTH BY OLD F        */ 00762000
@RF00325 SLR   RWORK1,RWORK2                                       0327 00763000
*           RBUFC=RWORK4-RPARM1;    /* POINT TO 1ST KEY CHAR.        */ 00764000
         LR    RBUFC,RWORK4                                        0328 00765000
         SLR   RBUFC,RPARM1                                        0328 00766000
*           IF RWORK1<RPARM1 THEN   /* RESULT < OLD L                */ 00767000
         CR    RWORK1,RPARM1                                       0329 00768000
         BNL   @RF00329                                            0329 00769000
*             RPARM1=RWORK1;        /* YES. USE RESULT               */ 00770000
         LR    RPARM1,RWORK1                                       0330 00771000
*           IF RPARM1^=ZERO THEN    /* L = 0                         */ 00772000
@RF00329 LTR   RPARM1,RPARM1                                       0331 00773000
         BZ    @RF00331                                            0331 00774000
*             DO;                   /* NO.                           */ 00775000
*               RWORK2=IMWIKEYP+RWORK2;/* POINT TO F+1 TH CHAR OF NEW   00776000
*                                      ENTRY                         */ 00777000
         L     @10,AMBIWA(,RAMB)                                   0333 00778000
         L     @10,ICWCHN(,@10)                                    0333 00779000
         AL    RWORK2,IMWIKEYP(,@10)                               0333 00780000
*               RWORK1=RPARM1;      /* COMPARE LENGTH                */ 00781000
         LR    RWORK1,RPARM1                                       0334 00782000
*               RWORK3=RPARM1;      /* COMPARE LENGTH                */ 00783000
         LR    RWORK3,RPARM1                                       0335 00784000
*               GEN(CLCL  RBUFC,RWORK2);/* COMPARE                   */ 00785000
         CLCL  RBUFC,RWORK2                                             00786000
*               IMWFGAIN=RPARM1-RWORK1;/* SAVE EQUAL COMPARE CNT     */ 00787000
         L     @10,AMBIWA(,RAMB)                                   0337 00788000
         L     @10,ICWCHN(,@10)                                    0337 00789000
         LR    @09,RPARM1                                          0337 00790000
         SLR   @09,RWORK1                                          0337 00791000
         STC   @09,IMWFGAIN(,@10)                                  0337 00792000
*             END;                  /* END OF F-GAIN DETERMTN        */ 00793000
*         END;                      /* END OF NON-SECTION NEXT       */ 00794000
@RF00331 DS    0H                                                  0340 00795000
*       RESPECIFY                                                  0340 00796000
*         RWORK4 UNRSTD;                                           0340 00797000
*                                                                  0340 00798000
@RC00272 DS    0H                                                  0341 00799000
*       /*************************************************************/ 00800000
*       /*                                                           */ 00801000
*       /* DETERMINE NUMBER OF FREE BYTES IN INDEX RECORD.           */ 00802000
*       /*                                                           */ 00803000
*       /*************************************************************/ 00804000
*                                                                  0341 00805000
*       RBUFC=IMWBUFP+IXHLEO;       /* POINT TO LAST ENTRY           */ 00806000
         L     @10,AMBIWA(,RAMB)                                   0341 00807000
         L     @10,ICWCHN(,@10)                                    0341 00808000
         L     @15,IMWBUFP(,@10)                                   0341 00809000
         LH    @14,IXHLEO(,@15)                                    0341 00810000
         LR    RBUFC,@15                                           0341 00811000
         ALR   RBUFC,@14                                           0341 00812000
*       RWORK1=RBUFC->IBFLPL;       /* PICK UP L OF ENTRY            */ 00813000
         SLR   RWORK1,RWORK1                                       0342 00814000
         IC    RWORK1,IBFLPL(,RBUFC)                               0342 00815000
*       RWORK1=RWORK1+LENGTH(IXSELL);/* ADD LENGTH OF LL             */ 00816000
         LA    @09,2                                               0343 00817000
         ALR   RWORK1,@09                                          0343 00818000
*       RWORK3=IXHLEO-IXHFSO-RWORK1;/* NO. OF FREE BYTES             */ 00819000
         SH    @14,IXHFSO(,@15)                                    0344 00820000
         SLR   @14,RWORK1                                          0344 00821000
         LR    RWORK3,@14                                          0344 00822000
*       RWORK3=RWORK3-AMDKEYLN;     /* RESERVE BYTES FOR MAX.        */ 00823000
         L     @14,AMBDSB(,RAMB)                                   0345 00824000
         SH    RWORK3,AMDKEYLN(,@14)                               0345 00825000
*       PLHSAVE1=RBUFC-RWORK1;      /* POINT TO LEFT BYTE            */ 00826000
*                                                                  0346 00827000
         LR    @00,RBUFC                                           0346 00828000
         SLR   @00,RWORK1                                          0346 00829000
         ST    @00,PLHSAVE1(,RPLH)                                 0346 00830000
*       /*************************************************************/ 00831000
*       /*                                                           */ 00832000
*       /* DETERMINE NUMBER OF BYTES NEEDED FOR NEW ENTRY            */ 00833000
*       /*                                                           */ 00834000
*       /*************************************************************/ 00835000
*                                                                  0347 00836000
*       RWORK1=IMWIEL;              /* NEW ENTRY L VALUE             */ 00837000
         SLR   RWORK1,RWORK1                                       0347 00838000
         IC    RWORK1,IMWIEL(,@10)                                 0347 00839000
*       IF IXHLV=ONE THEN           /* SEQUENCE SET INSERT           */ 00840000
         CLI   IXHLV(@15),1                                        0348 00841000
         BNE   @RF00348                                            0348 00842000
*         RWORK1=RWORK1+LENGTH(IBFLPF)/* ADD ROOM FOR F              */ 00843000
*             +LENGTH(IBFLPL);      /* ADD ROOM FOR L                */ 00844000
         ALR   RWORK1,@09                                          0349 00845000
*       ELSE                        /* NOT SEQ. SET INSERT           */ 00846000
*         RWORK1=RWORK1+IXHFLPLN;   /* ADD ROOM FOR F,L,PTR          */ 00847000
         B     @RC00348                                            0350 00848000
@RF00348 L     @10,AMBIWA(,RAMB)                                   0350 00849000
         L     @10,ICWCHN(,@10)                                    0350 00850000
         L     @10,IMWBUFP(,@10)                                   0350 00851000
         SLR   @00,@00                                             0350 00852000
         IC    @00,IXHFLPLN(,@10)                                  0350 00853000
         ALR   RWORK1,@00                                          0350 00854000
*       IF IMWBSE=ON THEN           /* IF ENTRY BECAME A SECT        */ 00855000
@RC00348 L     @10,AMBIWA(,RAMB)                                   0351 00856000
         L     @10,ICWCHN(,@10)                                    0351 00857000
         TM    IMWBSE(@10),B'00100000'                             0351 00858000
         BNO   @RF00351                                            0351 00859000
*         RWORK1=RWORK1+LENGTH(IXSELL);/* ADD SPACE FOR LL           */ 00860000
         AL    RWORK1,@CF00155                                     0352 00861000
*                                                                  0353 00862000
*       /*************************************************************/ 00863000
*       /*                                                           */ 00864000
*       /* DETERMINE IF ENTRY WILL FIT IN INDEX RECORD.              */ 00865000
*       /*                                                           */ 00866000
*       /*************************************************************/ 00867000
*                                                                  0353 00868000
*       RWORK3=RWORK3+IMWFGAIN;     /* PICK UP FGAIN                 */ 00869000
@RF00351 L     @10,AMBIWA(,RAMB)                                   0353 00870000
         L     @10,ICWCHN(,@10)                                    0353 00871000
         SLR   @00,@00                                             0353 00872000
         IC    @00,IMWFGAIN(,@10)                                  0353 00873000
         ALR   RWORK3,@00                                          0353 00874000
*       IF RWORK1>RWORK3 THEN       /* ROOM FOR NEW ENTRY            */ 00875000
         CR    RWORK1,RWORK3                                       0354 00876000
         BNH   @RF00354                                            0354 00877000
*         DO;                       /* NO.                           */ 00878000
*           IF IXHLV=ONE&RBUFC->IBFLPF/* LAST SS RECORD@ZA02289      */ 00879000
*               =ZERO&RBUFC->IBFLPL=ZERO THEN/*              @ZA02289*/ 00880000
         L     @10,IMWBUFP(,@10)                                   0356 00881000
         CLI   IXHLV(@10),1                                        0356 00882000
         BNE   @RF00356                                            0356 00883000
         CLI   IBFLPF(RBUFC),0                                     0356 00884000
         BNE   @RF00356                                            0356 00885000
         CLI   IBFLPL(RBUFC),0                                     0356 00886000
         BNE   @RF00356                                            0356 00887000
*INOFIT:                                                           0357 00888000
*             DO;                   /* YES- WILL NOT FIT             */ 00889000
INOFIT   DS    0H                                                  0358 00890000
*               RESPECIFY                                          0358 00891000
*                 R15 RSTD;                                        0358 00892000
*               R15=IMWNOFIT;       /* SET WONT FIT RTN CODE         */ 00893000
         LA    R15,8                                               0359 00894000
*               RAMB=AMBLDTA;       /* POINT TO DATA AMB             */ 00895000
         L     @14,RPLDACB(,RRPL)                                  0360 00896000
         L     @14,ACBAMBL(,@14)                                   0360 00897000
         L     RAMB,AMBLDTA(,@14)                                  0360 00898000
*               GEN(IDARST14);      /* RESTORE R14                   */ 00899000
         IDARST14                                                       00900000
*               RETURN;             /* RETURN                        */ 00901000
@EL00001 DS    0H                                                  0362 00902000
@EF00001 DS    0H                                                  0362 00903000
@ER00001 BR    @14                                                 0362 00904000
*               RESPECIFY                                          0363 00905000
*                 R15 UNRSTD;                                      0363 00906000
*             END;                  /* END OF ERROR RETURN           */ 00907000
*           ELSE                    /* NOT LAST SS RECORD            */ 00908000
*             DO;                   /* RE-ESTIMATE SPACE             */ 00909000
@RF00356 DS    0H                                                  0366 00910000
*               RWORK3=RWORK3+AMDKEYLN;/* ADD BACK KEYSIZE           */ 00911000
         L     @10,AMBDSB(,RAMB)                                   0366 00912000
         AH    RWORK3,AMDKEYLN(,@10)                               0366 00913000
*               IF RWORK1>RWORK3 THEN/* FIT WITH NO RESERVE          */ 00914000
         CR    RWORK1,RWORK3                                       0367 00915000
         BH    @RT00367                                            0367 00916000
*                 GO TO INOFIT;     /* NO                            */ 00917000
*               PLHSAVE6=IMWIEL+IXSPEC+LENGTH(IXSELL);/* L+F+2       */ 00918000
         L     @10,AMBIWA(,RAMB)                                   0369 00919000
         L     @10,ICWCHN(,@10)                                    0369 00920000
         L     @15,IMWIXSP(,@10)                                   0369 00921000
         SLR   @00,@00                                             0369 00922000
         IC    @00,IMWIEL(,@10)                                    0369 00923000
         SLR   @14,@14                                             0369 00924000
         IC    @14,IXSPEC(,@15)                                    0369 00925000
         ALR   @00,@14                                             0369 00926000
         AL    @00,@CF00155                                        0369 00927000
         ST    @00,PLHSAVE6(,RPLH)                                 0369 00928000
*               PLHSAVE5=RWORK1-IMWFGAIN;/* INSERT SPACE NEEDED      */ 00929000
         LR    @00,RWORK1                                          0370 00930000
         SLR   @14,@14                                             0370 00931000
         IC    @14,IMWFGAIN(,@10)                                  0370 00932000
         SLR   @00,@14                                             0370 00933000
         ST    @00,PLHSAVE5(,RPLH)                                 0370 00934000
*               RBUFC=IXSHEP-IMWBUFP;/* INSERT POINT OFFSET          */ 00935000
         L     @10,IMWBUFP(,@10)                                   0371 00936000
         L     RBUFC,IXSHEP(,@15)                                  0371 00937000
         SLR   RBUFC,@10                                           0371 00938000
*               RPARM1=IMWBUFP;     /* POINT TO IX RECORD            */ 00939000
         LR    RPARM1,@10                                          0372 00940000
*I02:                                                              0373 00941000
*               DO;                 /* IDACALL(IDAIXCHK)             */ 00942000
I02      DS    0H                                                  0374 00943000
*                 CALL IDAIXCHK;    /* EXIT TO IDAIXCHK              */ 00944000
         L     @15,@CA01049                                        0374 00945000
         BALR  @14,@15                                             0374 00946000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00947000
         BALR @11,0                                                     00948000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00949000
         USING *,@11                                                    00950000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00951000
         L     @11,=A(@PSTART)                                          00952000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00953000
         USING @PSTART,@11                                              00954000
*               END I02;            /* SCAN FOR RESERVED             */ 00955000
*               RFY                                                0380 00956000
*                (RWORK1,                                          0380 00957000
*                 RWORK2,                                          0380 00958000
*                 RWORK3,                                          0380 00959000
*                 R15) RSTD;                                       0380 00960000
*               IF R15^=ZERO THEN   /* NOT ENOUGH SPACE              */ 00961000
         LTR   R15,R15                                             0381 00962000
         BNZ   @RT00381                                            0381 00963000
*                 GO TO INOFIT;     /* ENTRY WILL NOT FIT            */ 00964000
*               RFY                                                0383 00965000
*                 R15 UNRSTD;                                      0383 00966000
*             END;                  /* END RE-ESTIMATE SPACE         */ 00967000
*         END;                      /* NOT ROOM FOR RESERVE          */ 00968000
*                                                                  0386 00969000
*       /*************************************************************/ 00970000
*       /*                                                           */ 00971000
*       /* MAKE RE-ADJUSTMENT TO ENTRY FOLLOWING INSERT POINT.       */ 00972000
*       /*                                                           */ 00973000
*       /*************************************************************/ 00974000
*                                                                  0386 00975000
*       RWORK3=IMWFGAIN;            /* PICK UP FGAIN VALUE           */ 00976000
@RF00354 L     @10,AMBIWA(,RAMB)                                   0386 00977000
         L     @10,ICWCHN(,@10)                                    0386 00978000
         SLR   RWORK3,RWORK3                                       0386 00979000
         IC    RWORK3,IMWFGAIN(,@10)                               0386 00980000
*       IF RWORK3^=ZERO THEN        /* VALUE = 0                     */ 00981000
         LTR   RWORK3,RWORK3                                       0387 00982000
         BZ    @RF00387                                            0387 00983000
*         DO;                       /* NO.                           */ 00984000
*           RBUFC=IXSHEP-(IXSNOSR*IXHFLPLN);/* POINT TO FOLLOWING  0389 00985000
*                                      ENT.                  @ZA02289*/ 00986000
         L     @15,IMWIXSP(,@10)                                   0389 00987000
         L     @10,IMWBUFP(,@10)                                   0389 00988000
         SLR   @14,@14                                             0389 00989000
         IC    @14,IXHFLPLN(,@10)                                  0389 00990000
         SLR   @09,@09                                             0389 00991000
         IC    @09,IXSNOSR(,@15)                                   0389 00992000
         MR    @08,@14                                             0389 00993000
         L     RBUFC,IXSHEP(,@15)                                  0389 00994000
         SLR   RBUFC,@09                                           0389 00995000
*           RPARM1=RBUFC->IBFLPL;   /* PICK UP L OF ENTRY            */ 00996000
         SLR   @10,@10                                             0390 00997000
         IC    @10,IBFLPL(,RBUFC)                                  0390 00998000
         LR    RPARM1,@10                                          0390 00999000
*           RBUFC->IBFLPF=RBUFC->IBFLPF/* INCREMENT F OF ENTRY       */ 01000000
*               +RWORK3;            /* BY FGAIN VALUE                */ 01001000
         SLR   @00,@00                                             0391 01002000
         IC    @00,IBFLPF(,RBUFC)                                  0391 01003000
         ALR   @00,RWORK3                                          0391 01004000
         STC   @00,IBFLPF(,RBUFC)                                  0391 01005000
*           RBUFC->IBFLPL=RBUFC->IBFLPL/* REDUCE L OF ENTRY          */ 01006000
*               -RWORK3;            /* BY FGAIN VALUE                */ 01007000
         SLR   @10,RWORK3                                          0392 01008000
         STC   @10,IBFLPL(,RBUFC)                                  0392 01009000
*           RBUFC=RBUFC-RPARM1;     /* POINT TO LEFTMOST BYTE        */ 01010000
         SLR   RBUFC,RPARM1                                        0393 01011000
*           RWORK2=RBUFC+RWORK3;    /* POINT 1ST REMAIN BYTE         */ 01012000
         LR    RWORK2,RBUFC                                        0394 01013000
         ALR   RWORK2,RWORK3                                       0394 01014000
*           RWORK1=IXHFLPLN+RPARM1-RWORK3/* MVCL LENGTH              */ 01015000
*               +(IXSNOSR*IXHFLPLN);/*                       @ZA02289*/ 01016000
         ALR   @14,RPARM1                                          0395 01017000
         SLR   @14,RWORK3                                          0395 01018000
         ALR   @14,@09                                             0395 01019000
         LR    RWORK1,@14                                          0395 01020000
*           PLHSAVE2=RBUFC+RWORK1;  /* END OF ENTRIES TO LEFT        */ 01021000
         LR    @10,RBUFC                                           0396 01022000
         ALR   @10,RWORK1                                          0396 01023000
         ST    @10,PLHSAVE2(,RPLH)                                 0396 01024000
*           RWORK3=RWORK1;          /* COPY MVCL LENGTH              */ 01025000
         LR    RWORK3,RWORK1                                       0397 01026000
*           GEN(MVCL  RBUFC,RWORK2);/* MOVE ENTRY LEFT               */ 01027000
         MVCL  RBUFC,RWORK2                                             01028000
*         END;                      /* END OF NEXT ENTRY ADJST       */ 01029000
*       ELSE                        /*                               */ 01030000
*         PLHSAVE2=IXSHEP+IXHFLPLN; /* END OF ENTRIES TO LEFT        */ 01031000
         B     @RC00387                                            0400 01032000
@RF00387 L     @10,AMBIWA(,RAMB)                                   0400 01033000
         L     @10,ICWCHN(,@10)                                    0400 01034000
         L     @15,IMWIXSP(,@10)                                   0400 01035000
         L     @10,IMWBUFP(,@10)                                   0400 01036000
         SLR   @00,@00                                             0400 01037000
         IC    @00,IXHFLPLN(,@10)                                  0400 01038000
         AL    @00,IXSHEP(,@15)                                    0400 01039000
         ST    @00,PLHSAVE2(,RPLH)                                 0400 01040000
*                                                                  0401 01041000
*       /*************************************************************/ 01042000
*       /*                                                           */ 01043000
*       /* REMOVE FREE DATA CI PTR FOR SEQUENCE SET INSERT           */ 01044000
*       /*                                                           */ 01045000
*       /*************************************************************/ 01046000
*                                                                  0401 01047000
*       RWORK1=IXHFLPLN-LENGTH(IBFLPF)/* COMPUTE PTR LENGTH          */ 01048000
*           -LENGTH(IBFLPL);        /*                               */ 01049000
@RC00387 L     @10,AMBIWA(,RAMB)                                   0401 01050000
         L     @10,ICWCHN(,@10)                                    0401 01051000
         L     @10,IMWBUFP(,@10)                                   0401 01052000
         SLR   RWORK1,RWORK1                                       0401 01053000
         IC    RWORK1,IXHFLPLN(,@10)                               0401 01054000
         BCTR  RWORK1,0                                            0401 01055000
         BCTR  RWORK1,0                                            0401 01056000
*       PLHSAVE3=RWORK1;            /* SAVE PTR LENGTH               */ 01057000
         ST    RWORK1,PLHSAVE3(,RPLH)                              0402 01058000
*       IF IXHLV=ONE THEN           /* SEQUENCE SET                  */ 01059000
         CLI   IXHLV(@10),1                                        0403 01060000
         BNE   @RF00403                                            0403 01061000
*         DO;                       /* YES.                          */ 01062000
*           IXHFSO=IXHFSO-RWORK1;   /* REDUCE FREE SP OFFSET         */ 01063000
         LH    @00,IXHFSO(,@10)                                    0405 01064000
         SLR   @00,RWORK1                                          0405 01065000
         STH   @00,IXHFSO(,@10)                                    0405 01066000
*           RWORK2=ZERO;            /* ZERO REGISTER                 */ 01067000
         SLR   RWORK2,RWORK2                                       0406 01068000
*           RWORK1=IMWBUFP+IXHFSO;  /* POINT TO USED PTR             */ 01069000
         ALR   @00,@10                                             0407 01070000
         LR    RWORK1,@00                                          0407 01071000
*           RWORK3=IXHPTLS;         /* PICK UP PTR LENGTH MASK       */ 01072000
         SLR   RWORK3,RWORK3                                       0408 01073000
         IC    RWORK3,IXHPTLS(,@10)                                0408 01074000
*           GEN(EX  RWORK3,SETPTR); /* ZERO USED PTR                 */ 01075000
         EX  RWORK3,SETPTR                                              01076000
*         END;                      /* END OF USED PTR ERASE         */ 01077000
*                                                                  0410 01078000
*       /*************************************************************/ 01079000
*       /*                                                           */ 01080000
*       /* MOVE ENTRIES LEFT TO FORM SPACE FOR NEW ENTRY             */ 01081000
*       /*                                                           */ 01082000
*       /*************************************************************/ 01083000
*                                                                  0411 01084000
*       RPARM1=IMWIEL+IXHFLPLN-IMWFGAIN;/* LEFT SHIFT AMOUNT         */ 01085000
@RF00403 L     @10,AMBIWA(,RAMB)                                   0411 01086000
         L     @10,ICWCHN(,@10)                                    0411 01087000
         L     @15,IMWBUFP(,@10)                                   0411 01088000
         SLR   RPARM1,RPARM1                                       0411 01089000
         IC    RPARM1,IMWIEL(,@10)                                 0411 01090000
         SLR   @00,@00                                             0411 01091000
         IC    @00,IXHFLPLN(,@15)                                  0411 01092000
         ALR   RPARM1,@00                                          0411 01093000
         SLR   @00,@00                                             0411 01094000
         IC    @00,IMWFGAIN(,@10)                                  0411 01095000
         SLR   RPARM1,@00                                          0411 01096000
*       IF IMWBSE=ON THEN           /* IF ENTRY BECAME A SECT        */ 01097000
         TM    IMWBSE(@10),B'00100000'                             0412 01098000
         BNO   @RF00412                                            0412 01099000
*         RPARM1=RPARM1+LENGTH(IXSELL);/* ADD SPACE FOR LL           */ 01100000
         AL    RPARM1,@CF00155                                     0413 01101000
*       IF RPARM1>ZERO THEN         /* SHIFT AMOUNT = 0              */ 01102000
@RF00412 LTR   RPARM1,RPARM1                                       0414 01103000
         BNP   @RF00414                                            0414 01104000
*         DO;                       /* NO.                           */ 01105000
*           RWORK2=PLHSAVE1;        /* POINT TO LEFT BYTE            */ 01106000
         L     RWORK2,PLHSAVE1(,RPLH)                              0416 01107000
*           RWORK1=PLHSAVE2-RWORK2; /* MOVE LENGTH                   */ 01108000
         L     RWORK1,PLHSAVE2(,RPLH)                              0417 01109000
         SLR   RWORK1,RWORK2                                       0417 01110000
*           RBUFC=RWORK2-RPARM1;    /* BACK UP TO PTR BY SHIFT       */ 01111000
         LR    RBUFC,RWORK2                                        0418 01112000
         SLR   RBUFC,RPARM1                                        0418 01113000
*           RWORK3=RWORK1;          /* COPY MVCL LENGTH              */ 01114000
         LR    RWORK3,RWORK1                                       0419 01115000
*           GEN(MVCL  RBUFC,RWORK2);/* SHIFT ENTRIES LEFT            */ 01116000
         MVCL  RBUFC,RWORK2                                             01117000
*         END;                      /* END OF SHIFT CODE             */ 01118000
*                                                                  0421 01119000
*       /*************************************************************/ 01120000
*       /*                                                           */ 01121000
*       /*                                                           */ 01122000
*       /*************************************************************/ 01123000
*                                                                  0422 01124000
*                                                                  0422 01125000
*       /*************************************************************/ 01126000
*       /*                                                           */ 01127000
*       /* INSERT NEW INDEX ENTRY.                                   */ 01128000
*       /*                                                           */ 01129000
*       /*************************************************************/ 01130000
*                                                                  0422 01131000
*       RBUFC=IXSHEP;               /* NEW ENTRY LOCATION            */ 01132000
@RF00414 L     @10,AMBIWA(,RAMB)                                   0422 01133000
         L     @10,ICWCHN(,@10)                                    0422 01134000
         L     @15,IMWIXSP(,@10)                                   0422 01135000
         L     RBUFC,IXSHEP(,@15)                                  0422 01136000
*       RBUFC->IBFLPF=IXSPEC;       /* SET F                         */ 01137000
         IC    @00,IXSPEC(,@15)                                    0423 01138000
         STC   @00,IBFLPF(,RBUFC)                                  0423 01139000
*       RBUFC->IBFLPL=IMWIEL;       /* SET L                         */ 01140000
         IC    @00,IMWIEL(,@10)                                    0424 01141000
         STC   @00,IBFLPL(,RBUFC)                                  0424 01142000
*       RWORK1=ADDR(RBUFC->IBFLP3); /* PTR LOCATION                  */ 01143000
         LA    RWORK1,IBFLP3(,RBUFC)                               0425 01144000
*       RWORK3=IXHPTLS;             /* PTR LENGTH MASK               */ 01145000
         L     @15,IMWBUFP(,@10)                                   0426 01146000
         SLR   RWORK3,RWORK3                                       0426 01147000
         IC    RWORK3,IXHPTLS(,@15)                                0426 01148000
*       RWORK2=IMWIPTR;             /* PICK UP PTR VALUE             */ 01149000
         L     RWORK2,IMWIPTR(,@10)                                0427 01150000
*       GEN(EX  RWORK3,SETPTR);     /* SET PTR IN ENTRY              */ 01151000
         EX  RWORK3,SETPTR                                              01152000
*       RWORK1=IMWIEL;              /* NUMBER OF KEY CHAR.           */ 01153000
         L     @10,AMBIWA(,RAMB)                                   0429 01154000
         L     @10,ICWCHN(,@10)                                    0429 01155000
         SLR   RWORK1,RWORK1                                       0429 01156000
         IC    RWORK1,IMWIEL(,@10)                                 0429 01157000
*       RBUFC=RBUFC-RWORK1;         /* SET TO PTR FOR MVCL           */ 01158000
         SLR   RBUFC,RWORK1                                        0430 01159000
*       PLHSAVE3=RBUFC-PLHSAVE3;    /* SET PTR TO NEXT ENT.PTR       */ 01160000
         LR    @00,RBUFC                                           0431 01161000
         SL    @00,PLHSAVE3(,RPLH)                                 0431 01162000
         ST    @00,PLHSAVE3(,RPLH)                                 0431 01163000
*       RWORK2=IMWIKEYP+IXSPEC;     /* SET FROM PTR                  */ 01164000
         L     @15,IMWIXSP(,@10)                                   0432 01165000
         SLR   RWORK2,RWORK2                                       0432 01166000
         IC    RWORK2,IXSPEC(,@15)                                 0432 01167000
         AL    RWORK2,IMWIKEYP(,@10)                               0432 01168000
*       RWORK3=RWORK1;              /* COPY MVCL LENGTH              */ 01169000
         LR    RWORK3,RWORK1                                       0433 01170000
*       GEN(MVCL  RBUFC,RWORK2);    /* INSERT KEY CHARACTERS         */ 01171000
*                                                                  0434 01172000
         MVCL  RBUFC,RWORK2                                             01173000
*       /*************************************************************/ 01174000
*       /*                                                           */ 01175000
*       /* SET PTR IN FOLLOWING ENTRY.                               */ 01176000
*       /*                                                           */ 01177000
*       /*************************************************************/ 01178000
*                                                                  0435 01179000
*       RWORK2=IMWXPTR;             /* NEXT ENTRY PTR VALUE          */ 01180000
         L     @10,AMBIWA(,RAMB)                                   0435 01181000
         L     @10,ICWCHN(,@10)                                    0435 01182000
         L     RWORK2,IMWXPTR(,@10)                                0435 01183000
*       RWORK1=PLHSAVE3;            /* PTR TO PTR LOCATION           */ 01184000
         L     RWORK1,PLHSAVE3(,RPLH)                              0436 01185000
*       IF IMWBSE=ON THEN           /* IF THIS IS A SECTION          */ 01186000
         TM    IMWBSE(@10),B'00100000'                             0437 01187000
         BNO   @RF00437                                            0437 01188000
*         RWORK1=RWORK1-LENGTH(IXSELL);/* BACK OVER CHAIN FIELD      */ 01189000
         BCTR  RWORK1,0                                            0438 01190000
         BCTR  RWORK1,0                                            0438 01191000
*       RWORK3=IXHPTLS;             /* PTR LENGTH MASK               */ 01192000
@RF00437 L     @10,AMBIWA(,RAMB)                                   0439 01193000
         L     @10,ICWCHN(,@10)                                    0439 01194000
         L     @15,IMWBUFP(,@10)                                   0439 01195000
         SLR   RWORK3,RWORK3                                       0439 01196000
         IC    RWORK3,IXHPTLS(,@15)                                0439 01197000
*       IF IXSNOSR^=ZERO THEN       /* IS THE NEXT ENTRY FOR A     0440 01198000
*                                      SPANNED RECORD        @ZA02289*/ 01199000
         L     @10,IMWIXSP(,@10)                                   0440 01200000
         CLI   IXSNOSR(@10),0                                      0440 01201000
         BE    @RF00440                                            0440 01202000
*         DO;                       /* YES                   @ZA02289*/ 01203000
*           PLHSAVE3=IXSNOSR*IXHFLPLN;/* SET MOVE LL         @ZA02289*/ 01204000
         SLR   @09,@09                                             0442 01205000
         IC    @09,IXHFLPLN(,@15)                                  0442 01206000
         SLR   @00,@00                                             0442 01207000
         IC    @00,IXSNOSR(,@10)                                   0442 01208000
         MR    @08,@00                                             0442 01209000
         ST    @09,PLHSAVE3(,RPLH)                                 0442 01210000
*           RFY                                                    0443 01211000
*             RWORK4 RSTD;          /*                       @ZA02289*/ 01212000
*           RWORK4=ZERO;            /* CLEAR BEFORE EXTRACTING     0444 01213000
*                                      POINTER FIELD         @ZA02289*/ 01214000
         SLR   RWORK4,RWORK4                                       0444 01215000
*           GEN(EX  RWORK3,GETPTR); /* EXTRACT POINTER@ZA02289       */ 01216000
         EX  RWORK3,GETPTR                                              01217000
*           IF RWORK4=RWORK2 THEN   /* SAME AS POINTER WHICH WILL BE    01218000
*                                      STORED                @ZA02289*/ 01219000
         CLR   RWORK4,RWORK2                                       0446 01220000
         BNE   @RF00446                                            0446 01221000
*             IXSNOSR=ZERO;         /* YES, CLEAR FIELD SO NO      0447 01222000
*                                      ADJUSTMENTS WILL BE MADE LATER   01223000
*                                                            @ZA02289*/ 01224000
         L     @10,AMBIWA(,RAMB)                                   0447 01225000
         L     @10,ICWCHN(,@10)                                    0447 01226000
         L     @10,IMWIXSP(,@10)                                   0447 01227000
         MVI   IXSNOSR(@10),X'00'                                  0447 01228000
*           RFY                                                    0448 01229000
*             RWORK4 UNRSTD;        /*                       @ZA02289*/ 01230000
@RF00446 DS    0H                                                  0449 01231000
*         END;                      /*                       @ZA02289*/ 01232000
*       ELSE                        /*                       @ZA02289*/ 01233000
*         GEN(EX  RWORK3,SETPTR);   /* SET PTR IN ENTRY              */ 01234000
*                                                                  0450 01235000
         B     @RC00440                                            0450 01236000
@RF00440 DS    0H                                                  0450 01237000
         EX  RWORK3,SETPTR                                              01238000
*       /*************************************************************/ 01239000
*       /*                                                           */ 01240000
*       /* BUILD LL FIELD IF ENTRY WAS A SECTION                     */ 01241000
*       /*                                                           */ 01242000
*       /*************************************************************/ 01243000
*                                                                  0451 01244000
*       IF IMWBSE=ON THEN           /* WAS ENTRY MADE A SECT         */ 01245000
@RC00440 L     @10,AMBIWA(,RAMB)                                   0451 01246000
         L     @10,ICWCHN(,@10)                                    0451 01247000
         TM    IMWBSE(@10),B'00100000'                             0451 01248000
         BNO   @RF00451                                            0451 01249000
*         DO;                       /* YES                           */ 01250000
*           RWORK1=RWORK1+IXHFLPLN- /* POINT TO LL FIELD             */ 01251000
*               LENGTH(IBFLPL)-     /* OF THE ENTRY                  */ 01252000
*               LENGTH(IBFLPF);     /*                               */ 01253000
         L     @15,IMWBUFP(,@10)                                   0453 01254000
         LR    @00,RWORK1                                          0453 01255000
         SLR   @14,@14                                             0453 01256000
         IC    @14,IXHFLPLN(,@15)                                  0453 01257000
         ALR   @00,@14                                             0453 01258000
         BCTR  @00,0                                               0453 01259000
         BCTR  @00,0                                               0453 01260000
         LR    RWORK1,@00                                          0453 01261000
*           RWORK1->IXSELL=RPARM1+  /* SET VALUE OF LL FIELD         */ 01262000
*               IMWFGAIN;           /*                               */ 01263000
         LR    @00,RPARM1                                          0454 01264000
         SLR   @15,@15                                             0454 01265000
         IC    @15,IMWFGAIN(,@10)                                  0454 01266000
         ALR   @00,@15                                             0454 01267000
         STCM  @00,3,IXSELL(RWORK1)                                0454 01268000
*         END;                      /*                               */ 01269000
*       ELSE                                                       0456 01270000
*         ;                         /*                               */ 01271000
*                                                                  0456 01272000
@RF00451 DS    0H                                                  0457 01273000
*       /*************************************************************/ 01274000
*       /*                                                           */ 01275000
*       /* ADJUST OFFSET TO SECTION CONTAINING NEW ENTRY             */ 01276000
*       /*                                                           */ 01277000
*       /*************************************************************/ 01278000
*                                                                  0457 01279000
*       IF IMWBSE=OFF THEN          /* SECTION ENTRY MADE            */ 01280000
         L     @10,AMBIWA(,RAMB)                                   0457 01281000
         L     @10,ICWCHN(,@10)                                    0457 01282000
         TM    IMWBSE(@10),B'00100000'                             0457 01283000
         BNZ   @RF00457                                            0457 01284000
*         DO;                       /* NO                            */ 01285000
*           IF IXSSEP-IMWBUFP=IXHSEO THEN/* INSERT IN 1ST SECTION    */ 01286000
         L     @15,IMWIXSP(,@10)                                   0459 01287000
         L     @10,IMWBUFP(,@10)                                   0459 01288000
         L     @00,IXSSEP(,@15)                                    0459 01289000
         SLR   @00,@10                                             0459 01290000
         LH    @15,IXHSEO(,@10)                                    0459 01291000
         CR    @00,@15                                             0459 01292000
         BNE   @RF00459                                            0459 01293000
*             IXHSEO=IXHSEO-RPARM1; /* REDUCE 1ST SECT. OFFSET       */ 01294000
         SLR   @15,RPARM1                                          0460 01295000
         STH   @15,IXHSEO(,@10)                                    0460 01296000
*           ELSE                    /* NOT 1ST SECT. INSERT          */ 01297000
*             DO;                   /*                               */ 01298000
         B     @RC00459                                            0461 01299000
@RF00459 DS    0H                                                  0462 01300000
*               RWORK1=IXSLEP+IXHFLPLN;/* PTR TO LL OF PREV. SECT    */ 01301000
         L     @10,AMBIWA(,RAMB)                                   0462 01302000
         L     @10,ICWCHN(,@10)                                    0462 01303000
         L     @15,IMWIXSP(,@10)                                   0462 01304000
         L     @10,IMWBUFP(,@10)                                   0462 01305000
         SLR   RWORK1,RWORK1                                       0462 01306000
         IC    RWORK1,IXHFLPLN(,@10)                               0462 01307000
         AL    RWORK1,IXSLEP(,@15)                                 0462 01308000
*               RWORK2=ZERO;        /* ZERO REGISTER                 */ 01309000
         SLR   RWORK2,RWORK2                                       0463 01310000
*               GEN(ICM  RWORK2,3,0(RWORK1));/* PICK UP LL           */ 01311000
         ICM  RWORK2,3,0(RWORK1)                                        01312000
*               RWORK2=RWORK2+RPARM1;/* ADD INCREASE TO LL           */ 01313000
         ALR   RWORK2,RPARM1                                       0465 01314000
*               GEN(STCM RWORK2,3,0(RWORK1));/* STORE NEW LL VALUE   */ 01315000
         STCM RWORK2,3,0(RWORK1)                                        01316000
*             END;                  /* END PREV. LL ADJUST           */ 01317000
*           IMWFGAIN=ZERO;          /* CLEAR FGAIN TO KEEP LEO     0468 01318000
*                                      INDEPENDENT OF IT             */ 01319000
@RC00459 L     @10,AMBIWA(,RAMB)                                   0468 01320000
         L     @10,ICWCHN(,@10)                                    0468 01321000
         MVI   IMWFGAIN(@10),X'00'                                 0468 01322000
*         END;                      /*                               */ 01323000
*                                                                  0469 01324000
*       /*************************************************************/ 01325000
*       /*                                                           */ 01326000
*       /* ADJUST OFFSET TO LAST ENTRY IN INDEX RECORD.              */ 01327000
*       /*                                                           */ 01328000
*       /*************************************************************/ 01329000
*                                                                  0470 01330000
*       IXHLEO=IXHLEO-RPARM1-       /* BACK UP OFFSET TO             */ 01331000
*           IMWFGAIN;               /* THE LAST ENTRY IN INDX        */ 01332000
*                                                                  0470 01333000
@RF00457 L     @10,AMBIWA(,RAMB)                                   0470 01334000
         L     @10,ICWCHN(,@10)                                    0470 01335000
         L     @15,IMWBUFP(,@10)                                   0470 01336000
         LH    @00,IXHLEO(,@15)                                    0470 01337000
         SLR   @00,RPARM1                                          0470 01338000
         SLR   @14,@14                                             0470 01339000
         IC    @14,IMWFGAIN(,@10)                                  0470 01340000
         SLR   @00,@14                                             0470 01341000
         STH   @00,IXHLEO(,@15)                                    0470 01342000
*       /*************************************************************/ 01343000
*       /*                                                           */ 01344000
*       /*                                                   @ZA02289*/ 01345000
*       /* PROCESS FOLLOWING SPANNED RECORD ENTRY            @ZA02289*/ 01346000
*       /*                                                   @ZA02289*/ 01347000
*       /*                                                           */ 01348000
*       /*************************************************************/ 01349000
*                                                                  0471 01350000
*       IF IXSNOSR^=ZERO THEN       /* DOES INSERT PRECEED A SPANNED    01351000
*                                      RECORD                @ZA02289*/ 01352000
         L     @10,IMWIXSP(,@10)                                   0471 01353000
         CLI   IXSNOSR(@10),0                                      0471 01354000
         BE    @RF00471                                            0471 01355000
*         DO;                       /* YES                   @ZA02289*/ 01356000
*           RFY                                                    0473 01357000
*            (RWORK0,                                              0473 01358000
*             RWORK4) RSTD;         /*                       @ZA02289*/ 01359000
*           DO RPARM1=ONE TO IXSNOSR;/* LOOP TO SHIFT ENTRY FOR KEY     01360000
*                                      TO LEFT               @ZA02289*/ 01361000
         LA    RPARM1,1                                            0474 01362000
         B     @DE00474                                            0474 01363000
@DL00474 DS    0H                                                  0475 01364000
*             RWORK0=IXSHEP-IXSHEP->/* POINT TO LEFT         @ZA02289*/ 01365000
*                 IBFLPL;           /* END OF KEY            @ZA02289*/ 01366000
         L     @10,AMBIWA(,RAMB)                                   0475 01367000
         L     @10,ICWCHN(,@10)                                    0475 01368000
         L     @09,IMWIXSP(,@10)                                   0475 01369000
         L     @09,IXSHEP(,@09)                                    0475 01370000
         LR    RWORK0,@09                                          0475 01371000
         SLR   @15,@15                                             0475 01372000
         IC    @15,IBFLPL(,@09)                                    0475 01373000
         SLR   RWORK0,@15                                          0475 01374000
*             IF IMWBSE=ON THEN     /* SECTION               @ZA02289*/ 01375000
         TM    IMWBSE(@10),B'00100000'                             0476 01376000
         BNO   @RF00476                                            0476 01377000
*               RWORK0=RWORK0-LENGTH(IXSELL);/* YES, MOVE TO END OF     01378000
*                                      LL FIELD              @ZA02289*/ 01379000
         BCTR  RWORK0,0                                            0477 01380000
         BCTR  RWORK0,0                                            0477 01381000
*             RWORK4=RWORK0;        /* SET 'FROM'            @ZA02289*/ 01382000
@RF00476 LR    RWORK4,RWORK0                                       0478 01383000
*             RWORK2=RWORK0-IXHFLPLN;/* SET 'TO'             @ZA02289*/ 01384000
         L     @10,AMBIWA(,RAMB)                                   0479 01385000
         L     @10,ICWCHN(,@10)                                    0479 01386000
         L     @09,IMWBUFP(,@10)                                   0479 01387000
         LR    RWORK2,RWORK0                                       0479 01388000
         SLR   @15,@15                                             0479 01389000
         IC    @15,IXHFLPLN(,@09)                                  0479 01390000
         SLR   RWORK2,@15                                          0479 01391000
*             RWORK3=IXSHEP-RWORK4+ /* SET LENGTH            @ZA02289*/ 01392000
*                 LENGTH(IBFLPF)+LENGTH(IBFLPL);/* OF MOVE   @ZA02289*/ 01393000
         L     @10,IMWIXSP(,@10)                                   0480 01394000
         L     RWORK3,IXSHEP(,@10)                                 0480 01395000
         SLR   RWORK3,RWORK4                                       0480 01396000
         AL    RWORK3,@CF00155                                     0480 01397000
*             RWORK0=RWORK2;        /* SAVE POSITION         @ZA02289*/ 01398000
         LR    RWORK0,RWORK2                                       0481 01399000
*             RFY                                                  0482 01400000
*               RWORK5 RSTD;        /*                       @ZA02289*/ 01401000
*             RWORK5=RWORK3;        /* SET LENGTH            @ZA02289*/ 01402000
         LR    RWORK5,RWORK3                                       0483 01403000
*             GEN(MVCL  RWORK2,RWORK4);/* MOVE KEY LEFT      @ZA02289*/ 01404000
         MVCL  RWORK2,RWORK4                                            01405000
*             RFY                                                  0485 01406000
*               RWORK5 UNRSTD;      /*                       @ZA02289*/ 01407000
*             RWORK1=RWORK0-IXHFLPLN+/* ADDRESS POINTER@ZA02289      */ 01408000
*                 LENGTH(IBFLPF)+   /* WHICH WILL            @ZA02289*/ 01409000
*                 LENGTH(IBFLPL);   /* MOVE                  @ZA02289*/ 01410000
         L     @10,AMBIWA(,RAMB)                                   0486 01411000
         L     @10,ICWCHN(,@10)                                    0486 01412000
         L     @10,IMWBUFP(,@10)                                   0486 01413000
         LR    RWORK1,RWORK0                                       0486 01414000
         SLR   @09,@09                                             0486 01415000
         IC    @09,IXHFLPLN(,@10)                                  0486 01416000
         SLR   RWORK1,@09                                          0486 01417000
         AL    RWORK1,@CF00155                                     0486 01418000
*             RWORK3=IXHPTLS;       /* GET MASK              @ZA02289*/ 01419000
         SLR   RWORK3,RWORK3                                       0487 01420000
         IC    RWORK3,IXHPTLS(,@10)                                0487 01421000
*             GEN(EX  RWORK3,GETPTR);/* PICK UP POINTER@ZA02289      */ 01422000
         EX  RWORK3,GETPTR                                              01423000
*             GEN(EX  RWORK3,STOREPTR);/* SET POINTER        @ZA02289*/ 01424000
         EX  RWORK3,STOREPTR                                            01425000
*             IXSHEP=RWORK2-LENGTH(IBFLPL)-/* SET NEW HEP    @ZA02289*/ 01426000
*                 LENGTH(IBFLPF);   /*                       @ZA02289*/ 01427000
         L     @10,AMBIWA(,RAMB)                                   0490 01428000
         L     @10,ICWCHN(,@10)                                    0490 01429000
         L     @09,IMWIXSP(,@10)                                   0490 01430000
         LA    @15,2                                               0490 01431000
         LR    @14,RWORK2                                          0490 01432000
         SLR   @14,@15                                             0490 01433000
         ST    @14,IXSHEP(,@09)                                    0490 01434000
*             RWORK2=RWORK2+IXHFLPLN-/* POINT TO F           @ZA02289*/ 01435000
*                 LENGTH(IBFLPF)-   /* FIELD OF SPND         @ZA02289*/ 01436000
*                 LENGTH(IBFLPL);   /* RCD ENTRY TO BE CREATED     0491 01437000
*                                                            @ZA02289*/ 01438000
         L     @09,IMWBUFP(,@10)                                   0491 01439000
         LR    @14,RWORK2                                          0491 01440000
         SLR   @10,@10                                             0491 01441000
         IC    @10,IXHFLPLN(,@09)                                  0491 01442000
         ALR   @14,@10                                             0491 01443000
         SLR   @14,@15                                             0491 01444000
         LR    RWORK2,@14                                          0491 01445000
*             RWORK2->IBFLPF=AMDKEYLN;/* SET TO KEY LL       @ZA02289*/ 01446000
         L     @10,AMBDSB(,RAMB)                                   0492 01447000
         LH    @10,AMDKEYLN(,@10)                                  0492 01448000
         STC   @10,IBFLPF(,RWORK2)                                 0492 01449000
*             RWORK2->IBFLPL=ZERO;  /* CLEAR L BYTE          @ZA02289*/ 01450000
         MVI   IBFLPL(RWORK2),X'00'                                0493 01451000
*             RWORK2=IMWXPTR;       /* NEXT ENTRY POINTER VALUE    0494 01452000
*                                                            @ZA02289*/ 01453000
         L     @10,AMBIWA(,RAMB)                                   0494 01454000
         L     @10,ICWCHN(,@10)                                    0494 01455000
         L     RWORK2,IMWXPTR(,@10)                                0494 01456000
*             GEN(EX  RWORK3,SETPTR);/* REPLACE WITH NEW ENTRY     0495 01457000
*                                                            @ZA02289*/ 01458000
         EX  RWORK3,SETPTR                                              01459000
*           END;                    /*                       @ZA02289*/ 01460000
         AL    RPARM1,@CF00053                                     0496 01461000
@DE00474 L     @10,AMBIWA(,RAMB)                                   0496 01462000
         L     @10,ICWCHN(,@10)                                    0496 01463000
         L     @10,IMWIXSP(,@10)                                   0496 01464000
         SLR   @09,@09                                             0496 01465000
         IC    @09,IXSNOSR(,@10)                                   0496 01466000
         CR    RPARM1,@09                                          0496 01467000
         BNH   @DL00474                                            0496 01468000
*           RFY                                                    0497 01469000
*            (RWORK0,                                              0497 01470000
*             RWORK4) UNRSTD;       /*                       @ZA02289*/ 01471000
*         END;                      /*                       @ZA02289*/ 01472000
*     END;                          /* END OF INSERT PROCESS         */ 01473000
*   ELSE                            /*                               */ 01474000
*     DO;                           /*                               */ 01475000
         B     @RC00167                                            0500 01476000
@RF00167 DS    0H                                                  0501 01477000
*       IF RPARM1=IXWRITE THEN      /* WRITE INDEX REQUEST           */ 01478000
         C     RPARM1,@CF00067                                     0501 01479000
         BNE   @RF00501                                            0501 01480000
*         DO;                       /* YES.                          */ 01481000
*           RBUFC=IXSBUFC;          /* POINT TO BUFC                 */ 01482000
         L     @10,AMBIWA(,RAMB)                                   0503 01483000
         L     @10,ICWCHN(,@10)                                    0503 01484000
         L     @10,IMWIXSP(,@10)                                   0503 01485000
         L     RBUFC,IXSBUFC(,@10)                                 0503 01486000
*           RFY                                                    0504 01487000
*             IDABUFC BASED(RBUFC); /*                               */ 01488000
*           DO;                     /* SET UPDATED BFR               */ 01489000
*             BUFCORBA=BUFCDDDD;                                   0506 01490000
         L     @10,BUFCDDDD(,RBUFC)                                0506 01491000
         ST    @10,BUFCORBA(,RBUFC)                                0506 01492000
*             BUFCMW=ON;                                           0507 01493000
         OI    BUFCMW(RBUFC),B'10000000'                           0507 01494000
*           END;                                                   0508 01495000
*           BUFCVAL=ON;             /* MARK BUFFER VALID     @ZA02289*/ 01496000
         OI    BUFCVAL(RBUFC),B'00000100'                          0509 01497000
*I04:                                                              0510 01498000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 01499000
I04      DS    0H                                                  0511 01500000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 01501000
         L     @15,@CV01003                                        0511 01502000
         BALR  @14,@15                                             0511 01503000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01504000
         BALR @11,0                                                     01505000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01506000
         USING *,@11                                                    01507000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01508000
         L     @11,=A(@PSTART)                                          01509000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01510000
         USING @PSTART,@11                                              01511000
*           END I04;                                               0516 01512000
*           RBUFC=IXSBUFC;          /* POINT TO BUFC                 */ 01513000
         L     @10,AMBIWA(,RAMB)                                   0517 01514000
         L     @10,ICWCHN(,@10)                                    0517 01515000
         L     @10,IMWIXSP(,@10)                                   0517 01516000
         L     RBUFC,IXSBUFC(,@10)                                 0517 01517000
*           CALL IDAIVIXB;          /* INVALIDATE OTHER COPIES       */ 01518000
         L     @15,@CA01053                                        0518 01519000
         BALR  @14,@15                                             0518 01520000
*         END;                      /* END OF WRITE REQUEST          */ 01521000
*       ELSE                        /* NOT WRITE REQUEST             */ 01522000
*         DO;                       /*                               */ 01523000
         B     @RC00501                                            0520 01524000
@RF00501 DS    0H                                                  0521 01525000
*           IF RPARM1=IXHLENT THEN  /* HIGHER LEVEL INSERT           */ 01526000
         C     RPARM1,@CF00062                                     0521 01527000
         BE    @RT00521                                            0521 01528000
*             GO TO HLINSERT;       /* YES. GO TO INSERT CODE        */ 01529000
*         END;                      /*                               */ 01530000
*     END;                          /* END OF NOT SS INSERT          */ 01531000
@RC00501 DS    0H                                                  0525 01532000
*   RESPECIFY                                                      0525 01533000
*     R15 RSTD;                                                    0525 01534000
@RC00167 DS    0H                                                  0526 01535000
*   R15=ZERO;                       /* ENTRY MADE RETURN CODE        */ 01536000
         SLR   R15,R15                                             0526 01537000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB             */ 01538000
         L     @14,RPLDACB(,RRPL)                                  0527 01539000
         L     @14,ACBAMBL(,@14)                                   0527 01540000
         L     RAMB,AMBLDTA(,@14)                                  0527 01541000
*   GEN(IDARST14);                  /* RESTORE R14                   */ 01542000
         IDARST14                                                       01543000
*   RETURN;                         /* RETURN                        */ 01544000
         B     @EL00001                                            0529 01545000
*   RESPECIFY                                                      0530 01546000
*     R15 UNRSTD;                                                  0530 01547000
*                                                                  0530 01548000
*   /*****************************************************************/ 01549000
*   /*                                                               */ 01550000
*   /* ROUTINE TO INVALIDATE INDEX BUFFERS                           */ 01551000
*   /*                                                               */ 01552000
*   /*****************************************************************/ 01553000
*                                                                  0531 01554000
*IDAIVIXB:                                                         0531 01555000
*   ENTRY;                          /* INVALIDATE BUFFERS            */ 01556000
@EP00531 DS    0H                                                  0532 01557000
*   RFY                                                            0532 01558000
*    (RWORK2,                                                      0532 01559000
*     RWORK3,                                                      0532 01560000
*     R14) RSTD;                    /*                       @ZA02289*/ 01561000
*   RFY                                                            0533 01562000
*     IDABUFDR BASED(AMBBUFC);      /* LOCATE BUFC HEADER            */ 01563000
*   IF AMBLSR=ON|AMBGSR=ON THEN     /* DB/DC OPTION          @ZA02289*/ 01564000
         TM    AMBLSR(RAMB),B'01100000'                            0534 01565000
         BNZ   @RT00534                                            0534 01566000
*     RETURN;                       /* YES, RETURN           @ZA02289*/ 01567000
*   RWORK3=RBUFC->BUFCORBA;         /* PICK UP OUTPUT RBA            */ 01568000
         L     RWORK3,BUFCORBA(,RBUFC)                             0536 01569000
*   RWORK2=BUFDBUFC;                /* POINT TO FIRST INDEX BUFC   0537 01570000
*                                                            @ZA02289*/ 01571000
         L     @15,AMBBUFC(,RAMB)                                  0537 01572000
         L     RWORK2,BUFDBUFC(,@15)                               0537 01573000
*   DO UNTIL RWORK2=ZERO;           /* SCAN ALL INDEX BUFCS  @ZA02289*/ 01574000
@DL00538 DS    0H                                                  0539 01575000
*     IF RWORK2^=RBUFC&             /* SKIP INPUT BUFC               */ 01576000
*         RWORK2->BUFCDDDD=RWORK3&  /* RBAS MATCH                    */ 01577000
*         RWORK2->BUFCVAL=ON THEN   /* RBA VALID                     */ 01578000
         CLR   RWORK2,RBUFC                                        0539 01579000
         BE    @RF00539                                            0539 01580000
         CL    RWORK3,BUFCDDDD(,RWORK2)                            0539 01581000
         BNE   @RF00539                                            0539 01582000
         TM    BUFCVAL(RWORK2),B'00000100'                         0539 01583000
         BNO   @RF00539                                            0539 01584000
*       RWORK2->BUFCRRD=ON;         /* SET READ REQUIRED             */ 01585000
         OI    BUFCRRD(RWORK2),B'00100000'                         0540 01586000
*     RWORK2=RWORK2->BUFCHAIN;      /* MOVE TO NEXT BUFC     @ZA02289*/ 01587000
@RF00539 L     RWORK2,BUFCHAIN(,RWORK2)                            0541 01588000
*   END;                            /* END OF BUFC SCAN LOOP         */ 01589000
@DE00538 LTR   RWORK2,RWORK2                                       0542 01590000
         BNZ   @DL00538                                            0542 01591000
*   RETURN;                         /* RETURN TO CALLER              */ 01592000
         B     @EL00001                                            0543 01593000
*   RFY                                                            0544 01594000
*    (RWORK2,                                                      0544 01595000
*     RWORK3,                                                      0544 01596000
*     R14) UNRSTD;                  /*                       @ZA02289*/ 01597000
*                                                                  0545 01598000
*   /*****************************************************************/ 01599000
*   /*                                                               */ 01600000
*   /* IDASPACE ROUTINE FUNCTION - THIS ROUTINE WILL DETERMINE IF    */ 01601000
*   /* THERE IS ENOUGH ROOM IN AN INDEX RECORD TO INSURE THAT THE    */ 01602000
*   /* RECORD CAN BE SPLIT IN THE FUTURE. INPUT - RPARM1 = POINTER TO*/ 01603000
*   /* INDEX RECORD OUTPUT - R15 = 0 IF REQUIRED SPACE EXISTS R15 = 8*/ 01604000
*   /* IF REQUIRED SPACE DOES NOT EXIST RESTRICTIONS - THIS ROUTINE  */ 01605000
*   /* MUST NOT ALTER THE CONTENTS OF RWORK1, RPARM1, OR PLHSAVE1    */ 01606000
*   /* THRU PLHSAVE6.                                                */ 01607000
*   /*                                                               */ 01608000
*   /*****************************************************************/ 01609000
*                                                                  0545 01610000
*IDASPACE:                                                         0545 01611000
*   ENTRY;                          /* FREESPACE CHECK ENTRY         */ 01612000
@EP00545 DS    0H                                                  0546 01613000
*   RFY                                                            0546 01614000
*    (RWORK1,                                                      0546 01615000
*     RWORK2,                                                      0546 01616000
*     RWORK3,                                                      0546 01617000
*     R14) RSTD;                                                   0546 01618000
*   RFY                                                            0547 01619000
*     IDAIXH BASED(RPARM1);                                        0547 01620000
*   RBUFC=RPARM1+IXHLEO;            /* POINT TO LAST ENTRY           */ 01621000
         LH    @15,IXHLEO(,RPARM1)                                 0548 01622000
         LR    RBUFC,RPARM1                                        0548 01623000
         ALR   RBUFC,@15                                           0548 01624000
*   RWORK2=RBUFC->IBFLPL;           /* PICK UP L VALUE               */ 01625000
         SLR   RWORK2,RWORK2                                       0549 01626000
         IC    RWORK2,IBFLPL(,RBUFC)                               0549 01627000
*   RWORK2=RWORK2+LENGTH(IXSELL);   /* ADD LENGTH OF LL FIELD        */ 01628000
         AL    RWORK2,@CF00155                                     0550 01629000
*   RBUFC=IXHLEO-IXHFSO-RWORK2;     /* AMOUNT OF FREESPACE           */ 01630000
         SH    @15,IXHFSO(,RPARM1)                                 0551 01631000
         SLR   @15,RWORK2                                          0551 01632000
         LR    RBUFC,@15                                           0551 01633000
*   IF RBUFC<AMDKEYLN THEN          /* IS IT LESS THAN KEYSIZE       */ 01634000
         L     @15,AMBDSB(,RAMB)                                   0552 01635000
         CH    RBUFC,AMDKEYLN(,@15)                                0552 01636000
         BNL   @RF00552                                            0552 01637000
*     DO;                           /* YES.                          */ 01638000
*                                                                  0553 01639000
*       /*************************************************************/ 01640000
*       /*                                                           */ 01641000
*       /* MUST SCAN THE RECORD TO DETERMINE THE AMOUNT OF SPACE     */ 01642000
*       /* NEEDED IN ORDER TO INSURE THAT THE RECORD CAN BE SPLIT IN */ 01643000
*       /* THE FUTURE AT ANY ENTRY.                                  */ 01644000
*       /*                                                           */ 01645000
*       /*************************************************************/ 01646000
*                                                                  0554 01647000
*       RBUFC=IXHLL;                /* OFFSET TO END OF RECORD       */ 01648000
         LH    RBUFC,IXHLL(,RPARM1)                                0554 01649000
         N     RBUFC,@CF01078                                      0554 01650000
*       GEN(IDASVR14);              /* SAVE R14                      */ 01651000
         IDASVR14                                                       01652000
*       CALL IDAIXCHK;              /* SCAN AND CHECK ENTRIES        */ 01653000
         L     @15,@CA01049                                        0556 01654000
         BALR  @14,@15                                             0556 01655000
*       RFY                                                        0557 01656000
*         R15 RSTD;                 /* R15 HAS RETURN CODE           */ 01657000
*       GEN(IDARST14);              /* RESTORE R14                   */ 01658000
         IDARST14                                                       01659000
*       RETURN;                     /* RETURN TO CALLER              */ 01660000
         B     @EL00001                                            0559 01661000
*     END;                          /* END LESS THAN KEYSIZE         */ 01662000
*   R15=ZERO;                       /* OK RETURN CODE                */ 01663000
@RF00552 SLR   R15,R15                                             0561 01664000
*   RETURN;                         /* RETURN TO CALLER              */ 01665000
         B     @EL00001                                            0562 01666000
*   RFY                                                            0563 01667000
*    (RWORK1,                                                      0563 01668000
*     RWORK2,                                                      0563 01669000
*     RWORK3,                                                      0563 01670000
*     R14,                                                         0563 01671000
*     R15) UNRSTD;                                                 0563 01672000
*                                                                  0564 01673000
*   /*****************************************************************/ 01674000
*   /*                                                               */ 01675000
*   /* IDAIXCHK ROUTINE FUNCTION - THIS ROUTINE CHECKS THAT THERE IS */ 01676000
*   /* ROOM IN THE INDEX RECORD FOR ANY ENTRY TO BECOME THE LAST     */ 01677000
*   /* ENTRY IN THE RECORD. INPUT - RPARM1 = POINTER TO INDEX RECORD */ 01678000
*   /* RBUFC = INSERT POINT OFFSET IF THE INSERT POINT IS TO BE      */ 01679000
*   /* PROCESSED BY THE SCAN, THE FOLLOWING ADDITIONAL INPUT IS      */ 01680000
*   /* GIVEN- PLHSAVE5 = AMOUNT OF SPACE TO BE USED BY INSERT        */ 01681000
*   /* PLHSAVE6 = AMOUNT OF SPACE NEEDED FOR INSERT TO BE THE LAST   */ 01682000
*   /* ENTRY IN THE RECORD. OUTPUT - R15 = 0 IF REQUIRED SPACE EXISTS*/ 01683000
*   /* R15 = 8 IF REQUIRED SPACE DOES NOT EXIST RESTRICTIONS - THIS  */ 01684000
*   /* ROUTINE MUST NOT ALTER THE CONTENTS OF RWORK1, RPARM1, OR     */ 01685000
*   /* PLHSAVE1 THRU PLHSAVE6.                                       */ 01686000
*   /*                                                               */ 01687000
*   /*****************************************************************/ 01688000
*                                                                  0564 01689000
*IDAIXCHK:                                                         0564 01690000
*   ENTRY;                          /* CHECK SPACE ENTRY             */ 01691000
@EP00564 DS    0H                                                  0565 01692000
*   RFY                                                            0565 01693000
*    (RWORK0,                                                      0565 01694000
*     RWORK1,                                                      0565 01695000
*     RWORK2,                                                      0565 01696000
*     RWORK3,                                                      0565 01697000
*     RWORK4,                                                      0565 01698000
*     R14,                                                         0565 01699000
*     RWORK5) RSTD;                                                0565 01700000
*   RFY                                                            0566 01701000
*     IDAIXH BASED(RPARM1);                                        0566 01702000
*   RWORK2=IXHLL;                   /* OFFSET TO END OF RECORD       */ 01703000
         LH    RWORK2,IXHLL(,RPARM1)                               0567 01704000
         N     RWORK2,@CF01078                                     0567 01705000
*   RWORK3=IXHSEO;                  /* OFFSET TO 1ST SECTION         */ 01706000
         LH    RWORK3,IXHSEO(,RPARM1)                              0568 01707000
*   RWORK5=ZERO;                    /* CLEAR INSERT FLAG             */ 01708000
         SLR   RWORK5,RWORK5                                       0569 01709000
*   RFY                                                            0570 01710000
*     R15 RSTD;                     /*                               */ 01711000
*   IF IXHLV=ONE THEN               /* SEQUENCE SET                  */ 01712000
         CLI   IXHLV(RPARM1),1                                     0571 01713000
         BNE   @RF00571                                            0571 01714000
*     DO;                           /* YES. ADJUST FOR PTRS          */ 01715000
*       RWORK4=AMBLDTA;             /* LOCATE DATA AMB               */ 01716000
         L     @10,RPLDACB(,RRPL)                                  0573 01717000
         L     @10,ACBAMBL(,@10)                                   0573 01718000
         L     RWORK4,AMBLDTA(,@10)                                0573 01719000
*       R15=RWORK4->AMBDSB->AMDCIPCA;/* CI/CA                        */ 01720000
         L     @10,AMBDSB(,RWORK4)                                 0574 01721000
         LH    R15,AMDCIPCA(,@10)                                  0574 01722000
*       IF IXHPTLS>ONE THEN         /* TWO BYTE PTRS                 */ 01723000
         CLI   IXHPTLS(RPARM1),1                                   0575 01724000
         BNH   @RF00575                                            0575 01725000
*         R15=R15+R15;              /* YES. DOUBLE                   */ 01726000
         ALR   R15,R15                                             0576 01727000
*       R15=R15+LENGTH(IDAIXH);     /* ADD ON HEADER                 */ 01728000
@RF00575 AL    R15,@CF00083                                        0577 01729000
*     END;                          /* END SEQ SET                   */ 01730000
*   ELSE                            /* NOT SEQ SET                   */ 01731000
*     R15=LENGTH(IDAIXH);           /* ONLY HEADER                   */ 01732000
         B     @RC00571                                            0579 01733000
@RF00571 LA    R15,24                                              0579 01734000
*   DO WHILE RWORK2=>IXHLEO;        /* LOOP THRU ALL ENTRIES         */ 01735000
@RC00571 B     @DE00580                                            0580 01736000
@DL00580 DS    0H                                                  0581 01737000
*     RWORK4=IXHFLPLN;              /* LENGTH OF F,L,PTR             */ 01738000
         SLR   RWORK4,RWORK4                                       0581 01739000
         IC    RWORK4,IXHFLPLN(,RPARM1)                            0581 01740000
*     RWORK2=RWORK2-RWORK4;         /* BACK UP TO F BYTE             */ 01741000
         SLR   RWORK2,RWORK4                                       0582 01742000
*     IF IXHLV=ONE THEN             /* SEQUENCE SET                  */ 01743000
         CLI   IXHLV(RPARM1),1                                     0583 01744000
         BNE   @RF00583                                            0583 01745000
*       DO;                         /* YES                           */ 01746000
*         RWORK4=RWORK4-LENGTH(IBFLPF)-LENGTH(IBFLPL);/* PTR L       */ 01747000
         BCTR  RWORK4,0                                            0585 01748000
         BCTR  RWORK4,0                                            0585 01749000
*         R15=R15-RWORK4;           /* ADJUST FOR MORE FREESP        */ 01750000
         SLR   R15,RWORK4                                          0586 01751000
*       END;                        /* END SS ADJUSTMENT             */ 01752000
*     IF RWORK2=RBUFC THEN          /* INSERT POINT                  */ 01753000
@RF00583 CLR   RWORK2,RBUFC                                        0588 01754000
         BNE   @RF00588                                            0588 01755000
*       DO;                         /* YES                           */ 01756000
*         RWORK4=RWORK2-PLHSAVE6;   /* ALLOW FOR GROWTH              */ 01757000
         LR    RWORK4,RWORK2                                       0590 01758000
         SL    RWORK4,PLHSAVE6(,RPLH)                              0590 01759000
*         IF RWORK4<R15 THEN        /* ROOM AVAILABLE                */ 01760000
         CR    RWORK4,R15                                          0591 01761000
         BNL   @RF00591                                            0591 01762000
*           DO;                     /* NO                            */ 01763000
*             R15=IMWNOFIT;         /* NOT ENOUGH SPACE              */ 01764000
         LA    R15,8                                               0593 01765000
*             RETURN;               /* RETURN TO CALLER              */ 01766000
         B     @EL00001                                            0594 01767000
*           END;                    /* END NOT ENOUGH                */ 01768000
*         R15=R15+PLHSAVE6;         /* REDUCE FREESP FOR INSRT       */ 01769000
@RF00591 AL    R15,PLHSAVE6(,RPLH)                                 0596 01770000
*         RWORK5=ONE;               /* SHOW INSERT POINT             */ 01771000
         LA    RWORK5,1                                            0597 01772000
*       END;                        /* END INSERT POINT              */ 01773000
*     RWORK4=RPARM1+RWORK2;         /* SET POINTER                   */ 01774000
@RF00588 LR    RWORK4,RPARM1                                       0599 01775000
         ALR   RWORK4,RWORK2                                       0599 01776000
*     RWORK0=RWORK4->IBFLPF;        /* PICK UP F FIELD               */ 01777000
         SLR   RWORK0,RWORK0                                       0600 01778000
         IC    RWORK0,IBFLPF(,RWORK4)                              0600 01779000
*     IF RWORK0^=AMDKEYLN THEN      /* NON-LAST SPANNED RECORD     0601 01780000
*                                      SEGMENT               @ZA02289*/ 01781000
         L     @10,AMBDSB(,RAMB)                                   0601 01782000
         LH    @10,AMDKEYLN(,@10)                                  0601 01783000
         CLR   RWORK0,@10                                          0601 01784000
         BE    @RF00601                                            0601 01785000
*       DO;                         /* NO                    @ZA02289*/ 01786000
*         RWORK2=RWORK2-RWORK4->IBFLPL;/* BACK UP OVER KEY           */ 01787000
         SLR   @10,@10                                             0603 01788000
         IC    @10,IBFLPL(,RWORK4)                                 0603 01789000
         SLR   RWORK2,@10                                          0603 01790000
*         IF RWORK2=<RWORK3 THEN    /* AT SECTION BOUNDARY           */ 01791000
         CLR   RWORK2,RWORK3                                       0604 01792000
         BH    @RF00604                                            0604 01793000
*           DO;                     /* YES.                          */ 01794000
*             RWORK2=RWORK2-LENGTH(IXSELL);/* BACK OVER LL FIELD     */ 01795000
         BCTR  RWORK2,0                                            0606 01796000
         BCTR  RWORK2,0                                            0606 01797000
*             RWORK4=RPARM1+RWORK2; /* SET POINTER                   */ 01798000
         LR    RWORK4,RPARM1                                       0607 01799000
         ALR   RWORK4,RWORK2                                       0607 01800000
*             RWORK3=RWORK3-RWORK4->IXSELL;/* ADJUST TO NEXT SECT    */ 01801000
         SLR   @10,@10                                             0608 01802000
         ICM   @10,3,IXSELL(RWORK4)                                0608 01803000
         SLR   RWORK3,@10                                          0608 01804000
*           END;                    /* END SECTION BOUNDARY          */ 01805000
*         ELSE                      /* NOT SECTION                   */ 01806000
*           RWORK0=RWORK0+LENGTH(IXSELL);/* ADD LL FIELD LENGTH      */ 01807000
         B     @RC00604                                            0610 01808000
@RF00604 AL    RWORK0,@CF00155                                     0610 01809000
*         RWORK4=RWORK2-RWORK0;     /* LEFTMOST OFFSET NEEDED        */ 01810000
@RC00604 LR    RWORK4,RWORK2                                       0611 01811000
         SLR   RWORK4,RWORK0                                       0611 01812000
*         IF RWORK4<R15 THEN        /* OFFSET < FREESPACE            */ 01813000
         CR    RWORK4,R15                                          0612 01814000
         BNL   @RF00612                                            0612 01815000
*           DO;                     /* YES.                          */ 01816000
*             R15=IMWNOFIT;         /* NOT ENOUGH SPACE LEFT         */ 01817000
         LA    R15,8                                               0614 01818000
*             RETURN;               /* RETURN TO CALLER              */ 01819000
         B     @EL00001                                            0615 01820000
*           END;                    /* END NOT ENOUGH SPACE          */ 01821000
*         IF RWORK5^=ZERO THEN      /* INSERT POINT                  */ 01822000
@RF00612 LTR   RWORK5,RWORK5                                       0617 01823000
         BZ    @RF00617                                            0617 01824000
*           DO;                     /* YES                           */ 01825000
*             R15=R15-PLHSAVE6+PLHSAVE5;/* READJUST SPACE            */ 01826000
         LR    @10,R15                                             0619 01827000
         SL    @10,PLHSAVE6(,RPLH)                                 0619 01828000
         AL    @10,PLHSAVE5(,RPLH)                                 0619 01829000
         LR    R15,@10                                             0619 01830000
*             RWORK5=ZERO;          /* CLEAR FLAG                    */ 01831000
         SLR   RWORK5,RWORK5                                       0620 01832000
*           END;                    /*                               */ 01833000
*       END;                        /*                       @ZA02289*/ 01834000
@RF00617 DS    0H                                                  0623 01835000
*   END;                            /* END SCAN LOOP                 */ 01836000
@RF00601 DS    0H                                                  0623 01837000
@DE00580 LH    @10,IXHLEO(,RPARM1)                                 0623 01838000
         CLR   RWORK2,@10                                          0623 01839000
         BNL   @DL00580                                            0623 01840000
*   R15=ZERO;                       /* ENOUGH SPACE EXISTS           */ 01841000
         SLR   R15,R15                                             0624 01842000
*   RETURN;                         /* RETURN TO CALLER              */ 01843000
         B     @EL00001                                            0625 01844000
*   RFY                                                            0626 01845000
*    (RWORK0,                                                      0626 01846000
*     RWORK1,                                                      0626 01847000
*     RWORK2,                                                      0626 01848000
*     RWORK3,                                                      0626 01849000
*     RWORK4,                                                      0626 01850000
*     RWORK5,                                                      0626 01851000
*     R14,                                                         0626 01852000
*     R15) UNRSTD;                                                 0626 01853000
*                                                                  0627 01854000
*   /*****************************************************************/ 01855000
*   /*                                                               */ 01856000
*   /* COMPRS SUBROUTINE DETERMINES THE LENGTH OF AN INDEX AFTER THE */ 01857000
*   /* FRONT COMPRESSION HAS BEEN DETERMINED                         */ 01858000
*   /*                                                               */ 01859000
*   /*****************************************************************/ 01860000
*                                                                  0627 01861000
*   RESPECIFY                                                      0627 01862000
*    (RWORK1,                                                      0627 01863000
*     RWORK2,                                                      0627 01864000
*     RWORK3,                                                      0627 01865000
*     RWORK4,                                                      0627 01866000
*     R14) RSTD;                                                   0627 01867000
*COMPRS:                            /*                               */ 01868000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01869000
COMPRS   DS    0H                                                  0629 01870000
*   RPARM1=AMDKEYLN;                /* KEY LENGTH                    */ 01871000
         L     @15,AMBDSB(,RAMB)                                   0629 01872000
         LH    RPARM1,AMDKEYLN(,@15)                               0629 01873000
*   RBUFC=IMWIKEYP;                 /* POINT TO INSERT KEY           */ 01874000
         L     @15,AMBIWA(,RAMB)                                   0630 01875000
         L     @15,ICWCHN(,@15)                                    0630 01876000
         L     RBUFC,IMWIKEYP(,@15)                                0630 01877000
*   RWORK1=RPARM1;                  /* CLCL LENGTH                   */ 01878000
         LR    RWORK1,RPARM1                                       0631 01879000
*   RWORK2=IMWXKEYP;                /* POINT TO NEXT KEY             */ 01880000
         L     RWORK2,IMWXKEYP(,@15)                               0632 01881000
*   RWORK3=RPARM1;                  /* CLCL LENGTH                   */ 01882000
         LR    RWORK3,RPARM1                                       0633 01883000
*   GEN(CLCL  RBUFC,RWORK2);        /* LOCATE DIFFER POSITION        */ 01884000
         CLCL  RBUFC,RWORK2                                             01885000
*   RWORK1=RPARM1-RWORK1+ONE;       /* REQUIRED KEY LENGTH           */ 01886000
         LR    @15,RPARM1                                          0635 01887000
         SLR   @15,RWORK1                                          0635 01888000
         AL    @15,@CF00053                                        0635 01889000
         LR    RWORK1,@15                                          0635 01890000
*   IF RWORK1<IXSPEC THEN           /* REQUIRED LESS THAN F          */ 01891000
         L     @15,AMBIWA(,RAMB)                                   0636 01892000
         L     @15,ICWCHN(,@15)                                    0636 01893000
         L     @10,IMWIXSP(,@15)                                   0636 01894000
         SLR   @09,@09                                             0636 01895000
         IC    @09,IXSPEC(,@10)                                    0636 01896000
         CR    RWORK1,@09                                          0636 01897000
         BNL   @RF00636                                            0636 01898000
*     IMWIEL=ZERO;                  /* NO L BYTES NEEDED             */ 01899000
         MVI   IMWIEL(@15),X'00'                                   0637 01900000
*   ELSE                            /* NEED TO SAVE ALL BYTES        */ 01901000
*     IMWIEL=RWORK1-IXSPEC;         /* BETWEEN F AND DIFFER          */ 01902000
         B     @RC00636                                            0638 01903000
@RF00636 L     @15,AMBIWA(,RAMB)                                   0638 01904000
         L     @15,ICWCHN(,@15)                                    0638 01905000
         L     @10,IMWIXSP(,@15)                                   0638 01906000
         LR    @09,RWORK1                                          0638 01907000
         SLR   @00,@00                                             0638 01908000
         IC    @00,IXSPEC(,@10)                                    0638 01909000
         SLR   @09,@00                                             0638 01910000
         STC   @09,IMWIEL(,@15)                                    0638 01911000
*   END COMPRS;                     /*                               */ 01912000
@EL00002 DS    0H                                                  0639 01913000
@EF00002 DS    0H                                                  0639 01914000
@ER00002 BR    @14                                                 0639 01915000
*   RESPECIFY                                                      0640 01916000
*    (RWORK1,                                                      0640 01917000
*     RWORK2,                                                      0640 01918000
*     RWORK3,                                                      0640 01919000
*     RWORK4,                                                      0640 01920000
*     R14) UNRSTD;                                                 0640 01921000
*   GEN;                                                           0641 01922000
SETPTR   STCM  RWORK2,@00,@00(RWORK1)      /*                        */ 01923000
GETPTR   ICM   RWORK4,@00,@00(RWORK1)      /*                @ZA02289*/ 01924000
STOREPTR STCM  RWORK4,@00,@00(RWORK2)      /*                @ZA02289*/ 01925000
*   GEN(IDAPATCH);                                                 0642 01926000
         IDAPATCH                                                       01927000
*   END IDA019RH                                                   0643 01928000
*                                                                  0643 01929000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01930000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01931000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01932000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01933000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01934000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01935000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01936000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01937000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01938000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 01939000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 01940000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 01941000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01942000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01943000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01944000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 01945000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01946000
*                                                                  0643 01947000
*       ;                                                          0643 01948000
         B     @EL00001                                            0643 01949000
@DATA    DS    0H                                                       01950000
@SC01071 CLC   KEY(0,RWORK1),KEY(RWORK2)                                01951000
@SC01073 CLC   KEY(0,RPARM1),KEY(RWORK4)                                01952000
@SM01075 MVC   IMWKEY1(0,@08),KEY(@15)                                  01953000
@DATD    DSECT                                                          01954000
         DS    0F                                                       01955000
IDA019RH CSECT                                                          01956000
         DS    0F                                                       01957000
@CF00059 DC    F'0'                                                     01958000
@CF00053 DC    F'1'                                                     01959000
@CF00155 DC    F'2'                                                     01960000
@CF00157 DC    F'3'                                                     01961000
@CF00067 DC    F'4'                                                     01962000
@CF00062 DC    F'8'                                                     01963000
@CF00083 DC    F'24'                                                    01964000
@CF01078 DC    XL4'0000FFFF'                                            01965000
@DATD    DSECT                                                          01966000
         DS    0D                                                       01967000
IDA019RH CSECT                                                          01968000
         DS    0F                                                       01969000
@SIZDATD DC    AL1(0)                                                   01970000
         DC    AL3(@ENDDATD-@DATD)                                      01971000
@CA01053 DC    A(IDAIVIXB)                                              01972000
@CA01049 DC    A(IDAIXCHK)                                              01973000
@CV01003 DC    V(IDAWRBFR)                                              01974000
@CV01004 DC    V(IDA019RC)                                              01975000
         DS    0D                                                       01976000
HWORD4   DC    H'4'                                                     01977000
@DATD    DSECT                                                          01978000
*                                                          /*@X04SVLC*/ 01979000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01980000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01981000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01982000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01983000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01984000
RDFLEN   EQU   3                        LENGTH OF RDF                   01985000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01986000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01987000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01988000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01989000
@DATD    DSECT                                                          01990000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01991000
@ENDDATD EQU   *                                                        01992000
IDA019RH CSECT                                                          01993000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01994000
@01      EQU   01                                                       01995000
@02      EQU   02                                                       01996000
@03      EQU   03                                                       01997000
@04      EQU   04                                                       01998000
@05      EQU   05                                                       01999000
@06      EQU   06                                                       02000000
@07      EQU   07                                                       02001000
@08      EQU   08                                                       02002000
@09      EQU   09                                                       02003000
@10      EQU   10                                                       02004000
@11      EQU   11                                                       02005000
@12      EQU   12                                                       02006000
@13      EQU   13                                                       02007000
@14      EQU   14                                                       02008000
@15      EQU   15                                                       02009000
RWORK0   EQU   @00                                                      02010000
RRPL     EQU   @01                                                      02011000
RPLH     EQU   @02                                                      02012000
RAMB     EQU   @03                                                      02013000
RBUFC    EQU   @04                                                      02014000
RWORK1   EQU   @05                                                      02015000
RWORK2   EQU   @06                                                      02016000
RWORK3   EQU   @07                                                      02017000
RWORK4   EQU   @08                                                      02018000
RWORK5   EQU   @09                                                      02019000
RPARM1   EQU   @12                                                      02020000
R14      EQU   @14                                                      02021000
R15      EQU   @15                                                      02022000
R1       EQU   @01                                                      02023000
R10      EQU   @10                                                      02024000
R11      EQU   @11                                                      02025000
R13      EQU   @13                                                      02026000
IFGRPL   EQU   0                                                        02027000
RPLCOMN  EQU   IFGRPL                                                   02028000
RPLIDWD  EQU   RPLCOMN                                                  02029000
RPLLEN   EQU   RPLIDWD+3                                                02030000
RPLECB   EQU   RPLCOMN+8                                                02031000
RPLFDBWD EQU   RPLCOMN+12                                               02032000
RPLFDBK  EQU   RPLFDBWD+1                                               02033000
RPLRTNCD EQU   RPLFDBK                                                  02034000
RPLCNDCD EQU   RPLFDBK+1                                                02035000
RPLCMPON EQU   RPLCNDCD                                                 02036000
RPLFDB2  EQU   RPLCMPON                                                 02037000
RPLERRCD EQU   RPLCNDCD+1                                               02038000
RPLFDB3  EQU   RPLERRCD                                                 02039000
RPLKEYLE EQU   RPLCOMN+16                                               02040000
RPLDACB  EQU   RPLCOMN+24                                               02041000
RPLAREA  EQU   RPLCOMN+32                                               02042000
RPLARG   EQU   RPLCOMN+36                                               02043000
RPLOPTCD EQU   RPLCOMN+40                                               02044000
RPLOPT1  EQU   RPLOPTCD                                                 02045000
RPLSEQ   EQU   RPLOPT1                                                  02046000
RPLECBSW EQU   RPLOPT1                                                  02047000
RPLOPT2  EQU   RPLOPTCD+1                                               02048000
RPLADR   EQU   RPLOPT2                                                  02049000
RPLUPD   EQU   RPLOPT2                                                  02050000
RPLOPT3  EQU   RPLOPTCD+2                                               02051000
RPLNXTRP EQU   RPLCOMN+44                                               02052000
RPLOPTC2 EQU   RPLCOMN+56                                               02053000
RPLOPT5  EQU   RPLOPTC2                                                 02054000
RPLWRTYP EQU   RPLOPT5                                                  02055000
RPLOPT6  EQU   RPLOPTC2+1                                               02056000
RPLUNTYP EQU   RPLOPT6                                                  02057000
RPLOPT7  EQU   RPLOPTC2+2                                               02058000
RPLCNOPT EQU   RPLOPT7                                                  02059000
RPLOPT8  EQU   RPLOPTC2+3                                               02060000
RPLRBAR  EQU   RPLCOMN+60                                               02061000
RPLAIXID EQU   RPLRBAR+2                                                02062000
RPLEXTDS EQU   RPLCOMN+68                                               02063000
RPLEXTD1 EQU   RPLEXTDS                                                 02064000
IFGACB   EQU   0                                                        02065000
ACBCOMN  EQU   IFGACB                                                   02066000
ACBLENG  EQU   ACBCOMN+2                                                02067000
ACBLENG2 EQU   ACBLENG                                                  02068000
ACBAMBL  EQU   ACBCOMN+4                                                02069000
ACBJWA   EQU   ACBAMBL                                                  02070000
ACBMACRF EQU   ACBCOMN+12                                               02071000
ACBMACR1 EQU   ACBMACRF                                                 02072000
ACBADR   EQU   ACBMACR1                                                 02073000
ACBCNV   EQU   ACBMACR1                                                 02074000
ACBMACR2 EQU   ACBMACRF+1                                               02075000
ACBBUFPL EQU   ACBCOMN+20                                               02076000
ACBMACR3 EQU   ACBBUFPL                                                 02077000
ACBRECFM EQU   ACBCOMN+24                                               02078000
ACBCCTYP EQU   ACBCOMN+25                                               02079000
ACBOPT   EQU   ACBCOMN+26                                               02080000
ACBDSORG EQU   ACBOPT                                                   02081000
ACBCROPS EQU   ACBDSORG                                                 02082000
ACBEXLST EQU   ACBCOMN+36                                               02083000
ACBDDNM  EQU   ACBCOMN+40                                               02084000
ACBAMETH EQU   ACBDDNM+3                                                02085000
ACBOFLGS EQU   ACBCOMN+48                                               02086000
ACBEXFG  EQU   ACBOFLGS                                                 02087000
ACBIOSFG EQU   ACBOFLGS                                                 02088000
ACBINFLG EQU   ACBCOMN+50                                               02089000
ACBUJFCB EQU   ACBCOMN+52                                               02090000
ACBBLKSZ EQU   ACBCOMN+60                                               02091000
IDAAMBL  EQU   0                                                        02092000
AMBLEOV  EQU   IDAAMBL+12                                               02093000
AMBLEFLG EQU   AMBLEOV                                                  02094000
AMBLDDNM EQU   IDAAMBL+16                                               02095000
AMBLIDF  EQU   AMBLDDNM                                                 02096000
AMBLQ    EQU   AMBLIDF+7                                                02097000
AMBLVC   EQU   IDAAMBL+28                                               02098000
AMBLTYPE EQU   IDAAMBL+30                                               02099000
AMBLSHAR EQU   IDAAMBL+33                                               02100000
AMBLFLG1 EQU   IDAAMBL+35                                               02101000
AMBLFLG2 EQU   IDAAMBL+36                                               02102000
AMBLDTA  EQU   IDAAMBL+52                                               02103000
AMBLIX   EQU   IDAAMBL+56                                               02104000
IDAAMB   EQU   0                                                        02105000
AMBBUFC  EQU   IDAAMB+8                                                 02106000
AMBDSB   EQU   IDAAMB+20                                                02107000
AMBEOVR  EQU   IDAAMB+24                                                02108000
AMBFLG0  EQU   AMBEOVR                                                  02109000
AMBFLG1  EQU   IDAAMB+25                                                02110000
AMBDSORG EQU   IDAAMB+26                                                02111000
AMBIOBAD EQU   IDAAMB+28                                                02112000
AMBINFL  EQU   IDAAMB+42                                                02113000
AMBDEBPT EQU   IDAAMB+44                                                02114000
AMBOFLGS EQU   IDAAMB+48                                                02115000
AMBFLG2  EQU   IDAAMB+49                                                02116000
AMBEOVPT EQU   IDAAMB+56                                                02117000
AMBIWA   EQU   IDAAMB+64                                                02118000
AMBCSWD1 EQU   IDAAMB+84                                                02119000
AMBAFLG  EQU   AMBCSWD1                                                 02120000
AMBLSR   EQU   AMBAFLG                                                  02121000
AMBGSR   EQU   AMBAFLG                                                  02122000
AMBSIS   EQU   AMBAFLG                                                  02123000
IDAPLHDR EQU   0                                                        02124000
IDAPLH   EQU   0                                                        02125000
PLHFLG1  EQU   IDAPLH+2                                                 02126000
PLHFLG2  EQU   IDAPLH+3                                                 02127000
PLHADDTE EQU   PLHFLG2                                                  02128000
PLHEFLGS EQU   IDAPLH+4                                                 02129000
PLHFLG3  EQU   IDAPLH+6                                                 02130000
PLHAFLGS EQU   IDAPLH+7                                                 02131000
PLHCRBA  EQU   IDAPLH+28                                                02132000
PLHJORBA EQU   PLHCRBA                                                  02133000
PLHJCODE EQU   IDAPLH+40                                                02134000
PLHDBUFC EQU   IDAPLH+52                                                02135000
PLHRECP  EQU   IDAPLH+60                                                02136000
PLHFSP   EQU   IDAPLH+64                                                02137000
PLHDIOB  EQU   IDAPLH+76                                                02138000
PLHSAVE1 EQU   IDAPLH+84                                                02139000
PLHSAVE2 EQU   IDAPLH+88                                                02140000
PLHSAVE3 EQU   IDAPLH+92                                                02141000
PLHSAVE5 EQU   IDAPLH+100                                               02142000
PLHSAVE6 EQU   IDAPLH+104                                               02143000
PLHRETO  EQU   IDAPLH+116                                               02144000
PLHRET1  EQU   IDAPLH+120                                               02145000
PLHEOVPT EQU   IDAPLH+180                                               02146000
PLHIBUFC EQU   IDAPLH+188                                               02147000
PLHIXSPL EQU   IDAPLH+200                                               02148000
PLHSSRBA EQU   PLHIXSPL                                                 02149000
PLHWAX   EQU   IDAPLH+232                                               02150000
PLHKEYPT EQU   IDAPLH+248                                               02151000
PLHEND   EQU   IDAPLH+280                                               02152000
IDAAMDSB EQU   0                                                        02153000
AMDATTR  EQU   IDAAMDSB+1                                               02154000
AMDNEST  EQU   IDAAMDSB+4                                               02155000
AMDRKP   EQU   IDAAMDSB+6                                               02156000
AMDKEYLN EQU   IDAAMDSB+8                                               02157000
AMDCIPCA EQU   IDAAMDSB+12                                              02158000
AMDCINV  EQU   IDAAMDSB+20                                              02159000
AMDHLRBA EQU   IDAAMDSB+28                                              02160000
AMDSSRBA EQU   IDAAMDSB+32                                              02161000
AMDATTR3 EQU   IDAAMDSB+40                                              02162000
AMDSTAT  EQU   IDAAMDSB+48                                              02163000
IDADIWA  EQU   0                                                        02164000
DIWFLG1  EQU   IDADIWA+4                                                02165000
DIWFLG2  EQU   IDADIWA+5                                                02166000
DIWBUFC  EQU   IDADIWA+20                                               02167000
DIWSAVE  EQU   IDADIWA+28                                               02168000
IDAICWA  EQU   0                                                        02169000
ICWFLG1  EQU   IDAICWA+1                                                02170000
ICWCHN   EQU   IDAICWA+4                                                02171000
IDAIMWA  EQU   0                                                        02172000
IMWFLAGS EQU   IDAIMWA+1                                                02173000
IMWBSE   EQU   IMWFLAGS                                                 02174000
IMWIXSP  EQU   IDAIMWA+4                                                02175000
IMWISWKA EQU   IDAIMWA+8                                                02176000
IMWXKEYP EQU   IDAIMWA+40                                               02177000
IMWIKEYP EQU   IDAIMWA+44                                               02178000
IMWXPTR  EQU   IDAIMWA+48                                               02179000
IMWIPTR  EQU   IDAIMWA+52                                               02180000
IMWLBUFC EQU   IDAIMWA+56                                               02181000
IMWBUFP  EQU   IDAIMWA+60                                               02182000
IMWFGAIN EQU   IDAIMWA+64                                               02183000
IMWIEL   EQU   IDAIMWA+65                                               02184000
IMWKEY1  EQU   IDAIMWA+76                                               02185000
IDABUFDR EQU   0                                                        02186000
BUFDRCIX EQU   IDABUFDR+9                                               02187000
BUFDRFLG EQU   IDABUFDR+11                                              02188000
BUFDBUFC EQU   IDABUFDR+12                                              02189000
IDABUFC  EQU   0                                                        02190000
BUFCAVL  EQU   IDABUFC                                                  02191000
BUFCFLG1 EQU   IDABUFC+1                                                02192000
BUFCVAL  EQU   BUFCFLG1                                                 02193000
BUFCIOFL EQU   IDABUFC+2                                                02194000
BUFCMW   EQU   BUFCIOFL                                                 02195000
BUFCRRD  EQU   BUFCIOFL                                                 02196000
BUFCFLG2 EQU   IDABUFC+3                                                02197000
BUFCPLH  EQU   IDABUFC+4                                                02198000
BUFCDDDD EQU   IDABUFC+8                                                02199000
BUFCORBA EQU   IDABUFC+12                                               02200000
BUFCBAD  EQU   IDABUFC+20                                               02201000
BUFCINV  EQU   IDABUFC+28                                               02202000
BUFCHAIN EQU   IDABUFC+48                                               02203000
IDAIXSPL EQU   0                                                        02204000
IXSBUFC  EQU   IDAIXSPL+4                                               02205000
IXSNOSR  EQU   IDAIXSPL+16                                              02206000
IXSBFLG  EQU   IDAIXSPL+17                                              02207000
IXSPEC   EQU   IDAIXSPL+19                                              02208000
IXSHEP   EQU   IDAIXSPL+20                                              02209000
IXSSEP   EQU   IDAIXSPL+24                                              02210000
IXSLEP   EQU   IDAIXSPL+28                                              02211000
IDACIDF  EQU   0                                                        02212000
CIDFOSET EQU   IDACIDF                                                  02213000
CIDFLL   EQU   IDACIDF+2                                                02214000
IDAIXH   EQU   0                                                        02215000
IXHLL    EQU   IDAIXH                                                   02216000
IXHFLPLN EQU   IDAIXH+2                                                 02217000
IXHPTLS  EQU   IDAIXH+3                                                 02218000
IXHBRBA  EQU   IDAIXH+4                                                 02219000
IXHLV    EQU   IDAIXH+16                                                02220000
IXHFSO   EQU   IDAIXH+18                                                02221000
IXHLEO   EQU   IDAIXH+20                                                02222000
IXHSEO   EQU   IDAIXH+22                                                02223000
IDAIBFLP EQU   0                                                        02224000
IBFLPF   EQU   IDAIBFLP                                                 02225000
IBFLPL   EQU   IDAIBFLP+1                                               02226000
IBFLP3   EQU   IDAIBFLP+2                                               02227000
IBFLP2   EQU   IBFLP3                                                   02228000
IDASELL  EQU   0                                                        02229000
IXSELL   EQU   IDASELL                                                  02230000
IDAIXK   EQU   0                                                        02231000
IDARDF   EQU   0                                                        02232000
RDFRBYTE EQU   IDARDF                                                   02233000
RDFSEG   EQU   RDFRBYTE                                                 02234000
RDFREPL  EQU   RDFRBYTE                                                 02235000
RDFLL    EQU   IDARDF+1                                                 02236000
IDADATA  EQU   0                                                        02237000
IDAKEY   EQU   0                                                        02238000
KEY      EQU   IDAKEY                                                   02239000
ICWKEY2  EQU   0                                                        02240000
ICWKEY3  EQU   0                                                        02241000
PLHKEY   EQU   0                                                        02242000
PLHPDL   EQU   0                                                        02243000
PLHPDLE  EQU   0                                                        02244000
PLHRRN   EQU   0                                                        02245000
PLHEXTEN EQU   PLHEND                                                   02246000
PLHBMWRK EQU   PLHEXTEN+5                                               02247000
BUFCRSC1 EQU   BUFCAVL                                                  02248000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02249000
PLHBMSV5 EQU   PLHEXTEN+24                                              02250000
PLHBMSV4 EQU   PLHEXTEN+20                                              02251000
PLHBMSV3 EQU   PLHEXTEN+16                                              02252000
PLHBMSV2 EQU   PLHEXTEN+12                                              02253000
PLHBMSV1 EQU   PLHEXTEN+8                                               02254000
PLHRDCNT EQU   PLHEXTEN+6                                               02255000
PLHBMSOV EQU   PLHBMWRK                                                 02256000
PLHBEUC  EQU   PLHBMWRK                                                 02257000
PLHBMRDF EQU   PLHBMWRK                                                 02258000
@NM00040 EQU   PLHEXTEN+4                                               02259000
PLHRESR1 EQU   PLHEXTEN                                                 02260000
AMDATA   EQU   IDADATA                                                  02261000
RDFEMPTY EQU   RDFRBYTE                                                 02262000
RDF1ST   EQU   RDFSEG                                                   02263000
RDFNOT1  EQU   RDFSEG                                                   02264000
RDFCTNU  EQU   RDFRBYTE                                                 02265000
RDFTYPE  EQU   RDFRBYTE                                                 02266000
IXKEY    EQU   IDAIXK                                                   02267000
IBFLP1   EQU   IBFLP2                                                   02268000
IXHFLGS  EQU   IDAIXH+17                                                02269000
IXHXX    EQU   IDAIXH+12                                                02270000
IXHHP    EQU   IDAIXH+8                                                 02271000
@NM00060 EQU   CIDFLL                                                   02272000
CIDFBUSY EQU   CIDFLL                                                   02273000
IXSEKON  EQU   IDAIXSPL+18                                              02274000
@NM00059 EQU   IXSBFLG                                                  02275000
IXSLELV  EQU   IXSBFLG                                                  02276000
IXSSSRH  EQU   IXSBFLG                                                  02277000
IXSKLEN  EQU   IDAIXSPL+14                                              02278000
IXSILN   EQU   IDAIXSPL+13                                              02279000
IXSTLN   EQU   IDAIXSPL+12                                              02280000
IXSARG   EQU   IDAIXSPL+8                                               02281000
IXSSTRBA EQU   IDAIXSPL                                                 02282000
BUFCEND  EQU   IDABUFC+64                                               02283000
BUFCUCDN EQU   IDABUFC+60                                               02284000
BUFCUCUP EQU   IDABUFC+56                                               02285000
BUFCMDBT EQU   IDABUFC+52                                               02286000
BUFXORBA EQU   IDABUFC+44                                               02287000
BUFXIRBA EQU   IDABUFC+40                                               02288000
BUFCNXT2 EQU   IDABUFC+37                                               02289000
BUFCIDXL EQU   IDABUFC+36                                               02290000
BUFCDSPC EQU   IDABUFC+32                                               02291000
BUFCWLEN EQU   BUFCINV                                                  02292000
BUFCNXT1 EQU   IDABUFC+24                                               02293000
BUFCCPA  EQU   IDABUFC+16                                               02294000
BUFCAMB  EQU   BUFCPLH                                                  02295000
@NM00058 EQU   BUFCFLG2                                                 02296000
BUFCEOD  EQU   BUFCFLG2                                                 02297000
BUFCBSYW EQU   BUFCFLG2                                                 02298000
BUFCBSYR EQU   BUFCFLG2                                                 02299000
BUFCNLAS EQU   BUFCFLG2                                                 02300000
BUFCXDDR EQU   BUFCFLG2                                                 02301000
BUFCFIX  EQU   BUFCIOFL                                                 02302000
BUFCPFCP EQU   BUFCIOFL                                                 02303000
BUFCXEDB EQU   BUFCIOFL                                                 02304000
BUFCWC   EQU   BUFCIOFL                                                 02305000
BUFCREAL EQU   BUFCIOFL                                                 02306000
BUFCFMT  EQU   BUFCIOFL                                                 02307000
BUFCEPT  EQU   BUFCFLG1                                                 02308000
BUFCEXC  EQU   BUFCFLG1                                                 02309000
BUFCER2  EQU   BUFCFLG1                                                 02310000
BUFCER1  EQU   BUFCFLG1                                                 02311000
BUFCINS  EQU   BUFCFLG1                                                 02312000
BUFCSEG  EQU   BUFCFLG1                                                 02313000
BUFCUPG  EQU   BUFCFLG1                                                 02314000
BUFCUCNT EQU   BUFCAVL                                                  02315000
@NM00057 EQU   IDABUFDR+16                                              02316000
@NM00056 EQU   BUFDRFLG                                                 02317000
BUFDRAVL EQU   BUFDRFLG                                                 02318000
BUFDRREL EQU   BUFDRFLG                                                 02319000
BUFDRTSB EQU   IDABUFDR+10                                              02320000
BUFDRMAX EQU   BUFDRCIX                                                 02321000
BUFDRPFN EQU   IDABUFDR+8                                               02322000
BUFDRPFB EQU   IDABUFDR+4                                               02323000
BUFDRLEN EQU   IDABUFDR+2                                               02324000
BUFDRNO  EQU   IDABUFDR+1                                               02325000
BUFDRID  EQU   IDABUFDR                                                 02326000
@NM00055 EQU   IDAIMWA+72                                               02327000
IMWNSOFF EQU   IDAIMWA+70                                               02328000
IMWCIMVN EQU   IDAIMWA+68                                               02329000
@NM00054 EQU   IDAIMWA+67                                               02330000
IMWSVIEL EQU   IDAIMWA+66                                               02331000
IMWLEN   EQU   IDAIMWA+2                                                02332000
IMWRIPL  EQU   IMWFLAGS                                                 02333000
IMWNEWHL EQU   IMWFLAGS                                                 02334000
IMWID    EQU   IDAIMWA                                                  02335000
ICWKEY1  EQU   IDAICWA+60                                               02336000
ICWCERP  EQU   IDAICWA+59                                               02337000
ICWCEL   EQU   IDAICWA+58                                               02338000
ICWCEF   EQU   IDAICWA+57                                               02339000
ICWCER   EQU   IDAICWA+56                                               02340000
ICWPTL   EQU   IDAICWA+55                                               02341000
ICWREQ   EQU   IDAICWA+54                                               02342000
ICWCRSEG EQU   IDAICWA+52                                               02343000
ICWNOSEG EQU   IDAICWA+50                                               02344000
ICWNEST  EQU   IDAICWA+48                                               02345000
ICWKEY3L EQU   IDAICWA+46                                               02346000
ICWKEY2L EQU   IDAICWA+44                                               02347000
ICWKEY1L EQU   IDAICWA+42                                               02348000
ICWLN    EQU   IDAICWA+40                                               02349000
ICWARDBP EQU   IDAICWA+36                                               02350000
ICWTPTR  EQU   IDAICWA+32                                               02351000
ICWTBASE EQU   IDAICWA+28                                               02352000
ICWADD   EQU   IDAICWA+24                                               02353000
ICWSCNT  EQU   IDAICWA+22                                               02354000
ICWPSEO  EQU   IDAICWA+20                                               02355000
ICWPRBA  EQU   IDAICWA+16                                               02356000
ICWCRBA  EQU   IDAICWA+12                                               02357000
ICWBUFC  EQU   IDAICWA+8                                                02358000
ICWLEN   EQU   IDAICWA+2                                                02359000
ICWENDRQ EQU   ICWFLG1                                                  02360000
ICWSPLIT EQU   ICWFLG1                                                  02361000
ICWKRDS  EQU   ICWFLG1                                                  02362000
ICWVNE   EQU   ICWFLG1                                                  02363000
ICWVSE   EQU   ICWFLG1                                                  02364000
ICWRBAOK EQU   ICWFLG1                                                  02365000
ICWWAGM  EQU   ICWFLG1                                                  02366000
ICWWNF   EQU   ICWFLG1                                                  02367000
ICWID    EQU   IDAICWA                                                  02368000
@NM00053 EQU   IDADIWA+92                                               02369000
@NM00052 EQU   IDADIWA+88                                               02370000
@NM00051 EQU   IDADIWA+84                                               02371000
@NM00050 EQU   IDADIWA+80                                               02372000
@NM00049 EQU   IDADIWA+76                                               02373000
@NM00048 EQU   IDADIWA+72                                               02374000
@NM00047 EQU   IDADIWA+68                                               02375000
@NM00046 EQU   IDADIWA+64                                               02376000
@NM00045 EQU   IDADIWA+60                                               02377000
@NM00044 EQU   IDADIWA+56                                               02378000
DIWINRBA EQU   IDADIWA+52                                               02379000
DIWRKCT  EQU   IDADIWA+48                                               02380000
DIWSAVE5 EQU   DIWSAVE+16                                               02381000
DIWSAVE4 EQU   DIWSAVE+12                                               02382000
DIWSAVE3 EQU   DIWSAVE+8                                                02383000
DIWSAVE2 EQU   DIWSAVE+4                                                02384000
DIWSAVE1 EQU   DIWSAVE                                                  02385000
DIWSPLTP EQU   IDADIWA+24                                               02386000
DIWPLH   EQU   IDADIWA+16                                               02387000
DIWHRBA  EQU   IDADIWA+12                                               02388000
DIWLRBA  EQU   IDADIWA+8                                                02389000
@NM00043 EQU   IDADIWA+6                                                02390000
DIWFSPF  EQU   DIWFLG2                                                  02391000
DIW1ST   EQU   DIWFLG1                                                  02392000
DIWNOT1  EQU   DIWFLG1                                                  02393000
DIWSHIFT EQU   DIWFLG1                                                  02394000
DIWGSPC  EQU   DIWFLG1                                                  02395000
DIWEOKR  EQU   DIWFLG1                                                  02396000
DIWPFERR EQU   DIWFLG1                                                  02397000
DIWCISPL EQU   DIWFLG1                                                  02398000
DIWCAS   EQU   DIWFLG1                                                  02399000
DIWLEN   EQU   IDADIWA+2                                                02400000
DIWATV   EQU   IDADIWA+1                                                02401000
DIWID    EQU   IDADIWA                                                  02402000
AMDEXCP  EQU   AMDSTAT+44                                               02403000
AMDNCAS  EQU   AMDSTAT+40                                               02404000
AMDNCIS  EQU   AMDSTAT+36                                               02405000
AMDASPA  EQU   AMDSTAT+32                                               02406000
AMDRETR  EQU   AMDSTAT+28                                               02407000
AMDUPR   EQU   AMDSTAT+24                                               02408000
AMDIREC  EQU   AMDSTAT+20                                               02409000
AMDDELR  EQU   AMDSTAT+16                                               02410000
AMDNLR   EQU   AMDSTAT+12                                               02411000
AMDNEXT  EQU   AMDSTAT+10                                               02412000
AMDNIL   EQU   AMDSTAT+8                                                02413000
AMDSTSP  EQU   AMDSTAT                                                  02414000
@NM00042 EQU   IDAAMDSB+41                                              02415000
@NM00041 EQU   AMDATTR3                                                 02416000
AMDLM    EQU   AMDATTR3                                                 02417000
AMDWAIT  EQU   AMDATTR3                                                 02418000
AMDBIND  EQU   AMDATTR3                                                 02419000
AMDFAULT EQU   AMDATTR3                                                 02420000
AMDUNQ   EQU   AMDATTR3                                                 02421000
AMDPARDB EQU   IDAAMDSB+36                                              02422000
AMDMAXRR EQU   AMDSSRBA                                                 02423000
AMDNSLOT EQU   AMDHLRBA                                                 02424000
AMDLRECL EQU   IDAAMDSB+24                                              02425000
AMDFSCI  EQU   IDAAMDSB+16                                              02426000
AMDFSCA  EQU   IDAAMDSB+14                                              02427000
AMDPCTCI EQU   IDAAMDSB+11                                              02428000
AMDPCTCA EQU   IDAAMDSB+10                                              02429000
AMDAXRKP EQU   AMDNEST                                                  02430000
AMDLEN   EQU   IDAAMDSB+2                                               02431000
AMDSPAN  EQU   AMDATTR                                                  02432000
AMDRRDS  EQU   AMDATTR                                                  02433000
AMDRANGE EQU   AMDATTR                                                  02434000
AMDORDER EQU   AMDATTR                                                  02435000
AMDREPL  EQU   AMDATTR                                                  02436000
AMDSDT   EQU   AMDATTR                                                  02437000
AMDWCK   EQU   AMDATTR                                                  02438000
AMDDST   EQU   AMDATTR                                                  02439000
AMDSBID  EQU   IDAAMDSB                                                 02440000
PLHERRET EQU   IDAPLH+276                                               02441000
PLHASCB  EQU   IDAPLH+272                                               02442000
PLHECB   EQU   IDAPLH+268                                               02443000
@NM00039 EQU   IDAPLH+265                                               02444000
PLHDRMSK EQU   IDAPLH+264                                               02445000
PLHR13   EQU   IDAPLH+260                                               02446000
PLHPARM1 EQU   IDAPLH+256                                               02447000
PLHDRRSC EQU   IDAPLH+252                                               02448000
PLHSLRBA EQU   IDAPLH+244                                               02449000
PLHSRCSG EQU   IDAPLH+242                                               02450000
PLHNOSEG EQU   IDAPLH+240                                               02451000
PLHLLOR  EQU   IDAPLH+236                                               02452000
PLHXPLH  EQU   PLHWAX                                                   02453000
@NM00038 EQU   PLHIXSPL+8                                               02454000
PLHIXBFC EQU   PLHIXSPL+4                                               02455000
PLHHIREC EQU   PLHSSRBA                                                 02456000
PLHISPLP EQU   IDAPLH+196                                               02457000
PLHRBUFC EQU   IDAPLH+192                                               02458000
PLHNRBA  EQU   IDAPLH+184                                               02459000
PLHDDDD  EQU   PLHEOVPT                                                 02460000
PLHAR14  EQU   IDAPLH+176                                               02461000
@NM00037 EQU   IDAPLH+172                                               02462000
@NM00036 EQU   IDAPLH+168                                               02463000
PLHASAVE EQU   IDAPLH+164                                               02464000
PLHRETOS EQU   IDAPLH+118                                               02465000
PLHCHAIN EQU   IDAPLH+112                                               02466000
PLHAMB   EQU   IDAPLH+108                                               02467000
PLHSAVE4 EQU   IDAPLH+96                                                02468000
PLHARET  EQU   IDAPLH+80                                                02469000
PLHIIOB  EQU   PLHDIOB                                                  02470000
PLHSRSID EQU   IDAPLH+74                                                02471000
PLHRDFC  EQU   IDAPLH+72                                                02472000
PLHRDFP  EQU   IDAPLH+68                                                02473000
PLHNBUFC EQU   IDAPLH+56                                                02474000
PLHLRECL EQU   IDAPLH+48                                                02475000
PLHARDB  EQU   IDAPLH+44                                                02476000
@NM00035 EQU   IDAPLH+43                                                02477000
PLHEOVR  EQU   IDAPLH+42                                                02478000
PLHRCODE EQU   IDAPLH+41                                                02479000
PLHUCODE EQU   PLHJCODE                                                 02480000
PLHJNRBA EQU   IDAPLH+36                                                02481000
PLHJRNLL EQU   IDAPLH+32                                                02482000
PLHUPECB EQU   PLHJORBA                                                 02483000
PLHDSIDA EQU   IDAPLH+24                                                02484000
PLHCRPL  EQU   IDAPLH+20                                                02485000
PLHMRPL  EQU   IDAPLH+16                                                02486000
PLHBFRNO EQU   IDAPLH+15                                                02487000
PLHFRCNT EQU   IDAPLH+14                                                02488000
PLHRMIN  EQU   IDAPLH+13                                                02489000
PLHDSTYP EQU   IDAPLH+12                                                02490000
PLHACB   EQU   IDAPLH+8                                                 02491000
PLHRAE   EQU   PLHAFLGS                                                 02492000
PLHRABWD EQU   PLHAFLGS                                                 02493000
PLHIOSID EQU   PLHAFLGS                                                 02494000
PLHDBDC  EQU   PLHAFLGS                                                 02495000
PLHVAMB  EQU   PLHAFLGS                                                 02496000
PLHIOSRQ EQU   PLHAFLGS                                                 02497000
PLHDRLM  EQU   PLHAFLGS                                                 02498000
PLHEOVDF EQU   PLHFLG3                                                  02499000
PLHRVRS  EQU   PLHFLG3                                                  02500000
PLHBWD   EQU   PLHFLG3                                                  02501000
PLHSLVLD EQU   PLHFLG3                                                  02502000
PLHRAHD  EQU   PLHFLG3                                                  02503000
PLHSRBSG EQU   PLHFLG3                                                  02504000
@NM00034 EQU   PLHEFLGS+1                                               02505000
PLHRSTRT EQU   PLHEFLGS+1                                               02506000
PLHDSCAN EQU   PLHEFLGS                                                 02507000
PLHINVAL EQU   PLHEFLGS                                                 02508000
PLHEODX  EQU   PLHEFLGS                                                 02509000
PLHNOADV EQU   PLHEFLGS                                                 02510000
PLHSRINV EQU   PLHEFLGS                                                 02511000
PLHSKPER EQU   PLHEFLGS                                                 02512000
PLH1ST   EQU   PLHEFLGS                                                 02513000
PLHNOSPC EQU   PLHEFLGS                                                 02514000
PLHIWAIT EQU   PLHFLG2                                                  02515000
PLHSVADV EQU   PLHFLG2                                                  02516000
PLHCIINS EQU   PLHFLG2                                                  02517000
PLHKRE   EQU   PLHFLG2                                                  02518000
PLHKEYMD EQU   PLHFLG2                                                  02519000
PLHSQINS EQU   PLHFLG2                                                  02520000
PLHUPD   EQU   PLHFLG2                                                  02521000
@NM00033 EQU   PLHFLG1                                                  02522000
PLHDRPND EQU   PLHFLG1                                                  02523000
PLHASYRQ EQU   PLHFLG1                                                  02524000
PLHRDEXC EQU   PLHFLG1                                                  02525000
PLHSSR   EQU   PLHFLG1                                                  02526000
PLHASKBF EQU   PLHFLG1                                                  02527000
PLHENDRQ EQU   PLHFLG1                                                  02528000
PLHEOVW  EQU   PLHFLG1                                                  02529000
PLHATV   EQU   IDAPLH+1                                                 02530000
PLHAVL   EQU   IDAPLH                                                   02531000
PLHIOSDQ EQU   IDAPLHDR+12                                              02532000
PLHDRCUR EQU   IDAPLHDR+10                                              02533000
PLHDRMAX EQU   IDAPLHDR+8                                               02534000
PLHDRREQ EQU   IDAPLHDR+4                                               02535000
PLHELTH  EQU   IDAPLHDR+2                                               02536000
PLHCNT   EQU   IDAPLHDR+1                                               02537000
PLHID    EQU   IDAPLHDR                                                 02538000
AMBTRACE EQU   IDAAMB+120                                               02539000
AMBVIOT  EQU   IDAAMB+116                                               02540000
AMBSZCP  EQU   IDAAMB+114                                               02541000
AMBSZFW  EQU   IDAAMB+112                                               02542000
AMBSZWR  EQU   IDAAMB+110                                               02543000
AMBSZRD  EQU   IDAAMB+108                                               02544000
AMBEXEX  EQU   IDAAMB+100                                               02545000
AMBWSHD  EQU   IDAAMB+96                                                02546000
AMBCPA   EQU   IDAAMB+92                                                02547000
AMBBM2SH EQU   IDAAMB+88                                                02548000
AMBRDCNT EQU   AMBCSWD1+2                                               02549000
@NM00032 EQU   AMBCSWD1+1                                               02550000
@NM00031 EQU   AMBAFLG                                                  02551000
AMBCFX   EQU   AMBAFLG                                                  02552000
AMBDFR   EQU   AMBAFLG                                                  02553000
AMBICI   EQU   AMBAFLG                                                  02554000
@NM00030 EQU   AMBAFLG                                                  02555000
AMBUPLH  EQU   IDAAMB+80                                                02556000
AMBPAMBL EQU   IDAAMB+76                                                02557000
AMBPIXP  EQU   IDAAMB+72                                                02558000
@NM00029 EQU   IDAAMB+68                                                02559000
AMBWKA   EQU   IDAAMB+60                                                02560000
AMBAMBXN EQU   AMBEOVPT                                                 02561000
AMBEDB   EQU   IDAAMB+52                                                02562000
AMBRPT   EQU   IDAAMB+50                                                02563000
AMBPUG   EQU   AMBFLG2                                                  02564000
AMBBUSY  EQU   AMBOFLGS                                                 02565000
AMBEXFG  EQU   AMBOFLGS                                                 02566000
@NM00028 EQU   AMBOFLGS                                                 02567000
AMBOPEN  EQU   AMBOFLGS                                                 02568000
@NM00027 EQU   AMBOFLGS                                                 02569000
AMBDEBAD EQU   AMBDEBPT+1                                               02570000
AMBIFLGS EQU   AMBDEBPT                                                 02571000
AMBAMETH EQU   IDAAMB+43                                                02572000
AMBUPX   EQU   AMBINFL                                                  02573000
AMBUCRA  EQU   AMBINFL                                                  02574000
AMBSCRA  EQU   AMBINFL                                                  02575000
AMBCAT   EQU   AMBINFL                                                  02576000
@NM00026 EQU   AMBINFL                                                  02577000
@NM00025 EQU   AMBINFL                                                  02578000
AMBTIOT  EQU   IDAAMB+40                                                02579000
@NM00024 EQU   IDAAMB+38                                                02580000
AMBDDSN  EQU   IDAAMB+35                                                02581000
AMBCDSN  EQU   IDAAMB+32                                                02582000
AMBIOMB  EQU   AMBIOBAD                                                 02583000
@NM00023 EQU   AMBDSORG+1                                               02584000
AMBDORGA EQU   AMBDSORG+1                                               02585000
@NM00022 EQU   AMBDSORG                                                 02586000
AMBINBUF EQU   AMBFLG1                                                  02587000
AMBJRN   EQU   AMBFLG1                                                  02588000
AMBUBF   EQU   AMBFLG1                                                  02589000
AMBSPEED EQU   AMBFLG1                                                  02590000
AMBPCAT  EQU   AMBFLG1                                                  02591000
AMBMCAT  EQU   AMBFLG1                                                  02592000
AMBTYPE  EQU   AMBFLG1                                                  02593000
AMBCREAT EQU   AMBFLG1                                                  02594000
@NM00021 EQU   AMBFLG0                                                  02595000
AMBPSDS  EQU   AMBFLG0                                                  02596000
AMBCACB  EQU   IDAAMB+16                                                02597000
AMBPH    EQU   IDAAMB+12                                                02598000
AMBLINK  EQU   IDAAMB+4                                                 02599000
AMBLEN   EQU   IDAAMB+2                                                 02600000
AMBRSC   EQU   IDAAMB+1                                                 02601000
AMBID    EQU   IDAAMB                                                   02602000
AMBLCMB  EQU   IDAAMBL+64                                               02603000
AMBLBIB  EQU   IDAAMBL+60                                               02604000
AMBLMIDS EQU   IDAAMBL+42                                               02605000
AMBLNIDS EQU   IDAAMBL+41                                               02606000
@NM00020 EQU   IDAAMBL+40                                               02607000
AMBLNUM  EQU   IDAAMBL+38                                               02608000
AMBLNST  EQU   IDAAMBL+37                                               02609000
@NM00019 EQU   AMBLFLG2                                                 02610000
AMBLSTAG EQU   AMBLFLG2                                                 02611000
@NM00018 EQU   AMBLFLG2                                                 02612000
AMBLDUMY EQU   AMBLFLG1                                                 02613000
AMBLCAT  EQU   AMBLFLG1                                                 02614000
AMBLUCRA EQU   AMBLFLG1                                                 02615000
AMBLSCRA EQU   AMBLFLG1                                                 02616000
AMBLVVIC EQU   AMBLFLG1                                                 02617000
AMBLUPD  EQU   AMBLFLG1                                                 02618000
AMBLCINV EQU   AMBLFLG1                                                 02619000
AMBLFULL EQU   AMBLFLG1                                                 02620000
AMBLLEN  EQU   IDAAMBL+34                                               02621000
@NM00017 EQU   AMBLSHAR                                                 02622000
AMBLWRIT EQU   AMBLSHAR                                                 02623000
AMBLCATO EQU   AMBLSHAR                                                 02624000
AMBLPRIM EQU   AMBLSHAR                                                 02625000
AMBLID   EQU   IDAAMBL+32                                               02626000
@NM00016 EQU   IDAAMBL+31                                               02627000
@NM00015 EQU   AMBLTYPE                                                 02628000
AMBLFIX  EQU   AMBLTYPE                                                 02629000
AMBLBASE EQU   AMBLTYPE                                                 02630000
AMBLAIX  EQU   AMBLTYPE                                                 02631000
AMBLUPGR EQU   AMBLTYPE                                                 02632000
AMBLPATH EQU   AMBLTYPE                                                 02633000
AMBLENO  EQU   AMBLVC+1                                                 02634000
AMBLVRT  EQU   AMBLVC                                                   02635000
AMBLXPT  EQU   IDAAMBL+24                                               02636000
AMBLDFR  EQU   AMBLQ                                                    02637000
AMBLESDS EQU   AMBLQ                                                    02638000
AMBLKSDS EQU   AMBLQ                                                    02639000
AMBLUBF  EQU   AMBLQ                                                    02640000
AMBLFSTP EQU   AMBLQ                                                    02641000
AMBLLSR  EQU   AMBLQ                                                    02642000
AMBLGSR  EQU   AMBLQ                                                    02643000
AMBLDDC  EQU   AMBLQ                                                    02644000
AMBLDCI  EQU   AMBLIDF+4                                                02645000
AMBLCACB EQU   AMBLIDF                                                  02646000
@NM00014 EQU   AMBLEOV+2                                                02647000
AMBLCOMP EQU   AMBLEOV+1                                                02648000
AMBLESET EQU   AMBLEFLG                                                 02649000
AMBLWAIT EQU   AMBLEFLG                                                 02650000
AMBLACB  EQU   IDAAMBL+8                                                02651000
AMBLSCHN EQU   IDAAMBL+4                                                02652000
AMBLPCHN EQU   IDAAMBL                                                  02653000
ACBAPID  EQU   ACBCOMN+72                                               02654000
ACBCBMWA EQU   ACBCOMN+68                                               02655000
ACBUAPTR EQU   ACBCOMN+64                                               02656000
ACBLRECL EQU   ACBCOMN+62                                               02657000
ACBMSGLN EQU   ACBBLKSZ                                                 02658000
ACBBUFSP EQU   ACBCOMN+56                                               02659000
@NM00013 EQU   ACBUJFCB+1                                               02660000
ACBOPTN  EQU   ACBUJFCB                                                 02661000
ACBVVIC  EQU   ACBINFLG                                                 02662000
ACBUCRA  EQU   ACBINFLG                                                 02663000
ACBSCRA  EQU   ACBINFLG                                                 02664000
ACBCAT   EQU   ACBINFLG                                                 02665000
ACBIJRQE EQU   ACBINFLG                                                 02666000
ACBJEPS  EQU   ACBINFLG                                                 02667000
@NM00012 EQU   ACBINFLG                                                 02668000
ACBERFLG EQU   ACBCOMN+49                                               02669000
ACBBUSY  EQU   ACBIOSFG                                                 02670000
ACBLOCK  EQU   ACBEXFG                                                  02671000
@NM00011 EQU   ACBOFLGS                                                 02672000
ACBDSERR EQU   ACBOFLGS                                                 02673000
ACBOPEN  EQU   ACBOFLGS                                                 02674000
ACBEOV   EQU   ACBOFLGS                                                 02675000
@NM00010 EQU   ACBOFLGS                                                 02676000
ACBDEB   EQU   ACBDDNM+5                                                02677000
ACBERFL  EQU   ACBDDNM+4                                                02678000
ACBAM    EQU   ACBAMETH                                                 02679000
ACBINFL  EQU   ACBDDNM+2                                                02680000
ACBTIOT  EQU   ACBDDNM                                                  02681000
ACBUEL   EQU   ACBEXLST                                                 02682000
ACBPASSW EQU   ACBCOMN+32                                               02683000
ACBMSGAR EQU   ACBCOMN+28                                               02684000
@NM00009 EQU   ACBDSORG+1                                               02685000
ACBDORGA EQU   ACBDSORG+1                                               02686000
@NM00008 EQU   ACBDSORG                                                 02687000
ACBCRNRE EQU   ACBCROPS                                                 02688000
ACBCRNCK EQU   ACBCROPS                                                 02689000
ACBASA   EQU   ACBCCTYP                                                 02690000
@NM00007 EQU   ACBCCTYP                                                 02691000
ACBRECAF EQU   ACBRECFM                                                 02692000
ACBJBUF  EQU   ACBBUFPL+2                                               02693000
ACBMACR4 EQU   ACBBUFPL+1                                               02694000
@NM00006 EQU   ACBMACR3                                                 02695000
ACBNCFX  EQU   ACBMACR3                                                 02696000
ACBSIS   EQU   ACBMACR3                                                 02697000
ACBDFR   EQU   ACBMACR3                                                 02698000
ACBICI   EQU   ACBMACR3                                                 02699000
ACBGSR   EQU   ACBMACR3                                                 02700000
ACBLSR   EQU   ACBMACR3                                                 02701000
@NM00005 EQU   ACBMACR3                                                 02702000
ACBBUFNI EQU   ACBCOMN+18                                               02703000
ACBBUFND EQU   ACBCOMN+16                                               02704000
ACBSTRNO EQU   ACBCOMN+15                                               02705000
ACBBSTNO EQU   ACBCOMN+14                                               02706000
ACBAIX   EQU   ACBMACR2                                                 02707000
ACBDSN   EQU   ACBMACR2                                                 02708000
ACBRST   EQU   ACBMACR2                                                 02709000
ACBLOGON EQU   ACBMACR2                                                 02710000
ACBSKP   EQU   ACBMACR2                                                 02711000
@NM00004 EQU   ACBMACR2                                                 02712000
ACBUBF   EQU   ACBMACR1                                                 02713000
ACBOUT   EQU   ACBMACR1                                                 02714000
ACBIN    EQU   ACBMACR1                                                 02715000
ACBDIR   EQU   ACBMACR1                                                 02716000
ACBSEQ   EQU   ACBMACR1                                                 02717000
ACBBLK   EQU   ACBCNV                                                   02718000
ACBADD   EQU   ACBADR                                                   02719000
ACBKEY   EQU   ACBMACR1                                                 02720000
ACBINRTN EQU   ACBCOMN+8                                                02721000
ACBIBCT  EQU   ACBJWA                                                   02722000
ACBLEN2  EQU   ACBLENG2                                                 02723000
ACBSTYP  EQU   ACBCOMN+1                                                02724000
ACBID    EQU   ACBCOMN                                                  02725000
RPLERMSA EQU   RPLCOMN+72                                               02726000
RPLEMLEN EQU   RPLCOMN+70                                               02727000
RPLACTIV EQU   RPLCOMN+69                                               02728000
RPLBRANC EQU   RPLEXTD1                                                 02729000
RPLNIB   EQU   RPLEXTD1                                                 02730000
@NM00003 EQU   RPLEXTD1                                                 02731000
RPLEXIT  EQU   RPLEXTD1                                                 02732000
RPLNEXIT EQU   RPLEXTD1                                                 02733000
RPLEXSCH EQU   RPLEXTD1                                                 02734000
RPLDDDD  EQU   RPLRBAR+4                                                02735000
@NM00002 EQU   RPLRBAR+3                                                02736000
@NM00001 EQU   RPLAIXID                                                 02737000
RPLAXPKP EQU   RPLAIXID                                                 02738000
RPLAIXPC EQU   RPLRBAR                                                  02739000
RPLRSV88 EQU   RPLOPT8                                                  02740000
RPLUNCON EQU   RPLOPT8                                                  02741000
RPLACTV  EQU   RPLOPT8                                                  02742000
RPLSESS  EQU   RPLOPT8                                                  02743000
RPLPEND  EQU   RPLOPT8                                                  02744000
RPLODPRM EQU   RPLOPT8                                                  02745000
RPLODACP EQU   RPLOPT8                                                  02746000
RPLODACQ EQU   RPLOPT8                                                  02747000
RPLRSV78 EQU   RPLOPT7                                                  02748000
RPLRSV77 EQU   RPLOPT7                                                  02749000
RPLRLSOP EQU   RPLOPT7                                                  02750000
RPLTPOST EQU   RPLOPT7                                                  02751000
RPLQOPT  EQU   RPLOPT7                                                  02752000
RPLCNIMM EQU   RPLCNOPT                                                 02753000
RPLCNANY EQU   RPLCNOPT                                                 02754000
RPLCNALL EQU   RPLCNOPT                                                 02755000
RPLRSV68 EQU   RPLOPT6                                                  02756000
RPLRSV67 EQU   RPLOPT6                                                  02757000
RPLLOCK  EQU   RPLOPT6                                                  02758000
RPLNCOND EQU   RPLOPT6                                                  02759000
RPLCOND  EQU   RPLOPT6                                                  02760000
RPLEOT   EQU   RPLUNTYP                                                 02761000
RPLEOM   EQU   RPLUNTYP                                                 02762000
RPLEOB   EQU   RPLUNTYP                                                 02763000
RPLWROPT EQU   RPLOPT5                                                  02764000
RPLNODE  EQU   RPLOPT5                                                  02765000
RPLERACE EQU   RPLWRTYP                                                 02766000
RPLEAU   EQU   RPLWRTYP                                                 02767000
RPLNERAS EQU   RPLWRTYP                                                 02768000
RPLPSOPT EQU   RPLOPT5                                                  02769000
RPLSSNIN EQU   RPLOPT5                                                  02770000
RPLDLGIN EQU   RPLOPT5                                                  02771000
RPLBUFL  EQU   RPLCOMN+52                                               02772000
RPLRLEN  EQU   RPLCOMN+48                                               02773000
RPLCHAIN EQU   RPLNXTRP                                                 02774000
RPLOPT4  EQU   RPLOPTCD+3                                               02775000
RPLALIGN EQU   RPLOPT3                                                  02776000
RPLFMT   EQU   RPLOPT3                                                  02777000
RPLFLD   EQU   RPLOPT3                                                  02778000
RPLVFY   EQU   RPLOPT3                                                  02779000
RPLBLK   EQU   RPLOPT3                                                  02780000
RPLSFORM EQU   RPLOPT3                                                  02781000
RPLEODS  EQU   RPLOPT3                                                  02782000
RPLNSP   EQU   RPLOPT2                                                  02783000
RPLWAITX EQU   RPLOPT2                                                  02784000
RPLLRD   EQU   RPLOPT2                                                  02785000
RPLBWD   EQU   RPLOPT2                                                  02786000
RPLCNV   EQU   RPLOPT2                                                  02787000
RPLADD   EQU   RPLADR                                                   02788000
RPLKEY   EQU   RPLOPT2                                                  02789000
RPLECBIN EQU   RPLECBSW                                                 02790000
RPLGEN   EQU   RPLOPT1                                                  02791000
RPLKGE   EQU   RPLOPT1                                                  02792000
RPLASY   EQU   RPLOPT1                                                  02793000
RPLSKP   EQU   RPLOPT1                                                  02794000
RPLDIR   EQU   RPLOPT1                                                  02795000
RPLLOC   EQU   RPLOPT1                                                  02796000
RPLDAF   EQU   RPLARG+2                                                 02797000
RPLSAF   EQU   RPLARG                                                   02798000
RPLTCBPT EQU   RPLCOMN+28                                               02799000
RPLCCHAR EQU   RPLCOMN+20                                               02800000
RPLSTRID EQU   RPLCOMN+18                                               02801000
RPLKEYL  EQU   RPLKEYLE                                                 02802000
RPLRDSOH EQU   RPLFDB3                                                  02803000
RPLRLG   EQU   RPLFDB3                                                  02804000
RPLLGFRC EQU   RPLFDB3                                                  02805000
RPLREOT  EQU   RPLFDB3                                                  02806000
RPLREOM  EQU   RPLFDB3                                                  02807000
RPLREOB  EQU   RPLFDB3                                                  02808000
RPLSV32  EQU   RPLFDB3                                                  02809000
RPLUINPT EQU   RPLFDB3                                                  02810000
RPLSTSAV EQU   RPLFDB2                                                  02811000
RPLCUERR EQU   RPLFDB2                                                  02812000
RPLDLGFL EQU   RPLFDB2                                                  02813000
RPLIOERR EQU   RPLFDB2                                                  02814000
RPLDVUNS EQU   RPLFDB2                                                  02815000
RPLATND  EQU   RPLFDB2                                                  02816000
RPLRVID  EQU   RPLFDB2                                                  02817000
RPLERLK  EQU   RPLFDB2                                                  02818000
RPLERREG EQU   RPLRTNCD                                                 02819000
RPLSTAT  EQU   RPLFDBWD                                                 02820000
RPLPOST  EQU   RPLECB                                                   02821000
RPLWAIT  EQU   RPLECB                                                   02822000
RPLPLHPT EQU   RPLCOMN+4                                                02823000
RPLLEN2  EQU   RPLLEN                                                   02824000
RPLREQ   EQU   RPLIDWD+2                                                02825000
RPLSTYP  EQU   RPLIDWD+1                                                02826000
RPLID    EQU   RPLIDWD                                                  02827000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02828000
@RC00187 EQU   @RC00182                                                 02829000
@RC00216 EQU   @RC00210                                                 02830000
@RF00274 EQU   @RC00272                                                 02831000
@RF00287 EQU   @RC00272                                                 02832000
@RT00367 EQU   INOFIT                                                   02833000
@RT00381 EQU   INOFIT                                                   02834000
@RF00471 EQU   @RC00167                                                 02835000
@RT00521 EQU   HLINSERT                                                 02836000
@RT00534 EQU   @EL00001                                                 02837000
@RC00636 EQU   @EL00002                                                 02838000
@ENDDATA EQU   *                                                        02839000
         END   IDA019RH,(C'PLS2021',0701,78172)                         02840000
