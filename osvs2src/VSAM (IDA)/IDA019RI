         TITLE 'IDA019RI--VSAM INDEX UPGRADE                           *00001000
                        '                                               00002000
IDA019RI CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RI  78.209'                                 0001 00009000
IDAHLINS DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00177-IDAHLINS)                                   00013000
         ENTRY IDAHLINS                                                 00014000
IDANEWRD DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00611-IDANEWRD)                                   00018000
         ENTRY IDANEWRD                                                 00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
*   RWORK0=ZERO;                    /* SET FOR RI CALL@X04SVES       */ 00027000
         SLR   RWORK0,RWORK0                                       0175 00028000
*   GOTO MAINENT;                   /* MAIN ENTRY PT.        @X04SVRQ*/ 00029000
         B     MAINENT                                             0176 00030000
*/*    ENTRY POINT TO MAKE HIGH LEVEL INDEX INSERT                   */ 00031000
*                                                                  0177 00032000
*IDAHLINS:                                                         0177 00033000
*   ENTRY;                          /* ENTRY FOR UPGRADING INDEX HIGH   00034000
*                                      LEVELS.               @X04SVRQ*/ 00035000
@EP00177 DS    0H                                                  0178 00036000
*   RWORK0=ONE;                     /* SET FOR HI LVL        @X04SVES*/ 00037000
         LA    RWORK0,1                                            0178 00038000
*MAINENT:                                                          0179 00039000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14       @X04SVRQ*/ 00040000
MAINENT  IDASVR14                                                       00041000
*   RESPECIFY                                                      0180 00042000
*     R14 UNRSTD;                   /*                       @X04SVES*/ 00043000
*                                                                  0180 00044000
*   /*****************************************************************/ 00045000
*   /*                                                               */ 00046000
*   /* INITIALIZE IMWA FIELDS                                        */ 00047000
*   /*                                                               */ 00048000
*   /*****************************************************************/ 00049000
*                                                                  0181 00050000
*   IMWCIMVN=ZERO;                  /* ZERO NO. OF CIS TO MOVE       */ 00051000
         L     @10,AMBIWA(,RAMB)                                   0181 00052000
         L     @05,ICWCHN(,@10)                                    0181 00053000
         SLR   @15,@15                                             0181 00054000
         STH   @15,IMWCIMVN(,@05)                                  0181 00055000
*   IMWRIPL=OFF;                    /* RESET RIPPLE FLAG             */ 00056000
*   IMWNEWHL=OFF;                   /* RESET NEW HIGH LV FLAG        */ 00057000
         NI    IMWRIPL(@05),B'00111111'                            0183 00058000
*   IMWIXSP=ADDR(IMWISWKA);         /* SET PTR TO IX SEARCH PL       */ 00059000
         LA    @15,IMWISWKA(,@05)                                  0184 00060000
         ST    @15,IMWIXSP(,@05)                                   0184 00061000
*   RPARM1=ZERO;                    /* 1ST CALL TO IDA019RJ          */ 00062000
         SLR   RPARM1,RPARM1                                       0185 00063000
*   ICWADD=ADDR(IDAICWA);           /* POINT TO CURRENT ICWA         */ 00064000
         ST    @10,ICWADD(,@10)                                    0186 00065000
*   RBUFC=PLHIBUFC;                 /* PTR TO SEQ. SET BUFC          */ 00066000
         L     RBUFC,PLHIBUFC(,RPLH)                               0187 00067000
*   ICWBUFC=RBUFC;                  /* SET PTR IN ICW                */ 00068000
         ST    RBUFC,ICWBUFC(,@10)                                 0188 00069000
*   IMWBUFP=RBUFC->BUFCBAD;         /* SET POINTER TO RECORD         */ 00070000
         L     @15,BUFCBAD(,RBUFC)                                 0189 00071000
         ST    @15,IMWBUFP(,@05)                                   0189 00072000
*   IF RWORK0=ONE THEN              /* HI LVL INSERT         @X04SVES*/ 00073000
         CL    RWORK0,@CF00053                                     0190 00074000
         BE    @RT00190                                            0190 00075000
*     GO TO HLINSERT;               /* YES                   @X04SVES*/ 00076000
*   RESPECIFY                                                      0192 00077000
*     RWORK0 UNRSTD;                /*                       @X04SVES*/ 00078000
*   ICWCRBA=RBUFC->BUFCDDDD;        /* SET RBA IN ICW                */ 00079000
         L     @05,BUFCDDDD(,RBUFC)                                0193 00080000
         ST    @05,ICWCRBA(,@10)                                   0193 00081000
*   PLHSSRBA=RBUFC->BUFCDDDD;       /* SAVE RBA IN PLH               */ 00082000
         ST    @05,PLHSSRBA(,RPLH)                                 0194 00083000
*   IF PLHADDTE=ON&RPLRLEN^>AMBLDTA->/* ADD TO END           @X04SVES*/ 00084000
*       AMBDSB->AMDCINV-            /* OF DATA SET           @X04SVES*/ 00085000
*       (LENGTH(IDACIDF)+LENGTH(IDARDF)) THEN/* PROCESSING AND NOT A    00086000
*                                      SPANNED RECORD        @X04SVES*/ 00087000
         TM    PLHADDTE(RPLH),B'00010000'                          0195 00088000
         BNO   @RF00195                                            0195 00089000
         L     @05,RPLDACB(,RRPL)                                  0195 00090000
         L     @05,ACBAMBL(,@05)                                   0195 00091000
         L     @05,AMBLDTA(,@05)                                   0195 00092000
         L     @05,AMBDSB(,@05)                                    0195 00093000
         L     @05,AMDCINV(,@05)                                   0195 00094000
         SL    @05,@CF00295                                        0195 00095000
         C     @05,RPLRLEN(,RRPL)                                  0195 00096000
         BL    @RF00195                                            0195 00097000
*     DO;                           /* YES.                          */ 00098000
*                                                                  0196 00099000
*       /*************************************************************/ 00100000
*       /*                                                           */ 00101000
*       /* SCAN INDEX RECORD AND EXTRACT THE LAST TWO (HIGH KEY)     */ 00102000
*       /* SECTION ENTRIES.                                          */ 00103000
*       /*                                                           */ 00104000
*       /*************************************************************/ 00105000
*                                                                  0197 00106000
*       RPARM1=ADDR(ICWKEY1);       /* POINT TO KEY AREA             */ 00107000
         LA    RPARM1,ICWKEY1(,@10)                                0197 00108000
*       ICWPSEO=IXHSEO;             /* OFFSET TO 1ST SECTION         */ 00109000
         LH    @05,IXHSEO(,@15)                                    0198 00110000
         STH   @05,ICWPSEO(,@10)                                   0198 00111000
*       RBUFC=ZERO;                 /* FORCE ONCE THRU LOOP          */ 00112000
         SLR   RBUFC,RBUFC                                         0199 00113000
*       RFY                                                        0200 00114000
*        (RWORK1,                                                  0200 00115000
*         RWORK2,                                                  0200 00116000
*         RWORK3) RSTD;                                            0200 00117000
*       DO WHILE RBUFC^=IXHLEO;     /* LOOP UP TO LAST ENTRY         */ 00118000
         B     @DE00201                                            0201 00119000
@DL00201 DS    0H                                                  0202 00120000
*         CALL EXTKEY;              /* EXTRACT SECTION KEY           */ 00121000
         BAL   @14,EXTKEY                                          0202 00122000
*         RBUFC=ICWPSEO-RWORK3;     /* POINT TO NEXT SECTION         */ 00123000
         L     @10,AMBIWA(,RAMB)                                   0203 00124000
         LH    RBUFC,ICWPSEO(,@10)                                 0203 00125000
         SLR   RBUFC,RWORK3                                        0203 00126000
*         ICWPSEO=RBUFC;            /* SET POINTER IN WORKAREA       */ 00127000
         STH   RBUFC,ICWPSEO(,@10)                                 0204 00128000
*       END;                        /* END OF EXTRACT LOOP           */ 00129000
@DE00201 L     @10,AMBIWA(,RAMB)                                   0205 00130000
         L     @15,ICWCHN(,@10)                                    0205 00131000
         L     @15,IMWBUFP(,@15)                                   0205 00132000
         CH    RBUFC,IXHLEO(,@15)                                  0205 00133000
         BNE   @DL00201                                            0205 00134000
*       ICWKEY1L=RWORK1+RWORK2;     /* SAVE KEY LENGTH               */ 00135000
         LR    @00,RWORK1                                          0206 00136000
         ALR   @00,RWORK2                                          0206 00137000
         STH   @00,ICWKEY1L(,@10)                                  0206 00138000
*       ICWKEY3L=RWORK3;            /* SAVE SECTION LENGTH           */ 00139000
         STH   RWORK3,ICWKEY3L(,@10)                               0207 00140000
*       RPARM1=RPARM1+AMDKEYLN;     /* POINT TO NEXT KEY AREA        */ 00141000
         L     @15,AMBDSB(,RAMB)                                   0208 00142000
         AH    RPARM1,AMDKEYLN(,@15)                               0208 00143000
*       RWORK1=ICWKEY1L;            /* PICK UP KEY LENGTH            */ 00144000
         LR    RWORK1,@00                                          0209 00145000
*       IF RWORK1^=ZERO THEN        /* LENGTH = 0                    */ 00146000
         LTR   RWORK1,RWORK1                                       0210 00147000
         BZ    @RF00210                                            0210 00148000
*         DO;                       /* NO.                           */ 00149000
*           RPARM1->KEY(1:RWORK1)=  /* COPY KEY TO PREPARE           */ 00150000
*               ICWKEY1(1:RWORK1);  /* FOR EXTRACT OF NEXT KEY       */ 00151000
         LR    @15,RWORK1                                          0212 00152000
         BCTR  @15,0                                               0212 00153000
         EX    @15,@SM01169                                        0212 00154000
*           CALL EXTKEY;            /* EXTRACT LAST SECTION          */ 00155000
         BAL   @14,EXTKEY                                          0213 00156000
*           ICWKEY2L=RWORK1+RWORK2; /* SET LENGTH OF LAST KEY        */ 00157000
         L     @10,AMBIWA(,RAMB)                                   0214 00158000
         LR    @00,RWORK1                                          0214 00159000
         ALR   @00,RWORK2                                          0214 00160000
         STH   @00,ICWKEY2L(,@10)                                  0214 00161000
*         END;                      /* END OF LAST EXTRACT           */ 00162000
*       ELSE                        /*                               */ 00163000
*         ICWKEY2L=RWORK1;          /* SET LAST LENGTH = 0           */ 00164000
         B     @RC00210                                            0216 00165000
@RF00210 L     @10,AMBIWA(,RAMB)                                   0216 00166000
         STH   RWORK1,ICWKEY2L(,@10)                               0216 00167000
*       IMWXPTR=IXHHP;              /* SAVE HORIZONTAL POINTER       */ 00168000
@RC00210 L     @10,AMBIWA(,RAMB)                                   0217 00169000
         L     @10,ICWCHN(,@10)                                    0217 00170000
         L     @15,IMWBUFP(,@10)                                   0217 00171000
         L     @00,IXHHP(,@15)                                     0217 00172000
         ST    @00,IMWXPTR(,@10)                                   0217 00173000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC           */ 00174000
         L     RBUFC,PLHIBUFC(,RPLH)                               0218 00175000
*       RFY                                                        0219 00176000
*        (RWORK1,                                                  0219 00177000
*         RWORK2,                                                  0219 00178000
*         RWORK3) UNRSTD;           /*                       @X04SVES*/ 00179000
*I01:                                                              0220 00180000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00181000
I01      DS    0H                                                  0221 00182000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00183000
         L     @15,@CV01029                                        0221 00184000
         BALR  @14,@15                                             0221 00185000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00186000
         BALR @11,0                                                     00187000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00188000
         USING *,@11                                                    00189000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00190000
         L     @11,=A(@PSTART)                                          00191000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00192000
         USING @PSTART,@11                                              00193000
*       END I01;                    /* FREE BUFFER           @X04SVLP*/ 00194000
*       ICWLN=ONE;                  /* SET INDEX LEVEL NUMBER        */ 00195000
         L     @10,AMBIWA(,RAMB)                                   0227 00196000
         MVC   ICWLN(2,@10),@CH00053                               0227 00197000
*       IF AMDRANGE=ON THEN         /* SET KEY RANGE         @X04SVES*/ 00198000
         L     @05,AMBDSB(,RAMB)                                   0228 00199000
         TM    AMDRANGE(@05),B'00000100'                           0228 00200000
         BNO   @RF00228                                            0228 00201000
*         ICWKRDS=ON;               /* REMINDER              @X04SVES*/ 00202000
         OI    ICWKRDS(@10),B'00000100'                            0229 00203000
*I02:                                                              0230 00204000
*       DO;                         /* IDACALL(IDANEWRD)             */ 00205000
@RF00228 DS    0H                                                  0230 00206000
I02      DS    0H                                                  0231 00207000
*         CALL IDANEWRD;            /* EXIT TO IDANEWRD              */ 00208000
         L     @15,@CA01084                                        0231 00209000
         BALR  @14,@15                                             0231 00210000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00211000
         BALR @11,0                                                     00212000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00213000
         USING *,@11                                                    00214000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00215000
         L     @11,=A(@PSTART)                                          00216000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00217000
         USING @PSTART,@11                                              00218000
*       END I02;                    /* INIT NEW RECORD       @X04SVRQ*/ 00219000
*       IF RPLERREG^=ZERO THEN      /* IF ERROR IN NEW RECORD        */ 00220000
         CLI   RPLERREG(RRPL),0                                    0237 00221000
         BNE   @RT00237                                            0237 00222000
*         GO TO WTERR;              /* EXIT                          */ 00223000
*       RFY                                                        0239 00224000
*         IDAIXH BASED(RBUFC);                                     0239 00225000
*       RBUFC=IMWBUFP;              /* POINT TO RECORD BUFFER        */ 00226000
         L     @10,AMBIWA(,RAMB)                                   0240 00227000
         L     @15,ICWCHN(,@10)                                    0240 00228000
         L     RBUFC,IMWBUFP(,@15)                                 0240 00229000
*       PLHSSRBA=ICWCRBA;           /* NEW SS RBA FOR CA SPLIT       */ 00230000
         L     @05,ICWCRBA(,@10)                                   0241 00231000
         ST    @05,PLHSSRBA(,RPLH)                                 0241 00232000
*       RPARM1=AMBLDTA->AMBDSB->AMDCIPCA;/* PICK UP CI PER CA VALUE  */ 00233000
         L     @05,RPLDACB(,RRPL)                                  0242 00234000
         L     @05,ACBAMBL(,@05)                                   0242 00235000
         L     @05,AMBLDTA(,@05)                                   0242 00236000
         L     @05,AMBDSB(,@05)                                    0242 00237000
         LH    RPARM1,AMDCIPCA(,@05)                               0242 00238000
*       IF RPARM1^>T56 THEN         /* MORE THAN 256                 */ 00239000
         C     RPARM1,@CF01045                                     0243 00240000
         BH    @RF00243                                            0243 00241000
*         DO;                       /* NO.                           */ 00242000
*           ICWPTL=ONE;             /* SET PTR LENGTH                */ 00243000
         MVI   ICWPTL(@10),X'01'                                   0245 00244000
*           IXHPTLS='01'X;          /* SET PTR LENGTH MASK           */ 00245000
         MVI   IXHPTLS(RBUFC),X'01'                                0246 00246000
*         END;                      /* END OF NOT > 256              */ 00247000
*       ELSE                        /* > 256                         */ 00248000
*         DO;                       /* YES.                          */ 00249000
         B     @RC00243                                            0248 00250000
@RF00243 DS    0H                                                  0249 00251000
*           ICWPTL=TWO;             /* SET PTR LENGTH                */ 00252000
         L     @10,AMBIWA(,RAMB)                                   0249 00253000
         MVI   ICWPTL(@10),X'02'                                   0249 00254000
*           IXHPTLS='03'X;          /* SET PTR LENGTH MASK           */ 00255000
         MVI   IXHPTLS(RBUFC),X'03'                                0250 00256000
*         END;                      /* END OF > 256                  */ 00257000
*       IXHFLPLN=ICWPTL+LENGTH(IBFLPF)+/* SET F,L,PTR COMBINED       */ 00258000
*           LENGTH(IBFLPL);         /* FIELDS LENGTH                 */ 00259000
@RC00243 L     @10,AMBIWA(,RAMB)                                   0252 00260000
         LA    @05,2                                               0252 00261000
         SLR   @00,@00                                             0252 00262000
         IC    @00,ICWPTL(,@10)                                    0252 00263000
         ALR   @05,@00                                             0252 00264000
         STC   @05,IXHFLPLN(,RBUFC)                                0252 00265000
*       RFY                                                        0253 00266000
*        (RWORK1,                                                  0253 00267000
*         RWORK2) RSTD;                                            0253 00268000
*       RWORK1=IXHPTLS;             /* PICK UP PTR MASK              */ 00269000
         SLR   RWORK1,RWORK1                                       0254 00270000
         IC    RWORK1,IXHPTLS(,RBUFC)                              0254 00271000
*       RWORK2=IMWBUFP+LENGTH(IDAIXH);/* POINT BEYOND HEADER         */ 00272000
         L     @10,ICWCHN(,@10)                                    0255 00273000
         LA    RWORK2,24                                           0255 00274000
         AL    RWORK2,IMWBUFP(,@10)                                0255 00275000
*       DO RPARM1=RPARM1-1 BY-1 TO 1;/* LOOP SETTING PTRS            */ 00276000
         LR    @10,RPARM1                                          0256 00277000
         BCTR  @10,0                                               0256 00278000
         LR    RPARM1,@10                                          0256 00279000
         B     @DE00256                                            0256 00280000
@DL00256 DS    0H                                                  0257 00281000
*         GEN(EX RWORK1,STOREPT);   /* STORE POINTER VALUE           */ 00282000
         EX RWORK1,STOREPT                                              00283000
*         RWORK2=RWORK2+ICWPTL;     /* NEXT POINTER LOCATION         */ 00284000
         L     @10,AMBIWA(,RAMB)                                   0258 00285000
         SLR   @07,@07                                             0258 00286000
         IC    @07,ICWPTL(,@10)                                    0258 00287000
         ALR   RWORK2,@07                                          0258 00288000
*       END;                        /* END OF SET PTRS LOOP          */ 00289000
         BCTR  RPARM1,0                                            0259 00290000
@DE00256 LTR   RPARM1,RPARM1                                       0259 00291000
         BP    @DL00256                                            0259 00292000
*       IXHFSO=RWORK2-IMWBUFP;      /* SET OFFSET TO INSERT SP       */ 00293000
         L     @10,AMBIWA(,RAMB)                                   0260 00294000
         L     @07,ICWCHN(,@10)                                    0260 00295000
         L     @15,IMWBUFP(,@07)                                   0260 00296000
         LR    @00,RWORK2                                          0260 00297000
         SLR   @00,@15                                             0260 00298000
         STH   @00,IXHFSO(,RBUFC)                                  0260 00299000
*       IXHLEO=IXHLL-IXHFLPLN;      /* POINT TO 1ST ENTRY            */ 00300000
         LH    @00,IXHLL(,RBUFC)                                   0261 00301000
         N     @00,@CF01171                                        0261 00302000
         SLR   @14,@14                                             0261 00303000
         IC    @14,IXHFLPLN(,RBUFC)                                0261 00304000
         SLR   @00,@14                                             0261 00305000
         STH   @00,IXHLEO(,RBUFC)                                  0261 00306000
*       IXHSEO=IXHLEO;              /* COPY OFFSET                   */ 00307000
         STH   @00,IXHSEO(,RBUFC)                                  0262 00308000
*       IXHHP=IMWXPTR;              /* SET HORIZ. PTR FROM OLD       */ 00309000
         L     @07,IMWXPTR(,@07)                                   0263 00310000
         ST    @07,IXHHP(,RBUFC)                                   0263 00311000
*       IXHLV=ONE;                  /* SET LEVEL NUMBER              */ 00312000
         MVI   IXHLV(RBUFC),X'01'                                  0264 00313000
*       IXHBRBA=ICWTBASE;           /* SET BASE DATA RBA             */ 00314000
         L     @07,ICWTBASE(,@10)                                  0265 00315000
         ST    @07,IXHBRBA(,RBUFC)                                 0265 00316000
*       RWORK1=ICWKEY2L;            /* L VALUE FOR ENTRY             */ 00317000
         LH    RWORK1,ICWKEY2L(,@10)                               0266 00318000
*       IF RWORK1^=ZERO THEN        /* L = 0                         */ 00319000
         LTR   RWORK1,RWORK1                                       0267 00320000
         BZ    @RF00267                                            0267 00321000
*         DO;                       /* NO.                           */ 00322000
*           RWORK2=IMWBUFP+IXHLEO;  /* POINT TO F LOCATION           */ 00323000
         ALR   @15,@00                                             0269 00324000
         LR    RWORK2,@15                                          0269 00325000
*           RWORK2->IBFLPL=RWORK1;  /* SET ENTRY L VALUE             */ 00326000
         STC   RWORK1,IBFLPL(,RWORK2)                              0270 00327000
*           RWORK2=RWORK2-RWORK1;   /* BACK UP TO KEY FIELD          */ 00328000
         SLR   RWORK2,RWORK1                                       0271 00329000
*           RBUFC=ADDR(ICWKEY1)+AMDKEYLN;/* POINT TO KEY             */ 00330000
         LA    RBUFC,ICWKEY1(,@10)                                 0272 00331000
         L     @10,AMBDSB(,RAMB)                                   0272 00332000
         AH    RBUFC,AMDKEYLN(,@10)                                0272 00333000
*           RWORK2->KEY(1:RWORK1)=  /* MOVE KEY CHARACTERS           */ 00334000
*               RBUFC->KEY(1:RWORK1);/* INTO INDEX RECORD            */ 00335000
         LR    @10,RWORK1                                          0273 00336000
         BCTR  @10,0                                               0273 00337000
         EX    @10,@SM01172                                        0273 00338000
*         END;                      /* END OF L NOT = 0              */ 00339000
*       RFY                                                        0275 00340000
*         IDAIXH BASED(IMWBUFP);                                   0275 00341000
@RF00267 DS    0H                                                  0276 00342000
*       RFY                                                        0276 00343000
*        (RWORK1,                                                  0276 00344000
*         RWORK2) UNRSTD;           /*                       @X04SVES*/ 00345000
*I03:                                                              0277 00346000
*       DO;                         /* IDACALL(IWRITE)               */ 00347000
I03      DS    0H                                                  0278 00348000
*         CALL IWRITE;              /* EXIT TO IWRITE                */ 00349000
         BAL   @14,IWRITE                                          0278 00350000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00351000
         BALR @11,0                                                     00352000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00353000
         USING *,@11                                                    00354000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00355000
         L     @11,=A(@PSTART)                                          00356000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00357000
         USING @PSTART,@11                                              00358000
*       END I03;                    /* WRITE INDEX RECORD            */ 00359000
*       CALL GETSREC;               /* GET OLD SEQ. SET RECORD       */ 00360000
*                                                                  0284 00361000
         BAL   @14,GETSREC                                         0284 00362000
*       /*************************************************************/ 00363000
*       /*                                                           */ 00364000
*       /* LOCATE LAST KEY IN FULL DATA CONTROL INTERVAL             */ 00365000
*       /*                                                           */ 00366000
*       /*************************************************************/ 00367000
*                                                                  0285 00368000
*       RFY                                                        0285 00369000
*        (RWORK1,                                                  0285 00370000
*         RWORK2,                                                  0285 00371000
*         RWORK3) RSTD;                                            0285 00372000
*       RWORK1=PLHDBUFC->BUFCBAD;   /* POINT TO DATA BUFFER          */ 00373000
         L     @10,PLHDBUFC(,RPLH)                                 0286 00374000
         L     RWORK1,BUFCBAD(,@10)                                0286 00375000
*       RWORK2=RWORK1+              /* POINT TO CIDF                 */ 00376000
*           AMBLDTA->AMBDSB->AMDCINV-/*                              */ 00377000
*           LENGTH(IDACIDF);        /*                               */ 00378000
         L     @10,RPLDACB(,RRPL)                                  0287 00379000
         L     @10,ACBAMBL(,@10)                                   0287 00380000
         L     @10,AMBLDTA(,@10)                                   0287 00381000
         L     @10,AMBDSB(,@10)                                    0287 00382000
         LR    RWORK2,RWORK1                                       0287 00383000
         AL    RWORK2,AMDCINV(,@10)                                0287 00384000
         SL    RWORK2,@CF00067                                     0287 00385000
*       RWORK1=RWORK1+RWORK2->CIDFOSET;/* POINT BEYOND LAST REC      */ 00386000
         AH    RWORK1,CIDFOSET(,RWORK2)                            0288 00387000
*       RWORK2=RWORK1+RWORK2->CIDFLL;/* POINT TO LAST RDF            */ 00388000
         LR    @10,RWORK1                                          0289 00389000
         AH    @10,CIDFLL(,RWORK2)                                 0289 00390000
         LR    RWORK2,@10                                          0289 00391000
*       IF RWORK2->RDFREPL=ON THEN  /* GROUP RDF                     */ 00392000
         TM    RDFREPL(RWORK2),B'00001000'                         0290 00393000
         BNO   @RF00290                                            0290 00394000
*         RWORK2=RWORK2+LENGTH(IDARDF);/* MOVE OVER FOR LENGTH       */ 00395000
         AL    RWORK2,@CF00164                                     0291 00396000
*       RBUFC=RWORK1-RWORK2->RDFLL+ /* POSITION TO LAST KEY          */ 00397000
*           AMDRKP;                 /* IN BUFFER                     */ 00398000
@RF00290 LR    RBUFC,RWORK1                                        0292 00399000
         SLR   @10,@10                                             0292 00400000
         ICM   @10,3,RDFLL(RWORK2)                                 0292 00401000
         SLR   RBUFC,@10                                           0292 00402000
         L     @10,AMBDSB(,RAMB)                                   0292 00403000
         LH    @15,AMDRKP(,@10)                                    0292 00404000
         ALR   RBUFC,@15                                           0292 00405000
*       IMWIKEYP=RBUFC;             /* SET POINTER IN WA             */ 00406000
         L     @14,AMBIWA(,RAMB)                                   0293 00407000
         L     @14,ICWCHN(,@14)                                    0293 00408000
         ST    RBUFC,IMWIKEYP(,@14)                                0293 00409000
*       RWORK2=RPLAREA+AMDRKP;      /* POINT TO NEW RECORD KEY       */ 00410000
         AL    @15,RPLAREA(,RRPL)                                  0294 00411000
         LR    RWORK2,@15                                          0294 00412000
*       RWORK1=AMDKEYLN;            /* KEY LENGTH                    */ 00413000
         LH    RWORK1,AMDKEYLN(,@10)                               0295 00414000
*       RWORK3=RWORK1;              /* COPY                          */ 00415000
         LR    RWORK3,RWORK1                                       0296 00416000
*       GEN(CLCL RBUFC,RWORK2);     /* COMPARE                       */ 00417000
         CLCL RBUFC,RWORK2                                              00418000
*       IMWIEL=AMDKEYLN-RWORK1+ONE; /* F+L VALUE                     */ 00419000
         L     @10,AMBIWA(,RAMB)                                   0298 00420000
         L     @15,ICWCHN(,@10)                                    0298 00421000
         L     @14,AMBDSB(,RAMB)                                   0298 00422000
         LH    @00,AMDKEYLN(,@14)                                  0298 00423000
         SLR   @00,RWORK1                                          0298 00424000
         AL    @00,@CF00053                                        0298 00425000
         STC   @00,IMWIEL(,@15)                                    0298 00426000
*       IF IXHLEO=IXHSEO THEN       /* ONLY 1 SECTION                */ 00427000
         L     @15,IMWBUFP(,@15)                                   0299 00428000
         CLC   IXHLEO(2,@15),IXHSEO(@15)                           0299 00429000
         BNE   @RF00299                                            0299 00430000
*         ICWKEY1L=ZERO;            /* YES. NO FRONT COMPRESS        */ 00431000
         SLR   @00,@00                                             0300 00432000
         STH   @00,ICWKEY1L(,@10)                                  0300 00433000
*       RBUFC=IMWIKEYP;             /* POINT TO INSERT KEY           */ 00434000
@RF00299 L     @10,AMBIWA(,RAMB)                                   0301 00435000
         L     @15,ICWCHN(,@10)                                    0301 00436000
         L     RBUFC,IMWIKEYP(,@15)                                0301 00437000
*       RWORK2=ADDR(ICWKEY1);       /* POINT TO PREVIOUS SECT.       */ 00438000
         LA    RWORK2,ICWKEY1(,@10)                                0302 00439000
*       RWORK1=ICWKEY1L;            /* F+L VALUE                     */ 00440000
         LH    RWORK1,ICWKEY1L(,@10)                               0303 00441000
*       IF RWORK1^=ZERO THEN        /* F+L = 0                       */ 00442000
         LTR   RWORK1,RWORK1                                       0304 00443000
         BZ    @RF00304                                            0304 00444000
*         DO;                       /* NO.                           */ 00445000
*           IF RWORK1>IMWIEL THEN   /* F+L > NEW ENTRY F+L           */ 00446000
         SLR   @10,@10                                             0306 00447000
         IC    @10,IMWIEL(,@15)                                    0306 00448000
         CR    RWORK1,@10                                          0306 00449000
         BNH   @RF00306                                            0306 00450000
*             RWORK1=IMWIEL;        /* YES. USE NEW ENTRY F+L        */ 00451000
         LR    RWORK1,@10                                          0307 00452000
*           RWORK3=RWORK1;          /* COPY                          */ 00453000
@RF00306 LR    RWORK3,RWORK1                                       0308 00454000
*           RPARM1=RWORK1;          /* SAVE                          */ 00455000
         LR    RPARM1,RWORK1                                       0309 00456000
*           GEN(CLCL RBUFC,RWORK2); /* COMPARE                       */ 00457000
         CLCL RBUFC,RWORK2                                              00458000
*           ICWKEY1L=RPARM1-RWORK1; /* NEW ENTRY F VALUE             */ 00459000
         L     @10,AMBIWA(,RAMB)                                   0311 00460000
         LR    @00,RPARM1                                          0311 00461000
         SLR   @00,RWORK1                                          0311 00462000
         STH   @00,ICWKEY1L(,@10)                                  0311 00463000
*         END;                      /* END OF FRONT COMPRESS         */ 00464000
*       IMWIEL=IMWIEL-ICWKEY1L;     /* NEW ENTRY L VALUE             */ 00465000
@RF00304 L     @10,AMBIWA(,RAMB)                                   0313 00466000
         L     @15,ICWCHN(,@10)                                    0313 00467000
         SLR   @00,@00                                             0313 00468000
         IC    @00,IMWIEL(,@15)                                    0313 00469000
         SH    @00,ICWKEY1L(,@10)                                  0313 00470000
         STC   @00,IMWIEL(,@15)                                    0313 00471000
*       RWORK1=IMWBUFP+IXHLEO;      /* POINT TO LAST ENTRY           */ 00472000
         L     @10,IMWBUFP(,@15)                                   0314 00473000
         LH    RWORK1,IXHLEO(,@10)                                 0314 00474000
         ALR   RWORK1,@10                                          0314 00475000
*       RWORK2=RWORK1->IBFLPL;      /* PICK UP L VALUE               */ 00476000
         SLR   RWORK2,RWORK2                                       0315 00477000
         IC    RWORK2,IBFLPL(,RWORK1)                              0315 00478000
*       IF RWORK2^=ZERO THEN        /* = 0                           */ 00479000
         LTR   RWORK2,RWORK2                                       0316 00480000
         BZ    @RF00316                                            0316 00481000
*         DO;                       /* NO.                           */ 00482000
*           RWORK1=RWORK1-RWORK2;   /* POSITION TO KEY               */ 00483000
         SLR   RWORK1,RWORK2                                       0318 00484000
*           RWORK2=RWORK2-ONE;      /* REDUCE FOR EX                 */ 00485000
         BCTR  RWORK2,0                                            0319 00486000
*           GEN(EX RWORK2,ZEROK);   /* ZERO OLD KEY                  */ 00487000
         EX RWORK2,ZEROK                                                00488000
*         END;                      /* END OF OLD KEY CLEAR          */ 00489000
*       RWORK2=IMWIEL;              /* NEW ENTRY L VALUE             */ 00490000
@RF00316 L     @10,AMBIWA(,RAMB)                                   0322 00491000
         L     @15,ICWCHN(,@10)                                    0322 00492000
         SLR   RWORK2,RWORK2                                       0322 00493000
         IC    RWORK2,IMWIEL(,@15)                                 0322 00494000
*       RWORK1=IMWBUFP+IXHLEO;      /* POINT TO ENTRY LOCATION       */ 00495000
         L     @14,IMWBUFP(,@15)                                   0323 00496000
         LH    RWORK1,IXHLEO(,@14)                                 0323 00497000
         ALR   RWORK1,@14                                          0323 00498000
*       RWORK1->IBFLPF=ICWKEY1L;    /* SET F VALUE                   */ 00499000
         LH    @10,ICWKEY1L(,@10)                                  0324 00500000
         STC   @10,IBFLPF(,RWORK1)                                 0324 00501000
*       RWORK1->IBFLPL=RWORK2;      /* SET L VALUE                   */ 00502000
         STC   RWORK2,IBFLPL(,RWORK1)                              0325 00503000
*       RBUFC=IMWIKEYP;             /* POINT TO KEY                  */ 00504000
         L     RBUFC,IMWIKEYP(,@15)                                0326 00505000
*       IF RWORK2^=ZERO THEN        /* L = 0                         */ 00506000
         LTR   RWORK2,RWORK2                                       0327 00507000
         BZ    @RF00327                                            0327 00508000
*         DO;                       /* NO.                           */ 00509000
*           RWORK1=RWORK1-RWORK2;   /* POSITION TO KEY               */ 00510000
         SLR   RWORK1,RWORK2                                       0329 00511000
*           RWORK1->KEY(1:RWORK2)=  /* INSERT KEY CHARACTERS         */ 00512000
*               RBUFC->KEY(ICWKEY1L+1:ICWKEY1L/* OFFSET F THRU F+L   */ 00513000
*               +RWORK2);           /*                               */ 00514000
         LR    @15,RWORK2                                          0330 00515000
         BCTR  @15,0                                               0330 00516000
         ALR   @10,RBUFC                                           0330 00517000
         EX    @15,@SM01174                                        0330 00518000
*         END;                      /* END OF ENTRY BUILD            */ 00519000
*       IXHHP=ICWCRBA;              /* SET HORIZ. PTR                */ 00520000
*                                                                  0332 00521000
@RF00327 L     @10,AMBIWA(,RAMB)                                   0332 00522000
         L     @15,ICWCHN(,@10)                                    0332 00523000
         L     @15,IMWBUFP(,@15)                                   0332 00524000
         L     @00,ICWCRBA(,@10)                                   0332 00525000
         ST    @00,IXHHP(,@15)                                     0332 00526000
*       /*************************************************************/ 00527000
*       /*                                                           */ 00528000
*       /* SET INFORMATION NEEDED FOR INSERT INTO LEVEL 2            */ 00529000
*       /*                                                           */ 00530000
*       /*************************************************************/ 00531000
*                                                                  0333 00532000
*       RWORK1=ICWKEY1L+RWORK2;     /* NEW ENTRY F + L               */ 00533000
         LR    RWORK1,RWORK2                                       0333 00534000
         LH    @00,ICWKEY1L(,@10)                                  0333 00535000
         ALR   RWORK1,@00                                          0333 00536000
*       ICWKEY1L=RWORK1;            /* SET IN WORK AREA              */ 00537000
         STH   RWORK1,ICWKEY1L(,@10)                               0334 00538000
*       ICWKEY1(1:RWORK1)=RBUFC->KEY/* MOVE KEY CHARACTERS           */ 00539000
*           (1:RWORK1);             /* TO WORK AREA                  */ 00540000
         LR    @15,RWORK1                                          0335 00541000
         BCTR  @15,0                                               0335 00542000
         EX    @15,@SM01176                                        0335 00543000
*       RFY                                                        0336 00544000
*        (RWORK1,                                                  0336 00545000
*         RWORK2,                                                  0336 00546000
*         RWORK3) UNRSTD;           /*                       @X04SVES*/ 00547000
*I04:                                                              0337 00548000
*       DO;                         /* IDACALL(IWRITE)               */ 00549000
I04      DS    0H                                                  0338 00550000
*         CALL IWRITE;              /* EXIT TO IWRITE                */ 00551000
         BAL   @14,IWRITE                                          0338 00552000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00553000
         BALR @11,0                                                     00554000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00555000
         USING *,@11                                                    00556000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00557000
         L     @11,=A(@PSTART)                                          00558000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00559000
         USING @PSTART,@11                                              00560000
*       END I04;                    /* WRITE INDEX RECORD            */ 00561000
*     END;                          /* END OF ADD TO END             */ 00562000
*   ELSE                            /* NOT ADD TO END                */ 00563000
*     DO;                           /* SPLIT SEQ. SET RECORD         */ 00564000
*                                                                  0345 00565000
         B     @RC00195                                            0345 00566000
@RF00195 DS    0H                                                  0346 00567000
*       /*************************************************************/ 00568000
*       /*                                                           */ 00569000
*       /* CALL IDA019RJ (SPLIT INDEX RECORD) TO SPLIT THE SEQUENCE  */ 00570000
*       /* SET RECORD FORMING A NEW RECORD FOR THE CONTROL AREA.     */ 00571000
*       /*                                                           */ 00572000
*       /*************************************************************/ 00573000
*                                                                  0346 00574000
*SPLIT1:                                                           0346 00575000
*I05:                                                              0346 00576000
*       DO;                         /* IDACALL(IDA019RJ)             */ 00577000
SPLIT1   DS    0H                                                  0346 00578000
I05      DS    0H                                                  0347 00579000
*         CALL IDA019RJ;            /* EXIT TO IDA019RJ              */ 00580000
         L     @15,@CV01034                                        0347 00581000
         BALR  @14,@15                                             0347 00582000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00583000
         BALR @11,0                                                     00584000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00585000
         USING *,@11                                                    00586000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00587000
         L     @11,=A(@PSTART)                                          00588000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00589000
         USING @PSTART,@11                                              00590000
*       END I05;                                                   0352 00591000
*       RFY                                                        0353 00592000
*         R15 RESTRICTED;           /* RESTRICT REGISTER R15         */ 00593000
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE    @ZA29388*/ 00594000
         L     @14,AMBTRACE(,RAMB)                                 0354 00595000
         LTR   @14,@14                                             0354 00596000
         BZ    @RF00354                                            0354 00597000
*         DO;                       /*                       @ZA29388*/ 00598000
*           RFY                                                    0356 00599000
*             RWORK1 RESTRICTED;    /*                       @ZA29388*/ 00600000
*           RWORK1=R15;             /* SAVE REG15            @ZA29388*/ 00601000
         LR    RWORK1,R15                                          0357 00602000
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/ 00603000
         L     @15,@CV01101                                        0358 00604000
         BALR  @14,@15                                             0358 00605000
*           GEN(DC X'000D');        /* TRACE ID              @ZA29388*/ 00606000
         DC X'000D'                                                     00607000
*           R15=RWORK1;             /* RESTORE REG15         @ZA29388*/ 00608000
         LR    R15,RWORK1                                          0360 00609000
*           RFY                                                    0361 00610000
*             RWORK1 UNRSTD;        /*                       @ZA29388*/ 00611000
*         END;                      /*                       @ZA29388*/ 00612000
*       IF R15^=ZERO THEN           /* SPLIT ERROR                   */ 00613000
@RF00354 LTR   R15,R15                                             0363 00614000
         BZ    @RF00363                                            0363 00615000
*         DO;                       /* YES.                          */ 00616000
*           IF R15=IXWRERR THEN     /* INDEX WRITE ERROR             */ 00617000
         C     R15,@CF00067                                        0365 00618000
         BE    @RT00365                                            0365 00619000
*             GO TO EXIT;           /* YES. EXIT                     */ 00620000
*           ELSE                    /*                               */ 00621000
*             DO;                   /* COULD NOT SPLIT               */ 00622000
*               RFY                                                0368 00623000
*                 R15 UNRSTD;       /*                       @X04SVES*/ 00624000
*               RBUFC=ICWBUFC;      /* POINT TO IDX BUFC             */ 00625000
         L     @10,AMBIWA(,RAMB)                                   0369 00626000
         L     RBUFC,ICWBUFC(,@10)                                 0369 00627000
*               RBUFC->BUFCMW=OFF;  /* RESET MUST WRITE              */ 00628000
         NI    BUFCMW(RBUFC),B'01111111'                           0370 00629000
*               RBUFC->BUFCVAL=OFF; /* RESET VALID CONTENTS FREE   0371 00630000
*                                      BUFFER                        */ 00631000
         NI    BUFCVAL(RBUFC),B'11111011'                          0371 00632000
*I06:                                                              0372 00633000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00634000
I06      DS    0H                                                  0373 00635000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00636000
         L     @15,@CV01029                                        0373 00637000
         BALR  @14,@15                                             0373 00638000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00639000
         BALR @11,0                                                     00640000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00641000
         USING *,@11                                                    00642000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00643000
         L     @11,=A(@PSTART)                                          00644000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00645000
         USING @PSTART,@11                                              00646000
*               END I06;            /* FREE BFR              @X04SVLP*/ 00647000
*               CALL GETSREC;       /* GET OLD SEQ. SET RECORD       */ 00648000
         BAL   @14,GETSREC                                         0379 00649000
*               RPARM1=ICWTPTR;     /* CURRENT SPLIT OFFSET          */ 00650000
         L     @10,AMBIWA(,RAMB)                                   0380 00651000
         L     RPARM1,ICWTPTR(,@10)                                0380 00652000
*               CALL FINDSP;        /* SCAN TO SET FOR ADVANCE       */ 00653000
         BAL   @14,FINDSP                                          0381 00654000
*               RFY                                                0382 00655000
*                 RWORK0 RSTD;      /*                       @X04SVES*/ 00656000
*               CALL LNEXTE;        /* MOVE TO NEXT ENTRY            */ 00657000
         BAL   @14,LNEXTE                                          0383 00658000
*               IMWCIMVN=IMWCIMVN+ONE+RWORK0;/* INCREMENT NO. CIS TO    00659000
*                                      MOVE BACK TO OLD CA   @X04SVES*/ 00660000
         L     @10,AMBIWA(,RAMB)                                   0384 00661000
         L     @10,ICWCHN(,@10)                                    0384 00662000
         LA    @05,1                                               0384 00663000
         AH    @05,IMWCIMVN(,@10)                                  0384 00664000
         ALR   @05,RWORK0                                          0384 00665000
         STH   @05,IMWCIMVN(,@10)                                  0384 00666000
*               RFY                                                0385 00667000
*                 RWORK0 UNRSTD;    /*                       @X04SVES*/ 00668000
*               GO TO SPLIT1;       /* TRY SPLIT AGAIN               */ 00669000
         B     SPLIT1                                              0386 00670000
*             END;                  /* END COULD NOT SPLIT           */ 00671000
*         END;                      /* END OF SPLIT ERROR            */ 00672000
*     END;                          /* END OF SPLIT SS RECORD        */ 00673000
@RF00363 DS    0H                                                  0390 00674000
*                                                                  0390 00675000
*   /*****************************************************************/ 00676000
*   /*                                                               */ 00677000
*   /* SET INFORMATION IN IMWA FOR IDA019RH (INDEX INSERT)           */ 00678000
*   /*                                                               */ 00679000
*   /*****************************************************************/ 00680000
*                                                                  0390 00681000
*   AMBLDTA->AMBIWA->DIWSAVE4=ZERO; /* SHOW CALL NOT FROM SF @X04SVES*/ 00682000
@RC00195 L     @10,RPLDACB(,RRPL)                                  0390 00683000
         L     @10,ACBAMBL(,@10)                                   0390 00684000
         L     @10,AMBLDTA(,@10)                                   0390 00685000
         L     @10,AMBIWA(,@10)                                    0390 00686000
         SLR   @05,@05                                             0390 00687000
         ST    @05,DIWSAVE4(,@10)                                  0390 00688000
*HLINSERT:                                                         0391 00689000
*   IMWIKEYP=ADDR(ICWKEY1);         /* POINT TO INSERT KEY           */ 00690000
HLINSERT L     @10,AMBIWA(,RAMB)                                   0391 00691000
         L     @05,ICWCHN(,@10)                                    0391 00692000
         LA    @15,ICWKEY1(,@10)                                   0391 00693000
         ST    @15,IMWIKEYP(,@05)                                  0391 00694000
*   RBUFC=ICWKEY1L;                 /* SET KEY LENGTH                */ 00695000
         LH    RBUFC,ICWKEY1L(,@10)                                0392 00696000
*   IMWIEL=RBUFC;                   /* F+L OF NEW ENTRY              */ 00697000
         STC   RBUFC,IMWIEL(,@05)                                  0393 00698000
*   IMWIPTR=ICWPRBA/AMDCINV;        /* OLD RECORD PTR                */ 00699000
         L     @14,AMBDSB(,RAMB)                                   0394 00700000
         L     @09,AMDCINV(,@14)                                   0394 00701000
         L     @07,ICWPRBA(,@10)                                   0394 00702000
         SLR   @06,@06                                             0394 00703000
         DR    @06,@09                                             0394 00704000
         ST    @07,IMWIPTR(,@05)                                   0394 00705000
*   IMWXPTR=ICWCRBA/AMDCINV;        /* NEW RECORD PTR                */ 00706000
         L     @07,ICWCRBA(,@10)                                   0395 00707000
         SLR   @06,@06                                             0395 00708000
         DR    @06,@09                                             0395 00709000
         ST    @07,IMWXPTR(,@05)                                   0395 00710000
*   IF AMDNIL=ONE THEN              /* ONLY 1 LEVEL OF INDEX         */ 00711000
         LA    @09,1                                               0396 00712000
         LH    @08,AMDNIL(,@14)                                    0396 00713000
         CR    @08,@09                                             0396 00714000
         BE    @RT00396                                            0396 00715000
*     GO TO BUILDHL;                /* YES. BUILD NEW HIGH LV        */ 00716000
*                                                                  0397 00717000
*   /*****************************************************************/ 00718000
*   /*                                                               */ 00719000
*   /* SET PARAMETERS AND CALL IDA019RB (INDEX SEARCH) TO LOCATE     */ 00720000
*   /* INSERT POINT IN NEXT HIGHER LEVEL.                            */ 00721000
*   /*                                                               */ 00722000
*   /*****************************************************************/ 00723000
*                                                                  0398 00724000
*   IXSILN=AMDNIL;                  /* INITIAL SEARCH LEVEL          */ 00725000
         L     @05,IMWIXSP(,@05)                                   0398 00726000
         STC   @08,IXSILN(,@05)                                    0398 00727000
*   IXSTLN=ICWLN+ONE;               /* FINAL SEARCH LEVEL            */ 00728000
         AH    @09,ICWLN(,@10)                                     0399 00729000
         STC   @09,IXSTLN(,@05)                                    0399 00730000
*   IXSSTRBA=AMDHLRBA;              /* INITIAL SEARCH RBA            */ 00731000
         L     @00,AMDHLRBA(,@14)                                  0400 00732000
         ST    @00,IXSSTRBA(,@05)                                  0400 00733000
*   IXSARG=ADDR(ICWKEY1);           /* PTR TO SEARCH ARG             */ 00734000
         ST    @15,IXSARG(,@05)                                    0401 00735000
*   IF RBUFC^=AMDKEYLN THEN         /* PADDING NEEDED                */ 00736000
         CH    RBUFC,AMDKEYLN(,@14)                                0402 00737000
         BE    @RF00402                                            0402 00738000
*     DO;                           /* YES                           */ 00739000
*       ICWKEY1(RBUFC+ONE:RBUFC+ONE)='FF'X;/* INSERT FF AT END       */ 00740000
         ALR   @10,RBUFC                                           0404 00741000
         MVI   ICWKEY1(@10),X'FF'                                  0404 00742000
*     END;                          /* END OF PAD                    */ 00743000
*   PLHISPLP=IMWIXSP;               /* PTR TO SEARCH PARM LIST       */ 00744000
@RF00402 L     @10,AMBIWA(,RAMB)                                   0406 00745000
         L     @10,ICWCHN(,@10)                                    0406 00746000
         L     @10,IMWIXSP(,@10)                                   0406 00747000
         ST    @10,PLHISPLP(,RPLH)                                 0406 00748000
*SEARCH:                            /*                               */ 00749000
*I07:                                                              0407 00750000
*   DO;                             /* IDACALL(IDA019RB)             */ 00751000
SEARCH   DS    0H                                                  0407 00752000
I07      DS    0H                                                  0408 00753000
*     CALL IDA019RB;                /* EXIT TO IDA019RB              */ 00754000
         L     @15,@CV01032                                        0408 00755000
         BALR  @14,@15                                             0408 00756000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00757000
         BALR @11,0                                                     00758000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00759000
         USING *,@11                                                    00760000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00761000
         L     @11,=A(@PSTART)                                          00762000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00763000
         USING @PSTART,@11                                              00764000
*   END I07;                        /* CALL SEARCH                   */ 00765000
*   IF RPLERREG^='00'X THEN         /* SEARCH ERROR                  */ 00766000
         CLI   RPLERREG(RRPL),0                                    0414 00767000
         BE    @RF00414                                            0414 00768000
*     DO;                           /* YES.                          */ 00769000
*WTERR:                             /* WRITE INDEX ERROR             */ 00770000
*       RFY                                                        0416 00771000
*         R15 RESTRICTED;           /* RESTRICT REGISTER R15         */ 00772000
WTERR    DS    0H                                                  0417 00773000
*       R15=IXWRERR;                /* SET ERROR CODE                */ 00774000
         LA    R15,4                                               0417 00775000
*EXIT:                                                             0418 00776000
*       GEN(IDARST14);              /* RESTORE R14                   */ 00777000
EXIT     IDARST14                                                       00778000
*       RETURN;                     /* RETURN TO CALLER              */ 00779000
@EL00001 DS    0H                                                  0419 00780000
@EF00001 DS    0H                                                  0419 00781000
@ER00001 BR    @14                                                 0419 00782000
*     END;                          /* END OF SEARCH ERROR           */ 00783000
*   RFY                                                            0421 00784000
*     R15 UNRSTD;                   /*                       @X04SVES*/ 00785000
*                                                                  0421 00786000
@RF00414 DS    0H                                                  0422 00787000
*   /*****************************************************************/ 00788000
*   /*                                                               */ 00789000
*   /* COMPLETE IMWA INFORMATION NEEDED BY IDA019RH                  */ 00790000
*   /*                                                               */ 00791000
*   /*****************************************************************/ 00792000
*                                                                  0422 00793000
*   IMWBUFP=IXSBUFC->BUFCBAD;       /* POINT TO IDX RECORD           */ 00794000
         L     @10,AMBIWA(,RAMB)                                   0422 00795000
         L     @10,ICWCHN(,@10)                                    0422 00796000
         L     @05,IMWIXSP(,@10)                                   0422 00797000
         L     @15,IXSBUFC(,@05)                                   0422 00798000
         L     @00,BUFCBAD(,@15)                                   0422 00799000
         ST    @00,IMWBUFP(,@10)                                   0422 00800000
*   IF IMWIEL<IXSPEC THEN           /* DETERMINE ENTRY L             */ 00801000
         CLC   IMWIEL(1,@10),IXSPEC(@05)                           0423 00802000
         BNL   @RF00423                                            0423 00803000
*     IMWIEL=ZERO;                  /* VALUE                         */ 00804000
         MVI   IMWIEL(@10),X'00'                                   0424 00805000
*   ELSE                            /*                               */ 00806000
*     IMWIEL=IMWIEL-IXSPEC;         /* L = TOTAL - F VALUE           */ 00807000
         B     @RC00423                                            0425 00808000
@RF00423 L     @10,AMBIWA(,RAMB)                                   0425 00809000
         L     @10,ICWCHN(,@10)                                    0425 00810000
         L     @05,IMWIXSP(,@10)                                   0425 00811000
         SLR   @00,@00                                             0425 00812000
         IC    @00,IMWIEL(,@10)                                    0425 00813000
         SLR   @15,@15                                             0425 00814000
         IC    @15,IXSPEC(,@05)                                    0425 00815000
         SLR   @00,@15                                             0425 00816000
         STC   @00,IMWIEL(,@10)                                    0425 00817000
*   RFY                                                            0426 00818000
*    (RWORK1,                                                      0426 00819000
*     RWORK2,                                                      0426 00820000
*     RWORK3) RSTD;                 /*                       @X04SVES*/ 00821000
@RC00423 DS    0H                                                  0427 00822000
*   RWORK3=IMWBUFP->IXHPTLS;        /* PICK UP MASK          @X04SVES*/ 00823000
         L     @10,AMBIWA(,RAMB)                                   0427 00824000
         L     @10,ICWCHN(,@10)                                    0427 00825000
         L     @15,IMWBUFP(,@10)                                   0427 00826000
         SLR   RWORK3,RWORK3                                       0427 00827000
         IC    RWORK3,IXHPTLS(,@15)                                0427 00828000
*   RWORK2=IXSHEP+LENGTH(IBFLPF)+LENGTH(IBFLPL);/* POINT TO POINTER     00829000
*                                      FIELD                 @X04SVES*/ 00830000
         L     @10,IMWIXSP(,@10)                                   0428 00831000
         LA    RWORK2,2                                            0428 00832000
         AL    RWORK2,IXSHEP(,@10)                                 0428 00833000
*   RWORK1=ZERO;                    /* CLEAR PICKUP REGISTER @X04SVES*/ 00834000
         SLR   RWORK1,RWORK1                                       0429 00835000
*   GEN(EX  RWORK3,GETPTR);         /* PICKUP PTR            @X04SVES*/ 00836000
         EX  RWORK3,GETPTR                                              00837000
*   IF(RWORK1^=IMWIPTR|AMBLDTA->AMBIWA->DIWSAVE4^=ZERO)&IMWRIPL=OFF     00838000
*     THEN                          /* PTR NOT IN RECORD OR SF CALL     00839000
*                                      BUT NOT RIPPLE TO HIGHER LEVEL   00840000
*                                                            @X04SVES*/ 00841000
         L     @10,AMBIWA(,RAMB)                                   0431 00842000
         L     @10,ICWCHN(,@10)                                    0431 00843000
         C     RWORK1,IMWIPTR(,@10)                                0431 00844000
         BNE   @GL00002                                            0431 00845000
         L     @10,RPLDACB(,RRPL)                                  0431 00846000
         L     @10,ACBAMBL(,@10)                                   0431 00847000
         L     @10,AMBLDTA(,@10)                                   0431 00848000
         L     @10,AMBIWA(,@10)                                    0431 00849000
         L     @10,DIWSAVE4(,@10)                                  0431 00850000
         LTR   @10,@10                                             0431 00851000
         BZ    @RF00431                                            0431 00852000
@GL00002 L     @10,AMBIWA(,RAMB)                                   0431 00853000
         L     @10,ICWCHN(,@10)                                    0431 00854000
         TM    IMWRIPL(@10),B'01000000'                            0431 00855000
         BNZ   @RF00431                                            0431 00856000
*     DO;                           /* YES                   @X04SVES*/ 00857000
*       IF AMBLDTA->AMBIWA->DIWSAVE4=ZERO THEN/* IS CALL FROM SF CASE   00858000
*                                      1                     @X04SVES*/ 00859000
         L     @15,RPLDACB(,RRPL)                                  0433 00860000
         L     @15,ACBAMBL(,@15)                                   0433 00861000
         L     @15,AMBLDTA(,@15)                                   0433 00862000
         L     @15,AMBIWA(,@15)                                    0433 00863000
         L     @00,DIWSAVE4(,@15)                                  0433 00864000
         LTR   @00,@00                                             0433 00865000
         BNZ   @RF00433                                            0433 00866000
*         IMWIPTR=RWORK1;           /* NO, MAKE INSERT PTR SAME AS 0434 00867000
*                                      EXISTING HIT POINTER  @X04SVES*/ 00868000
         ST    RWORK1,IMWIPTR(,@10)                                0434 00869000
*       ELSE                        /* SF CASE 1 CALL        @X04SVES*/ 00870000
*         DO;                       /*                       @X04SVES*/ 00871000
         B     @RC00433                                            0435 00872000
@RF00433 DS    0H                                                  0436 00873000
*           IMWIPTR=IMWXPTR;        /* EXCHANGE POINTERS     @X04SVES*/ 00874000
         L     @10,AMBIWA(,RAMB)                                   0436 00875000
         L     @10,ICWCHN(,@10)                                    0436 00876000
         L     @00,IMWXPTR(,@10)                                   0436 00877000
         ST    @00,IMWIPTR(,@10)                                   0436 00878000
*           IMWXPTR=RWORK1;         /* SET NEXT POINTER UNCHANGED  0437 00879000
*                                                            @X04SVES*/ 00880000
         ST    RWORK1,IMWXPTR(,@10)                                0437 00881000
*         END;                      /*                       @X04SVES*/ 00882000
*     END;                          /*                       @X04SVES*/ 00883000
@RC00433 DS    0H                                                  0440 00884000
*   RFY                                                            0440 00885000
*    (RWORK1,                                                      0440 00886000
*     RWORK2,                                                      0440 00887000
*     RWORK3) UNRSTD;               /*                       @X04SVES*/ 00888000
*                                                                  0440 00889000
@RF00431 DS    0H                                                  0441 00890000
*   /*****************************************************************/ 00891000
*   /*                                                               */ 00892000
*   /* CALL IDA019RH TO INSERT ENTRY INTO INDEX RECORD.              */ 00893000
*   /*                                                               */ 00894000
*   /*****************************************************************/ 00895000
*                                                                  0441 00896000
*   RPARM1=IXHLENT;                 /* SET HL INERT CODE             */ 00897000
         LA    RPARM1,8                                            0441 00898000
*I08:                                                              0442 00899000
*   DO;                             /* IDACALL(IDA019RH)             */ 00900000
I08      DS    0H                                                  0443 00901000
*     CALL IDA019RH;                /* EXIT TO IDA019RH              */ 00902000
         L     @15,@CV01033                                        0443 00903000
         BALR  @14,@15                                             0443 00904000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00905000
         BALR @11,0                                                     00906000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00907000
         USING *,@11                                                    00908000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00909000
         L     @11,=A(@PSTART)                                          00910000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00911000
         USING @PSTART,@11                                              00912000
*   END I08;                                                       0448 00913000
*   RFY                                                            0449 00914000
*     R15 RESTRICTED;                                              0449 00915000
*   RAMB=AMBLIX;                    /* POINT TO INDEX AMB            */ 00916000
         L     @14,RPLDACB(,RRPL)                                  0450 00917000
         L     @14,ACBAMBL(,@14)                                   0450 00918000
         L     RAMB,AMBLIX(,@14)                                   0450 00919000
*   IF R15=IMWNOFIT&IMWRIPL=OFF THEN/* DID INSERT FIT        @X04SVES*/ 00920000
         C     R15,@CF00062                                        0451 00921000
         BNE   @RF00451                                            0451 00922000
         L     @14,AMBIWA(,RAMB)                                   0451 00923000
         L     @10,ICWCHN(,@14)                                    0451 00924000
         TM    IMWRIPL(@10),B'01000000'                            0451 00925000
         BNZ   @RF00451                                            0451 00926000
*     DO;                           /* NO.                           */ 00927000
*       IMWSVIEL=ICWKEY1L;          /* SAVE LENGTH OF KEY            */ 00928000
         LH    @05,ICWKEY1L(,@14)                                  0453 00929000
         STC   @05,IMWSVIEL(,@10)                                  0453 00930000
*       IMWKEY1(1:AMDKEYLN)=        /* SAVE INSERT KEY IN            */ 00931000
*           ICWKEY1(1:AMDKEYLN);    /* IMWA                          */ 00932000
         L     @05,AMBDSB(,RAMB)                                   0454 00933000
         LH    @05,AMDKEYLN(,@05)                                  0454 00934000
         BCTR  @05,0                                               0454 00935000
         EX    @05,@SM01180                                        0454 00936000
*       RBUFC=IMWBUFP+IXHLEO;       /* POINT TO LAST ENTRY           */ 00937000
         L     @10,IMWBUFP(,@10)                                   0455 00938000
         LH    @09,IXHLEO(,@10)                                    0455 00939000
         LR    RBUFC,@10                                           0455 00940000
         ALR   RBUFC,@09                                           0455 00941000
*       RPARM1=RBUFC->IBFLPL;       /* PICK UP L VALUE               */ 00942000
         SLR   RPARM1,RPARM1                                       0456 00943000
         IC    RPARM1,IBFLPL(,RBUFC)                               0456 00944000
*       RPARM1=RPARM1+LENGTH(IXSELL);/* ADD LENGTH OF LL FIELD       */ 00945000
         LA    @05,2                                               0457 00946000
         ALR   RPARM1,@05                                          0457 00947000
*       RBUFC=IXHLEO-RPARM1;        /* OFFSET TO LAST ENTRY          */ 00948000
         SLR   @09,RPARM1                                          0458 00949000
         LR    RBUFC,@09                                           0458 00950000
*       RPARM1=(IXHLL-(IXHLEO-RPARM1))/TWO;/* MIDPOINT OFFSET        */ 00951000
         LR    @06,@09                                             0459 00952000
         LCR   @06,@06                                             0459 00953000
         LH    @10,IXHLL(,@10)                                     0459 00954000
         N     @10,@CF01171                                        0459 00955000
         ALR   @06,@10                                             0459 00956000
         SRDA  @06,32                                              0459 00957000
         DR    @06,@05                                             0459 00958000
         LR    RPARM1,@07                                          0459 00959000
*       RPARM1=RPARM1+RBUFC;        /* OFFSET FROM START             */ 00960000
         ALR   RPARM1,RBUFC                                        0460 00961000
*       RFY                                                        0461 00962000
*         R15 UNRSTD;                                              0461 00963000
*       ICWTPTR=ZERO;               /* ASSURE FINDSP WILL SPLT ONE 0462 00964000
*                                      ENTRY TO THE RIGHT            */ 00965000
         SLR   @10,@10                                             0462 00966000
         ST    @10,ICWTPTR(,@14)                                   0462 00967000
*       CALL FINDSP;                /* LOCATE SPLIT POINT            */ 00968000
*                                                                  0463 00969000
         BAL   @14,FINDSP                                          0463 00970000
*       /*************************************************************/ 00971000
*       /*                                                           */ 00972000
*       /* SET PARAMETERS FOR IDA019RJ (SPLIT INDEX RECORD)          */ 00973000
*       /*                                                           */ 00974000
*       /*************************************************************/ 00975000
*                                                                  0464 00976000
*       ICWBUFC=IXSBUFC;            /* SET PTR TO IDX BUFC           */ 00977000
         L     @10,AMBIWA(,RAMB)                                   0464 00978000
         L     @05,ICWCHN(,@10)                                    0464 00979000
         L     @05,IMWIXSP(,@05)                                   0464 00980000
         L     @05,IXSBUFC(,@05)                                   0464 00981000
         ST    @05,ICWBUFC(,@10)                                   0464 00982000
*       ICWCRBA=ICWBUFC->BUFCDDDD;  /* SET RBA TO SPLIT              */ 00983000
         L     @05,BUFCDDDD(,@05)                                  0465 00984000
         ST    @05,ICWCRBA(,@10)                                   0465 00985000
*       RPARM1=ZERO;                /* 1ST SPLIT REQUEST             */ 00986000
         SLR   RPARM1,RPARM1                                       0466 00987000
*SPLIT2:                            /* CALL SPLIT RECORD             */ 00988000
*I09:                                                              0467 00989000
*       DO;                         /* IDACALL(IDA019RJ)             */ 00990000
SPLIT2   DS    0H                                                  0467 00991000
I09      DS    0H                                                  0468 00992000
*         CALL IDA019RJ;            /* EXIT TO IDA019RJ              */ 00993000
         L     @15,@CV01034                                        0468 00994000
         BALR  @14,@15                                             0468 00995000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00996000
         BALR @11,0                                                     00997000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00998000
         USING *,@11                                                    00999000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01000000
         L     @11,=A(@PSTART)                                          01001000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01002000
         USING @PSTART,@11                                              01003000
*       END I09;                                                   0473 01004000
*       RFY                                                        0474 01005000
*         R15 RESTRICTED;                                          0474 01006000
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE    @ZA29388*/ 01007000
         L     @14,AMBTRACE(,RAMB)                                 0475 01008000
         LTR   @14,@14                                             0475 01009000
         BZ    @RF00475                                            0475 01010000
*         DO;                       /*                       @ZA29388*/ 01011000
*           RFY                                                    0477 01012000
*             RWORK1 RESTRICTED;    /*                       @ZA29388*/ 01013000
*           RWORK1=R15;             /* SAVE REG15            @ZA29388*/ 01014000
         LR    RWORK1,R15                                          0478 01015000
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/ 01016000
         L     @15,@CV01101                                        0479 01017000
         BALR  @14,@15                                             0479 01018000
*           GEN(DC X'000D');        /* TRACE ID              @ZA29388*/ 01019000
         DC X'000D'                                                     01020000
*           R15=RWORK1;             /* RESTORE REG15         @ZA29388*/ 01021000
         LR    R15,RWORK1                                          0481 01022000
*           RFY                                                    0482 01023000
*             RWORK1 UNRSTD;        /*                       @ZA29388*/ 01024000
*         END;                      /*                       @ZA29388*/ 01025000
*       IF R15^=ZERO THEN           /* COULD NOT SPLIT               */ 01026000
@RF00475 LTR   R15,R15                                             0484 01027000
         BZ    @RF00484                                            0484 01028000
*         DO;                       /* YES.                          */ 01029000
*           IF R15=IXWRERR THEN     /* WRITE ERROR                   */ 01030000
         C     R15,@CF00067                                        0486 01031000
         BE    @RT00486                                            0486 01032000
*             GO TO EXIT;           /* YES. EXIT                     */ 01033000
*                                                                  0487 01034000
*           /*********************************************************/ 01035000
*           /*                                                       */ 01036000
*           /* SPLIT COULD NOT BE MADE AT REQUESTED OFFSET. WILL MOVE*/ 01037000
*           /* OFFSET TO NEXT HIGHER KEY ENTRY AND TRY AGAIN         */ 01038000
*           /*                                                       */ 01039000
*           /*********************************************************/ 01040000
*                                                                  0488 01041000
*           RBUFC=ICWBUFC;          /* INDEX BUFC                    */ 01042000
         L     @14,AMBIWA(,RAMB)                                   0488 01043000
         L     RBUFC,ICWBUFC(,@14)                                 0488 01044000
*           RBUFC->BUFCMW=OFF;      /* RESET MUST WRITE FLAG         */ 01045000
         NI    BUFCMW(RBUFC),B'01111111'                           0489 01046000
*           RBUFC->BUFCVAL=OFF;     /* RESET VALID RBA FLAG          */ 01047000
         NI    BUFCVAL(RBUFC),B'11111011'                          0490 01048000
*I10:                                                              0491 01049000
*           DO;                     /* IDACALL(IDAFREEB)             */ 01050000
I10      DS    0H                                                  0492 01051000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 01052000
         L     @15,@CV01029                                        0492 01053000
         BALR  @14,@15                                             0492 01054000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01055000
         BALR @11,0                                                     01056000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01057000
         USING *,@11                                                    01058000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01059000
         L     @11,=A(@PSTART)                                          01060000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01061000
         USING @PSTART,@11                                              01062000
*           END I10;                /* FREE BFR              @X04SVLP*/ 01063000
*           CALL GETSREC;           /* GET OLD INDEX RECORD          */ 01064000
         BAL   @14,GETSREC                                         0498 01065000
*           CALL LNEXTE;            /* LOCATE NEXT ENTRY             */ 01066000
         BAL   @14,LNEXTE                                          0499 01067000
*           GO TO SPLIT2;           /* TRY SPLIT AGAIN               */ 01068000
         B     SPLIT2                                              0500 01069000
*           RFY                                                    0501 01070000
*             R15 UNRSTD;           /* RELEASE R15                   */ 01071000
*         END;                      /* END OF COULD NOT SPLIT        */ 01072000
*       IMWRIPL=ON;                 /* INDICATE RIPPLE NEEDED        */ 01073000
*                                                                  0503 01074000
@RF00484 L     @10,AMBIWA(,RAMB)                                   0503 01075000
         L     @05,ICWCHN(,@10)                                    0503 01076000
         OI    IMWRIPL(@05),B'01000000'                            0503 01077000
*       /*************************************************************/ 01078000
*       /*                                                           */ 01079000
*       /* SET PARAMETERS TO LOCATE INSERT POINT. START SEARCH WITH  */ 01080000
*       /* OLD RECORD.                                               */ 01081000
*       /*                                                           */ 01082000
*       /*************************************************************/ 01083000
*                                                                  0504 01084000
*       IXSILN=ICWLN;               /* INITIAL SEARCH LEVEL          */ 01085000
         L     @15,IMWIXSP(,@05)                                   0504 01086000
         LH    @14,ICWLN(,@10)                                     0504 01087000
         STC   @14,IXSILN(,@15)                                    0504 01088000
*       IXSTLN=ICWLN;               /* FINAL SEARCH LEVEL            */ 01089000
         STC   @14,IXSTLN(,@15)                                    0505 01090000
*       IXSSTRBA=ICWPRBA;           /* INITIAL SEARCH RBA            */ 01091000
         L     @10,ICWPRBA(,@10)                                   0506 01092000
         ST    @10,IXSSTRBA(,@15)                                  0506 01093000
*       IXSARG=ADDR(IMWKEY1);       /* SEARCH ARG                    */ 01094000
         LA    @10,IMWKEY1(,@05)                                   0507 01095000
         ST    @10,IXSARG(,@15)                                    0507 01096000
*       IMWIKEYP=IXSARG;            /* POINT TO INSERT KEY           */ 01097000
         ST    @10,IMWIKEYP(,@05)                                  0508 01098000
*       IMWIEL=IMWSVIEL;            /* RESTORE KEY LENGTH            */ 01099000
         IC    @10,IMWSVIEL(,@05)                                  0509 01100000
         STC   @10,IMWIEL(,@05)                                    0509 01101000
*       GO TO SEARCH;               /* GO TO SEARCH INDEX            */ 01102000
         B     SEARCH                                              0510 01103000
*     END;                          /* END OF ENTRY WON'T FIT        */ 01104000
*   ELSE                            /*                       @X04SVES*/ 01105000
*     DO;                           /*                       @X04SVES*/ 01106000
@RF00451 DS    0H                                                  0513 01107000
*       RFY                                                        0513 01108000
*         R15 RSTD;                 /*                       @X04SVES*/ 01109000
*       IF R15=IMWNOFIT&IMWBUFP->IXHLV=TWO THEN/* IF NO FIT AND LEVEL   01110000
*                                      2                     @X04SVES*/ 01111000
         C     R15,@CF00062                                        0514 01112000
         BNE   @RF00514                                            0514 01113000
         L     @14,AMBIWA(,RAMB)                                   0514 01114000
         L     @14,ICWCHN(,@14)                                    0514 01115000
         L     @10,IMWBUFP(,@14)                                   0514 01116000
         CLI   IXHLV(@10),2                                        0514 01117000
         BNE   @RF00514                                            0514 01118000
*         DO;                       /*                       @X04SVES*/ 01119000
*           AMBLDTA->AMBIWA->DIWSAVE1=/* SAVE RBA            @X04SVES*/ 01120000
*               IXSBUFC->BUFCDDDD;  /* IN CASE SF IS CALLER  @X04SVES*/ 01121000
         L     @10,RPLDACB(,RRPL)                                  0516 01122000
         L     @10,ACBAMBL(,@10)                                   0516 01123000
         L     @10,AMBLDTA(,@10)                                   0516 01124000
         L     @10,AMBIWA(,@10)                                    0516 01125000
         L     @14,IMWIXSP(,@14)                                   0516 01126000
         L     @14,IXSBUFC(,@14)                                   0516 01127000
         L     @14,BUFCDDDD(,@14)                                  0516 01128000
         ST    @14,DIWSAVE1(,@10)                                  0516 01129000
*           AMBLDTA->AMBIWA->DIWFSPF=ON;/* SET FLAG          @X04SVES*/ 01130000
         OI    DIWFSPF(@10),B'10000000'                            0517 01131000
*         END;                      /*                       @X04SVES*/ 01132000
*       RFY                                                        0519 01133000
*         R15 UNRSTD;               /*                       @X04SVES*/ 01134000
@RF00514 DS    0H                                                  0520 01135000
*     END;                          /*                       @X04SVES*/ 01136000
*                                                                  0521 01137000
*   /*****************************************************************/ 01138000
*   /*                                                               */ 01139000
*   /* INSERT COMPLETE. WRITE INDEX RECORD                           */ 01140000
*   /*                                                               */ 01141000
*   /*****************************************************************/ 01142000
*                                                                  0521 01143000
*WRITE:                                                            0521 01144000
*I11:                                                              0521 01145000
*   DO;                             /* IDACALL(IWRITE)               */ 01146000
WRITE    DS    0H                                                  0521 01147000
I11      DS    0H                                                  0522 01148000
*     CALL IWRITE;                  /* EXIT TO IWRITE                */ 01149000
         BAL   @14,IWRITE                                          0522 01150000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01151000
         BALR @11,0                                                     01152000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01153000
         USING *,@11                                                    01154000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01155000
         L     @11,=A(@PSTART)                                          01156000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01157000
         USING @PSTART,@11                                              01158000
*   END I11;                        /* WRITE INDEX RECORD            */ 01159000
*   IF IMWRIPL=OFF THEN             /* RIPPLE REQUIRED               */ 01160000
         L     @10,AMBIWA(,RAMB)                                   0528 01161000
         L     @05,ICWCHN(,@10)                                    0528 01162000
         TM    IMWRIPL(@05),B'01000000'                            0528 01163000
         BNZ   @RF00528                                            0528 01164000
*     DO;                           /* NO.                           */ 01165000
*       IF IMWNEWHL=ON THEN         /* NEW HIGH LEVEL BUILT          */ 01166000
         TM    IMWNEWHL(@05),B'10000000'                           0530 01167000
         BNO   @RF00530                                            0530 01168000
*         DO;                       /* YES.                          */ 01169000
*           IMWNEWHL=OFF;           /* RESET NEW HL FLAG             */ 01170000
         NI    IMWNEWHL(@05),B'01111111'                           0532 01171000
*           AMDNIL=AMDNIL+ONE;      /* INCREMENT NO. OF LEVELS       */ 01172000
         L     @05,AMBDSB(,RAMB)                                   0533 01173000
         LA    @00,1                                               0533 01174000
         AH    @00,AMDNIL(,@05)                                    0533 01175000
         STH   @00,AMDNIL(,@05)                                    0533 01176000
*           AMDHLRBA=ICWCRBA;       /* SET NEW HIGH LV RBA           */ 01177000
         L     @10,ICWCRBA(,@10)                                   0534 01178000
         ST    @10,AMDHLRBA(,@05)                                  0534 01179000
*           PLHEOVR=AMBEOVUC;       /* UPDATE CATALOG CODE           */ 01180000
         MVI   PLHEOVR(RPLH),B'00000100'                           0535 01181000
*I12:                                                              0536 01182000
*           DO;                     /* IDACALL(IDAEOVIF)             */ 01183000
I12      DS    0H                                                  0537 01184000
*             CALL IDAEOVIF;        /* EXIT TO IDAEOVIF              */ 01185000
         L     @15,@CV01028                                        0537 01186000
         BALR  @14,@15                                             0537 01187000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01188000
         BALR @11,0                                                     01189000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01190000
         USING *,@11                                                    01191000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01192000
         L     @11,=A(@PSTART)                                          01193000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01194000
         USING @PSTART,@11                                              01195000
*           END I12;                                               0542 01196000
*         END;                      /* END OF NEW HL PROCESS         */ 01197000
*       RPARM1=IMWCIMVN;            /* NO. OF CIS TO MOVE BACK       */ 01198000
@RF00530 L     @10,AMBIWA(,RAMB)                                   0544 01199000
         L     @10,ICWCHN(,@10)                                    0544 01200000
         LH    RPARM1,IMWCIMVN(,@10)                               0544 01201000
*       PLHISPLP=ADDR(PLHIXSPL);    /* RESTORE POINTER TO INDEX    0545 01202000
*                                      SEARCH PARAMETER LIST @X04SVES*/ 01203000
         LA    @10,PLHIXSPL(,RPLH)                                 0545 01204000
         ST    @10,PLHISPLP(,RPLH)                                 0545 01205000
*       RFY                                                        0546 01206000
*         R15 RSTD;                                                0546 01207000
*       R15=ZERO;                   /* GOOD RETURN CODE              */ 01208000
         SLR   R15,R15                                             0547 01209000
*       GEN(IDARST14);              /* RESTORE R14                   */ 01210000
         IDARST14                                                       01211000
*       RETURN;                     /* RETURN TO CALLER              */ 01212000
         B     @EL00001                                            0549 01213000
*       RFY                                                        0550 01214000
*         R15 UNRSTD;                                              0550 01215000
*     END;                          /* END OF NOT RIPPLE             */ 01216000
*   IMWRIPL=OFF;                    /* RESET RIPPLE FLAG             */ 01217000
@RF00528 L     @10,AMBIWA(,RAMB)                                   0552 01218000
         L     @05,ICWCHN(,@10)                                    0552 01219000
         NI    IMWRIPL(@05),B'10111111'                            0552 01220000
*   IF ICWLN^=AMDNIL THEN           /*                               */ 01221000
         L     @05,AMBDSB(,RAMB)                                   0553 01222000
         CLC   ICWLN(2,@10),AMDNIL(@05)                            0553 01223000
         BE    @RF00553                                            0553 01224000
*     DO;                           /*                       @X04SVES*/ 01225000
*       AMBLDTA->AMBIWA->DIWSAVE4=ZERO;/* ASSURE CALL IS SHOWN AS  0555 01226000
*                                      FROM RI               @X04SVES*/ 01227000
         L     @10,RPLDACB(,RRPL)                                  0555 01228000
         L     @10,ACBAMBL(,@10)                                   0555 01229000
         L     @10,AMBLDTA(,@10)                                   0555 01230000
         L     @10,AMBIWA(,@10)                                    0555 01231000
         SLR   @05,@05                                             0555 01232000
         ST    @05,DIWSAVE4(,@10)                                  0555 01233000
*       GO TO HLINSERT;             /* RIPPLE INSERT                 */ 01234000
         B     HLINSERT                                            0556 01235000
*     END;                          /*                       @X04SVES*/ 01236000
*                                                                  0557 01237000
*   /*****************************************************************/ 01238000
*   /*                                                               */ 01239000
*   /* A NEW HIGH LEVEL RECORD MUST BE BUILD                         */ 01240000
*   /*                                                               */ 01241000
*   /*****************************************************************/ 01242000
*                                                                  0558 01243000
*BUILDHL:                                                          0558 01244000
*   IMWNEWHL=ON;                    /* NEW HIGH LEVEL NEEDED         */ 01245000
@RF00553 DS    0H                                                  0558 01246000
BUILDHL  L     @10,AMBIWA(,RAMB)                                   0558 01247000
         L     @05,ICWCHN(,@10)                                    0558 01248000
         OI    IMWNEWHL(@05),B'10000000'                           0558 01249000
*   IMWIPTR=ICWPRBA/AMDCINV;        /*                               */ 01250000
         L     @15,AMBDSB(,RAMB)                                   0559 01251000
         L     @15,AMDCINV(,@15)                                   0559 01252000
         L     @07,ICWPRBA(,@10)                                   0559 01253000
         SLR   @06,@06                                             0559 01254000
         DR    @06,@15                                             0559 01255000
         ST    @07,IMWIPTR(,@05)                                   0559 01256000
*   IMWXPTR=ICWCRBA/AMDCINV;        /*                               */ 01257000
         L     @07,ICWCRBA(,@10)                                   0560 01258000
         SLR   @06,@06                                             0560 01259000
         DR    @06,@15                                             0560 01260000
         ST    @07,IMWXPTR(,@05)                                   0560 01261000
*   ICWLN=ICWLN+ONE;                /*                               */ 01262000
         LA    @05,1                                               0561 01263000
         AH    @05,ICWLN(,@10)                                     0561 01264000
         STH   @05,ICWLN(,@10)                                     0561 01265000
*I13:                                                              0562 01266000
*   DO;                             /* IDACALL(IDANEWRD)             */ 01267000
I13      DS    0H                                                  0563 01268000
*     CALL IDANEWRD;                /* EXIT TO IDANEWRD              */ 01269000
         L     @15,@CA01084                                        0563 01270000
         BALR  @14,@15                                             0563 01271000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01272000
         BALR @11,0                                                     01273000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01274000
         USING *,@11                                                    01275000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01276000
         L     @11,=A(@PSTART)                                          01277000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01278000
         USING @PSTART,@11                                              01279000
*   END I13;                        /* INIT NEW RECORD       @X04SVRQ*/ 01280000
*   IF RPLERREG^=ZERO THEN          /* IF ERROR IN NEW RECORD        */ 01281000
         CLI   RPLERREG(RRPL),0                                    0569 01282000
         BNE   @RT00569                                            0569 01283000
*     GO TO WTERR;                  /* EXIT                          */ 01284000
*   RFY                                                            0571 01285000
*    (RWORK0,                                                      0571 01286000
*     RWORK2,                                                      0571 01287000
*     RWORK3,                                                      0571 01288000
*     RWORK4,                                                      0571 01289000
*     RWORK5) RSTD;                                                0571 01290000
*   RFY                                                            0572 01291000
*     IDAIXH BASED(RWORK2);                                        0572 01292000
*   RWORK2=IMWBUFP;                 /* POINT TO START OF REC.        */ 01293000
         L     @10,AMBIWA(,RAMB)                                   0573 01294000
         L     @05,ICWCHN(,@10)                                    0573 01295000
         L     RWORK2,IMWBUFP(,@05)                                0573 01296000
*   IXHFLPLN=LENGTH(IBFLP3)+LENGTH(IBFLPL)/* SET LENGTH OF F,L,PTR   */ 01297000
*       +LENGTH(IBFLPF);            /* FIELDS IN HEADER              */ 01298000
         LA    @15,5                                               0574 01299000
         STC   @15,IXHFLPLN(,RWORK2)                               0574 01300000
*   IXHPTLS=T3BMASK;                /* SET PTR LENGTH MASK           */ 01301000
         MVI   IXHPTLS(RWORK2),B'00000111'                         0575 01302000
*   IXHLV=AMDNIL+ONE;               /* SET LEVEL NUMBER              */ 01303000
         L     @14,AMBDSB(,RAMB)                                   0576 01304000
         LA    @10,1                                               0576 01305000
         AH    @10,AMDNIL(,@14)                                    0576 01306000
         STC   @10,IXHLV(,RWORK2)                                  0576 01307000
*   IXHFSO=LENGTH(IDAIXH);          /* SET INSERT SPACE OFFSET       */ 01308000
*                                                                  0577 01309000
         MVC   IXHFSO(2,RWORK2),@CH00088                           0577 01310000
*   /*****************************************************************/ 01311000
*   /*                                                               */ 01312000
*   /* BUILD FIRST ENTRY IN NEW HIGH LEVEL RECORD, MAKE IT A SECTION */ 01313000
*   /* ENTRY.                                                        */ 01314000
*   /*                                                               */ 01315000
*   /*****************************************************************/ 01316000
*                                                                  0578 01317000
*   RPARM1=IXHLL-IXHFLPLN;          /* OFFSET TO 1ST ENTRY F         */ 01318000
         LCR   @15,@15                                             0578 01319000
         LH    RPARM1,IXHLL(,RWORK2)                               0578 01320000
         N     RPARM1,@CF01171                                     0578 01321000
         ALR   @15,RPARM1                                          0578 01322000
         LR    RPARM1,@15                                          0578 01323000
*   IXHSEO=RPARM1;                  /* SET VALUE IN HEADER           */ 01324000
         STH   RPARM1,IXHSEO(,RWORK2)                              0579 01325000
*   RPARM1=RPARM1+RWORK2;           /* POINT TO F LOCATION           */ 01326000
         ALR   RPARM1,RWORK2                                       0580 01327000
*   RWORK4=ICWKEY1L;                /* PICK UP L VALUE               */ 01328000
         L     @10,AMBIWA(,RAMB)                                   0581 01329000
         LH    RWORK4,ICWKEY1L(,@10)                               0581 01330000
*   RPARM1->IBFLPL=RWORK4;          /* SET L IN ENTRY                */ 01331000
         STC   RWORK4,IBFLPL(,RPARM1)                              0582 01332000
*   RWORK3=IMWIPTR;                 /* PICK UP PTR                   */ 01333000
         L     RWORK3,IMWIPTR(,@05)                                0583 01334000
*   GEN SETS(IBFLP3)(STCM RWORK3,7,IBFLP3(RPARM1));/* SET PTR IN ENT.*/ 01335000
         STCM RWORK3,7,IBFLP3(RPARM1)                                   01336000
*   RPARM1=RPARM1-RWORK4;           /* POSITION TO KEY FIELD         */ 01337000
         SLR   RPARM1,RWORK4                                       0585 01338000
*   RPARM1->KEY(1:RWORK4)=          /* MOVE KEY INTO                 */ 01339000
*       ICWKEY1(1:RWORK4);          /* ENTRY                         */ 01340000
         LR    @10,RWORK4                                          0586 01341000
         BCTR  @10,0                                               0586 01342000
         L     @05,AMBIWA(,RAMB)                                   0586 01343000
         EX    @10,@SM01185                                        0586 01344000
*   RPARM1=RPARM1-LENGTH(IXSELL);   /* POSITION TO LL FIELD          */ 01345000
         LA    @10,2                                               0587 01346000
         SLR   RPARM1,@10                                          0587 01347000
*   RWORK4=RWORK4+IXHFLPLN          /* COMPUTE OFFSET TO NEXT        */ 01348000
*       +LENGTH(IXSELL);            /* ENTRY F FIELD                 */ 01349000
         SLR   @15,@15                                             0588 01350000
         IC    @15,IXHFLPLN(,RWORK2)                               0588 01351000
         LR    @14,RWORK4                                          0588 01352000
         ALR   @14,@15                                             0588 01353000
         ALR   @14,@10                                             0588 01354000
         LR    RWORK4,@14                                          0588 01355000
*   RPARM1->IXSELL=RWORK4;          /* SET LL VALUE IN ENTRY         */ 01356000
         STCM  RWORK4,3,IXSELL(RPARM1)                             0589 01357000
*   RPARM1=RPARM1-IXHFLPLN;         /* POSITION TO NEXT ENTRY        */ 01358000
         SLR   RPARM1,@15                                          0590 01359000
*   RWORK3=IMWXPTR;                 /* PICK UP PTR                   */ 01360000
         L     @10,ICWCHN(,@05)                                    0591 01361000
         L     RWORK3,IMWXPTR(,@10)                                0591 01362000
*   GEN SETS(IBFLP3)(STCM RWORK3,7,IBFLP3(RPARM1));/* SET PTR IN ENT */ 01363000
         STCM RWORK3,7,IBFLP3(RPARM1)                                   01364000
*   IXHLEO=RPARM1-RWORK2;           /* SET OFFSET TO LAST ENTRY IN 0593 01365000
*                                      HEADER                        */ 01366000
         LR    @10,RPARM1                                          0593 01367000
         SLR   @10,RWORK2                                          0593 01368000
         STH   @10,IXHLEO(,RWORK2)                                 0593 01369000
*   GO TO WRITE;                    /* WRITE HIGH LEVEL              */ 01370000
         B     WRITE                                               0594 01371000
*   GEN;                                                           0595 01372000
STOREPT  STCM  RPARM1,@00,@00(RWORK2)   /*                           */ 01373000
ZEROK    XC    @00(@00,RWORK1),@00(RWORK1)  /*                       */ 01374000
GETPTR   ICM   RWORK1,@00,@00(RWORK2)  /*                    @X04SVES*/ 01375000
*   RFY                                                            0596 01376000
*    (RWORK0,                                                      0596 01377000
*     RWORK2,                                                      0596 01378000
*     RWORK3,                                                      0596 01379000
*     RWORK4,                                                      0596 01380000
*     RWORK5) UNRSTD;                                              0596 01381000
*   RFY                                                            0597 01382000
*     IDAIXH BASED(IMWBUFP);                                       0597 01383000
*                                                                  0598 01384000
*/*  *****************************************************************/ 01385000
*/*   EXTKEY SUBROUTINE                                              */ 01386000
*/*    FUNCTION - EXTRACT SECTION ENTRY AT OFFSET ICWPSEO WITHIN     */ 01387000
*/*               RECORD.                                            */ 01388000
*/*    INPUT -                                                       */ 01389000
*/*           ICWPSEO - OFFSET FROM START OF RECORD TO ENTRY TO      */ 01390000
*/*                     EXTRACT.                                     */ 01391000
*/*           RPARM1 - POINTER TO AREA WHERE KEY IS RETURNED         */ 01392000
*/*    OUTPUT-                                                       */ 01393000
*/*            UNFRONT COMPRESSED KEY IN AREA POINTED TO BY RPARM1   */ 01394000
*/*                                                                  */ 01395000
*/*            RWORK1 - ENTRY F VALUE                                */ 01396000
*/*            RWORK2 - ENTRY L VALUE                                */ 01397000
*/*            RWORK3 - OFFSET FROM THIS ENTRY TO NEXT SECTION ENTRY */ 01398000
*/*                                                                  */ 01399000
*/*  *****************************************************************/ 01400000
*                                                                  0598 01401000
*EXTKEY:                                                           0598 01402000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0598 01403000
         B     @PB00002                                            0598 01404000
EXTKEY   DS    0H                                                  0599 01405000
*   RFY                                                            0599 01406000
*    (RWORK1,                                                      0599 01407000
*     RWORK2,                                                      0599 01408000
*     RWORK3,                                                      0599 01409000
*     R14) RSTD;                                                   0599 01410000
*   RBUFC=IMWBUFP+ICWPSEO;          /* POINT TO SECTION ENTRY        */ 01411000
         L     @15,AMBIWA(,RAMB)                                   0600 01412000
         L     @10,ICWCHN(,@15)                                    0600 01413000
         LH    RBUFC,ICWPSEO(,@15)                                 0600 01414000
         AL    RBUFC,IMWBUFP(,@10)                                 0600 01415000
*   RWORK1=RBUFC->IBFLPF;           /* PICK UP F                     */ 01416000
         SLR   RWORK1,RWORK1                                       0601 01417000
         IC    RWORK1,IBFLPF(,RBUFC)                               0601 01418000
*   RWORK2=RBUFC->IBFLPL;           /* PICK UP L                     */ 01419000
         SLR   RWORK2,RWORK2                                       0602 01420000
         IC    RWORK2,IBFLPL(,RBUFC)                               0602 01421000
*   RWORK3=RBUFC-RWORK2;            /* POINT TO KEY                  */ 01422000
         LR    RWORK3,RBUFC                                        0603 01423000
         SLR   RWORK3,RWORK2                                       0603 01424000
*   IF RWORK2^=ZERO THEN            /* ANY KEY CHARACTERS            */ 01425000
         LTR   RWORK2,RWORK2                                       0604 01426000
         BZ    @RF00604                                            0604 01427000
*     RPARM1->KEY(RWORK1+1:RWORK1+RWORK2)=/* YES. MOVE KEY           */ 01428000
*         RWORK3->KEY(1:RWORK2);    /* CHARACTERS                    */ 01429000
         LR    @15,RPARM1                                          0605 01430000
         ALR   @15,RWORK1                                          0605 01431000
         LR    @10,RWORK2                                          0605 01432000
         BCTR  @10,0                                               0605 01433000
         EX    @10,@SM01187                                        0605 01434000
*   RWORK3=RWORK3-LENGTH(IXSELL);   /* LOCATE LL FIELD               */ 01435000
@RF00604 BCTR  RWORK3,0                                            0606 01436000
         BCTR  RWORK3,0                                            0606 01437000
*   RWORK3=RWORK3->IXSELL;          /* OFFSET TO NEXT SECTION        */ 01438000
         SLR   @15,@15                                             0607 01439000
         ICM   @15,3,IXSELL(RWORK3)                                0607 01440000
         LR    RWORK3,@15                                          0607 01441000
*   RETURN;                         /* RETURN TO CALLER              */ 01442000
@EL00002 DS    0H                                                  0608 01443000
@EF00002 DS    0H                                                  0608 01444000
@ER00002 BR    @14                                                 0608 01445000
*   RFY                                                            0609 01446000
*    (RWORK1,                                                      0609 01447000
*     RWORK2,                                                      0609 01448000
*     RWORK3,                                                      0609 01449000
*     R14) UNRSTD;                  /*                               */ 01450000
*   END EXTKEY;                     /* END OF EXTRACT KEY            */ 01451000
*                                                                  0611 01452000
*   /*****************************************************************/ 01453000
*   /*                                                               */ 01454000
*   /* NEWRCRD SUBROUTINE FUNCTION - OBTAIN RBA AND BUFFER FOR A NEW */ 01455000
*   /* INDEX RECORD. ZERO THE BUFFER, SET CIDF,RDF AND IXHLL INPUT - */ 01456000
*   /* ICWLN = LEVEL NUMBER OF NEW RECORD OUTPUT- IXSBUFC = POINTER  */ 01457000
*   /* TO BUFC OF NEW RECORD IMWBUFP = POINTER TO START OF NEW ROCORD*/ 01458000
*   /* BUFFER                                                        */ 01459000
*   /*                                                               */ 01460000
*   /*****************************************************************/ 01461000
*                                                                  0611 01462000
*IDANEWRD:                                                         0611 01463000
*   ENTRY;                          /*                       @X04SVRQ*/ 01464000
@EP00611 DS    0H                                                  0611 01465000
@EC00611 DS    0H                                                  0612 01466000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01467000
         IDASVR14                                                       01468000
*   RFY                                                            0613 01469000
*     RWORK1 RSTD;                                                 0613 01470000
*   RWORK1=AMBIWA;                  /* POINT TO ICWA OBTAIN RBA FOR     01471000
*                                      NEW HL                        */ 01472000
         L     RWORK1,AMBIWA(,RAMB)                                0614 01473000
*I14:                                                              0615 01474000
*   DO;                             /* IDACALL(IDAAQR)               */ 01475000
I14      DS    0H                                                  0616 01476000
*     CALL IDAAQR;                  /* EXIT TO IDAAQR                */ 01477000
         L     @15,@CV01027                                        0616 01478000
         BALR  @14,@15                                             0616 01479000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01480000
         BALR @11,0                                                     01481000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01482000
         USING *,@11                                                    01483000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01484000
         L     @11,=A(@PSTART)                                          01485000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01486000
         USING @PSTART,@11                                              01487000
*   END I14;                        /* GET EMPTY BUFFER              */ 01488000
*   RFY                                                            0622 01489000
*     RWORK1 UNRSTD;                /*                       @X04SVES*/ 01490000
*I15:                                                              0623 01491000
*   DO;                             /* IDACALL(IDAGNFL)              */ 01492000
I15      DS    0H                                                  0624 01493000
*     CALL IDAGNFL;                 /* EXIT TO IDAGNFL               */ 01494000
         L     @15,@CV01030                                        0624 01495000
         BALR  @14,@15                                             0624 01496000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01497000
         BALR @11,0                                                     01498000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01499000
         USING *,@11                                                    01500000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01501000
         L     @11,=A(@PSTART)                                          01502000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01503000
         USING @PSTART,@11                                              01504000
*   END I15;                        /*                               */ 01505000
*   IF RPLERREG^=ZERO THEN          /* ANY ERRORS            @X04SVES*/ 01506000
         CLI   RPLERREG(RRPL),0                                    0630 01507000
         BE    @RF00630                                            0630 01508000
*     DO;                           /* YES                   @X04SVES*/ 01509000
*       GEN(IDARST14);              /* RESTORE REG 14        @X04SVES*/ 01510000
         IDARST14                                                       01511000
*       RETURN;                     /* RETURN                @X04SVES*/ 01512000
         B     @EL00001                                            0633 01513000
*     END;                          /*                       @X04SVES*/ 01514000
*   RFY                                                            0635 01515000
*     RWORK2 RSTD;                  /*                       @X04SVES*/ 01516000
@RF00630 DS    0H                                                  0636 01517000
*   RWORK2=ADDR(IMWISWKA);          /* POINT TO SEARCH PARAMETER LIST   01518000
*                                                            @X04SVES*/ 01519000
         L     @10,AMBIWA(,RAMB)                                   0636 01520000
         L     @05,ICWCHN(,@10)                                    0636 01521000
         LA    RWORK2,IMWISWKA(,@05)                               0636 01522000
*   RWORK2->IXSBUFC=RBUFC;          /* SET POINTER TO INDEX BUFC   0637 01523000
*                                                            @X04SVES*/ 01524000
         ST    RBUFC,IXSBUFC(,RWORK2)                              0637 01525000
*   RFY                                                            0638 01526000
*     RWORK2 UNRSTD;                /*                       @X04SVES*/ 01527000
*   RBUFC->BUFCDDDD=ICWCRBA;        /* SET RBA IN BUFC               */ 01528000
         L     @10,ICWCRBA(,@10)                                   0639 01529000
         ST    @10,BUFCDDDD(,RBUFC)                                0639 01530000
*   RBUFC->BUFXIRBA=ICWCRBA;        /* SET XCL RBA           @X04SVES*/ 01531000
         ST    @10,BUFXIRBA(,RBUFC)                                0640 01532000
*   RBUFC->BUFCEXC=ON;              /* SET XCL CTL           @X04SVES*/ 01533000
         OI    BUFCEXC(RBUFC),B'00000010'                          0641 01534000
*   RFY                                                            0642 01535000
*     RWORK0 RSTD;                  /*                               */ 01536000
*   RFY                                                            0643 01537000
*    (RWORK2,                                                      0643 01538000
*     RWORK3,                                                      0643 01539000
*     RWORK4,                                                      0643 01540000
*     RWORK5) RSTD;                 /*                               */ 01541000
*   RWORK2=RBUFC->BUFCBAD;          /* PTR TO BUFFER                 */ 01542000
         L     RWORK2,BUFCBAD(,RBUFC)                              0644 01543000
*   IMWBUFP=RWORK2;                 /* POINT TO BUFFER START         */ 01544000
         ST    RWORK2,IMWBUFP(,@05)                                0645 01545000
*   RWORK0=AMDCINV;                 /* CONTROL INTERVAL SIZE         */ 01546000
         L     @10,AMBDSB(,RAMB)                                   0646 01547000
         L     RWORK0,AMDCINV(,@10)                                0646 01548000
*   RWORK5=ZERO;                    /* ZERO PAD                      */ 01549000
         SLR   RWORK5,RWORK5                                       0647 01550000
*   RWORK3=RWORK0;                  /* LENGTH FOR MVCL               */ 01551000
         LR    RWORK3,RWORK0                                       0648 01552000
*   GEN(MVCL RWORK2,RWORK4);        /* ZERO BUFFER                   */ 01553000
         MVCL RWORK2,RWORK4                                             01554000
*   RWORK2=RBUFC->BUFCBAD;          /* POINT TO BUFFER               */ 01555000
         L     RWORK2,BUFCBAD(,RBUFC)                              0650 01556000
*   RESPECIFY                                                      0651 01557000
*     IDAIXH BASED(RWORK2);         /* ADDRESSABILITY                */ 01558000
*   IXHLL=RWORK0-LENGTH(IDACIDF)    /* SET RECORD LENGTH             */ 01559000
*       -LENGTH(IDARDF);            /* IN HEADER FIELD               */ 01560000
         LR    @10,RWORK0                                          0652 01561000
         SL    @10,@CF00295                                        0652 01562000
         STH   @10,IXHLL(,RWORK2)                                  0652 01563000
*   RPARM1=RWORK2+IXHLL;            /* POINT TO RDF LOCATION         */ 01564000
         LR    RPARM1,RWORK2                                       0653 01565000
         ALR   RPARM1,@10                                          0653 01566000
*   RPARM1->RDFLL=IXHLL;            /* SET RDF LL FIELD              */ 01567000
         MVC   RDFLL(2,RPARM1),IXHLL(RWORK2)                       0654 01568000
*   RPARM1=RPARM1+LENGTH(IDARDF);   /* POINT TO CIDF LOCATION        */ 01569000
         AL    RPARM1,@CF00164                                     0655 01570000
*   RPARM1->CIDFOSET=IXHLL;         /* SET CIDF FREE SP OFFSET       */ 01571000
         STH   @10,CIDFOSET(,RPARM1)                               0656 01572000
*   RFY                                                            0657 01573000
*    (RWORK0,                                                      0657 01574000
*     RWORK2,                                                      0657 01575000
*     RWORK3,                                                      0657 01576000
*     RWORK4,                                                      0657 01577000
*     RWORK5) UNRSTD;                                              0657 01578000
*   RFY                                                            0658 01579000
*     IDAIXH BASED(IMWBUFP);                                       0658 01580000
*   GEN(IDARST14);                  /* RESTORE R14                   */ 01581000
         IDARST14                                                       01582000
*   RETURN;                         /* RETURN TO CALLER              */ 01583000
         B     @EL00001                                            0660 01584000
*                                                                  0661 01585000
*   /*****************************************************************/ 01586000
*   /*                                                               */ 01587000
*   /* IWRITE SUBROUTINE FUNCTION - WRITE INDEX RECORD AND FREE      */ 01588000
*   /* BUFFER INPUT - IXSBUFC = POINT TO INDEX BUFC - BUFCDDDD OF    */ 01589000
*   /* BUFC = RECORD RBA OUTPUT - NONE ERROR RETURN IS TO CALLER OF  */ 01590000
*   /* CALLER WITH R15 = 4                                           */ 01591000
*   /*                                                               */ 01592000
*   /*****************************************************************/ 01593000
*                                                                  0661 01594000
*IWRITE:                                                           0661 01595000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0661 01596000
IWRITE   DS    0H                                                  0662 01597000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01598000
         IDASVR14                                                       01599000
*   RPARM1=IXWRITE;                 /* WRITE INDEX RECORD            */ 01600000
         LA    RPARM1,4                                            0663 01601000
*I16:                                                              0664 01602000
*   DO;                             /* IDACALL(IDA019RH)             */ 01603000
I16      DS    0H                                                  0665 01604000
*     CALL IDA019RH;                /* EXIT TO IDA019RH              */ 01605000
         L     @15,@CV01033                                        0665 01606000
         BALR  @14,@15                                             0665 01607000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01608000
         BALR @11,0                                                     01609000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01610000
         USING *,@11                                                    01611000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01612000
         L     @11,=A(@PSTART)                                          01613000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01614000
         USING @PSTART,@11                                              01615000
*   END I16;                                                       0670 01616000
*   IF RPLERREG^='00'X THEN         /* WRITE ERROR                   */ 01617000
         CLI   RPLERREG(RRPL),0                                    0671 01618000
         BE    @RF00671                                            0671 01619000
*     DO;                           /* YES.                          */ 01620000
*       RFY                                                        0673 01621000
*         R15 RSTD;                 /* RESTRICT R15                  */ 01622000
*       R15=IXWRERR;                /* WRITE ERROR CODE              */ 01623000
         LA    R15,4                                               0674 01624000
*       GEN(IDARST14);              /* RESTORE R14                   */ 01625000
         IDARST14                                                       01626000
*       GEN(IDARST14);              /* BACK UP R14 TO CALLER         */ 01627000
         IDARST14                                                       01628000
*       RETURN;                     /* OF CALLER. RETURN             */ 01629000
@EL00003 DS    0H                                                  0677 01630000
@EF00003 DS    0H                                                  0677 01631000
@ER00003 BR    @14                                                 0677 01632000
*       RFY                                                        0678 01633000
*         R15 UNRSTD;               /* RELEASE R15                   */ 01634000
*     END;                          /* END OF WRITE ERROR            */ 01635000
*   RAMB=AMBLIX;                    /* POINT TO INDEX AMB            */ 01636000
@RF00671 L     @10,RPLDACB(,RRPL)                                  0680 01637000
         L     @10,ACBAMBL(,@10)                                   0680 01638000
         L     RAMB,AMBLIX(,@10)                                   0680 01639000
*   RBUFC=IXSBUFC;                  /* POINT TO INDEX BUFC FREE INDEX   01640000
*                                      BUFFER                        */ 01641000
         L     @10,AMBIWA(,RAMB)                                   0681 01642000
         L     @10,ICWCHN(,@10)                                    0681 01643000
         L     @10,IMWIXSP(,@10)                                   0681 01644000
         L     RBUFC,IXSBUFC(,@10)                                 0681 01645000
*I17:                                                              0682 01646000
*   DO;                             /* IDACALL(IDAFREEB)             */ 01647000
I17      DS    0H                                                  0683 01648000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 01649000
         L     @15,@CV01029                                        0683 01650000
         BALR  @14,@15                                             0683 01651000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01652000
         BALR @11,0                                                     01653000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01654000
         USING *,@11                                                    01655000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01656000
         L     @11,=A(@PSTART)                                          01657000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01658000
         USING @PSTART,@11                                              01659000
*   END I17;                        /* FREE BFR              @X04SVLP*/ 01660000
*   GEN(IDARST14);                  /* RESTORE R14                   */ 01661000
         IDARST14                                                       01662000
*   RETURN;                         /* RETURN TO CALLER              */ 01663000
         B     @EL00003                                            0690 01664000
*   END IWRITE;                     /* END OF IWRITE ROUTINE         */ 01665000
*                                                                  0692 01666000
*   /*****************************************************************/ 01667000
*   /*                                                               */ 01668000
*   /* GETSREC SUBROUTINE FUNCTION - GET OLD UNMODIFIED INDEX RECORD */ 01669000
*   /* INPUT - ICWPRBA = RBA OF OLD RECORD OUTPUT - ICWBUFC = POINTER*/ 01670000
*   /* TO INDEX BUFC - IMW-IXSBUFC = POINTER TO INDEX BUFC - IMWBUFP */ 01671000
*   /* = POINTER TO INDEX BUFFER                                     */ 01672000
*   /*                                                               */ 01673000
*   /*****************************************************************/ 01674000
*                                                                  0692 01675000
*GETSREC:                                                          0692 01676000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0692 01677000
GETSREC  DS    0H                                                  0693 01678000
*   GEN(IDASVR14);                  /* SAVE R14                      */ 01679000
         IDASVR14                                                       01680000
*   RPARM1=ADDR(PLHIXSPL);          /* GET IDX PARM          @X04SVES*/ 01681000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0694 01682000
*   RPARM1->IXSILN=ICWLN;           /* SET LEVEL NO.         @X04SVES*/ 01683000
         L     @10,AMBIWA(,RAMB)                                   0695 01684000
         LH    @05,ICWLN(,@10)                                     0695 01685000
         STC   @05,IXSILN(,RPARM1)                                 0695 01686000
*   RPARM1=ICWPRBA;                 /* OLD SS RBA                    */ 01687000
         L     RPARM1,ICWPRBA(,@10)                                0696 01688000
*   IF ICWLN=ONE THEN               /* LEVEL 1                       */ 01689000
         C     @05,@CF00053                                        0697 01690000
         BNE   @RF00697                                            0697 01691000
*     PLHSSR=ON;                    /* YES. SET SEQ. SET READ        */ 01692000
         OI    PLHSSR(RPLH),B'00010000'                            0698 01693000
*   ELSE                            /* NO.                           */ 01694000
*     PLHSSR=OFF;                   /* RESET SEQ. SET READ           */ 01695000
         B     @RC00697                                            0699 01696000
@RF00697 NI    PLHSSR(RPLH),B'11101111'                            0699 01697000
*I18:                                                              0700 01698000
*   DO;                             /* IDACALL(IDAGRB)               */ 01699000
@RC00697 DS    0H                                                  0700 01700000
I18      DS    0H                                                  0701 01701000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 01702000
         L     @15,@CV01031                                        0701 01703000
         BALR  @14,@15                                             0701 01704000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01705000
         BALR @11,0                                                     01706000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01707000
         USING *,@11                                                    01708000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01709000
         L     @11,=A(@PSTART)                                          01710000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01711000
         USING @PSTART,@11                                              01712000
*   END I18;                                                       0706 01713000
*   IF RPLERREG^='00'X THEN         /* ERROR                         */ 01714000
         CLI   RPLERREG(RRPL),0                                    0707 01715000
         BE    @RF00707                                            0707 01716000
*     DO;                           /* YES.                          */ 01717000
*       RFY                                                        0709 01718000
*         R15 RSTD;                 /*                               */ 01719000
*       R15=IXWRERR;                /* INDEX UPGRADE ERROR           */ 01720000
         LA    R15,4                                               0710 01721000
*       GEN(IDARST14);              /* RESTORE R14                   */ 01722000
         IDARST14                                                       01723000
*       GEN(IDARST14);              /* RESTORE PREVIOUS R14          */ 01724000
         IDARST14                                                       01725000
*       RETURN;                     /* EXIT TO CALLER OF CALL        */ 01726000
@EL00004 DS    0H                                                  0713 01727000
@EF00004 DS    0H                                                  0713 01728000
@ER00004 BR    @14                                                 0713 01729000
*       RFY                                                        0714 01730000
*         R15 UNRSTD;               /*                               */ 01731000
*     END;                          /* END OF ERROR                  */ 01732000
*   IXSBUFC=RBUFC;                  /* SET POINTER IN IMWA           */ 01733000
@RF00707 L     @10,AMBIWA(,RAMB)                                   0716 01734000
         L     @05,ICWCHN(,@10)                                    0716 01735000
         L     @15,IMWIXSP(,@05)                                   0716 01736000
         ST    RBUFC,IXSBUFC(,@15)                                 0716 01737000
*   ICWBUFC=RBUFC;                  /* SET POINTER IN ICWA           */ 01738000
         ST    RBUFC,ICWBUFC(,@10)                                 0717 01739000
*   IMWBUFP=RBUFC->BUFCBAD;         /* SET BUFFERNPOINTER            */ 01740000
         L     @10,BUFCBAD(,RBUFC)                                 0718 01741000
         ST    @10,IMWBUFP(,@05)                                   0718 01742000
*   GEN(IDARST14);                  /* RESTORE R14                   */ 01743000
         IDARST14                                                       01744000
*   RETURN;                         /* RETURN                        */ 01745000
         B     @EL00004                                            0720 01746000
*   END GETSREC;                    /* END GETSREC SUBROUTINE        */ 01747000
*                                                                  0722 01748000
*   /*****************************************************************/ 01749000
*   /*                                                               */ 01750000
*   /* FINDSP FIND SPLIT POINT SUBROUTINE INPUT -RPARM1 = OFFSET OF  */ 01751000
*   /* RIGHTMOST LIMIT FOR SPLIT OUTPUT -IMWNSOFF = OFFSET TO SECTION*/ 01752000
*   /* ENTRY OF SECTION CONTAINING SPLIT POINT. -ICWTPTR = OFFSET TO */ 01753000
*   /* F OF ENTRY AT WHICH SPLIT WILL OCCUR THE INDEX RECORD IS      */ 01754000
*   /* SCANNED FROM RIGHT TO LEFT TO LOCATE THE FIRST ENTRY WITH     */ 01755000
*   /* OFFSET =< THE VALUE SPECIFIED BY RPARM1.                      */ 01756000
*   /*                                                               */ 01757000
*   /*****************************************************************/ 01758000
*                                                                  0722 01759000
*FINDSP:                                                           0722 01760000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0722 01761000
FINDSP   DS    0H                                                  0723 01762000
*   RFY                                                            0723 01763000
*    (RWORK0,                                                      0723 01764000
*     RWORK1,                                                      0723 01765000
*     RWORK2,                                                      0723 01766000
*     RWORK3,                                                      0723 01767000
*     R14) RSTD;                                                   0723 01768000
*   RWORK3=ZERO;                    /*                               */ 01769000
         SLR   RWORK3,RWORK3                                       0724 01770000
*   RWORK1=IXHLL;                   /* OFFSET TO 1ST ENTRY+1         */ 01771000
         L     @15,AMBIWA(,RAMB)                                   0725 01772000
         L     @15,ICWCHN(,@15)                                    0725 01773000
         L     @15,IMWBUFP(,@15)                                   0725 01774000
         LH    RWORK1,IXHLL(,@15)                                  0725 01775000
         N     RWORK1,@CF01171                                     0725 01776000
*   RBUFC=IMWBUFP+RWORK1;           /* PTR TO LOW END OF SECT.       */ 01777000
         LR    RBUFC,RWORK1                                        0726 01778000
         ALR   RBUFC,@15                                           0726 01779000
*   RWORK2=IXHSEO;                  /* OFFSET TO 1ST SECTION SCAN  0727 01780000
*                                      RECORD TO                     */ 01781000
         LH    RWORK2,IXHSEO(,@15)                                 0727 01782000
*   DO WHILE RWORK2>RPARM1;         /* LOCATE SECTION                */ 01783000
         B     @DE00728                                            0728 01784000
@DL00728 DS    0H                                                  0729 01785000
*     RWORK1=RWORK2;                /* SAVE OFFSET TO SECTION        */ 01786000
         LR    RWORK1,RWORK2                                       0729 01787000
*     RBUFC=IMWBUFP+RWORK2;         /* SET PTR TO SECTION ENT.       */ 01788000
         L     @15,AMBIWA(,RAMB)                                   0730 01789000
         L     @15,ICWCHN(,@15)                                    0730 01790000
         LR    RBUFC,RWORK2                                        0730 01791000
         AL    RBUFC,IMWBUFP(,@15)                                 0730 01792000
*     RWORK3=RBUFC->IBFLPL+LENGTH(IXSELL);/* OFFSET TO LL            */ 01793000
         LA    RWORK3,2                                            0731 01794000
         SLR   @15,@15                                             0731 01795000
         IC    @15,IBFLPL(,RBUFC)                                  0731 01796000
         ALR   RWORK3,@15                                          0731 01797000
*     RBUFC=RBUFC-RWORK3;           /* SET PTR TO LL FIELD           */ 01798000
         SLR   RBUFC,RWORK3                                        0732 01799000
*     RWORK2=RWORK2-RBUFC->IXSELL;  /* OFFSET TO NEXT SECTION        */ 01800000
         SLR   @15,@15                                             0733 01801000
         ICM   @15,3,IXSELL(RBUFC)                                 0733 01802000
         SLR   RWORK2,@15                                          0733 01803000
*   END;                            /* END OF LOCATE SECTION         */ 01804000
@DE00728 CLR   RWORK2,RPARM1                                       0734 01805000
         BH    @DL00728                                            0734 01806000
*XXX1:                                                             0735 01807000
*   IMWNSOFF=RWORK2;                /* SAVE OFFSET TO NXT SECT       */ 01808000
XXX1     L     @15,AMBIWA(,RAMB)                                   0735 01809000
         L     @15,ICWCHN(,@15)                                    0735 01810000
         STH   RWORK2,IMWNSOFF(,@15)                               0735 01811000
*   RWORK2=RWORK1;                  /* SAVE PREVIOUS SECTION         */ 01812000
*                                                                  0736 01813000
         LR    RWORK2,RWORK1                                       0736 01814000
*   /*****************************************************************/ 01815000
*   /*                                                               */ 01816000
*   /* SCAN SECTION TO LOCATE ENTRY                                  */ 01817000
*   /*                                                               */ 01818000
*   /*****************************************************************/ 01819000
*                                                                  0737 01820000
*   RWORK0=IXHFLPLN;                /* LENGTH OF F,L,PTR FIELD       */ 01821000
         L     @15,IMWBUFP(,@15)                                   0737 01822000
         SLR   RWORK0,RWORK0                                       0737 01823000
         IC    RWORK0,IXHFLPLN(,@15)                               0737 01824000
*   RWORK1=RWORK1-RWORK3-RWORK0;    /* ADJUST RWORK1 TO POINT TO F OF   01825000
*                                      1ST ENTRY                     */ 01826000
         LR    @15,RWORK1                                          0738 01827000
         SLR   @15,RWORK3                                          0738 01828000
         SLR   @15,RWORK0                                          0738 01829000
         LR    RWORK1,@15                                          0738 01830000
*   RWORK3=RWORK3+RWORK0;           /* INITIALIZE ENTRY LENGTH       */ 01831000
         ALR   RWORK3,RWORK0                                       0739 01832000
*   DO WHILE RWORK1>RPARM1&         /* SCAN SECTION TO LOCATE        */ 01833000
*         RWORK1>IMWNSOFF;          /* SPLIT POINT ENTRY             */ 01834000
         B     @DE00740                                            0740 01835000
@DL00740 DS    0H                                                  0741 01836000
*     RBUFC=IMWBUFP+RWORK1;         /* POINT TO F FIELD              */ 01837000
         L     @15,AMBIWA(,RAMB)                                   0741 01838000
         L     @15,ICWCHN(,@15)                                    0741 01839000
         LR    RBUFC,RWORK1                                        0741 01840000
         AL    RBUFC,IMWBUFP(,@15)                                 0741 01841000
*     RWORK3=RBUFC->IBFLPL+RWORK0;  /* OFFSET TO NEXT ENTRY          */ 01842000
         SLR   RWORK3,RWORK3                                       0742 01843000
         IC    RWORK3,IBFLPL(,RBUFC)                               0742 01844000
         ALR   RWORK3,RWORK0                                       0742 01845000
*     RWORK1=RWORK1-RWORK3;         /* ADJUST ENTRY OFFSET           */ 01846000
         SLR   RWORK1,RWORK3                                       0743 01847000
*   END;                            /* END OF SECTION SCAN           */ 01848000
@DE00740 CR    RWORK1,RPARM1                                       0744 01849000
         BNH   @DC00740                                            0744 01850000
         L     @15,AMBIWA(,RAMB)                                   0744 01851000
         L     @15,ICWCHN(,@15)                                    0744 01852000
         CH    RWORK1,IMWNSOFF(,@15)                               0744 01853000
         BH    @DL00740                                            0744 01854000
@DC00740 DS    0H                                                  0745 01855000
*   IF RWORK1^=ICWTPTR THEN         /* FOUND PREV. SPLT. POINT       */ 01856000
         L     @15,AMBIWA(,RAMB)                                   0745 01857000
         C     RWORK1,ICWTPTR(,@15)                                0745 01858000
         BE    @RF00745                                            0745 01859000
*     DO;                           /* NO, SO                        */ 01860000
*       RWORK1=RWORK1+RWORK3;       /* MOVE SPLIT POINT ONE          */ 01861000
         ALR   RWORK1,RWORK3                                       0747 01862000
*       ICWTPTR=RWORK1;             /* ENTRY TO THE RIGHT            */ 01863000
         ST    RWORK1,ICWTPTR(,@15)                                0748 01864000
*       IF RWORK1=RWORK2 THEN       /* CROSS SECTION BOUNDARY        */ 01865000
         CLR   RWORK1,RWORK2                                       0749 01866000
         BNE   @RF00749                                            0749 01867000
*         IMWNSOFF=RWORK2;          /* RESET SECTION POINTER         */ 01868000
         L     @15,ICWCHN(,@15)                                    0750 01869000
         STH   RWORK2,IMWNSOFF(,@15)                               0750 01870000
*     END;                          /*                               */ 01871000
*   RFY                                                            0752 01872000
*    (RWORK0,                                                      0752 01873000
*     RWORK1,                                                      0752 01874000
*     RWORK2,                                                      0752 01875000
*     RWORK3,                                                      0752 01876000
*     R14) UNRSTD;                  /*                       @X04SVES*/ 01877000
*   RETURN;                         /* RETURN TO CALLER              */ 01878000
@EL00005 DS    0H                                                  0753 01879000
@EF00005 DS    0H                                                  0753 01880000
@ER00005 BR    @14                                                 0753 01881000
*   END FINDSP;                     /* END OF FIND SPLIT POINT       */ 01882000
         B     @EL00005                                            0754 01883000
*                                                                  0755 01884000
*   /*****************************************************************/ 01885000
*   /*                                                               */ 01886000
*   /* LNEXTE LOCATE NEXT HIGHER KEY ENTRY SUBROUTINE INPUT - ICWTPTR*/ 01887000
*   /* = CURRENT SPLIT ENTRY OFFSET IMWNSOFF= OFFSET TO SECTION ENTRY*/ 01888000
*   /* OF SECTION CONTAINING ICWTPTR ENTRY OUTPUT - ICWTPTR = OFFSET */ 01889000
*   /* OF NEXT HIGHER KEY ENTRY IMWNSOFF - ADJUSTED TO NEXT SECTION  */ 01890000
*   /* ENTRY OFFSET WHEN ICWTPTR CROSSES A SECTION RPARM1 = 8 TO     */ 01891000
*   /* INDICATE NOT FIRST CALL TO IDA019RJ RWORK0 = NO. NON-LAST     */ 01892000
*   /* SPANNED                                               @X04SVES*/ 01893000
*   /* RECORD SEGMENTS                                       @X04SVES*/ 01894000
*   /*                                                               */ 01895000
*   /*****************************************************************/ 01896000
*                                                                  0755 01897000
*LNEXTE:                                                           0755 01898000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0755 01899000
LNEXTE   DS    0H                                                  0756 01900000
*   RFY                                                            0756 01901000
*    (RWORK1,                                                      0756 01902000
*     RWORK3,                                                      0756 01903000
*     R14) RSTD;                    /*                               */ 01904000
*   RWORK1=ICWTPTR;                 /* PICK UP CURRENT OFFSET        */ 01905000
         L     @15,AMBIWA(,RAMB)                                   0757 01906000
         L     RWORK1,ICWTPTR(,@15)                                0757 01907000
*   RBUFC=IMWBUFP+RWORK1;           /* POINT TO ENTRY                */ 01908000
         L     @15,ICWCHN(,@15)                                    0758 01909000
         LR    RBUFC,RWORK1                                        0758 01910000
         AL    RBUFC,IMWBUFP(,@15)                                 0758 01911000
*   RWORK3=RBUFC->IBFLPL;           /* PICK UP L VALUE               */ 01912000
         SLR   RWORK3,RWORK3                                       0759 01913000
         IC    RWORK3,IBFLPL(,RBUFC)                               0759 01914000
*   IF RWORK1=IMWNSOFF THEN         /* SECTION ENTRY                 */ 01915000
         LH    @10,IMWNSOFF(,@15)                                  0760 01916000
         CR    RWORK1,@10                                          0760 01917000
         BNE   @RF00760                                            0760 01918000
*     DO;                           /* YES.                          */ 01919000
*       RWORK3=RWORK3+LENGTH(IXSELL);/* ADD SECT. LL LENGTH          */ 01920000
         AL    RWORK3,@CF00162                                     0762 01921000
*       RBUFC=RBUFC-RWORK3;         /* POINT TO LL FIELD             */ 01922000
         SLR   RBUFC,RWORK3                                        0763 01923000
*       IMWNSOFF=IMWNSOFF-          /* ADJUST SECTION OFFSET         */ 01924000
*           RBUFC->IXSELL;          /* TO NEXT SECTION               */ 01925000
         SLR   @06,@06                                             0764 01926000
         ICM   @06,3,IXSELL(RBUFC)                                 0764 01927000
         SLR   @10,@06                                             0764 01928000
         STH   @10,IMWNSOFF(,@15)                                  0764 01929000
*     END;                          /* END OF SECTION ENTRY          */ 01930000
*   RWORK3=RWORK3+IXHFLPLN;         /* ADD LENGTH OF F,L,PTR         */ 01931000
@RF00760 L     @15,AMBIWA(,RAMB)                                   0766 01932000
         L     @10,ICWCHN(,@15)                                    0766 01933000
         L     @10,IMWBUFP(,@10)                                   0766 01934000
         SLR   @06,@06                                             0766 01935000
         IC    @06,IXHFLPLN(,@10)                                  0766 01936000
         ALR   RWORK3,@06                                          0766 01937000
*   ICWTPTR=RWORK1-RWORK3;          /* ADJUST SPLIT OFFSET           */ 01938000
         LR    @06,RWORK1                                          0767 01939000
         SLR   @06,RWORK3                                          0767 01940000
         ST    @06,ICWTPTR(,@15)                                   0767 01941000
*   RBUFC=IMWBUFP+ICWTPTR;          /* PICK UP CURRENT OFFSET      0768 01942000
*                                                            @X04SVES*/ 01943000
         ALR   @10,@06                                             0768 01944000
         LR    RBUFC,@10                                           0768 01945000
*   RFY                                                            0769 01946000
*     RWORK0 RSTD;                  /*                       @X04SVES*/ 01947000
*   RWORK0=ZERO;                    /* CLEAR COUNT           @X04SVES*/ 01948000
         SLR   RWORK0,RWORK0                                       0770 01949000
*   DO WHILE RBUFC->IBFLPF=         /* IS THIS A             @X04SVES*/ 01950000
*         AMDKEYLN;                 /* SPANNED RECORD SEGMENT, NOT 0771 01951000
*                                      THE FIRST             @X04SVES*/ 01952000
         B     @DE00771                                            0771 01953000
@DL00771 DS    0H                                                  0772 01954000
*     RBUFC=RBUFC-IMWBUFP->         /* YES, MOVE TO          @X04SVES*/ 01955000
*         IXHFLPLN;                 /* NEXT SEGMENT          @X04SVES*/ 01956000
         L     @15,AMBIWA(,RAMB)                                   0772 01957000
         L     @10,ICWCHN(,@15)                                    0772 01958000
         L     @10,IMWBUFP(,@10)                                   0772 01959000
         SLR   @06,@06                                             0772 01960000
         IC    @06,IXHFLPLN(,@10)                                  0772 01961000
         SLR   RBUFC,@06                                           0772 01962000
*     ICWTPTR=ICWTPTR-IMWBUFP->     /* MOVE SPLIT            @X04SVES*/ 01963000
*         IXHFLPLN;                 /* POINT TO NEXT SEGMENT @X04SVES*/ 01964000
         LCR   @06,@06                                             0773 01965000
         AL    @06,ICWTPTR(,@15)                                   0773 01966000
         ST    @06,ICWTPTR(,@15)                                   0773 01967000
*     RWORK0=RWORK0+ONE;            /* BUMP SEG COUNT        @X04SVES*/ 01968000
         AL    RWORK0,@CF00053                                     0774 01969000
*   END;                            /*                       @X04SVES*/ 01970000
@DE00771 L     @15,AMBDSB(,RAMB)                                   0775 01971000
         SLR   @10,@10                                             0775 01972000
         IC    @10,IBFLPF(,RBUFC)                                  0775 01973000
         CH    @10,AMDKEYLN(,@15)                                  0775 01974000
         BE    @DL00771                                            0775 01975000
*   RPARM1=SPRETRY;                 /* TRY SPLIT AGAIN               */ 01976000
         LA    RPARM1,8                                            0776 01977000
*   RFY                                                            0777 01978000
*    (RWORK0,                                                      0777 01979000
*     RWORK1,                                                      0777 01980000
*     RWORK3,                                                      0777 01981000
*     R14) UNRSTD;                  /*                       @X04SVES*/ 01982000
*   RETURN;                         /* RETURN TO CALLER              */ 01983000
@EL00006 DS    0H                                                  0778 01984000
@EF00006 DS    0H                                                  0778 01985000
@ER00006 BR    @14                                                 0778 01986000
*   END LNEXTE;                     /* END LOCATE NEXT ENTRY         */ 01987000
*   GEN(IDAPATCH);                  /* DEFINE PATCH SPACE            */ 01988000
         IDAPATCH                                                       01989000
*   END IDA019RI                    /* END OF INDEX UPGRADE          */ 01990000
*                                                                  0781 01991000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01992000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01993000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01994000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01995000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01996000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01997000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01998000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01999000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02000000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 02001000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 02002000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02003000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02004000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02005000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02006000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02007000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02008000
*                                                                  0781 02009000
*       ;                                                          0781 02010000
         B     @EL00001                                            0781 02011000
@DATA    DS    0H                                                       02012000
@CH00088 DC    H'24'                                                    02013000
@SM01169 MVC   KEY(0,RPARM1),ICWKEY1(@10)                               02014000
@SM01172 MVC   KEY(0,RWORK2),KEY(RBUFC)                                 02015000
@SM01174 MVC   KEY(0,RWORK1),KEY(@10)                                   02016000
@SM01176 MVC   ICWKEY1(0,@10),KEY(RBUFC)                                02017000
@SM01180 MVC   IMWKEY1(0,@10),ICWKEY1(@14)                              02018000
@SM01185 MVC   KEY(0,RPARM1),ICWKEY1(@05)                               02019000
@SM01187 MVC   KEY(0,@15),KEY(RWORK3)                                   02020000
@DATD    DSECT                                                          02021000
         DS    0F                                                       02022000
IDA019RI CSECT                                                          02023000
         DS    0F                                                       02024000
@CF00053 DC    F'1'                                                     02025000
@CH00053 EQU   @CF00053+2                                               02026000
@CF00162 DC    F'2'                                                     02027000
@CF00164 DC    F'3'                                                     02028000
@CF00067 DC    F'4'                                                     02029000
@CF00295 DC    F'7'                                                     02030000
@CF00062 DC    F'8'                                                     02031000
@CF01045 DC    F'256'                                                   02032000
@CF01171 DC    XL4'0000FFFF'                                            02033000
@DATD    DSECT                                                          02034000
         DS    0D                                                       02035000
IDA019RI CSECT                                                          02036000
         DS    0F                                                       02037000
@SIZDATD DC    AL1(0)                                                   02038000
         DC    AL3(@ENDDATD-@DATD)                                      02039000
@CA01084 DC    A(IDANEWRD)                                              02040000
@CV01027 DC    V(IDAAQR)                                                02041000
@CV01028 DC    V(IDAEOVIF)                                              02042000
@CV01029 DC    V(IDAFREEB)                                              02043000
@CV01030 DC    V(IDAGNFL)                                               02044000
@CV01031 DC    V(IDAGRB)                                                02045000
@CV01032 DC    V(IDA019RB)                                              02046000
@CV01033 DC    V(IDA019RH)                                              02047000
@CV01034 DC    V(IDA019RJ)                                              02048000
@CV01101 DC    V(IDA019ST)                                              02049000
         DS    0D                                                       02050000
HWORD4   DC    H'4'                                                     02051000
@DATD    DSECT                                                          02052000
*                                                          /*@X04SVLC*/ 02053000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02054000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02055000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02056000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02057000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02058000
RDFLEN   EQU   3                        LENGTH OF RDF                   02059000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02060000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02061000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02062000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02063000
@DATD    DSECT                                                          02064000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02065000
@ENDDATD EQU   *                                                        02066000
IDA019RI CSECT                                                          02067000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02068000
@01      EQU   01                                                       02069000
@02      EQU   02                                                       02070000
@03      EQU   03                                                       02071000
@04      EQU   04                                                       02072000
@05      EQU   05                                                       02073000
@06      EQU   06                                                       02074000
@07      EQU   07                                                       02075000
@08      EQU   08                                                       02076000
@09      EQU   09                                                       02077000
@10      EQU   10                                                       02078000
@11      EQU   11                                                       02079000
@12      EQU   12                                                       02080000
@13      EQU   13                                                       02081000
@14      EQU   14                                                       02082000
@15      EQU   15                                                       02083000
RWORK0   EQU   @00                                                      02084000
RRPL     EQU   @01                                                      02085000
RPLH     EQU   @02                                                      02086000
RAMB     EQU   @03                                                      02087000
RBUFC    EQU   @04                                                      02088000
RWORK1   EQU   @05                                                      02089000
RWORK2   EQU   @06                                                      02090000
RWORK3   EQU   @07                                                      02091000
RWORK4   EQU   @08                                                      02092000
RWORK5   EQU   @09                                                      02093000
RPARM1   EQU   @12                                                      02094000
R14      EQU   @14                                                      02095000
R15      EQU   @15                                                      02096000
R1       EQU   @01                                                      02097000
R10      EQU   @10                                                      02098000
R11      EQU   @11                                                      02099000
R13      EQU   @13                                                      02100000
IFGRPL   EQU   0                                                        02101000
RPLCOMN  EQU   IFGRPL                                                   02102000
RPLIDWD  EQU   RPLCOMN                                                  02103000
RPLLEN   EQU   RPLIDWD+3                                                02104000
RPLECB   EQU   RPLCOMN+8                                                02105000
RPLFDBWD EQU   RPLCOMN+12                                               02106000
RPLFDBK  EQU   RPLFDBWD+1                                               02107000
RPLRTNCD EQU   RPLFDBK                                                  02108000
RPLERREG EQU   RPLRTNCD                                                 02109000
RPLCNDCD EQU   RPLFDBK+1                                                02110000
RPLCMPON EQU   RPLCNDCD                                                 02111000
RPLFDB2  EQU   RPLCMPON                                                 02112000
RPLERRCD EQU   RPLCNDCD+1                                               02113000
RPLFDB3  EQU   RPLERRCD                                                 02114000
RPLKEYLE EQU   RPLCOMN+16                                               02115000
RPLDACB  EQU   RPLCOMN+24                                               02116000
RPLAREA  EQU   RPLCOMN+32                                               02117000
RPLARG   EQU   RPLCOMN+36                                               02118000
RPLOPTCD EQU   RPLCOMN+40                                               02119000
RPLOPT1  EQU   RPLOPTCD                                                 02120000
RPLECBSW EQU   RPLOPT1                                                  02121000
RPLOPT2  EQU   RPLOPTCD+1                                               02122000
RPLADR   EQU   RPLOPT2                                                  02123000
RPLOPT3  EQU   RPLOPTCD+2                                               02124000
RPLNXTRP EQU   RPLCOMN+44                                               02125000
RPLRLEN  EQU   RPLCOMN+48                                               02126000
RPLOPTC2 EQU   RPLCOMN+56                                               02127000
RPLOPT5  EQU   RPLOPTC2                                                 02128000
RPLWRTYP EQU   RPLOPT5                                                  02129000
RPLOPT6  EQU   RPLOPTC2+1                                               02130000
RPLUNTYP EQU   RPLOPT6                                                  02131000
RPLOPT7  EQU   RPLOPTC2+2                                               02132000
RPLCNOPT EQU   RPLOPT7                                                  02133000
RPLOPT8  EQU   RPLOPTC2+3                                               02134000
RPLRBAR  EQU   RPLCOMN+60                                               02135000
RPLAIXID EQU   RPLRBAR+2                                                02136000
RPLEXTDS EQU   RPLCOMN+68                                               02137000
RPLEXTD1 EQU   RPLEXTDS                                                 02138000
IFGACB   EQU   0                                                        02139000
ACBCOMN  EQU   IFGACB                                                   02140000
ACBLENG  EQU   ACBCOMN+2                                                02141000
ACBLENG2 EQU   ACBLENG                                                  02142000
ACBAMBL  EQU   ACBCOMN+4                                                02143000
ACBJWA   EQU   ACBAMBL                                                  02144000
ACBMACRF EQU   ACBCOMN+12                                               02145000
ACBMACR1 EQU   ACBMACRF                                                 02146000
ACBADR   EQU   ACBMACR1                                                 02147000
ACBCNV   EQU   ACBMACR1                                                 02148000
ACBMACR2 EQU   ACBMACRF+1                                               02149000
ACBBUFPL EQU   ACBCOMN+20                                               02150000
ACBMACR3 EQU   ACBBUFPL                                                 02151000
ACBRECFM EQU   ACBCOMN+24                                               02152000
ACBCCTYP EQU   ACBCOMN+25                                               02153000
ACBOPT   EQU   ACBCOMN+26                                               02154000
ACBDSORG EQU   ACBOPT                                                   02155000
ACBCROPS EQU   ACBDSORG                                                 02156000
ACBEXLST EQU   ACBCOMN+36                                               02157000
ACBDDNM  EQU   ACBCOMN+40                                               02158000
ACBAMETH EQU   ACBDDNM+3                                                02159000
ACBOFLGS EQU   ACBCOMN+48                                               02160000
ACBEXFG  EQU   ACBOFLGS                                                 02161000
ACBIOSFG EQU   ACBOFLGS                                                 02162000
ACBINFLG EQU   ACBCOMN+50                                               02163000
ACBUJFCB EQU   ACBCOMN+52                                               02164000
ACBBLKSZ EQU   ACBCOMN+60                                               02165000
IDAAMBL  EQU   0                                                        02166000
AMBLEOV  EQU   IDAAMBL+12                                               02167000
AMBLEFLG EQU   AMBLEOV                                                  02168000
AMBLDDNM EQU   IDAAMBL+16                                               02169000
AMBLIDF  EQU   AMBLDDNM                                                 02170000
AMBLQ    EQU   AMBLIDF+7                                                02171000
AMBLVC   EQU   IDAAMBL+28                                               02172000
AMBLTYPE EQU   IDAAMBL+30                                               02173000
AMBLSHAR EQU   IDAAMBL+33                                               02174000
AMBLFLG1 EQU   IDAAMBL+35                                               02175000
AMBLFLG2 EQU   IDAAMBL+36                                               02176000
AMBLDTA  EQU   IDAAMBL+52                                               02177000
AMBLIX   EQU   IDAAMBL+56                                               02178000
IDAAMB   EQU   0                                                        02179000
AMBDSB   EQU   IDAAMB+20                                                02180000
AMBEOVR  EQU   IDAAMB+24                                                02181000
AMBFLG0  EQU   AMBEOVR                                                  02182000
AMBFLG1  EQU   IDAAMB+25                                                02183000
AMBDSORG EQU   IDAAMB+26                                                02184000
AMBIOBAD EQU   IDAAMB+28                                                02185000
AMBINFL  EQU   IDAAMB+42                                                02186000
AMBDEBPT EQU   IDAAMB+44                                                02187000
AMBOFLGS EQU   IDAAMB+48                                                02188000
AMBFLG2  EQU   IDAAMB+49                                                02189000
AMBEOVPT EQU   IDAAMB+56                                                02190000
AMBIWA   EQU   IDAAMB+64                                                02191000
AMBCSWD1 EQU   IDAAMB+84                                                02192000
AMBAFLG  EQU   AMBCSWD1                                                 02193000
AMBTRACE EQU   IDAAMB+120                                               02194000
IDAPLHDR EQU   0                                                        02195000
IDAPLH   EQU   0                                                        02196000
PLHFLG1  EQU   IDAPLH+2                                                 02197000
PLHSSR   EQU   PLHFLG1                                                  02198000
PLHFLG2  EQU   IDAPLH+3                                                 02199000
PLHADDTE EQU   PLHFLG2                                                  02200000
PLHEFLGS EQU   IDAPLH+4                                                 02201000
PLHFLG3  EQU   IDAPLH+6                                                 02202000
PLHAFLGS EQU   IDAPLH+7                                                 02203000
PLHCRBA  EQU   IDAPLH+28                                                02204000
PLHJORBA EQU   PLHCRBA                                                  02205000
PLHJCODE EQU   IDAPLH+40                                                02206000
PLHEOVR  EQU   IDAPLH+42                                                02207000
PLHRSCS  EQU   IDAPLH+43                                                02208000
PLHDBUFC EQU   IDAPLH+52                                                02209000
PLHDIOB  EQU   IDAPLH+76                                                02210000
PLHRETO  EQU   IDAPLH+116                                               02211000
PLHRET1  EQU   IDAPLH+120                                               02212000
PLHEOVPT EQU   IDAPLH+180                                               02213000
PLHIBUFC EQU   IDAPLH+188                                               02214000
PLHISPLP EQU   IDAPLH+196                                               02215000
PLHIXSPL EQU   IDAPLH+200                                               02216000
PLHSSRBA EQU   PLHIXSPL                                                 02217000
PLHWAX   EQU   IDAPLH+232                                               02218000
PLHKEYPT EQU   IDAPLH+248                                               02219000
PLHTMRPL EQU   IDAPLH+265                                               02220000
PLHEND   EQU   IDAPLH+280                                               02221000
IDAAMDSB EQU   0                                                        02222000
AMDATTR  EQU   IDAAMDSB+1                                               02223000
AMDRANGE EQU   AMDATTR                                                  02224000
AMDNEST  EQU   IDAAMDSB+4                                               02225000
AMDRKP   EQU   IDAAMDSB+6                                               02226000
AMDKEYLN EQU   IDAAMDSB+8                                               02227000
AMDCIPCA EQU   IDAAMDSB+12                                              02228000
AMDCINV  EQU   IDAAMDSB+20                                              02229000
AMDHLRBA EQU   IDAAMDSB+28                                              02230000
AMDSSRBA EQU   IDAAMDSB+32                                              02231000
AMDATTR3 EQU   IDAAMDSB+40                                              02232000
AMDSTAT  EQU   IDAAMDSB+48                                              02233000
AMDNIL   EQU   AMDSTAT+8                                                02234000
IDAICWA  EQU   0                                                        02235000
ICWFLG1  EQU   IDAICWA+1                                                02236000
ICWKRDS  EQU   ICWFLG1                                                  02237000
ICWCHN   EQU   IDAICWA+4                                                02238000
ICWBUFC  EQU   IDAICWA+8                                                02239000
ICWCRBA  EQU   IDAICWA+12                                               02240000
ICWPRBA  EQU   IDAICWA+16                                               02241000
ICWPSEO  EQU   IDAICWA+20                                               02242000
ICWADD   EQU   IDAICWA+24                                               02243000
ICWTBASE EQU   IDAICWA+28                                               02244000
ICWTPTR  EQU   IDAICWA+32                                               02245000
ICWLN    EQU   IDAICWA+40                                               02246000
ICWKEY1L EQU   IDAICWA+42                                               02247000
ICWKEY2L EQU   IDAICWA+44                                               02248000
ICWKEY3L EQU   IDAICWA+46                                               02249000
ICWPTL   EQU   IDAICWA+55                                               02250000
ICWKEY1  EQU   IDAICWA+60                                               02251000
IDAIMWA  EQU   0                                                        02252000
IMWFLAGS EQU   IDAIMWA+1                                                02253000
IMWNEWHL EQU   IMWFLAGS                                                 02254000
IMWRIPL  EQU   IMWFLAGS                                                 02255000
IMWIXSP  EQU   IDAIMWA+4                                                02256000
IMWISWKA EQU   IDAIMWA+8                                                02257000
IMWIKEYP EQU   IDAIMWA+44                                               02258000
IMWXPTR  EQU   IDAIMWA+48                                               02259000
IMWIPTR  EQU   IDAIMWA+52                                               02260000
IMWBUFP  EQU   IDAIMWA+60                                               02261000
IMWIEL   EQU   IDAIMWA+65                                               02262000
IMWSVIEL EQU   IDAIMWA+66                                               02263000
IMWCIMVN EQU   IDAIMWA+68                                               02264000
IMWNSOFF EQU   IDAIMWA+70                                               02265000
IMWKEY1  EQU   IDAIMWA+76                                               02266000
IDADIWA  EQU   0                                                        02267000
DIWFLG1  EQU   IDADIWA+4                                                02268000
DIWFLG2  EQU   IDADIWA+5                                                02269000
DIWFSPF  EQU   DIWFLG2                                                  02270000
DIWSAVE  EQU   IDADIWA+28                                               02271000
DIWSAVE1 EQU   DIWSAVE                                                  02272000
DIWSAVE4 EQU   DIWSAVE+12                                               02273000
IDABUFDR EQU   0                                                        02274000
BUFDRCIX EQU   IDABUFDR+9                                               02275000
BUFDRFLG EQU   IDABUFDR+11                                              02276000
IDABUFC  EQU   0                                                        02277000
BUFCAVL  EQU   IDABUFC                                                  02278000
BUFCFLG1 EQU   IDABUFC+1                                                02279000
BUFCVAL  EQU   BUFCFLG1                                                 02280000
BUFCEXC  EQU   BUFCFLG1                                                 02281000
BUFCIOFL EQU   IDABUFC+2                                                02282000
BUFCMW   EQU   BUFCIOFL                                                 02283000
BUFCFLG2 EQU   IDABUFC+3                                                02284000
BUFCPLH  EQU   IDABUFC+4                                                02285000
BUFCDDDD EQU   IDABUFC+8                                                02286000
BUFCBAD  EQU   IDABUFC+20                                               02287000
BUFCINV  EQU   IDABUFC+28                                               02288000
BUFXIRBA EQU   IDABUFC+40                                               02289000
IDAIXSPL EQU   0                                                        02290000
IXSSTRBA EQU   IDAIXSPL                                                 02291000
IXSBUFC  EQU   IDAIXSPL+4                                               02292000
IXSARG   EQU   IDAIXSPL+8                                               02293000
IXSTLN   EQU   IDAIXSPL+12                                              02294000
IXSILN   EQU   IDAIXSPL+13                                              02295000
IXSBFLG  EQU   IDAIXSPL+17                                              02296000
IXSPEC   EQU   IDAIXSPL+19                                              02297000
IXSHEP   EQU   IDAIXSPL+20                                              02298000
IDACIDF  EQU   0                                                        02299000
CIDFOSET EQU   IDACIDF                                                  02300000
CIDFLL   EQU   IDACIDF+2                                                02301000
IDAIXH   EQU   0                                                        02302000
IXHLL    EQU   IDAIXH                                                   02303000
IXHFLPLN EQU   IDAIXH+2                                                 02304000
IXHPTLS  EQU   IDAIXH+3                                                 02305000
IXHBRBA  EQU   IDAIXH+4                                                 02306000
IXHHP    EQU   IDAIXH+8                                                 02307000
IXHLV    EQU   IDAIXH+16                                                02308000
IXHFSO   EQU   IDAIXH+18                                                02309000
IXHLEO   EQU   IDAIXH+20                                                02310000
IXHSEO   EQU   IDAIXH+22                                                02311000
IDAIBFLP EQU   0                                                        02312000
IBFLPF   EQU   IDAIBFLP                                                 02313000
IBFLPL   EQU   IDAIBFLP+1                                               02314000
IBFLP3   EQU   IDAIBFLP+2                                               02315000
IBFLP2   EQU   IBFLP3                                                   02316000
IDASELL  EQU   0                                                        02317000
IXSELL   EQU   IDASELL                                                  02318000
IDAIXK   EQU   0                                                        02319000
IDARDF   EQU   0                                                        02320000
RDFRBYTE EQU   IDARDF                                                   02321000
RDFSEG   EQU   RDFRBYTE                                                 02322000
RDFREPL  EQU   RDFRBYTE                                                 02323000
RDFLL    EQU   IDARDF+1                                                 02324000
IDADATA  EQU   0                                                        02325000
IDAKEY   EQU   0                                                        02326000
KEY      EQU   IDAKEY                                                   02327000
ICWKEY2  EQU   0                                                        02328000
ICWKEY3  EQU   0                                                        02329000
PLHKEY   EQU   0                                                        02330000
PLHPDL   EQU   0                                                        02331000
PLHPDLE  EQU   0                                                        02332000
PLHRRN   EQU   0                                                        02333000
PLHEXTEN EQU   PLHEND                                                   02334000
PLHBMWRK EQU   PLHEXTEN+5                                               02335000
BUFCRSC1 EQU   BUFCAVL                                                  02336000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02337000
PLHBMSV5 EQU   PLHEXTEN+24                                              02338000
PLHBMSV4 EQU   PLHEXTEN+20                                              02339000
PLHBMSV3 EQU   PLHEXTEN+16                                              02340000
PLHBMSV2 EQU   PLHEXTEN+12                                              02341000
PLHBMSV1 EQU   PLHEXTEN+8                                               02342000
PLHRDCNT EQU   PLHEXTEN+6                                               02343000
PLHBMSOV EQU   PLHBMWRK                                                 02344000
PLHBEUC  EQU   PLHBMWRK                                                 02345000
PLHBMRDF EQU   PLHBMWRK                                                 02346000
@NM00042 EQU   PLHEXTEN+4                                               02347000
PLHRESR1 EQU   PLHEXTEN                                                 02348000
AMDATA   EQU   IDADATA                                                  02349000
RDFEMPTY EQU   RDFRBYTE                                                 02350000
RDF1ST   EQU   RDFSEG                                                   02351000
RDFNOT1  EQU   RDFSEG                                                   02352000
RDFCTNU  EQU   RDFRBYTE                                                 02353000
RDFTYPE  EQU   RDFRBYTE                                                 02354000
IXKEY    EQU   IDAIXK                                                   02355000
IBFLP1   EQU   IBFLP2                                                   02356000
IXHFLGS  EQU   IDAIXH+17                                                02357000
IXHXX    EQU   IDAIXH+12                                                02358000
@NM00062 EQU   CIDFLL                                                   02359000
CIDFBUSY EQU   CIDFLL                                                   02360000
IXSLEP   EQU   IDAIXSPL+28                                              02361000
IXSSEP   EQU   IDAIXSPL+24                                              02362000
IXSEKON  EQU   IDAIXSPL+18                                              02363000
@NM00061 EQU   IXSBFLG                                                  02364000
IXSLELV  EQU   IXSBFLG                                                  02365000
IXSSSRH  EQU   IXSBFLG                                                  02366000
IXSNOSR  EQU   IDAIXSPL+16                                              02367000
IXSKLEN  EQU   IDAIXSPL+14                                              02368000
BUFCEND  EQU   IDABUFC+64                                               02369000
BUFCUCDN EQU   IDABUFC+60                                               02370000
BUFCUCUP EQU   IDABUFC+56                                               02371000
BUFCMDBT EQU   IDABUFC+52                                               02372000
BUFCHAIN EQU   IDABUFC+48                                               02373000
BUFXORBA EQU   IDABUFC+44                                               02374000
BUFCNXT2 EQU   IDABUFC+37                                               02375000
BUFCIDXL EQU   IDABUFC+36                                               02376000
BUFCDSPC EQU   IDABUFC+32                                               02377000
BUFCWLEN EQU   BUFCINV                                                  02378000
BUFCNXT1 EQU   IDABUFC+24                                               02379000
BUFCCPA  EQU   IDABUFC+16                                               02380000
BUFCORBA EQU   IDABUFC+12                                               02381000
BUFCAMB  EQU   BUFCPLH                                                  02382000
@NM00060 EQU   BUFCFLG2                                                 02383000
BUFCEOD  EQU   BUFCFLG2                                                 02384000
BUFCBSYW EQU   BUFCFLG2                                                 02385000
BUFCBSYR EQU   BUFCFLG2                                                 02386000
BUFCNLAS EQU   BUFCFLG2                                                 02387000
BUFCXDDR EQU   BUFCFLG2                                                 02388000
BUFCFIX  EQU   BUFCIOFL                                                 02389000
BUFCPFCP EQU   BUFCIOFL                                                 02390000
BUFCXEDB EQU   BUFCIOFL                                                 02391000
BUFCWC   EQU   BUFCIOFL                                                 02392000
BUFCREAL EQU   BUFCIOFL                                                 02393000
BUFCRRD  EQU   BUFCIOFL                                                 02394000
BUFCFMT  EQU   BUFCIOFL                                                 02395000
BUFCEPT  EQU   BUFCFLG1                                                 02396000
BUFCER2  EQU   BUFCFLG1                                                 02397000
BUFCER1  EQU   BUFCFLG1                                                 02398000
BUFCINS  EQU   BUFCFLG1                                                 02399000
BUFCSEG  EQU   BUFCFLG1                                                 02400000
BUFCUPG  EQU   BUFCFLG1                                                 02401000
BUFCUCNT EQU   BUFCAVL                                                  02402000
@NM00059 EQU   IDABUFDR+16                                              02403000
BUFDBUFC EQU   IDABUFDR+12                                              02404000
@NM00058 EQU   BUFDRFLG                                                 02405000
BUFDRAVL EQU   BUFDRFLG                                                 02406000
BUFDRREL EQU   BUFDRFLG                                                 02407000
BUFDRTSB EQU   IDABUFDR+10                                              02408000
BUFDRMAX EQU   BUFDRCIX                                                 02409000
BUFDRPFN EQU   IDABUFDR+8                                               02410000
BUFDRPFB EQU   IDABUFDR+4                                               02411000
BUFDRLEN EQU   IDABUFDR+2                                               02412000
BUFDRNO  EQU   IDABUFDR+1                                               02413000
BUFDRID  EQU   IDABUFDR                                                 02414000
@NM00057 EQU   IDADIWA+92                                               02415000
@NM00056 EQU   IDADIWA+88                                               02416000
@NM00055 EQU   IDADIWA+84                                               02417000
@NM00054 EQU   IDADIWA+80                                               02418000
@NM00053 EQU   IDADIWA+76                                               02419000
@NM00052 EQU   IDADIWA+72                                               02420000
@NM00051 EQU   IDADIWA+68                                               02421000
@NM00050 EQU   IDADIWA+64                                               02422000
@NM00049 EQU   IDADIWA+60                                               02423000
@NM00048 EQU   IDADIWA+56                                               02424000
DIWINRBA EQU   IDADIWA+52                                               02425000
DIWRKCT  EQU   IDADIWA+48                                               02426000
DIWSAVE5 EQU   DIWSAVE+16                                               02427000
DIWSAVE3 EQU   DIWSAVE+8                                                02428000
DIWSAVE2 EQU   DIWSAVE+4                                                02429000
DIWSPLTP EQU   IDADIWA+24                                               02430000
DIWBUFC  EQU   IDADIWA+20                                               02431000
DIWPLH   EQU   IDADIWA+16                                               02432000
DIWHRBA  EQU   IDADIWA+12                                               02433000
DIWLRBA  EQU   IDADIWA+8                                                02434000
@NM00047 EQU   IDADIWA+6                                                02435000
DIW1ST   EQU   DIWFLG1                                                  02436000
DIWNOT1  EQU   DIWFLG1                                                  02437000
DIWSHIFT EQU   DIWFLG1                                                  02438000
DIWGSPC  EQU   DIWFLG1                                                  02439000
DIWEOKR  EQU   DIWFLG1                                                  02440000
DIWPFERR EQU   DIWFLG1                                                  02441000
DIWCISPL EQU   DIWFLG1                                                  02442000
DIWCAS   EQU   DIWFLG1                                                  02443000
DIWLEN   EQU   IDADIWA+2                                                02444000
DIWATV   EQU   IDADIWA+1                                                02445000
DIWID    EQU   IDADIWA                                                  02446000
@NM00046 EQU   IDAIMWA+72                                               02447000
@NM00045 EQU   IDAIMWA+67                                               02448000
IMWFGAIN EQU   IDAIMWA+64                                               02449000
IMWLBUFC EQU   IDAIMWA+56                                               02450000
IMWXKEYP EQU   IDAIMWA+40                                               02451000
IMWLEN   EQU   IDAIMWA+2                                                02452000
IMWBSE   EQU   IMWFLAGS                                                 02453000
IMWID    EQU   IDAIMWA                                                  02454000
ICWCERP  EQU   IDAICWA+59                                               02455000
ICWCEL   EQU   IDAICWA+58                                               02456000
ICWCEF   EQU   IDAICWA+57                                               02457000
ICWCER   EQU   IDAICWA+56                                               02458000
ICWREQ   EQU   IDAICWA+54                                               02459000
ICWCRSEG EQU   IDAICWA+52                                               02460000
ICWNOSEG EQU   IDAICWA+50                                               02461000
ICWNEST  EQU   IDAICWA+48                                               02462000
ICWARDBP EQU   IDAICWA+36                                               02463000
ICWSCNT  EQU   IDAICWA+22                                               02464000
ICWLEN   EQU   IDAICWA+2                                                02465000
ICWENDRQ EQU   ICWFLG1                                                  02466000
ICWSPLIT EQU   ICWFLG1                                                  02467000
ICWVNE   EQU   ICWFLG1                                                  02468000
ICWVSE   EQU   ICWFLG1                                                  02469000
ICWRBAOK EQU   ICWFLG1                                                  02470000
ICWWAGM  EQU   ICWFLG1                                                  02471000
ICWWNF   EQU   ICWFLG1                                                  02472000
ICWID    EQU   IDAICWA                                                  02473000
AMDEXCP  EQU   AMDSTAT+44                                               02474000
AMDNCAS  EQU   AMDSTAT+40                                               02475000
AMDNCIS  EQU   AMDSTAT+36                                               02476000
AMDASPA  EQU   AMDSTAT+32                                               02477000
AMDRETR  EQU   AMDSTAT+28                                               02478000
AMDUPR   EQU   AMDSTAT+24                                               02479000
AMDIREC  EQU   AMDSTAT+20                                               02480000
AMDDELR  EQU   AMDSTAT+16                                               02481000
AMDNLR   EQU   AMDSTAT+12                                               02482000
AMDNEXT  EQU   AMDSTAT+10                                               02483000
AMDSTSP  EQU   AMDSTAT                                                  02484000
@NM00044 EQU   IDAAMDSB+41                                              02485000
@NM00043 EQU   AMDATTR3                                                 02486000
AMDLM    EQU   AMDATTR3                                                 02487000
AMDWAIT  EQU   AMDATTR3                                                 02488000
AMDBIND  EQU   AMDATTR3                                                 02489000
AMDFAULT EQU   AMDATTR3                                                 02490000
AMDUNQ   EQU   AMDATTR3                                                 02491000
AMDPARDB EQU   IDAAMDSB+36                                              02492000
AMDMAXRR EQU   AMDSSRBA                                                 02493000
AMDNSLOT EQU   AMDHLRBA                                                 02494000
AMDLRECL EQU   IDAAMDSB+24                                              02495000
AMDFSCI  EQU   IDAAMDSB+16                                              02496000
AMDFSCA  EQU   IDAAMDSB+14                                              02497000
AMDPCTCI EQU   IDAAMDSB+11                                              02498000
AMDPCTCA EQU   IDAAMDSB+10                                              02499000
AMDAXRKP EQU   AMDNEST                                                  02500000
AMDLEN   EQU   IDAAMDSB+2                                               02501000
AMDSPAN  EQU   AMDATTR                                                  02502000
AMDRRDS  EQU   AMDATTR                                                  02503000
AMDORDER EQU   AMDATTR                                                  02504000
AMDREPL  EQU   AMDATTR                                                  02505000
AMDSDT   EQU   AMDATTR                                                  02506000
AMDWCK   EQU   AMDATTR                                                  02507000
AMDDST   EQU   AMDATTR                                                  02508000
AMDSBID  EQU   IDAAMDSB                                                 02509000
PLHERRET EQU   IDAPLH+276                                               02510000
PLHASCB  EQU   IDAPLH+272                                               02511000
PLHECB   EQU   IDAPLH+268                                               02512000
@NM00041 EQU   IDAPLH+266                                               02513000
@NM00040 EQU   PLHTMRPL                                                 02514000
PLHTMIOB EQU   PLHTMRPL                                                 02515000
PLHTMINX EQU   PLHTMRPL                                                 02516000
PLHTMDTA EQU   PLHTMRPL                                                 02517000
PLHTMDIW EQU   PLHTMRPL                                                 02518000
PLHTMBUF EQU   PLHTMRPL                                                 02519000
PLHTERM  EQU   PLHTMRPL                                                 02520000
PLHDRMSK EQU   IDAPLH+264                                               02521000
PLHR13   EQU   IDAPLH+260                                               02522000
PLHPARM1 EQU   IDAPLH+256                                               02523000
PLHDRRSC EQU   IDAPLH+252                                               02524000
PLHSLRBA EQU   IDAPLH+244                                               02525000
PLHSRCSG EQU   IDAPLH+242                                               02526000
PLHNOSEG EQU   IDAPLH+240                                               02527000
PLHLLOR  EQU   IDAPLH+236                                               02528000
PLHXPLH  EQU   PLHWAX                                                   02529000
@NM00039 EQU   PLHIXSPL+8                                               02530000
PLHIXBFC EQU   PLHIXSPL+4                                               02531000
PLHHIREC EQU   PLHSSRBA                                                 02532000
PLHRBUFC EQU   IDAPLH+192                                               02533000
PLHNRBA  EQU   IDAPLH+184                                               02534000
PLHDDDD  EQU   PLHEOVPT                                                 02535000
PLHAR14  EQU   IDAPLH+176                                               02536000
@NM00038 EQU   IDAPLH+172                                               02537000
@NM00037 EQU   IDAPLH+168                                               02538000
PLHASAVE EQU   IDAPLH+164                                               02539000
PLHRETOS EQU   IDAPLH+118                                               02540000
PLHCHAIN EQU   IDAPLH+112                                               02541000
PLHAMB   EQU   IDAPLH+108                                               02542000
PLHSAVE6 EQU   IDAPLH+104                                               02543000
PLHSAVE5 EQU   IDAPLH+100                                               02544000
PLHSAVE4 EQU   IDAPLH+96                                                02545000
PLHSAVE3 EQU   IDAPLH+92                                                02546000
PLHSAVE2 EQU   IDAPLH+88                                                02547000
PLHSAVE1 EQU   IDAPLH+84                                                02548000
PLHARET  EQU   IDAPLH+80                                                02549000
PLHIIOB  EQU   PLHDIOB                                                  02550000
PLHSRSID EQU   IDAPLH+74                                                02551000
PLHRDFC  EQU   IDAPLH+72                                                02552000
PLHRDFP  EQU   IDAPLH+68                                                02553000
PLHFSP   EQU   IDAPLH+64                                                02554000
PLHRECP  EQU   IDAPLH+60                                                02555000
PLHNBUFC EQU   IDAPLH+56                                                02556000
PLHLRECL EQU   IDAPLH+48                                                02557000
PLHARDB  EQU   IDAPLH+44                                                02558000
@NM00036 EQU   PLHRSCS                                                  02559000
PLHDBPER EQU   PLHRSCS                                                  02560000
PLHDSERR EQU   PLHRSCS                                                  02561000
PLHASYER EQU   PLHRSCS                                                  02562000
@NM00035 EQU   PLHRSCS                                                  02563000
PLHBUFHD EQU   PLHRSCS                                                  02564000
PLHINEOV EQU   PLHRSCS                                                  02565000
PLHRCODE EQU   IDAPLH+41                                                02566000
PLHUCODE EQU   PLHJCODE                                                 02567000
PLHJNRBA EQU   IDAPLH+36                                                02568000
PLHJRNLL EQU   IDAPLH+32                                                02569000
PLHUPECB EQU   PLHJORBA                                                 02570000
PLHDSIDA EQU   IDAPLH+24                                                02571000
PLHCRPL  EQU   IDAPLH+20                                                02572000
PLHMRPL  EQU   IDAPLH+16                                                02573000
PLHBFRNO EQU   IDAPLH+15                                                02574000
PLHFRCNT EQU   IDAPLH+14                                                02575000
PLHRMIN  EQU   IDAPLH+13                                                02576000
PLHDSTYP EQU   IDAPLH+12                                                02577000
PLHACB   EQU   IDAPLH+8                                                 02578000
PLHRAE   EQU   PLHAFLGS                                                 02579000
PLHRABWD EQU   PLHAFLGS                                                 02580000
PLHIOSID EQU   PLHAFLGS                                                 02581000
PLHDBDC  EQU   PLHAFLGS                                                 02582000
PLHVAMB  EQU   PLHAFLGS                                                 02583000
PLHIOSRQ EQU   PLHAFLGS                                                 02584000
PLHDRLM  EQU   PLHAFLGS                                                 02585000
PLHEOVDF EQU   PLHFLG3                                                  02586000
PLHRVRS  EQU   PLHFLG3                                                  02587000
PLHBWD   EQU   PLHFLG3                                                  02588000
PLHSLVLD EQU   PLHFLG3                                                  02589000
PLHRAHD  EQU   PLHFLG3                                                  02590000
PLHSRBSG EQU   PLHFLG3                                                  02591000
@NM00034 EQU   PLHEFLGS+1                                               02592000
PLHRSTRT EQU   PLHEFLGS+1                                               02593000
PLHDSCAN EQU   PLHEFLGS                                                 02594000
PLHINVAL EQU   PLHEFLGS                                                 02595000
PLHEODX  EQU   PLHEFLGS                                                 02596000
PLHNOADV EQU   PLHEFLGS                                                 02597000
PLHSRINV EQU   PLHEFLGS                                                 02598000
PLHSKPER EQU   PLHEFLGS                                                 02599000
PLH1ST   EQU   PLHEFLGS                                                 02600000
PLHNOSPC EQU   PLHEFLGS                                                 02601000
PLHIWAIT EQU   PLHFLG2                                                  02602000
PLHSVADV EQU   PLHFLG2                                                  02603000
PLHCIINS EQU   PLHFLG2                                                  02604000
PLHKRE   EQU   PLHFLG2                                                  02605000
PLHKEYMD EQU   PLHFLG2                                                  02606000
PLHSQINS EQU   PLHFLG2                                                  02607000
PLHUPD   EQU   PLHFLG2                                                  02608000
@NM00033 EQU   PLHFLG1                                                  02609000
PLHDRPND EQU   PLHFLG1                                                  02610000
PLHASYRQ EQU   PLHFLG1                                                  02611000
PLHRDEXC EQU   PLHFLG1                                                  02612000
PLHASKBF EQU   PLHFLG1                                                  02613000
PLHENDRQ EQU   PLHFLG1                                                  02614000
PLHEOVW  EQU   PLHFLG1                                                  02615000
PLHATV   EQU   IDAPLH+1                                                 02616000
PLHAVL   EQU   IDAPLH                                                   02617000
PLHIOSDQ EQU   IDAPLHDR+12                                              02618000
PLHDRCUR EQU   IDAPLHDR+10                                              02619000
PLHDRMAX EQU   IDAPLHDR+8                                               02620000
PLHDRREQ EQU   IDAPLHDR+4                                               02621000
PLHELTH  EQU   IDAPLHDR+2                                               02622000
PLHCNT   EQU   IDAPLHDR+1                                               02623000
PLHID    EQU   IDAPLHDR                                                 02624000
AMBVIOT  EQU   IDAAMB+116                                               02625000
AMBSZCP  EQU   IDAAMB+114                                               02626000
AMBSZFW  EQU   IDAAMB+112                                               02627000
AMBSZWR  EQU   IDAAMB+110                                               02628000
AMBSZRD  EQU   IDAAMB+108                                               02629000
AMBEXEX  EQU   IDAAMB+100                                               02630000
AMBWSHD  EQU   IDAAMB+96                                                02631000
AMBCPA   EQU   IDAAMB+92                                                02632000
AMBBM2SH EQU   IDAAMB+88                                                02633000
AMBRDCNT EQU   AMBCSWD1+2                                               02634000
@NM00032 EQU   AMBCSWD1+1                                               02635000
@NM00031 EQU   AMBAFLG                                                  02636000
AMBCFX   EQU   AMBAFLG                                                  02637000
AMBSIS   EQU   AMBAFLG                                                  02638000
AMBDFR   EQU   AMBAFLG                                                  02639000
AMBICI   EQU   AMBAFLG                                                  02640000
AMBGSR   EQU   AMBAFLG                                                  02641000
AMBLSR   EQU   AMBAFLG                                                  02642000
@NM00030 EQU   AMBAFLG                                                  02643000
AMBUPLH  EQU   IDAAMB+80                                                02644000
AMBPAMBL EQU   IDAAMB+76                                                02645000
AMBPIXP  EQU   IDAAMB+72                                                02646000
@NM00029 EQU   IDAAMB+68                                                02647000
AMBWKA   EQU   IDAAMB+60                                                02648000
AMBAMBXN EQU   AMBEOVPT                                                 02649000
AMBEDB   EQU   IDAAMB+52                                                02650000
AMBRPT   EQU   IDAAMB+50                                                02651000
AMBPUG   EQU   AMBFLG2                                                  02652000
AMBBUSY  EQU   AMBOFLGS                                                 02653000
AMBEXFG  EQU   AMBOFLGS                                                 02654000
@NM00028 EQU   AMBOFLGS                                                 02655000
AMBOPEN  EQU   AMBOFLGS                                                 02656000
@NM00027 EQU   AMBOFLGS                                                 02657000
AMBDEBAD EQU   AMBDEBPT+1                                               02658000
AMBIFLGS EQU   AMBDEBPT                                                 02659000
AMBAMETH EQU   IDAAMB+43                                                02660000
AMBUPX   EQU   AMBINFL                                                  02661000
AMBUCRA  EQU   AMBINFL                                                  02662000
AMBSCRA  EQU   AMBINFL                                                  02663000
AMBCAT   EQU   AMBINFL                                                  02664000
@NM00026 EQU   AMBINFL                                                  02665000
@NM00025 EQU   AMBINFL                                                  02666000
AMBTIOT  EQU   IDAAMB+40                                                02667000
@NM00024 EQU   IDAAMB+38                                                02668000
AMBDDSN  EQU   IDAAMB+35                                                02669000
AMBCDSN  EQU   IDAAMB+32                                                02670000
AMBIOMB  EQU   AMBIOBAD                                                 02671000
@NM00023 EQU   AMBDSORG+1                                               02672000
AMBDORGA EQU   AMBDSORG+1                                               02673000
@NM00022 EQU   AMBDSORG                                                 02674000
AMBINBUF EQU   AMBFLG1                                                  02675000
AMBJRN   EQU   AMBFLG1                                                  02676000
AMBUBF   EQU   AMBFLG1                                                  02677000
AMBSPEED EQU   AMBFLG1                                                  02678000
AMBPCAT  EQU   AMBFLG1                                                  02679000
AMBMCAT  EQU   AMBFLG1                                                  02680000
AMBTYPE  EQU   AMBFLG1                                                  02681000
AMBCREAT EQU   AMBFLG1                                                  02682000
@NM00021 EQU   AMBFLG0                                                  02683000
AMBPSDS  EQU   AMBFLG0                                                  02684000
AMBCACB  EQU   IDAAMB+16                                                02685000
AMBPH    EQU   IDAAMB+12                                                02686000
AMBBUFC  EQU   IDAAMB+8                                                 02687000
AMBLINK  EQU   IDAAMB+4                                                 02688000
AMBLEN   EQU   IDAAMB+2                                                 02689000
AMBRSC   EQU   IDAAMB+1                                                 02690000
AMBID    EQU   IDAAMB                                                   02691000
AMBLCMB  EQU   IDAAMBL+64                                               02692000
AMBLBIB  EQU   IDAAMBL+60                                               02693000
AMBLMIDS EQU   IDAAMBL+42                                               02694000
AMBLNIDS EQU   IDAAMBL+41                                               02695000
@NM00020 EQU   IDAAMBL+40                                               02696000
AMBLNUM  EQU   IDAAMBL+38                                               02697000
AMBLNST  EQU   IDAAMBL+37                                               02698000
@NM00019 EQU   AMBLFLG2                                                 02699000
AMBLSTAG EQU   AMBLFLG2                                                 02700000
@NM00018 EQU   AMBLFLG2                                                 02701000
AMBLDUMY EQU   AMBLFLG1                                                 02702000
AMBLCAT  EQU   AMBLFLG1                                                 02703000
AMBLUCRA EQU   AMBLFLG1                                                 02704000
AMBLSCRA EQU   AMBLFLG1                                                 02705000
AMBLVVIC EQU   AMBLFLG1                                                 02706000
AMBLUPD  EQU   AMBLFLG1                                                 02707000
AMBLCINV EQU   AMBLFLG1                                                 02708000
AMBLFULL EQU   AMBLFLG1                                                 02709000
AMBLLEN  EQU   IDAAMBL+34                                               02710000
@NM00017 EQU   AMBLSHAR                                                 02711000
AMBLWRIT EQU   AMBLSHAR                                                 02712000
AMBLCATO EQU   AMBLSHAR                                                 02713000
AMBLPRIM EQU   AMBLSHAR                                                 02714000
AMBLID   EQU   IDAAMBL+32                                               02715000
@NM00016 EQU   IDAAMBL+31                                               02716000
@NM00015 EQU   AMBLTYPE                                                 02717000
AMBLFIX  EQU   AMBLTYPE                                                 02718000
AMBLBASE EQU   AMBLTYPE                                                 02719000
AMBLAIX  EQU   AMBLTYPE                                                 02720000
AMBLUPGR EQU   AMBLTYPE                                                 02721000
AMBLPATH EQU   AMBLTYPE                                                 02722000
AMBLENO  EQU   AMBLVC+1                                                 02723000
AMBLVRT  EQU   AMBLVC                                                   02724000
AMBLXPT  EQU   IDAAMBL+24                                               02725000
AMBLDFR  EQU   AMBLQ                                                    02726000
AMBLESDS EQU   AMBLQ                                                    02727000
AMBLKSDS EQU   AMBLQ                                                    02728000
AMBLUBF  EQU   AMBLQ                                                    02729000
AMBLFSTP EQU   AMBLQ                                                    02730000
AMBLLSR  EQU   AMBLQ                                                    02731000
AMBLGSR  EQU   AMBLQ                                                    02732000
AMBLDDC  EQU   AMBLQ                                                    02733000
AMBLDCI  EQU   AMBLIDF+4                                                02734000
AMBLCACB EQU   AMBLIDF                                                  02735000
@NM00014 EQU   AMBLEOV+2                                                02736000
AMBLCOMP EQU   AMBLEOV+1                                                02737000
AMBLESET EQU   AMBLEFLG                                                 02738000
AMBLWAIT EQU   AMBLEFLG                                                 02739000
AMBLACB  EQU   IDAAMBL+8                                                02740000
AMBLSCHN EQU   IDAAMBL+4                                                02741000
AMBLPCHN EQU   IDAAMBL                                                  02742000
ACBAPID  EQU   ACBCOMN+72                                               02743000
ACBCBMWA EQU   ACBCOMN+68                                               02744000
ACBUAPTR EQU   ACBCOMN+64                                               02745000
ACBLRECL EQU   ACBCOMN+62                                               02746000
ACBMSGLN EQU   ACBBLKSZ                                                 02747000
ACBBUFSP EQU   ACBCOMN+56                                               02748000
@NM00013 EQU   ACBUJFCB+1                                               02749000
ACBOPTN  EQU   ACBUJFCB                                                 02750000
ACBVVIC  EQU   ACBINFLG                                                 02751000
ACBUCRA  EQU   ACBINFLG                                                 02752000
ACBSCRA  EQU   ACBINFLG                                                 02753000
ACBCAT   EQU   ACBINFLG                                                 02754000
ACBIJRQE EQU   ACBINFLG                                                 02755000
ACBJEPS  EQU   ACBINFLG                                                 02756000
@NM00012 EQU   ACBINFLG                                                 02757000
ACBERFLG EQU   ACBCOMN+49                                               02758000
ACBBUSY  EQU   ACBIOSFG                                                 02759000
ACBLOCK  EQU   ACBEXFG                                                  02760000
@NM00011 EQU   ACBOFLGS                                                 02761000
ACBDSERR EQU   ACBOFLGS                                                 02762000
ACBOPEN  EQU   ACBOFLGS                                                 02763000
ACBEOV   EQU   ACBOFLGS                                                 02764000
@NM00010 EQU   ACBOFLGS                                                 02765000
ACBDEB   EQU   ACBDDNM+5                                                02766000
ACBERFL  EQU   ACBDDNM+4                                                02767000
ACBAM    EQU   ACBAMETH                                                 02768000
ACBINFL  EQU   ACBDDNM+2                                                02769000
ACBTIOT  EQU   ACBDDNM                                                  02770000
ACBUEL   EQU   ACBEXLST                                                 02771000
ACBPASSW EQU   ACBCOMN+32                                               02772000
ACBMSGAR EQU   ACBCOMN+28                                               02773000
@NM00009 EQU   ACBDSORG+1                                               02774000
ACBDORGA EQU   ACBDSORG+1                                               02775000
@NM00008 EQU   ACBDSORG                                                 02776000
ACBCRNRE EQU   ACBCROPS                                                 02777000
ACBCRNCK EQU   ACBCROPS                                                 02778000
ACBASA   EQU   ACBCCTYP                                                 02779000
@NM00007 EQU   ACBCCTYP                                                 02780000
ACBRECAF EQU   ACBRECFM                                                 02781000
ACBJBUF  EQU   ACBBUFPL+2                                               02782000
ACBMACR4 EQU   ACBBUFPL+1                                               02783000
@NM00006 EQU   ACBMACR3                                                 02784000
ACBNCFX  EQU   ACBMACR3                                                 02785000
ACBSIS   EQU   ACBMACR3                                                 02786000
ACBDFR   EQU   ACBMACR3                                                 02787000
ACBICI   EQU   ACBMACR3                                                 02788000
ACBGSR   EQU   ACBMACR3                                                 02789000
ACBLSR   EQU   ACBMACR3                                                 02790000
@NM00005 EQU   ACBMACR3                                                 02791000
ACBBUFNI EQU   ACBCOMN+18                                               02792000
ACBBUFND EQU   ACBCOMN+16                                               02793000
ACBSTRNO EQU   ACBCOMN+15                                               02794000
ACBBSTNO EQU   ACBCOMN+14                                               02795000
ACBAIX   EQU   ACBMACR2                                                 02796000
ACBDSN   EQU   ACBMACR2                                                 02797000
ACBRST   EQU   ACBMACR2                                                 02798000
ACBLOGON EQU   ACBMACR2                                                 02799000
ACBSKP   EQU   ACBMACR2                                                 02800000
@NM00004 EQU   ACBMACR2                                                 02801000
ACBUBF   EQU   ACBMACR1                                                 02802000
ACBOUT   EQU   ACBMACR1                                                 02803000
ACBIN    EQU   ACBMACR1                                                 02804000
ACBDIR   EQU   ACBMACR1                                                 02805000
ACBSEQ   EQU   ACBMACR1                                                 02806000
ACBBLK   EQU   ACBCNV                                                   02807000
ACBADD   EQU   ACBADR                                                   02808000
ACBKEY   EQU   ACBMACR1                                                 02809000
ACBINRTN EQU   ACBCOMN+8                                                02810000
ACBIBCT  EQU   ACBJWA                                                   02811000
ACBLEN2  EQU   ACBLENG2                                                 02812000
ACBSTYP  EQU   ACBCOMN+1                                                02813000
ACBID    EQU   ACBCOMN                                                  02814000
RPLERMSA EQU   RPLCOMN+72                                               02815000
RPLEMLEN EQU   RPLCOMN+70                                               02816000
RPLACTIV EQU   RPLCOMN+69                                               02817000
RPLBRANC EQU   RPLEXTD1                                                 02818000
RPLNIB   EQU   RPLEXTD1                                                 02819000
@NM00003 EQU   RPLEXTD1                                                 02820000
RPLEXIT  EQU   RPLEXTD1                                                 02821000
RPLNEXIT EQU   RPLEXTD1                                                 02822000
RPLEXSCH EQU   RPLEXTD1                                                 02823000
RPLDDDD  EQU   RPLRBAR+4                                                02824000
@NM00002 EQU   RPLRBAR+3                                                02825000
@NM00001 EQU   RPLAIXID                                                 02826000
RPLAXPKP EQU   RPLAIXID                                                 02827000
RPLAIXPC EQU   RPLRBAR                                                  02828000
RPLRSV88 EQU   RPLOPT8                                                  02829000
RPLUNCON EQU   RPLOPT8                                                  02830000
RPLACTV  EQU   RPLOPT8                                                  02831000
RPLSESS  EQU   RPLOPT8                                                  02832000
RPLPEND  EQU   RPLOPT8                                                  02833000
RPLODPRM EQU   RPLOPT8                                                  02834000
RPLODACP EQU   RPLOPT8                                                  02835000
RPLODACQ EQU   RPLOPT8                                                  02836000
RPLRSV78 EQU   RPLOPT7                                                  02837000
RPLRSV77 EQU   RPLOPT7                                                  02838000
RPLRLSOP EQU   RPLOPT7                                                  02839000
RPLTPOST EQU   RPLOPT7                                                  02840000
RPLQOPT  EQU   RPLOPT7                                                  02841000
RPLCNIMM EQU   RPLCNOPT                                                 02842000
RPLCNANY EQU   RPLCNOPT                                                 02843000
RPLCNALL EQU   RPLCNOPT                                                 02844000
RPLRSV68 EQU   RPLOPT6                                                  02845000
RPLRSV67 EQU   RPLOPT6                                                  02846000
RPLLOCK  EQU   RPLOPT6                                                  02847000
RPLNCOND EQU   RPLOPT6                                                  02848000
RPLCOND  EQU   RPLOPT6                                                  02849000
RPLEOT   EQU   RPLUNTYP                                                 02850000
RPLEOM   EQU   RPLUNTYP                                                 02851000
RPLEOB   EQU   RPLUNTYP                                                 02852000
RPLWROPT EQU   RPLOPT5                                                  02853000
RPLNODE  EQU   RPLOPT5                                                  02854000
RPLERACE EQU   RPLWRTYP                                                 02855000
RPLEAU   EQU   RPLWRTYP                                                 02856000
RPLNERAS EQU   RPLWRTYP                                                 02857000
RPLPSOPT EQU   RPLOPT5                                                  02858000
RPLSSNIN EQU   RPLOPT5                                                  02859000
RPLDLGIN EQU   RPLOPT5                                                  02860000
RPLBUFL  EQU   RPLCOMN+52                                               02861000
RPLCHAIN EQU   RPLNXTRP                                                 02862000
RPLOPT4  EQU   RPLOPTCD+3                                               02863000
RPLALIGN EQU   RPLOPT3                                                  02864000
RPLFMT   EQU   RPLOPT3                                                  02865000
RPLFLD   EQU   RPLOPT3                                                  02866000
RPLVFY   EQU   RPLOPT3                                                  02867000
RPLBLK   EQU   RPLOPT3                                                  02868000
RPLSFORM EQU   RPLOPT3                                                  02869000
RPLEODS  EQU   RPLOPT3                                                  02870000
RPLNSP   EQU   RPLOPT2                                                  02871000
RPLUPD   EQU   RPLOPT2                                                  02872000
RPLWAITX EQU   RPLOPT2                                                  02873000
RPLLRD   EQU   RPLOPT2                                                  02874000
RPLBWD   EQU   RPLOPT2                                                  02875000
RPLCNV   EQU   RPLOPT2                                                  02876000
RPLADD   EQU   RPLADR                                                   02877000
RPLKEY   EQU   RPLOPT2                                                  02878000
RPLECBIN EQU   RPLECBSW                                                 02879000
RPLGEN   EQU   RPLOPT1                                                  02880000
RPLKGE   EQU   RPLOPT1                                                  02881000
RPLASY   EQU   RPLOPT1                                                  02882000
RPLSKP   EQU   RPLOPT1                                                  02883000
RPLSEQ   EQU   RPLOPT1                                                  02884000
RPLDIR   EQU   RPLOPT1                                                  02885000
RPLLOC   EQU   RPLOPT1                                                  02886000
RPLDAF   EQU   RPLARG+2                                                 02887000
RPLSAF   EQU   RPLARG                                                   02888000
RPLTCBPT EQU   RPLCOMN+28                                               02889000
RPLCCHAR EQU   RPLCOMN+20                                               02890000
RPLSTRID EQU   RPLCOMN+18                                               02891000
RPLKEYL  EQU   RPLKEYLE                                                 02892000
RPLRDSOH EQU   RPLFDB3                                                  02893000
RPLRLG   EQU   RPLFDB3                                                  02894000
RPLLGFRC EQU   RPLFDB3                                                  02895000
RPLREOT  EQU   RPLFDB3                                                  02896000
RPLREOM  EQU   RPLFDB3                                                  02897000
RPLREOB  EQU   RPLFDB3                                                  02898000
RPLSV32  EQU   RPLFDB3                                                  02899000
RPLUINPT EQU   RPLFDB3                                                  02900000
RPLSTSAV EQU   RPLFDB2                                                  02901000
RPLCUERR EQU   RPLFDB2                                                  02902000
RPLDLGFL EQU   RPLFDB2                                                  02903000
RPLIOERR EQU   RPLFDB2                                                  02904000
RPLDVUNS EQU   RPLFDB2                                                  02905000
RPLATND  EQU   RPLFDB2                                                  02906000
RPLRVID  EQU   RPLFDB2                                                  02907000
RPLERLK  EQU   RPLFDB2                                                  02908000
RPLSTAT  EQU   RPLFDBWD                                                 02909000
RPLPOST  EQU   RPLECB                                                   02910000
RPLWAIT  EQU   RPLECB                                                   02911000
RPLPLHPT EQU   RPLCOMN+4                                                02912000
RPLLEN2  EQU   RPLLEN                                                   02913000
RPLREQ   EQU   RPLIDWD+2                                                02914000
RPLSTYP  EQU   RPLIDWD+1                                                02915000
RPLID    EQU   RPLIDWD                                                  02916000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02917000
@RT00190 EQU   HLINSERT                                                 02918000
@RT00237 EQU   WTERR                                                    02919000
@RT00365 EQU   EXIT                                                     02920000
@RT00396 EQU   BUILDHL                                                  02921000
@RT00486 EQU   EXIT                                                     02922000
@RT00569 EQU   WTERR                                                    02923000
@PB00002 EQU   @EC00611                                                 02924000
@RF00745 EQU   @EL00005                                                 02925000
@RF00749 EQU   @EL00005                                                 02926000
@ENDDATA EQU   *                                                        02927000
         END   IDA019RI,(C'PLS1658',0701,78209)                         02928000
