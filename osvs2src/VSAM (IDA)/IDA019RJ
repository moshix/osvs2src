         TITLE 'IDA019RJ - VSAM  SPLIT INDEX RECORD                    *00001000
                        '                                               00002000
IDA019RJ CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RJ  78.209'                                 0001 00009000
IDAR     DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00735-IDAR)                                       00013000
         ENTRY IDAR                                                     00014000
IDAWR    DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00772-IDAWR)                                      00018000
         ENTRY IDAWR                                                    00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
         IDASVR14                                                       00027000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE    @ZA29388*/ 00028000
         L     @10,AMBTRACE(,RAMB)                                 0111 00029000
         LTR   @10,@10                                             0111 00030000
         BZ    @RF00111                                            0111 00031000
*     DO;                           /*                       @ZA29388*/ 00032000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 00033000
         L     @15,@CV00954                                        0113 00034000
         BALR  @14,@15                                             0113 00035000
*       GEN(DC X'000C');            /* TRACE ID              @ZA29388*/ 00036000
         DC X'000C'                                                     00037000
*     END;                          /*                       @ZA29388*/ 00038000
*   RAMB=AMBLIX;                    /* SET RAMB TO INDEX SIDE        */ 00039000
@RF00111 L     @10,RPLDACB(,RRPL)                                  0116 00040000
         L     @10,ACBAMBL(,@10)                                   0116 00041000
         L     RAMB,AMBLIX(,@10)                                   0116 00042000
*   RWORK1=AMBIWA;                  /* RWORK1 - WORK AREA BASE       */ 00043000
         L     RWORK1,AMBIWA(,RAMB)                                0117 00044000
*   ICWADD=RWORK1;                  /* ICWADD IN FIRST WORK AREA   0118 00045000
*                                      CONTAINS POINTER TO CURRENT 0118 00046000
*                                      W.A.                          */ 00047000
         ST    RWORK1,ICWADD(,RWORK1)                              0118 00048000
*   ICWSPLIT=ON;                    /* MARK WORK AREA USE IS FOR   0119 00049000
*                                      SPLIT INDEX RECORD            */ 00050000
         OI    ICWSPLIT(RWORK1),B'00000010'                        0119 00051000
*   RPARM1=ICWBUFC->BUFCBAD;        /* POINT TO BUFFER               */ 00052000
         L     @10,ICWBUFC(,RWORK1)                                0120 00053000
         L     RPARM1,BUFCBAD(,@10)                                0120 00054000
*   ICWLN=RPARM1->IXHLV;            /* SET INDEX LEVEL IN WA         */ 00055000
         SLR   @00,@00                                             0121 00056000
         IC    @00,IXHLV(,RPARM1)                                  0121 00057000
         STH   @00,ICWLN(,RWORK1)                                  0121 00058000
*   IF ICWBUFC->BUFCDDDD=PLHSLRBA THEN/* ARE WE SPLITTING THE CURRENT   00059000
*                                      SECOND LEVEL INDEX RECORD   0122 00060000
*                                                            @X04SVES*/ 00061000
         CLC   BUFCDDDD(4,@10),PLHSLRBA(RPLH)                      0122 00062000
         BNE   @RF00122                                            0122 00063000
*     PLHSLVLD=OFF;                 /* YES, MAKE IT INVALID  @X04SVES*/ 00064000
         NI    PLHSLVLD(RPLH),B'11011111'                          0123 00065000
*   IF RPARM1->IXHPTLS='01'X THEN   /* IS THE POINTER LENGTH=1       */ 00066000
@RF00122 CLI   IXHPTLS(RPARM1),X'01'                               0124 00067000
         BNE   @RF00124                                            0124 00068000
*     ICWPTL=ONE;                   /* YES SET LENGTH IN WA          */ 00069000
         MVI   ICWPTL(RWORK1),X'01'                                0125 00070000
*   ELSE                            /* NO                            */ 00071000
*     DO;                           /*                               */ 00072000
         B     @RC00124                                            0126 00073000
@RF00124 DS    0H                                                  0127 00074000
*       IF RPARM1->IXHPTLS='03'X THEN/* IS PTR LENGTH 2              */ 00075000
         CLI   IXHPTLS(RPARM1),X'03'                               0127 00076000
         BNE   @RF00127                                            0127 00077000
*         ICWPTL=TWO;               /* YES                           */ 00078000
         MVI   ICWPTL(RWORK1),X'02'                                0128 00079000
*       ELSE                        /* NO                            */ 00080000
*         ICWPTL=THREE;             /* DEFAULT TO 3                  */ 00081000
         B     @RC00127                                            0129 00082000
@RF00127 MVI   ICWPTL(RWORK1),X'03'                                0129 00083000
*     END;                          /*                               */ 00084000
@RC00127 DS    0H                                                  0131 00085000
*   IF PLHADDTE=OFF|ICWLN^=ICWSS THEN/* NOT ADD TO END OF DATA SET OR   00086000
*                                      HIGH LEVEL INDEX SPLIT      0131 00087000
*                                                            @X04SVES*/ 00088000
@RC00124 TM    PLHADDTE(RPLH),B'00010000'                          0131 00089000
         BZ    @RT00131                                            0131 00090000
         CLC   ICWLN(2,RWORK1),@CH00053                            0131 00091000
         BE    @RF00131                                            0131 00092000
@RT00131 DS    0H                                                  0132 00093000
*     ICWNEST=AMDNEST/TWO;          /* YES, REDUCE NO. ENTRYS PER CI    00094000
*                                      TO HALF THAT OF CREATE TIME   */ 00095000
         L     @10,AMBDSB(,RAMB)                                   0132 00096000
         LH    @06,AMDNEST(,@10)                                   0132 00097000
         SRDA  @06,32                                              0132 00098000
         D     @06,@CF00146                                        0132 00099000
         STH   @07,ICWNEST(,RWORK1)                                0132 00100000
*   ELSE                            /* ADD TO END AND SEQUENCE SET 0133 00101000
*                                      LEVEL                 @X04SVES*/ 00102000
*     ICWNEST=AMDNEST;              /* SAME AS CREATE        @X04SVES*/ 00103000
         B     @RC00131                                            0133 00104000
@RF00131 L     @10,AMBDSB(,RAMB)                                   0133 00105000
         LH    @10,AMDNEST(,@10)                                   0133 00106000
         STH   @10,ICWNEST(,RWORK1)                                0133 00107000
*   IF AMDRANGE=ON THEN             /* KEY RANGE DATA SET            */ 00108000
@RC00131 L     @10,AMBDSB(,RAMB)                                   0134 00109000
         TM    AMDRANGE(@10),B'00000100'                           0134 00110000
         BNO   @RF00134                                            0134 00111000
*     ICWKRDS=ON;                   /* YES, SHOW IN WORK AREA        */ 00112000
         OI    ICWKRDS(RWORK1),B'00000100'                         0135 00113000
*   ELSE                            /* N0                            */ 00114000
*     ICWKRDS=OFF;                  /* SET KEY RANGE FLAG OFF        */ 00115000
         B     @RC00134                                            0136 00116000
@RF00134 NI    ICWKRDS(RWORK1),B'11111011'                         0136 00117000
*   IF ICWWNF=OFF THEN              /* IS THIS A RETRY AT SPLT       */ 00118000
@RC00134 TM    ICWWNF(RWORK1),B'10000000'                          0137 00119000
         BNZ   @RF00137                                            0137 00120000
*     DO;                           /* NO                            */ 00121000
*       BUFCMW=OFF;                 /* TURN OFF MUST WRITE BIT       */ 00122000
         L     @10,ICWBUFC(,RWORK1)                                0139 00123000
         NI    BUFCMW(@10),B'01111111'                             0139 00124000
*       RBUFC=ICWBUFC;              /* SET BUFC REGISTER AND         */ 00125000
         LR    RBUFC,@10                                           0140 00126000
*I01:                                                              0141 00127000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00128000
I01      DS    0H                                                  0142 00129000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00130000
         L     @15,@CV00919                                        0142 00131000
         BALR  @14,@15                                             0142 00132000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00133000
         BALR @11,0                                                     00134000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00135000
         USING *,@11                                                    00136000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00137000
         L     @11,=A(@PSTART)                                          00138000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00139000
         USING @PSTART,@11                                              00140000
*       END I01;                    /* FREE THE BFR          @X04SVLP*/ 00141000
*       RESPECIFY                                                  0148 00142000
*        (RWORK1) RSTD;             /*                               */ 00143000
*       RWORK1=AMBIWA;              /* RESET WORK AREA BASE          */ 00144000
         L     RWORK1,AMBIWA(,RAMB)                                0149 00145000
*I02:                                                              0150 00146000
*       DO;                         /* IDACALL(IDAAQR)               */ 00147000
I02      DS    0H                                                  0151 00148000
*         CALL IDAAQR;              /* EXIT TO IDAAQR                */ 00149000
         L     @15,@CV00916                                        0151 00150000
         BALR  @14,@15                                             0151 00151000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00152000
         BALR @11,0                                                     00153000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00154000
         USING *,@11                                                    00155000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00156000
         L     @11,=A(@PSTART)                                          00157000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00158000
         USING @PSTART,@11                                              00159000
*       END I02;                    /* GO GET AN RBA                 */ 00160000
*       RPARM1=ICWPRBA;             /* PICK UP RBA OF RECORD TO SPLIT*/ 00161000
         L     RPARM1,ICWPRBA(,RWORK1)                             0157 00162000
*       CALL IDAR;                  /* READ THE RECORD               */ 00163000
         L     @15,@CA00961                                        0158 00164000
         BALR  @14,@15                                             0158 00165000
*     END;                          /*                               */ 00166000
*   ELSE                            /* RETRY AT SPLITTING SO         */ 00167000
*     ICWWNF=OFF;                   /* CLEAR FLAG                    */ 00168000
         B     @RC00137                                            0160 00169000
@RF00137 NI    ICWWNF(RWORK1),B'01111111'                          0160 00170000
*   RPARM1=ICWBUFC->BUFCBAD;        /* POINT TO INDEX BUFFER         */ 00171000
@RC00137 L     @10,ICWBUFC(,RWORK1)                                0161 00172000
         L     RPARM1,BUFCBAD(,@10)                                0161 00173000
*   RESPECIFY                                                      0162 00174000
*     RWORK2 RSTD;                  /*                       @X04SVES*/ 00175000
*   RWORK2=RPARM1+RPARM1->IXHLEO;   /* POINT TO LAST ENTRY IN THE  0163 00176000
*                                      RECORD                @X04SVES*/ 00177000
         LR    RWORK2,RPARM1                                       0163 00178000
         AH    RWORK2,IXHLEO(,RPARM1)                              0163 00179000
*   IF RWORK2->IBFLPF=ZERO&         /* IF LAST ENTRY         @X04SVES*/ 00180000
*       RWORK2->IBFLPL=ZERO THEN    /* IS A DUMMY, SET@X04SVES       */ 00181000
         CLI   IBFLPF(RWORK2),0                                    0164 00182000
         BNE   @RF00164                                            0164 00183000
         CLI   IBFLPL(RWORK2),0                                    0164 00184000
         BNE   @RF00164                                            0164 00185000
*     RPARM1->IXHLV=ZERO;           /* LEVEL TO ZERO SO AS TO      0165 00186000
*                                      REMEMBER DUMMY        @X04SVES*/ 00187000
         MVI   IXHLV(RPARM1),X'00'                                 0165 00188000
*   RESPECIFY                                                      0166 00189000
*     RWORK2 UNRSTD;                /*                       @X04SVES*/ 00190000
@RF00164 DS    0H                                                  0167 00191000
*   PLHSAVE6=ICWTPTR;               /* GET SPLIT PT. TO VARY         */ 00192000
         L     @10,ICWTPTR(,RWORK1)                                0167 00193000
         ST    @10,PLHSAVE6(,RPLH)                                 0167 00194000
*   IF RPARM1->IXHSEO=RPARM1->IXHLEO THEN/* ARE ANY SECTION          */ 00195000
         CLC   IXHSEO(2,RPARM1),IXHLEO(RPARM1)                     0168 00196000
         BNE   @RF00168                                            0168 00197000
*     DO;                           /* LLS PRESENT -- NO             */ 00198000
*       RPARM1->IXHSEO=RPARM1->IXHLL-/* SET RIGHT OFFSET TO          */ 00199000
*           RPARM1->IXHFLPLN;       /* LOW KEY ENTRY                 */ 00200000
         LH    @10,IXHLL(,RPARM1)                                  0170 00201000
         N     @10,@CF01056                                        0170 00202000
         SLR   @00,@00                                             0170 00203000
         IC    @00,IXHFLPLN(,RPARM1)                               0170 00204000
         SLR   @10,@00                                             0170 00205000
         STH   @10,IXHSEO(,RPARM1)                                 0170 00206000
*     END;                          /*                               */ 00207000
*   ELSE                            /* LLS ARE PRESENT SO GO         */ 00208000
*     CALL DELSECT;                 /* REMOVE SECTION PTRS. FROM THE    00209000
*                                      RECORD                        */ 00210000
         B     @RC00168                                            0172 00211000
@RF00168 BAL   @14,DELSECT                                         0172 00212000
*/*                                                                  */ 00213000
*/*     UNCOMPRESS THE LOW KEY FOLLOWING THE SPLIT POINT AND         */ 00214000
*/*     PLACE IT INTO THE WORK AREA                                  */ 00215000
*/*                                                                  */ 00216000
*                                                                  0173 00217000
*   RESPECIFY                                                      0173 00218000
*    (RWORK2,                                                      0173 00219000
*     RWORK3,                                                      0173 00220000
*     RWORK4,                                                      0173 00221000
*     RWORK5) RSTD;                 /*                               */ 00222000
@RC00168 DS    0H                                                  0174 00223000
*   RWORK4=RPARM1+RPARM1->IXHSEO;   /* POINT TO RIGHTMOST KEY        */ 00224000
         LR    RWORK4,RPARM1                                       0174 00225000
         AH    RWORK4,IXHSEO(,RPARM1)                              0174 00226000
*RJC:                                                              0175 00227000
*   RWORK2=ADDR(ICWKEY1)+           /* POINT TO POSITION TO          */ 00228000
*       RWORK4->IBFLPF;             /* START STORING KEY             */ 00229000
RJC      LA    RWORK2,ICWKEY1(,RWORK1)                             0175 00230000
         SLR   @10,@10                                             0175 00231000
         IC    @10,IBFLPF(,RWORK4)                                 0175 00232000
         ALR   RWORK2,@10                                          0175 00233000
*   IF RWORK4->IBFLPF=AMDKEYLN THEN /* SPANNED RECORD ENTRY  @X04SVES*/ 00234000
         L     @15,AMBDSB(,RAMB)                                   0176 00235000
         CH    @10,AMDKEYLN(,@15)                                  0176 00236000
         BE    @RT00176                                            0176 00237000
*     GO TO RJD;                    /* YES                   @X04SVES*/ 00238000
*   ICWKEY1L=RWORK4->IBFLPF+        /* COMPUTE AND STORE KEY         */ 00239000
*       RWORK4->IBFLPL;             /* LENGTH IN WORK AREA           */ 00240000
         SLR   @15,@15                                             0178 00241000
         IC    @15,IBFLPL(,RWORK4)                                 0178 00242000
         ALR   @10,@15                                             0178 00243000
         STH   @10,ICWKEY1L(,RWORK1)                               0178 00244000
*   RWORK3=RWORK4->IBFLPL;          /* SET LENGTH OF MOVE            */ 00245000
         LR    RWORK3,@15                                          0179 00246000
*   RWORK5=RWORK3;                  /* DITTO                         */ 00247000
         LR    RWORK5,RWORK3                                       0180 00248000
*   RWORK4=RWORK4-RWORK3;           /* SET 'FROM' ADDRESS            */ 00249000
         SLR   RWORK4,RWORK3                                       0181 00250000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE CHARACTERS TO WA         */ 00251000
         MVCL  RWORK2,RWORK4                                            00252000
*   IF(RWORK4-RPARM1)^<PLHSAVE6 THEN/* HAVE WE GONE PAST THE SPLIT 0183 00253000
*                                      POINT                         */ 00254000
         LR    @10,RWORK4                                          0183 00255000
         SLR   @10,RPARM1                                          0183 00256000
         C     @10,PLHSAVE6(,RPLH)                                 0183 00257000
         BL    @RF00183                                            0183 00258000
*     DO;                           /* NO                            */ 00259000
*RJD:                                                              0185 00260000
*       RWORK3=RWORK4-RWORK4->IBFLPL-/* MOVE BACK TO THE NEXT        */ 00261000
*           RPARM1->IXHFLPLN;       /* INDEX ENTRY TO RIGHT          */ 00262000
RJD      LR    RWORK3,RWORK4                                       0185 00263000
         SLR   @10,@10                                             0185 00264000
         IC    @10,IBFLPL(,RWORK4)                                 0185 00265000
         SLR   RWORK3,@10                                          0185 00266000
         SLR   @10,@10                                             0185 00267000
         IC    @10,IXHFLPLN(,RPARM1)                               0185 00268000
         SLR   RWORK3,@10                                          0185 00269000
*       RWORK4=RWORK3;              /*                               */ 00270000
         LR    RWORK4,RWORK3                                       0186 00271000
*       GO TO RJC;                  /* GO PROCESS NEXT KEY           */ 00272000
         B     RJC                                                 0187 00273000
*     END;                          /*                               */ 00274000
*   RESPECIFY                                                      0189 00275000
*    (RWORK3,                                                      0189 00276000
*     RWORK5) UNRSTD;               /*                               */ 00277000
@RF00183 DS    0H                                                  0190 00278000
*   RWORK2=RPARM1+PLHSAVE6;         /* POINT TO SPLIT        @X04SVES*/ 00279000
         L     @10,PLHSAVE6(,RPLH)                                 0190 00280000
         LR    RWORK2,RPARM1                                       0190 00281000
         ALR   RWORK2,@10                                          0190 00282000
*   RPARM1->IXHSEO=PLHSAVE6-        /* SET DISPLACE-         @X04SVES*/ 00283000
*       RWORK2->IBFLPL-             /* MENT TO THE           @X04SVES*/ 00284000
*       RPARM1->IXHFLPLN;           /* RIGHTMOST ENTRY IN THE BLOCK     00285000
*                                                            @X04SVES*/ 00286000
         SLR   @09,@09                                             0191 00287000
         IC    @09,IBFLPL(,RWORK2)                                 0191 00288000
         SLR   @10,@09                                             0191 00289000
         SLR   @09,@09                                             0191 00290000
         IC    @09,IXHFLPLN(,RPARM1)                               0191 00291000
         SLR   @10,@09                                             0191 00292000
         STH   @10,IXHSEO(,RPARM1)                                 0191 00293000
*   RFY                                                            0192 00294000
*     RWORK2 UNRSTD;                /*                       @X04SVES*/ 00295000
*/*                                                                  */ 00296000
*/* COMPUTE SPACE REQUIRED TO HOLD POINTERS                          */ 00297000
*/*                                                                  */ 00298000
*                                                                  0193 00299000
*   RESPECIFY                                                      0193 00300000
*    (RWORK0,                                                      0193 00301000
*     RWORK5) RSTD;                 /*                               */ 00302000
*   IF ICWLN=ICWSS THEN             /* IS THIS SEQ SET LEVEL         */ 00303000
         CLC   ICWLN(2,RWORK1),@CH00053                            0194 00304000
         BNE   @RF00194                                            0194 00305000
*     DO;                           /* YES                           */ 00306000
*       RWORK0=AMBLDTA->AMBDSB->AMDCIPCA;/* PICK UP CI/CA            */ 00307000
         L     @10,RPLDACB(,RRPL)                                  0196 00308000
         L     @10,ACBAMBL(,@10)                                   0196 00309000
         L     @10,AMBLDTA(,@10)                                   0196 00310000
         L     @10,AMBDSB(,@10)                                    0196 00311000
         LH    RWORK0,AMDCIPCA(,@10)                               0196 00312000
*     END;                          /*                               */ 00313000
*   ELSE                            /* NOT SEQ SET LEVEL             */ 00314000
*     CALL COUNT;                   /* GO COUNT ENTRYS/BLOCK         */ 00315000
         B     @RC00194                                            0198 00316000
@RF00194 BAL   @14,COUNT                                           0198 00317000
*   RWORK0=RWORK0*ICWPTL;           /* COMPUTE THE LENGTH            */ 00318000
@RC00194 SLR   @10,@10                                             0199 00319000
         IC    @10,ICWPTL(,RWORK1)                                 0199 00320000
         LR    @07,RWORK0                                          0199 00321000
         MR    @06,@10                                             0199 00322000
         LR    RWORK0,@07                                          0199 00323000
*   RESPECIFY                                                      0200 00324000
*    (RWORK5) UNRSTD;               /*                               */ 00325000
*   PLHSAVE5=RPARM1+RWORK0+         /* COMPUTE AND SAVE THE          */ 00326000
*       LENGTH(IDAIXH)-ICWPTL;      /* ADDRESS OF THE RIGHTMOST    0201 00327000
*                                      POINTER                       */ 00328000
         LA    @09,24                                              0201 00329000
         LR    @15,RPARM1                                          0201 00330000
         ALR   @15,RWORK0                                          0201 00331000
         ALR   @15,@09                                             0201 00332000
         SLR   @15,@10                                             0201 00333000
         ST    @15,PLHSAVE5(,RPLH)                                 0201 00334000
*/*                                                                  */ 00335000
*/* DETERMINE IF SPACE ENOUGH EXISTS FOR POINTERS                    */ 00336000
*/*                                                                  */ 00337000
*                                                                  0202 00338000
*   RWORK4=RPARM1+RPARM1->IXHLEO;   /* POINT TO THE LEFTMOST ENTRY   */ 00339000
         LR    RWORK4,RPARM1                                       0202 00340000
         AH    RWORK4,IXHLEO(,RPARM1)                              0202 00341000
*   PLHSAVE1=RWORK4-RWORK4->IBFLPL; /* SAVE BEGINNING ADDRESS OF   0203 00342000
*                                      BLOCK                         */ 00343000
         LR    @10,RWORK4                                          0203 00344000
         SLR   @15,@15                                             0203 00345000
         IC    @15,IBFLPL(,RWORK4)                                 0203 00346000
         SLR   @10,@15                                             0203 00347000
         ST    @10,PLHSAVE1(,RPLH)                                 0203 00348000
*   IF(PLHSAVE1-RPARM1-LENGTH(IDAIXH))/* IS THERE ROOM BETWEEN       */ 00349000
*       <RWORK0 THEN                /* HEADER AND BLOCK              */ 00350000
         LR    @15,@10                                             0204 00351000
         SLR   @15,RPARM1                                          0204 00352000
         LR    @14,@15                                             0204 00353000
         SLR   @14,@09                                             0204 00354000
         CLR   @14,RWORK0                                          0204 00355000
         BNL   @RF00204                                            0204 00356000
*     DO;                           /* NO, BLOCK MUST MOVE           */ 00357000
*       RESPECIFY                                                  0206 00358000
*        (RWORK4) UNRSTD;           /*                               */ 00359000
*       RWORK0=RWORK0-(PLHSAVE1-RPARM1/* COMPUTE LENGTH OF MOVE      */ 00360000
*           -LENGTH(IDAIXH));       /* TO GIVE ENOUGH SPACE          */ 00361000
         SLR   @09,@15                                             0207 00362000
         ALR   RWORK0,@09                                          0207 00363000
*       PLHSAVE2=RPARM1+RPARM1->IXHSEO/* COMPUTE ADDRESS OF          */ 00364000
*           +RPARM1->IXHFLPLN;      /* SPACE AT RIGHT OF BLK         */ 00365000
         LR    @15,RPARM1                                          0208 00366000
         AH    @15,IXHSEO(,RPARM1)                                 0208 00367000
         SLR   @14,@14                                             0208 00368000
         IC    @14,IXHFLPLN(,RPARM1)                               0208 00369000
         ALR   @15,@14                                             0208 00370000
         ST    @15,PLHSAVE2(,RPLH)                                 0208 00371000
*       PLHSAVE3=PLHSAVE2-PLHSAVE1; /* COMPUTE LENGTH OF BLOCK       */ 00372000
         LCR   @10,@10                                             0209 00373000
         ALR   @10,@15                                             0209 00374000
         ST    @10,PLHSAVE3(,RPLH)                                 0209 00375000
*       PLHSAVE4=RPARM1+RPARM1->IXHLL/* COMPUTE LENGTH OF SPACE      */ 00376000
*           -PLHSAVE2;              /* AT RIGHT END OF BLOCK         */ 00377000
         LR    @10,RPARM1                                          0210 00378000
         LH    @14,IXHLL(,RPARM1)                                  0210 00379000
         N     @14,@CF01056                                        0210 00380000
         ALR   @10,@14                                             0210 00381000
         SLR   @10,@15                                             0210 00382000
         ST    @10,PLHSAVE4(,RPLH)                                 0210 00383000
*       IF RWORK0>PLHSAVE4 THEN     /* IS THERE ENOUGH SPACE IN THE     00384000
*                                      BUFFER                        */ 00385000
         CLR   RWORK0,@10                                          0211 00386000
         BNH   @RF00211                                            0211 00387000
*RJA:                                                              0212 00388000
*         DO;                       /* NO                            */ 00389000
RJA      DS    0H                                                  0213 00390000
*           RESPECIFY                                              0213 00391000
*            (R15) RSTD;            /*                               */ 00392000
*           R15=ICWNOFIT;           /* SET ERROR CODE IN R15         */ 00393000
         LA    R15,8                                               0214 00394000
*           ICWWNF=ON;              /* SET RETRY INDICATOR           */ 00395000
         OI    ICWWNF(RWORK1),B'10000000'                          0215 00396000
*           CALL EXIT;              /* RETURN TO CALLER              */ 00397000
         BAL   @14,EXIT                                            0216 00398000
*           RESPECIFY                                              0217 00399000
*            (R15) UNRSTD;          /*                               */ 00400000
*         END;                      /*                               */ 00401000
*       RESPECIFY                                                  0219 00402000
*        (RWORK2,                                                  0219 00403000
*         RWORK3,                                                  0219 00404000
*         RWORK4,                                                  0219 00405000
*         RWORK5) RSTD;             /*                               */ 00406000
@RF00211 DS    0H                                                  0220 00407000
*       IF RWORK0^<PLHSAVE3 THEN    /* IS LENGTH OF MOVE AT LEAST AS    00408000
*                                      LONG AS THE BLOCK             */ 00409000
         L     @10,PLHSAVE3(,RPLH)                                 0220 00410000
         CLR   RWORK0,@10                                          0220 00411000
         BL    @RF00220                                            0220 00412000
*         DO;                       /* YES, 1 MOVE REQD.             */ 00413000
*           RWORK4=PLHSAVE1;        /* SET 'FROM' ADDRESS            */ 00414000
         L     RWORK4,PLHSAVE1(,RPLH)                              0222 00415000
*           RWORK2=RWORK4+RWORK0;   /* SET 'TO' ADDRESS              */ 00416000
         LR    RWORK2,RWORK4                                       0223 00417000
         ALR   RWORK2,RWORK0                                       0223 00418000
*           RWORK3=PLHSAVE3;        /* SET LENGTH OF MOVE            */ 00419000
         LR    RWORK3,@10                                          0224 00420000
*           RWORK5=RWORK3;          /*                               */ 00421000
         LR    RWORK5,RWORK3                                       0225 00422000
*           GEN(MVCL RWORK2,RWORK4);/* MOVE THE BLOCK RIGHT          */ 00423000
         MVCL RWORK2,RWORK4                                             00424000
*         END;                      /*                               */ 00425000
*       ELSE                        /* MOVE IS OVERLAPPING           */ 00426000
*         DO;                       /*                               */ 00427000
         B     @RC00220                                            0228 00428000
@RF00220 DS    0H                                                  0229 00429000
*           RWORK4=PLHSAVE2-RWORK0; /* INITIALIZE            @YA03199   00430000
*                                      'FROM' ADD.           @YA03199*/ 00431000
         L     @10,PLHSAVE2(,RPLH)                                 0229 00432000
         LR    RWORK4,@10                                          0229 00433000
         SLR   RWORK4,RWORK0                                       0229 00434000
*           RWORK2=PLHSAVE2;        /* INITIALIZE 'TO' ADDRESS       */ 00435000
         LR    RWORK2,@10                                          0230 00436000
*           DO WHILE RWORK4+RWORK0^<PLHSAVE1;/* LOOP UNTIL   @YA03199   00437000
*                                      'FROM' ADDRESS + LENGTH OF  0231 00438000
*                                      MOVE IS OUT OF RANGE OF BLOCK    00439000
*                                      TO BE MOVED                   */ 00440000
         B     @DE00231                                            0231 00441000
@DL00231 DS    0H                                                  0232 00442000
*             RWORK3=RWORK0;        /* SETMOVE LENGTH        @YA03199*/ 00443000
         LR    RWORK3,RWORK0                                       0232 00444000
*             IF RWORK4<PLHSAVE1 THEN/* IF FROM ADD.         @X04SVES*/ 00445000
         L     @10,PLHSAVE1(,RPLH)                                 0233 00446000
         CR    RWORK4,@10                                          0233 00447000
         BNL   @RF00233                                            0233 00448000
*               DO;                 /* OUT OF BLOCK          @X04SVES*/ 00449000
*                 RWORK3=RWORK2-PLHSAVE1;/* FIND LENGTH      @X04SVES*/ 00450000
         LR    RWORK3,RWORK2                                       0235 00451000
         SLR   RWORK3,@10                                          0235 00452000
*                 RWORK2=RWORK2+(PLHSAVE1-RWORK4);/* SET NEW 'TO'  0236 00453000
*                                      ADDRESS               @X04SVES*/ 00454000
         LR    @15,@10                                             0236 00455000
         SLR   @15,RWORK4                                          0236 00456000
         ALR   RWORK2,@15                                          0236 00457000
*                 RWORK4=PLHSAVE1;  /* SET FROM ADD          @X04SVES*/ 00458000
         LR    RWORK4,@10                                          0237 00459000
*               END;                /*                       @X04SVES*/ 00460000
*             RWORK5=RWORK3;        /* DITTO                         */ 00461000
@RF00233 LR    RWORK5,RWORK3                                       0239 00462000
*             GEN(MVCL  RWORK2,RWORK4);/* MOVE A SECTION OF THE BLOCK*/ 00463000
         MVCL  RWORK2,RWORK4                                            00464000
*             RWORK2=RWORK2-TWO*RWORK0;/* MOVE 'TO'          @YA03199   00465000
*                                      ADDRESS BACK          @YA03199   00466000
*                                      FOR NEXT SECTION              */ 00467000
         LR    @10,RWORK0                                          0241 00468000
         ALR   @10,@10                                             0241 00469000
         SLR   RWORK2,@10                                          0241 00470000
*             RWORK4=RWORK2-RWORK0; /* SAME FOR 'FROM'@YA03199     0242 00471000
*                                      ADDRESS               @YA03199*/ 00472000
         LR    RWORK4,RWORK2                                       0242 00473000
         SLR   RWORK4,RWORK0                                       0242 00474000
*           END;                    /*                               */ 00475000
@DE00231 LR    @10,RWORK4                                          0243 00476000
         ALR   @10,RWORK0                                          0243 00477000
         CL    @10,PLHSAVE1(,RPLH)                                 0243 00478000
         BNL   @DL00231                                            0243 00479000
*           IF PLHSAVE2+RWORK0-PLHSAVE3>/* IS THE SPACE      @YA03199*/ 00480000
*               PLHSAVE5+ICWPTL THEN/* AT THE                @YA03199   00481000
*                                      RIGHT OF THE BLOCK = TO THE 0244 00482000
*                                      SPACE THE BLOCK NEEDS TO MOVE */ 00483000
         LR    @10,RWORK0                                          0244 00484000
         AL    @10,PLHSAVE2(,RPLH)                                 0244 00485000
         L     @15,PLHSAVE3(,RPLH)                                 0244 00486000
         SLR   @10,@15                                             0244 00487000
         SLR   @14,@14                                             0244 00488000
         IC    @14,ICWPTL(,RWORK1)                                 0244 00489000
         AL    @14,PLHSAVE5(,RPLH)                                 0244 00490000
         CLR   @10,@14                                             0244 00491000
         BNH   @RF00244                                            0244 00492000
*             DO;                   /* NO, SO MOVE BLOCK BACK TO THE    00493000
*                                      LEFT                          */ 00494000
*               RWORK4=PLHSAVE2+RWORK0-PLHSAVE3;/* SET 'FROM'      0246 00495000
*                                                            @YA03199   00496000
*                                      ADDRESS               @YA03199*/ 00497000
         LR    RWORK4,@10                                          0246 00498000
*               RWORK2=PLHSAVE5+ICWPTL;/* SET 'TO' ADDRESS   @YA03199*/ 00499000
         LR    RWORK2,@14                                          0247 00500000
*               RWORK3=PLHSAVE3;    /* SET MOVE LENGTH               */ 00501000
         LR    RWORK3,@15                                          0248 00502000
*               RWORK5=RWORK3;      /* DITTO                         */ 00503000
         LR    RWORK5,RWORK3                                       0249 00504000
*               GEN(MVCL  RWORK2,RWORK4);/* MOVE BLOCK TO LEFT       */ 00505000
         MVCL  RWORK2,RWORK4                                            00506000
*             END;                  /*                               */ 00507000
*         END;                      /*                               */ 00508000
@RF00244 DS    0H                                                  0253 00509000
*       RESPECIFY                                                  0253 00510000
*        (RWORK2,                                                  0253 00511000
*         RWORK3,                                                  0253 00512000
*         RWORK4,                                                  0253 00513000
*         RWORK5) UNRSTD;           /*                               */ 00514000
@RC00220 DS    0H                                                  0254 00515000
*       RPARM1->IXHLEO=RPARM1->IXHLEO/* ADJUST DISP. TO LEFT         */ 00516000
*           +RWORK0;                /* ENTRY BY MOVE LENGTH          */ 00517000
         LR    @10,RWORK0                                          0254 00518000
         LH    @15,IXHLEO(,RPARM1)                                 0254 00519000
         ALR   @10,@15                                             0254 00520000
         STH   @10,IXHLEO(,RPARM1)                                 0254 00521000
*       RPARM1->IXHSEO=RPARM1->IXHSEO/* ADJUST DISP. TO RIGHT        */ 00522000
*           +RWORK0;                /* ENTRY BY MOVE LENGTH          */ 00523000
         LR    @10,RWORK0                                          0255 00524000
         LH    @15,IXHSEO(,RPARM1)                                 0255 00525000
         ALR   @10,@15                                             0255 00526000
         STH   @10,IXHSEO(,RPARM1)                                 0255 00527000
*     END;                          /*                               */ 00528000
*   ELSE                            /* THERE EXISTS ADEQUATE SPACE 0257 00529000
*                                      BETWEEN HEADER                */ 00530000
*     DO;                           /* AND BLOCK SO CLEAR IT         */ 00531000
         B     @RC00204                                            0257 00532000
@RF00204 DS    0H                                                  0258 00533000
*       RESPECIFY                                                  0258 00534000
*        (RWORK2,                                                  0258 00535000
*         RWORK3,                                                  0258 00536000
*         RWORK4,                                                  0258 00537000
*         RWORK5) RSTD;             /*                               */ 00538000
*       RWORK2=RPARM1+LENGTH(IDAIXH);/* SET POINT TO BEGIN ZERO      */ 00539000
         LA    RWORK2,24                                           0259 00540000
         ALR   RWORK2,RPARM1                                       0259 00541000
*       RWORK3=PLHSAVE1-RWORK2;     /* COMPUTE LENGTH TO ZERO        */ 00542000
         L     RWORK3,PLHSAVE1(,RPLH)                              0260 00543000
         SLR   RWORK3,RWORK2                                       0260 00544000
*       RWORK5=ZERO;                /* SET PROPAGATION CHAR.         */ 00545000
         SLR   RWORK5,RWORK5                                       0261 00546000
*       GEN(MVCL  RWORK2,RWORK4);   /* CLEAR ENTIRE FREESPACE        */ 00547000
         MVCL  RWORK2,RWORK4                                            00548000
*     END;                          /*                               */ 00549000
*/*                                                                  */ 00550000
*/* SPACE FOR POINTERS WAS AVAILABLE OR WAS MADE AVAILABLE --        */ 00551000
*/* NEXT, PLACE POINTERS INTO THAT SPACE                             */ 00552000
*/*                                                                  */ 00553000
*                                                                  0264 00554000
*   IF ICWLN=ICWSS THEN             /* IS THIS SEQ SET LEVEL         */ 00555000
@RC00204 CLC   ICWLN(2,RWORK1),@CH00053                            0264 00556000
         BNE   @RF00264                                            0264 00557000
*     DO;                           /* YES                           */ 00558000
*       RESPECIFY                                                  0266 00559000
*        (RWORK0,                                                  0266 00560000
*         RWORK2) UNRSTD;           /*                               */ 00561000
*/*                                                                  */ 00562000
*/* BUILD A SET OF FREE SPACE POINTERS AND PLACE IN RECORD FOLLOWING */ 00563000
*/*  THE HEADER                                                      */ 00564000
*/*                                                                  */ 00565000
*                                                                  0267 00566000
*       RWORK4=RPARM1->IXHPTLS;     /* GET POINTER MASK FROM HEADER  */ 00567000
         SLR   RWORK4,RWORK4                                       0267 00568000
         IC    RWORK4,IXHPTLS(,RPARM1)                             0267 00569000
*       RWORK5=RPARM1+LENGTH(IDAIXH);/* SET INITIAL ADDRESS AFTER  0268 00570000
*                                      HEADER                        */ 00571000
         LA    RWORK5,24                                           0268 00572000
         ALR   RWORK5,RPARM1                                       0268 00573000
*       DO RWORK3=IMWCIMVN-ONE BY-ONE TO ZERO;/* PLACE POINTERS      */ 00574000
         L     @10,ICWCHN(,RWORK1)                                 0269 00575000
         LH    RWORK3,IMWCIMVN(,@10)                               0269 00576000
         BCTR  RWORK3,0                                            0269 00577000
         B     @DE00269                                            0269 00578000
@DL00269 DS    0H                                                  0270 00579000
*         GEN(EX  RWORK4,STOREPNT); /* NOT USED IN CASE SPLIT        */ 00580000
         EX  RWORK4,STOREPNT                                            00581000
*         RWORK5=RWORK5+ICWPTL;     /* POINT MOVED BECAUSE OF        */ 00582000
         SLR   @10,@10                                             0271 00583000
         IC    @10,ICWPTL(,RWORK1)                                 0271 00584000
         ALR   RWORK5,@10                                          0271 00585000
*       END;                        /* NO FIT CONDITION              */ 00586000
         BCTR  RWORK3,0                                            0272 00587000
@DE00269 LTR   RWORK3,RWORK3                                       0272 00588000
         BNM   @DL00269                                            0272 00589000
*       DO RWORK3=(AMBLDTA->AMBDSB->AMDCIPCA)/* LOOP TO PLACE A SET  */ 00590000
*             -ONE BY-ONE TO IMWCIMVN;/* OF FREESPACE POINTERS       */ 00591000
         L     @10,RPLDACB(,RRPL)                                  0273 00592000
         L     @10,ACBAMBL(,@10)                                   0273 00593000
         L     @10,AMBLDTA(,@10)                                   0273 00594000
         L     @10,AMBDSB(,@10)                                    0273 00595000
         LH    RWORK3,AMDCIPCA(,@10)                               0273 00596000
         BCTR  RWORK3,0                                            0273 00597000
         B     @DE00273                                            0273 00598000
@DL00273 DS    0H                                                  0274 00599000
*         GEN(EX  RWORK4,STOREPNT); /* STORE THE POINTER             */ 00600000
         EX  RWORK4,STOREPNT                                            00601000
*         RWORK5=RWORK5+ICWPTL;     /* MOVE TO NEXT STORE ADD.       */ 00602000
         SLR   @10,@10                                             0275 00603000
         IC    @10,ICWPTL(,RWORK1)                                 0275 00604000
         ALR   RWORK5,@10                                          0275 00605000
*       END;                        /*                               */ 00606000
         BCTR  RWORK3,0                                            0276 00607000
@DE00273 L     @10,ICWCHN(,RWORK1)                                 0276 00608000
         CH    RWORK3,IMWCIMVN(,@10)                               0276 00609000
         BNL   @DL00273                                            0276 00610000
*       RPARM1->IXHFSO=RWORK5-RPARM1;/* READJUST FREESPACE OFFSET IN    00611000
*                                      HEADER                        */ 00612000
         LR    @10,RWORK5                                          0277 00613000
         SLR   @10,RPARM1                                          0277 00614000
         STH   @10,IXHFSO(,RPARM1)                                 0277 00615000
*     END;                          /*                               */ 00616000
*   ELSE                            /* NOT SEQ SET SO EXISTING       */ 00617000
*     DO;                           /* POINTERS WILL BE MOVED        */ 00618000
         B     @RC00264                                            0279 00619000
@RF00264 DS    0H                                                  0280 00620000
*       RESPECIFY                                                  0280 00621000
*        (RWORK3,                                                  0280 00622000
*         RWORK4,                                                  0280 00623000
*         RWORK5) UNRSTD;           /* FROM BLOCK TO F.S.            */ 00624000
*       CALL MOVEPTRR;              /* GO MOVE POINTERS              */ 00625000
         BAL   @14,MOVEPTRR                                        0281 00626000
*     END;                          /*                               */ 00627000
*   CALL DELPTR;                    /* GO REMOVE ALL POINTERS        */ 00628000
@RC00264 BAL   @14,DELPTR                                          0283 00629000
*   PLHSAVE1=RPARM1+RPARM1->IXHLEO; /* CONVERT DISP. OF LEFT ENTRY TO   00630000
*                                      AN ADDRESS AND SAVE IT        */ 00631000
         LR    @10,RPARM1                                          0284 00632000
         AH    @10,IXHLEO(,RPARM1)                                 0284 00633000
         ST    @10,PLHSAVE1(,RPLH)                                 0284 00634000
*   PLHSAVE2=RPARM1+RPARM1->IXHSEO; /* CONVERT DISPLACEMENT OF RIGHT    00635000
*                                      ENTRY TO AN ADDRESS AND SAVE     00636000
*                                      IT                            */ 00637000
         LR    @10,RPARM1                                          0285 00638000
         AH    @10,IXHSEO(,RPARM1)                                 0285 00639000
         ST    @10,PLHSAVE2(,RPLH)                                 0285 00640000
*   CALL BUILDREC;                  /* GO CONVERT BLOCK TO AN INDEX     00641000
*                                      RECORD                        */ 00642000
         BAL   @14,BUILDREC                                        0286 00643000
*   IF RPARM1=ZERO THEN             /* IS RECORD SATISFACTORY        */ 00644000
         LTR   RPARM1,RPARM1                                       0287 00645000
         BNZ   @RF00287                                            0287 00646000
*     DO;                           /* NO                            */ 00647000
*       GO TO RJA;                  /* GO START ALL OVER             */ 00648000
         B     RJA                                                 0289 00649000
*     END;                          /*                               */ 00650000
*   IF RPARM1->IXHLV^=ZERO THEN     /* IF THIS RECORD CHAINS         */ 00651000
@RF00287 CLI   IXHLV(RPARM1),0                                     0291 00652000
         BE    @RF00291                                            0291 00653000
*     DO;                           /* AHEAD THEN                    */ 00654000
*I03:                                                              0293 00655000
*       DO;                         /* IDACALL(IDAER)                */ 00656000
I03      DS    0H                                                  0294 00657000
*         CALL IDAER;               /* EXIT TO IDAER                 */ 00658000
         L     @15,@CV00918                                        0294 00659000
         BALR  @14,@15                                             0294 00660000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00661000
         BALR @11,0                                                     00662000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00663000
         USING *,@11                                                    00664000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00665000
         L     @11,=A(@PSTART)                                          00666000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00667000
         USING @PSTART,@11                                              00668000
*       END I03;                    /* ERASE THE DUMMY ENTRY         */ 00669000
*       RESPECIFY                                                  0300 00670000
*        (RWORK1) RSTD;             /*                               */ 00671000
*       RPARM1=ICWBUFC->BUFCBAD;    /* RESTORE BUFFER PTR            */ 00672000
         L     @10,ICWBUFC(,RWORK1)                                0301 00673000
         L     RPARM1,BUFCBAD(,@10)                                0301 00674000
*     END;                          /*                               */ 00675000
*   IF ICWLN=ICWSS THEN             /* IS THIS SEQ SET LEVEL         */ 00676000
@RF00291 CLC   ICWLN(2,RWORK1),@CH00053                            0303 00677000
         BNE   @RF00303                                            0303 00678000
*     DO;                           /* YES                           */ 00679000
*       IF RPARM1->IXHLV=ZERO&      /* IF THIS IS THE LAST           */ 00680000
*           (RPARM1->IXHLEO-        /* SEQ SET RECORD AND            */ 00681000
*           RPARM1->IXHFSO-         /* NOT ENOUGH ROOM EXISTS        */ 00682000
*           LENGTH(IXSELL)<AMDKEYLN) THEN/* TO CHANGE DUMMY TO A     */ 00683000
         CLI   IXHLV(RPARM1),0                                     0305 00684000
         BNE   @RF00305                                            0305 00685000
         LH    @10,IXHLEO(,RPARM1)                                 0305 00686000
         SH    @10,IXHFSO(,RPARM1)                                 0305 00687000
         BCTR  @10,0                                               0305 00688000
         BCTR  @10,0                                               0305 00689000
         L     @15,AMBDSB(,RAMB)                                   0305 00690000
         CH    @10,AMDKEYLN(,@15)                                  0305 00691000
         BL    @RT00305                                            0305 00692000
*         GO TO RJA;                /* FULL KEY, GET OUT NOW         */ 00693000
*       RPARM1->IXHBRBA=ICWTBASE;   /* SET NEW BASE RBA IN HEADER    */ 00694000
@RF00305 L     @10,ICWTBASE(,RWORK1)                               0307 00695000
         ST    @10,IXHBRBA(,RPARM1)                                0307 00696000
*     END;                          /*                               */ 00697000
*   RPARM1->IXHLV=ICWLN;            /* SET LEVEL             @X04SVES*/ 00698000
@RF00303 LH    @10,ICWLN(,RWORK1)                                  0309 00699000
         STC   @10,IXHLV(,RPARM1)                                  0309 00700000
*   RESPECIFY                                                      0310 00701000
*     R15 RSTD;                     /* PROTECT REGISTER 15           */ 00702000
*I04:                                                              0311 00703000
*   DO;                             /* IDACALL(IDASPACE)             */ 00704000
I04      DS    0H                                                  0312 00705000
*     CALL IDASPACE;                /* EXIT TO IDASPACE              */ 00706000
         L     @15,@CV00923                                        0312 00707000
         BALR  @14,@15                                             0312 00708000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00709000
         BALR @11,0                                                     00710000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00711000
         USING *,@11                                                    00712000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00713000
         L     @11,=A(@PSTART)                                          00714000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00715000
         USING @PSTART,@11                                              00716000
*   END I04;                        /* GO CHECK TO ASSURE            */ 00717000
*   RESPECIFY                                                      0318 00718000
*     RWORK1 RSTD;                  /* ADEQUATE FREESPACE            */ 00719000
*   IF R15^=ZERO THEN               /* WAS IT SUFFICIENT             */ 00720000
         LTR   R15,R15                                             0319 00721000
         BNZ   @RT00319                                            0319 00722000
*     GO TO RJA;                    /* NO, RETURN TO CALLER          */ 00723000
*   RESPECIFY                                                      0321 00724000
*     R15 UNRSTD;                   /* FREE REGISTER                 */ 00725000
*   ICWBUFC->BUFCMW=ON;             /* SET MUST WRITE BIT ON         */ 00726000
         L     @10,ICWBUFC(,RWORK1)                                0322 00727000
         OI    BUFCMW(@10),B'10000000'                             0322 00728000
*   BUFCORBA=ICWCRBA;               /* SET RBA TO NEW RBA FOR THIS 0323 00729000
*                                      NEW RECORD                    */ 00730000
         L     @15,ICWCRBA(,RWORK1)                                0323 00731000
         ST    @15,BUFCORBA(,@10)                                  0323 00732000
*   BUFCDDDD=ICWCRBA;               /* LET BUFF MGR THINK HE READ  0324 00733000
*                                      THIS NEW RECORD               */ 00734000
         ST    @15,BUFCDDDD(,@10)                                  0324 00735000
*   BUFXIRBA=ICWCRBA;               /* SET XCL CTL RBA@X04SVES       */ 00736000
         ST    @15,BUFXIRBA(,@10)                                  0325 00737000
*   BUFCVAL=ON;                     /* SHOW RBA VALID        @X04SVES*/ 00738000
         OI    BUFCVAL(@10),B'00000100'                            0326 00739000
*   CALL IDAWR;                     /*                               */ 00740000
         L     @15,@CA00979                                        0327 00741000
         BALR  @14,@15                                             0327 00742000
*   IF PLHADDTE=OFF|ICWLN^=ICWSS THEN/* NOT ADD TO END OR HI LVL   0328 00743000
*                                                            @X04SVES*/ 00744000
         TM    PLHADDTE(RPLH),B'00010000'                          0328 00745000
         BZ    @RT00328                                            0328 00746000
         CLC   ICWLN(2,RWORK1),@CH00053                            0328 00747000
         BE    @RF00328                                            0328 00748000
@RT00328 DS    0H                                                  0329 00749000
*     ICWNEST=AMDNEST/TWO;          /* REDUCE NO. ENTRYS/SECT. TO  0329 00750000
*                                      HALF THAT OF CREATE           */ 00751000
         L     @10,AMBDSB(,RAMB)                                   0329 00752000
         LH    @06,AMDNEST(,@10)                                   0329 00753000
         SRDA  @06,32                                              0329 00754000
         D     @06,@CF00146                                        0329 00755000
         STH   @07,ICWNEST(,RWORK1)                                0329 00756000
*   ELSE                            /* ADD TO END            @X04SVES*/ 00757000
*     ICWNEST=AMDNEST;              /* SAME AS CREATE        @X04SVES*/ 00758000
         B     @RC00328                                            0330 00759000
@RF00328 L     @10,AMBDSB(,RAMB)                                   0330 00760000
         LH    @10,AMDNEST(,@10)                                   0330 00761000
         STH   @10,ICWNEST(,RWORK1)                                0330 00762000
*RJL:                                                              0331 00763000
*   RPARM1=ICWPRBA;                 /* PICK UP RBA AND GO            */ 00764000
@RC00328 DS    0H                                                  0331 00765000
RJL      L     RPARM1,ICWPRBA(,RWORK1)                             0331 00766000
*   CALL IDAR;                      /* READ ORGINAL RECORD           */ 00767000
         L     @15,@CA00961                                        0332 00768000
         BALR  @14,@15                                             0332 00769000
*   RPARM1=ICWBUFC->BUFCBAD;        /* POINT TO BUFFER               */ 00770000
         L     @10,ICWBUFC(,RWORK1)                                0333 00771000
         L     RPARM1,BUFCBAD(,@10)                                0333 00772000
*   PLHSAVE6=ICWTPTR;               /* SAVE SPLT. PT. TO VARY        */ 00773000
         L     @10,ICWTPTR(,RWORK1)                                0334 00774000
         ST    @10,PLHSAVE6(,RPLH)                                 0334 00775000
*   IF RPARM1->IXHSEO=RPARM1->IXHLEO THEN/* ARE ANY SECTION          */ 00776000
         CLC   IXHSEO(2,RPARM1),IXHLEO(RPARM1)                     0335 00777000
         BNE   @RF00335                                            0335 00778000
*     DO;                           /* LLS PRESENT -- NO             */ 00779000
*       RPARM1->IXHSEO=RPARM1->IXHLL-/* SET RIGHT OFFSET TO          */ 00780000
*           RPARM1->IXHFLPLN;       /* LOW KEY ENTRY                 */ 00781000
         LH    @10,IXHLL(,RPARM1)                                  0337 00782000
         N     @10,@CF01056                                        0337 00783000
         SLR   @00,@00                                             0337 00784000
         IC    @00,IXHFLPLN(,RPARM1)                               0337 00785000
         SLR   @10,@00                                             0337 00786000
         STH   @10,IXHSEO(,RPARM1)                                 0337 00787000
*     END;                          /*                               */ 00788000
*   ELSE                            /* LLS ARE PRESENT SO GO         */ 00789000
*     CALL DELSECT;                 /* REMOVE THEM                   */ 00790000
         B     @RC00335                                            0339 00791000
@RF00335 BAL   @14,DELSECT                                         0339 00792000
*   RESPECIFY                                                      0340 00793000
*    (RWORK2,                                                      0340 00794000
*     RWORK3,                                                      0340 00795000
*     RWORK4,                                                      0340 00796000
*     RWORK5) RSTD;                 /*                               */ 00797000
@RC00335 DS    0H                                                  0341 00798000
*   RWORK4=RPARM1+RPARM1->IXHSEO;   /* POINT TO RIGHTMOST ENTRY      */ 00799000
         LR    RWORK4,RPARM1                                       0341 00800000
         AH    RWORK4,IXHSEO(,RPARM1)                              0341 00801000
*   DO WHILE RWORK4->IBFLPF=AMDKEYLN;/* SPANNED RCD          @X04SVES*/ 00802000
         B     @DE00342                                            0342 00803000
@DL00342 DS    0H                                                  0343 00804000
*     RWORK4=RWORK4-RPARM1->IXHFLPLN;/* YES                  @X04SVES*/ 00805000
         SLR   @10,@10                                             0343 00806000
         IC    @10,IXHFLPLN(,RPARM1)                               0343 00807000
         SLR   RWORK4,@10                                          0343 00808000
*   END;                            /*                       @X04SVES*/ 00809000
@DE00342 L     @10,AMBDSB(,RAMB)                                   0344 00810000
         SLR   @00,@00                                             0344 00811000
         IC    @00,IBFLPF(,RWORK4)                                 0344 00812000
         CH    @00,AMDKEYLN(,@10)                                  0344 00813000
         BE    @DL00342                                            0344 00814000
*   RWORK3=RWORK4->IBFLPL;          /* SET MOVE LENGTH               */ 00815000
         SLR   @10,@10                                             0345 00816000
         IC    @10,IBFLPL(,RWORK4)                                 0345 00817000
         LR    RWORK3,@10                                          0345 00818000
*   RWORK2=ADDR(ICWKEY1);           /* SET 'TO' ADDRESS              */ 00819000
         LA    RWORK2,ICWKEY1(,RWORK1)                             0346 00820000
*   RWORK4=RWORK4-RWORK4->IBFLPL;   /* SET 'FROM' ADDRESS            */ 00821000
         SLR   RWORK4,@10                                          0347 00822000
*   RWORK5=RWORK3;                  /* MOVE LENGTH AGAIN             */ 00823000
         LR    RWORK5,RWORK3                                       0348 00824000
*   ICWKEY1L=RWORK3;                /* SAVE LNGTH IN WORK AREA       */ 00825000
         STH   RWORK3,ICWKEY1L(,RWORK1)                            0349 00826000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE KEY TO WORK AREA         */ 00827000
         MVCL  RWORK2,RWORK4                                            00828000
*   RESPECIFY                                                      0351 00829000
*    (RWORK2,                                                      0351 00830000
*     RWORK3,                                                      0351 00831000
*     RWORK4,                                                      0351 00832000
*     RWORK5) UNRSTD;               /*                               */ 00833000
*   IF ICWLN^=ICWSS THEN            /* IS THIS A SEQ SET RECD        */ 00834000
         CLC   ICWLN(2,RWORK1),@CH00053                            0352 00835000
         BE    @RF00352                                            0352 00836000
*     DO;                           /* NO                            */ 00837000
*       PLHSAVE1=PLHSAVE6;          /* SHOW HIGHEST KEY TO BE      0354 00838000
*                                      RETAINED IS AT SPLIT POINT    */ 00839000
         L     @10,PLHSAVE6(,RPLH)                                 0354 00840000
         ST    @10,PLHSAVE1(,RPLH)                                 0354 00841000
*       RPARM1->IXHFSO=LENGTH(IDAIXH);/* SET FREESPACE DISP. TO END     00842000
*                                      OF HEADER                     */ 00843000
         MVC   IXHFSO(2,RPARM1),@CH00083                           0355 00844000
*       RPARM1->IXHLEO=PLHSAVE6;    /* SET LEFTMOST ENTRY IN BLOCK AT   00845000
*                                      SPLIT POINT                   */ 00846000
         STH   @10,IXHLEO(,RPARM1)                                 0356 00847000
*     END;                          /*                               */ 00848000
*   ELSE                            /* SEQ SET RECORD                */ 00849000
*     DO;                           /*                               */ 00850000
         B     @RC00352                                            0358 00851000
@RF00352 DS    0H                                                  0359 00852000
*       RESPECIFY                                                  0359 00853000
*        (RWORK2) RSTD;             /*                               */ 00854000
*       PLHSAVE1=RPARM1->IXHLEO;    /* SHOW BLOCK LIMIT AT HI KEY END   00855000
*                                      OF RECORD                     */ 00856000
         LH    @10,IXHLEO(,RPARM1)                                 0360 00857000
         ST    @10,PLHSAVE1(,RPLH)                                 0360 00858000
*       RWORK2=RPARM1+PLHSAVE6;     /* POINT TO SPLIT POINT          */ 00859000
         L     @10,PLHSAVE6(,RPLH)                                 0361 00860000
         LR    RWORK2,RPARM1                                       0361 00861000
         ALR   RWORK2,@10                                          0361 00862000
*       PLHSAVE3=RPARM1->IXHSEO;    /* SAVE DISPLACEMENT TO RIGHTMOST   00863000
*                                      ENTRY IN BLK                  */ 00864000
         LH    @07,IXHSEO(,RPARM1)                                 0362 00865000
         ST    @07,PLHSAVE3(,RPLH)                                 0362 00866000
*       RPARM1->IXHSEO=PLHSAVE6-    /* SET RIGHT HAND LIMIT          */ 00867000
*           RWORK2->IBFLPL-         /* AT FIRST ENTRY TO THE         */ 00868000
*           RPARM1->IXHFLPLN;       /* LEFT OF SPLIT POINT           */ 00869000
         SLR   @07,@07                                             0363 00870000
         IC    @07,IBFLPL(,RWORK2)                                 0363 00871000
         SLR   @10,@07                                             0363 00872000
         SLR   @07,@07                                             0363 00873000
         IC    @07,IXHFLPLN(,RPARM1)                               0363 00874000
         SLR   @10,@07                                             0363 00875000
         STH   @10,IXHSEO(,RPARM1)                                 0363 00876000
*     END;                          /*                               */ 00877000
*   RESPECIFY                                                      0365 00878000
*    (RWORK0) RSTD;                 /*                               */ 00879000
@RC00352 DS    0H                                                  0366 00880000
*   CALL COUNT;                     /* COUNT ENTRYS IN BLOCK         */ 00881000
         BAL   @14,COUNT                                           0366 00882000
*   RWORK2=RPARM1+PLHSAVE1;         /* POINT TO UPPER LIMIT OF INSERT   00883000
*                                      SPACE                         */ 00884000
         L     @10,PLHSAVE1(,RPLH)                                 0367 00885000
         LR    RWORK2,RPARM1                                       0367 00886000
         ALR   RWORK2,@10                                          0367 00887000
*   IF(RPARM1->IXHFSO+              /* CHECK TO SEE IF ENOUGH        */ 00888000
*       (RWORK0*ICWPTL))<           /* SPACE EXITS BETWEEN           */ 00889000
*       (PLHSAVE1-RWORK2->IBFLPL) THEN/* HDR AND BLOCK FOR PTRS      */ 00890000
         LH    @07,IXHFSO(,RPARM1)                                 0368 00891000
         SLR   @15,@15                                             0368 00892000
         IC    @15,ICWPTL(,RWORK1)                                 0368 00893000
         LR    @09,RWORK0                                          0368 00894000
         MR    @08,@15                                             0368 00895000
         ALR   @09,@07                                             0368 00896000
         SLR   @08,@08                                             0368 00897000
         IC    @08,IBFLPL(,RWORK2)                                 0368 00898000
         SLR   @10,@08                                             0368 00899000
         CLR   @09,@10                                             0368 00900000
         BNL   @RF00368                                            0368 00901000
*     DO;                           /* ENOUGH SPACE SO SET           */ 00902000
*       PLHSAVE5=RPARM1+RPARM1->IXHFSO/* ADDRESS OF RIGHTMOST        */ 00903000
*           +(RWORK0-ONE)*ICWPTL;   /* POINTER STORAGE POSIT.        */ 00904000
         ALR   @07,RPARM1                                          0370 00905000
         LR    @09,RWORK0                                          0370 00906000
         BCTR  @09,0                                               0370 00907000
         MR    @08,@15                                             0370 00908000
         ALR   @07,@09                                             0370 00909000
         ST    @07,PLHSAVE5(,RPLH)                                 0370 00910000
*       CALL MOVEPTRR;              /* GO MOVE PTRS. R TO L          */ 00911000
         BAL   @14,MOVEPTRR                                        0371 00912000
*       CALL DELPTR;                /* REMOVE POINTERS               */ 00913000
         BAL   @14,DELPTR                                          0372 00914000
*     END;                          /*                               */ 00915000
*   ELSE                            /* NOT ENOUGH SPACE              */ 00916000
*     CALL MOVEPTRL;                /* SO MOVE PTRS. L TO R          */ 00917000
         B     @RC00368                                            0374 00918000
@RF00368 BAL   @14,MOVEPTRL                                        0374 00919000
*   IF ICWLN=ICWSS THEN             /* IS THIS SEQ SET LEVEL         */ 00920000
@RC00368 CLC   ICWLN(2,RWORK1),@CH00053                            0375 00921000
         BNE   @RF00375                                            0375 00922000
*     DO;                           /*                               */ 00923000
*       RPARM1->IXHSEO=PLHSAVE3;    /* SET RIGHT BLOCK LIMIT AT    0377 00924000
*                                      RIGHTMOST ENTRY               */ 00925000
         L     @10,PLHSAVE3(,RPLH)                                 0377 00926000
         STH   @10,IXHSEO(,RPARM1)                                 0377 00927000
*       RPARM1->IXHLEO=PLHSAVE6;    /* SET LEFT LIMIT AT SPLIT       */ 00928000
         L     @10,PLHSAVE6(,RPLH)                                 0378 00929000
         STH   @10,IXHLEO(,RPARM1)                                 0378 00930000
*       CALL COUNT;                 /* COUNT ENTRIES IN BLOCK        */ 00931000
         BAL   @14,COUNT                                           0379 00932000
*       RWORK2=RPARM1+PLHSAVE6;     /* POINT TO SPLIT ENTRY          */ 00933000
         L     @10,PLHSAVE6(,RPLH)                                 0380 00934000
         LR    RWORK2,RPARM1                                       0380 00935000
         ALR   RWORK2,@10                                          0380 00936000
*       IF(RPARM1->IXHFSO+(RWORK0*ICWPTL))/* DOES ENOUGH SPACE       */ 00937000
*           <PLHSAVE6-RWORK2->IBFLPL THEN/* EXIST FOR POINTERS       */ 00938000
         LH    @07,IXHFSO(,RPARM1)                                 0381 00939000
         SLR   @15,@15                                             0381 00940000
         IC    @15,ICWPTL(,RWORK1)                                 0381 00941000
         LR    @09,RWORK0                                          0381 00942000
         MR    @08,@15                                             0381 00943000
         ALR   @09,@07                                             0381 00944000
         SLR   @08,@08                                             0381 00945000
         IC    @08,IBFLPL(,RWORK2)                                 0381 00946000
         SLR   @10,@08                                             0381 00947000
         CLR   @09,@10                                             0381 00948000
         BNL   @RF00381                                            0381 00949000
*         DO;                       /* YES                           */ 00950000
*           PLHSAVE5=RPARM1+RPARM1->IXHFSO/* SET ADDRESS OF PTR.     */ 00951000
*               +(RWORK0-ONE)*ICWPTL;/* POSITION                     */ 00952000
         ALR   @07,RPARM1                                          0383 00953000
         LR    @09,RWORK0                                          0383 00954000
         BCTR  @09,0                                               0383 00955000
         MR    @08,@15                                             0383 00956000
         ALR   @07,@09                                             0383 00957000
         ST    @07,PLHSAVE5(,RPLH)                                 0383 00958000
*           CALL MOVEPTRR;          /* GO MOVE PTRS. R TO L          */ 00959000
         BAL   @14,MOVEPTRR                                        0384 00960000
*           CALL DELPTR;            /* REMOVE POINTERS               */ 00961000
         BAL   @14,DELPTR                                          0385 00962000
*         END;                      /*                               */ 00963000
*       ELSE                        /* NOT ENOUGH ROOM SO            */ 00964000
*         CALL MOVEPTRL;            /* MOVE PTRS LEFT TO RT          */ 00965000
         B     @RC00381                                            0387 00966000
@RF00381 BAL   @14,MOVEPTRL                                        0387 00967000
*     END;                          /*                               */ 00968000
@RC00381 DS    0H                                                  0389 00969000
*   RESPECIFY                                                      0389 00970000
*    (RWORK0) UNRSTD;               /*                               */ 00971000
@RF00375 DS    0H                                                  0390 00972000
*/*                                                                  */ 00973000
*/* MOVE BLOCK LEFT TO ABUT THE POINTERS                             */ 00974000
*/*                                                                  */ 00975000
*                                                                  0390 00976000
*   RESPECIFY                                                      0390 00977000
*    (RWORK3,                                                      0390 00978000
*     RWORK4,                                                      0390 00979000
*     RWORK5) RSTD;                 /*                               */ 00980000
*   RWORK2=RPARM1+RPARM1->IXHFSO;   /* SET 'TO' ADDRESS              */ 00981000
         LR    RWORK2,RPARM1                                       0391 00982000
         AH    RWORK2,IXHFSO(,RPARM1)                              0391 00983000
*   RWORK3=RPARM1+RPARM1->IXHLEO;   /* POINT TO SPLIT ENTRY          */ 00984000
         LH    @10,IXHLEO(,RPARM1)                                 0392 00985000
         LR    RWORK3,RPARM1                                       0392 00986000
         ALR   RWORK3,@10                                          0392 00987000
*   RWORK4=RWORK3-RWORK3->IBFLPL;   /* COMPUTE 'FROM' ADDRESS        */ 00988000
         LR    RWORK4,RWORK3                                       0393 00989000
         SLR   @00,@00                                             0393 00990000
         IC    @00,IBFLPL(,RWORK3)                                 0393 00991000
         SLR   RWORK4,@00                                          0393 00992000
*   RWORK3=RWORK4-RWORK2;           /* COMPUTE MOVE LENGTH           */ 00993000
         LR    RWORK3,RWORK4                                       0394 00994000
         SLR   RWORK3,RWORK2                                       0394 00995000
*   RWORK5=(RPARM1+RPARM1->IXHSEO+  /* COMPUTE THE NUMBER            */ 00996000
*       LENGTH(IBFLPL)+             /* OF CHARACTERS IN THE          */ 00997000
*       LENGTH(IBFLPF))-(RWORK4);   /* BLOCK TO BE MOVED             */ 00998000
         LH    @15,IXHSEO(,RPARM1)                                 0395 00999000
         LR    RWORK5,RPARM1                                       0395 01000000
         ALR   RWORK5,@15                                          0395 01001000
         AL    RWORK5,@CF00146                                     0395 01002000
         SLR   RWORK5,RWORK4                                       0395 01003000
*   RPARM1->IXHLEO=RPARM1->IXHLEO-  /* READJUST LEFT OFFSET          */ 01004000
*       RWORK3;                     /*                               */ 01005000
         SLR   @10,RWORK3                                          0396 01006000
         STH   @10,IXHLEO(,RPARM1)                                 0396 01007000
*   RPARM1->IXHSEO=RPARM1->IXHSEO-  /* READJUST RIGHT OFFSET         */ 01008000
*       RWORK3;                     /*                               */ 01009000
         SLR   @15,RWORK3                                          0397 01010000
         STH   @15,IXHSEO(,RPARM1)                                 0397 01011000
*   RWORK3=RWORK5;                  /* GET LENGTH IN RWORK3          */ 01012000
         LR    RWORK3,RWORK5                                       0398 01013000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE BLOCK LEFT               */ 01014000
         MVCL  RWORK2,RWORK4                                            01015000
*   RESPECIFY                                                      0400 01016000
*    (RWORK2,                                                      0400 01017000
*     RWORK3,                                                      0400 01018000
*     RWORK4,                                                      0400 01019000
*     RWORK5) UNRSTD;               /*                               */ 01020000
*   PLHSAVE1=RPARM1+RPARM1->IXHLEO; /* CONVERT DISP. TO ADD.         */ 01021000
         LR    @10,RPARM1                                          0401 01022000
         AH    @10,IXHLEO(,RPARM1)                                 0401 01023000
         ST    @10,PLHSAVE1(,RPLH)                                 0401 01024000
*   PLHSAVE2=RPARM1+RPARM1->IXHSEO; /* CONVERT DISP. TO ADD.         */ 01025000
         LR    @10,RPARM1                                          0402 01026000
         AH    @10,IXHSEO(,RPARM1)                                 0402 01027000
         ST    @10,PLHSAVE2(,RPLH)                                 0402 01028000
*   CALL BUILDREC;                  /* GO CONVERT BLOCK TO AN INDEX     01029000
*                                      RECORD                        */ 01030000
         BAL   @14,BUILDREC                                        0403 01031000
*   IF RPARM1=ZERO THEN             /* WAS INDEX BUILT OKAY          */ 01032000
         LTR   RPARM1,RPARM1                                       0404 01033000
         BNZ   @RF00404                                            0404 01034000
*     DO;                           /* NOPE                          */ 01035000
*RJM:                                                              0406 01036000
*       BUFCVAL=OFF;                /* SET BUFFER INVALID            */ 01037000
RJM      L     @10,ICWBUFC(,RWORK1)                                0406 01038000
         NI    BUFCVAL(@10),B'11111011'                            0406 01039000
*       BUFCMW=OFF;                 /* DONT WRITE THIS BUFFER        */ 01040000
         NI    BUFCMW(@10),B'01111111'                             0407 01041000
*       RBUFC=ICWBUFC;              /* SET BUFC REGISTER AND         */ 01042000
         LR    RBUFC,@10                                           0408 01043000
*I05:                                                              0409 01044000
*       DO;                         /* IDACALL(IDAFREEB)             */ 01045000
I05      DS    0H                                                  0410 01046000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 01047000
         L     @15,@CV00919                                        0410 01048000
         BALR  @14,@15                                             0410 01049000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01050000
         BALR @11,0                                                     01051000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01052000
         USING *,@11                                                    01053000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01054000
         L     @11,=A(@PSTART)                                          01055000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01056000
         USING @PSTART,@11                                              01057000
*       END I05;                    /* FREE THE BFR          @X04SVLP*/ 01058000
*       RESPECIFY                                                  0416 01059000
*        (RWORK1) RSTD;             /*                               */ 01060000
*       RWORK1=AMBIWA;              /* REESTABLISH WORK AREA POINTER */ 01061000
         L     RWORK1,AMBIWA(,RAMB)                                0417 01062000
*       ICWNEST=ICWNEST*TWO;        /* PROVIDE MORE ENTRYS PER     0418 01063000
*                                      SECTION                       */ 01064000
         LH    @10,ICWNEST(,RWORK1)                                0418 01065000
         ALR   @10,@10                                             0418 01066000
         STH   @10,ICWNEST(,RWORK1)                                0418 01067000
*       IF ICWNEST>TWO*AMDNEST THEN /* IF NO. ENTRYS         @X04SVES*/ 01068000
         L     @15,AMBDSB(,RAMB)                                   0419 01069000
         LH    @00,AMDNEST(,@15)                                   0419 01070000
         ALR   @00,@00                                             0419 01071000
         CR    @10,@00                                             0419 01072000
         BNH   @RF00419                                            0419 01073000
*         ICWNEST=ONE;              /* EXCEEDS 2* CREATE LIMIT, RESET   01074000
*                                      TO ONE                @X04SVES*/ 01075000
         MVC   ICWNEST(2,RWORK1),@CH00053                          0420 01076000
*       GO TO RJL;                  /* GO START PROCESS ALL OVER     */ 01077000
         B     RJL                                                 0421 01078000
*     END;                          /*                               */ 01079000
*   RESPECIFY                                                      0423 01080000
*     R15 RSTD;                     /* PROTECT REGISTER 15           */ 01081000
@RF00404 DS    0H                                                  0424 01082000
*I06:                                                              0424 01083000
*   DO;                             /* IDACALL(IDASPACE)             */ 01084000
I06      DS    0H                                                  0425 01085000
*     CALL IDASPACE;                /* EXIT TO IDASPACE              */ 01086000
         L     @15,@CV00923                                        0425 01087000
         BALR  @14,@15                                             0425 01088000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01089000
         BALR @11,0                                                     01090000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01091000
         USING *,@11                                                    01092000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01093000
         L     @11,=A(@PSTART)                                          01094000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01095000
         USING @PSTART,@11                                              01096000
*   END I06;                        /* GO CHECK TO ASSURE            */ 01097000
*   RESPECIFY                                                      0431 01098000
*     RWORK1 RSTD;                  /* ADEQUATE FREESPACE            */ 01099000
*   IF R15^=ZERO THEN               /* WAS THERE ENOUGH SPACE        */ 01100000
         LTR   R15,R15                                             0432 01101000
         BZ    @RF00432                                            0432 01102000
*     DO;                           /* NO                            */ 01103000
*       RESPECIFY                                                  0434 01104000
*         R15 UNRSTD;               /* FREE REGISTER 15              */ 01105000
*       IF RPARM1->IXHLEO^=RPARM1-> /* IS THERE ONLY 1        SECTION*/ 01106000
*           IXHSEO THEN             /* IN THIS RECORD                */ 01107000
         CLC   IXHLEO(2,RPARM1),IXHSEO(RPARM1)                     0435 01108000
         BE    @RF00435                                            0435 01109000
*         DO;                       /* NO                            */ 01110000
*           GO TO RJM;              /* BACK TO TRY AGAIN             */ 01111000
         B     RJM                                                 0437 01112000
*         END;                      /*                               */ 01113000
*     END;                          /*                               */ 01114000
@RF00435 DS    0H                                                  0440 01115000
*   RPARM1->IXHHP=ICWCRBA;          /* SET HORIZ. PTR TO NEW RECORD  */ 01116000
@RF00432 L     @10,ICWCRBA(,RWORK1)                                0440 01117000
         ST    @10,IXHHP(,RPARM1)                                  0440 01118000
*I07:                                                              0441 01119000
*   DO;                             /* IDACALL(IDAER)                */ 01120000
I07      DS    0H                                                  0442 01121000
*     CALL IDAER;                   /* EXIT TO IDAER                 */ 01122000
         L     @15,@CV00918                                        0442 01123000
         BALR  @14,@15                                             0442 01124000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01125000
         BALR @11,0                                                     01126000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01127000
         USING *,@11                                                    01128000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01129000
         L     @11,=A(@PSTART)                                          01130000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01131000
         USING @PSTART,@11                                              01132000
*   END I07;                        /* REMOVE DUMMY ENTRY            */ 01133000
*   RESPECIFY                                                      0448 01134000
*    (RWORK1) RSTD;                 /*                               */ 01135000
*   RBUFC=ICWBUFC;                  /* SET BUFC REGISTER             */ 01136000
         L     RBUFC,ICWBUFC(,RWORK1)                              0449 01137000
*I08:                                                              0450 01138000
*   DO;                             /* IDACALL(IDAWRBFR)             */ 01139000
I08      DS    0H                                                  0451 01140000
*     CALL IDAWRBFR;                /* EXIT TO IDAWRBFR              */ 01141000
         L     @15,@CV00917                                        0451 01142000
         BALR  @14,@15                                             0451 01143000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01144000
         BALR @11,0                                                     01145000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01146000
         USING *,@11                                                    01147000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01148000
         L     @11,=A(@PSTART)                                          01149000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01150000
         USING @PSTART,@11                                              01151000
*   END I08;                        /* GO WRITE THE BUFFER           */ 01152000
*   IF RPLERREG^=ZERO THEN          /* WAS THERE AN ERROR            */ 01153000
         CLI   RPLERREG(RRPL),0                                    0457 01154000
         BE    @RF00457                                            0457 01155000
*     DO;                           /* YES                           */ 01156000
*       RAMB=AMBLDTA;               /* RESTORE AMB REGISTER          */ 01157000
         L     @10,RPLDACB(,RRPL)                                  0459 01158000
         L     @10,ACBAMBL(,@10)                                   0459 01159000
         L     RAMB,AMBLDTA(,@10)                                  0459 01160000
*       RESPECIFY                                                  0460 01161000
*        (R15) RSTD;                /*                               */ 01162000
*       R15=IOERR;                  /* SET ERROR CODE                */ 01163000
         LA    R15,4                                               0461 01164000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 01165000
         BAL   @14,EXIT                                            0462 01166000
*       RESPECIFY                                                  0463 01167000
*        (R15) UNRSTD;              /*                               */ 01168000
*     END;                          /*                               */ 01169000
*I09:                                                              0465 01170000
*   DO;                             /* IDACALL(IDAIVIXB)             */ 01171000
@RF00457 DS    0H                                                  0465 01172000
I09      DS    0H                                                  0466 01173000
*     CALL IDAIVIXB;                /* EXIT TO IDAIVIXB              */ 01174000
         L     @15,@CV00922                                        0466 01175000
         BALR  @14,@15                                             0466 01176000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01177000
         BALR @11,0                                                     01178000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01179000
         USING *,@11                                                    01180000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01181000
         L     @11,=A(@PSTART)                                          01182000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01183000
         USING @PSTART,@11                                              01184000
*   END I09;                        /* ASSURE THIS RBA INVALID       */ 01185000
*I10:                                                              0472 01186000
*   DO;                             /* IDACALL(IDAFREEB)             */ 01187000
I10      DS    0H                                                  0473 01188000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 01189000
         L     @15,@CV00919                                        0473 01190000
         BALR  @14,@15                                             0473 01191000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01192000
         BALR @11,0                                                     01193000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01194000
         USING *,@11                                                    01195000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01196000
         L     @11,=A(@PSTART)                                          01197000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01198000
         USING @PSTART,@11                                              01199000
*   END I10;                        /* FREE BFR              @X04SVLP*/ 01200000
*   RESPECIFY                                                      0479 01201000
*    (RWORK1) RSTD;                 /*                               */ 01202000
*   RWORK1=AMBIWA;                  /* RESTORE W.A. BASE             */ 01203000
         L     RWORK1,AMBIWA(,RAMB)                                0480 01204000
*   IF ICWLN=ICWSS THEN             /* IS THIS LOWEST LEVEL          */ 01205000
         LA    @10,1                                               0481 01206000
         CH    @10,ICWLN(,RWORK1)                                  0481 01207000
         BNE   @RF00481                                            0481 01208000
*     AMDNCIS=AMDNCIS+ONE;          /* YES, BUMP SPLIT COUNT         */ 01209000
         L     @15,AMBDSB(,RAMB)                                   0482 01210000
         AL    @10,AMDNCIS(,@15)                                   0482 01211000
         ST    @10,AMDNCIS(,@15)                                   0482 01212000
*   ELSE                            /* NO, BUMP SPLIT COUNT          */ 01213000
*     AMDNCAS=AMDNCAS+ONE;          /* OF NON-LOWEST LEVEL           */ 01214000
         B     @RC00481                                            0483 01215000
@RF00481 L     @10,AMBDSB(,RAMB)                                   0483 01216000
         LA    @00,1                                               0483 01217000
         AL    @00,AMDNCAS(,@10)                                   0483 01218000
         ST    @00,AMDNCAS(,@10)                                   0483 01219000
*   RESPECIFY                                                      0484 01220000
*    (RWORK1) UNRSTD;               /*                               */ 01221000
@RC00481 DS    0H                                                  0485 01222000
*   RESPECIFY                                                      0485 01223000
*    (R15) RSTD;                    /*                               */ 01224000
*   R15=ZERO;                       /* SET SPLIT OK INDICATOR        */ 01225000
         SLR   R15,R15                                             0486 01226000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01227000
         BAL   @14,EXIT                                            0487 01228000
*   RESPECIFY                                                      0488 01229000
*    (R15) UNRSTD;                  /*                               */ 01230000
*                                                                  0489 01231000
*/*                                                                  */ 01232000
*/*    BUILDREC SUBROUTINE                                           */ 01233000
*/*       FUNCTION -                                                 */ 01234000
*/*        BUILDS AN INDEX RECORD FROM -                             */ 01235000
*/*         1) FIRST KEY IS IN CURRENT KEY FIELD OF WORK AREA.       */ 01236000
*/*            REMAINING KEYS (IN COMPRESSED FORM) ARE LOCATED       */ 01237000
*/*            IN A BLOCK CONTAINED WITHIN THE BUFFER WHICH WILL     */ 01238000
*/*            HOLD THE NEWLY CREATED INDEX RECORD.                  */ 01239000
*/*         2) POINTERS LOCATED IN THE BUFFER BETWEEN THE HEADER     */ 01240000
*/*            AND THE ABOVE MENTIONED BLOCK.                        */ 01241000
*/*         POINTERS ARE ASSIGNED TO KEYS FROM RIGHT TO LEFT         */ 01242000
*/*        KEYS INCREASE IN SIZE.                                    */ 01243000
*/*        BLOCK CONTAINS NO SECTION LL FIELDS OR POINTER FIELDS.    */ 01244000
*/*       INPUT -                                                    */ 01245000
*/*         LIMITS OF THE BLOCK ARE DEFINED BY THE FOLLOWING         */ 01246000
*/*         OFFSETS TO THE 'F' FIELD -                               */ 01247000
*/*          IXHSEO = RIGHTMOST INDEX ENTRY.                         */ 01248000
*/*          IXHLEO = LEFTMOST INDEX ENTRY.                          */ 01249000
*/*        OUTPUT -                                                  */ 01250000
*/*        RPARM1 = ZERO INDICATES THAT ROOM WAS NOT AVAILABLE       */ 01251000
*/*                 TO CONTINUE BUILDING DUE TO NEWLY BUILT RECORD   */ 01252000
*/*                 OVERLAPPING THE BLOCK OF INPUT KEYS.             */ 01253000
*/*        RPARM1 = NONZERO INDICATES RECORD WAS PROPERLY BUILT.     */ 01254000
*                                                                  0489 01255000
*BUILDREC:                                                         0489 01256000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01257000
         B     @PB00002                                            0489 01258000
BUILDREC DS    0H                                                  0490 01259000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01260000
         IDASVR14                                                       01261000
*   RESPECIFY                                                      0491 01262000
*    (RWORK0,                                                      0491 01263000
*     RWORK1,                                                      0491 01264000
*     RWORK2,                                                      0491 01265000
*     RWORK3,                                                      0491 01266000
*     RWORK4,                                                      0491 01267000
*     RWORK5) RSTD;                 /*                               */ 01268000
*/*                                                                  */ 01269000
*/*  CLEAR RIGHT END OF BUFFER                                       */ 01270000
*/*                                                                  */ 01271000
*                                                                  0492 01272000
*   RWORK2=PLHSAVE2+LENGTH(IBFLPF)+ /* COMPUTE ADDRESS OF 1ST.       */ 01273000
*       LENGTH(IBFLPL);             /* BYTE AFTER BLOCK              */ 01274000
         LA    RWORK2,2                                            0492 01275000
         AL    RWORK2,PLHSAVE2(,RPLH)                              0492 01276000
*   RWORK3=RPARM1+RPARM1->IXHLL-    /* COMPUTE LENGTH BETWEEN        */ 01277000
*       RWORK2;                     /* BLOCK AND END OF BFR.         */ 01278000
         LR    RWORK3,RPARM1                                       0493 01279000
         LH    @10,IXHLL(,RPARM1)                                  0493 01280000
         N     @10,@CF01056                                        0493 01281000
         ALR   RWORK3,@10                                          0493 01282000
         SLR   RWORK3,RWORK2                                       0493 01283000
*   RWORK5=ZERO;                    /* SET FILL CHARACTER            */ 01284000
         SLR   RWORK5,RWORK5                                       0494 01285000
*   GEN(MVCL  RWORK2,RWORK4);       /* CLEAR THE AREA                */ 01286000
         MVCL  RWORK2,RWORK4                                            01287000
*/*                                                                  */ 01288000
*/*  INITIALIZE DUMMY ENTRY AS WELL AS HEADER OFFSETS                */ 01289000
*/*                                                                  */ 01290000
*                                                                  0496 01291000
*   RWORK5=RPARM1+RPARM1->IXHLL-    /* POINT TO LAST POINTER         */ 01292000
*       ICWPTL;                     /* FIELD IN RECORD               */ 01293000
         LH    @10,IXHLL(,RPARM1)                                  0496 01294000
         N     @10,@CF01056                                        0496 01295000
         LR    RWORK5,RPARM1                                       0496 01296000
         ALR   RWORK5,@10                                          0496 01297000
         SLR   @15,@15                                             0496 01298000
         IC    @15,ICWPTL(,RWORK1)                                 0496 01299000
         SLR   RWORK5,@15                                          0496 01300000
*   RPARM1->IXHLEO=RPARM1->IXHLL-   /* INITIALIZE THE OFFSET         */ 01301000
*       RPARM1->IXHFLPLN;           /* TO THE FIRST ENTRY            */ 01302000
         SLR   @14,@14                                             0497 01303000
         IC    @14,IXHFLPLN(,RPARM1)                               0497 01304000
         SLR   @10,@14                                             0497 01305000
         STH   @10,IXHLEO(,RPARM1)                                 0497 01306000
*   RPARM1->IXHSEO=RPARM1->IXHLEO;  /* INITIALIZE SECTION ENTRY    0498 01307000
*                                      OFFSET                        */ 01308000
         STH   @10,IXHSEO(,RPARM1)                                 0498 01309000
*   RWORK3=RPARM1+RPARM1->IXHFSO-   /* POINT TO FIRST POINTER        */ 01310000
*       ICWPTL;                     /* AVAILABLE                     */ 01311000
         LR    RWORK3,RPARM1                                       0499 01312000
         AH    RWORK3,IXHFSO(,RPARM1)                              0499 01313000
         SLR   RWORK3,@15                                          0499 01314000
*   RWORK4=RPARM1->IXHPTLS;         /* SET POINTER MASK              */ 01315000
         SLR   RWORK4,RWORK4                                       0500 01316000
         IC    RWORK4,IXHPTLS(,RPARM1)                             0500 01317000
*   GEN(EX  RWORK4,PICKPNT);        /* PICK UP THE POINTER           */ 01318000
         EX  RWORK4,PICKPNT                                             01319000
*   GEN(EX  RWORK4,PLACEPNT);       /* STORE IT AWAY                 */ 01320000
         EX  RWORK4,PLACEPNT                                            01321000
*   RWORK5=RWORK3;                  /*                               */ 01322000
         LR    RWORK5,RWORK3                                       0503 01323000
*   RWORK0=ZERO;                    /* CLEAR                         */ 01324000
         SLR   RWORK0,RWORK0                                       0504 01325000
*   GEN(EX  RWORK4,PLACEPNT);       /* STORE ZERO IN OLD PTR.        */ 01326000
         EX  RWORK4,PLACEPNT                                            01327000
*   RPARM1->IXHFSO=RPARM1->IXHFSO-  /* ADJUST OFFSET TO FREE         */ 01328000
*       ICWPTL;                     /* SPACE IN HEADER               */ 01329000
         LH    @10,IXHFSO(,RPARM1)                                 0506 01330000
         SLR   @15,@15                                             0506 01331000
         IC    @15,ICWPTL(,RWORK1)                                 0506 01332000
         SLR   @10,@15                                             0506 01333000
         STH   @10,IXHFSO(,RPARM1)                                 0506 01334000
*/*                                                                  */ 01335000
*/*  INITIALIZE  WORK  AREA                                          */ 01336000
*/*                                                                  */ 01337000
*                                                                  0507 01338000
*   ICWVSE=OFF;                     /* RESET SECTION VALID BIT       */ 01339000
*   ICWVNE=OFF;                     /* RESET PREV. ENTRY VALID       */ 01340000
         NI    ICWVSE(RWORK1),B'11100111'                          0508 01341000
*   ICWSCNT=ZERO;                   /* RESET ENTRYS/SECTION          */ 01342000
         SLR   @10,@10                                             0509 01343000
         STH   @10,ICWSCNT(,RWORK1)                                0509 01344000
*   ICWPSEO=ZERO;                   /* RESET PRIOR SECT. PTR         */ 01345000
         STH   @10,ICWPSEO(,RWORK1)                                0510 01346000
*/*                                                                  */ 01347000
*/*  CLEAR THE LAST ENTRY FROM THE BLOCK                             */ 01348000
*/*                                                                  */ 01349000
*                                                                  0511 01350000
*   CALL CKSPNRCD;                  /* GO SEE IF RIGHT HAND RECORD IS   01351000
*                                      SPANNED               @X04SVES*/ 01352000
         BAL   @14,CKSPNRCD                                        0511 01353000
*   IF PLHSAVE1=PLHSAVE2 THEN       /* IS THERE ONLY 1 ENTRY         */ 01354000
         L     @10,PLHSAVE2(,RPLH)                                 0512 01355000
         C     @10,PLHSAVE1(,RPLH)                                 0512 01356000
         BNE   @RF00512                                            0512 01357000
*     DO;                           /* IN THE BLOCK -- YES           */ 01358000
*       IF PLHSAVE2->IBFLPL^=ZERO|  /* IS THIS ENTRY ANYTHING        */ 01359000
*           PLHSAVE2->IBFLPF^=ZERO THEN/* BUT A DUMMY                */ 01360000
         CLI   IBFLPL(@10),0                                       0514 01361000
         BNE   @RT00514                                            0514 01362000
         CLI   IBFLPF(@10),0                                       0514 01363000
         BNE   @RT00514                                            0514 01364000
*         GO TO RJE;                /* YES, GO INSERT IT             */ 01365000
*       ELSE                        /* SINGLE ENTRY IS A DUMMY       */ 01366000
*         DO;                       /*                               */ 01367000
*           IF ICWNOSEG^=ZERO THEN  /* SPANNED RCD.          @X04SVES*/ 01368000
         LH    @10,ICWNOSEG(,RWORK1)                               0517 01369000
         LTR   @10,@10                                             0517 01370000
         BZ    @RF00517                                            0517 01371000
*             DO ICWCRSEG=ONE TO ICWNOSEG-ONE;/* YES         @X04SVES*/ 01372000
         LA    @10,1                                               0518 01373000
         B     @DE00518                                            0518 01374000
@DL00518 DS    0H                                                  0519 01375000
*I11:                                                              0519 01376000
*               DO;                 /* IDACALL(IDASPNPT)             */ 01377000
I11      DS    0H                                                  0520 01378000
*                 CALL IDASPNPT;    /* EXIT TO IDASPNPT              */ 01379000
         L     @15,@CV00924                                        0520 01380000
         BALR  @14,@15                                             0520 01381000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01382000
         BALR @11,0                                                     01383000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01384000
         USING *,@11                                                    01385000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01386000
         L     @11,=A(@PSTART)                                          01387000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01388000
         USING @PSTART,@11                                              01389000
*               END I11;            /* BUILD A SEG           @X04SVES*/ 01390000
*             END;                  /*                       @X04SVES*/ 01391000
         LA    @10,1                                               0526 01392000
         AH    @10,ICWCRSEG(,RWORK1)                               0526 01393000
@DE00518 STH   @10,ICWCRSEG(,RWORK1)                               0526 01394000
         LH    @15,ICWNOSEG(,RWORK1)                               0526 01395000
         BCTR  @15,0                                               0526 01396000
         CR    @10,@15                                             0526 01397000
         BNH   @DL00518                                            0526 01398000
*           RPARM1=ICWBUFC->BUFCBAD;/*                       @X04SVES*/ 01399000
@RF00517 L     @10,ICWBUFC(,RWORK1)                                0527 01400000
         L     RPARM1,BUFCBAD(,@10)                                0527 01401000
*           CALL EXIT;              /* RETURN TO CALLER              */ 01402000
         BAL   @14,EXIT                                            0528 01403000
*         END;                      /*                               */ 01404000
*     END;                          /*                               */ 01405000
*RJE:                                                              0531 01406000
*   RWORK2=PLHSAVE2-                /* POINT TO THE BEGINNING        */ 01407000
*       PLHSAVE2->IBFLPL;           /* OF THE LAST ENTRY             */ 01408000
@RF00512 DS    0H                                                  0531 01409000
RJE      L     @10,PLHSAVE2(,RPLH)                                 0531 01410000
         LR    RWORK2,@10                                          0531 01411000
         SLR   @15,@15                                             0531 01412000
         IC    @15,IBFLPL(,@10)                                    0531 01413000
         SLR   RWORK2,@15                                          0531 01414000
*   RWORK3=PLHSAVE2-RWORK2+         /* COMPUTE LENGTH OF THAT        */ 01415000
*       LENGTH(IBFLPF)+             /* LAST ENTRY                    */ 01416000
*       LENGTH(IBFLPL);             /*                               */ 01417000
         LA    @15,2                                               0532 01418000
         SLR   @10,RWORK2                                          0532 01419000
         ALR   @10,@15                                             0532 01420000
         LR    RWORK3,@10                                          0532 01421000
*   RWORK5=ZERO;                    /* SET FILL CHAR. TO CLEAR       */ 01422000
         SLR   RWORK5,RWORK5                                       0533 01423000
*   PLHSAVE2=RWORK2-LENGTH(IBFLPF)- /* SAVE THE POINTER TO           */ 01424000
*       LENGTH(IBFLPL);             /* THE NEXT ENTRY                */ 01425000
         LCR   @15,@15                                             0534 01426000
         ALR   @15,RWORK2                                          0534 01427000
         ST    @15,PLHSAVE2(,RPLH)                                 0534 01428000
*   GEN(MVCL  RWORK2,RWORK4);       /* SET THE AREA TO ZEROS         */ 01429000
         MVCL  RWORK2,RWORK4                                            01430000
*RJG:                               /*                               */ 01431000
*I12:                                                              0536 01432000
*   DO;                             /* IDACALL(IDAIST)               */ 01433000
RJG      DS    0H                                                  0536 01434000
I12      DS    0H                                                  0537 01435000
*     CALL IDAIST;                  /* EXIT TO IDAIST                */ 01436000
         L     @15,@CV00921                                        0537 01437000
         BALR  @14,@15                                             0537 01438000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01439000
         BALR @11,0                                                     01440000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01441000
         USING *,@11                                                    01442000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01443000
         L     @11,=A(@PSTART)                                          01444000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01445000
         USING @PSTART,@11                                              01446000
*   END I12;                        /* GO INSERT ENTRY IN WA         */ 01447000
*   RESPECIFY                                                      0543 01448000
*    (RWORK1,                                                      0543 01449000
*     RWORK2,                                                      0543 01450000
*     RWORK3,                                                      0543 01451000
*     RWORK4,                                                      0543 01452000
*     RWORK5) RSTD;                 /*                               */ 01453000
*   RPARM1=ICWBUFC->BUFCBAD;        /* REESTABLISH BUFFER PTR.       */ 01454000
         L     @10,ICWBUFC(,RWORK1)                                0544 01455000
         L     RPARM1,BUFCBAD(,@10)                                0544 01456000
*   IF ICWWNF=ON THEN               /* DID THE ENTRY FIT             */ 01457000
         TM    ICWWNF(RWORK1),B'10000000'                          0545 01458000
         BNO   @RF00545                                            0545 01459000
*     DO;                           /* NO                            */ 01460000
*       ICWWNF=OFF;                 /* RESET WONT FIT FLAG           */ 01461000
         NI    ICWWNF(RWORK1),B'01111111'                          0547 01462000
*       IF(PLHSAVE1-PLHSAVE1->IBFLPL)/* IS THERE SPACE TO THE        */ 01463000
*           >(RPARM1+RPARM1->IXHFSO) THEN/* LEFT THAT COULD BE     0548 01464000
*                                      UTILIZED                      */ 01465000
         L     @10,PLHSAVE1(,RPLH)                                 0548 01466000
         LR    @15,@10                                             0548 01467000
         SLR   @14,@14                                             0548 01468000
         IC    @14,IBFLPL(,@10)                                    0548 01469000
         SLR   @15,@14                                             0548 01470000
         LR    @14,RPARM1                                          0548 01471000
         AH    @14,IXHFSO(,RPARM1)                                 0548 01472000
         CR    @15,@14                                             0548 01473000
         BNH   @RF00548                                            0548 01474000
*         DO;                       /* YES                           */ 01475000
*           RWORK2=RPARM1+RPARM1->IXHFSO;/* SET 'TO' ADDRESS         */ 01476000
         LR    RWORK2,@14                                          0550 01477000
*           RWORK4=PLHSAVE1-        /* SET 'FROM' ADDRESS            */ 01478000
*               PLHSAVE1->IBFLPL;   /*                               */ 01479000
         LR    RWORK4,@15                                          0551 01480000
*           RPARM1=PLHSAVE2+LENGTH(IBFLPL)/* SAVE ADDRESS OF 1ST.    */ 01481000
*               +LENGTH(IBFLPF);    /* BYTE AFTER BLOCK              */ 01482000
         L     @15,PLHSAVE2(,RPLH)                                 0552 01483000
         LA    RPARM1,2                                            0552 01484000
         ALR   RPARM1,@15                                          0552 01485000
*           RWORK3=MAX(RPARM1-RWORK4,0);/* COMPUTE LENGTH TO MOVE    */ 01486000
         LR    RWORK3,RPARM1                                       0553 01487000
         SLR   RWORK3,RWORK4                                       0553 01488000
         SLR   @14,@14                                             0553 01489000
         CR    RWORK3,@14                                          0553 01490000
         BNL   *+6                                                      01491000
         LR    RWORK3,@14                                          0553 01492000
*           RWORK5=RWORK4-RWORK2;   /* COMPUTE LEFT OFFSET           */ 01493000
         LR    RWORK5,RWORK4                                       0554 01494000
         SLR   RWORK5,RWORK2                                       0554 01495000
*           PLHSAVE1=PLHSAVE1-RWORK5;/* READJUST LEFT END PTR        */ 01496000
         SLR   @10,RWORK5                                          0555 01497000
         ST    @10,PLHSAVE1(,RPLH)                                 0555 01498000
*           PLHSAVE2=PLHSAVE2-RWORK5;/* READJUST RIGHT END PTR       */ 01499000
         SLR   @15,RWORK5                                          0556 01500000
         ST    @15,PLHSAVE2(,RPLH)                                 0556 01501000
*           RWORK5=RWORK3;          /* MOVE LENGTH AGAIN             */ 01502000
         LR    RWORK5,RWORK3                                       0557 01503000
*           RWORK0=RWORK2+RWORK3;   /* SAVE ADDRESS TO CLEAR         */ 01504000
         LR    RWORK0,RWORK2                                       0558 01505000
         ALR   RWORK0,RWORK3                                       0558 01506000
*           GEN(MVCL  RWORK2,RWORK4);/* MOVE BLOCK LEFT              */ 01507000
         MVCL  RWORK2,RWORK4                                            01508000
*           RWORK2=RWORK0;          /* SET CLEAR ADDRESS             */ 01509000
         LR    RWORK2,RWORK0                                       0560 01510000
*           RWORK3=RPARM1-RWORK0;   /* SET LENGTH TO CLEAR           */ 01511000
         LR    RWORK3,RPARM1                                       0561 01512000
         SLR   RWORK3,RWORK0                                       0561 01513000
*           RWORK5=ZERO;            /*                               */ 01514000
         SLR   RWORK5,RWORK5                                       0562 01515000
*           GEN(MVCL RWORK2,RWORK4);/* CLEAR AREA JUST VACATED       */ 01516000
         MVCL RWORK2,RWORK4                                             01517000
*           GO TO RJG;              /* GO BACK AND TRY TO INSERT   0564 01518000
*                                      RECORD AGAIN                  */ 01519000
         B     RJG                                                 0564 01520000
*         END;                      /* ENTRY WONT FIT AND NO ROOM IS    01521000
*                                      AVAILABLE TO                  */ 01522000
*       DO;                         /* THE LEFT OF BLOCK             */ 01523000
@RF00548 DS    0H                                                  0567 01524000
*         RPARM1=ZERO;              /* SHOW RECORD NOT BUILT         */ 01525000
         SLR   RPARM1,RPARM1                                       0567 01526000
*         CALL EXIT;                /* RETURN TO CALLER              */ 01527000
         BAL   @14,EXIT                                            0568 01528000
*       END;                        /*                               */ 01529000
*     END;                          /*                               */ 01530000
*   CALL CKSPNRCD;                  /* CHECK FOR SPANNED RECORD    0571 01531000
*                                                            @X04SVES*/ 01532000
@RF00545 BAL   @14,CKSPNRCD                                        0571 01533000
*   IF PLHSAVE2>PLHSAVE1 THEN       /* ARE THERE 2 OR MORE KEYS YET     01534000
*                                      TO PROCESS                    */ 01535000
         CLC   PLHSAVE2(4,RPLH),PLHSAVE1(RPLH)                     0572 01536000
         BNH   @RF00572                                            0572 01537000
*     DO;                           /* YES                           */ 01538000
*       CALL UNCOMPRS;              /* UNCOMPRESS THIS ENTRY         */ 01539000
         BAL   @14,UNCOMPRS                                        0574 01540000
*       GO TO RJE;                  /* GO PROCESS THE ENTRY          */ 01541000
         B     RJE                                                 0575 01542000
*     END;                          /*                               */ 01543000
*   DO;                             /*                               */ 01544000
@RF00572 DS    0H                                                  0578 01545000
*     IF(PLHSAVE2=PLHSAVE1)&        /* IF WE HAVE NOT PASSED         */ 01546000
*         (PLHSAVE2->IBFLPL^=ZERO|  /* THE LAST ENTRY AND IT         */ 01547000
*         PLHSAVE2->IBFLPF^=ZERO) THEN/* IS NOT A DUMMY THEN         */ 01548000
         L     @10,PLHSAVE2(,RPLH)                                 0578 01549000
         C     @10,PLHSAVE1(,RPLH)                                 0578 01550000
         BNE   @RF00578                                            0578 01551000
         CLI   IBFLPL(@10),0                                       0578 01552000
         BNE   @RT00578                                            0578 01553000
         CLI   IBFLPF(@10),0                                       0578 01554000
         BE    @RF00578                                            0578 01555000
@RT00578 DS    0H                                                  0579 01556000
*       DO;                         /*                               */ 01557000
*         CALL UNCOMPRS;            /* PROCESS AS USUAL              */ 01558000
         BAL   @14,UNCOMPRS                                        0580 01559000
*         GO TO RJE;                /*                               */ 01560000
         B     RJE                                                 0581 01561000
*       END;                        /*                               */ 01562000
*     ELSE                          /*                       @X04SVES*/ 01563000
*       IF(PLHSAVE2=PLHSAVE1&       /* ON LAST ENTRY         @X04SVES*/ 01564000
*           PLHSAVE2->IBFLPL=ZERO&  /* AND LAST IS           @X04SVES*/ 01565000
*           PLHSAVE2->IBFLPF=ZERO&  /* DUMMY ENTRY           @X04SVES*/ 01566000
*           ICWNOSEG^=ZERO) THEN    /* AND SPND RCD          @X04SVES*/ 01567000
@RF00578 L     @10,PLHSAVE2(,RPLH)                                 0583 01568000
         C     @10,PLHSAVE1(,RPLH)                                 0583 01569000
         BNE   @RF00583                                            0583 01570000
         CLI   IBFLPL(@10),0                                       0583 01571000
         BNE   @RF00583                                            0583 01572000
         CLI   IBFLPF(@10),0                                       0583 01573000
         BNE   @RF00583                                            0583 01574000
         LH    @10,ICWNOSEG(,RWORK1)                               0583 01575000
         LTR   @10,@10                                             0583 01576000
         BZ    @RF00583                                            0583 01577000
*         DO ICWCRSEG=ONE TO ICWNOSEG-ONE;/* YES             @X04SVES*/ 01578000
         LA    @10,1                                               0584 01579000
         B     @DE00584                                            0584 01580000
@DL00584 DS    0H                                                  0585 01581000
*I13:                                                              0585 01582000
*           DO;                     /* IDACALL(IDASPNPT)             */ 01583000
I13      DS    0H                                                  0586 01584000
*             CALL IDASPNPT;        /* EXIT TO IDASPNPT              */ 01585000
         L     @15,@CV00924                                        0586 01586000
         BALR  @14,@15                                             0586 01587000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01588000
         BALR @11,0                                                     01589000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01590000
         USING *,@11                                                    01591000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01592000
         L     @11,=A(@PSTART)                                          01593000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01594000
         USING @PSTART,@11                                              01595000
*           END I13;                /* ENTER 1 SEGMENT@X04SVES       */ 01596000
*         END;                      /*                       @X04SVES*/ 01597000
         LA    @10,1                                               0592 01598000
         AH    @10,ICWCRSEG(,RWORK1)                               0592 01599000
@DE00584 STH   @10,ICWCRSEG(,RWORK1)                               0592 01600000
         LH    @15,ICWNOSEG(,RWORK1)                               0592 01601000
         BCTR  @15,0                                               0592 01602000
         CR    @10,@15                                             0592 01603000
         BNH   @DL00584                                            0592 01604000
*   END;                            /*                               */ 01605000
@RF00583 DS    0H                                                  0594 01606000
*   RPARM1=ICWBUFC->BUFCBAD;        /* RESTORE BUFFER ADDRESS      0594 01607000
*                                                            @X04SVES*/ 01608000
         L     @10,ICWBUFC(,RWORK1)                                0594 01609000
         L     RPARM1,BUFCBAD(,@10)                                0594 01610000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01611000
         BAL   @14,EXIT                                            0595 01612000
*   END BUILDREC;                   /*                               */ 01613000
@EL00002 DS    0H                                                  0596 01614000
@EF00002 DS    0H                                                  0596 01615000
@ER00002 BR    @14                                                 0596 01616000
*   RESPECIFY                                                      0597 01617000
*    (RWORK0,                                                      0597 01618000
*     RWORK2,                                                      0597 01619000
*     RWORK3,                                                      0597 01620000
*     RWORK4,                                                      0597 01621000
*     RWORK5) UNRSTD;               /*                               */ 01622000
*                                                                  0598 01623000
*/*                                                                  */ 01624000
*/*    COUNT SUBROUTINE                                              */ 01625000
*/*       FUNCTION -                                                 */ 01626000
*/*       COUNTS THE NUMBER OF INDEX ENTRYS IN AN INDEX BLOCK        */ 01627000
*/*        WHICH CONTAINS NO SECTION CHAIN AHEAD DISPLACEMENTS.      */ 01628000
*/*        THE LIMITS OF THE BLOCK ARE DEFINED TO BE:                */ 01629000
*/*          LEFTMOST ENTRY DISPLACEMENT IN IXHLEO.                  */ 01630000
*/*          RIGHTMOST ENTRY DISPLACEMENT IN IXHSEO.                 */ 01631000
*/*           EACH DISPLACEMENT IS FROM THE BEGINNING OF THE         */ 01632000
*/*           RECORD TO THE 'F' FIELD OF THE ENTRY.                  */ 01633000
*/*       OUTPUT -                                                   */ 01634000
*/*        THE NUMBER OF ENTRYS IS RETURNED IN RWORK0.               */ 01635000
*/*                                                                  */ 01636000
*                                                                  0598 01637000
*COUNT:                                                            0598 01638000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01639000
COUNT    DS    0H                                                  0599 01640000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01641000
         IDASVR14                                                       01642000
*   RESPECIFY                                                      0600 01643000
*    (RWORK0,                                                      0600 01644000
*     RWORK4,                                                      0600 01645000
*     RWORK5) RSTD;                 /*                               */ 01646000
*   RWORK0=ZERO;                    /* INITIALIZE COUNTER            */ 01647000
         SLR   RWORK0,RWORK0                                       0601 01648000
*   RWORK4=RPARM1->IXHSEO;          /* INITIALIZE LOOP CONTROL       */ 01649000
         LH    RWORK4,IXHSEO(,RPARM1)                              0602 01650000
*   DO WHILE RWORK4^<RPARM1->IXHLEO;/* LOOP STOPS WHEN LAST ENTRY HAS   01651000
*                                      BEEN COUNTED                  */ 01652000
         B     @DE00603                                            0603 01653000
@DL00603 DS    0H                                                  0604 01654000
*     RWORK5=RPARM1+RWORK4;         /* POINT AT CURRENT ENTRY        */ 01655000
         LR    RWORK5,RPARM1                                       0604 01656000
         ALR   RWORK5,RWORK4                                       0604 01657000
*     RWORK4=RWORK4-RWORK5->IBFLPL  /* COMPUTE DISPLACEMENT OF       */ 01658000
*         -RPARM1->IXHFLPLN;        /* NEXT ENTRY TO THE LEFT        */ 01659000
         LR    @10,RWORK4                                          0605 01660000
         SLR   @15,@15                                             0605 01661000
         IC    @15,IBFLPL(,RWORK5)                                 0605 01662000
         SLR   @10,@15                                             0605 01663000
         SLR   @15,@15                                             0605 01664000
         IC    @15,IXHFLPLN(,RPARM1)                               0605 01665000
         SLR   @10,@15                                             0605 01666000
         LR    RWORK4,@10                                          0605 01667000
*     RWORK0=RWORK0+ONE;            /* BUMP COUNTER BY 1             */ 01668000
         AL    RWORK0,@CF00053                                     0606 01669000
*   END;                            /*                               */ 01670000
@DE00603 CH    RWORK4,IXHLEO(,RPARM1)                              0607 01671000
         BNL   @DL00603                                            0607 01672000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01673000
         BAL   @14,EXIT                                            0608 01674000
*   RESPECIFY                                                      0609 01675000
*    (RWORK0,                                                      0609 01676000
*     RWORK4,                                                      0609 01677000
*     RWORK5) UNRSTD;               /*                               */ 01678000
*   END COUNT;                      /*                               */ 01679000
@EL00003 DS    0H                                                  0610 01680000
@EF00003 DS    0H                                                  0610 01681000
@ER00003 BR    @14                                                 0610 01682000
*                                                                  0611 01683000
*/*                                                                  */ 01684000
*/*    MOVEPTRR SUBROUTINE                                           */ 01685000
*/*       FUNCTION -                                                 */ 01686000
*/*        PLACES THE INDEX POINTERS FROM A BLOCK OF AN INDEX        */ 01687000
*/*        INTO THE FREESPACE AREA OF THE INDEX RECORD. THE ORDER    */ 01688000
*/*        OF MOVING THE POINTERS IS FROM RIGHT TO LEFT, IE, THE     */ 01689000
*/*        RIGHTMOST POINTER FROM THE BLOCK IS PLACED INTO THE       */ 01690000
*/*        RIGHTMOST LOCATION IN THE FREESPACE, THEN THE NEXT POINTER*/ 01691000
*/*        TO THE LEFT IS PLACED INTO THE NEXT POSITION TO THE LEFT  */ 01692000
*/*        IN THE FREESPACE, AND SO ON.  THE POINTERS IN THE INDEX   */ 01693000
*/*        BLOCK ARE NOT ERASED AFTER BEING MOVED.                   */ 01694000
*/*        THE BLOCK OF INDEX MUST NOT CONTAIN ANY SECTION LL FIELDS,*/ 01695000
*/*       INPUT -                                                    */ 01696000
*/*        THE BLOCK OF INDEX IS DEFINED BY THE FOLLOWING OFFSETS    */ 01697000
*/*        TO THE 'F' FIELD -                                        */ 01698000
*/*         IXHSEO = RIGHTMOST INDEX ENTRY.                          */ 01699000
*/*         IXHLEO = LEFTMOST INDEX ENTRY.                           */ 01700000
*/*        THE ADDRESS OF THE FREESPACE LOCATION TO RECIEVE THE      */ 01701000
*/*        FIRST POINTER IS IN PLHSAVE5.                             */ 01702000
*/*       OUTPUT -                                                   */ 01703000
*/*        IXHFSO (DISPLACEMENT OF FREESPACE) WILL BE SET TO THE     */ 01704000
*/*        DISPLACEMENT OF THE FIRST POSITION TO THE RIGHT OF THE    */ 01705000
*/*        SERIES OF POINTERS PLACED.                                */ 01706000
*/*       RETURN -                                                   */ 01707000
*/*        ALWAYS TO CALLER.                                         */ 01708000
*/*                                                                  */ 01709000
*                                                                  0611 01710000
*MOVEPTRR:                                                         0611 01711000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01712000
MOVEPTRR DS    0H                                                  0612 01713000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01714000
         IDASVR14                                                       01715000
*   RESPECIFY                                                      0613 01716000
*    (RWORK0,                                                      0613 01717000
*     RWORK2,                                                      0613 01718000
*     RWORK3,                                                      0613 01719000
*     RWORK4,                                                      0613 01720000
*     RWORK5) RSTD;                 /* OF BLOCK                      */ 01721000
*   RWORK3=RPARM1+RPARM1->IXHSEO;   /* GET ADDRESS AT RIGHT END OF 0614 01722000
*                                      BLOCK                         */ 01723000
         LR    RWORK3,RPARM1                                       0614 01724000
         AH    RWORK3,IXHSEO(,RPARM1)                              0614 01725000
*   RWORK4=RPARM1->IXHPTLS;         /* GET POINTER MASK FROM HEADER  */ 01726000
         SLR   RWORK4,RWORK4                                       0615 01727000
         IC    RWORK4,IXHPTLS(,RPARM1)                             0615 01728000
*   RWORK5=PLHSAVE5;                /* GET ADDRESS OF FIRST PTR.   0616 01729000
*                                      STORE POSITION                */ 01730000
         L     RWORK5,PLHSAVE5(,RPLH)                              0616 01731000
*   DO WHILE RWORK3^<RPARM1+        /* LOOP TO MOVE ACROSS           */ 01732000
*         RPARM1->IXHLEO;           /* BLOCK MOVING POINTERS         */ 01733000
         B     @DE00617                                            0617 01734000
@DL00617 DS    0H                                                  0618 01735000
*     RWORK2=RWORK3;                /* KEEP POINTER AT F FIELD       */ 01736000
         LR    RWORK2,RWORK3                                       0618 01737000
*     RWORK3=RWORK2+LENGTH(IBFLPL)+ /* POINT AT THE POINTER          */ 01738000
*         LENGTH(IBFLPF);           /* FIELD                         */ 01739000
         LA    RWORK3,2                                            0619 01740000
         ALR   RWORK3,RWORK2                                       0619 01741000
*     GEN(EX  RWORK4,PICKPNT);      /* PICK UP POINTER               */ 01742000
         EX  RWORK4,PICKPNT                                             01743000
*     GEN(EX  RWORK4,PLACEPNT);     /* STORE POINTER                 */ 01744000
         EX  RWORK4,PLACEPNT                                            01745000
*     RWORK3=RWORK2-(RWORK2->IBFLPL)/* MOVE TO NEXT ENTRY IN         */ 01746000
*         -RPARM1->IXHFLPLN;        /* THE BLOCK                     */ 01747000
         LR    RWORK3,RWORK2                                       0622 01748000
         SLR   @10,@10                                             0622 01749000
         IC    @10,IBFLPL(,RWORK2)                                 0622 01750000
         SLR   RWORK3,@10                                          0622 01751000
         SLR   @10,@10                                             0622 01752000
         IC    @10,IXHFLPLN(,RPARM1)                               0622 01753000
         SLR   RWORK3,@10                                          0622 01754000
*     RWORK5=RWORK5-ICWPTL;         /* MOVE TO NEXT STORAGE POSITION */ 01755000
         SLR   @10,@10                                             0623 01756000
         IC    @10,ICWPTL(,RWORK1)                                 0623 01757000
         SLR   RWORK5,@10                                          0623 01758000
*   END;                            /*                               */ 01759000
@DE00617 LR    @10,RPARM1                                          0624 01760000
         AH    @10,IXHLEO(,RPARM1)                                 0624 01761000
         CR    RWORK3,@10                                          0624 01762000
         BNL   @DL00617                                            0624 01763000
*   RPARM1->IXHFSO=PLHSAVE5-RPARM1+ICWPTL;/* ADJUST OFFSET TO      0625 01764000
*                                      FREESPACE                     */ 01765000
         L     @10,PLHSAVE5(,RPLH)                                 0625 01766000
         SLR   @10,RPARM1                                          0625 01767000
         SLR   @15,@15                                             0625 01768000
         IC    @15,ICWPTL(,RWORK1)                                 0625 01769000
         ALR   @10,@15                                             0625 01770000
         STH   @10,IXHFSO(,RPARM1)                                 0625 01771000
*   RESPECIFY                                                      0626 01772000
*    (RWORK0,                                                      0626 01773000
*     RWORK2,                                                      0626 01774000
*     RWORK3,                                                      0626 01775000
*     RWORK4,                                                      0626 01776000
*     RWORK5) UNRSTD;               /*                               */ 01777000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01778000
         BAL   @14,EXIT                                            0627 01779000
*   END MOVEPTRR;                   /* END OF MOVEPTRR        SUBRTN,*/ 01780000
@EL00004 DS    0H                                                  0628 01781000
@EF00004 DS    0H                                                  0628 01782000
@ER00004 BR    @14                                                 0628 01783000
*                                                                  0629 01784000
*/*                                                                  */ 01785000
*/*    MOVEPTRL SUBROUTINE                                           */ 01786000
*/*       FUNCTION -                                                 */ 01787000
*/*        PLACES THE INDEX POINTERS FROM A BLOCK OF AN INDEX        */ 01788000
*/*        INTO THE FREESPACE AREA OF THE INDEX RECORD. THE ORDER    */ 01789000
*/*        OF MOVING THE POINTERS IS FROM LEFT TO RIGHT, IE, THE     */ 01790000
*/*        LEFTMOST POINTER FROM THE BLOCK IS PLACED INTO THE        */ 01791000
*/*        LEFTMOST LOCATION IN THE FREESPACE, THEN THE NEXT POINTER */ 01792000
*/*        TO THE RIGHT IS PLACED INTO THE NEXT POSITION TO THE RIGHT*/ 01793000
*/*        IN THE FREESPACE, AND SO ON.  THE POINTERS IN THE INDEX   */ 01794000
*/*        ARE  ERASED AFTER BEING MOVED.                            */ 01795000
*/*        THE BLOCK OF INDEX MUST NOT CONTAIN ANY SECTION LL FIELDS.*/ 01796000
*/*       INPUT -                                                    */ 01797000
*/*        THE BLOCK OF INDEX IS DEFINED BY THE FOLLOWING OFFSETS    */ 01798000
*/*        TO THE 'F' FIELD -                                        */ 01799000
*/*         IXHSEO = RIGHTMOST INDEX ENTRY.                          */ 01800000
*/*         IXHLEO = LEFTMOST INDEX ENTRY.                           */ 01801000
*/*        THE OFFSET OF THE FREESPACE LOCATION TO RECEIVE THE       */ 01802000
*/*        FIRST POINTER IS IN IXHFSO.                               */ 01803000
*/*       OUTPUT -                                                   */ 01804000
*/*        IXHFSO (DISPLACEMENT OF FREESPACE) WILL BE SET TO THE     */ 01805000
*/*        DISPLACEMENT OF THE FIRST POSITION TO THE RIGHT OF THE    */ 01806000
*/*        SERIES OF POINTERS PLACED.                                */ 01807000
*/*       RETURN -                                                   */ 01808000
*/*        ALWAYS TO CALLER.                                         */ 01809000
*/*                                                                  */ 01810000
*                                                                  0629 01811000
*MOVEPTRL:                                                         0629 01812000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01813000
MOVEPTRL DS    0H                                                  0630 01814000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01815000
         IDASVR14                                                       01816000
*   RESPECIFY                                                      0631 01817000
*    (RWORK0,                                                      0631 01818000
*     RWORK2,                                                      0631 01819000
*     RWORK3,                                                      0631 01820000
*     RWORK4,                                                      0631 01821000
*     RWORK5) RSTD;                 /*                               */ 01822000
*   RWORK2=ZERO;                    /* INITIALIZE ENTRY COUNT        */ 01823000
         SLR   RWORK2,RWORK2                                       0632 01824000
*   RWORK3=RPARM1+RPARM1->IXHSEO;   /* POINT TO RIGHTMOST INDEX ENTRY   01825000
*                                      IN BLOCK                      */ 01826000
         LR    RWORK3,RPARM1                                       0633 01827000
         AH    RWORK3,IXHSEO(,RPARM1)                              0633 01828000
*   RWORK4=RPARM1+RPARM1->IXHLEO;   /* POINT TO LEFTMOST INDEX ENTRY    01829000
*                                      IN BLOCK                      */ 01830000
         LR    RWORK4,RPARM1                                       0634 01831000
         AH    RWORK4,IXHLEO(,RPARM1)                              0634 01832000
*   DO WHILE RWORK3^<RWORK4;        /* LOOP COUNTS INDX ENTRYS       */ 01833000
         B     @DE00635                                            0635 01834000
@DL00635 DS    0H                                                  0636 01835000
*     RWORK2=RWORK2+ONE;            /* INCREMENT ENTRY COUNT         */ 01836000
         AL    RWORK2,@CF00053                                     0636 01837000
*     RWORK3=RWORK3-RWORK3->IBFLPL- /* MOVE TO THE NEXT              */ 01838000
*         RPARM1->IXHFLPLN;         /* ENTRY                         */ 01839000
         LR    @10,RWORK3                                          0637 01840000
         SLR   @15,@15                                             0637 01841000
         IC    @15,IBFLPL(,RWORK3)                                 0637 01842000
         SLR   @10,@15                                             0637 01843000
         SLR   @15,@15                                             0637 01844000
         IC    @15,IXHFLPLN(,RPARM1)                               0637 01845000
         SLR   @10,@15                                             0637 01846000
         LR    RWORK3,@10                                          0637 01847000
*   END;                            /*                               */ 01848000
@DE00635 CR    RWORK3,RWORK4                                       0638 01849000
         BNL   @DL00635                                            0638 01850000
*   RWORK5=RPARM1+RPARM1->IXHFSO;   /* POINT TO FREE AREA            */ 01851000
         LR    RWORK5,RPARM1                                       0639 01852000
         AH    RWORK5,IXHFSO(,RPARM1)                              0639 01853000
*   RESPECIFY                                                      0640 01854000
*    (RWORK0) RSTD;                 /*                               */ 01855000
*   DO RWORK2=RWORK2 BY-ONE TO ONE; /* LOOP TO MOVE EACH PTR         */ 01856000
         B     @DE00641                                            0641 01857000
@DL00641 DS    0H                                                  0642 01858000
*     RWORK3=RPARM1+RPARM1->IXHSEO; /* START AT RIGHT END            */ 01859000
         LR    RWORK3,RPARM1                                       0642 01860000
         AH    RWORK3,IXHSEO(,RPARM1)                              0642 01861000
*     DO RWORK0=ONE TO RWORK2-ONE;  /* LOOP TO LOCATE PTR            */ 01862000
         LA    RWORK0,1                                            0643 01863000
         B     @DE00643                                            0643 01864000
@DL00643 DS    0H                                                  0644 01865000
*       RWORK3=RWORK3-RWORK3->IBFLPL-/* MOVE OVER ONE                */ 01866000
*           RPARM1->IXHFLPLN;       /* ENTRY                         */ 01867000
         LR    @10,RWORK3                                          0644 01868000
         SLR   @15,@15                                             0644 01869000
         IC    @15,IBFLPL(,RWORK3)                                 0644 01870000
         SLR   @10,@15                                             0644 01871000
         SLR   @15,@15                                             0644 01872000
         IC    @15,IXHFLPLN(,RPARM1)                               0644 01873000
         SLR   @10,@15                                             0644 01874000
         LR    RWORK3,@10                                          0644 01875000
*     END;                          /*                               */ 01876000
         AL    RWORK0,@CF00053                                     0645 01877000
@DE00643 LR    @10,RWORK2                                          0645 01878000
         BCTR  @10,0                                               0645 01879000
         CLR   RWORK0,@10                                          0645 01880000
         BNH   @DL00643                                            0645 01881000
*     RWORK3=RWORK3+LENGTH(IBFLPL)+ /* MOVE ADDRESS FROM F           */ 01882000
*         LENGTH(IBFLPF);           /* FIELD TO PTR. FIELD           */ 01883000
         AL    RWORK3,@CF00146                                     0646 01884000
*     RWORK4=RPARM1->IXHPTLS;       /* GET POINTER MASK FROM HEADER  */ 01885000
         SLR   RWORK4,RWORK4                                       0647 01886000
         IC    RWORK4,IXHPTLS(,RPARM1)                             0647 01887000
*     GEN(EX   RWORK4,PICKPNT);     /* PICK UP A POINTER             */ 01888000
         EX   RWORK4,PICKPNT                                            01889000
*     RWORK3=RWORK3-ONE;            /* POINT TO L FIELD              */ 01890000
         BCTR  RWORK3,0                                            0649 01891000
*     RBUFC=RPARM1+RPARM1->IXHLEO;  /* GET ADDRESS OF LEFTMOST ENTRY */ 01892000
         LR    RBUFC,RPARM1                                        0650 01893000
         AH    RBUFC,IXHLEO(,RPARM1)                               0650 01894000
*     RBUFC=RBUFC-RBUFC->IBFLPL;    /* COMPUTE ADDRESS OF LEFT END OF   01895000
*                                      THE BLOCK                     */ 01896000
         SLR   @10,@10                                             0651 01897000
         IC    @10,IBFLPL(,RBUFC)                                  0651 01898000
         SLR   RBUFC,@10                                           0651 01899000
*     RWORK4=RWORK3+ICWPTL;         /* GET ADDRESS OF THE LAST BYTE     01900000
*                                      OF VACATED PTR.               */ 01901000
         LR    RWORK4,RWORK3                                       0652 01902000
         SLR   @10,@10                                             0652 01903000
         IC    @10,ICWPTL(,RWORK1)                                 0652 01904000
         ALR   RWORK4,@10                                          0652 01905000
*     DO RWORK3=RWORK3 BY-ONE TO RBUFC;/* LOOP MOVES BLOCK RIGHT OVER   01906000
*                                      VACATED PTR                   */ 01907000
         B     @DE00653                                            0653 01908000
@DL00653 DS    0H                                                  0654 01909000
*       RWORK4->IXKEY=RWORK3->IXKEY;/* MOVE ONE BYTE                 */ 01910000
         MVC   IXKEY(1,RWORK4),IXKEY(RWORK3)                       0654 01911000
*       RWORK4=RWORK4-ONE;          /* UPDATE 'TO' ADDRESS           */ 01912000
         BCTR  RWORK4,0                                            0655 01913000
*     END;                          /*                               */ 01914000
         BCTR  RWORK3,0                                            0656 01915000
@DE00653 CR    RWORK3,RBUFC                                        0656 01916000
         BNL   @DL00653                                            0656 01917000
*     RPARM1->IXHLEO=RPARM1->IXHLEO /* REVISE LEFT HAND OFFSET       */ 01918000
*         +ICWPTL;                  /* BY AMOUNT MOVED RIGHT         */ 01919000
         SLR   @10,@10                                             0657 01920000
         IC    @10,ICWPTL(,RWORK1)                                 0657 01921000
         AH    @10,IXHLEO(,RPARM1)                                 0657 01922000
         STH   @10,IXHLEO(,RPARM1)                                 0657 01923000
*     RWORK4=RPARM1->IXHPTLS;       /* PICK UP POINTER MASK          */ 01924000
         SLR   RWORK4,RWORK4                                       0658 01925000
         IC    RWORK4,IXHPTLS(,RPARM1)                             0658 01926000
*     GEN(EX   RWORK4,PLACEPNT);    /* STORE THE POINTER             */ 01927000
         EX   RWORK4,PLACEPNT                                           01928000
*     RWORK5=RWORK5+ICWPTL;         /* ADDRESS NEXT STORE LOC        */ 01929000
         SLR   @10,@10                                             0660 01930000
         IC    @10,ICWPTL(,RWORK1)                                 0660 01931000
         ALR   RWORK5,@10                                          0660 01932000
*   END;                            /*                               */ 01933000
         BCTR  RWORK2,0                                            0661 01934000
@DE00641 CL    RWORK2,@CF00053                                     0661 01935000
         BNL   @DL00641                                            0661 01936000
*   RPARM1->IXHFSO=RWORK5-RPARM1;   /* ADJUST FREE SPACE PTR.        */ 01937000
         LR    @10,RWORK5                                          0662 01938000
         SLR   @10,RPARM1                                          0662 01939000
         STH   @10,IXHFSO(,RPARM1)                                 0662 01940000
*   RPARM1->IXHSEO=RPARM1->IXHSEO   /* ADJUST OFFSET TO RIGHT        */ 01941000
*       +ICWPTL;                    /* END OF BLOCK                  */ 01942000
         SLR   @10,@10                                             0663 01943000
         IC    @10,ICWPTL(,RWORK1)                                 0663 01944000
         AH    @10,IXHSEO(,RPARM1)                                 0663 01945000
         STH   @10,IXHSEO(,RPARM1)                                 0663 01946000
*   RESPECIFY                                                      0664 01947000
*    (RWORK2,                                                      0664 01948000
*     RWORK3,                                                      0664 01949000
*     RWORK4,                                                      0664 01950000
*     RWORK5,                                                      0664 01951000
*     RWORK0) UNRSTD;               /*                               */ 01952000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01953000
         BAL   @14,EXIT                                            0665 01954000
*   END MOVEPTRL;                   /* END OF MOVEPTRL        SUBRTN.*/ 01955000
@EL00005 DS    0H                                                  0666 01956000
@EF00005 DS    0H                                                  0666 01957000
@ER00005 BR    @14                                                 0666 01958000
*                                                                  0667 01959000
*/*                                                                  */ 01960000
*/*    DELSECT  SUBROUTINE                                           */ 01961000
*/*       FUNCTION -                                                 */ 01962000
*/*        REMOVES THE SECTION CHAINING POINTERS FROM AN INDEX RECORD*/ 01963000
*/*        THE RECORD ENTRYS OF F,L,POINTERS AND KEY ARE UNCHANGED   */ 01964000
*/*        EXCEPT THAT THEIR LOCATION IN THE BUFFER MAY SHIFT.       */ 01965000
*/*       INPUT -                                                    */ 01966000
*/*        RWORK1 = POINTER TO WORK AREA.                            */ 01967000
*/*        RPARM1 = POINTER TO BUFFER.                               */ 01968000
*/*       OUTPUT-                                                    */ 01969000
*/*        THE FOLLOWING WILL BE SET SO THAT THE INDEX DATA CAN      */ 01970000
*/*        BE LOCATED -                                              */ 01971000
*/*         PLHSAVE6 = DISPLACEMENT OF SPLIT POINT.                  */ 01972000
*/*         IXHLEO = DISPLMNT OF F FIELD OF LAST (LEFTMOST) ENTRY.   */ 01973000
*/*         IXHSEO = DISPLMNT OF F FIELD OF FIRST (RIGHTMOST) ENTRY. */ 01974000
*/*       RETURN-                                                    */ 01975000
*/*        ALWAYS TO CALLER                                          */ 01976000
*                                                                  0667 01977000
*DELSECT:                                                          0667 01978000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01979000
DELSECT  DS    0H                                                  0668 01980000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 01981000
         IDASVR14                                                       01982000
*   RESPECIFY                                                      0669 01983000
*    (RWORK0,                                                      0669 01984000
*     RWORK2,                                                      0669 01985000
*     RWORK3,                                                      0669 01986000
*     RWORK4,                                                      0669 01987000
*     RWORK5) RSTD;                 /*                               */ 01988000
*   RESPECIFY                                                      0670 01989000
*     R14 RSTD;                     /* INFORM COMPILER       @ZA24350*/ 01990000
*   RWORK2=RPARM1+RPARM1->IXHLL;    /* POINT JUST BEYOND END OF    0671 01991000
*                                      RECORD                        */ 01992000
         LR    RWORK2,RPARM1                                       0671 01993000
         LH    @15,IXHLL(,RPARM1)                                  0671 01994000
         N     @15,@CF01056                                        0671 01995000
         ALR   RWORK2,@15                                          0671 01996000
*   R14=RPARM1+(RPARM1->IXHLEO);    /* LEFTMOST SECTION PTR  @ZA24350*/ 01997000
         LR    R14,RPARM1                                          0672 01998000
         AH    R14,IXHLEO(,RPARM1)                                 0672 01999000
*   RWORK0=ZERO;                    /* CLEAR REG RECEIVING LL        */ 02000000
         SLR   RWORK0,RWORK0                                       0673 02001000
*DELA:                                                             0674 02002000
*   RWORK5=RPARM1+(RPARM1->IXHSEO); /* POINT TO RIGHTMOST SECTION  0674 02003000
*                                      ENTRY                         */ 02004000
DELA     LR    RWORK5,RPARM1                                       0674 02005000
         AH    RWORK5,IXHSEO(,RPARM1)                              0674 02006000
*   RWORK3=RWORK5-RWORK5->IBFLPL    /* MOVE BACK TO BEGINNING        */ 02007000
*       -LENGTH(IXSELL);            /* OF SECTION LL FIELD           */ 02008000
         LR    RWORK3,RWORK5                                       0675 02009000
         SLR   @15,@15                                             0675 02010000
         IC    @15,IBFLPL(,RWORK5)                                 0675 02011000
         SLR   RWORK3,@15                                          0675 02012000
         BCTR  RWORK3,0                                            0675 02013000
         BCTR  RWORK3,0                                            0675 02014000
*   RWORK4=THREE;                   /* TWO BYTE MASK                 */ 02015000
         LA    RWORK4,3                                            0676 02016000
*   GEN(EX  RWORK4,PICKPNT);        /* OBTAIN SECTION LL FIELD       */ 02017000
         EX  RWORK4,PICKPNT                                             02018000
*   IF RWORK0^=ZERO&RWORK5>R14 THEN /* SECTION POINTER FIELD ZERO OR    02019000
*                                      AT LEFTMOST SECTION ENTRY   0678 02020000
*                                                            @ZA24350*/ 02021000
         LTR   RWORK0,RWORK0                                       0678 02022000
         BZ    @RF00678                                            0678 02023000
         CR    RWORK5,R14                                          0678 02024000
         BNH   @RF00678                                            0678 02025000
*     DO;                           /* NO                            */ 02026000
*       RPARM1->IXHSEO=RPARM1->IXHSEO/* RESET DISPLACEMENT           */ 02027000
*           -RWORK0;                /* TO FIRST SECTION              */ 02028000
         LH    @15,IXHSEO(,RPARM1)                                 0680 02029000
         SLR   @15,RWORK0                                          0680 02030000
         STH   @15,IXHSEO(,RPARM1)                                 0680 02031000
*       IF RPARM1+PLHSAVE6^<RWORK5 THEN/* IS SPLIT POINT TO MOVE     */ 02032000
         L     @15,PLHSAVE6(,RPLH)                                 0681 02033000
         LR    @10,RPARM1                                          0681 02034000
         ALR   @10,@15                                             0681 02035000
         CR    @10,RWORK5                                          0681 02036000
         BL    @RF00681                                            0681 02037000
*         PLHSAVE6=PLHSAVE6-LENGTH(IXSELL);/* YES, ADJUST IT         */ 02038000
         BCTR  @15,0                                               0682 02039000
         BCTR  @15,0                                               0682 02040000
         ST    @15,PLHSAVE6(,RPLH)                                 0682 02041000
*       RWORK4=RWORK3+LENGTH(IXSELL);/* SET 'FROM' ADDRESS           */ 02042000
@RF00681 LA    RWORK4,2                                            0683 02043000
         ALR   RWORK4,RWORK3                                       0683 02044000
*       RWORK5=RWORK2-RWORK4;       /* DETERMINE MOVE LENGTH         */ 02045000
         LR    RWORK5,RWORK2                                       0684 02046000
         SLR   RWORK5,RWORK4                                       0684 02047000
*       RWORK2=RWORK3;              /* SET 'TO' ADDRESS              */ 02048000
         LR    RWORK2,RWORK3                                       0685 02049000
*       RWORK3=RWORK5;              /* SET LENGTH                    */ 02050000
         LR    RWORK3,RWORK5                                       0686 02051000
*       GEN(MVCL   RWORK2,RWORK4);  /* MOVE LEFT, ATOP LL            */ 02052000
         MVCL   RWORK2,RWORK4                                           02053000
*       GO TO DELA;                 /* BACK FOR NEXT SECTION         */ 02054000
         B     DELA                                                0688 02055000
*     END;                          /*                               */ 02056000
*   ELSE                            /*                               */ 02057000
*     DO;                           /*                               */ 02058000
@RF00678 DS    0H                                                  0691 02059000
*       RPARM1->IXHSEO=RWORK2-RPARM1/* SET DISPLACEMENT OF           */ 02060000
*           -RPARM1->IXHFLPLN;      /* RIGHTMOST ENTRY               */ 02061000
         LR    @15,RWORK2                                          0691 02062000
         SLR   @15,RPARM1                                          0691 02063000
         SLR   @10,@10                                             0691 02064000
         IC    @10,IXHFLPLN(,RPARM1)                               0691 02065000
         SLR   @15,@10                                             0691 02066000
         STH   @15,IXHSEO(,RPARM1)                                 0691 02067000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 02068000
         BAL   @14,EXIT                                            0692 02069000
*     END;                          /*                               */ 02070000
*   RESPECIFY                                                      0694 02071000
*     R14 UNRESTRICTED;             /* INFORM COMPILER       @ZA24350*/ 02072000
*   RESPECIFY                                                      0695 02073000
*    (RWORK0,                                                      0695 02074000
*     RWORK2,                                                      0695 02075000
*     RWORK3,                                                      0695 02076000
*     RWORK4,                                                      0695 02077000
*     RWORK5) UNRSTD;               /*                               */ 02078000
*   END DELSECT;                    /* END OF SUBROUTINE             */ 02079000
@EL00006 DS    0H                                                  0696 02080000
@EF00006 DS    0H                                                  0696 02081000
@ER00006 BR    @14                                                 0696 02082000
*                                                                  0697 02083000
*/*                                                                  */ 02084000
*/*    DELPTR SUBROUTINE                                             */ 02085000
*/*       FUNCTION -                                                 */ 02086000
*/*        REMOVES THE INDEX POINTERS FROM A BLOCK OF AN INDEX.  THE */ 02087000
*/*        F, L, AND KEY FIELDS ARE NOT CHANGED.                     */ 02088000
*/*       INPUT -                                                    */ 02089000
*/*        THE BLOCK OF INDEX IS DEFINED BY THE FOLLOWING OFFSETS    */ 02090000
*/*        TO THE 'F' FIELD -                                        */ 02091000
*/*         IXHSEO = RIGHTMOST INDEX ENTRY.                          */ 02092000
*/*         IXHLEO = LEFTMOST INDEX ENTRY.                           */ 02093000
*/*       OUTPUT -                                                   */ 02094000
*/*         IXHSEO AND IXHLEO WILL HAVE THE SAME MEANING AS ON       */ 02095000
*/*         INPUT FOR THE NEW BLOCK WITH POINTERS SQUEEZED OUT.      */ 02096000
*/*       RETURN -                                                   */ 02097000
*/*        ALWAYS RETURN TO CALLER                                   */ 02098000
*/*                                                                  */ 02099000
*                                                                  0697 02100000
*DELPTR:                                                           0697 02101000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 02102000
DELPTR   DS    0H                                                  0698 02103000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 02104000
         IDASVR14                                                       02105000
*   RESPECIFY                                                      0699 02106000
*    (RWORK2,                                                      0699 02107000
*     RWORK3,                                                      0699 02108000
*     RWORK4,                                                      0699 02109000
*     RWORK5) RSTD;                 /*                               */ 02110000
*   RWORK4=RPARM1+RPARM1->IXHSEO;   /* POINT TO RIGHT ENTRY          */ 02111000
         LR    RWORK4,RPARM1                                       0700 02112000
         AH    RWORK4,IXHSEO(,RPARM1)                              0700 02113000
*   RWORK2=RWORK4+LENGTH(IBFLPF)+   /* POINT TO FIRST POSITION       */ 02114000
*       LENGTH(IBFLPL);             /* BEYOND THE BLOCK              */ 02115000
         LA    RWORK2,2                                            0701 02116000
         ALR   RWORK2,RWORK4                                       0701 02117000
*   PLHSAVE2=RWORK4-(RWORK4->IBFLPL)/* SET POINTER TO THE NEXT       */ 02118000
*       -(RPARM1->IXHFLPLN);        /* ENTRY                         */ 02119000
         LR    @10,RWORK4                                          0702 02120000
         SLR   @00,@00                                             0702 02121000
         IC    @00,IBFLPL(,RWORK4)                                 0702 02122000
         SLR   @10,@00                                             0702 02123000
         SLR   @00,@00                                             0702 02124000
         IC    @00,IXHFLPLN(,RPARM1)                               0702 02125000
         SLR   @10,@00                                             0702 02126000
         ST    @10,PLHSAVE2(,RPLH)                                 0702 02127000
*   PLHSAVE1=RPARM1+RPARM1->IXHLEO; /* LOOP ENTRY BY ENTRY           */ 02128000
         LR    @10,RPARM1                                          0703 02129000
         AH    @10,IXHLEO(,RPARM1)                                 0703 02130000
         ST    @10,PLHSAVE1(,RPLH)                                 0703 02131000
*   DO WHILE PLHSAVE2^<PLHSAVE1;    /* UNTIL COMPLETED               */ 02132000
         B     @DE00704                                            0704 02133000
@DL00704 DS    0H                                                  0705 02134000
*     RWORK4=RWORK4-RWORK4->IBFLPL; /* SET 'FROM' ADDRESS            */ 02135000
         SLR   @10,@10                                             0705 02136000
         IC    @10,IBFLPL(,RWORK4)                                 0705 02137000
         SLR   RWORK4,@10                                          0705 02138000
*     RWORK3=RWORK2-RWORK4;         /* SET MOVE LENGTH               */ 02139000
         LR    RWORK3,RWORK2                                       0706 02140000
         SLR   RWORK3,RWORK4                                       0706 02141000
*     RWORK2=RWORK4-ICWPTL;         /* SET 'TO' ADDRESS              */ 02142000
         LR    RWORK2,RWORK4                                       0707 02143000
         SLR   @10,@10                                             0707 02144000
         IC    @10,ICWPTL(,RWORK1)                                 0707 02145000
         SLR   RWORK2,@10                                          0707 02146000
*     RWORK5=RWORK3;                /* SET LENGTH OF MOVE            */ 02147000
         LR    RWORK5,RWORK3                                       0708 02148000
*     GEN(MVCL  RWORK2,RWORK4);     /* MOVE LEFT OVERLAYING THE    0709 02149000
*                                      POINTER FIELD                 */ 02150000
         MVCL  RWORK2,RWORK4                                            02151000
*     RWORK4=PLHSAVE2;              /* UPDATE TO A NEW INDEX ENTRY   */ 02152000
         L     @10,PLHSAVE2(,RPLH)                                 0710 02153000
         LR    RWORK4,@10                                          0710 02154000
*     PLHSAVE2=PLHSAVE2-(RWORK4->IBFLPL)-/* MOVE AHEAD ONE MORE      */ 02155000
*         (RPARM1->IXHFLPLN);       /* ENTRY                         */ 02156000
         SLR   @00,@00                                             0711 02157000
         IC    @00,IBFLPL(,RWORK4)                                 0711 02158000
         SLR   @10,@00                                             0711 02159000
         SLR   @00,@00                                             0711 02160000
         IC    @00,IXHFLPLN(,RPARM1)                               0711 02161000
         SLR   @10,@00                                             0711 02162000
         ST    @10,PLHSAVE2(,RPLH)                                 0711 02163000
*   END;                            /*                               */ 02164000
@DE00704 CLC   PLHSAVE2(4,RPLH),PLHSAVE1(RPLH)                     0712 02165000
         BNL   @DL00704                                            0712 02166000
*   RPARM1->IXHSEO=RWORK2-RPARM1    /* RESET THE DISPLACEMENT        */ 02167000
*       -LENGTH(IBFLPF)             /* TO THE RIGHT HAND             */ 02168000
*       -LENGTH(IBFLPL);            /* ENTRY OF THE BLOCK            */ 02169000
         LR    @10,RWORK2                                          0713 02170000
         SLR   @10,RPARM1                                          0713 02171000
         BCTR  @10,0                                               0713 02172000
         BCTR  @10,0                                               0713 02173000
         STH   @10,IXHSEO(,RPARM1)                                 0713 02174000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 02175000
         BAL   @14,EXIT                                            0714 02176000
*   RESPECIFY                                                      0715 02177000
*    (RWORK2,                                                      0715 02178000
*     RWORK3,                                                      0715 02179000
*     RWORK4,                                                      0715 02180000
*     RWORK5) UNRSTD;               /*                               */ 02181000
*   END DELPTR;                     /*                               */ 02182000
@EL00007 DS    0H                                                  0716 02183000
@EF00007 DS    0H                                                  0716 02184000
@ER00007 BR    @14                                                 0716 02185000
*                                                                  0717 02186000
*/*                                                                  */ 02187000
*/*    UNCOMPRS SUBROUTINE                                           */ 02188000
*/*       FUNCTION -                                                 */ 02189000
*/*        1. MOVES CURRENT KEY IN WORKAREA TO PREVIOUS KEY.         */ 02190000
*/*        2. MOVES CURRENT KEY LENGTH TO PREVIOUS KEY LENGTH.       */ 02191000
*/*        3. UNCOMPRESSES THE KEY ENTRY BASED ON PLHSAVE2 AND       */ 02192000
*/*           PLACES IT INTO THE CURRENT KEY OF THE WORKAREA.        */ 02193000
*/*        4. PLACES THE KEY LENGTH INTO THE WORK AREA.              */ 02194000
*/*                                                                  */ 02195000
*                                                                  0717 02196000
*UNCOMPRS:                                                         0717 02197000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 02198000
UNCOMPRS DS    0H                                                  0718 02199000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REGISTER 14          */ 02200000
         IDASVR14                                                       02201000
*   RESPECIFY                                                      0719 02202000
*    (RWORK2,                                                      0719 02203000
*     RWORK3,                                                      0719 02204000
*     RWORK4,                                                      0719 02205000
*     RWORK5) RSTD;                 /*                               */ 02206000
*   RWORK4=ADDR(ICWKEY1);           /* POINT TO CURRENT KEY          */ 02207000
         LA    RWORK4,ICWKEY1(,RWORK1)                             0720 02208000
*   RWORK2=RWORK4+AMDKEYLN;         /* POINT TO PREVIOUS KEY         */ 02209000
         L     @10,AMBDSB(,RAMB)                                   0721 02210000
         LR    RWORK2,RWORK4                                       0721 02211000
         AH    RWORK2,AMDKEYLN(,@10)                               0721 02212000
*   RWORK3=ICWKEY1L;                /* SET MOVE LENGTH EQUAL         */ 02213000
         LH    RWORK3,ICWKEY1L(,RWORK1)                            0722 02214000
*   RWORK5=RWORK3;                  /* TO LENGTH OF KEY              */ 02215000
         LR    RWORK5,RWORK3                                       0723 02216000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE CURRENT + PREVIOUS       */ 02217000
         MVCL  RWORK2,RWORK4                                            02218000
*   ICWKEY2L=ICWKEY1L;              /* MOVE LENGTH AS WELL           */ 02219000
         LH    @10,ICWKEY1L(,RWORK1)                               0725 02220000
         STH   @10,ICWKEY2L(,RWORK1)                               0725 02221000
*   RWORK4=PLHSAVE2-                /* POINT TO FIRST BYTE OF        */ 02222000
*       PLHSAVE2->IBFLPL;           /* STORED KEY                    */ 02223000
         L     @10,PLHSAVE2(,RPLH)                                 0726 02224000
         SLR   @15,@15                                             0726 02225000
         IC    @15,IBFLPL(,@10)                                    0726 02226000
         LR    RWORK4,@10                                          0726 02227000
         SLR   RWORK4,@15                                          0726 02228000
*   RWORK2=ADDR(ICWKEY1)+           /* POINT TO FIRST POSITION       */ 02229000
*       PLHSAVE2->IBFLPF;           /* WHICH WILL CHANGE             */ 02230000
         LA    RWORK2,ICWKEY1(,RWORK1)                             0727 02231000
         SLR   @14,@14                                             0727 02232000
         IC    @14,IBFLPF(,@10)                                    0727 02233000
         ALR   RWORK2,@14                                          0727 02234000
*   RWORK3=PLHSAVE2->IBFLPL;        /* SET LENGTH OF MOVE            */ 02235000
         LR    RWORK3,@15                                          0728 02236000
*   RWORK5=RWORK3;                  /*                               */ 02237000
         LR    RWORK5,RWORK3                                       0729 02238000
*   ICWKEY1L=RWORK3+                /* COMPUTE (F + L) AND           */ 02239000
*       PLHSAVE2->IBFLPF;           /* SAVE KEY LENGTH               */ 02240000
         ALR   @14,RWORK3                                          0730 02241000
         STH   @14,ICWKEY1L(,RWORK1)                               0730 02242000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE KEY TO WORK AREA         */ 02243000
         MVCL  RWORK2,RWORK4                                            02244000
*   RESPECIFY                                                      0732 02245000
*    (RWORK2,                                                      0732 02246000
*     RWORK3,                                                      0732 02247000
*     RWORK4,                                                      0732 02248000
*     RWORK5) UNRSTD;               /*                               */ 02249000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 02250000
         BAL   @14,EXIT                                            0733 02251000
*   END UNCOMPRS;                   /*                               */ 02252000
@EL00008 DS    0H                                                  0734 02253000
@EF00008 DS    0H                                                  0734 02254000
@ER00008 BR    @14                                                 0734 02255000
*                                                                  0735 02256000
*/*                                                                  */ 02257000
*/*    IDAR SUBROUTINE                                               */ 02258000
*/*                                                                  */ 02259000
*/*       FUNCTION -                                                 */ 02260000
*/*        INTERFACES WITH BUFFER MANAGER TO RETRIEVE THE            */ 02261000
*/*        INDEX RECORD WITH SPECIFIED RBA.  RWORK1 WILL BE          */ 02262000
*/*        PRESERVED ACROSS THE INTERFACE.                           */ 02263000
*/*       INPUT -                                                    */ 02264000
*/*        RWORK1 = POINTER TO CURRENT WORK AREA.                    */ 02265000
*/*        RPARM1 = RBA OF INDEX RECORD TO BE RETRIEVED.             */ 02266000
*/*       OUTPUT -                                                   */ 02267000
*/*        RBUFC = POINTER TO BUFC OF RETRIEVED RECORD.              */ 02268000
*/*       RETURN-                                                    */ 02269000
*/*        TO CALLER IF NO ERRORS WERE ENCOUNTERED.                  */ 02270000
*/*        TO CALLER OF CALLER IN CASE OF I/O ERROR                  */ 02271000
*/*                                                                  */ 02272000
*                                                                  0735 02273000
*IDAR:                                                             0735 02274000
*   ENTRY;                          /*                               */ 02275000
@EP00735 DS    0H                                                  0735 02276000
@EC00735 DS    0H                                                  0736 02277000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 02278000
         IDASVR14                                                       02279000
*   RFY                                                            0737 02280000
*     R14 RSTD;                     /*                       @X04SVES*/ 02281000
*   R14=ADDR(PLHIXSPL);             /* POINT TO INDEX SEARCH PARM  0738 02282000
*                                      LIST                  @X04SVES*/ 02283000
         LA    R14,PLHIXSPL(,RPLH)                                 0738 02284000
*   R14->IXSILN=ICWLN;              /* SET LEVEL NO.         @X04SVES*/ 02285000
         LH    @15,ICWLN(,RWORK1)                                  0739 02286000
         STC   @15,IXSILN(,R14)                                    0739 02287000
*   RFY                                                            0740 02288000
*     R14 UNRSTD;                   /*                       @X04SVES*/ 02289000
*   IF ICWLN=ICWSS THEN             /* IS THIS A SEQ SET READ        */ 02290000
         C     @15,@CF00053                                        0741 02291000
         BNE   @RF00741                                            0741 02292000
*     PLHSSR=ON;                    /* YES, TELL BUF.MGR             */ 02293000
         OI    PLHSSR(RPLH),B'00010000'                            0742 02294000
*   ELSE                            /* NO,                           */ 02295000
*     PLHSSR=OFF;                   /* INSURE FLAG IS CLEAR          */ 02296000
         B     @RC00741                                            0743 02297000
@RF00741 NI    PLHSSR(RPLH),B'11101111'                            0743 02298000
*I14:                                                              0744 02299000
*   DO;                             /* IDACALL(IDAGRB)               */ 02300000
@RC00741 DS    0H                                                  0744 02301000
I14      DS    0H                                                  0745 02302000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 02303000
         L     @15,@CV00920                                        0745 02304000
         BALR  @14,@15                                             0745 02305000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02306000
         BALR @11,0                                                     02307000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02308000
         USING *,@11                                                    02309000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02310000
         L     @11,=A(@PSTART)                                          02311000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02312000
         USING @PSTART,@11                                              02313000
*   END I14;                        /* BUFF. MGR. TO READ            */ 02314000
*   RESPECIFY                                                      0751 02315000
*    (RWORK1) RSTD;                 /*                               */ 02316000
*   IF RPLERREG^=ZERO THEN          /* WAS THERE AN ERROR            */ 02317000
         CLI   RPLERREG(RRPL),0                                    0752 02318000
         BE    @RF00752                                            0752 02319000
*     DO;                           /* YES                           */ 02320000
*       RESPECIFY                                                  0754 02321000
*        (R15) RSTD;                /*                               */ 02322000
*       R15=IOERR;                  /* SHOW ERROR IN REG 15          */ 02323000
         LA    R15,4                                               0755 02324000
*       RAMB=AMBLDTA;               /* RESTORE RAMB FOR CALLER       */ 02325000
         L     @14,RPLDACB(,RRPL)                                  0756 02326000
         L     @14,ACBAMBL(,@14)                                   0756 02327000
         L     RAMB,AMBLDTA(,@14)                                  0756 02328000
*       GEN(IDARST14);              /* POINT TO CALLER               */ 02329000
         IDARST14                                                       02330000
*       CALL EXIT;                  /* RETURN                        */ 02331000
         BAL   @14,EXIT                                            0758 02332000
*       RESPECIFY                                                  0759 02333000
*        (R15) UNRSTD;              /*                               */ 02334000
*     END;                          /*                               */ 02335000
*   RESPECIFY                                                      0761 02336000
*    (RWORK2) RSTD;                 /*                               */ 02337000
@RF00752 DS    0H                                                  0762 02338000
*   RWORK1=AMBIWA;                  /* POINT TO FIRST W.A.           */ 02339000
         L     RWORK1,AMBIWA(,RAMB)                                0762 02340000
*   RWORK2=ICWADD;                  /* PICK UP SAVED POINTER         */ 02341000
         L     RWORK2,ICWADD(,RWORK1)                              0763 02342000
*   RWORK1=RWORK2;                  /* REESTABLISH BASE              */ 02343000
         LR    RWORK1,RWORK2                                       0764 02344000
*   ICWBUFC=RBUFC;                  /* SAVE PTR. TO BUFC             */ 02345000
         ST    RBUFC,ICWBUFC(,RWORK1)                              0765 02346000
*   DO;                             /* SET UPDATED BFR               */ 02347000
*     BUFCORBA=BUFCDDDD;                                           0767 02348000
         L     @10,ICWBUFC(,RWORK1)                                0767 02349000
         L     @07,BUFCDDDD(,@10)                                  0767 02350000
         ST    @07,BUFCORBA(,@10)                                  0767 02351000
*     BUFCMW=ON;                                                   0768 02352000
         OI    BUFCMW(@10),B'10000000'                             0768 02353000
*   END;                            /* SET MUST WRITE FLAG           */ 02354000
*   RESPECIFY                                                      0770 02355000
*    (RWORK1) RSTD;                 /*                               */ 02356000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 02357000
         BAL   @14,EXIT                                            0771 02358000
*                                                                  0772 02359000
*/*                                                                  */ 02360000
*/*    IDAWR SUBROUTINE                                              */ 02361000
*/*                                                                  */ 02362000
*/*       FUNCTION -                                                 */ 02363000
*/*        INTERFACES WITH BUFFER MANAGER TO WRITE OUT THE CURRENT   */ 02364000
*/*        INDEX RECORD AND FREE THE BUFFER.  RWORK1 WILL BE         */ 02365000
*/*        PRESERVED ACROSS THE INTERFACE.                           */ 02366000
*/*       INPUT -                                                    */ 02367000
*/*        RWORK1 = POINTER TO CURRENT WORK AREA.                    */ 02368000
*/*       OUTPUT -                                                   */ 02369000
*/*        NONE -                                                    */ 02370000
*/*       RETURN -                                                   */ 02371000
*/*        TO CALLER IF NO ERRORS WERE ENCOUNTERED                   */ 02372000
*/*        TO CALLER OF CALLER IN CASE OF I/O ERROR                  */ 02373000
*/*                                                                  */ 02374000
*                                                                  0772 02375000
*IDAWR:                                                            0772 02376000
*   ENTRY;                          /*                               */ 02377000
@EP00772 DS    0H                                                  0773 02378000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 02379000
         IDASVR14                                                       02380000
*   RBUFC=ICWBUFC;                  /* SET RBUFC FOR BUFF. MGR       */ 02381000
         L     RBUFC,ICWBUFC(,RWORK1)                              0774 02382000
*I16:                                                              0775 02383000
*   DO;                             /* IDACALL(IDAWRBFR)             */ 02384000
I16      DS    0H                                                  0776 02385000
*     CALL IDAWRBFR;                /* EXIT TO IDAWRBFR              */ 02386000
         L     @15,@CV00917                                        0776 02387000
         BALR  @14,@15                                             0776 02388000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02389000
         BALR @11,0                                                     02390000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02391000
         USING *,@11                                                    02392000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02393000
         L     @11,=A(@PSTART)                                          02394000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02395000
         USING @PSTART,@11                                              02396000
*   END I16;                        /* BUFF MGR. TO WRITE BUFF       */ 02397000
*   RESPECIFY                                                      0782 02398000
*    (RWORK1,                                                      0782 02399000
*     RWORK2) RSTD;                 /*                               */ 02400000
*   IF RPLERREG^=ZERO THEN          /* WAS THERE AN I/O ERROR        */ 02401000
         CLI   RPLERREG(RRPL),0                                    0783 02402000
         BE    @RF00783                                            0783 02403000
*     DO;                           /* YES                           */ 02404000
*       GEN(IDARST14);              /* POINT TO CALLER               */ 02405000
         IDARST14                                                       02406000
*       RAMB=AMBLDTA;               /* RESTORE RAMB FOR CALLER       */ 02407000
         L     @10,RPLDACB(,RRPL)                                  0786 02408000
         L     @10,ACBAMBL(,@10)                                   0786 02409000
         L     RAMB,AMBLDTA(,@10)                                  0786 02410000
*       RESPECIFY                                                  0787 02411000
*        (R15) RSTD;                /*                               */ 02412000
*       R15=IOERR;                  /* SHOW ERROR IN REG 15          */ 02413000
         LA    R15,4                                               0788 02414000
*       CALL EXIT;                  /* RETURN TO CREATE CALLER       */ 02415000
         BAL   @14,EXIT                                            0789 02416000
*       RESPECIFY                                                  0790 02417000
*        (R15) UNRSTD;              /*                               */ 02418000
*     END;                          /*                               */ 02419000
*   ELSE                            /* NO I/O ERROR                  */ 02420000
*I17:                                                              0792 02421000
*     DO;                           /* IDACALL(IDAFREEB)             */ 02422000
         B     @RC00783                                            0792 02423000
@RF00783 DS    0H                                                  0792 02424000
I17      DS    0H                                                  0793 02425000
*       CALL IDAFREEB;              /* EXIT TO IDAFREEB              */ 02426000
         L     @15,@CV00919                                        0793 02427000
         BALR  @14,@15                                             0793 02428000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 02429000
         BALR @11,0                                                     02430000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 02431000
         USING *,@11                                                    02432000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 02433000
         L     @11,=A(@PSTART)                                          02434000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 02435000
         USING @PSTART,@11                                              02436000
*     END I17;                      /* FREE BFR              @X04SVLP*/ 02437000
*   RESPECIFY                                                      0799 02438000
*    (RWORK1,                                                      0799 02439000
*     RWORK2) RSTD;                 /* PROTECT REGISTERS             */ 02440000
@RC00783 DS    0H                                                  0800 02441000
*   RWORK1=AMBIWA;                  /* POINT TO FIRST WA             */ 02442000
         L     RWORK1,AMBIWA(,RAMB)                                0800 02443000
*   RWORK2=ICWADD;                  /* PICK UP SAVED POINTER         */ 02444000
         L     RWORK2,ICWADD(,RWORK1)                              0801 02445000
*   RWORK1=RWORK2;                  /* REESTABLISH BASE              */ 02446000
         LR    RWORK1,RWORK2                                       0802 02447000
*   RESPECIFY                                                      0803 02448000
*    (RWORK2) UNRSTD;               /* GIVE UP RWORK2                */ 02449000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 02450000
         BAL   @14,EXIT                                            0804 02451000
*                                                                  0805 02452000
*   /*****************************************************************/ 02453000
*   /*                                                               */ 02454000
*   /*                                                       @X04SVES*/ 02455000
*   /* CKSPNRCD SUBROUTINE                                   @X04SVES*/ 02456000
*   /*                                                       @X04SVES*/ 02457000
*   /* FUNCTION:                                             @X04SVES*/ 02458000
*   /* TESTS RIGHT HAND ENTRY OF BLOCK FOR A SPANNED         @X04SVES*/ 02459000
*   /* RECORD ENTRY. IF SO, IT SETS ICWNOSEG TO THE          @X04SVES*/ 02460000
*   /* NUMBER OF SEGMENTS IN THE RECORD, ERASES ALL          @X04SVES*/ 02461000
*   /* BUT THE LAST ENTRY, AND ADJUSTS THE RIGHT HAND        @X04SVES*/ 02462000
*   /* POINTER (PLHSAVE2) ACCORDINGLY.                       @X04SVES*/ 02463000
*   /*                                                       @X04SVES*/ 02464000
*   /*                                                               */ 02465000
*   /*****************************************************************/ 02466000
*                                                                  0805 02467000
*CKSPNRCD:                                                         0805 02468000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVES*/ 02469000
         B     @PB00009                                            0805 02470000
CKSPNRCD DS    0H                                                  0806 02471000
*   RESPECIFY                                                      0806 02472000
*    (RWORK1,                                                      0806 02473000
*     RWORK2) RSTD;                 /*                       @X04SVES*/ 02474000
*   RWORK2=PLHSAVE2;                /* ESTABLISH POSITION    @X04SVES*/ 02475000
         L     RWORK2,PLHSAVE2(,RPLH)                              0807 02476000
*   ICWNOSEG=ZERO;                  /* INITIALIZE COUNT      @X04SVES*/ 02477000
         SLR   @10,@10                                             0808 02478000
         STH   @10,ICWNOSEG(,RWORK1)                               0808 02479000
*   DO WHILE RWORK2->IBFLPF=AMDKEYLN;/* LOOP UNTIL AN F IS FOUND NOT    02480000
*                                      EQUAL KEY LENGTH      @X04SVES*/ 02481000
         B     @DE00809                                            0809 02482000
@DL00809 DS    0H                                                  0810 02483000
*     IF ICWNOSEG=ZERO THEN         /* FIRST ONE             @X04SVES*/ 02484000
         LH    @10,ICWNOSEG(,RWORK1)                               0810 02485000
         LTR   @10,@10                                             0810 02486000
         BNZ   @RF00810                                            0810 02487000
*       ICWNOSEG=TWO;               /* YES, START COUNT AT TWO     0811 02488000
*                                                            @X04SVES*/ 02489000
         MVC   ICWNOSEG(2,RWORK1),@CH00146                         0811 02490000
*     ELSE                          /*                       @X04SVES*/ 02491000
*       ICWNOSEG=ICWNOSEG+ONE;      /* NOT FIRST, BUMP COUNT BY ONE     02492000
*                                                            @X04SVES*/ 02493000
         B     @RC00810                                            0812 02494000
@RF00810 LA    @10,1                                               0812 02495000
         AH    @10,ICWNOSEG(,RWORK1)                               0812 02496000
         STH   @10,ICWNOSEG(,RWORK1)                               0812 02497000
*     RWORK2->IBFLPF=ZERO;          /* CLEAR SEGMENT         @X04SVES*/ 02498000
@RC00810 MVI   IBFLPF(RWORK2),X'00'                                0813 02499000
*     RWORK2=RWORK2-LENGTH(IBFLPF)- /* MOVE TO               @X04SVES*/ 02500000
*         LENGTH(IBFLPL);           /* NEXT SEGMENT          @X04SVES*/ 02501000
         BCTR  RWORK2,0                                            0814 02502000
         BCTR  RWORK2,0                                            0814 02503000
*     PLHSAVE2=RWORK2;              /* UPDATE BLOCK LOCATOR  @X04SVES*/ 02504000
         ST    RWORK2,PLHSAVE2(,RPLH)                              0815 02505000
*   END;                            /*                       @X04SVES*/ 02506000
@DE00809 L     @10,AMBDSB(,RAMB)                                   0816 02507000
         SLR   @07,@07                                             0816 02508000
         IC    @07,IBFLPF(,RWORK2)                                 0816 02509000
         CH    @07,AMDKEYLN(,@10)                                  0816 02510000
         BE    @DL00809                                            0816 02511000
*   END CKSPNRCD;                   /*                       @X04SVES*/ 02512000
@EL00009 DS    0H                                                  0817 02513000
@EF00009 DS    0H                                                  0817 02514000
@ER00009 BR    @14                                                 0817 02515000
*                                                                  0818 02516000
*/*                                                                  */ 02517000
*/*    EXIT SUBROUTINE                                               */ 02518000
*/*                                                                  */ 02519000
*/*       FUNCTION                                                   */ 02520000
*/*        RESTORES REGISTER 14 FROM THE PUSHDOWN LIST IN            */ 02521000
*/*        THE PLACEHOLDER AND THEN RETURNS.                         */ 02522000
*/*                                                                  */ 02523000
*/*                                                                  */ 02524000
*                                                                  0818 02525000
*EXIT:                                                             0818 02526000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 02527000
EXIT     DS    0H                                                  0819 02528000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14           */ 02529000
         IDARST14                                                       02530000
*   END EXIT;                       /*                               */ 02531000
@EL00010 DS    0H                                                  0820 02532000
@EF00010 DS    0H                                                  0820 02533000
@ER00010 BR    @14                                                 0820 02534000
@PB00010 DS    0H                                                  0821 02535000
*   GEN;                                                           0821 02536000
*                                          /*                        */ 02537000
PICKPNT  ICM   RWORK0,@00,@00(RWORK3)      /* EXTRACTS POINTER       */ 02538000
PLACEPNT STCM  RWORK0,@00,@00(RWORK5)      /* STORES POINTER         */ 02539000
STOREPNT STCM  RWORK3,@00,@00(RWORK5)      /* STORES POINTER         */ 02540000
*   GEN(IDAPATCH);                  /*                               */ 02541000
         IDAPATCH                                                       02542000
*   END IDA019RJ                    /*                               */ 02543000
*                                                                  0823 02544000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02545000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02546000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02547000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02548000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02549000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02550000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02551000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02552000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02553000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02554000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 02555000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 02556000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02557000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02558000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02559000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02560000
*                                                                  0823 02561000
*       ;                                                          0823 02562000
@EL00001 DS    0H                                                  0823 02563000
@EF00001 DS    0H                                                  0823 02564000
@ER00001 BR    @14                                                 0823 02565000
@DATA    DS    0H                                                       02566000
@CH00083 DC    H'24'                                                    02567000
@DATD    DSECT                                                          02568000
         DS    0F                                                       02569000
IDA019RJ CSECT                                                          02570000
         DS    0F                                                       02571000
@CF00053 DC    F'1'                                                     02572000
@CH00053 EQU   @CF00053+2                                               02573000
@CF00146 DC    F'2'                                                     02574000
@CH00146 EQU   @CF00146+2                                               02575000
@CF01056 DC    XL4'0000FFFF'                                            02576000
@DATD    DSECT                                                          02577000
         DS    0D                                                       02578000
IDA019RJ CSECT                                                          02579000
         DS    0F                                                       02580000
@SIZDATD DC    AL1(0)                                                   02581000
         DC    AL3(@ENDDATD-@DATD)                                      02582000
@CA00961 DC    A(IDAR)                                                  02583000
@CA00979 DC    A(IDAWR)                                                 02584000
@CV00916 DC    V(IDAAQR)                                                02585000
@CV00917 DC    V(IDAWRBFR)                                              02586000
@CV00918 DC    V(IDAER)                                                 02587000
@CV00919 DC    V(IDAFREEB)                                              02588000
@CV00920 DC    V(IDAGRB)                                                02589000
@CV00921 DC    V(IDAIST)                                                02590000
@CV00922 DC    V(IDAIVIXB)                                              02591000
@CV00923 DC    V(IDASPACE)                                              02592000
@CV00924 DC    V(IDASPNPT)                                              02593000
@CV00954 DC    V(IDA019ST)                                              02594000
         DS    0D                                                       02595000
HWORD4   DC    H'4'                                                     02596000
@DATD    DSECT                                                          02597000
*                                                          /*@X04SVLC*/ 02598000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02599000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02600000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02601000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02602000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02603000
RDFLEN   EQU   3                        LENGTH OF RDF                   02604000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02605000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02606000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02607000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02608000
@DATD    DSECT                                                          02609000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02610000
@ENDDATD EQU   *                                                        02611000
IDA019RJ CSECT                                                          02612000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02613000
@01      EQU   01                                                       02614000
@02      EQU   02                                                       02615000
@03      EQU   03                                                       02616000
@04      EQU   04                                                       02617000
@05      EQU   05                                                       02618000
@06      EQU   06                                                       02619000
@07      EQU   07                                                       02620000
@08      EQU   08                                                       02621000
@09      EQU   09                                                       02622000
@10      EQU   10                                                       02623000
@11      EQU   11                                                       02624000
@12      EQU   12                                                       02625000
@13      EQU   13                                                       02626000
@14      EQU   14                                                       02627000
@15      EQU   15                                                       02628000
RWORK0   EQU   @00                                                      02629000
RRPL     EQU   @01                                                      02630000
RPLH     EQU   @02                                                      02631000
RAMB     EQU   @03                                                      02632000
RBUFC    EQU   @04                                                      02633000
RWORK1   EQU   @05                                                      02634000
RWORK2   EQU   @06                                                      02635000
RWORK3   EQU   @07                                                      02636000
RWORK4   EQU   @08                                                      02637000
RWORK5   EQU   @09                                                      02638000
RPARM1   EQU   @12                                                      02639000
R14      EQU   @14                                                      02640000
R15      EQU   @15                                                      02641000
R1       EQU   @01                                                      02642000
R10      EQU   @10                                                      02643000
R11      EQU   @11                                                      02644000
R13      EQU   @13                                                      02645000
IFGRPL   EQU   0                                                        02646000
RPLCOMN  EQU   IFGRPL                                                   02647000
RPLIDWD  EQU   RPLCOMN                                                  02648000
RPLLEN   EQU   RPLIDWD+3                                                02649000
RPLECB   EQU   RPLCOMN+8                                                02650000
RPLFDBWD EQU   RPLCOMN+12                                               02651000
RPLFDBK  EQU   RPLFDBWD+1                                               02652000
RPLRTNCD EQU   RPLFDBK                                                  02653000
RPLERREG EQU   RPLRTNCD                                                 02654000
RPLCNDCD EQU   RPLFDBK+1                                                02655000
RPLCMPON EQU   RPLCNDCD                                                 02656000
RPLFDB2  EQU   RPLCMPON                                                 02657000
RPLERRCD EQU   RPLCNDCD+1                                               02658000
RPLFDB3  EQU   RPLERRCD                                                 02659000
RPLKEYLE EQU   RPLCOMN+16                                               02660000
RPLDACB  EQU   RPLCOMN+24                                               02661000
RPLARG   EQU   RPLCOMN+36                                               02662000
RPLOPTCD EQU   RPLCOMN+40                                               02663000
RPLOPT1  EQU   RPLOPTCD                                                 02664000
RPLECBSW EQU   RPLOPT1                                                  02665000
RPLOPT2  EQU   RPLOPTCD+1                                               02666000
RPLADR   EQU   RPLOPT2                                                  02667000
RPLOPT3  EQU   RPLOPTCD+2                                               02668000
RPLNXTRP EQU   RPLCOMN+44                                               02669000
RPLOPTC2 EQU   RPLCOMN+56                                               02670000
RPLOPT5  EQU   RPLOPTC2                                                 02671000
RPLWRTYP EQU   RPLOPT5                                                  02672000
RPLOPT6  EQU   RPLOPTC2+1                                               02673000
RPLUNTYP EQU   RPLOPT6                                                  02674000
RPLOPT7  EQU   RPLOPTC2+2                                               02675000
RPLCNOPT EQU   RPLOPT7                                                  02676000
RPLOPT8  EQU   RPLOPTC2+3                                               02677000
RPLRBAR  EQU   RPLCOMN+60                                               02678000
RPLAIXID EQU   RPLRBAR+2                                                02679000
RPLEXTDS EQU   RPLCOMN+68                                               02680000
RPLEXTD1 EQU   RPLEXTDS                                                 02681000
IDAAMBL  EQU   0                                                        02682000
AMBLEOV  EQU   IDAAMBL+12                                               02683000
AMBLEFLG EQU   AMBLEOV                                                  02684000
AMBLDDNM EQU   IDAAMBL+16                                               02685000
AMBLIDF  EQU   AMBLDDNM                                                 02686000
AMBLQ    EQU   AMBLIDF+7                                                02687000
AMBLVC   EQU   IDAAMBL+28                                               02688000
AMBLTYPE EQU   IDAAMBL+30                                               02689000
AMBLSHAR EQU   IDAAMBL+33                                               02690000
AMBLFLG1 EQU   IDAAMBL+35                                               02691000
AMBLFLG2 EQU   IDAAMBL+36                                               02692000
AMBLDTA  EQU   IDAAMBL+52                                               02693000
AMBLIX   EQU   IDAAMBL+56                                               02694000
IDAPLHDR EQU   0                                                        02695000
IDAPLH   EQU   0                                                        02696000
PLHFLG1  EQU   IDAPLH+2                                                 02697000
PLHSSR   EQU   PLHFLG1                                                  02698000
PLHFLG2  EQU   IDAPLH+3                                                 02699000
PLHADDTE EQU   PLHFLG2                                                  02700000
PLHEFLGS EQU   IDAPLH+4                                                 02701000
PLHFLG3  EQU   IDAPLH+6                                                 02702000
PLHSLVLD EQU   PLHFLG3                                                  02703000
PLHAFLGS EQU   IDAPLH+7                                                 02704000
PLHCRBA  EQU   IDAPLH+28                                                02705000
PLHJORBA EQU   PLHCRBA                                                  02706000
PLHJCODE EQU   IDAPLH+40                                                02707000
PLHRSCS  EQU   IDAPLH+43                                                02708000
PLHDIOB  EQU   IDAPLH+76                                                02709000
PLHSAVE1 EQU   IDAPLH+84                                                02710000
PLHSAVE2 EQU   IDAPLH+88                                                02711000
PLHSAVE3 EQU   IDAPLH+92                                                02712000
PLHSAVE4 EQU   IDAPLH+96                                                02713000
PLHSAVE5 EQU   IDAPLH+100                                               02714000
PLHSAVE6 EQU   IDAPLH+104                                               02715000
PLHRETO  EQU   IDAPLH+116                                               02716000
PLHRET1  EQU   IDAPLH+120                                               02717000
PLHEOVPT EQU   IDAPLH+180                                               02718000
PLHIXSPL EQU   IDAPLH+200                                               02719000
PLHSSRBA EQU   PLHIXSPL                                                 02720000
PLHWAX   EQU   IDAPLH+232                                               02721000
PLHSLRBA EQU   IDAPLH+244                                               02722000
PLHKEYPT EQU   IDAPLH+248                                               02723000
PLHTMRPL EQU   IDAPLH+265                                               02724000
PLHEND   EQU   IDAPLH+280                                               02725000
IDABUFDR EQU   0                                                        02726000
BUFDRCIX EQU   IDABUFDR+9                                               02727000
BUFDRFLG EQU   IDABUFDR+11                                              02728000
IDABUFC  EQU   0                                                        02729000
BUFCAVL  EQU   IDABUFC                                                  02730000
BUFCFLG1 EQU   IDABUFC+1                                                02731000
BUFCVAL  EQU   BUFCFLG1                                                 02732000
BUFCIOFL EQU   IDABUFC+2                                                02733000
BUFCMW   EQU   BUFCIOFL                                                 02734000
BUFCFLG2 EQU   IDABUFC+3                                                02735000
BUFCPLH  EQU   IDABUFC+4                                                02736000
BUFCDDDD EQU   IDABUFC+8                                                02737000
BUFCORBA EQU   IDABUFC+12                                               02738000
BUFCBAD  EQU   IDABUFC+20                                               02739000
BUFCINV  EQU   IDABUFC+28                                               02740000
BUFXIRBA EQU   IDABUFC+40                                               02741000
IDACIDF  EQU   0                                                        02742000
CIDFLL   EQU   IDACIDF+2                                                02743000
IDAAMDSB EQU   0                                                        02744000
AMDATTR  EQU   IDAAMDSB+1                                               02745000
AMDRANGE EQU   AMDATTR                                                  02746000
AMDNEST  EQU   IDAAMDSB+4                                               02747000
AMDKEYLN EQU   IDAAMDSB+8                                               02748000
AMDCIPCA EQU   IDAAMDSB+12                                              02749000
AMDHLRBA EQU   IDAAMDSB+28                                              02750000
AMDSSRBA EQU   IDAAMDSB+32                                              02751000
AMDATTR3 EQU   IDAAMDSB+40                                              02752000
AMDSTAT  EQU   IDAAMDSB+48                                              02753000
AMDNCIS  EQU   AMDSTAT+36                                               02754000
AMDNCAS  EQU   AMDSTAT+40                                               02755000
IDAARDB  EQU   0                                                        02756000
ARDTYPE  EQU   IDAARDB+1                                                02757000
ARDPRF   EQU   IDAARDB+28                                               02758000
IDAIXSPL EQU   0                                                        02759000
IXSILN   EQU   IDAIXSPL+13                                              02760000
IXSBFLG  EQU   IDAIXSPL+17                                              02761000
IDAICWA  EQU   0                                                        02762000
ICWFLG1  EQU   IDAICWA+1                                                02763000
ICWWNF   EQU   ICWFLG1                                                  02764000
ICWVSE   EQU   ICWFLG1                                                  02765000
ICWVNE   EQU   ICWFLG1                                                  02766000
ICWKRDS  EQU   ICWFLG1                                                  02767000
ICWSPLIT EQU   ICWFLG1                                                  02768000
ICWCHN   EQU   IDAICWA+4                                                02769000
ICWBUFC  EQU   IDAICWA+8                                                02770000
ICWCRBA  EQU   IDAICWA+12                                               02771000
ICWPRBA  EQU   IDAICWA+16                                               02772000
ICWPSEO  EQU   IDAICWA+20                                               02773000
ICWSCNT  EQU   IDAICWA+22                                               02774000
ICWADD   EQU   IDAICWA+24                                               02775000
ICWTBASE EQU   IDAICWA+28                                               02776000
ICWTPTR  EQU   IDAICWA+32                                               02777000
ICWLN    EQU   IDAICWA+40                                               02778000
ICWKEY1L EQU   IDAICWA+42                                               02779000
ICWKEY2L EQU   IDAICWA+44                                               02780000
ICWNEST  EQU   IDAICWA+48                                               02781000
ICWNOSEG EQU   IDAICWA+50                                               02782000
ICWCRSEG EQU   IDAICWA+52                                               02783000
ICWPTL   EQU   IDAICWA+55                                               02784000
ICWKEY1  EQU   IDAICWA+60                                               02785000
IDAIMWA  EQU   0                                                        02786000
IMWFLAGS EQU   IDAIMWA+1                                                02787000
IMWCIMVN EQU   IDAIMWA+68                                               02788000
IDAIXH   EQU   0                                                        02789000
IXHLL    EQU   IDAIXH                                                   02790000
IXHFLPLN EQU   IDAIXH+2                                                 02791000
IXHPTLS  EQU   IDAIXH+3                                                 02792000
IXHBRBA  EQU   IDAIXH+4                                                 02793000
IXHHP    EQU   IDAIXH+8                                                 02794000
IXHLV    EQU   IDAIXH+16                                                02795000
IXHFSO   EQU   IDAIXH+18                                                02796000
IXHLEO   EQU   IDAIXH+20                                                02797000
IXHSEO   EQU   IDAIXH+22                                                02798000
IDAIBFLP EQU   0                                                        02799000
IBFLPF   EQU   IDAIBFLP                                                 02800000
IBFLPL   EQU   IDAIBFLP+1                                               02801000
IBFLP3   EQU   IDAIBFLP+2                                               02802000
IBFLP2   EQU   IBFLP3                                                   02803000
IDASELL  EQU   0                                                        02804000
IXSELL   EQU   IDASELL                                                  02805000
IDAIXK   EQU   0                                                        02806000
IXKEY    EQU   IDAIXK                                                   02807000
IFGACB   EQU   0                                                        02808000
ACBCOMN  EQU   IFGACB                                                   02809000
ACBLENG  EQU   ACBCOMN+2                                                02810000
ACBLENG2 EQU   ACBLENG                                                  02811000
ACBAMBL  EQU   ACBCOMN+4                                                02812000
ACBJWA   EQU   ACBAMBL                                                  02813000
ACBMACRF EQU   ACBCOMN+12                                               02814000
ACBMACR1 EQU   ACBMACRF                                                 02815000
ACBADR   EQU   ACBMACR1                                                 02816000
ACBCNV   EQU   ACBMACR1                                                 02817000
ACBMACR2 EQU   ACBMACRF+1                                               02818000
ACBBUFPL EQU   ACBCOMN+20                                               02819000
ACBMACR3 EQU   ACBBUFPL                                                 02820000
ACBRECFM EQU   ACBCOMN+24                                               02821000
ACBCCTYP EQU   ACBCOMN+25                                               02822000
ACBOPT   EQU   ACBCOMN+26                                               02823000
ACBDSORG EQU   ACBOPT                                                   02824000
ACBCROPS EQU   ACBDSORG                                                 02825000
ACBEXLST EQU   ACBCOMN+36                                               02826000
ACBDDNM  EQU   ACBCOMN+40                                               02827000
ACBAMETH EQU   ACBDDNM+3                                                02828000
ACBOFLGS EQU   ACBCOMN+48                                               02829000
ACBEXFG  EQU   ACBOFLGS                                                 02830000
ACBIOSFG EQU   ACBOFLGS                                                 02831000
ACBINFLG EQU   ACBCOMN+50                                               02832000
ACBUJFCB EQU   ACBCOMN+52                                               02833000
ACBBLKSZ EQU   ACBCOMN+60                                               02834000
IDAAMB   EQU   0                                                        02835000
AMBDSB   EQU   IDAAMB+20                                                02836000
AMBEOVR  EQU   IDAAMB+24                                                02837000
AMBFLG0  EQU   AMBEOVR                                                  02838000
AMBFLG1  EQU   IDAAMB+25                                                02839000
AMBDSORG EQU   IDAAMB+26                                                02840000
AMBIOBAD EQU   IDAAMB+28                                                02841000
AMBINFL  EQU   IDAAMB+42                                                02842000
AMBDEBPT EQU   IDAAMB+44                                                02843000
AMBOFLGS EQU   IDAAMB+48                                                02844000
AMBFLG2  EQU   IDAAMB+49                                                02845000
AMBEOVPT EQU   IDAAMB+56                                                02846000
AMBIWA   EQU   IDAAMB+64                                                02847000
AMBCSWD1 EQU   IDAAMB+84                                                02848000
AMBAFLG  EQU   AMBCSWD1                                                 02849000
AMBTRACE EQU   IDAAMB+120                                               02850000
IDARDF   EQU   0                                                        02851000
RDFRBYTE EQU   IDARDF                                                   02852000
RDFSEG   EQU   RDFRBYTE                                                 02853000
IDADATA  EQU   0                                                        02854000
IDAKEY   EQU   0                                                        02855000
ICWKEY2  EQU   0                                                        02856000
ICWKEY3  EQU   0                                                        02857000
PLHKEY   EQU   0                                                        02858000
PLHPDL   EQU   0                                                        02859000
PLHPDLE  EQU   0                                                        02860000
PLHRRN   EQU   0                                                        02861000
PLHEXTEN EQU   PLHEND                                                   02862000
PLHBMWRK EQU   PLHEXTEN+5                                               02863000
BUFCRSC1 EQU   BUFCAVL                                                  02864000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02865000
PLHBMSV5 EQU   PLHEXTEN+24                                              02866000
PLHBMSV4 EQU   PLHEXTEN+20                                              02867000
PLHBMSV3 EQU   PLHEXTEN+16                                              02868000
PLHBMSV2 EQU   PLHEXTEN+12                                              02869000
PLHBMSV1 EQU   PLHEXTEN+8                                               02870000
PLHRDCNT EQU   PLHEXTEN+6                                               02871000
PLHBMSOV EQU   PLHBMWRK                                                 02872000
PLHBEUC  EQU   PLHBMWRK                                                 02873000
PLHBMRDF EQU   PLHBMWRK                                                 02874000
@NM00020 EQU   PLHEXTEN+4                                               02875000
PLHRESR1 EQU   PLHEXTEN                                                 02876000
KEY      EQU   IDAKEY                                                   02877000
AMDATA   EQU   IDADATA                                                  02878000
RDFLL    EQU   IDARDF+1                                                 02879000
RDFEMPTY EQU   RDFRBYTE                                                 02880000
RDFREPL  EQU   RDFRBYTE                                                 02881000
RDF1ST   EQU   RDFSEG                                                   02882000
RDFNOT1  EQU   RDFSEG                                                   02883000
RDFCTNU  EQU   RDFRBYTE                                                 02884000
RDFTYPE  EQU   RDFRBYTE                                                 02885000
AMBVIOT  EQU   IDAAMB+116                                               02886000
AMBSZCP  EQU   IDAAMB+114                                               02887000
AMBSZFW  EQU   IDAAMB+112                                               02888000
AMBSZWR  EQU   IDAAMB+110                                               02889000
AMBSZRD  EQU   IDAAMB+108                                               02890000
AMBEXEX  EQU   IDAAMB+100                                               02891000
AMBWSHD  EQU   IDAAMB+96                                                02892000
AMBCPA   EQU   IDAAMB+92                                                02893000
AMBBM2SH EQU   IDAAMB+88                                                02894000
AMBRDCNT EQU   AMBCSWD1+2                                               02895000
@NM00052 EQU   AMBCSWD1+1                                               02896000
@NM00051 EQU   AMBAFLG                                                  02897000
AMBCFX   EQU   AMBAFLG                                                  02898000
AMBSIS   EQU   AMBAFLG                                                  02899000
AMBDFR   EQU   AMBAFLG                                                  02900000
AMBICI   EQU   AMBAFLG                                                  02901000
AMBGSR   EQU   AMBAFLG                                                  02902000
AMBLSR   EQU   AMBAFLG                                                  02903000
@NM00050 EQU   AMBAFLG                                                  02904000
AMBUPLH  EQU   IDAAMB+80                                                02905000
AMBPAMBL EQU   IDAAMB+76                                                02906000
AMBPIXP  EQU   IDAAMB+72                                                02907000
@NM00049 EQU   IDAAMB+68                                                02908000
AMBWKA   EQU   IDAAMB+60                                                02909000
AMBAMBXN EQU   AMBEOVPT                                                 02910000
AMBEDB   EQU   IDAAMB+52                                                02911000
AMBRPT   EQU   IDAAMB+50                                                02912000
AMBPUG   EQU   AMBFLG2                                                  02913000
AMBBUSY  EQU   AMBOFLGS                                                 02914000
AMBEXFG  EQU   AMBOFLGS                                                 02915000
@NM00048 EQU   AMBOFLGS                                                 02916000
AMBOPEN  EQU   AMBOFLGS                                                 02917000
@NM00047 EQU   AMBOFLGS                                                 02918000
AMBDEBAD EQU   AMBDEBPT+1                                               02919000
AMBIFLGS EQU   AMBDEBPT                                                 02920000
AMBAMETH EQU   IDAAMB+43                                                02921000
AMBUPX   EQU   AMBINFL                                                  02922000
AMBUCRA  EQU   AMBINFL                                                  02923000
AMBSCRA  EQU   AMBINFL                                                  02924000
AMBCAT   EQU   AMBINFL                                                  02925000
@NM00046 EQU   AMBINFL                                                  02926000
@NM00045 EQU   AMBINFL                                                  02927000
AMBTIOT  EQU   IDAAMB+40                                                02928000
@NM00044 EQU   IDAAMB+38                                                02929000
AMBDDSN  EQU   IDAAMB+35                                                02930000
AMBCDSN  EQU   IDAAMB+32                                                02931000
AMBIOMB  EQU   AMBIOBAD                                                 02932000
@NM00043 EQU   AMBDSORG+1                                               02933000
AMBDORGA EQU   AMBDSORG+1                                               02934000
@NM00042 EQU   AMBDSORG                                                 02935000
AMBINBUF EQU   AMBFLG1                                                  02936000
AMBJRN   EQU   AMBFLG1                                                  02937000
AMBUBF   EQU   AMBFLG1                                                  02938000
AMBSPEED EQU   AMBFLG1                                                  02939000
AMBPCAT  EQU   AMBFLG1                                                  02940000
AMBMCAT  EQU   AMBFLG1                                                  02941000
AMBTYPE  EQU   AMBFLG1                                                  02942000
AMBCREAT EQU   AMBFLG1                                                  02943000
@NM00041 EQU   AMBFLG0                                                  02944000
AMBPSDS  EQU   AMBFLG0                                                  02945000
AMBCACB  EQU   IDAAMB+16                                                02946000
AMBPH    EQU   IDAAMB+12                                                02947000
AMBBUFC  EQU   IDAAMB+8                                                 02948000
AMBLINK  EQU   IDAAMB+4                                                 02949000
AMBLEN   EQU   IDAAMB+2                                                 02950000
AMBRSC   EQU   IDAAMB+1                                                 02951000
AMBID    EQU   IDAAMB                                                   02952000
ACBAPID  EQU   ACBCOMN+72                                               02953000
ACBCBMWA EQU   ACBCOMN+68                                               02954000
ACBUAPTR EQU   ACBCOMN+64                                               02955000
ACBLRECL EQU   ACBCOMN+62                                               02956000
ACBMSGLN EQU   ACBBLKSZ                                                 02957000
ACBBUFSP EQU   ACBCOMN+56                                               02958000
@NM00040 EQU   ACBUJFCB+1                                               02959000
ACBOPTN  EQU   ACBUJFCB                                                 02960000
ACBVVIC  EQU   ACBINFLG                                                 02961000
ACBUCRA  EQU   ACBINFLG                                                 02962000
ACBSCRA  EQU   ACBINFLG                                                 02963000
ACBCAT   EQU   ACBINFLG                                                 02964000
ACBIJRQE EQU   ACBINFLG                                                 02965000
ACBJEPS  EQU   ACBINFLG                                                 02966000
@NM00039 EQU   ACBINFLG                                                 02967000
ACBERFLG EQU   ACBCOMN+49                                               02968000
ACBBUSY  EQU   ACBIOSFG                                                 02969000
ACBLOCK  EQU   ACBEXFG                                                  02970000
@NM00038 EQU   ACBOFLGS                                                 02971000
ACBDSERR EQU   ACBOFLGS                                                 02972000
ACBOPEN  EQU   ACBOFLGS                                                 02973000
ACBEOV   EQU   ACBOFLGS                                                 02974000
@NM00037 EQU   ACBOFLGS                                                 02975000
ACBDEB   EQU   ACBDDNM+5                                                02976000
ACBERFL  EQU   ACBDDNM+4                                                02977000
ACBAM    EQU   ACBAMETH                                                 02978000
ACBINFL  EQU   ACBDDNM+2                                                02979000
ACBTIOT  EQU   ACBDDNM                                                  02980000
ACBUEL   EQU   ACBEXLST                                                 02981000
ACBPASSW EQU   ACBCOMN+32                                               02982000
ACBMSGAR EQU   ACBCOMN+28                                               02983000
@NM00036 EQU   ACBDSORG+1                                               02984000
ACBDORGA EQU   ACBDSORG+1                                               02985000
@NM00035 EQU   ACBDSORG                                                 02986000
ACBCRNRE EQU   ACBCROPS                                                 02987000
ACBCRNCK EQU   ACBCROPS                                                 02988000
ACBASA   EQU   ACBCCTYP                                                 02989000
@NM00034 EQU   ACBCCTYP                                                 02990000
ACBRECAF EQU   ACBRECFM                                                 02991000
ACBJBUF  EQU   ACBBUFPL+2                                               02992000
ACBMACR4 EQU   ACBBUFPL+1                                               02993000
@NM00033 EQU   ACBMACR3                                                 02994000
ACBNCFX  EQU   ACBMACR3                                                 02995000
ACBSIS   EQU   ACBMACR3                                                 02996000
ACBDFR   EQU   ACBMACR3                                                 02997000
ACBICI   EQU   ACBMACR3                                                 02998000
ACBGSR   EQU   ACBMACR3                                                 02999000
ACBLSR   EQU   ACBMACR3                                                 03000000
@NM00032 EQU   ACBMACR3                                                 03001000
ACBBUFNI EQU   ACBCOMN+18                                               03002000
ACBBUFND EQU   ACBCOMN+16                                               03003000
ACBSTRNO EQU   ACBCOMN+15                                               03004000
ACBBSTNO EQU   ACBCOMN+14                                               03005000
ACBAIX   EQU   ACBMACR2                                                 03006000
ACBDSN   EQU   ACBMACR2                                                 03007000
ACBRST   EQU   ACBMACR2                                                 03008000
ACBLOGON EQU   ACBMACR2                                                 03009000
ACBSKP   EQU   ACBMACR2                                                 03010000
@NM00031 EQU   ACBMACR2                                                 03011000
ACBUBF   EQU   ACBMACR1                                                 03012000
ACBOUT   EQU   ACBMACR1                                                 03013000
ACBIN    EQU   ACBMACR1                                                 03014000
ACBDIR   EQU   ACBMACR1                                                 03015000
ACBSEQ   EQU   ACBMACR1                                                 03016000
ACBBLK   EQU   ACBCNV                                                   03017000
ACBADD   EQU   ACBADR                                                   03018000
ACBKEY   EQU   ACBMACR1                                                 03019000
ACBINRTN EQU   ACBCOMN+8                                                03020000
ACBIBCT  EQU   ACBJWA                                                   03021000
ACBLEN2  EQU   ACBLENG2                                                 03022000
ACBSTYP  EQU   ACBCOMN+1                                                03023000
ACBID    EQU   ACBCOMN                                                  03024000
IBFLP1   EQU   IBFLP2                                                   03025000
IXHFLGS  EQU   IDAIXH+17                                                03026000
IXHXX    EQU   IDAIXH+12                                                03027000
IMWKEY1  EQU   IDAIMWA+76                                               03028000
@NM00030 EQU   IDAIMWA+72                                               03029000
IMWNSOFF EQU   IDAIMWA+70                                               03030000
@NM00029 EQU   IDAIMWA+67                                               03031000
IMWSVIEL EQU   IDAIMWA+66                                               03032000
IMWIEL   EQU   IDAIMWA+65                                               03033000
IMWFGAIN EQU   IDAIMWA+64                                               03034000
IMWBUFP  EQU   IDAIMWA+60                                               03035000
IMWLBUFC EQU   IDAIMWA+56                                               03036000
IMWIPTR  EQU   IDAIMWA+52                                               03037000
IMWXPTR  EQU   IDAIMWA+48                                               03038000
IMWIKEYP EQU   IDAIMWA+44                                               03039000
IMWXKEYP EQU   IDAIMWA+40                                               03040000
IMWISWKA EQU   IDAIMWA+8                                                03041000
IMWIXSP  EQU   IDAIMWA+4                                                03042000
IMWLEN   EQU   IDAIMWA+2                                                03043000
IMWBSE   EQU   IMWFLAGS                                                 03044000
IMWRIPL  EQU   IMWFLAGS                                                 03045000
IMWNEWHL EQU   IMWFLAGS                                                 03046000
IMWID    EQU   IDAIMWA                                                  03047000
ICWCERP  EQU   IDAICWA+59                                               03048000
ICWCEL   EQU   IDAICWA+58                                               03049000
ICWCEF   EQU   IDAICWA+57                                               03050000
ICWCER   EQU   IDAICWA+56                                               03051000
ICWREQ   EQU   IDAICWA+54                                               03052000
ICWKEY3L EQU   IDAICWA+46                                               03053000
ICWARDBP EQU   IDAICWA+36                                               03054000
ICWLEN   EQU   IDAICWA+2                                                03055000
ICWENDRQ EQU   ICWFLG1                                                  03056000
ICWRBAOK EQU   ICWFLG1                                                  03057000
ICWWAGM  EQU   ICWFLG1                                                  03058000
ICWID    EQU   IDAICWA                                                  03059000
IXSLEP   EQU   IDAIXSPL+28                                              03060000
IXSSEP   EQU   IDAIXSPL+24                                              03061000
IXSHEP   EQU   IDAIXSPL+20                                              03062000
IXSPEC   EQU   IDAIXSPL+19                                              03063000
IXSEKON  EQU   IDAIXSPL+18                                              03064000
@NM00028 EQU   IXSBFLG                                                  03065000
IXSLELV  EQU   IXSBFLG                                                  03066000
IXSSSRH  EQU   IXSBFLG                                                  03067000
IXSNOSR  EQU   IDAIXSPL+16                                              03068000
IXSKLEN  EQU   IDAIXSPL+14                                              03069000
IXSTLN   EQU   IDAIXSPL+12                                              03070000
IXSARG   EQU   IDAIXSPL+8                                               03071000
IXSBUFC  EQU   IDAIXSPL+4                                               03072000
IXSSTRBA EQU   IDAIXSPL                                                 03073000
ARDKEYS  EQU   IDAARDB+29                                               03074000
@NM00027 EQU   ARDPRF                                                   03075000
ARDPRFMT EQU   ARDPRF                                                   03076000
ARDPRSS  EQU   ARDPRF                                                   03077000
ARDRELNO EQU   IDAARDB+26                                               03078000
ARDVOLSR EQU   IDAARDB+20                                               03079000
ARDERBA  EQU   IDAARDB+16                                               03080000
ARDHRBA  EQU   IDAARDB+12                                               03081000
ARDHKRBA EQU   IDAARDB+8                                                03082000
ARDNPTR  EQU   IDAARDB+4                                                03083000
ARDLEN   EQU   IDAARDB+2                                                03084000
ARDUSED  EQU   ARDTYPE                                                  03085000
ARDEOD   EQU   ARDTYPE                                                  03086000
ARDUOVFL EQU   ARDTYPE                                                  03087000
ARDSS    EQU   ARDTYPE                                                  03088000
ARDHLI   EQU   ARDTYPE                                                  03089000
ARDKR    EQU   ARDTYPE                                                  03090000
ARDID    EQU   IDAARDB                                                  03091000
AMDEXCP  EQU   AMDSTAT+44                                               03092000
AMDASPA  EQU   AMDSTAT+32                                               03093000
AMDRETR  EQU   AMDSTAT+28                                               03094000
AMDUPR   EQU   AMDSTAT+24                                               03095000
AMDIREC  EQU   AMDSTAT+20                                               03096000
AMDDELR  EQU   AMDSTAT+16                                               03097000
AMDNLR   EQU   AMDSTAT+12                                               03098000
AMDNEXT  EQU   AMDSTAT+10                                               03099000
AMDNIL   EQU   AMDSTAT+8                                                03100000
AMDSTSP  EQU   AMDSTAT                                                  03101000
@NM00026 EQU   IDAAMDSB+41                                              03102000
@NM00025 EQU   AMDATTR3                                                 03103000
AMDLM    EQU   AMDATTR3                                                 03104000
AMDWAIT  EQU   AMDATTR3                                                 03105000
AMDBIND  EQU   AMDATTR3                                                 03106000
AMDFAULT EQU   AMDATTR3                                                 03107000
AMDUNQ   EQU   AMDATTR3                                                 03108000
AMDPARDB EQU   IDAAMDSB+36                                              03109000
AMDMAXRR EQU   AMDSSRBA                                                 03110000
AMDNSLOT EQU   AMDHLRBA                                                 03111000
AMDLRECL EQU   IDAAMDSB+24                                              03112000
AMDCINV  EQU   IDAAMDSB+20                                              03113000
AMDFSCI  EQU   IDAAMDSB+16                                              03114000
AMDFSCA  EQU   IDAAMDSB+14                                              03115000
AMDPCTCI EQU   IDAAMDSB+11                                              03116000
AMDPCTCA EQU   IDAAMDSB+10                                              03117000
AMDRKP   EQU   IDAAMDSB+6                                               03118000
AMDAXRKP EQU   AMDNEST                                                  03119000
AMDLEN   EQU   IDAAMDSB+2                                               03120000
AMDSPAN  EQU   AMDATTR                                                  03121000
AMDRRDS  EQU   AMDATTR                                                  03122000
AMDORDER EQU   AMDATTR                                                  03123000
AMDREPL  EQU   AMDATTR                                                  03124000
AMDSDT   EQU   AMDATTR                                                  03125000
AMDWCK   EQU   AMDATTR                                                  03126000
AMDDST   EQU   AMDATTR                                                  03127000
AMDSBID  EQU   IDAAMDSB                                                 03128000
@NM00024 EQU   CIDFLL                                                   03129000
CIDFBUSY EQU   CIDFLL                                                   03130000
CIDFOSET EQU   IDACIDF                                                  03131000
BUFCEND  EQU   IDABUFC+64                                               03132000
BUFCUCDN EQU   IDABUFC+60                                               03133000
BUFCUCUP EQU   IDABUFC+56                                               03134000
BUFCMDBT EQU   IDABUFC+52                                               03135000
BUFCHAIN EQU   IDABUFC+48                                               03136000
BUFXORBA EQU   IDABUFC+44                                               03137000
BUFCNXT2 EQU   IDABUFC+37                                               03138000
BUFCIDXL EQU   IDABUFC+36                                               03139000
BUFCDSPC EQU   IDABUFC+32                                               03140000
BUFCWLEN EQU   BUFCINV                                                  03141000
BUFCNXT1 EQU   IDABUFC+24                                               03142000
BUFCCPA  EQU   IDABUFC+16                                               03143000
BUFCAMB  EQU   BUFCPLH                                                  03144000
@NM00023 EQU   BUFCFLG2                                                 03145000
BUFCEOD  EQU   BUFCFLG2                                                 03146000
BUFCBSYW EQU   BUFCFLG2                                                 03147000
BUFCBSYR EQU   BUFCFLG2                                                 03148000
BUFCNLAS EQU   BUFCFLG2                                                 03149000
BUFCXDDR EQU   BUFCFLG2                                                 03150000
BUFCFIX  EQU   BUFCIOFL                                                 03151000
BUFCPFCP EQU   BUFCIOFL                                                 03152000
BUFCXEDB EQU   BUFCIOFL                                                 03153000
BUFCWC   EQU   BUFCIOFL                                                 03154000
BUFCREAL EQU   BUFCIOFL                                                 03155000
BUFCRRD  EQU   BUFCIOFL                                                 03156000
BUFCFMT  EQU   BUFCIOFL                                                 03157000
BUFCEPT  EQU   BUFCFLG1                                                 03158000
BUFCEXC  EQU   BUFCFLG1                                                 03159000
BUFCER2  EQU   BUFCFLG1                                                 03160000
BUFCER1  EQU   BUFCFLG1                                                 03161000
BUFCINS  EQU   BUFCFLG1                                                 03162000
BUFCSEG  EQU   BUFCFLG1                                                 03163000
BUFCUPG  EQU   BUFCFLG1                                                 03164000
BUFCUCNT EQU   BUFCAVL                                                  03165000
@NM00022 EQU   IDABUFDR+16                                              03166000
BUFDBUFC EQU   IDABUFDR+12                                              03167000
@NM00021 EQU   BUFDRFLG                                                 03168000
BUFDRAVL EQU   BUFDRFLG                                                 03169000
BUFDRREL EQU   BUFDRFLG                                                 03170000
BUFDRTSB EQU   IDABUFDR+10                                              03171000
BUFDRMAX EQU   BUFDRCIX                                                 03172000
BUFDRPFN EQU   IDABUFDR+8                                               03173000
BUFDRPFB EQU   IDABUFDR+4                                               03174000
BUFDRLEN EQU   IDABUFDR+2                                               03175000
BUFDRNO  EQU   IDABUFDR+1                                               03176000
BUFDRID  EQU   IDABUFDR                                                 03177000
PLHERRET EQU   IDAPLH+276                                               03178000
PLHASCB  EQU   IDAPLH+272                                               03179000
PLHECB   EQU   IDAPLH+268                                               03180000
@NM00019 EQU   IDAPLH+266                                               03181000
@NM00018 EQU   PLHTMRPL                                                 03182000
PLHTMIOB EQU   PLHTMRPL                                                 03183000
PLHTMINX EQU   PLHTMRPL                                                 03184000
PLHTMDTA EQU   PLHTMRPL                                                 03185000
PLHTMDIW EQU   PLHTMRPL                                                 03186000
PLHTMBUF EQU   PLHTMRPL                                                 03187000
PLHTERM  EQU   PLHTMRPL                                                 03188000
PLHDRMSK EQU   IDAPLH+264                                               03189000
PLHR13   EQU   IDAPLH+260                                               03190000
PLHPARM1 EQU   IDAPLH+256                                               03191000
PLHDRRSC EQU   IDAPLH+252                                               03192000
PLHSRCSG EQU   IDAPLH+242                                               03193000
PLHNOSEG EQU   IDAPLH+240                                               03194000
PLHLLOR  EQU   IDAPLH+236                                               03195000
PLHXPLH  EQU   PLHWAX                                                   03196000
@NM00017 EQU   PLHIXSPL+8                                               03197000
PLHIXBFC EQU   PLHIXSPL+4                                               03198000
PLHHIREC EQU   PLHSSRBA                                                 03199000
PLHISPLP EQU   IDAPLH+196                                               03200000
PLHRBUFC EQU   IDAPLH+192                                               03201000
PLHIBUFC EQU   IDAPLH+188                                               03202000
PLHNRBA  EQU   IDAPLH+184                                               03203000
PLHDDDD  EQU   PLHEOVPT                                                 03204000
PLHAR14  EQU   IDAPLH+176                                               03205000
@NM00016 EQU   IDAPLH+172                                               03206000
@NM00015 EQU   IDAPLH+168                                               03207000
PLHASAVE EQU   IDAPLH+164                                               03208000
PLHRETOS EQU   IDAPLH+118                                               03209000
PLHCHAIN EQU   IDAPLH+112                                               03210000
PLHAMB   EQU   IDAPLH+108                                               03211000
PLHARET  EQU   IDAPLH+80                                                03212000
PLHIIOB  EQU   PLHDIOB                                                  03213000
PLHSRSID EQU   IDAPLH+74                                                03214000
PLHRDFC  EQU   IDAPLH+72                                                03215000
PLHRDFP  EQU   IDAPLH+68                                                03216000
PLHFSP   EQU   IDAPLH+64                                                03217000
PLHRECP  EQU   IDAPLH+60                                                03218000
PLHNBUFC EQU   IDAPLH+56                                                03219000
PLHDBUFC EQU   IDAPLH+52                                                03220000
PLHLRECL EQU   IDAPLH+48                                                03221000
PLHARDB  EQU   IDAPLH+44                                                03222000
@NM00014 EQU   PLHRSCS                                                  03223000
PLHDBPER EQU   PLHRSCS                                                  03224000
PLHDSERR EQU   PLHRSCS                                                  03225000
PLHASYER EQU   PLHRSCS                                                  03226000
@NM00013 EQU   PLHRSCS                                                  03227000
PLHBUFHD EQU   PLHRSCS                                                  03228000
PLHINEOV EQU   PLHRSCS                                                  03229000
PLHEOVR  EQU   IDAPLH+42                                                03230000
PLHRCODE EQU   IDAPLH+41                                                03231000
PLHUCODE EQU   PLHJCODE                                                 03232000
PLHJNRBA EQU   IDAPLH+36                                                03233000
PLHJRNLL EQU   IDAPLH+32                                                03234000
PLHUPECB EQU   PLHJORBA                                                 03235000
PLHDSIDA EQU   IDAPLH+24                                                03236000
PLHCRPL  EQU   IDAPLH+20                                                03237000
PLHMRPL  EQU   IDAPLH+16                                                03238000
PLHBFRNO EQU   IDAPLH+15                                                03239000
PLHFRCNT EQU   IDAPLH+14                                                03240000
PLHRMIN  EQU   IDAPLH+13                                                03241000
PLHDSTYP EQU   IDAPLH+12                                                03242000
PLHACB   EQU   IDAPLH+8                                                 03243000
PLHRAE   EQU   PLHAFLGS                                                 03244000
PLHRABWD EQU   PLHAFLGS                                                 03245000
PLHIOSID EQU   PLHAFLGS                                                 03246000
PLHDBDC  EQU   PLHAFLGS                                                 03247000
PLHVAMB  EQU   PLHAFLGS                                                 03248000
PLHIOSRQ EQU   PLHAFLGS                                                 03249000
PLHDRLM  EQU   PLHAFLGS                                                 03250000
PLHEOVDF EQU   PLHFLG3                                                  03251000
PLHRVRS  EQU   PLHFLG3                                                  03252000
PLHBWD   EQU   PLHFLG3                                                  03253000
PLHRAHD  EQU   PLHFLG3                                                  03254000
PLHSRBSG EQU   PLHFLG3                                                  03255000
@NM00012 EQU   PLHEFLGS+1                                               03256000
PLHRSTRT EQU   PLHEFLGS+1                                               03257000
PLHDSCAN EQU   PLHEFLGS                                                 03258000
PLHINVAL EQU   PLHEFLGS                                                 03259000
PLHEODX  EQU   PLHEFLGS                                                 03260000
PLHNOADV EQU   PLHEFLGS                                                 03261000
PLHSRINV EQU   PLHEFLGS                                                 03262000
PLHSKPER EQU   PLHEFLGS                                                 03263000
PLH1ST   EQU   PLHEFLGS                                                 03264000
PLHNOSPC EQU   PLHEFLGS                                                 03265000
PLHIWAIT EQU   PLHFLG2                                                  03266000
PLHSVADV EQU   PLHFLG2                                                  03267000
PLHCIINS EQU   PLHFLG2                                                  03268000
PLHKRE   EQU   PLHFLG2                                                  03269000
PLHKEYMD EQU   PLHFLG2                                                  03270000
PLHSQINS EQU   PLHFLG2                                                  03271000
PLHUPD   EQU   PLHFLG2                                                  03272000
@NM00011 EQU   PLHFLG1                                                  03273000
PLHDRPND EQU   PLHFLG1                                                  03274000
PLHASYRQ EQU   PLHFLG1                                                  03275000
PLHRDEXC EQU   PLHFLG1                                                  03276000
PLHASKBF EQU   PLHFLG1                                                  03277000
PLHENDRQ EQU   PLHFLG1                                                  03278000
PLHEOVW  EQU   PLHFLG1                                                  03279000
PLHATV   EQU   IDAPLH+1                                                 03280000
PLHAVL   EQU   IDAPLH                                                   03281000
PLHIOSDQ EQU   IDAPLHDR+12                                              03282000
PLHDRCUR EQU   IDAPLHDR+10                                              03283000
PLHDRMAX EQU   IDAPLHDR+8                                               03284000
PLHDRREQ EQU   IDAPLHDR+4                                               03285000
PLHELTH  EQU   IDAPLHDR+2                                               03286000
PLHCNT   EQU   IDAPLHDR+1                                               03287000
PLHID    EQU   IDAPLHDR                                                 03288000
AMBLCMB  EQU   IDAAMBL+64                                               03289000
AMBLBIB  EQU   IDAAMBL+60                                               03290000
AMBLMIDS EQU   IDAAMBL+42                                               03291000
AMBLNIDS EQU   IDAAMBL+41                                               03292000
@NM00010 EQU   IDAAMBL+40                                               03293000
AMBLNUM  EQU   IDAAMBL+38                                               03294000
AMBLNST  EQU   IDAAMBL+37                                               03295000
@NM00009 EQU   AMBLFLG2                                                 03296000
AMBLSTAG EQU   AMBLFLG2                                                 03297000
@NM00008 EQU   AMBLFLG2                                                 03298000
AMBLDUMY EQU   AMBLFLG1                                                 03299000
AMBLCAT  EQU   AMBLFLG1                                                 03300000
AMBLUCRA EQU   AMBLFLG1                                                 03301000
AMBLSCRA EQU   AMBLFLG1                                                 03302000
AMBLVVIC EQU   AMBLFLG1                                                 03303000
AMBLUPD  EQU   AMBLFLG1                                                 03304000
AMBLCINV EQU   AMBLFLG1                                                 03305000
AMBLFULL EQU   AMBLFLG1                                                 03306000
AMBLLEN  EQU   IDAAMBL+34                                               03307000
@NM00007 EQU   AMBLSHAR                                                 03308000
AMBLWRIT EQU   AMBLSHAR                                                 03309000
AMBLCATO EQU   AMBLSHAR                                                 03310000
AMBLPRIM EQU   AMBLSHAR                                                 03311000
AMBLID   EQU   IDAAMBL+32                                               03312000
@NM00006 EQU   IDAAMBL+31                                               03313000
@NM00005 EQU   AMBLTYPE                                                 03314000
AMBLFIX  EQU   AMBLTYPE                                                 03315000
AMBLBASE EQU   AMBLTYPE                                                 03316000
AMBLAIX  EQU   AMBLTYPE                                                 03317000
AMBLUPGR EQU   AMBLTYPE                                                 03318000
AMBLPATH EQU   AMBLTYPE                                                 03319000
AMBLENO  EQU   AMBLVC+1                                                 03320000
AMBLVRT  EQU   AMBLVC                                                   03321000
AMBLXPT  EQU   IDAAMBL+24                                               03322000
AMBLDFR  EQU   AMBLQ                                                    03323000
AMBLESDS EQU   AMBLQ                                                    03324000
AMBLKSDS EQU   AMBLQ                                                    03325000
AMBLUBF  EQU   AMBLQ                                                    03326000
AMBLFSTP EQU   AMBLQ                                                    03327000
AMBLLSR  EQU   AMBLQ                                                    03328000
AMBLGSR  EQU   AMBLQ                                                    03329000
AMBLDDC  EQU   AMBLQ                                                    03330000
AMBLDCI  EQU   AMBLIDF+4                                                03331000
AMBLCACB EQU   AMBLIDF                                                  03332000
@NM00004 EQU   AMBLEOV+2                                                03333000
AMBLCOMP EQU   AMBLEOV+1                                                03334000
AMBLESET EQU   AMBLEFLG                                                 03335000
AMBLWAIT EQU   AMBLEFLG                                                 03336000
AMBLACB  EQU   IDAAMBL+8                                                03337000
AMBLSCHN EQU   IDAAMBL+4                                                03338000
AMBLPCHN EQU   IDAAMBL                                                  03339000
RPLERMSA EQU   RPLCOMN+72                                               03340000
RPLEMLEN EQU   RPLCOMN+70                                               03341000
RPLACTIV EQU   RPLCOMN+69                                               03342000
RPLBRANC EQU   RPLEXTD1                                                 03343000
RPLNIB   EQU   RPLEXTD1                                                 03344000
@NM00003 EQU   RPLEXTD1                                                 03345000
RPLEXIT  EQU   RPLEXTD1                                                 03346000
RPLNEXIT EQU   RPLEXTD1                                                 03347000
RPLEXSCH EQU   RPLEXTD1                                                 03348000
RPLDDDD  EQU   RPLRBAR+4                                                03349000
@NM00002 EQU   RPLRBAR+3                                                03350000
@NM00001 EQU   RPLAIXID                                                 03351000
RPLAXPKP EQU   RPLAIXID                                                 03352000
RPLAIXPC EQU   RPLRBAR                                                  03353000
RPLRSV88 EQU   RPLOPT8                                                  03354000
RPLUNCON EQU   RPLOPT8                                                  03355000
RPLACTV  EQU   RPLOPT8                                                  03356000
RPLSESS  EQU   RPLOPT8                                                  03357000
RPLPEND  EQU   RPLOPT8                                                  03358000
RPLODPRM EQU   RPLOPT8                                                  03359000
RPLODACP EQU   RPLOPT8                                                  03360000
RPLODACQ EQU   RPLOPT8                                                  03361000
RPLRSV78 EQU   RPLOPT7                                                  03362000
RPLRSV77 EQU   RPLOPT7                                                  03363000
RPLRLSOP EQU   RPLOPT7                                                  03364000
RPLTPOST EQU   RPLOPT7                                                  03365000
RPLQOPT  EQU   RPLOPT7                                                  03366000
RPLCNIMM EQU   RPLCNOPT                                                 03367000
RPLCNANY EQU   RPLCNOPT                                                 03368000
RPLCNALL EQU   RPLCNOPT                                                 03369000
RPLRSV68 EQU   RPLOPT6                                                  03370000
RPLRSV67 EQU   RPLOPT6                                                  03371000
RPLLOCK  EQU   RPLOPT6                                                  03372000
RPLNCOND EQU   RPLOPT6                                                  03373000
RPLCOND  EQU   RPLOPT6                                                  03374000
RPLEOT   EQU   RPLUNTYP                                                 03375000
RPLEOM   EQU   RPLUNTYP                                                 03376000
RPLEOB   EQU   RPLUNTYP                                                 03377000
RPLWROPT EQU   RPLOPT5                                                  03378000
RPLNODE  EQU   RPLOPT5                                                  03379000
RPLERACE EQU   RPLWRTYP                                                 03380000
RPLEAU   EQU   RPLWRTYP                                                 03381000
RPLNERAS EQU   RPLWRTYP                                                 03382000
RPLPSOPT EQU   RPLOPT5                                                  03383000
RPLSSNIN EQU   RPLOPT5                                                  03384000
RPLDLGIN EQU   RPLOPT5                                                  03385000
RPLBUFL  EQU   RPLCOMN+52                                               03386000
RPLRLEN  EQU   RPLCOMN+48                                               03387000
RPLCHAIN EQU   RPLNXTRP                                                 03388000
RPLOPT4  EQU   RPLOPTCD+3                                               03389000
RPLALIGN EQU   RPLOPT3                                                  03390000
RPLFMT   EQU   RPLOPT3                                                  03391000
RPLFLD   EQU   RPLOPT3                                                  03392000
RPLVFY   EQU   RPLOPT3                                                  03393000
RPLBLK   EQU   RPLOPT3                                                  03394000
RPLSFORM EQU   RPLOPT3                                                  03395000
RPLEODS  EQU   RPLOPT3                                                  03396000
RPLNSP   EQU   RPLOPT2                                                  03397000
RPLUPD   EQU   RPLOPT2                                                  03398000
RPLWAITX EQU   RPLOPT2                                                  03399000
RPLLRD   EQU   RPLOPT2                                                  03400000
RPLBWD   EQU   RPLOPT2                                                  03401000
RPLCNV   EQU   RPLOPT2                                                  03402000
RPLADD   EQU   RPLADR                                                   03403000
RPLKEY   EQU   RPLOPT2                                                  03404000
RPLECBIN EQU   RPLECBSW                                                 03405000
RPLGEN   EQU   RPLOPT1                                                  03406000
RPLKGE   EQU   RPLOPT1                                                  03407000
RPLASY   EQU   RPLOPT1                                                  03408000
RPLSKP   EQU   RPLOPT1                                                  03409000
RPLSEQ   EQU   RPLOPT1                                                  03410000
RPLDIR   EQU   RPLOPT1                                                  03411000
RPLLOC   EQU   RPLOPT1                                                  03412000
RPLDAF   EQU   RPLARG+2                                                 03413000
RPLSAF   EQU   RPLARG                                                   03414000
RPLAREA  EQU   RPLCOMN+32                                               03415000
RPLTCBPT EQU   RPLCOMN+28                                               03416000
RPLCCHAR EQU   RPLCOMN+20                                               03417000
RPLSTRID EQU   RPLCOMN+18                                               03418000
RPLKEYL  EQU   RPLKEYLE                                                 03419000
RPLRDSOH EQU   RPLFDB3                                                  03420000
RPLRLG   EQU   RPLFDB3                                                  03421000
RPLLGFRC EQU   RPLFDB3                                                  03422000
RPLREOT  EQU   RPLFDB3                                                  03423000
RPLREOM  EQU   RPLFDB3                                                  03424000
RPLREOB  EQU   RPLFDB3                                                  03425000
RPLSV32  EQU   RPLFDB3                                                  03426000
RPLUINPT EQU   RPLFDB3                                                  03427000
RPLSTSAV EQU   RPLFDB2                                                  03428000
RPLCUERR EQU   RPLFDB2                                                  03429000
RPLDLGFL EQU   RPLFDB2                                                  03430000
RPLIOERR EQU   RPLFDB2                                                  03431000
RPLDVUNS EQU   RPLFDB2                                                  03432000
RPLATND  EQU   RPLFDB2                                                  03433000
RPLRVID  EQU   RPLFDB2                                                  03434000
RPLERLK  EQU   RPLFDB2                                                  03435000
RPLSTAT  EQU   RPLFDBWD                                                 03436000
RPLPOST  EQU   RPLECB                                                   03437000
RPLWAIT  EQU   RPLECB                                                   03438000
RPLPLHPT EQU   RPLCOMN+4                                                03439000
RPLLEN2  EQU   RPLLEN                                                   03440000
RPLREQ   EQU   RPLIDWD+2                                                03441000
RPLSTYP  EQU   RPLIDWD+1                                                03442000
RPLID    EQU   RPLIDWD                                                  03443000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03444000
@RT00176 EQU   RJD                                                      03445000
@RT00305 EQU   RJA                                                      03446000
@RT00319 EQU   RJA                                                      03447000
@RF00419 EQU   RJL                                                      03448000
@RT00514 EQU   RJE                                                      03449000
@PB00008 EQU   @EC00735                                                 03450000
@PB00009 EQU   @PB00010                                                 03451000
@PB00007 EQU   @PB00008                                                 03452000
@PB00006 EQU   @PB00007                                                 03453000
@PB00005 EQU   @PB00006                                                 03454000
@PB00004 EQU   @PB00005                                                 03455000
@PB00003 EQU   @PB00004                                                 03456000
@PB00002 EQU   @PB00003                                                 03457000
@ENDDATA EQU   *                                                        03458000
         END   IDA019RJ,(C'PLS1716',0701,78209)                         03459000
