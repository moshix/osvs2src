         TITLE 'IDA019RM--VSAM DATA INSERT                             *00001000
                        '                                               00002000
IDA019RM CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RM  78.172'                                 0001 00009000
IDACHKKR DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00430-IDACHKKR)                                   00013000
         ENTRY IDACHKKR                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  BALR  @11,0                                               0001 00016000
@PSTART  DS    0H                                                  0001 00017000
         USING @PSTART,@11                                         0001 00018000
         AH    @15,4(,@15)                                         0001 00019000
         BR    @15                                                 0001 00020000
@EP00001 DS    0H                                                  0002 00021000
         IDASVR14                                                       00022000
*   IF PLHARDB=ZERO THEN            /* IF NOT SET,           @X04SVMR*/ 00023000
         L     @10,PLHARDB(,RPLH)                                  0156 00024000
         LTR   @10,@10                                             0156 00025000
         BNZ   @RF00156                                            0156 00026000
*     PLHARDB=AMDPARDB;             /* SET PLHARDB           @X04SVMR*/ 00027000
         L     @10,AMBDSB(,RAMB)                                   0157 00028000
         L     @10,AMDPARDB(,@10)                                  0157 00029000
         ST    @10,PLHARDB(,RPLH)                                  0157 00030000
*   IF(AMBCREAT=ON|AMDDST='0'B)&    /* IF CREATE AND         @ZA02289*/ 00031000
*       PLHLRECL>(AMDCINV-LENGTH(IDACIDF)-/* LAST RECORD     @ZA02289*/ 00032000
*       LENGTH(IDARDF))&            /* SPANNED AND           @ZA02289*/ 00033000
*       AMDRANGE=OFF THEN           /* NOT KEY RANGE         @ZA02289*/ 00034000
@RF00156 TM    AMBCREAT(RAMB),B'10000000'                          0158 00035000
         BO    @GL00002                                            0158 00036000
         L     @10,AMBDSB(,RAMB)                                   0158 00037000
         TM    AMDDST(@10),B'10000000'                             0158 00038000
         BNZ   @RF00158                                            0158 00039000
@GL00002 L     @10,AMBDSB(,RAMB)                                   0158 00040000
         L     @15,AMDCINV(,@10)                                   0158 00041000
         SL    @15,@CF00289                                        0158 00042000
         C     @15,PLHLRECL(,RPLH)                                 0158 00043000
         BNL   @RF00158                                            0158 00044000
         TM    AMDRANGE(@10),B'00000100'                           0158 00045000
         BNZ   @RF00158                                            0158 00046000
*     DO;                           /* CALL CI INIT.         @ZA02289*/ 00047000
*I01:                                                              0160 00048000
*       DO;                         /* IDACALL(IDA019SA)             */ 00049000
I01      DS    0H                                                  0161 00050000
*         CALL IDA019SA;            /* EXIT TO IDA019SA              */ 00051000
         L     @15,@CV00932                                        0161 00052000
         BALR  @14,@15                                             0161 00053000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00054000
         BALR @11,0                                                     00055000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00056000
         USING *,@11                                                    00057000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00058000
         L     @11,=A(@PSTART)                                          00059000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00060000
         USING @PSTART,@11                                              00061000
*       END I01;                    /*                       @ZA02289*/ 00062000
*       IF RPLERREG^=ZERO THEN      /* ERROR                 @ZA02289*/ 00063000
         CLI   RPLERREG(RRPL),0                                    0167 00064000
         BE    @RF00167                                            0167 00065000
*         CALL EXIT;                /* YES, LEAVE            @ZA02289*/ 00066000
         BAL   @14,EXIT                                            0168 00067000
*     END;                          /*                       @ZA02289*/ 00068000
@RF00167 DS    0H                                                  0170 00069000
*DISTART:                           /* START OF DATA INSERT          */ 00070000
*                                                                  0170 00071000
*   /*****************************************************************/ 00072000
*   /*                                                               */ 00073000
*   /* LOCATE ARDB AND PERFORM KEY RANGE VERIFICATION FOR KEY RANGE  */ 00074000
*   /* DATA SET.                                                     */ 00075000
*   /*                                                               */ 00076000
*   /*****************************************************************/ 00077000
*                                                                  0170 00078000
*   IF AMDRANGE=ON&PLHCIINS=OFF THEN/* KEY RANGE CHECK NEEDED        */ 00079000
@RF00158 DS    0H                                                  0170 00080000
DISTART  L     @10,AMBDSB(,RAMB)                                   0170 00081000
         TM    AMDRANGE(@10),B'00000100'                           0170 00082000
         BNO   @RF00170                                            0170 00083000
         TM    PLHCIINS(RPLH),B'00000100'                          0170 00084000
         BNZ   @RF00170                                            0170 00085000
*     DO;                           /* YES.                          */ 00086000
*       RWORK1=RPLAREA+AMDRKP;      /* POINT TO KEY                  */ 00087000
         LH    RWORK1,AMDRKP(,@10)                                 0172 00088000
         AL    RWORK1,RPLAREA(,RRPL)                               0172 00089000
*       RWORK2=AMDKEYLN;            /* PICK UP KEY LENGTH            */ 00090000
         LH    RWORK2,AMDKEYLN(,@10)                               0173 00091000
*       IF AMBCREAT=ON THEN         /* CREATE MODE                   */ 00092000
         TM    AMBCREAT(RAMB),B'10000000'                          0174 00093000
         BNO   @RF00174                                            0174 00094000
*         DO;                       /* YES.                          */ 00095000
*           RWORK3=PLHARDB;         /* CURRENT ARDB                  */ 00096000
         L     RWORK3,PLHARDB(,RPLH)                               0176 00097000
*           IF RWORK1->KEY(1:RWORK2)</* NEW KEY LESS THAN            */ 00098000
*               RWORK3->ARDKEYS(1:RWORK2) THEN/* ARDB LOW KEY        */ 00099000
         LR    @10,RWORK2                                          0177 00100000
         BCTR  @10,0                                               0177 00101000
         EX    @10,@SC01005                                        0177 00102000
         BNL   @RF00177                                            0177 00103000
*             DO;                   /* YES. ERROR                    */ 00104000
*KRERROR:                                                          0179 00105000
*               RPLERREG='08'X;     /* LOGICAL ERROR                 */ 00106000
KRERROR  MVI   RPLERREG(RRPL),X'08'                                0179 00107000
*               RPLERRCD=RPLNOKR;   /* NO KEY RANGE FOR RECORD       */ 00108000
         MVI   RPLERRCD(RRPL),X'24'                                0180 00109000
*               CALL EXIT;          /* RETURN                @ZA02289*/ 00110000
         BAL   @14,EXIT                                            0181 00111000
*             END;                  /* END OF ERROR CODE             */ 00112000
*           IF RWORK1->KEY(1:RWORK2)>/* NEW KEY GREATER THAN         */ 00113000
*               RWORK3->ARDKEYS(RWORK2+1:2*RWORK2) THEN/* ARDB HIGH  */ 00114000
@RF00177 LR    @10,RWORK2                                          0183 00115000
         ALR   @10,@10                                             0183 00116000
         SLR   @10,RWORK2                                          0183 00117000
         BCTR  @10,0                                               0183 00118000
         LR    @15,RWORK3                                          0183 00119000
         ALR   @15,RWORK2                                          0183 00120000
         EX    @10,@SC01007                                        0183 00121000
         BNH   @RF00183                                            0183 00122000
*             DO;                   /* YES.                          */ 00123000
*               IF RWORK3->ARDNPTR=ZERO THEN/* LAST KEY RANGE        */ 00124000
         L     @10,ARDNPTR(,RWORK3)                                0185 00125000
         LTR   @10,@10                                             0185 00126000
         BZ    @RT00185                                            0185 00127000
*                 GO TO KRERROR;    /* YES. ERROR                    */ 00128000
*               PLHKRE=ON;          /* INDICATE ENY OF KEY R.        */ 00129000
         OI    PLHKRE(RPLH),B'00001000'                            0187 00130000
*               PLHKEY(1:RWORK2)=RWORK3->/* PUT END OF KEY RANGE     */ 00131000
*                   ARDKEYS(RWORK2+1:2*RWORK2);/* VALUE IN PLHKEY    */ 00132000
         L     @10,PLHKEYPT(,RPLH)                                 0188 00133000
         LR    @15,RWORK2                                          0188 00134000
         BCTR  @15,0                                               0188 00135000
         LR    @14,RWORK3                                          0188 00136000
         ALR   @14,RWORK2                                          0188 00137000
         EX    @15,@SM01009                                        0188 00138000
*               IF PLHLRECL^>(AMDCINV-/* WAS LAST RECD       @ZA02289*/ 00139000
*                   LENGTH(IDACIDF)-/* A SPANNED             @ZA02289*/ 00140000
*                   LENGTH(IDARDF)) THEN/* RECORD            @ZA02289*/ 00141000
         L     @10,AMBDSB(,RAMB)                                   0189 00142000
         L     @10,AMDCINV(,@10)                                   0189 00143000
         SL    @10,@CF00289                                        0189 00144000
         C     @10,PLHLRECL(,RPLH)                                 0189 00145000
         BNL   @RT00189                                            0189 00146000
*                 GO TO CIFULL;     /* NO, NEW CI NEEDED             */ 00147000
*             END;                  /* END OF NEW KEY RANGE          */ 00148000
*           IF PLHLRECL>(AMDCINV-   /* IF LAST RECORD        @ZA02289*/ 00149000
*               LENGTH(IDACIDF)-    /* WAS A SPANNED         @ZA02289*/ 00150000
*               LENGTH(IDARDF)) THEN/* RECORD                @ZA02289*/ 00151000
@RF00183 L     @10,AMBDSB(,RAMB)                                   0192 00152000
         L     @10,AMDCINV(,@10)                                   0192 00153000
         SL    @10,@CF00289                                        0192 00154000
         C     @10,PLHLRECL(,RPLH)                                 0192 00155000
         BNL   @RF00192                                            0192 00156000
*             DO;                   /* THEN                  @ZA02289*/ 00157000
*I02:                                                              0194 00158000
*               DO;                 /* IDACALL(IDA019SA)             */ 00159000
I02      DS    0H                                                  0195 00160000
*                 CALL IDA019SA;    /* EXIT TO IDA019SA              */ 00161000
         L     @15,@CV00932                                        0195 00162000
         BALR  @14,@15                                             0195 00163000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00164000
         BALR @11,0                                                     00165000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00166000
         USING *,@11                                                    00167000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00168000
         L     @11,=A(@PSTART)                                          00169000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00170000
         USING @PSTART,@11                                              00171000
*               END I02;            /* CALL CI INIT.         @ZA02289*/ 00172000
*               PLHKRE=OFF;         /* ASSURE KR OFF         @ZA02289*/ 00173000
         NI    PLHKRE(RPLH),B'11110111'                            0201 00174000
*               IF RPLERREG^=ZERO THEN/* ERROR               @ZA02289*/ 00175000
         CLI   RPLERREG(RRPL),0                                    0202 00176000
         BE    @RF00202                                            0202 00177000
*                 CALL EXIT;        /* YES, GET OUT          @ZA02289*/ 00178000
         BAL   @14,EXIT                                            0203 00179000
*             END;                  /*                       @ZA02289*/ 00180000
*         END;                      /* END OF CREATE TESTING         */ 00181000
*       ELSE                        /* NON-CREATE MODE               */ 00182000
*         CALL IDACHKKR;            /* GO CHECK KEY RANGE            */ 00183000
         B     @RC00174                                            0206 00184000
@RF00174 L     @15,@CA00969                                        0206 00185000
         BALR  @14,@15                                             0206 00186000
*     END;                          /* END OF KEY RANGE TEST         */ 00187000
@RC00174 DS    0H                                                  0208 00188000
*   RWORK1=RPLRLEN;                 /* PICK UP RECORD LENGTH         */ 00189000
@RF00170 L     RWORK1,RPLRLEN(,RRPL)                               0208 00190000
*   RWORK2=PLHDBUFC->BUFCBAD+AMDCINV/* LOCATE CIDF                   */ 00191000
*       -LENGTH(IDACIDF);           /*                               */ 00192000
         L     @10,PLHDBUFC(,RPLH)                                 0209 00193000
         L     @15,AMBDSB(,RAMB)                                   0209 00194000
         L     RWORK2,BUFCBAD(,@10)                                0209 00195000
         AL    RWORK2,AMDCINV(,@15)                                0209 00196000
         SL    RWORK2,@CF00069                                     0209 00197000
*   PLHSAVE6=RWORK2;                /* SAVE PTR TO CIDF              */ 00198000
         ST    RWORK2,PLHSAVE6(,RPLH)                              0210 00199000
*   RWORK0=RWORK2->CIDFLL;          /* PICK UP FREE SPACE LTH        */ 00200000
         LH    RWORK0,CIDFLL(,RWORK2)                              0211 00201000
*   RESPECIFY                                                      0212 00202000
*     IDAARDB BASED(PLHARDB);                                      0212 00203000
*   IF PLHCIINS=OFF THEN            /* CALLED BY CI SPLIT            */ 00204000
         TM    PLHCIINS(RPLH),B'00000100'                          0213 00205000
         BNZ   @RF00213                                            0213 00206000
*     DO;                           /* NO.                           */ 00207000
*       IF(AMDDST='0'B|             /* END OF DATA?          @X04SVMR*/ 00208000
*           (PLHRECP=PLHFSP&BUFXIRBA=ARDHKRBA)) THEN/* YES.  @X04SVMR*/ 00209000
         TM    AMDDST(@15),B'10000000'                             0215 00210000
         BZ    @RT00215                                            0215 00211000
         CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0215 00212000
         BNE   @RF00215                                            0215 00213000
         L     @15,PLHARDB(,RPLH)                                  0215 00214000
         CLC   BUFXIRBA(4,@10),ARDHKRBA(@15)                       0215 00215000
         BNE   @RF00215                                            0215 00216000
@RT00215 DS    0H                                                  0216 00217000
*         PLHADDTE=ON;              /* SET ADD TO END FLAG           */ 00218000
         OI    PLHADDTE(RPLH),B'00010000'                          0216 00219000
*       ELSE                        /*                               */ 00220000
*         PLHADDTE=OFF;             /* RESET ADD TO END              */ 00221000
         B     @RC00215                                            0217 00222000
@RF00215 NI    PLHADDTE(RPLH),B'11101111'                          0217 00223000
*       IF RWORK1>AMDCINV-(LENGTH(IDACIDF)/* IS RECORD A     @ZA02289*/ 00224000
*           +LENGTH(IDARDF)) THEN   /* SPANNED RECORD        @ZA02289*/ 00225000
@RC00215 L     @10,AMBDSB(,RAMB)                                   0218 00226000
         L     @10,AMDCINV(,@10)                                   0218 00227000
         SL    @10,@CF00289                                        0218 00228000
         CR    RWORK1,@10                                          0218 00229000
         BNH   @RF00218                                            0218 00230000
*         DO;                       /* YES, CALL RT          @ZA02289*/ 00231000
*I03:                                                              0220 00232000
*           DO;                     /* IDACALL(IDA019RT)             */ 00233000
I03      DS    0H                                                  0221 00234000
*             CALL IDA019RT;        /* EXIT TO IDA019RT              */ 00235000
         L     @15,@CV00930                                        0221 00236000
         BALR  @14,@15                                             0221 00237000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00238000
         BALR @11,0                                                     00239000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00240000
         USING *,@11                                                    00241000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00242000
         L     @11,=A(@PSTART)                                          00243000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00244000
         USING @PSTART,@11                                              00245000
*           END I03;                /*                       @ZA02289*/ 00246000
*           CALL EXIT;              /* RETURN                @ZA02289*/ 00247000
         BAL   @14,EXIT                                            0227 00248000
*         END;                      /*                       @ZA02289*/ 00249000
*       IF RWORK2->CIDFOSET^=ZERO THEN/* INSERT TO EMPTY CI          */ 00250000
@RF00218 LH    @10,CIDFOSET(,RWORK2)                               0229 00251000
         LTR   @10,@10                                             0229 00252000
         BZ    @RF00229                                            0229 00253000
*         DO;                       /*                               */ 00254000
*           IF RPLSEQ=ON&           /* SEQ REQ AND           @X04SVMR*/ 00255000
*               RPLUPD=OFF&         /* INSERT AND            @X04SVMR*/ 00256000
*               PLHRECP=PLHFSP THEN /* AT END OF CI,         @X04SVMR*/ 00257000
         TM    RPLSEQ(RRPL),B'00100000'                            0231 00258000
         BNO   @RF00231                                            0231 00259000
         TM    RPLUPD(RRPL),B'00000010'                            0231 00260000
         BNZ   @RF00231                                            0231 00261000
         CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0231 00262000
         BNE   @RF00231                                            0231 00263000
*             RWORK1=RWORK1+AMDFSCI;/* ADD FREE SPACE                */ 00264000
         L     @10,AMBDSB(,RAMB)                                   0232 00265000
         AL    RWORK1,AMDFSCI(,@10)                                0232 00266000
*         END;                      /* END OF NON-EMPTY TEST         */ 00267000
@RF00231 DS    0H                                                  0234 00268000
*     END;                          /* END NOT CI SPLIT CALL         */ 00269000
@RF00229 DS    0H                                                  0235 00270000
*   IF RWORK1>RWORK0|               /* IF RECORD TOO BIG     @ZA18985*/ 00271000
*       PLHRDFP->RDFNOT1=ON|        /* OR SPANNED            @ZA18985*/ 00272000
*       PLHRDFP->RDF1ST=ON THEN     /* RECORD SEGMENT        @ZA18985*/ 00273000
@RF00213 CLR   RWORK1,RWORK0                                       0235 00274000
         BH    @RT00235                                            0235 00275000
         L     @10,PLHRDFP(,RPLH)                                  0235 00276000
         TM    RDFNOT1(@10),B'00110000'                            0235 00277000
         BNZ   @RT00235                                            0235 00278000
*     GO TO CIFULL;                 /* NO ROOM OR S.R.       @ZA05900*/ 00279000
*   ELSE                            /* THERE IS ENOUGH SPACE @ZA14788*/ 00280000
*     PLHSAVE1=RWORK0-RWORK1;       /* ROOM FOR RDF          @ZA19548*/ 00281000
         LR    @10,RWORK0                                          0237 00282000
         SLR   @10,RWORK1                                          0237 00283000
         ST    @10,PLHSAVE1(,RPLH)                                 0237 00284000
*   IF BUFCMW=ON THEN               /* MUST WRITE ON         @ZA19548*/ 00285000
         L     @10,PLHDBUFC(,RPLH)                                 0238 00286000
         TM    BUFCMW(@10),B'10000000'                             0238 00287000
         BNO   @RF00238                                            0238 00288000
*     RWORK3=BUFCORBA;              /* USE OUTPUT RBA        @ZA19548*/ 00289000
         L     RWORK3,BUFCORBA(,@10)                               0239 00290000
*   ELSE                            /* NO                    @ZA19548*/ 00291000
*     RWORK3=BUFCDDDD;              /* USE INPUT RBA         @ZA19548*/ 00292000
         B     @RC00238                                            0240 00293000
@RF00238 L     @10,PLHDBUFC(,RPLH)                                 0240 00294000
         L     RWORK3,BUFCDDDD(,@10)                               0240 00295000
*   RPLDDDD=RWORK3+(PLHRECP-BUFCBAD);/* SET RECORD RBA       @ZA19548*/ 00296000
@RC00238 L     @10,PLHDBUFC(,RPLH)                                 0241 00297000
         L     @15,PLHRECP(,RPLH)                                  0241 00298000
         SL    @15,BUFCBAD(,@10)                                   0241 00299000
         ALR   @15,RWORK3                                          0241 00300000
         ST    @15,RPLDDDD(,RRPL)                                  0241 00301000
*   IF AMBUPX=ON&                   /* IF UPGRADE AND        @ZA19548*/ 00302000
*       AMDDST='0'B THEN            /* ESDS AND              @ZA19548*/ 00303000
         TM    AMBUPX(RAMB),B'00000010'                            0242 00304000
         BNO   @RF00242                                            0242 00305000
         L     @10,AMBDSB(,RAMB)                                   0242 00306000
         TM    AMDDST(@10),B'10000000'                             0242 00307000
         BNZ   @RF00242                                            0242 00308000
*     DO;                           /*                       @ZA19548*/ 00309000
*                                                                  0243 00310000
*       /*************************************************************/ 00311000
*       /*                                                           */ 00312000
*       /* IF UPGRADE OF ESDS THEN ENSURE ROOM FOR RDF               */ 00313000
*       /*                                                           */ 00314000
*       /*************************************************************/ 00315000
*                                                                  0244 00316000
*       IF PLHSAVE1<LENGTH(IDARDF) THEN/* NO ROOM FOR MAXIMUM RDFS   */ 00317000
         LA    @10,3                                               0244 00318000
         C     @10,PLHSAVE1(,RPLH)                                 0244 00319000
         BNH   @RF00244                                            0244 00320000
*         DO;                                                      0245 00321000
*                                                                  0245 00322000
*           /*********************************************************/ 00323000
*           /*                                                       */ 00324000
*           /* IF THERE IS NOT ROOM FOR 1 RDF THEN FOR RECORD TO FIT */ 00325000
*           /* THE LAST RECORDS IN THE CI MUST BE REPEATED AND THE   */ 00326000
*           /* SAME LENGTH AS THE RECORD TO BE INSERTED.             */ 00327000
*           /*                                                       */ 00328000
*           /*********************************************************/ 00329000
*                                                                  0246 00330000
*           RWORK3=RWORK0+RWORK2->CIDFOSET;/* PT LAST RDF    @ZA19548*/ 00331000
         LR    RWORK3,RWORK0                                       0246 00332000
         LH    @15,CIDFOSET(,RWORK2)                               0246 00333000
         ALR   RWORK3,@15                                          0246 00334000
*           IF RWORK3->RDFREPL=OFF| /* IF NO REPEATS         @ZA19548*/ 00335000
*               (RWORK3+LENGTH(IDARDF))->RDFLL^=RPLRLEN THEN/* NEW 0247 00336000
*                                      RECORD NOT EQUAL      @ZA19548*/ 00337000
         TM    RDFREPL(RWORK3),B'00001000'                         0247 00338000
         BZ    @RT00247                                            0247 00339000
         ALR   @10,RWORK3                                          0247 00340000
         SLR   @15,@15                                             0247 00341000
         ICM   @15,3,RDFLL(@10)                                    0247 00342000
         C     @15,RPLRLEN(,RRPL)                                  0247 00343000
         BNE   @RT00247                                            0247 00344000
*             GOTO CIFULL;          /* SPLIT CI NOW          @ZA19548*/ 00345000
*         END;                      /*                       @ZA19548*/ 00346000
*                                                                  0249 00347000
*       /*************************************************************/ 00348000
*       /*                                                           */ 00349000
*       /* UPGRADE ANY ALTERNATE INDEX THAT MAY EXIST BEFORE DOING   */ 00350000
*       /* THE INSERT OF THE RECORD INTO A BASE ESDS. (KSDS UPGRADE  */ 00351000
*       /* IS CALLED BY IDA019R4.)                           @ZA19548*/ 00352000
*       /*                                                           */ 00353000
*       /*************************************************************/ 00354000
*                                                                  0250 00355000
*I04:                                                              0250 00356000
*       DO;                         /* IDACALL(IDA019RU)             */ 00357000
@RF00244 DS    0H                                                  0250 00358000
I04      DS    0H                                                  0251 00359000
*         CALL IDA019RU;            /* EXIT TO IDA019RU              */ 00360000
         L     @15,@CV00931                                        0251 00361000
         BALR  @14,@15                                             0251 00362000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00363000
         BALR @11,0                                                     00364000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00365000
         USING *,@11                                                    00366000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00367000
         L     @11,=A(@PSTART)                                          00368000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00369000
         USING @PSTART,@11                                              00370000
*       END I04;                    /* DO THE UPGRADE.       @ZA19548*/ 00371000
*                                                                  0256 00372000
*       /*************************************************************/ 00373000
*       /*                                                           */ 00374000
*       /* RESTORE REGISTERS TO BUILD RDF                    @ZA19548*/ 00375000
*       /*                                                           */ 00376000
*       /*************************************************************/ 00377000
*                                                                  0257 00378000
*       RWORK2=PLHSAVE6;            /* RESTORE CIDF PTR      @ZA19548*/ 00379000
         L     RWORK2,PLHSAVE6(,RPLH)                              0257 00380000
*       RWORK0=RWORK2->CIDFLL;      /* RESTORE FREE SPACE    @ZA19548*/ 00381000
         LH    RWORK0,CIDFLL(,RWORK2)                              0258 00382000
*       IF RPLERREG^=ZERO THEN      /* IF ERROR              @ZA19548*/ 00383000
         CLI   RPLERREG(RRPL),0                                    0259 00384000
         BE    @RF00259                                            0259 00385000
*         DO;                       /*                       @ZA19548*/ 00386000
*           IF RWORK2->CIDFOSET=0&  /* INSERT BEGINNING      @ZA19548*/ 00387000
*               ARDHRBA=RPLDDDD+AMDCINV THEN/* IF ADDING NEW         */ 00388000
         LH    @10,CIDFOSET(,RWORK2)                               0261 00389000
         LTR   @10,@10                                             0261 00390000
         BNZ   @RF00261                                            0261 00391000
         L     @10,PLHARDB(,RPLH)                                  0261 00392000
         L     @15,ARDHRBA(,@10)                                   0261 00393000
         L     @14,AMBDSB(,RAMB)                                   0261 00394000
         L     @14,AMDCINV(,@14)                                   0261 00395000
         L     @09,RPLDDDD(,RRPL)                                  0261 00396000
         ALR   @09,@14                                             0261 00397000
         CLR   @15,@09                                             0261 00398000
         BNE   @RF00261                                            0261 00399000
*             DO;                   /* CI AT END OF ESDS     @ZA19548*/ 00400000
*               ARDHRBA=ARDHRBA-AMDCINV;/* BACK UP EOD       @ZA19548*/ 00401000
         SLR   @15,@14                                             0263 00402000
         ST    @15,ARDHRBA(,@10)                                   0263 00403000
*               BUFCMW=OFF;         /* FORCE NO WRITE        @ZA19548*/ 00404000
         L     @10,PLHDBUFC(,RPLH)                                 0264 00405000
         NI    BUFCMW(@10),B'01111111'                             0264 00406000
*               BUFCVAL=OFF;        /* BUFFER IS INVALID     @ZA19548*/ 00407000
         NI    BUFCVAL(@10),B'11111011'                            0265 00408000
*             END;                  /*                       @ZA19548*/ 00409000
*           CALL EXIT;              /* EXIT MODULE.          @ZA19548*/ 00410000
@RF00261 BAL   @14,EXIT                                            0267 00411000
*         END;                      /*                       @ZA19548*/ 00412000
*     END;                          /*                       @ZA19548*/ 00413000
@RF00259 DS    0H                                                  0270 00414000
*   RESPECIFY                                                      0270 00415000
*    (RWORK4,                                                      0270 00416000
*     RWORK5,                                                      0270 00417000
*     R10,                                                         0270 00418000
*     R14,                                                         0270 00419000
*     R15) RSTD;                                                   0270 00420000
@RF00242 DS    0H                                                  0271 00421000
*   GEN REFS(PLHRDFP,PLHSAVE2,PLHRDFC,RDFRBYTE);                   0271 00422000
*                                                                       00423000
*        BUILD RDF PROCESSING                                           00424000
*                                                                       00425000
C1       EQU   1                            CONSTANT 1                  00426000
TWO      EQU   2                            CONSTANT 2                  00427000
D0       EQU   0                            CONSTANT 0                  00428000
C3       EQU   3                            CONSTANT 3                  00429000
C4       EQU   4                            CONSTANT 4                  00430000
C7       EQU   7                            CONSTANT 7                  00431000
         L     RWORK1,RPLRLEN(,RRPL)        PICK UP NEW RECORD LENGTH   00432000
         SR    R15,R15                      CLEAR REGISTER              00433000
*  RWORK2 CONTAINS POINTER TO CIDF                                      00434000
*  RWORK0 CONTAINS CIDFLL VALUE                                         00435000
         L     RWORK4,PLHDBUFC(,RPLH)       POINT TO BUFC               00436000
         A     RWORK0,BUFCBAD(,RWORK4)      ADD BUF START TO LL         00437000
         AH    RWORK0,CIDFOSET(,RWORK2)     LOCATION OF LAST RDF        00438000
*  RWORK0 NOW CONTAINS POINTER TO LAST RDF                              00439000
         CLC   PLHRECP(C4,RPLH),PLHFSP(RPLH) INSERT TO END OF CI        00440000
         BNE   BLD00050                     NO.                         00441000
         SR    RPARM1,RPARM1                OFFSET TO PREVIOUS RDF      00442000
         LR    R10,RWORK0                   SET LAST RDF PTR IN R10     00443000
         ST    R10,PLHRDFP(,RPLH)           PUT PTR IN PLH              00444000
         B     BLD00215                     GO TEST FOR BEGINNING INSRT 00445000
BLD00050 L     R10,PLHRDFP(,RPLH)           LOAD PTR TO CURRENT RDF     00446000
         TM    RDFRBYTE(R10),RDFREPLA       CURRENT RDF A GROUP         00447000
         BNO   BLD00200                     NO.                         00448000
         ICM   R15,C3,RDFLEN+RDFLLOFF(R10)  GET LL FROM COMPLEX RDF     00449000
         CR    RWORK1,R15                   NEW RECORD LTH =            00450000
         BNE   BLD00100                     NO.                         00451000
         ICM   R15,C3,RDFLLOFF(R10)         INCREMENT                   00452000
         LA    R15,C1(,R15)                 COUNT                       00453000
         STCM  R15,C3,RDFLLOFF(R10)         BY 1.                       00454000
         B     BLDEXIT                      EXIT                        00455000
BLD00100 CLC   PLHRDFC(TWO,RPLH),RDFLLOFF(R10) POSITIONED BEFORE GROUP  00456000
         BNE   BLD00110                     NO.                         00457000
         LA    RPARM1,TWO*RDFLEN            OFFSET TO PREVIOUS RDF      00458000
         B     BLD00215                     GO TEST FOR BEGINNING INSRT 00459000
BLD00110 CLC   RDFLLOFF(TWO,R10),=H'2'      IS THIS A 2 RECORD GROUP    00460000
         BNE   BLD00120                     NO.                         00461000
         LA    RPARM1,RDFLEN                ASK FOR RDFLEN BYTES        00462000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00463000
         NI    TWO*RDFLEN(R10),RDFCTNUX     RESET COMPLEX RDF INDICATOR 00464000
         ICM   R15,C7,TWO*RDFLEN(R10)       COPY                        00465000
         STCM  R15,C7,D0(R10)               RDF                         00466000
         B     BLD00150                     GO BUILD RDF FOR INSERT     00467000
BLD00120 ICM   R15,C3,RDFLLOFF(R10)         PICK UP GROUP COUNT         00468000
         BCTR  R15,D0                       REDUCE BY ONE               00469000
         CH    R15,PLHRDFC(,RPLH)           POSITIONED 1 REC. FROM END  00470000
         BNE   BLD00130                     NO.                         00471000
*              ONE RECORD MUST BE REMOVED FROM THE GROUP RDF.           00472000
*              THE INSERT RECORD RDF WILL BE PLACED BETWEEN THE         00473000
*              REMAINING GROUP RDF AND THE SINGLE RECORD RDF.           00474000
         LA    RPARM1,TWO*RDFLEN            ASK FOR 2*RDFLEN BYTES      00475000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00476000
         MVC   D0(TWO*RDFLEN,R10),TWO*RDFLEN(R10) COPY RDF              00477000
         STCM  R15,C3,RDFLLOFF(R10)         SET COUNT=OLD COUNT - 1     00478000
         NI    C3*RDFLEN(R10),RDFCTNUX      RESET COMPLEX RDF INDICATOR 00479000
         B     BLD00150                     GO BUILD RDF FOR INSERT     00480000
BLD00130 LA    RPARM1,C1                    SEE IF PTR IS 1 RECORD      00481000
         CH    RPARM1,PLHRDFC(,RPLH)        FROM END OF GROUP           00482000
         BNE   BLD00140                     NO.                         00483000
*              SIMILAR TO PREVIOUS CASE. ONE RECORD MUST BE REMOVED     00484000
*              FROM THE GROUP RDF. IN THIS CASE THE SINGLE RECORD RDF   00485000
*              AND FOLLOWING RDF FOR INSERT RECORD WILL PRECEDE THE     00486000
*              REMAINING GROUP RDF.                                     00487000
*              R15  CONTAINS THE GROUP COUNT NEW VALUE.                 00488000
         LA    RPARM1,TWO*RDFLEN            ASK FOR 2*RDFLEN BYTES      00489000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00490000
         STCM  R15,C3,TWO*RDFLEN+RDFLLOFF(R10) STORE DECREMENTED COUNT  00491000
         ICM   R15,C7,C3*RDFLEN(R10)        PICK UP RDF WITH LL         00492000
         STCM  R15,C7,D0(R10)               STORE AS SINGLE RECORD RDF  00493000
         NI    D0(R10),RDFCTNUX             RESET COMPLEX RDF INDICATOR 00494000
         LA    RPARM1,RDFLEN                SET OFFSET FOR NEW RDF      00495000
         B     BLD00150                     GO BUILD RDF FOR INSERT     00496000
BLD00140 DS    0H                                                       00497000
*        THE GROUP RDF MUST BE SPLIT INTO TWO GROUP RDFS AND            00498000
*              THE INSERT RECORD RDF PLACED BETWEEN THE TWO.            00499000
         LA    RPARM1,C3*RDFLEN             ASK FOR 3*RDFLEN BYTES      00500000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00501000
         MVC   D0(TWO*RDFLEN,R10),C3*RDFLEN(R10) COPY RDF               00502000
         LH    RPARM1,PLHRDFC(,RPLH)        PICK UP PLH COUNT           00503000
         ICM   R15,C3,RDFLLOFF(R10)         PICK UP GROUP COUNT         00504000
         SR    R15,RPARM1                   COUNT VALUE FOR LEFT RDF    00505000
         STCM  RPARM1,C3,RDFLLOFF(R10)      = PLHRDFC                   00506000
         STCM  R15,C3,C3*RDFLEN+RDFLLOFF(R10) SET RIGHT RDF COUNT       00507000
         LA    RPARM1,TWO*RDFLEN            OFFSET FOR INSERT REC. RDF  00508000
BLD00150 DS    0H                                                       00509000
*              BUILD SINGLE RECORD RDF FOR INSERT RECORD.               00510000
*              RPARM1 CONTAINS OFFSET TO BE ADDED TO R10 TO             00511000
*              LOCATE POSITION AT WHICH RDF WILL BE PLACED.             00512000
         AR    R10,RPARM1                   INSERT RDF POSITION         00513000
         MVI   RDFRBYTE(R10),RDFSGLR        SET SINGLE RECORD R-BYTE    00514000
         STCM  RWORK1,C3,RDFLLOFF(R10)      SET INSERT REC. LENGTH      00515000
         B     BLDEXIT                      FINISHED                    00516000
BLD00200 DS    0H                                                       00517000
*              INSERT IS NOT TO THE END OF CONTROL INTERVAL AND         00518000
*              RDF OF RECORD FOLLOWING INSERT IS NOT A GROUP RDF        00519000
         ICM   R15,C3,RDFLLOFF(R10)         PICK UP LL OF NEXT RECORD   00520000
         CR    R15,RWORK1                   LL SAME AS INSERT REC. LL   00521000
         BNE   BLD00210                     NO.                         00522000
BLD00205 LA    RPARM1,RDFLEN                ASK FOR RDFLEN BYTES        00523000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00524000
         OI    RDFLEN+RDFRBYTE(R10),RDFCTNUA SET COMPLEX RDF FLAG       00525000
         MVI   RDFRBYTE(R10),RDFCNT         SET COUNT R-BYTE            00526000
         LA    R15,TWO                      COUNT VALUE = 2             00527000
         STCM  R15,C3,RDFLLOFF(R10)         SET VALUE IN RDF            00528000
         B     BLDEXIT                      EXIT                        00529000
BLD00210 DS    0H                                                       00530000
*              NEW RECORD LENGTH IS NOT EQUAL TO LENGTH                 00531000
*              OF NEXT RECORD IN CONTROL INTERVAL.                      00532000
         LA    RPARM1,RDFLEN                OFFSET TO PREVIOUS RDF      00533000
BLD00215 AR    R10,RPARM1                   POINT TO PREVIOUS RDF       00534000
         L     RWORK4,PLHDBUFC(,RPLH)       PTR TO DATA BUFC            00535000
         L     RWORK4,BUFCBAD(,RWORK4)      PTR TO BUFFER               00536000
         C     RWORK4,PLHRECP(,RPLH)        INSERT PTR = START OF BUF   00537000
         BE    BLD00230                     YES.                        00538000
*              INSERT IS NOT OT BEGINNING OF CONTROL INTERVAL.          00539000
*              COMPARE INSERT RECORD LL WITH PREVIOUS RECORD LL.        00540000
         TM    RDFRBYTE(R10),RDFREPLA       PREVIOUS RDF A COUNT        00541000
         BNO   BLD00220                     NO.                         00542000
         ICM   R15,C3,RDFLEN+RDFLLOFF(R10)  PICK UP LL OF GROUP         00543000
         CR    RWORK1,R15                   NEW RECORD LL = GROUP LL    00544000
         BNE   BLD00230                     NO.                         00545000
*              NEW RECORD LENGTH IS = TO LENGTH OF PREVIOUS RECORD IN   00546000
*              CONTROL INTERVAL. PREVIOUS RECORD IS 1ST OF A GROUP.     00547000
*              NEED ONLY INCREMENT GROUP COUNT BY 1.                    00548000
         ICM   R15,C3,RDFLLOFF(R10)         PICK UP GROUP COUNT         00549000
         LA    R15,C1(,R15)                 ADD1                        00550000
         STCM  R15,C3,RDFLLOFF(R10)         STORE NEW COUNT             00551000
         B     BLDEXIT                      EXIT                        00552000
BLD00220 ICM   R15,C3,RDFLLOFF(R10)         PICK UP PREVIOUS RECORD LL  00553000
         CR    RWORK1,R15                   NEW RECORD LL = PREVIOUS LL 00554000
         BE BLD00205                        YES.                        00555000
BLD00230 DS    0H                                                       00556000
*              A SINGLE RECORD RDF MUST BE BUILD FOR THE                00557000
*              INSERT RECORD.                                           00558000
         LA    RPARM1,RDFLEN                ASK FOR RDFLEN BYTES        00559000
         BAL   R14,GETRDFSP                 GET RDF SPACE               00560000
         MVI   RDFRBYTE(R10),RDFSGLR        SET SINGLE RECORD R-BYTE    00561000
         STCM  RWORK1,C3,RDFLLOFF(R10)      SET NEW RECORD LL           00562000
         B     BLDEXIT                      EXIT                        00563000
*              GETRDFSP SUBROUTINE                                      00564000
*        INPUT -                                                        00565000
*              REG  R10 -POINTER TO RDF, RDFS TO THE LEFT OF THE        00566000
*                        PTR ARE TO BE MOVED LEFT TO PROVIDE            00567000
*                        REQUESTED SPACE.                               00568000
*              REG  RPARM1 - NUMBER OF BYTES REQUESTED                  00569000
*              REG  RWORK2 - POINTER TO CIDF                            00570000
*              PLHSAVE1 - NUMBER OF BYTES AVAILABLE IN CI FOR RDFS      00571000
*        OUTPUT -                                                       00572000
*              REG  R10 -POINTER TO RDF SPACE OBTAINED                  00573000
*              PLHRDFP  -SET = R10 OUTPUT VALUE                         00574000
*              CIDFLL   -DECREMENED BY NUMBER OF BYTES REQUESTED        00575000
*        WORK REGISTERS - RWORK3,RWORK4,RWORK5                          00576000
*        ALL OTHER REGISTERS REMAIN SAME AS ON ENTRY.                   00577000
*         EXITS- BR R14 IF SPACE AVAILABLE                              00578000
*              - B  CIFULL IF SPACE NOT AVAILABLE                       00579000
*                                                                       00580000
GETRDFSP DS    0H                                                       00581000
         C     RPARM1,PLHSAVE1(,RPLH)                                   00582000
         BH    CIFULL                       CI IS FULL                  00583000
         LR    RWORK4,RWORK0                POINT RWORK4 TO LAST RDF    00584000
         LR    RWORK5,R10                   COPY CURRENT RDF PTR        00585000
         SR    RWORK5,RWORK4                NUMBER OF BYTES TO MOVE     00586000
         LH    RWORK3,CIDFLL(,RWORK2)       CURRENT CIDFLL              00587000
         SR    RWORK3,RPARM1                REDUCE BY REQUEST AMOUNT    00588000
         STH   RWORK3,CIDFLL(,RWORK2)       STORE NEW CIDFLL VALUE      00589000
         ST    RWORK2,PLHSAVE2(,RPLH)       SAVE PTR TO CIDF            00590000
         LR    RWORK2,RWORK4                COPY PTR TO LAST RDF        00591000
         SR    RWORK2,RPARM1                BACKUP BY REQUEST AMOUNT    00592000
         LR    RWORK3,RWORK5                COPY MOVE LENGTH            00593000
         MVCL  RWORK2,RWORK4                MOVE RDFS LEFT              00594000
         L     RWORK2,PLHSAVE2(,RPLH)       RESTORE PTR TO CIDF         00595000
         SR    R10,RPARM1                   BACKUP R10                  00596000
         L     RWORK3,PLHRDFP(,RPLH)        PICK UP RDF PTR             00597000
         SR    RWORK3,RPARM1                BACKUP BY REQUEST AMOUNT    00598000
         ST    RWORK3,PLHRDFP(,RPLH)        SET NEW VALUE IN PLH        00599000
         BR    R14                          RETURN                      00600000
BLDEXIT  DS    0H                                                       00601000
*   RESPECIFY                                                      0272 00602000
*    (RWORK4,                                                      0272 00603000
*     RWORK5,                                                      0272 00604000
*     R10,                                                         0272 00605000
*     R14,                                                         0272 00606000
*     R15) UNRSTD;                                                 0272 00607000
*                                                                  0273 00608000
*   /*****************************************************************/ 00609000
*   /*                                                               */ 00610000
*   /* MOVE DATA TO RIGHT WITHIN CONTROL INTERVAL TO FORM SPACE FOR  */ 00611000
*   /* INSERT.                                                       */ 00612000
*   /*                                                               */ 00613000
*   /*****************************************************************/ 00614000
*                                                                  0273 00615000
*   IF PLHFSP^=PLHRECP THEN         /* ANY DATA TO MOVE              */ 00616000
         L     @10,PLHFSP(,RPLH)                                   0273 00617000
         L     @15,PLHRECP(,RPLH)                                  0273 00618000
         CR    @10,@15                                             0273 00619000
         BE    @RF00273                                            0273 00620000
*     DO;                           /* YES.                          */ 00621000
*       RWORK0=RPLRLEN;             /* INSERT LENGTH                 */ 00622000
         L     RWORK0,RPLRLEN(,RRPL)                               0275 00623000
*       RBUFC=PLHFSP;               /* SET TO PTR                    */ 00624000
         LR    RBUFC,@10                                           0276 00625000
*       RPARM1=RBUFC-PLHRECP;       /* TOTAL AMOUNT TO MOVE          */ 00626000
         LCR   @15,@15                                             0277 00627000
         ALR   @15,RBUFC                                           0277 00628000
         LR    RPARM1,@15                                          0277 00629000
*PARTMOVE:                                                         0278 00630000
*       DO WHILE RPARM1=>RWORK0;    /* MOVE PARTS                    */ 00631000
PARTMOVE B     @DE00278                                            0278 00632000
@DL00278 DS    0H                                                  0279 00633000
*         RWORK2=RBUFC-RWORK0;      /* SET FROM PTR                  */ 00634000
         LR    RWORK2,RBUFC                                        0279 00635000
         SLR   RWORK2,RWORK0                                       0279 00636000
*         PLHSAVE1=RWORK2;          /* SAVE FROM PTR                 */ 00637000
         ST    RWORK2,PLHSAVE1(,RPLH)                              0280 00638000
*         RWORK1=RWORK0;            /* MVCL LENGTH                   */ 00639000
         LR    RWORK1,RWORK0                                       0281 00640000
*         RWORK3=RWORK0;            /* COPY LENGTH                   */ 00641000
         LR    RWORK3,RWORK0                                       0282 00642000
*         GEN(MVCL RBUFC,RWORK2);   /* MOVE DATA RIGHT               */ 00643000
         MVCL RBUFC,RWORK2                                              00644000
*         RBUFC=PLHSAVE1;           /* NEXT TO PTR                   */ 00645000
         L     RBUFC,PLHSAVE1(,RPLH)                               0284 00646000
*         RPARM1=RPARM1-RWORK0;     /* AMOUNT LEFT TO MOVE           */ 00647000
         SLR   RPARM1,RWORK0                                       0285 00648000
*       END PARTMOVE;               /* END OF MOVE PARTS             */ 00649000
@DE00278 CLR   RPARM1,RWORK0                                       0286 00650000
         BNL   @DL00278                                            0286 00651000
*       RWORK2=PLHRECP;             /* SET FROM PTR                  */ 00652000
         L     RWORK2,PLHRECP(,RPLH)                               0287 00653000
*       RBUFC=RWORK2+RWORK0;        /* SET TO PTR                    */ 00654000
         LR    RBUFC,RWORK2                                        0288 00655000
         ALR   RBUFC,RWORK0                                        0288 00656000
*       RWORK1=RPARM1;              /* MVCL LENGTH                   */ 00657000
         LR    RWORK1,RPARM1                                       0289 00658000
*       RWORK3=RPARM1;              /* COPY LENGTH                   */ 00659000
         LR    RWORK3,RPARM1                                       0290 00660000
*       GEN(MVCL RBUFC,RWORK2);     /* MOVE LAST PART                */ 00661000
         MVCL RBUFC,RWORK2                                              00662000
*     END;                          /* END OF MOVE RIGHT             */ 00663000
*                                                                  0292 00664000
*   /*****************************************************************/ 00665000
*   /*                                                               */ 00666000
*   /* MOVE NEW RECORD INTO BUFFER                                   */ 00667000
*   /*                                                               */ 00668000
*   /*****************************************************************/ 00669000
*                                                                  0293 00670000
*   RWORK1=RPLRLEN;                 /* NEW RECORD LENGTH             */ 00671000
@RF00273 L     RWORK1,RPLRLEN(,RRPL)                               0293 00672000
*   RWORK3=RWORK1;                  /* COPY FOR MVCL                 */ 00673000
         LR    RWORK3,RWORK1                                       0294 00674000
*   RBUFC=PLHRECP;                  /* MVCL TO PTR                   */ 00675000
         L     RBUFC,PLHRECP(,RPLH)                                0295 00676000
*   RWORK2=RPLAREA;                 /* MVCL FROM PTR                 */ 00677000
         L     RWORK2,RPLAREA(,RRPL)                               0296 00678000
*   GEN(MVCL RBUFC,RWORK2);         /* MVCL RECORD TO BUFFER         */ 00679000
*                                                                  0297 00680000
         MVCL RBUFC,RWORK2                                              00681000
*   /*****************************************************************/ 00682000
*   /*                                                               */ 00683000
*   /* ADJUST CIDF TO REFLECT INSERTED RECORD                        */ 00684000
*   /*                                                               */ 00685000
*   /*****************************************************************/ 00686000
*                                                                  0298 00687000
*   RWORK1=RPLRLEN;                 /* RE-LOAD RECORD LENGTH         */ 00688000
         L     RWORK1,RPLRLEN(,RRPL)                               0298 00689000
*   RWORK2=PLHSAVE6;                /* RESTORE PTR TO CIDF           */ 00690000
         L     RWORK2,PLHSAVE6(,RPLH)                              0299 00691000
*   RWORK2->CIDFOSET=RWORK2->CIDFOSET+RWORK1;                      0300 00692000
         LR    @10,RWORK1                                          0300 00693000
         AH    @10,CIDFOSET(,RWORK2)                               0300 00694000
         STH   @10,CIDFOSET(,RWORK2)                               0300 00695000
*   RWORK2->CIDFLL=RWORK2->CIDFLL-RWORK1;                          0301 00696000
*                                                                  0301 00697000
         LH    @10,CIDFLL(,RWORK2)                                 0301 00698000
         SLR   @10,RWORK1                                          0301 00699000
         STH   @10,CIDFLL(,RWORK2)                                 0301 00700000
*   /*****************************************************************/ 00701000
*   /*                                                               */ 00702000
*   /* ADVANCE PLH RECORD POSITION BEYOND INSERT                     */ 00703000
*   /*                                                               */ 00704000
*   /*****************************************************************/ 00705000
*                                                                  0302 00706000
*   PLHFSP=PLHFSP+RWORK1;           /* ADJUST FREE SPACE PTR         */ 00707000
         LR    @10,RWORK1                                          0302 00708000
         AL    @10,PLHFSP(,RPLH)                                   0302 00709000
         ST    @10,PLHFSP(,RPLH)                                   0302 00710000
*   IF RPLBWD=OFF THEN              /* FORWARD DIRECTION     @ZA02289*/ 00711000
         TM    RPLBWD(RRPL),B'00010000'                            0303 00712000
         BNZ   @RF00303                                            0303 00713000
*     DO;                           /* YES                   @ZA02289*/ 00714000
*       PLHNOADV=ON;                /* SET NOADV FOR RETRIEVE        */ 00715000
         OI    PLHNOADV(RPLH),B'00001000'                          0305 00716000
*       PLHRECP=PLHRECP+RWORK1;     /* ADJUST RECORD PTR             */ 00717000
         LR    @10,RWORK1                                          0306 00718000
         AL    @10,PLHRECP(,RPLH)                                  0306 00719000
         ST    @10,PLHRECP(,RPLH)                                  0306 00720000
*     END;                          /*                       @XO4SVES*/ 00721000
*   ELSE                            /* BACKWARD MODE         @ZA02289*/ 00722000
*     DO;                           /* YES, ASSURE CORRECT RDFC AND     00723000
*                                      RDFP                  @ZA02289*/ 00724000
         B     @RC00303                                            0308 00725000
@RF00303 DS    0H                                                  0309 00726000
*       PLHRDFP=PLHFSP+RWORK2->CIDFLL/* SET RDFP TO          @ZA02289*/ 00727000
*           -LENGTH(IDARDF);        /* LEFT OF LEFTMOST RDF  @ZA02289*/ 00728000
         L     @10,PLHFSP(,RPLH)                                   0309 00729000
         LH    @15,CIDFLL(,RWORK2)                                 0309 00730000
         ALR   @15,@10                                             0309 00731000
         SL    @15,@CF00158                                        0309 00732000
         ST    @15,PLHRDFP(,RPLH)                                  0309 00733000
*       PLHRDFC=ONE;                /* START COUNT           @ZA02289*/ 00734000
         MVC   PLHRDFC(2,RPLH),@CH00056                            0310 00735000
*       RWORK2=PLHFSP;              /* START AT END          @ZA02289*/ 00736000
         LR    RWORK2,@10                                          0311 00737000
*       DO WHILE RWORK2>PLHRECP;    /* SEARCH TO CURRENT RECORD    0312 00738000
*                                      POSITION              @ZA02289*/ 00739000
         B     @DE00312                                            0312 00740000
@DL00312 DS    0H                                                  0313 00741000
*         IF PLHRDFC=ONE THEN       /* GROUP FINISHED        @ZA02289*/ 00742000
         CLC   PLHRDFC(2,RPLH),@CH00056                            0313 00743000
         BNE   @RF00313                                            0313 00744000
*           DO;                     /* YES                   @ZA02289*/ 00745000
*             PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* MOVE TO NEXT RDF AT     00746000
*                                      THE RIGHT             @ZA02289*/ 00747000
         LA    @10,3                                               0315 00748000
         L     @15,PLHRDFP(,RPLH)                                  0315 00749000
         ALR   @15,@10                                             0315 00750000
         ST    @15,PLHRDFP(,RPLH)                                  0315 00751000
*             IF PLHRDFP->RDFCTNU=ON THEN/* IS THIS LENGTH RDF OF A     00752000
*                                      GROUP                 @ZA02289*/ 00753000
         TM    RDFCTNU(@15),B'01000000'                            0316 00754000
         BNO   @RF00316                                            0316 00755000
*               PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* YES        @ZA02289*/ 00756000
         ALR   @15,@10                                             0317 00757000
         ST    @15,PLHRDFP(,RPLH)                                  0317 00758000
*             IF PLHRDFP->RDFREPL=ON THEN/* IS THIS THE COUNT RDF OF    00759000
*                                      A GROUP               @ZA02289*/ 00760000
@RF00316 L     @10,PLHRDFP(,RPLH)                                  0318 00761000
         TM    RDFREPL(@10),B'00001000'                            0318 00762000
         BNO   @RF00318                                            0318 00763000
*               DO;                 /* YES                   @ZA02289*/ 00764000
*                 RPARM1=PLHRDFP+LENGTH(IDARDF);/* YES, POINT TO THE    00765000
*                                      LENGTH RDF            @ZA02289*/ 00766000
         LA    RPARM1,3                                            0320 00767000
         ALR   RPARM1,@10                                          0320 00768000
*                 PLHLRECL=RPARM1->RDFLL;/* SET LENGTH       @ZA02289*/ 00769000
         SLR   @15,@15                                             0321 00770000
         ICM   @15,3,RDFLL(RPARM1)                                 0321 00771000
         ST    @15,PLHLRECL(,RPLH)                                 0321 00772000
*                 PLHRDFC=PLHRDFP->RDFLL;/* SET COUNT        @ZA02289*/ 00773000
         MVC   PLHRDFC(2,RPLH),RDFLL(@10)                          0322 00774000
*               END;                /*                       @ZA02289*/ 00775000
*             ELSE                  /*                       @ZA02289*/ 00776000
*               DO;                 /*                       @ZA02289*/ 00777000
         B     @RC00318                                            0324 00778000
@RF00318 DS    0H                                                  0325 00779000
*                 PLHLRECL=PLHRDFP->RDFLL;/* SET LENGTH      @ZA02289*/ 00780000
         L     @10,PLHRDFP(,RPLH)                                  0325 00781000
         SLR   @15,@15                                             0325 00782000
         ICM   @15,3,RDFLL(@10)                                    0325 00783000
         ST    @15,PLHLRECL(,RPLH)                                 0325 00784000
*                 PLHRDFC=ONE;      /* SET COUNT AT 1        @ZA02289*/ 00785000
         MVC   PLHRDFC(2,RPLH),@CH00056                            0326 00786000
*               END;                /*                       @ZA02289*/ 00787000
*           END;                    /*                       @ZA02289*/ 00788000
*         ELSE                      /* IN A GROUP SO         @ZA02289*/ 00789000
*           PLHRDFC=PLHRDFC-ONE;    /* REDUCE COUNT          @ZA02289*/ 00790000
         B     @RC00313                                            0329 00791000
@RF00313 LH    @10,PLHRDFC(,RPLH)                                  0329 00792000
         BCTR  @10,0                                               0329 00793000
         STH   @10,PLHRDFC(,RPLH)                                  0329 00794000
*         RWORK2=RWORK2-PLHLRECL;   /* MOVE TO NEXT RECORD   @ZA02289*/ 00795000
@RC00313 SL    RWORK2,PLHLRECL(,RPLH)                              0330 00796000
*       END;                        /*                       @ZA02289*/ 00797000
@DE00312 CL    RWORK2,PLHRECP(,RPLH)                               0331 00798000
         BH    @DL00312                                            0331 00799000
*     END;                          /*                       @ZA02289*/ 00800000
*   RESPECIFY                                                      0333 00801000
*     RWORK0 UNRESTRICTED;                                         0333 00802000
@RC00303 DS    0H                                                  0334 00803000
*   IF PLHCIINS=OFF THEN            /* CI SPLIT CALL                 */ 00804000
         TM    PLHCIINS(RPLH),B'00000100'                          0334 00805000
         BNZ   @RF00334                                            0334 00806000
*     DO;                           /* NO.                           */ 00807000
*       IF AMBCREAT=ON|AMDDST='0'B THEN/* CREATE MODE        @ZA02289*/ 00808000
         TM    AMBCREAT(RAMB),B'10000000'                          0336 00809000
         BO    @RT00336                                            0336 00810000
         L     @10,AMBDSB(,RAMB)                                   0336 00811000
         TM    AMDDST(@10),B'10000000'                             0336 00812000
         BNZ   @RF00336                                            0336 00813000
@RT00336 DS    0H                                                  0337 00814000
*         PLHLRECL=RWORK1;          /* SAVE LL               @ZA02289*/ 00815000
         ST    RWORK1,PLHLRECL(,RPLH)                              0337 00816000
*       IF BUFCMW=OFF THEN          /* INSURE MUST WRITE IS ON       */ 00817000
@RF00336 L     @10,PLHDBUFC(,RPLH)                                 0338 00818000
         TM    BUFCMW(@10),B'10000000'                             0338 00819000
         BNZ   @RF00338                                            0338 00820000
*         DO;                       /*                       @ZA17187*/ 00821000
*           BUFXORBA=BUFCDDDD;      /* EXCL OUT RBA          @ZA17187*/ 00822000
         L     @15,BUFCDDDD(,@10)                                  0340 00823000
         ST    @15,BUFXORBA(,@10)                                  0340 00824000
*           DO;                     /* SET UPDATED BFR               */ 00825000
*             BUFCORBA=BUFCDDDD;                                   0342 00826000
         ST    @15,BUFCORBA(,@10)                                  0342 00827000
*             BUFCMW=ON;                                           0343 00828000
         OI    BUFCMW(@10),B'10000000'                             0343 00829000
*           END;                                                   0344 00830000
*         END;                      /*                       @ZA17187*/ 00831000
*       IF AMBJRN=ON THEN           /* JOURNAL EXIT                  */ 00832000
@RF00338 TM    AMBJRN(RAMB),B'00000010'                            0346 00833000
         BNO   @RF00346                                            0346 00834000
*         DO;                       /* YES.                          */ 00835000
*           RWORK2=PLHFSP-PLHRECP;  /* MOVED DATA AMOUNT             */ 00836000
         L     RWORK2,PLHFSP(,RPLH)                                0348 00837000
         SL    RWORK2,PLHRECP(,RPLH)                               0348 00838000
*           IF RPLBWD=ON THEN       /* BACKWARD DIRECTION    @ZA02289*/ 00839000
         TM    RPLBWD(RRPL),B'00010000'                            0349 00840000
         BNO   @RF00349                                            0349 00841000
*             RWORK2=RWORK2-RWORK1; /* ADJUST PTR            @ZA02289*/ 00842000
         SLR   RWORK2,RWORK1                                       0350 00843000
*           IF RWORK2>ZERO THEN     /* ANY MOVED                     */ 00844000
@RF00349 CL    RWORK2,@CF00061                                     0351 00845000
         BNH   @RF00351                                            0351 00846000
*             DO;                   /* YES.                          */ 00847000
*               PLHJRNLL=RWORK2;    /* AMOUNT MOVED                  */ 00848000
         ST    RWORK2,PLHJRNLL(,RPLH)                              0353 00849000
*               PLHJORBA=RPLDDDD;   /* OLD RBA                       */ 00850000
         L     @10,RPLDDDD(,RRPL)                                  0354 00851000
         ST    @10,PLHJORBA(,RPLH)                                 0354 00852000
*               PLHJNRBA=RPLDDDD+RPLRLEN;/* NEW RBA                  */ 00853000
         AL    @10,RPLRLEN(,RRPL)                                  0355 00854000
         ST    @10,PLHJNRBA(,RPLH)                                 0355 00855000
*               PLHJCODE=PLHJRBAC;  /* RBA CHANGE REQUEST            */ 00856000
         MVI   PLHJCODE(RPLH),B'00001100'                          0356 00857000
*I06:                                                              0357 00858000
*               DO;                 /* IDACALL(IDATJXIT)             */ 00859000
I06      DS    0H                                                  0358 00860000
*                 CALL IDATJXIT;    /* EXIT TO IDATJXIT              */ 00861000
         L     @15,@CV00928                                        0358 00862000
         BALR  @14,@15                                             0358 00863000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00864000
         BALR @11,0                                                     00865000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00866000
         USING *,@11                                                    00867000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00868000
         L     @11,=A(@PSTART)                                          00869000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00870000
         USING @PSTART,@11                                              00871000
*               END I06;                                           0363 00872000
*             END;                  /* END DATA MOVED                */ 00873000
*         END;                      /* END JOURNAL EXIT              */ 00874000
@RF00351 DS    0H                                                  0366 00875000
*     END;                          /* END NOT CI SPLIT CALL         */ 00876000
@RF00346 DS    0H                                                  0367 00877000
*   RFY                                                            0367 00878000
*     R15 RSTD;                     /* PROTECT R15           @ZA02289*/ 00879000
@RF00334 DS    0H                                                  0368 00880000
*   R15=ZERO;                       /* SET RETURN CODE@ZA02289       */ 00881000
         SLR   R15,R15                                             0368 00882000
*   CALL EXIT;                      /* RETURN                @ZA02289*/ 00883000
         BAL   @14,EXIT                                            0369 00884000
*   RFY                                                            0370 00885000
*     R15 UNRSTD;                   /* RELEASE R15           @ZA02289*/ 00886000
*                                                                  0371 00887000
*   /*****************************************************************/ 00888000
*   /*                                                               */ 00889000
*   /* RECORD WILL NOT FIT IN CONTROL INTERVAL. CALL IDA019RE (      */ 00890000
*   /* CONTROL INTERVAL SPLIT ) OR CALL IDA019SA ( CONTROL INTERVAL  */ 00891000
*   /* INITIALIZATION )                                              */ 00892000
*   /*                                                               */ 00893000
*   /*****************************************************************/ 00894000
*                                                                  0371 00895000
*CIFULL:                            /* NEED NEW CI                   */ 00896000
*   IF PLHCIINS=ON THEN             /* CALLED BY CI SPLIT            */ 00897000
CIFULL   TM    PLHCIINS(RPLH),B'00000100'                          0371 00898000
         BNO   @RF00371                                            0371 00899000
*     DO;                           /* YES.                          */ 00900000
*       RFY                                                        0373 00901000
*         R15 RSTD;                 /* PROTECT R15           @ZA02289*/ 00902000
*       R15=CIFULLCD;               /* SET RETURN CODE@ZA02289       */ 00903000
         LA    R15,4                                               0374 00904000
*       CALL EXIT;                  /* RETURN                @ZA02289*/ 00905000
         BAL   @14,EXIT                                            0375 00906000
*       RFY                                                        0376 00907000
*         R15 UNRSTD;               /* RELEASE R15           @ZA02289*/ 00908000
*     END;                          /* END OF CALL BY CI SPLIT       */ 00909000
*   RESPECIFY                                                      0378 00910000
*     IDAARDB BASED(PLHARDB);                                      0378 00911000
@RF00371 DS    0H                                                  0379 00912000
*   IF AMBCREAT=ON|                 /* SEE IF CREATE         @X04SVMR*/ 00913000
*       AMDDST='0'B THEN            /* OR ESDS.              @X04SVMR*/ 00914000
         TM    AMBCREAT(RAMB),B'10000000'                          0379 00915000
         BO    @RT00379                                            0379 00916000
         L     @10,AMBDSB(,RAMB)                                   0379 00917000
         TM    AMDDST(@10),B'10000000'                             0379 00918000
         BNZ   @RF00379                                            0379 00919000
@RT00379 DS    0H                                                  0380 00920000
*     DO;                           /* YES                   @ZA02289*/ 00921000
*I07:                                                              0381 00922000
*       DO;                         /* IDACALL(IDA019SA)             */ 00923000
I07      DS    0H                                                  0382 00924000
*         CALL IDA019SA;            /* EXIT TO IDA019SA              */ 00925000
         L     @15,@CV00932                                        0382 00926000
         BALR  @14,@15                                             0382 00927000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00928000
         BALR @11,0                                                     00929000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00930000
         USING *,@11                                                    00931000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00932000
         L     @11,=A(@PSTART)                                          00933000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00934000
         USING @PSTART,@11                                              00935000
*       END I07;                    /* CALL CI INIT.         @X04SVMR*/ 00936000
*       PLHKRE=OFF;                 /* RESET END OF KEY RANGE      0388 00937000
*                                                            @ZA02289*/ 00938000
         NI    PLHKRE(RPLH),B'11110111'                            0388 00939000
*       IF RPLERREG^=ZERO THEN      /* ERROR                 @ZA02289*/ 00940000
         CLI   RPLERREG(RRPL),0                                    0389 00941000
         BE    @RF00389                                            0389 00942000
*         CALL EXIT;                /* YES, LEAVE            @ZA02289*/ 00943000
         BAL   @14,EXIT                                            0390 00944000
*       GO TO DISTART;              /* GO INSERT RECD        @ZA02289*/ 00945000
         B     DISTART                                             0391 00946000
*     END;                          /*                       @ZA02289*/ 00947000
*   ELSE                            /* NO, CI SPLIT          @X04SVMR*/ 00948000
*     DO;                           /*                       @X04SVMR*/ 00949000
*                                                                  0393 00950000
@RF00379 DS    0H                                                  0394 00951000
*       /*************************************************************/ 00952000
*       /*                                                           */ 00953000
*       /* IF SHARED RESOURCES FREE THE SEQUENCE SET IF IT IS OWNED. */ 00954000
*       /* THIS PREVENTS A DEADLOCK FROM OCCURRING BETWEEN SEQ AND   */ 00955000
*       /* DIR INSERTS. DEADLOCK WOULD OCCUR BETWEEN THE SEQUENCES 1)*/ 00956000
*       /* GET DIWA, 2) GET SEQ SET (SEQ INSERT) AND 1) GET SEQ SET, */ 00957000
*       /* 2) GET DIWA (DIR INSERT). NOTE THAT CI SPLIT WILL         */ 00958000
*       /* REACQUIRE THE SEQUENCE SET BUFFER FOR EXCL CNTL.  @X04SVMR*/ 00959000
*       /*                                                           */ 00960000
*       /*************************************************************/ 00961000
*                                                                  0394 00962000
*       IF AMBLSR=ON|AMBGSR=ON THEN /* IF SHARED             @X04SVMR*/ 00963000
         TM    AMBLSR(RAMB),B'01100000'                            0394 00964000
         BZ    @RF00394                                            0394 00965000
*         DO;                       /* RESOURCES,            @X04SVMR*/ 00966000
*           RBUFC=PLHIBUFC;         /* POINT TO SS           @X04SVMR*/ 00967000
         L     RBUFC,PLHIBUFC(,RPLH)                               0396 00968000
*           IF RBUFC^=ZERO THEN     /* OWNED BY PLH?         @X04SVMR*/ 00969000
         LTR   RBUFC,RBUFC                                         0397 00970000
         BZ    @RF00397                                            0397 00971000
*I08:                                                              0398 00972000
*             DO;                   /* IDACALL(IDAFREEB)             */ 00973000
I08      DS    0H                                                  0399 00974000
*               CALL IDAFREEB;      /* EXIT TO IDAFREEB              */ 00975000
         L     @15,@CV00985                                        0399 00976000
         BALR  @14,@15                                             0399 00977000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00978000
         BALR @11,0                                                     00979000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00980000
         USING *,@11                                                    00981000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00982000
         L     @11,=A(@PSTART)                                          00983000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00984000
         USING @PSTART,@11                                              00985000
*             END I08;              /* YES, FREE IT.         @X04SVMR*/ 00986000
*         END;                      /* END OF FREE SS        @X04SVMR*/ 00987000
@RF00397 DS    0H                                                  0406 00988000
*LOCKDIWA:                          /* LOCK DATA INSERT WA           */ 00989000
*       RPARM1=ADDR(DIWATV);        /* POINT TO LOCK BYTE            */ 00990000
@RF00394 DS    0H                                                  0406 00991000
LOCKDIWA L     RPARM1,AMBIWA(,RAMB)                                0406 00992000
         LA    RPARM1,DIWATV(,RPARM1)                              0406 00993000
*       GEN(TS 0(RPARM1));          /* TEST AND SET                  */ 00994000
         TS 0(RPARM1)                                                   00995000
*       BC(8,HAVEDIWA);             /* OBTAINED DIWA         @X04SVMR*/ 00996000
         BC    8,HAVEDIWA                                          0408 00997000
*       RFY                                                        0409 00998000
*         RWORK0 RSTD;              /* RESTRICT RWORK0               */ 00999000
*       RWORK0=DEFR0;               /* DATA INSERT REQUEST           */ 01000000
         SLR   RWORK0,RWORK0                                       0410 01001000
*I09:                                                              0411 01002000
*       DO;                         /* IDACALL(IDADRQ)               */ 01003000
I09      DS    0H                                                  0412 01004000
*         CALL IDADRQ;              /* EXIT TO IDADRQ                */ 01005000
         L     @15,@CV00933                                        0412 01006000
         BALR  @14,@15                                             0412 01007000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01008000
         BALR @11,0                                                     01009000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01010000
         USING *,@11                                                    01011000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01012000
         L     @11,=A(@PSTART)                                          01013000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01014000
         USING @PSTART,@11                                              01015000
*       END I09;                                                   0417 01016000
*       GO TO LOCKDIWA;             /* TRY LOCK AGAIN                */ 01017000
         B     LOCKDIWA                                            0418 01018000
*HAVEDIWA:                          /* LOCK SUCCESSFUL               */ 01019000
*       DIWPLH=RPLH;                /* IDENTIFY LOCKING PLH          */ 01020000
HAVEDIWA L     @10,AMBIWA(,RAMB)                                   0419 01021000
         ST    RPLH,DIWPLH(,@10)                                   0419 01022000
*I10:                                                              0420 01023000
*       DO;                         /* IDACALL(IDA019RE)             */ 01024000
I10      DS    0H                                                  0421 01025000
*         CALL IDA019RE;            /* EXIT TO IDA019RE              */ 01026000
         L     @15,@CV00929                                        0421 01027000
         BALR  @14,@15                                             0421 01028000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01029000
         BALR @11,0                                                     01030000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01031000
         USING *,@11                                                    01032000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01033000
         L     @11,=A(@PSTART)                                          01034000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01035000
         USING @PSTART,@11                                              01036000
*       END I10;                                                   0426 01037000
*       DIWATV=CZERO;               /* RELEASE DIWA                  */ 01038000
         L     @10,AMBIWA(,RAMB)                                   0427 01039000
         MVI   DIWATV(@10),B'00000000'                             0427 01040000
*       CALL EXIT;                  /* RETURN                @ZA02289*/ 01041000
         BAL   @14,EXIT                                            0428 01042000
*     END;                          /*                       @X04SVMR*/ 01043000
*                                                                  0430 01044000
*   /*****************************************************************/ 01045000
*   /*                                                               */ 01046000
*   /* IDACHKKR SUBROUTINE CHECKS KEY FOR VALIDITY AND SETS PLHARDB  */ 01047000
*   /*                                                               */ 01048000
*   /*****************************************************************/ 01049000
*                                                                  0430 01050000
*IDACHKKR:                          /* ENTRY NAME                    */ 01051000
*   ENTRY;                          /*                               */ 01052000
@EP00430 DS    0H                                                  0431 01053000
*   RFY                                                            0431 01054000
*    (RWORK1,                                                      0431 01055000
*     RWORK2,                                                      0431 01056000
*     RWORK3,                                                      0431 01057000
*     R14) RSTD;                    /*                               */ 01058000
*   DO;                             /*                               */ 01059000
*     RWORK3=AMDPARDB;              /* START WITH 1ST ARDB           */ 01060000
         L     @15,AMBDSB(,RAMB)                                   0433 01061000
         L     RWORK3,AMDPARDB(,@15)                               0433 01062000
*NXKR:                                                             0434 01063000
*     IF RWORK1->KEY(1:RWORK2)<     /* NEW KEY LESS THAN             */ 01064000
*         RWORK3->ARDKEYS(1:RWORK2) THEN/* ARDB LOW KEY              */ 01065000
NXKR     LR    @15,RWORK2                                          0434 01066000
         BCTR  @15,0                                               0434 01067000
         EX    @15,@SC01005                                        0434 01068000
         BL    @RT00434                                            0434 01069000
*       GO TO KRERROR;              /* YES. ERROR                    */ 01070000
*     IF RWORK1->KEY(1:RWORK2)>     /* NEW KEY GREATER THAN          */ 01071000
*         RWORK3->ARDKEYS(RWORK2+1:2*RWORK2) THEN/* ARDB HIGH KEY    */ 01072000
         LR    @15,RWORK2                                          0436 01073000
         ALR   @15,@15                                             0436 01074000
         SLR   @15,RWORK2                                          0436 01075000
         BCTR  @15,0                                               0436 01076000
         LR    @10,RWORK3                                          0436 01077000
         ALR   @10,RWORK2                                          0436 01078000
         EX    @15,@SC01016                                        0436 01079000
         BNH   @RF00436                                            0436 01080000
*       DO;                         /* YES.                          */ 01081000
*         RWORK3=RWORK3->ARDNPTR;   /* NEXT ARDB                     */ 01082000
         L     RWORK3,ARDNPTR(,RWORK3)                             0438 01083000
*         IF RWORK3=ZERO THEN       /* END OF DATA SET               */ 01084000
         LTR   RWORK3,RWORK3                                       0439 01085000
         BZ    @RT00439                                            0439 01086000
*           GO TO KRERROR;          /* YES. ERROR                    */ 01087000
*         GO TO NXKR;               /* LOOK AT NEXT ARDB             */ 01088000
         B     NXKR                                                0441 01089000
*       END;                        /* END OF KEY GREATER            */ 01090000
*     PLHARDB=RWORK3;               /* SET PTR TO ARDB               */ 01091000
@RF00436 ST    RWORK3,PLHARDB(,RPLH)                               0443 01092000
*     RETURN;                       /*                               */ 01093000
@EL00001 DS    0H                                                  0444 01094000
@EF00001 DS    0H                                                  0444 01095000
@ER00001 BR    @14                                                 0444 01096000
*   END;                            /* END OF NON-CREATE             */ 01097000
*   RFY                                                            0446 01098000
*    (RWORK1,                                                      0446 01099000
*     RWORK2,                                                      0446 01100000
*     RWORK3,                                                      0446 01101000
*     R14) UNRSTD;                  /*                               */ 01102000
*                                                                  0447 01103000
*   /*****************************************************************/ 01104000
*   /*                                                               */ 01105000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * *     @ZA02289*/ 01106000
*   /*                                                       @ZA02289*/ 01107000
*   /* EXIT SUBROUTINE                                       @ZA02289*/ 01108000
*   /* FUNCTION - RESTORES REGISTER 14 FROM PLH              @ZA02289*/ 01109000
*   /* PUSHDOWN LIST AND RETURNS                             @ZA02289*/ 01110000
*   /*                                                       @ZA02289*/ 01111000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * *     @ZA02289*/ 01112000
*   /*                                                               */ 01113000
*   /*****************************************************************/ 01114000
*                                                                  0447 01115000
*EXIT:                                                             0447 01116000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @ZA02289*/ 01117000
EXIT     DS    0H                                                  0448 01118000
*   GEN(IDARST14);                  /* RESTORE REG 14        @ZA02289*/ 01119000
         IDARST14                                                       01120000
*   END EXIT;                       /* RETURN                @ZA02289*/ 01121000
@EL00002 DS    0H                                                  0449 01122000
@EF00002 DS    0H                                                  0449 01123000
@ER00002 BR    @14                                                 0449 01124000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA     @X04SVMR*/ 01125000
         IDAPATCH                                                       01126000
*   END IDA019RM                    /* END DATA INSERT       @X04SVMR*/ 01127000
*                                                                  0451 01128000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01129000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01130000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01131000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01132000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01133000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01134000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01135000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01136000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01137000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01138000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 01139000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 01140000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01141000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01142000
*                                                                  0451 01143000
*       ;                                                          0451 01144000
         B     @EL00001                                            0451 01145000
@DATA    DS    0H                                                       01146000
@CH00056 DC    H'1'                                                     01147000
@SC01005 CLC   KEY(0,RWORK1),ARDKEYS(RWORK3)                            01148000
@SC01007 CLC   KEY(0,RWORK1),ARDKEYS(@15)                               01149000
@SM01009 MVC   PLHKEY(0,@10),ARDKEYS(@14)                               01150000
@SC01016 CLC   KEY(0,RWORK1),ARDKEYS(@10)                               01151000
@DATD    DSECT                                                          01152000
         DS    0F                                                       01153000
IDA019RM CSECT                                                          01154000
         DS    0F                                                       01155000
@CF00061 DC    F'0'                                                     01156000
@CF00158 DC    F'3'                                                     01157000
@CF00069 DC    F'4'                                                     01158000
@CF00289 DC    F'7'                                                     01159000
@DATD    DSECT                                                          01160000
         DS    0D                                                       01161000
IDA019RM CSECT                                                          01162000
         DS    0F                                                       01163000
@SIZDATD DC    AL1(0)                                                   01164000
         DC    AL3(@ENDDATD-@DATD)                                      01165000
@CA00969 DC    A(IDACHKKR)                                              01166000
@CV00928 DC    V(IDATJXIT)                                              01167000
@CV00929 DC    V(IDA019RE)                                              01168000
@CV00930 DC    V(IDA019RT)                                              01169000
@CV00931 DC    V(IDA019RU)                                              01170000
@CV00932 DC    V(IDA019SA)                                              01171000
@CV00933 DC    V(IDADRQ)                                                01172000
@CV00985 DC    V(IDAFREEB)                                              01173000
         DS    0D                                                       01174000
HWORD4   DC    H'4'                                                     01175000
@DATD    DSECT                                                          01176000
*                                                          /*@X04SVLC*/ 01177000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01178000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01179000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01180000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01181000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01182000
RDFLEN   EQU   3                        LENGTH OF RDF                   01183000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01184000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01185000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01186000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01187000
@DATD    DSECT                                                          01188000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01189000
@ENDDATD EQU   *                                                        01190000
IDA019RM CSECT                                                          01191000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01192000
@01      EQU   01                                                       01193000
@02      EQU   02                                                       01194000
@03      EQU   03                                                       01195000
@04      EQU   04                                                       01196000
@05      EQU   05                                                       01197000
@06      EQU   06                                                       01198000
@07      EQU   07                                                       01199000
@08      EQU   08                                                       01200000
@09      EQU   09                                                       01201000
@10      EQU   10                                                       01202000
@11      EQU   11                                                       01203000
@12      EQU   12                                                       01204000
@13      EQU   13                                                       01205000
@14      EQU   14                                                       01206000
@15      EQU   15                                                       01207000
RWORK0   EQU   @00                                                      01208000
RRPL     EQU   @01                                                      01209000
RPLH     EQU   @02                                                      01210000
RAMB     EQU   @03                                                      01211000
RBUFC    EQU   @04                                                      01212000
RWORK1   EQU   @05                                                      01213000
RWORK2   EQU   @06                                                      01214000
RWORK3   EQU   @07                                                      01215000
RWORK4   EQU   @08                                                      01216000
RWORK5   EQU   @09                                                      01217000
R10      EQU   @10                                                      01218000
RPARM1   EQU   @12                                                      01219000
R14      EQU   @14                                                      01220000
R15      EQU   @15                                                      01221000
R1       EQU   @01                                                      01222000
R11      EQU   @11                                                      01223000
R13      EQU   @13                                                      01224000
IFGRPL   EQU   0                                                        01225000
RPLCOMN  EQU   IFGRPL                                                   01226000
RPLIDWD  EQU   RPLCOMN                                                  01227000
RPLLEN   EQU   RPLIDWD+3                                                01228000
RPLECB   EQU   RPLCOMN+8                                                01229000
RPLFDBWD EQU   RPLCOMN+12                                               01230000
RPLFDBK  EQU   RPLFDBWD+1                                               01231000
RPLRTNCD EQU   RPLFDBK                                                  01232000
RPLERREG EQU   RPLRTNCD                                                 01233000
RPLCNDCD EQU   RPLFDBK+1                                                01234000
RPLCMPON EQU   RPLCNDCD                                                 01235000
RPLFDB2  EQU   RPLCMPON                                                 01236000
RPLERRCD EQU   RPLCNDCD+1                                               01237000
RPLFDB3  EQU   RPLERRCD                                                 01238000
RPLKEYLE EQU   RPLCOMN+16                                               01239000
RPLDACB  EQU   RPLCOMN+24                                               01240000
RPLAREA  EQU   RPLCOMN+32                                               01241000
RPLARG   EQU   RPLCOMN+36                                               01242000
RPLOPTCD EQU   RPLCOMN+40                                               01243000
RPLOPT1  EQU   RPLOPTCD                                                 01244000
RPLSEQ   EQU   RPLOPT1                                                  01245000
RPLECBSW EQU   RPLOPT1                                                  01246000
RPLOPT2  EQU   RPLOPTCD+1                                               01247000
RPLADR   EQU   RPLOPT2                                                  01248000
RPLBWD   EQU   RPLOPT2                                                  01249000
RPLUPD   EQU   RPLOPT2                                                  01250000
RPLOPT3  EQU   RPLOPTCD+2                                               01251000
RPLNXTRP EQU   RPLCOMN+44                                               01252000
RPLRLEN  EQU   RPLCOMN+48                                               01253000
RPLOPTC2 EQU   RPLCOMN+56                                               01254000
RPLOPT5  EQU   RPLOPTC2                                                 01255000
RPLWRTYP EQU   RPLOPT5                                                  01256000
RPLOPT6  EQU   RPLOPTC2+1                                               01257000
RPLUNTYP EQU   RPLOPT6                                                  01258000
RPLOPT7  EQU   RPLOPTC2+2                                               01259000
RPLCNOPT EQU   RPLOPT7                                                  01260000
RPLOPT8  EQU   RPLOPTC2+3                                               01261000
RPLRBAR  EQU   RPLCOMN+60                                               01262000
RPLAIXID EQU   RPLRBAR+2                                                01263000
RPLDDDD  EQU   RPLRBAR+4                                                01264000
RPLEXTDS EQU   RPLCOMN+68                                               01265000
RPLEXTD1 EQU   RPLEXTDS                                                 01266000
IFGACB   EQU   0                                                        01267000
ACBCOMN  EQU   IFGACB                                                   01268000
ACBLENG  EQU   ACBCOMN+2                                                01269000
ACBLENG2 EQU   ACBLENG                                                  01270000
ACBAMBL  EQU   ACBCOMN+4                                                01271000
ACBJWA   EQU   ACBAMBL                                                  01272000
ACBMACRF EQU   ACBCOMN+12                                               01273000
ACBMACR1 EQU   ACBMACRF                                                 01274000
ACBADR   EQU   ACBMACR1                                                 01275000
ACBCNV   EQU   ACBMACR1                                                 01276000
ACBMACR2 EQU   ACBMACRF+1                                               01277000
ACBBUFPL EQU   ACBCOMN+20                                               01278000
ACBMACR3 EQU   ACBBUFPL                                                 01279000
ACBRECFM EQU   ACBCOMN+24                                               01280000
ACBCCTYP EQU   ACBCOMN+25                                               01281000
ACBOPT   EQU   ACBCOMN+26                                               01282000
ACBDSORG EQU   ACBOPT                                                   01283000
ACBCROPS EQU   ACBDSORG                                                 01284000
ACBEXLST EQU   ACBCOMN+36                                               01285000
ACBDDNM  EQU   ACBCOMN+40                                               01286000
ACBAMETH EQU   ACBDDNM+3                                                01287000
ACBOFLGS EQU   ACBCOMN+48                                               01288000
ACBEXFG  EQU   ACBOFLGS                                                 01289000
ACBIOSFG EQU   ACBOFLGS                                                 01290000
ACBINFLG EQU   ACBCOMN+50                                               01291000
ACBUJFCB EQU   ACBCOMN+52                                               01292000
ACBBLKSZ EQU   ACBCOMN+60                                               01293000
IDAAMBL  EQU   0                                                        01294000
AMBLEOV  EQU   IDAAMBL+12                                               01295000
AMBLEFLG EQU   AMBLEOV                                                  01296000
AMBLDDNM EQU   IDAAMBL+16                                               01297000
AMBLIDF  EQU   AMBLDDNM                                                 01298000
AMBLQ    EQU   AMBLIDF+7                                                01299000
AMBLVC   EQU   IDAAMBL+28                                               01300000
AMBLTYPE EQU   IDAAMBL+30                                               01301000
AMBLSHAR EQU   IDAAMBL+33                                               01302000
AMBLFLG1 EQU   IDAAMBL+35                                               01303000
AMBLFLG2 EQU   IDAAMBL+36                                               01304000
IDAAMB   EQU   0                                                        01305000
AMBPH    EQU   IDAAMB+12                                                01306000
AMBDSB   EQU   IDAAMB+20                                                01307000
AMBEOVR  EQU   IDAAMB+24                                                01308000
AMBFLG0  EQU   AMBEOVR                                                  01309000
AMBFLG1  EQU   IDAAMB+25                                                01310000
AMBCREAT EQU   AMBFLG1                                                  01311000
AMBJRN   EQU   AMBFLG1                                                  01312000
AMBDSORG EQU   IDAAMB+26                                                01313000
AMBIOBAD EQU   IDAAMB+28                                                01314000
AMBINFL  EQU   IDAAMB+42                                                01315000
AMBUPX   EQU   AMBINFL                                                  01316000
AMBDEBPT EQU   IDAAMB+44                                                01317000
AMBOFLGS EQU   IDAAMB+48                                                01318000
AMBFLG2  EQU   IDAAMB+49                                                01319000
AMBEOVPT EQU   IDAAMB+56                                                01320000
AMBIWA   EQU   IDAAMB+64                                                01321000
AMBCSWD1 EQU   IDAAMB+84                                                01322000
AMBAFLG  EQU   AMBCSWD1                                                 01323000
AMBLSR   EQU   AMBAFLG                                                  01324000
AMBGSR   EQU   AMBAFLG                                                  01325000
IDAPLHDR EQU   0                                                        01326000
IDAPLH   EQU   0                                                        01327000
PLHFLG1  EQU   IDAPLH+2                                                 01328000
PLHFLG2  EQU   IDAPLH+3                                                 01329000
PLHADDTE EQU   PLHFLG2                                                  01330000
PLHKRE   EQU   PLHFLG2                                                  01331000
PLHCIINS EQU   PLHFLG2                                                  01332000
PLHEFLGS EQU   IDAPLH+4                                                 01333000
PLHNOADV EQU   PLHEFLGS                                                 01334000
PLHFLG3  EQU   IDAPLH+6                                                 01335000
PLHAFLGS EQU   IDAPLH+7                                                 01336000
PLHCRBA  EQU   IDAPLH+28                                                01337000
PLHJORBA EQU   PLHCRBA                                                  01338000
PLHJRNLL EQU   IDAPLH+32                                                01339000
PLHJNRBA EQU   IDAPLH+36                                                01340000
PLHJCODE EQU   IDAPLH+40                                                01341000
PLHARDB  EQU   IDAPLH+44                                                01342000
PLHLRECL EQU   IDAPLH+48                                                01343000
PLHDBUFC EQU   IDAPLH+52                                                01344000
PLHRECP  EQU   IDAPLH+60                                                01345000
PLHFSP   EQU   IDAPLH+64                                                01346000
PLHRDFP  EQU   IDAPLH+68                                                01347000
PLHRDFC  EQU   IDAPLH+72                                                01348000
PLHDIOB  EQU   IDAPLH+76                                                01349000
PLHSAVE1 EQU   IDAPLH+84                                                01350000
PLHSAVE2 EQU   IDAPLH+88                                                01351000
PLHSAVE6 EQU   IDAPLH+104                                               01352000
PLHRETO  EQU   IDAPLH+116                                               01353000
PLHRET1  EQU   IDAPLH+120                                               01354000
PLHEOVPT EQU   IDAPLH+180                                               01355000
PLHIBUFC EQU   IDAPLH+188                                               01356000
PLHIXSPL EQU   IDAPLH+200                                               01357000
PLHSSRBA EQU   PLHIXSPL                                                 01358000
PLHWAX   EQU   IDAPLH+232                                               01359000
PLHKEYPT EQU   IDAPLH+248                                               01360000
PLHDRRSC EQU   IDAPLH+252                                               01361000
PLHEND   EQU   IDAPLH+280                                               01362000
PLHKEY   EQU   0                                                        01363000
IDABUFDR EQU   0                                                        01364000
BUFDRCIX EQU   IDABUFDR+9                                               01365000
BUFDRFLG EQU   IDABUFDR+11                                              01366000
IDABUFC  EQU   0                                                        01367000
BUFCAVL  EQU   IDABUFC                                                  01368000
BUFCFLG1 EQU   IDABUFC+1                                                01369000
BUFCVAL  EQU   BUFCFLG1                                                 01370000
BUFCIOFL EQU   IDABUFC+2                                                01371000
BUFCMW   EQU   BUFCIOFL                                                 01372000
BUFCFLG2 EQU   IDABUFC+3                                                01373000
BUFCPLH  EQU   IDABUFC+4                                                01374000
BUFCDDDD EQU   IDABUFC+8                                                01375000
BUFCORBA EQU   IDABUFC+12                                               01376000
BUFCBAD  EQU   IDABUFC+20                                               01377000
BUFCINV  EQU   IDABUFC+28                                               01378000
BUFXIRBA EQU   IDABUFC+40                                               01379000
BUFXORBA EQU   IDABUFC+44                                               01380000
IDAAMDSB EQU   0                                                        01381000
AMDATTR  EQU   IDAAMDSB+1                                               01382000
AMDDST   EQU   AMDATTR                                                  01383000
AMDRANGE EQU   AMDATTR                                                  01384000
AMDNEST  EQU   IDAAMDSB+4                                               01385000
AMDRKP   EQU   IDAAMDSB+6                                               01386000
AMDKEYLN EQU   IDAAMDSB+8                                               01387000
AMDFSCI  EQU   IDAAMDSB+16                                              01388000
AMDCINV  EQU   IDAAMDSB+20                                              01389000
AMDHLRBA EQU   IDAAMDSB+28                                              01390000
AMDSSRBA EQU   IDAAMDSB+32                                              01391000
AMDPARDB EQU   IDAAMDSB+36                                              01392000
AMDATTR3 EQU   IDAAMDSB+40                                              01393000
AMDSTAT  EQU   IDAAMDSB+48                                              01394000
IDADIWA  EQU   0                                                        01395000
DIWATV   EQU   IDADIWA+1                                                01396000
DIWFLG1  EQU   IDADIWA+4                                                01397000
DIWFLG2  EQU   IDADIWA+5                                                01398000
DIWPLH   EQU   IDADIWA+16                                               01399000
DIWSAVE  EQU   IDADIWA+28                                               01400000
IDAARDB  EQU   0                                                        01401000
ARDTYPE  EQU   IDAARDB+1                                                01402000
ARDNPTR  EQU   IDAARDB+4                                                01403000
ARDHKRBA EQU   IDAARDB+8                                                01404000
ARDHRBA  EQU   IDAARDB+12                                               01405000
ARDPRF   EQU   IDAARDB+28                                               01406000
ARDKEYS  EQU   IDAARDB+29                                               01407000
IDACIDF  EQU   0                                                        01408000
CIDFOSET EQU   IDACIDF                                                  01409000
CIDFLL   EQU   IDACIDF+2                                                01410000
IDARDF   EQU   0                                                        01411000
RDFRBYTE EQU   IDARDF                                                   01412000
RDFCTNU  EQU   RDFRBYTE                                                 01413000
RDFSEG   EQU   RDFRBYTE                                                 01414000
RDFNOT1  EQU   RDFSEG                                                   01415000
RDF1ST   EQU   RDFSEG                                                   01416000
RDFREPL  EQU   RDFRBYTE                                                 01417000
RDFLL    EQU   IDARDF+1                                                 01418000
IDADATA  EQU   0                                                        01419000
IDAKEY   EQU   0                                                        01420000
KEY      EQU   IDAKEY                                                   01421000
PLHPDL   EQU   0                                                        01422000
PLHPDLE  EQU   0                                                        01423000
PLHRRN   EQU   0                                                        01424000
RSRCBYTE EQU   0                                                        01425000
PLHEXTEN EQU   PLHEND                                                   01426000
PLHBMWRK EQU   PLHEXTEN+5                                               01427000
BUFCRSC1 EQU   BUFCAVL                                                  01428000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01429000
PLHBMSV5 EQU   PLHEXTEN+24                                              01430000
PLHBMSV4 EQU   PLHEXTEN+20                                              01431000
PLHBMSV3 EQU   PLHEXTEN+16                                              01432000
PLHBMSV2 EQU   PLHEXTEN+12                                              01433000
PLHBMSV1 EQU   PLHEXTEN+8                                               01434000
PLHRDCNT EQU   PLHEXTEN+6                                               01435000
PLHBMSOV EQU   PLHBMWRK                                                 01436000
PLHBEUC  EQU   PLHBMWRK                                                 01437000
PLHBMRDF EQU   PLHBMWRK                                                 01438000
@NM00040 EQU   PLHEXTEN+4                                               01439000
PLHRESR1 EQU   PLHEXTEN                                                 01440000
AMDATA   EQU   IDADATA                                                  01441000
RDFEMPTY EQU   RDFRBYTE                                                 01442000
RDFTYPE  EQU   RDFRBYTE                                                 01443000
@NM00058 EQU   CIDFLL                                                   01444000
CIDFBUSY EQU   CIDFLL                                                   01445000
@NM00057 EQU   ARDPRF                                                   01446000
ARDPRFMT EQU   ARDPRF                                                   01447000
ARDPRSS  EQU   ARDPRF                                                   01448000
ARDRELNO EQU   IDAARDB+26                                               01449000
ARDVOLSR EQU   IDAARDB+20                                               01450000
ARDERBA  EQU   IDAARDB+16                                               01451000
ARDLEN   EQU   IDAARDB+2                                                01452000
ARDUSED  EQU   ARDTYPE                                                  01453000
ARDEOD   EQU   ARDTYPE                                                  01454000
ARDUOVFL EQU   ARDTYPE                                                  01455000
ARDSS    EQU   ARDTYPE                                                  01456000
ARDHLI   EQU   ARDTYPE                                                  01457000
ARDKR    EQU   ARDTYPE                                                  01458000
ARDID    EQU   IDAARDB                                                  01459000
@NM00056 EQU   IDADIWA+92                                               01460000
@NM00055 EQU   IDADIWA+88                                               01461000
@NM00054 EQU   IDADIWA+84                                               01462000
@NM00053 EQU   IDADIWA+80                                               01463000
@NM00052 EQU   IDADIWA+76                                               01464000
@NM00051 EQU   IDADIWA+72                                               01465000
@NM00050 EQU   IDADIWA+68                                               01466000
@NM00049 EQU   IDADIWA+64                                               01467000
@NM00048 EQU   IDADIWA+60                                               01468000
@NM00047 EQU   IDADIWA+56                                               01469000
DIWINRBA EQU   IDADIWA+52                                               01470000
DIWRKCT  EQU   IDADIWA+48                                               01471000
DIWSAVE5 EQU   DIWSAVE+16                                               01472000
DIWSAVE4 EQU   DIWSAVE+12                                               01473000
DIWSAVE3 EQU   DIWSAVE+8                                                01474000
DIWSAVE2 EQU   DIWSAVE+4                                                01475000
DIWSAVE1 EQU   DIWSAVE                                                  01476000
DIWSPLTP EQU   IDADIWA+24                                               01477000
DIWBUFC  EQU   IDADIWA+20                                               01478000
DIWHRBA  EQU   IDADIWA+12                                               01479000
DIWLRBA  EQU   IDADIWA+8                                                01480000
@NM00046 EQU   IDADIWA+6                                                01481000
DIWFSPF  EQU   DIWFLG2                                                  01482000
DIW1ST   EQU   DIWFLG1                                                  01483000
DIWNOT1  EQU   DIWFLG1                                                  01484000
DIWSHIFT EQU   DIWFLG1                                                  01485000
DIWGSPC  EQU   DIWFLG1                                                  01486000
DIWEOKR  EQU   DIWFLG1                                                  01487000
DIWPFERR EQU   DIWFLG1                                                  01488000
DIWCISPL EQU   DIWFLG1                                                  01489000
DIWCAS   EQU   DIWFLG1                                                  01490000
DIWLEN   EQU   IDADIWA+2                                                01491000
DIWID    EQU   IDADIWA                                                  01492000
AMDEXCP  EQU   AMDSTAT+44                                               01493000
AMDNCAS  EQU   AMDSTAT+40                                               01494000
AMDNCIS  EQU   AMDSTAT+36                                               01495000
AMDASPA  EQU   AMDSTAT+32                                               01496000
AMDRETR  EQU   AMDSTAT+28                                               01497000
AMDUPR   EQU   AMDSTAT+24                                               01498000
AMDIREC  EQU   AMDSTAT+20                                               01499000
AMDDELR  EQU   AMDSTAT+16                                               01500000
AMDNLR   EQU   AMDSTAT+12                                               01501000
AMDNEXT  EQU   AMDSTAT+10                                               01502000
AMDNIL   EQU   AMDSTAT+8                                                01503000
AMDSTSP  EQU   AMDSTAT                                                  01504000
@NM00045 EQU   IDAAMDSB+41                                              01505000
@NM00044 EQU   AMDATTR3                                                 01506000
AMDLM    EQU   AMDATTR3                                                 01507000
AMDWAIT  EQU   AMDATTR3                                                 01508000
AMDBIND  EQU   AMDATTR3                                                 01509000
AMDFAULT EQU   AMDATTR3                                                 01510000
AMDUNQ   EQU   AMDATTR3                                                 01511000
AMDMAXRR EQU   AMDSSRBA                                                 01512000
AMDNSLOT EQU   AMDHLRBA                                                 01513000
AMDLRECL EQU   IDAAMDSB+24                                              01514000
AMDFSCA  EQU   IDAAMDSB+14                                              01515000
AMDCIPCA EQU   IDAAMDSB+12                                              01516000
AMDPCTCI EQU   IDAAMDSB+11                                              01517000
AMDPCTCA EQU   IDAAMDSB+10                                              01518000
AMDAXRKP EQU   AMDNEST                                                  01519000
AMDLEN   EQU   IDAAMDSB+2                                               01520000
AMDSPAN  EQU   AMDATTR                                                  01521000
AMDRRDS  EQU   AMDATTR                                                  01522000
AMDORDER EQU   AMDATTR                                                  01523000
AMDREPL  EQU   AMDATTR                                                  01524000
AMDSDT   EQU   AMDATTR                                                  01525000
AMDWCK   EQU   AMDATTR                                                  01526000
AMDSBID  EQU   IDAAMDSB                                                 01527000
BUFCEND  EQU   IDABUFC+64                                               01528000
BUFCUCDN EQU   IDABUFC+60                                               01529000
BUFCUCUP EQU   IDABUFC+56                                               01530000
BUFCMDBT EQU   IDABUFC+52                                               01531000
BUFCHAIN EQU   IDABUFC+48                                               01532000
BUFCNXT2 EQU   IDABUFC+37                                               01533000
BUFCIDXL EQU   IDABUFC+36                                               01534000
BUFCDSPC EQU   IDABUFC+32                                               01535000
BUFCWLEN EQU   BUFCINV                                                  01536000
BUFCNXT1 EQU   IDABUFC+24                                               01537000
BUFCCPA  EQU   IDABUFC+16                                               01538000
BUFCAMB  EQU   BUFCPLH                                                  01539000
@NM00043 EQU   BUFCFLG2                                                 01540000
BUFCEOD  EQU   BUFCFLG2                                                 01541000
BUFCBSYW EQU   BUFCFLG2                                                 01542000
BUFCBSYR EQU   BUFCFLG2                                                 01543000
BUFCNLAS EQU   BUFCFLG2                                                 01544000
BUFCXDDR EQU   BUFCFLG2                                                 01545000
BUFCFIX  EQU   BUFCIOFL                                                 01546000
BUFCPFCP EQU   BUFCIOFL                                                 01547000
BUFCXEDB EQU   BUFCIOFL                                                 01548000
BUFCWC   EQU   BUFCIOFL                                                 01549000
BUFCREAL EQU   BUFCIOFL                                                 01550000
BUFCRRD  EQU   BUFCIOFL                                                 01551000
BUFCFMT  EQU   BUFCIOFL                                                 01552000
BUFCEPT  EQU   BUFCFLG1                                                 01553000
BUFCEXC  EQU   BUFCFLG1                                                 01554000
BUFCER2  EQU   BUFCFLG1                                                 01555000
BUFCER1  EQU   BUFCFLG1                                                 01556000
BUFCINS  EQU   BUFCFLG1                                                 01557000
BUFCSEG  EQU   BUFCFLG1                                                 01558000
BUFCUPG  EQU   BUFCFLG1                                                 01559000
BUFCUCNT EQU   BUFCAVL                                                  01560000
@NM00042 EQU   IDABUFDR+16                                              01561000
BUFDBUFC EQU   IDABUFDR+12                                              01562000
@NM00041 EQU   BUFDRFLG                                                 01563000
BUFDRAVL EQU   BUFDRFLG                                                 01564000
BUFDRREL EQU   BUFDRFLG                                                 01565000
BUFDRTSB EQU   IDABUFDR+10                                              01566000
BUFDRMAX EQU   BUFDRCIX                                                 01567000
BUFDRPFN EQU   IDABUFDR+8                                               01568000
BUFDRPFB EQU   IDABUFDR+4                                               01569000
BUFDRLEN EQU   IDABUFDR+2                                               01570000
BUFDRNO  EQU   IDABUFDR+1                                               01571000
BUFDRID  EQU   IDABUFDR                                                 01572000
PLHERRET EQU   IDAPLH+276                                               01573000
PLHASCB  EQU   IDAPLH+272                                               01574000
PLHECB   EQU   IDAPLH+268                                               01575000
@NM00039 EQU   IDAPLH+265                                               01576000
PLHDRMSK EQU   IDAPLH+264                                               01577000
PLHR13   EQU   IDAPLH+260                                               01578000
PLHPARM1 EQU   IDAPLH+256                                               01579000
PLHSLRBA EQU   IDAPLH+244                                               01580000
PLHSRCSG EQU   IDAPLH+242                                               01581000
PLHNOSEG EQU   IDAPLH+240                                               01582000
PLHLLOR  EQU   IDAPLH+236                                               01583000
PLHXPLH  EQU   PLHWAX                                                   01584000
@NM00038 EQU   PLHIXSPL+8                                               01585000
PLHIXBFC EQU   PLHIXSPL+4                                               01586000
PLHHIREC EQU   PLHSSRBA                                                 01587000
PLHISPLP EQU   IDAPLH+196                                               01588000
PLHRBUFC EQU   IDAPLH+192                                               01589000
PLHNRBA  EQU   IDAPLH+184                                               01590000
PLHDDDD  EQU   PLHEOVPT                                                 01591000
PLHAR14  EQU   IDAPLH+176                                               01592000
@NM00037 EQU   IDAPLH+172                                               01593000
@NM00036 EQU   IDAPLH+168                                               01594000
PLHASAVE EQU   IDAPLH+164                                               01595000
PLHRETOS EQU   IDAPLH+118                                               01596000
PLHCHAIN EQU   IDAPLH+112                                               01597000
PLHAMB   EQU   IDAPLH+108                                               01598000
PLHSAVE5 EQU   IDAPLH+100                                               01599000
PLHSAVE4 EQU   IDAPLH+96                                                01600000
PLHSAVE3 EQU   IDAPLH+92                                                01601000
PLHARET  EQU   IDAPLH+80                                                01602000
PLHIIOB  EQU   PLHDIOB                                                  01603000
PLHSRSID EQU   IDAPLH+74                                                01604000
PLHNBUFC EQU   IDAPLH+56                                                01605000
@NM00035 EQU   IDAPLH+43                                                01606000
PLHEOVR  EQU   IDAPLH+42                                                01607000
PLHRCODE EQU   IDAPLH+41                                                01608000
PLHUCODE EQU   PLHJCODE                                                 01609000
PLHUPECB EQU   PLHJORBA                                                 01610000
PLHDSIDA EQU   IDAPLH+24                                                01611000
PLHCRPL  EQU   IDAPLH+20                                                01612000
PLHMRPL  EQU   IDAPLH+16                                                01613000
PLHBFRNO EQU   IDAPLH+15                                                01614000
PLHFRCNT EQU   IDAPLH+14                                                01615000
PLHRMIN  EQU   IDAPLH+13                                                01616000
PLHDSTYP EQU   IDAPLH+12                                                01617000
PLHACB   EQU   IDAPLH+8                                                 01618000
PLHRAE   EQU   PLHAFLGS                                                 01619000
PLHRABWD EQU   PLHAFLGS                                                 01620000
PLHIOSID EQU   PLHAFLGS                                                 01621000
PLHDBDC  EQU   PLHAFLGS                                                 01622000
PLHVAMB  EQU   PLHAFLGS                                                 01623000
PLHIOSRQ EQU   PLHAFLGS                                                 01624000
PLHDRLM  EQU   PLHAFLGS                                                 01625000
PLHEOVDF EQU   PLHFLG3                                                  01626000
PLHRVRS  EQU   PLHFLG3                                                  01627000
PLHBWD   EQU   PLHFLG3                                                  01628000
PLHSLVLD EQU   PLHFLG3                                                  01629000
PLHRAHD  EQU   PLHFLG3                                                  01630000
PLHSRBSG EQU   PLHFLG3                                                  01631000
@NM00034 EQU   PLHEFLGS+1                                               01632000
PLHRSTRT EQU   PLHEFLGS+1                                               01633000
PLHDSCAN EQU   PLHEFLGS                                                 01634000
PLHINVAL EQU   PLHEFLGS                                                 01635000
PLHEODX  EQU   PLHEFLGS                                                 01636000
PLHSRINV EQU   PLHEFLGS                                                 01637000
PLHSKPER EQU   PLHEFLGS                                                 01638000
PLH1ST   EQU   PLHEFLGS                                                 01639000
PLHNOSPC EQU   PLHEFLGS                                                 01640000
PLHIWAIT EQU   PLHFLG2                                                  01641000
PLHSVADV EQU   PLHFLG2                                                  01642000
PLHKEYMD EQU   PLHFLG2                                                  01643000
PLHSQINS EQU   PLHFLG2                                                  01644000
PLHUPD   EQU   PLHFLG2                                                  01645000
@NM00033 EQU   PLHFLG1                                                  01646000
PLHDRPND EQU   PLHFLG1                                                  01647000
PLHASYRQ EQU   PLHFLG1                                                  01648000
PLHRDEXC EQU   PLHFLG1                                                  01649000
PLHSSR   EQU   PLHFLG1                                                  01650000
PLHASKBF EQU   PLHFLG1                                                  01651000
PLHENDRQ EQU   PLHFLG1                                                  01652000
PLHEOVW  EQU   PLHFLG1                                                  01653000
PLHATV   EQU   IDAPLH+1                                                 01654000
PLHAVL   EQU   IDAPLH                                                   01655000
PLHIOSDQ EQU   IDAPLHDR+12                                              01656000
PLHDRCUR EQU   IDAPLHDR+10                                              01657000
PLHDRMAX EQU   IDAPLHDR+8                                               01658000
PLHDRREQ EQU   IDAPLHDR+4                                               01659000
PLHELTH  EQU   IDAPLHDR+2                                               01660000
PLHCNT   EQU   IDAPLHDR+1                                               01661000
PLHID    EQU   IDAPLHDR                                                 01662000
AMBTRACE EQU   IDAAMB+120                                               01663000
AMBVIOT  EQU   IDAAMB+116                                               01664000
AMBSZCP  EQU   IDAAMB+114                                               01665000
AMBSZFW  EQU   IDAAMB+112                                               01666000
AMBSZWR  EQU   IDAAMB+110                                               01667000
AMBSZRD  EQU   IDAAMB+108                                               01668000
AMBEXEX  EQU   IDAAMB+100                                               01669000
AMBWSHD  EQU   IDAAMB+96                                                01670000
AMBCPA   EQU   IDAAMB+92                                                01671000
AMBBM2SH EQU   IDAAMB+88                                                01672000
AMBRDCNT EQU   AMBCSWD1+2                                               01673000
@NM00032 EQU   AMBCSWD1+1                                               01674000
@NM00031 EQU   AMBAFLG                                                  01675000
AMBCFX   EQU   AMBAFLG                                                  01676000
AMBSIS   EQU   AMBAFLG                                                  01677000
AMBDFR   EQU   AMBAFLG                                                  01678000
AMBICI   EQU   AMBAFLG                                                  01679000
@NM00030 EQU   AMBAFLG                                                  01680000
AMBUPLH  EQU   IDAAMB+80                                                01681000
AMBPAMBL EQU   IDAAMB+76                                                01682000
AMBPIXP  EQU   IDAAMB+72                                                01683000
@NM00029 EQU   IDAAMB+68                                                01684000
AMBWKA   EQU   IDAAMB+60                                                01685000
AMBAMBXN EQU   AMBEOVPT                                                 01686000
AMBEDB   EQU   IDAAMB+52                                                01687000
AMBRPT   EQU   IDAAMB+50                                                01688000
AMBPUG   EQU   AMBFLG2                                                  01689000
AMBBUSY  EQU   AMBOFLGS                                                 01690000
AMBEXFG  EQU   AMBOFLGS                                                 01691000
@NM00028 EQU   AMBOFLGS                                                 01692000
AMBOPEN  EQU   AMBOFLGS                                                 01693000
@NM00027 EQU   AMBOFLGS                                                 01694000
AMBDEBAD EQU   AMBDEBPT+1                                               01695000
AMBIFLGS EQU   AMBDEBPT                                                 01696000
AMBAMETH EQU   IDAAMB+43                                                01697000
AMBUCRA  EQU   AMBINFL                                                  01698000
AMBSCRA  EQU   AMBINFL                                                  01699000
AMBCAT   EQU   AMBINFL                                                  01700000
@NM00026 EQU   AMBINFL                                                  01701000
@NM00025 EQU   AMBINFL                                                  01702000
AMBTIOT  EQU   IDAAMB+40                                                01703000
@NM00024 EQU   IDAAMB+38                                                01704000
AMBDDSN  EQU   IDAAMB+35                                                01705000
AMBCDSN  EQU   IDAAMB+32                                                01706000
AMBIOMB  EQU   AMBIOBAD                                                 01707000
@NM00023 EQU   AMBDSORG+1                                               01708000
AMBDORGA EQU   AMBDSORG+1                                               01709000
@NM00022 EQU   AMBDSORG                                                 01710000
AMBINBUF EQU   AMBFLG1                                                  01711000
AMBUBF   EQU   AMBFLG1                                                  01712000
AMBSPEED EQU   AMBFLG1                                                  01713000
AMBPCAT  EQU   AMBFLG1                                                  01714000
AMBMCAT  EQU   AMBFLG1                                                  01715000
AMBTYPE  EQU   AMBFLG1                                                  01716000
@NM00021 EQU   AMBFLG0                                                  01717000
AMBPSDS  EQU   AMBFLG0                                                  01718000
AMBCACB  EQU   IDAAMB+16                                                01719000
AMBBUFC  EQU   IDAAMB+8                                                 01720000
AMBLINK  EQU   IDAAMB+4                                                 01721000
AMBLEN   EQU   IDAAMB+2                                                 01722000
AMBRSC   EQU   IDAAMB+1                                                 01723000
AMBID    EQU   IDAAMB                                                   01724000
AMBLCMB  EQU   IDAAMBL+64                                               01725000
AMBLBIB  EQU   IDAAMBL+60                                               01726000
AMBLIX   EQU   IDAAMBL+56                                               01727000
AMBLDTA  EQU   IDAAMBL+52                                               01728000
AMBLMIDS EQU   IDAAMBL+42                                               01729000
AMBLNIDS EQU   IDAAMBL+41                                               01730000
@NM00020 EQU   IDAAMBL+40                                               01731000
AMBLNUM  EQU   IDAAMBL+38                                               01732000
AMBLNST  EQU   IDAAMBL+37                                               01733000
@NM00019 EQU   AMBLFLG2                                                 01734000
AMBLSTAG EQU   AMBLFLG2                                                 01735000
@NM00018 EQU   AMBLFLG2                                                 01736000
AMBLDUMY EQU   AMBLFLG1                                                 01737000
AMBLCAT  EQU   AMBLFLG1                                                 01738000
AMBLUCRA EQU   AMBLFLG1                                                 01739000
AMBLSCRA EQU   AMBLFLG1                                                 01740000
AMBLVVIC EQU   AMBLFLG1                                                 01741000
AMBLUPD  EQU   AMBLFLG1                                                 01742000
AMBLCINV EQU   AMBLFLG1                                                 01743000
AMBLFULL EQU   AMBLFLG1                                                 01744000
AMBLLEN  EQU   IDAAMBL+34                                               01745000
@NM00017 EQU   AMBLSHAR                                                 01746000
AMBLWRIT EQU   AMBLSHAR                                                 01747000
AMBLCATO EQU   AMBLSHAR                                                 01748000
AMBLPRIM EQU   AMBLSHAR                                                 01749000
AMBLID   EQU   IDAAMBL+32                                               01750000
@NM00016 EQU   IDAAMBL+31                                               01751000
@NM00015 EQU   AMBLTYPE                                                 01752000
AMBLFIX  EQU   AMBLTYPE                                                 01753000
AMBLBASE EQU   AMBLTYPE                                                 01754000
AMBLAIX  EQU   AMBLTYPE                                                 01755000
AMBLUPGR EQU   AMBLTYPE                                                 01756000
AMBLPATH EQU   AMBLTYPE                                                 01757000
AMBLENO  EQU   AMBLVC+1                                                 01758000
AMBLVRT  EQU   AMBLVC                                                   01759000
AMBLXPT  EQU   IDAAMBL+24                                               01760000
AMBLDFR  EQU   AMBLQ                                                    01761000
AMBLESDS EQU   AMBLQ                                                    01762000
AMBLKSDS EQU   AMBLQ                                                    01763000
AMBLUBF  EQU   AMBLQ                                                    01764000
AMBLFSTP EQU   AMBLQ                                                    01765000
AMBLLSR  EQU   AMBLQ                                                    01766000
AMBLGSR  EQU   AMBLQ                                                    01767000
AMBLDDC  EQU   AMBLQ                                                    01768000
AMBLDCI  EQU   AMBLIDF+4                                                01769000
AMBLCACB EQU   AMBLIDF                                                  01770000
@NM00014 EQU   AMBLEOV+2                                                01771000
AMBLCOMP EQU   AMBLEOV+1                                                01772000
AMBLESET EQU   AMBLEFLG                                                 01773000
AMBLWAIT EQU   AMBLEFLG                                                 01774000
AMBLACB  EQU   IDAAMBL+8                                                01775000
AMBLSCHN EQU   IDAAMBL+4                                                01776000
AMBLPCHN EQU   IDAAMBL                                                  01777000
ACBAPID  EQU   ACBCOMN+72                                               01778000
ACBCBMWA EQU   ACBCOMN+68                                               01779000
ACBUAPTR EQU   ACBCOMN+64                                               01780000
ACBLRECL EQU   ACBCOMN+62                                               01781000
ACBMSGLN EQU   ACBBLKSZ                                                 01782000
ACBBUFSP EQU   ACBCOMN+56                                               01783000
@NM00013 EQU   ACBUJFCB+1                                               01784000
ACBOPTN  EQU   ACBUJFCB                                                 01785000
ACBVVIC  EQU   ACBINFLG                                                 01786000
ACBUCRA  EQU   ACBINFLG                                                 01787000
ACBSCRA  EQU   ACBINFLG                                                 01788000
ACBCAT   EQU   ACBINFLG                                                 01789000
ACBIJRQE EQU   ACBINFLG                                                 01790000
ACBJEPS  EQU   ACBINFLG                                                 01791000
@NM00012 EQU   ACBINFLG                                                 01792000
ACBERFLG EQU   ACBCOMN+49                                               01793000
ACBBUSY  EQU   ACBIOSFG                                                 01794000
ACBLOCK  EQU   ACBEXFG                                                  01795000
@NM00011 EQU   ACBOFLGS                                                 01796000
ACBDSERR EQU   ACBOFLGS                                                 01797000
ACBOPEN  EQU   ACBOFLGS                                                 01798000
ACBEOV   EQU   ACBOFLGS                                                 01799000
@NM00010 EQU   ACBOFLGS                                                 01800000
ACBDEB   EQU   ACBDDNM+5                                                01801000
ACBERFL  EQU   ACBDDNM+4                                                01802000
ACBAM    EQU   ACBAMETH                                                 01803000
ACBINFL  EQU   ACBDDNM+2                                                01804000
ACBTIOT  EQU   ACBDDNM                                                  01805000
ACBUEL   EQU   ACBEXLST                                                 01806000
ACBPASSW EQU   ACBCOMN+32                                               01807000
ACBMSGAR EQU   ACBCOMN+28                                               01808000
@NM00009 EQU   ACBDSORG+1                                               01809000
ACBDORGA EQU   ACBDSORG+1                                               01810000
@NM00008 EQU   ACBDSORG                                                 01811000
ACBCRNRE EQU   ACBCROPS                                                 01812000
ACBCRNCK EQU   ACBCROPS                                                 01813000
ACBASA   EQU   ACBCCTYP                                                 01814000
@NM00007 EQU   ACBCCTYP                                                 01815000
ACBRECAF EQU   ACBRECFM                                                 01816000
ACBJBUF  EQU   ACBBUFPL+2                                               01817000
ACBMACR4 EQU   ACBBUFPL+1                                               01818000
@NM00006 EQU   ACBMACR3                                                 01819000
ACBNCFX  EQU   ACBMACR3                                                 01820000
ACBSIS   EQU   ACBMACR3                                                 01821000
ACBDFR   EQU   ACBMACR3                                                 01822000
ACBICI   EQU   ACBMACR3                                                 01823000
ACBGSR   EQU   ACBMACR3                                                 01824000
ACBLSR   EQU   ACBMACR3                                                 01825000
@NM00005 EQU   ACBMACR3                                                 01826000
ACBBUFNI EQU   ACBCOMN+18                                               01827000
ACBBUFND EQU   ACBCOMN+16                                               01828000
ACBSTRNO EQU   ACBCOMN+15                                               01829000
ACBBSTNO EQU   ACBCOMN+14                                               01830000
ACBAIX   EQU   ACBMACR2                                                 01831000
ACBDSN   EQU   ACBMACR2                                                 01832000
ACBRST   EQU   ACBMACR2                                                 01833000
ACBLOGON EQU   ACBMACR2                                                 01834000
ACBSKP   EQU   ACBMACR2                                                 01835000
@NM00004 EQU   ACBMACR2                                                 01836000
ACBUBF   EQU   ACBMACR1                                                 01837000
ACBOUT   EQU   ACBMACR1                                                 01838000
ACBIN    EQU   ACBMACR1                                                 01839000
ACBDIR   EQU   ACBMACR1                                                 01840000
ACBSEQ   EQU   ACBMACR1                                                 01841000
ACBBLK   EQU   ACBCNV                                                   01842000
ACBADD   EQU   ACBADR                                                   01843000
ACBKEY   EQU   ACBMACR1                                                 01844000
ACBINRTN EQU   ACBCOMN+8                                                01845000
ACBIBCT  EQU   ACBJWA                                                   01846000
ACBLEN2  EQU   ACBLENG2                                                 01847000
ACBSTYP  EQU   ACBCOMN+1                                                01848000
ACBID    EQU   ACBCOMN                                                  01849000
RPLERMSA EQU   RPLCOMN+72                                               01850000
RPLEMLEN EQU   RPLCOMN+70                                               01851000
RPLACTIV EQU   RPLCOMN+69                                               01852000
RPLBRANC EQU   RPLEXTD1                                                 01853000
RPLNIB   EQU   RPLEXTD1                                                 01854000
@NM00003 EQU   RPLEXTD1                                                 01855000
RPLEXIT  EQU   RPLEXTD1                                                 01856000
RPLNEXIT EQU   RPLEXTD1                                                 01857000
RPLEXSCH EQU   RPLEXTD1                                                 01858000
@NM00002 EQU   RPLRBAR+3                                                01859000
@NM00001 EQU   RPLAIXID                                                 01860000
RPLAXPKP EQU   RPLAIXID                                                 01861000
RPLAIXPC EQU   RPLRBAR                                                  01862000
RPLRSV88 EQU   RPLOPT8                                                  01863000
RPLUNCON EQU   RPLOPT8                                                  01864000
RPLACTV  EQU   RPLOPT8                                                  01865000
RPLSESS  EQU   RPLOPT8                                                  01866000
RPLPEND  EQU   RPLOPT8                                                  01867000
RPLODPRM EQU   RPLOPT8                                                  01868000
RPLODACP EQU   RPLOPT8                                                  01869000
RPLODACQ EQU   RPLOPT8                                                  01870000
RPLRSV78 EQU   RPLOPT7                                                  01871000
RPLRSV77 EQU   RPLOPT7                                                  01872000
RPLRLSOP EQU   RPLOPT7                                                  01873000
RPLTPOST EQU   RPLOPT7                                                  01874000
RPLQOPT  EQU   RPLOPT7                                                  01875000
RPLCNIMM EQU   RPLCNOPT                                                 01876000
RPLCNANY EQU   RPLCNOPT                                                 01877000
RPLCNALL EQU   RPLCNOPT                                                 01878000
RPLRSV68 EQU   RPLOPT6                                                  01879000
RPLRSV67 EQU   RPLOPT6                                                  01880000
RPLLOCK  EQU   RPLOPT6                                                  01881000
RPLNCOND EQU   RPLOPT6                                                  01882000
RPLCOND  EQU   RPLOPT6                                                  01883000
RPLEOT   EQU   RPLUNTYP                                                 01884000
RPLEOM   EQU   RPLUNTYP                                                 01885000
RPLEOB   EQU   RPLUNTYP                                                 01886000
RPLWROPT EQU   RPLOPT5                                                  01887000
RPLNODE  EQU   RPLOPT5                                                  01888000
RPLERACE EQU   RPLWRTYP                                                 01889000
RPLEAU   EQU   RPLWRTYP                                                 01890000
RPLNERAS EQU   RPLWRTYP                                                 01891000
RPLPSOPT EQU   RPLOPT5                                                  01892000
RPLSSNIN EQU   RPLOPT5                                                  01893000
RPLDLGIN EQU   RPLOPT5                                                  01894000
RPLBUFL  EQU   RPLCOMN+52                                               01895000
RPLCHAIN EQU   RPLNXTRP                                                 01896000
RPLOPT4  EQU   RPLOPTCD+3                                               01897000
RPLALIGN EQU   RPLOPT3                                                  01898000
RPLFMT   EQU   RPLOPT3                                                  01899000
RPLFLD   EQU   RPLOPT3                                                  01900000
RPLVFY   EQU   RPLOPT3                                                  01901000
RPLBLK   EQU   RPLOPT3                                                  01902000
RPLSFORM EQU   RPLOPT3                                                  01903000
RPLEODS  EQU   RPLOPT3                                                  01904000
RPLNSP   EQU   RPLOPT2                                                  01905000
RPLWAITX EQU   RPLOPT2                                                  01906000
RPLLRD   EQU   RPLOPT2                                                  01907000
RPLCNV   EQU   RPLOPT2                                                  01908000
RPLADD   EQU   RPLADR                                                   01909000
RPLKEY   EQU   RPLOPT2                                                  01910000
RPLECBIN EQU   RPLECBSW                                                 01911000
RPLGEN   EQU   RPLOPT1                                                  01912000
RPLKGE   EQU   RPLOPT1                                                  01913000
RPLASY   EQU   RPLOPT1                                                  01914000
RPLSKP   EQU   RPLOPT1                                                  01915000
RPLDIR   EQU   RPLOPT1                                                  01916000
RPLLOC   EQU   RPLOPT1                                                  01917000
RPLDAF   EQU   RPLARG+2                                                 01918000
RPLSAF   EQU   RPLARG                                                   01919000
RPLTCBPT EQU   RPLCOMN+28                                               01920000
RPLCCHAR EQU   RPLCOMN+20                                               01921000
RPLSTRID EQU   RPLCOMN+18                                               01922000
RPLKEYL  EQU   RPLKEYLE                                                 01923000
RPLRDSOH EQU   RPLFDB3                                                  01924000
RPLRLG   EQU   RPLFDB3                                                  01925000
RPLLGFRC EQU   RPLFDB3                                                  01926000
RPLREOT  EQU   RPLFDB3                                                  01927000
RPLREOM  EQU   RPLFDB3                                                  01928000
RPLREOB  EQU   RPLFDB3                                                  01929000
RPLSV32  EQU   RPLFDB3                                                  01930000
RPLUINPT EQU   RPLFDB3                                                  01931000
RPLSTSAV EQU   RPLFDB2                                                  01932000
RPLCUERR EQU   RPLFDB2                                                  01933000
RPLDLGFL EQU   RPLFDB2                                                  01934000
RPLIOERR EQU   RPLFDB2                                                  01935000
RPLDVUNS EQU   RPLFDB2                                                  01936000
RPLATND  EQU   RPLFDB2                                                  01937000
RPLRVID  EQU   RPLFDB2                                                  01938000
RPLERLK  EQU   RPLFDB2                                                  01939000
RPLSTAT  EQU   RPLFDBWD                                                 01940000
RPLPOST  EQU   RPLECB                                                   01941000
RPLWAIT  EQU   RPLECB                                                   01942000
RPLPLHPT EQU   RPLCOMN+4                                                01943000
RPLLEN2  EQU   RPLLEN                                                   01944000
RPLREQ   EQU   RPLIDWD+2                                                01945000
RPLSTYP  EQU   RPLIDWD+1                                                01946000
RPLID    EQU   RPLIDWD                                                  01947000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01948000
@RT00185 EQU   KRERROR                                                  01949000
@RT00189 EQU   CIFULL                                                   01950000
@RF00192 EQU   @RC00174                                                 01951000
@RF00202 EQU   @RC00174                                                 01952000
@RT00235 EQU   CIFULL                                                   01953000
@RT00247 EQU   CIFULL                                                   01954000
@RC00318 EQU   @RC00313                                                 01955000
@RF00389 EQU   DISTART                                                  01956000
@RT00434 EQU   KRERROR                                                  01957000
@RT00439 EQU   KRERROR                                                  01958000
@ENDDATA EQU   *                                                        01959000
         END   IDA019RM,(C'PLS2054',0701,78172)                         01960000
