         TITLE 'IDA019RN  INDEXING SUBROUTINES                         *00001000
                        '                                               00002000
IDA019RN CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RN  78.172'                                 0001 00009000
IDAAQR   DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00097-IDAAQR)                                     00013000
         ENTRY IDAAQR                                                   00014000
IDAER    DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00226-IDAER)                                      00018000
         ENTRY IDAER                                                    00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
*                                                                  0097 00027000
*/*    IDAAQR SUBROUTINE                                             */ 00028000
*/*       FUNCTION                                                   */ 00029000
*/*        OBTAINS AN RBA FOR AN INDEX RECORD                        */ 00030000
*/*        PREFORMATS THE RECORD IF REQUIRED                         */ 00031000
*/*       INPUT -                                                    */ 00032000
*/*        RWORK1 = POINTER TO CURRENT WORK AREA                     */ 00033000
*/*       OUTPUT -                                                   */ 00034000
*/*        RBA WILL BE PLACED INTO ICWCRBA FIELD OF WORK AREA        */ 00035000
*/*        AFTER ICWCRBA HAS BEEN MOVED TO ICWPRBA                   */ 00036000
*/*       RETURN -                                                   */ 00037000
*/*        TO CALLER IF NO ERRORS WERE ENCOUNTERED                   */ 00038000
*/*        TO CALLER OF CALLER IN CASE OF I/O ERROR                  */ 00039000
*/*                                                                  */ 00040000
*                                                                  0097 00041000
*IDAAQR:                                                           0097 00042000
*   ENTRY;                          /*                               */ 00043000
@EP00097 DS    0H                                                  0098 00044000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 00045000
         IDASVR14                                                       00046000
*   RESPECIFY                                                      0099 00047000
*    (RWORK2) RSTD;                 /*                               */ 00048000
*   RWORK2=AMDPARDB;                /* POINT TO FIRST ARDB           */ 00049000
         L     @10,AMBDSB(,RAMB)                                   0100 00050000
         L     RWORK2,AMDPARDB(,@10)                               0100 00051000
*   IF AMDSDT=ON THEN               /* IS SEQ SET WITH DATA          */ 00052000
         TM    AMDSDT(@10),B'00100000'                             0101 00053000
         BNO   @RF00101                                            0101 00054000
*     DO;                           /* YES                           */ 00055000
*       IF ICWLN=ICWSS THEN         /* IS THIS SEQ SET LEVEL         */ 00056000
         CLC   ICWLN(2,RWORK1),@CH00053                            0103 00057000
         BNE   @RF00103                                            0103 00058000
*         DO;                       /* YES                           */ 00059000
*           IF ICWKRDS=ON THEN      /* IS THIS A KEY RANGE DS        */ 00060000
         TM    ICWKRDS(RWORK1),B'00000100'                         0105 00061000
         BNO   @RF00105                                            0105 00062000
*             DO WHILE RWORK2->ARDNPTR/* YES, START ROUTINE TO       */ 00063000
*                   ^=ZERO;         /* LOCATE ARDB WITH ARDKR        */ 00064000
         B     @DE00106                                            0106 00065000
@DL00106 DS    0H                                                  0107 00066000
*               IF RWORK2->ARDKR=ON THEN/* = ON AND LO AND HI KEY    */ 00067000
         TM    ARDKR(RWORK2),B'10000000'                           0107 00068000
         BNO   @RF00107                                            0107 00069000
*                 DO;               /* BRACKETING PLH KEY            */ 00070000
*                   IF RWORK2->ARDKEYS(1:AMDKEYLN)/* IS LO KEY LESS  */ 00071000
*                       ^>PLHKEY(1:AMDKEYLN) THEN/* THAN OR = PLHKEY */ 00072000
         L     @10,PLHKEYPT(,RPLH)                                 0109 00073000
         L     @07,AMBDSB(,RAMB)                                   0109 00074000
         LH    @07,AMDKEYLN(,@07)                                  0109 00075000
         LR    @15,@07                                             0109 00076000
         BCTR  @15,0                                               0109 00077000
         EX    @15,@SC00895                                        0109 00078000
         BH    @RF00109                                            0109 00079000
*                     DO;           /* YES, POINT TO HI KEY          */ 00080000
*                       RPARM1=RWORK2+AMDKEYLN;/* OF THE ARDB        */ 00081000
         ALR   @07,RWORK2                                          0111 00082000
         LR    RPARM1,@07                                          0111 00083000
*                       IF RPARM1->ARDKEYS(1:AMDKEYLN)/* IS HI KEY > */ 00084000
*                           ^<PLHKEY(1:AMDKEYLN) THEN/* OR = TO    0112 00085000
*                                      PLHKEY                        */ 00086000
         EX    @15,@SC00897                                        0112 00087000
         BNL   @RT00112                                            0112 00088000
*                         GO TO PROCEED;/* YES, ARDB FOUND           */ 00089000
*                     END;          /*                               */ 00090000
*                 END;              /*                               */ 00091000
@RF00109 DS    0H                                                  0116 00092000
*               RWORK2=RWORK2->ARDNPTR;/* POINT TO NEXT ARDB         */ 00093000
@RF00107 L     RWORK2,ARDNPTR(,RWORK2)                             0116 00094000
*             END;                  /*                               */ 00095000
@DE00106 L     @10,ARDNPTR(,RWORK2)                                0117 00096000
         LTR   @10,@10                                             0117 00097000
         BNZ   @DL00106                                            0117 00098000
*           ELSE                    /* NOT KEY RANGE DATA SET        */ 00099000
*             DO WHILE RWORK2->ARDNPTR/* LOOP THRU ARDB STRING       */ 00100000
*                   ^=ZERO;         /* LOOKING FOR THE ONE           */ 00101000
         B     @RC00105                                            0118 00102000
@RF00105 B     @DE00118                                            0118 00103000
@DL00118 DS    0H                                                  0119 00104000
*               IF RWORK2->ARDSS=ON THEN/* WHICH REPRESENTS THE      */ 00105000
         TM    ARDSS(RWORK2),B'00100000'                           0119 00106000
         BO    @RT00119                                            0119 00107000
*                 GO TO PROCEED;    /* SEQUENCE                      */ 00108000
*               ELSE                /*                               */ 00109000
*                 RWORK2=RWORK2->ARDNPTR;/* MOVE TO NEXT ARDB        */ 00110000
         L     RWORK2,ARDNPTR(,RWORK2)                             0121 00111000
*             END;                  /*                               */ 00112000
@DE00118 L     @10,ARDNPTR(,RWORK2)                                0122 00113000
         LTR   @10,@10                                             0122 00114000
         BNZ   @DL00118                                            0122 00115000
*         END;                      /*                               */ 00116000
*       ELSE                        /* NOT SEQUENCE SET LVL          */ 00117000
*         DO WHILE RWORK2->ARDNPTR  /* SO LOOP THRU ARDB             */ 00118000
*               ^=ZERO;             /* STRING TO LOCATE ARDB         */ 00119000
         B     @RC00103                                            0124 00120000
@RF00103 B     @DE00124                                            0124 00121000
@DL00124 DS    0H                                                  0125 00122000
*           IF RWORK2->ARDHLI=ON THEN/* REPRESENTING THE HI          */ 00123000
         TM    ARDHLI(RWORK2),B'01000000'                          0125 00124000
         BO    @RT00125                                            0125 00125000
*             GO TO PROCEED;        /* LEVELS OF INDEX               */ 00126000
*           RWORK2=RWORK2->ARDNPTR; /* MOVE TO NEXT ARDB             */ 00127000
         L     RWORK2,ARDNPTR(,RWORK2)                             0127 00128000
*         END;                      /*                               */ 00129000
@DE00124 L     @10,ARDNPTR(,RWORK2)                                0128 00130000
         LTR   @10,@10                                             0128 00131000
         BNZ   @DL00124                                            0128 00132000
*     END;                          /*                               */ 00133000
@RC00103 DS    0H                                                  0130 00134000
*PROCEED:                                                          0130 00135000
*   IF RWORK2->ARDHRBA^<            /* IS SPACE AVAILABLE IN         */ 00136000
*       RWORK2->ARDERBA THEN        /* THIS ARDB                     */ 00137000
@RF00101 DS    0H                                                  0130 00138000
PROCEED  CLC   ARDHRBA(4,RWORK2),ARDERBA(RWORK2)                   0130 00139000
         BL    @RF00130                                            0130 00140000
*     DO;                           /* NO                            */ 00141000
*       PLHEOVR=AMBEOVAR;           /* REQUEST ALLOC. BY RBA         */ 00142000
         MVI   PLHEOVR(RPLH),B'10000010'                           0132 00143000
*       PLHEOVPT=ADDR(RWORK2->ARDERBA);/* SET RBA TO EXTEND          */ 00144000
         LA    @10,ARDERBA(,RWORK2)                                0133 00145000
         ST    @10,PLHEOVPT(,RPLH)                                 0133 00146000
*       RPARM1=RWORK2;              /* SAVE ARDB ADDRESS             */ 00147000
         LR    RPARM1,RWORK2                                       0134 00148000
*I01:                                                              0135 00149000
*       DO;                         /* IDACALL(IDAEOVIF)             */ 00150000
I01      DS    0H                                                  0136 00151000
*         CALL IDAEOVIF;            /* EXIT TO IDAEOVIF              */ 00152000
         L     @15,@CV00854                                        0136 00153000
         BALR  @14,@15                                             0136 00154000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00155000
         BALR @11,0                                                     00156000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00157000
         USING *,@11                                                    00158000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00159000
         L     @11,=A(@PSTART)                                          00160000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00161000
         USING @PSTART,@11                                              00162000
*       END I01;                    /* GO TO EOV ROUTINE             */ 00163000
*       RESPECIFY                                                  0142 00164000
*        (RWORK1,                                                  0142 00165000
*         RWORK2) RSTD;             /*                               */ 00166000
*       RESPECIFY                                                  0143 00167000
*        (R15) RSTD;                /*                               */ 00168000
*       IF RPLERREG^=ZERO THEN      /* WAS SPACE AVAILABLE           */ 00169000
         CLI   RPLERREG(RRPL),0                                    0144 00170000
         BE    @RF00144                                            0144 00171000
*         DO;                       /* NO                            */ 00172000
*           IF AMBCREAT=ON THEN     /* IS THIS CREATE MODE           */ 00173000
         TM    AMBCREAT(RAMB),B'10000000'                          0146 00174000
         BNO   @RF00146                                            0146 00175000
*             PLHKEYMD=OFF;         /* YES, FORCE ERRORS IF USER   0147 00176000
*                                      CONTINUES TO ADD RECORDS TO 0147 00177000
*                                      DATA SET                      */ 00178000
         NI    PLHKEYMD(RPLH),B'11011111'                          0147 00179000
*           RAMB=AMBLDTA;           /* RESTORE RAMB                  */ 00180000
@RF00146 L     @14,RPLDACB(,RRPL)                                  0148 00181000
         L     @14,ACBAMBL(,@14)                                   0148 00182000
         L     RAMB,AMBLDTA(,@14)                                  0148 00183000
*           R15=IOERR;              /* SET CATASTROPHIC ERROR        */ 00184000
         LA    R15,4                                               0149 00185000
*           GEN(IDARST14);          /* POINT TO CALLER               */ 00186000
         IDARST14                                                       00187000
*           CALL EXIT;              /* RETURN TO CALLER              */ 00188000
         BAL   @14,EXIT                                            0151 00189000
*           RESPECIFY                                              0152 00190000
*            (R15) UNRSTD;          /*                               */ 00191000
*         END;                      /*                               */ 00192000
*       DO;                         /*                               */ 00193000
@RF00144 DS    0H                                                  0155 00194000
*         RWORK1=AMBIWA;            /* POINT TO FIRST WA             */ 00195000
         L     RWORK1,AMBIWA(,RAMB)                                0155 00196000
*         RWORK2=ICWADD;            /* GET ADDRESS OF CURRENT        */ 00197000
         L     RWORK2,ICWADD(,RWORK1)                              0156 00198000
*         RWORK1=RWORK2;            /* WA IN RWORK1                  */ 00199000
         LR    RWORK1,RWORK2                                       0157 00200000
*         RWORK2=RPARM1;            /* POINT TO ARDB                 */ 00201000
         LR    RWORK2,RPARM1                                       0158 00202000
*         RWORK2->ARDUSED=OFF;      /* INSURE PREFORMAT              */ 00203000
         NI    ARDUSED(RWORK2),B'11111011'                         0159 00204000
*       END;                        /*                               */ 00205000
*     END;                          /*                               */ 00206000
*   DO;                             /*                               */ 00207000
@RF00130 DS    0H                                                  0163 00208000
*     ICWPRBA=ICWCRBA;              /* MOVE CURR. TO PREV. RBA       */ 00209000
         L     @10,ICWCRBA(,RWORK1)                                0163 00210000
         ST    @10,ICWPRBA(,RWORK1)                                0163 00211000
*     ICWCRBA=RWORK2->ARDHRBA;      /* MOVE NEW RBA TO WA            */ 00212000
         L     @10,ARDHRBA(,RWORK2)                                0164 00213000
         ST    @10,ICWCRBA(,RWORK1)                                0164 00214000
*     AMDNLR=AMDNLR+ONE;            /* BUMP STATISTICS COUNT         */ 00215000
         L     @07,AMBDSB(,RAMB)                                   0165 00216000
         LA    @00,1                                               0165 00217000
         AL    @00,AMDNLR(,@07)                                    0165 00218000
         ST    @00,AMDNLR(,@07)                                    0165 00219000
*     AMDASPA=AMDASPA-AMDCINV;      /* REDUCE TOTAL NO. BYTES        */ 00220000
         L     @15,AMDCINV(,@07)                                   0166 00221000
         L     @00,AMDASPA(,@07)                                   0166 00222000
         SLR   @00,@15                                             0166 00223000
         ST    @00,AMDASPA(,@07)                                   0166 00224000
*     RWORK2->ARDHRBA=RWORK2->ARDHRBA/* MOVE HIGH USED               */ 00225000
*         +AMDCINV;                 /* RBA UP BY CI LENGTH           */ 00226000
         ALR   @15,@10                                             0167 00227000
         ST    @15,ARDHRBA(,RWORK2)                                0167 00228000
*     IF RWORK2->ARDUSED=OFF THEN   /* HAS ANY SPACE BEEN USED       */ 00229000
         TM    ARDUSED(RWORK2),B'00000100'                         0168 00230000
         BNZ   @RF00168                                            0168 00231000
*       DO;                         /* NO, PREFORMAT IS REQD.        */ 00232000
*         ICWARDBP=RWORK2;          /* SAVE ARDB PTR IN WA           */ 00233000
         ST    RWORK2,ICWARDBP(,RWORK1)                            0170 00234000
*         RPARM1=ICWCRBA;           /* GET INITIAL RBA AND           */ 00235000
         LR    RPARM1,@10                                          0171 00236000
*I02:                                                              0172 00237000
*         DO;                       /* IDACALL(IDA019RK)             */ 00238000
I02      DS    0H                                                  0173 00239000
*           CALL IDA019RK;          /* EXIT TO IDA019RK              */ 00240000
         L     @15,@CV00855                                        0173 00241000
         BALR  @14,@15                                             0173 00242000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00243000
         BALR @11,0                                                     00244000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00245000
         USING *,@11                                                    00246000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00247000
         L     @11,=A(@PSTART)                                          00248000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00249000
         USING @PSTART,@11                                              00250000
*         END I02;                  /* GO PREFORMAT                  */ 00251000
*         RESPECIFY                                                0179 00252000
*          (RWORK1,                                                0179 00253000
*           RWORK2) RSTD;           /*                               */ 00254000
*         IF RPLERREG^=ZERO THEN    /* WAS THERE AN I/O ERROR        */ 00255000
         CLI   RPLERREG(RRPL),0                                    0180 00256000
         BNE   @RT00180                                            0180 00257000
*           GO TO FMTERR;           /* GO RETURN WITH ERROR          */ 00258000
*         RWORK1=AMBIWA;            /* REESTABLISH RWORK1            */ 00259000
         L     RWORK1,AMBIWA(,RAMB)                                0182 00260000
*         RWORK2=ICWADD;            /* AND RWORK2 REGS               */ 00261000
         L     RWORK2,ICWADD(,RWORK1)                              0183 00262000
*         RWORK1=RWORK2;            /* BECAUSE THEY WERE             */ 00263000
         LR    RWORK1,RWORK2                                       0184 00264000
*         RWORK2=ICWARDBP;          /* SUBJECT TO DESTRUCTION        */ 00265000
         L     RWORK2,ICWARDBP(,RWORK1)                            0185 00266000
*         RWORK2->ARDUSED=ON;       /* MARK ARDB INITIALIZED         */ 00267000
         OI    ARDUSED(RWORK2),B'00000100'                         0186 00268000
*       END;                        /*                               */ 00269000
*     IF AMDREPL=ON|(AMDSDT=ON&     /* IS REPLICATION                */ 00270000
*         ICWLN=ICWSS) THEN         /* SPECIFIED OR IMPLIED          */ 00271000
@RF00168 L     @10,AMBDSB(,RAMB)                                   0188 00272000
         TM    AMDREPL(@10),B'00010000'                            0188 00273000
         BO    @RT00188                                            0188 00274000
         TM    AMDSDT(@10),B'00100000'                             0188 00275000
         BNO   @RF00188                                            0188 00276000
         CLC   ICWLN(2,RWORK1),@CH00053                            0188 00277000
         BE    @RT00188                                            0188 00278000
*       GO TO PREFMT;               /* YES                           */ 00279000
*     DO;                           /* ARE ANY PREFORMATTED          */ 00280000
@RF00188 DS    0H                                                  0191 00281000
*       RPARM1=((ICWCRBA/AMDCINV)//(AMDCIPCA))+ONE;/* RECORDS        */ 00282000
         L     @10,AMBDSB(,RAMB)                                   0191 00283000
         L     @09,ICWCRBA(,RWORK1)                                0191 00284000
         SLR   @08,@08                                             0191 00285000
         D     @08,AMDCINV(,@10)                                   0191 00286000
         LH    @10,AMDCIPCA(,@10)                                  0191 00287000
         SLR   @08,@08                                             0191 00288000
         DR    @08,@10                                             0191 00289000
         AL    @08,@CF00053                                        0191 00290000
         LR    RPARM1,@08                                          0191 00291000
*       IF RPARM1=AMDCIPCA&RWORK2->ARDHRBA^=/* REMAINING             */ 00292000
*           RWORK2->ARDERBA THEN    /*                               */ 00293000
         CR    RPARM1,@10                                          0192 00294000
         BNE   @RF00192                                            0192 00295000
         CLC   ARDHRBA(4,RWORK2),ARDERBA(RWORK2)                   0192 00296000
         BE    @RF00192                                            0192 00297000
*PREFMT:                                                           0193 00298000
*         DO;                       /* FINAL CHK BEFORE PREFMT       */ 00299000
PREFMT   DS    0H                                                  0194 00300000
*           IF RWORK2->ARDHRBA<     /* IS ANY SPACE AVAILABLE        */ 00301000
*               RWORK2->ARDERBA THEN/* IN ARDB TO PREFORMAT          */ 00302000
         L     @10,ARDHRBA(,RWORK2)                                0194 00303000
         CL    @10,ARDERBA(,RWORK2)                                0194 00304000
         BNL   @RF00194                                            0194 00305000
*             DO;                   /* YES                           */ 00306000
*               RPARM1=RWORK2->ARDHRBA;/* GET RBA TO PREFORMAT       */ 00307000
         LR    RPARM1,@10                                          0196 00308000
*I03:                                                              0197 00309000
*               DO;                 /* IDACALL(IDA019RK)             */ 00310000
I03      DS    0H                                                  0198 00311000
*                 CALL IDA019RK;    /* EXIT TO IDA019RK              */ 00312000
         L     @15,@CV00855                                        0198 00313000
         BALR  @14,@15                                             0198 00314000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00315000
         BALR @11,0                                                     00316000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00317000
         USING *,@11                                                    00318000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00319000
         L     @11,=A(@PSTART)                                          00320000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00321000
         USING @PSTART,@11                                              00322000
*               END I03;            /* GO TO PREFORMAT ROUTINE       */ 00323000
*               RESPECIFY                                          0204 00324000
*                (RWORK1) RSTD;     /*                               */ 00325000
*               IF RPLERREG^=ZERO THEN/* WAS THERE AN ERROR          */ 00326000
         CLI   RPLERREG(RRPL),0                                    0205 00327000
         BE    @RF00205                                            0205 00328000
*FMTERR:                                                           0206 00329000
*                 DO;               /* YES                           */ 00330000
FMTERR   DS    0H                                                  0207 00331000
*                   RESPECIFY                                      0207 00332000
*                    (R15) RSTD;    /*                               */ 00333000
*                   R15=IOERR;      /* SHOW ERROR IN REG 15          */ 00334000
         LA    R15,4                                               0208 00335000
*                   RAMB=AMBLDTA;   /* RESTORE RAMB FOR CALLER       */ 00336000
         L     @14,RPLDACB(,RRPL)                                  0209 00337000
         L     @14,ACBAMBL(,@14)                                   0209 00338000
         L     RAMB,AMBLDTA(,@14)                                  0209 00339000
*                   GEN(IDARST14);  /* POINT BACK TO CALLER          */ 00340000
         IDARST14                                                       00341000
*                   CALL EXIT;      /* RETURN                        */ 00342000
         BAL   @14,EXIT                                            0211 00343000
*                   RESPECIFY                                      0212 00344000
*                    (R15) UNRSTD;  /*                               */ 00345000
*                 END;              /*                               */ 00346000
*               DO;                 /* REESTABLISH RWORK1            */ 00347000
@RF00205 DS    0H                                                  0215 00348000
*                 RESPECIFY                                        0215 00349000
*                  (RWORK2) RSTD;   /*                               */ 00350000
*                 RWORK1=AMBIWA;    /* BECAUSE OF EXPOSURE           */ 00351000
         L     RWORK1,AMBIWA(,RAMB)                                0216 00352000
*                 RWORK2=ICWADD;    /* TO LOSS IN PREFORMAT          */ 00353000
         L     RWORK2,ICWADD(,RWORK1)                              0217 00354000
*                 RWORK1=RWORK2;    /* PROCESS                       */ 00355000
         LR    RWORK1,RWORK2                                       0218 00356000
*               END;                /*                               */ 00357000
*             END;                  /*                               */ 00358000
*         END;                      /*                               */ 00359000
@RF00194 DS    0H                                                  0222 00360000
*     END;                          /*                               */ 00361000
@RF00192 DS    0H                                                  0223 00362000
*ENDPRFT:                                                          0223 00363000
*   END;                            /*                               */ 00364000
ENDPRFT  DS    0H                                                  0224 00365000
*   RESPECIFY                                                      0224 00366000
*    (RWORK2) UNRSTD;               /*                               */ 00367000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 00368000
         BAL   @14,EXIT                                            0225 00369000
*                                                                  0226 00370000
*/*                                                                  */ 00371000
*/*    IDAER SUBROUTINE                                              */ 00372000
*/*                                                                  */ 00373000
*/*       FUNCTION -                                                 */ 00374000
*/*        REMOVES THE DUMMY ENTRY AT THE HIGH KEY END               */ 00375000
*/*        OF THE INDEX RECORD IN THE CURRENT BUFFER IN              */ 00376000
*/*        CORE.  CONVERTS THE ENTRY PRECEEDING THE DUMMY            */ 00377000
*/*        TO A SECTION ENTRY, IF IT IS NOT ALREADY ONE.             */ 00378000
*/*       INPUT -                                                    */ 00379000
*/*        RWORK1 = POINTER TO CURRENT WORK AREA.                    */ 00380000
*/*       OUTPUT -                                                   */ 00381000
*/*        NONE                                                      */ 00382000
*/*       RETURN -                                                   */ 00383000
*/*        ALWAYS TO CALLER.  NO ERRORS ARE DETECTED.                */ 00384000
*/*                                                                  */ 00385000
*                                                                  0226 00386000
*IDAER:                                                            0226 00387000
*   ENTRY;                          /*                               */ 00388000
@EP00226 DS    0H                                                  0227 00389000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE REG 14               */ 00390000
         IDASVR14                                                       00391000
*   RESPECIFY                                                      0228 00392000
*    (RWORK2,                                                      0228 00393000
*     RWORK3,                                                      0228 00394000
*     RWORK4,                                                      0228 00395000
*     RWORK0) RSTD;                 /*                               */ 00396000
*   RWORK2=ICWBUFC->BUFCBAD;        /* POINT TO INDEX BUFFER         */ 00397000
         L     @10,ICWBUFC(,RWORK1)                                0229 00398000
         L     RWORK2,BUFCBAD(,@10)                                0229 00399000
*   RWORK3=RWORK2+RWORK2->IXHLEO+   /* POINT TO THE DUMMY            */ 00400000
*       LENGTH(IBFLPF)+             /* ENTRYS POINTER                */ 00401000
*       LENGTH(IBFLPL);             /* FIELD                         */ 00402000
         LR    RWORK3,RWORK2                                       0230 00403000
         LH    @10,IXHLEO(,RWORK2)                                 0230 00404000
         ALR   RWORK3,@10                                          0230 00405000
         AL    RWORK3,@CF00108                                     0230 00406000
*   RWORK4=RWORK2->IXHPTLS;         /* PICK UP MASK FROM HDR.        */ 00407000
         SLR   RWORK4,RWORK4                                       0231 00408000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0231 00409000
*   IF ICWLN=ICWSS|ICWSPLIT=ON THEN /* SEQ SET OR SPLIT              */ 00410000
         CLC   ICWLN(2,RWORK1),@CH00053                            0232 00411000
         BE    @RT00232                                            0232 00412000
         TM    ICWSPLIT(RWORK1),B'00000010'                        0232 00413000
         BNO   @RF00232                                            0232 00414000
@RT00232 DS    0H                                                  0233 00415000
*     DO;                           /* YES                           */ 00416000
*       RWORK0=RWORK3;              /* SAVE DUMMYS PTR. ADD.         */ 00417000
         LR    RWORK0,RWORK3                                       0234 00418000
*       GEN(EX  RWORK4,PICKPT);     /* EXTRACT DUMMYS PTR            */ 00419000
         EX  RWORK4,PICKPT                                              00420000
*       RWORK3=RWORK2+RWORK2->IXHFSO;/* POINT TO FREE SPACE          */ 00421000
         LH    @10,IXHFSO(,RWORK2)                                 0236 00422000
         LR    RWORK3,RWORK2                                       0236 00423000
         ALR   RWORK3,@10                                          0236 00424000
*       IF RWORK2->IXHFSO^<LENGTH(IDAIXH) THEN/*                     */ 00425000
         C     @10,@CF00145                                        0237 00426000
         BL    @RF00237                                            0237 00427000
*         GEN(EX  RWORK4,STOREPT);  /* SAVE PTR IN FREE SPACE        */ 00428000
         EX  RWORK4,STOREPT                                             00429000
*       RWORK3=RWORK0;              /* POINT BACK TO DUMMY PTR       */ 00430000
@RF00237 LR    RWORK3,RWORK0                                       0239 00431000
*       RWORK2->IXHFSO=RWORK2->IXHFSO+/* ADJUST FREE SPACE           */ 00432000
*           ICWPTL;                 /* DISPLACEMENT IN HEADER        */ 00433000
         SLR   @10,@10                                             0240 00434000
         IC    @10,ICWPTL(,RWORK1)                                 0240 00435000
         AH    @10,IXHFSO(,RWORK2)                                 0240 00436000
         STH   @10,IXHFSO(,RWORK2)                                 0240 00437000
*     END;                          /*                               */ 00438000
*   RPARM1=ZERO;                    /* PREPARE TO STORE ZEROS        */ 00439000
@RF00232 SLR   RPARM1,RPARM1                                       0242 00440000
*   GEN(EX  RWORK4,STOREPT);        /* CLEAR DUMMYS PTR FIELD        */ 00441000
         EX  RWORK4,STOREPT                                             00442000
*   RESPECIFY                                                      0244 00443000
*    (RWORK0) UNRSTD;               /*                               */ 00444000
*   RWORK3=RWORK2+RWORK2->IXHSEO;   /* POINT TO FIRST SECTION        */ 00445000
         LR    RWORK3,RWORK2                                       0245 00446000
         LH    @10,IXHSEO(,RWORK2)                                 0245 00447000
         ALR   RWORK3,@10                                          0245 00448000
*   DO WHILE RWORK3-RPARM1^=RWORK2+ /* LOOP TO WORK                  */ 00449000
*         RWORK2->IXHLEO;           /* THROUGH INDEX RECORD TO LOCATE   00450000
*                                      THE LAST SECTION WRITTEN    0246 00451000
*                                      BEFORE THE DUMMY              */ 00452000
         B     @DE00246                                            0246 00453000
@DL00246 DS    0H                                                  0247 00454000
*     RWORK3=RWORK3-RPARM1;         /* MOVE TO NEXT SECTION          */ 00455000
         SLR   RWORK3,RPARM1                                       0247 00456000
*     RWORK4=RWORK3-                /* ESTABLISH POINTER TO          */ 00457000
*         RWORK3->IBFLPL-           /* SECTION CHAINING              */ 00458000
*         LENGTH(IXSELL);           /* FIELD                         */ 00459000
         LR    RWORK4,RWORK3                                       0248 00460000
         SLR   @10,@10                                             0248 00461000
         IC    @10,IBFLPL(,RWORK3)                                 0248 00462000
         SLR   RWORK4,@10                                          0248 00463000
         BCTR  RWORK4,0                                            0248 00464000
         BCTR  RWORK4,0                                            0248 00465000
*     RPARM1=RWORK4->IXSELL;        /* DISPLACEMENT OF NEXT          */ 00466000
         SLR   RPARM1,RPARM1                                       0249 00467000
         ICM   RPARM1,3,IXSELL(RWORK4)                             0249 00468000
*   END;                            /* SECTION TO RPARM1             */ 00469000
@DE00246 LR    @10,RWORK3                                          0250 00470000
         SLR   @10,RPARM1                                          0250 00471000
         LR    @09,RWORK2                                          0250 00472000
         LH    @00,IXHLEO(,RWORK2)                                 0250 00473000
         ALR   @09,@00                                             0250 00474000
         CLR   @10,@09                                             0250 00475000
         BNE   @DL00246                                            0250 00476000
*   RPARM1=RWORK2+RWORK2->IXHLEO;   /* DETERMINE IF THE LAST         */ 00477000
         LR    RPARM1,@09                                          0251 00478000
*   IF RPARM1+RWORK2->IXHFLPLN      /* SECTION JUST LOCATED          */ 00479000
*       =RWORK3-RWORK3->IBFLPL-     /* IS THE ENTRY PRECEED-         */ 00480000
*       LENGTH(IXSELL) THEN         /* ING THE DUMMY                 */ 00481000
         LR    @10,RPARM1                                          0252 00482000
         SLR   @09,@09                                             0252 00483000
         IC    @09,IXHFLPLN(,RWORK2)                               0252 00484000
         ALR   @10,@09                                             0252 00485000
         LA    @09,2                                               0252 00486000
         LR    @00,RWORK3                                          0252 00487000
         SLR   @15,@15                                             0252 00488000
         IC    @15,IBFLPL(,RWORK3)                                 0252 00489000
         SLR   @00,@15                                             0252 00490000
         SLR   @00,@09                                             0252 00491000
         CR    @10,@00                                             0252 00492000
         BNE   @RF00252                                            0252 00493000
*     DO;                           /* IT IS, THEREFORE IT IS NOT  0253 00494000
*                                      NECESSARY TO CREATE A SECTION    00495000
*                                      ENTRY                         */ 00496000
*       RESPECIFY                                                  0254 00497000
*        (RWORK5) RSTD;             /* AS THE LAST ENTRY             */ 00498000
*       RWORK4=RWORK2->IXHPTLS;     /* MASK IN RWORK4                */ 00499000
         SLR   RWORK4,RWORK4                                       0255 00500000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0255 00501000
*       RWORK5=RWORK3;              /* PRESERVE SECTION PTR.         */ 00502000
         LR    RWORK5,RWORK3                                       0256 00503000
*       RWORK3=RPARM1+LENGTH(IBFLPF)+/* POINT TO DUMMYS              */ 00504000
*           LENGTH(IBFLPL);         /* POINTER FIELD                 */ 00505000
         LA    @10,2                                               0257 00506000
         ALR   @10,RPARM1                                          0257 00507000
         LR    RWORK3,@10                                          0257 00508000
*       RPARM1=ZERO;                /*                               */ 00509000
         SLR   RPARM1,RPARM1                                       0258 00510000
*       GEN(EX RWORK4,STOREPT);     /* CLEAR THE POINTER             */ 00511000
         EX RWORK4,STOREPT                                              00512000
*       RWORK2->IXHLEO=RWORK5-RWORK2;/* SET OFFSET TO LAST ENTY      */ 00513000
         LR    @10,RWORK5                                          0260 00514000
         SLR   @10,RWORK2                                          0260 00515000
         STH   @10,IXHLEO(,RWORK2)                                 0260 00516000
*       RWORK3=RWORK5-RWORK5->IBFLPL-/* POINT TO FIELD POINTING      */ 00517000
*           LENGTH(IXSELL);         /* FORWARD TO NEXT SECT.         */ 00518000
         LR    RWORK3,RWORK5                                       0261 00519000
         SLR   @10,@10                                             0261 00520000
         IC    @10,IBFLPL(,RWORK5)                                 0261 00521000
         SLR   RWORK3,@10                                          0261 00522000
         BCTR  RWORK3,0                                            0261 00523000
         BCTR  RWORK3,0                                            0261 00524000
*       RWORK4='03'X;               /* SET MASK FOR 2 BYTES          */ 00525000
         LA    RWORK4,3                                            0262 00526000
*       GEN(EX  RWORK4,STOREPT);    /* ZERO THE FIELD                */ 00527000
         EX  RWORK4,STOREPT                                             00528000
*       RESPECIFY                                                  0264 00529000
*        (RWORK2,                                                  0264 00530000
*         RWORK3,                                                  0264 00531000
*         RWORK4,                                                  0264 00532000
*         RWORK5) UNRSTD;           /*                               */ 00533000
*       CALL EXIT;                  /* RETURN                @X04SVES*/ 00534000
         BAL   @14,EXIT                                            0265 00535000
*     END;                          /*                               */ 00536000
*   ELSE                            /*                               */ 00537000
*     DO;                           /*                               */ 00538000
         B     @RC00252                                            0267 00539000
@RF00252 DS    0H                                                  0268 00540000
*       RESPECIFY                                                  0268 00541000
*        (RWORK2,                                                  0268 00542000
*         RWORK3,                                                  0268 00543000
*         RWORK4,                                                  0268 00544000
*         RWORK5) RSTD;             /*                               */ 00545000
*       IF RWORK2->IXHSEO=RWORK2->IXHLEO THEN/* IS THERE A           */ 00546000
         CLC   IXHSEO(2,RWORK2),IXHLEO(RWORK2)                     0269 00547000
         BNE   @RF00269                                            0269 00548000
*         DO;                       /* SECTION BESIDES DUMMY         */ 00549000
*           RWORK3=RWORK2+RWORK2->IXHLL/* NO, POINT TO FIRST         */ 00550000
*               -RWORK2->IXHFLPLN;  /* ENTRY IN RECORD               */ 00551000
         LR    RWORK3,RWORK2                                       0271 00552000
         LH    @10,IXHLL(,RWORK2)                                  0271 00553000
         N     @10,@CF00901                                        0271 00554000
         ALR   RWORK3,@10                                          0271 00555000
         SLR   @10,@10                                             0271 00556000
         IC    @10,IXHFLPLN(,RWORK2)                               0271 00557000
         SLR   RWORK3,@10                                          0271 00558000
*           ICWVSE=OFF;             /* SET SECTION INVALID           */ 00559000
         NI    ICWVSE(RWORK1),B'11101111'                          0272 00560000
*         END;                      /*                               */ 00561000
*       ELSE                        /*                               */ 00562000
*         DO;                       /* OTHER SECTIONS EXIST          */ 00563000
         B     @RC00269                                            0274 00564000
@RF00269 DS    0H                                                  0275 00565000
*           PLHSAVE1=RWORK3;        /* SAVE PREV. SECT. PTR          */ 00566000
         ST    RWORK3,PLHSAVE1(,RPLH)                              0275 00567000
*           ICWVSE=ON;              /* SHOW SECTION VALID            */ 00568000
         OI    ICWVSE(RWORK1),B'00010000'                          0276 00569000
*           RPARM1=RWORK3->IBFLPL+  /* COMPUTE OFFSET FROM           */ 00570000
*               LENGTH(IXSELL)+     /* CURRENT ENTRY                 */ 00571000
*               RWORK2->IXHFLPLN;   /* TO NEXT INDEX ENTRY           */ 00572000
         LA    RPARM1,2                                            0277 00573000
         SLR   @10,@10                                             0277 00574000
         IC    @10,IBFLPL(,RWORK3)                                 0277 00575000
         ALR   RPARM1,@10                                          0277 00576000
         SLR   @10,@10                                             0277 00577000
         IC    @10,IXHFLPLN(,RWORK2)                               0277 00578000
         ALR   RPARM1,@10                                          0277 00579000
*           RWORK3=RWORK3-RPARM1;   /* MOVE PTR TO NEXT ENTRY        */ 00580000
         SLR   RWORK3,RPARM1                                       0278 00581000
*         END;                      /*                               */ 00582000
*       RPARM1=ZERO;                /*                               */ 00583000
@RC00269 SLR   RPARM1,RPARM1                                       0280 00584000
*       DO WHILE RWORK3-RPARM1^=RWORK2/* LOOP THROUGH THE            */ 00585000
*             +RWORK2->IXHLEO;      /* REMAINING ENTRIES TO          */ 00586000
         B     @DE00281                                            0281 00587000
@DL00281 DS    0H                                                  0282 00588000
*         RWORK3=RWORK3-RPARM1;     /* DETERMINE THE LAST            */ 00589000
         SLR   RWORK3,RPARM1                                       0282 00590000
*         RPARM1=RWORK3->IBFLPL+    /* ENTRY PRIOR TO THE            */ 00591000
*             RWORK2->IXHFLPLN;     /* DUMMY ENTRY                   */ 00592000
         SLR   RPARM1,RPARM1                                       0283 00593000
         IC    RPARM1,IBFLPL(,RWORK3)                              0283 00594000
         SLR   @10,@10                                             0283 00595000
         IC    @10,IXHFLPLN(,RWORK2)                               0283 00596000
         ALR   RPARM1,@10                                          0283 00597000
*       END;                        /*                               */ 00598000
@DE00281 LR    @10,RWORK3                                          0284 00599000
         SLR   @10,RPARM1                                          0284 00600000
         LR    @00,RWORK2                                          0284 00601000
         LH    @15,IXHLEO(,RWORK2)                                 0284 00602000
         ALR   @00,@15                                             0284 00603000
         CLR   @10,@00                                             0284 00604000
         BNE   @DL00281                                            0284 00605000
*       RESPECIFY                                                  0285 00606000
*        (RWORK0) RSTD;             /*                               */ 00607000
*       RWORK0=RWORK3;              /* SAVE ENTRY POINTER            */ 00608000
         LR    RWORK0,RWORK3                                       0286 00609000
*       IF ICWWNF=ON THEN           /* IF WONT FIT CASE, SET         */ 00610000
         TM    ICWWNF(RWORK1),B'10000000'                          0287 00611000
         BNO   @RF00287                                            0287 00612000
*         ICWCER=ICWCERP;           /* REAR COMPRESSION              */ 00613000
         IC    @10,ICWCERP(,RWORK1)                                0288 00614000
         STC   @10,ICWCER(,RWORK1)                                 0288 00615000
*       IF ICWVSE=ON THEN           /* ARE THE OTHER SECTIONS        */ 00616000
@RF00287 TM    ICWVSE(RWORK1),B'00010000'                          0289 00617000
         BNO   @RF00289                                            0289 00618000
*         DO;                       /* YES                           */ 00619000
*           RWORK2=ADDR(ICWKEY1);   /* POINT FIRST TO CURR KEY       */ 00620000
         LA    RWORK2,ICWKEY1(,RWORK1)                             0291 00621000
*           RWORK4=RWORK2+(TWO*AMDKEYLN);/* POINT TO SECTION KEY     */ 00622000
         L     @10,AMBDSB(,RAMB)                                   0292 00623000
         LH    RWORK4,AMDKEYLN(,@10)                               0292 00624000
         ALR   RWORK4,RWORK4                                       0292 00625000
         ALR   RWORK4,RWORK2                                       0292 00626000
*           IF ICWWNF=OFF THEN      /* NOT WONT FIT CASE             */ 00627000
         TM    ICWWNF(RWORK1),B'10000000'                          0293 00628000
         BNZ   @RF00293                                            0293 00629000
*             DO;                   /* CHOOSE SMALLEST OF            */ 00630000
*               RPARM1=MIN(ICWKEY1L,ICWKEY3L);/* CURRENT & SECT. KEYS*/ 00631000
         LH    RPARM1,ICWKEY1L(,RWORK1)                            0295 00632000
         LH    @10,ICWKEY3L(,RWORK1)                               0295 00633000
         CR    RPARM1,@10                                          0295 00634000
         BNH   *+6                                                      00635000
         LR    RPARM1,@10                                          0295 00636000
*             END;                  /*                               */ 00637000
*           ELSE                    /* TWO KEY LENGTHS               */ 00638000
*             DO;                   /* MOVE POINTER TO POINT         */ 00639000
         B     @RC00293                                            0297 00640000
@RF00293 DS    0H                                                  0298 00641000
*               RWORK2=RWORK2+AMDKEYLN;/* AT PREVIOUS KEY            */ 00642000
         L     @10,AMBDSB(,RAMB)                                   0298 00643000
         LH    @10,AMDKEYLN(,@10)                                  0298 00644000
         ALR   RWORK2,@10                                          0298 00645000
*               RPARM1=MIN(ICWKEY2L,ICWKEY3L);/* CHOOSE SMALLEST   0299 00646000
*                                      LENGTH                        */ 00647000
         LH    RPARM1,ICWKEY2L(,RWORK1)                            0299 00648000
         LH    @10,ICWKEY3L(,RWORK1)                               0299 00649000
         CR    RPARM1,@10                                          0299 00650000
         BNH   *+6                                                      00651000
         LR    RPARM1,@10                                          0299 00652000
*             END;                  /*                               */ 00653000
*           RWORK3=RPARM1;          /* SET COMPARE LENGTH            */ 00654000
@RC00293 LR    RWORK3,RPARM1                                       0301 00655000
*           RWORK5=RWORK3;          /* SAME LENGTH FOR RWORK5        */ 00656000
         LR    RWORK5,RWORK3                                       0302 00657000
*           GEN(CLCL  RWORK2,RWORK4);/* COMPARE KEY TO LAST SECTION     00658000
*                                      KEY TO DETERMINE FRONT      0303 00659000
*                                      COMPRESSION                   */ 00660000
         CLCL  RWORK2,RWORK4                                            00661000
*           ICWCEF=RPARM1-RWORK3;   /* SAVE FRONT COMPRESSION        */ 00662000
         LR    @10,RPARM1                                          0304 00663000
         SLR   @10,RWORK3                                          0304 00664000
         STC   @10,ICWCEF(,RWORK1)                                 0304 00665000
*           RWORK3=RWORK0;          /* POINT BACK TO INSERT PT       */ 00666000
         LR    RWORK3,RWORK0                                       0305 00667000
*         END;                      /*                               */ 00668000
*       ELSE                        /* NO PREVIOUS SECTIONS          */ 00669000
*         DO;                       /*                               */ 00670000
         B     @RC00289                                            0307 00671000
@RF00289 DS    0H                                                  0308 00672000
*           ICWCEF=ZERO;            /* SET FRONT COMPR = ZERO        */ 00673000
         MVI   ICWCEF(RWORK1),X'00'                                0308 00674000
*         END;                      /*                               */ 00675000
*       IF ICWCER>ICWCEF THEN       /* DOES REAR COMPRESSION POSITION   00676000
*                                      EXCEED FRONT COMPRESSION      */ 00677000
@RC00289 CLC   ICWCER(1,RWORK1),ICWCEF(RWORK1)                     0310 00678000
         BNH   @RF00310                                            0310 00679000
*         ICWCEL=ICWCER-ICWCEF;     /* YES, L = DIFFERENCE           */ 00680000
         SLR   @10,@10                                             0311 00681000
         IC    @10,ICWCER(,RWORK1)                                 0311 00682000
         SLR   @15,@15                                             0311 00683000
         IC    @15,ICWCEF(,RWORK1)                                 0311 00684000
         SLR   @10,@15                                             0311 00685000
         STC   @10,ICWCEL(,RWORK1)                                 0311 00686000
*       ELSE                        /* IF NOT, SET THE LENGTH        */ 00687000
*         ICWCEL=ZERO;              /* TO ZERO                       */ 00688000
         B     @RC00310                                            0312 00689000
@RF00310 MVI   ICWCEL(RWORK1),X'00'                                0312 00690000
*       RWORK3->IBFLPF=ICWCEF;      /* PLACE F INTO RECORD           */ 00691000
@RC00310 IC    @10,ICWCEF(,RWORK1)                                 0313 00692000
         STC   @10,IBFLPF(,RWORK3)                                 0313 00693000
*       RWORK3->IBFLPL=ICWCEL;      /* PLACE L INTO RECORD           */ 00694000
         SLR   @10,@10                                             0314 00695000
         IC    @10,ICWCEL(,RWORK1)                                 0314 00696000
         STC   @10,IBFLPL(,RWORK3)                                 0314 00697000
*       RWORK2=RWORK3-ICWCEL;       /* POINT TO KEY LOCATIONS        */ 00698000
         LCR   @10,@10                                             0315 00699000
         ALR   @10,RWORK3                                          0315 00700000
         LR    RWORK2,@10                                          0315 00701000
*       IF ICWWNF=OFF THEN          /* NOT WONT FIT CASE             */ 00702000
         TM    ICWWNF(RWORK1),B'10000000'                          0316 00703000
         BNZ   @RF00316                                            0316 00704000
*         RWORK4=ZERO;              /* YES, FORCE KEY1 ADDRESS       */ 00705000
         SLR   RWORK4,RWORK4                                       0317 00706000
*       ELSE                        /* NO USE LENGTH OF KEY          */ 00707000
*         RWORK4=AMDKEYLN;          /* TO FORCE KEY2 ADDRESS         */ 00708000
         B     @RC00316                                            0318 00709000
@RF00316 L     @10,AMBDSB(,RAMB)                                   0318 00710000
         LH    RWORK4,AMDKEYLN(,@10)                               0318 00711000
*       RWORK4=RWORK4+ADDR(ICWKEY1)+/* COMPUTE FROM ADDRESS OF       */ 00712000
*           ICWCEF;                 /* KEY TO BE STORED              */ 00713000
@RC00316 LA    @10,ICWKEY1(,RWORK1)                                0319 00714000
         ALR   @10,RWORK4                                          0319 00715000
         SLR   @15,@15                                             0319 00716000
         IC    @15,ICWCEF(,RWORK1)                                 0319 00717000
         ALR   @10,@15                                             0319 00718000
         LR    RWORK4,@10                                          0319 00719000
*       RWORK5=ICWCEL;              /* SET LENGTH OF MOVE            */ 00720000
         SLR   RWORK5,RWORK5                                       0320 00721000
         IC    RWORK5,ICWCEL(,RWORK1)                              0320 00722000
*       RWORK3=RWORK5;              /* SET LENGTH IN RWORK5          */ 00723000
         LR    RWORK3,RWORK5                                       0321 00724000
*       GEN(MVCL RWORK2,RWORK4);    /* MOVE KEY TO BUFFER            */ 00725000
         MVCL RWORK2,RWORK4                                             00726000
*       RWORK2=ICWBUFC->BUFCBAD;    /* POINT TO BEGINNING OF BUFFER  */ 00727000
         L     @10,ICWBUFC(,RWORK1)                                0323 00728000
         L     RWORK2,BUFCBAD(,@10)                                0323 00729000
*       RWORK2->IXHLEO=RWORK0-RWORK2;/* RESET OFFSET TO LAST         */ 00730000
         LR    @10,RWORK0                                          0324 00731000
         SLR   @10,RWORK2                                          0324 00732000
         STH   @10,IXHLEO(,RWORK2)                                 0324 00733000
*       IF ICWVSE=OFF THEN          /* IF THIS IS ONLY        SECTION*/ 00734000
         TM    ICWVSE(RWORK1),B'00010000'                          0325 00735000
         BNZ   @RF00325                                            0325 00736000
*         DO;                       /*                               */ 00737000
*           RWORK2->IXHSEO=RWORK2->IXHLEO;/* CORRECT SECT. OFFSET    */ 00738000
         STH   @10,IXHSEO(,RWORK2)                                 0327 00739000
*           CALL EXIT;              /* RETURN                @X40SVES*/ 00740000
         BAL   @14,EXIT                                            0328 00741000
*         END;                      /*                               */ 00742000
*       ELSE                        /*                               */ 00743000
*         DO;                                                      0330 00744000
         B     @RC00325                                            0330 00745000
@RF00325 DS    0H                                                  0331 00746000
*           RWORK2=PLHSAVE1;        /* BACKUP ONE SECTION            */ 00747000
         L     RWORK2,PLHSAVE1(,RPLH)                              0331 00748000
*           RWORK3=RWORK2-RWORK2->IBFLPL-/* POINT TO CHAIN POINTER   */ 00749000
*               LENGTH(IXSELL);     /* AT PREVIOUS SECTION           */ 00750000
         LR    RWORK3,RWORK2                                       0332 00751000
         SLR   @10,@10                                             0332 00752000
         IC    @10,IBFLPL(,RWORK2)                                 0332 00753000
         SLR   RWORK3,@10                                          0332 00754000
         BCTR  RWORK3,0                                            0332 00755000
         BCTR  RWORK3,0                                            0332 00756000
*           RWORK3->IXSELL=RWORK2-RWORK0;/* SET CHAIN TO THIS        */ 00757000
         LR    @10,RWORK2                                          0333 00758000
         SLR   @10,RWORK0                                          0333 00759000
         STCM  @10,3,IXSELL(RWORK3)                                0333 00760000
*         END;                      /* ENTRY                         */ 00761000
*       ICWVSE=OFF;                 /* RESET VALID SECTION FLG       */ 00762000
@RC00325 NI    ICWVSE(RWORK1),B'11101111'                          0335 00763000
*       RESPECIFY                                                  0336 00764000
*        (RWORK0,                                                  0336 00765000
*         RWORK2,                                                  0336 00766000
*         RWORK3,                                                  0336 00767000
*         RWORK4,                                                  0336 00768000
*         RWORK5) UNRSTD;           /*                               */ 00769000
*     END;                          /*                               */ 00770000
*   CALL EXIT;                      /* RETURN                @X04SVES*/ 00771000
@RC00252 BAL   @14,EXIT                                            0338 00772000
*                                                                  0339 00773000
*   /*****************************************************************/ 00774000
*   /*                                                               */ 00775000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * *@X04SVES */ 00776000
*   /* EXIT SUBROUTINE                                       @X04SVES*/ 00777000
*   /*                                                       @X04SVES*/ 00778000
*   /* FUNCTION:                                             @X04SVES*/ 00779000
*   /* RESTORES REGISTER 14 FROM THE PLACEHOLDER             @X04SVES*/ 00780000
*   /* PUSH DOWN LIST AND RETURNS                            @X04SVES*/ 00781000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * *@X04SVES */ 00782000
*   /*                                                               */ 00783000
*   /*****************************************************************/ 00784000
*                                                                  0339 00785000
*EXIT:                                                             0339 00786000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X04SVES*/ 00787000
         B     @PB00002                                            0339 00788000
EXIT     DS    0H                                                  0340 00789000
*   GEN(IDARST14);                  /* RESTORE R14           @X04SVES*/ 00790000
         IDARST14                                                       00791000
*   END EXIT;                       /* RETURN                @X04SVES*/ 00792000
@EL00002 DS    0H                                                  0341 00793000
@EF00002 DS    0H                                                  0341 00794000
@ER00002 BR    @14                                                 0341 00795000
@PB00002 DS    0H                                                  0342 00796000
*   GEN;                                                           0342 00797000
*                                          /*                        */ 00798000
PICKPT   ICM   RPARM1,@00,@00(RWORK3)      /* OBTAINS POINTER        */ 00799000
STOREPT  STCM  RPARM1,@00,@00(RWORK3)      /* STORES POINTER         */ 00800000
*   GEN(IDAPATCH);                  /*                               */ 00801000
         IDAPATCH                                                       00802000
*   END IDA019RN                    /*                               */ 00803000
*                                                                  0344 00804000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00805000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 00806000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 00807000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 00808000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 00809000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 00810000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 00811000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 00812000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 00813000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 00814000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 00815000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 00816000
*                                                                  0344 00817000
*       ;                                                          0344 00818000
@EL00001 DS    0H                                                  0344 00819000
@EF00001 DS    0H                                                  0344 00820000
@ER00001 BR    @14                                                 0344 00821000
@DATA    DS    0H                                                       00822000
@SC00895 CLC   ARDKEYS(0,RWORK2),PLHKEY(@10)                            00823000
@SC00897 CLC   ARDKEYS(0,RPARM1),PLHKEY(@10)                            00824000
@DATD    DSECT                                                          00825000
         DS    0F                                                       00826000
IDA019RN CSECT                                                          00827000
         DS    0F                                                       00828000
@CF00053 DC    F'1'                                                     00829000
@CH00053 EQU   @CF00053+2                                               00830000
@CF00108 DC    F'2'                                                     00831000
@CF00145 DC    F'24'                                                    00832000
@CF00901 DC    XL4'0000FFFF'                                            00833000
@DATD    DSECT                                                          00834000
         DS    0D                                                       00835000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00836000
@ENDDATD EQU   *                                                        00837000
IDA019RN CSECT                                                          00838000
         DS    0F                                                       00839000
@SIZDATD DC    AL1(0)                                                   00840000
         DC    AL3(@ENDDATD-@DATD)                                      00841000
@CV00854 DC    V(IDAEOVIF)                                              00842000
@CV00855 DC    V(IDA019RK)                                              00843000
         DS    0D                                                       00844000
HWORD4   DC    H'4'                                                     00845000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00846000
@01      EQU   01                                                       00847000
@02      EQU   02                                                       00848000
@03      EQU   03                                                       00849000
@04      EQU   04                                                       00850000
@05      EQU   05                                                       00851000
@06      EQU   06                                                       00852000
@07      EQU   07                                                       00853000
@08      EQU   08                                                       00854000
@09      EQU   09                                                       00855000
@10      EQU   10                                                       00856000
@11      EQU   11                                                       00857000
@12      EQU   12                                                       00858000
@13      EQU   13                                                       00859000
@14      EQU   14                                                       00860000
@15      EQU   15                                                       00861000
RWORK0   EQU   @00                                                      00862000
RRPL     EQU   @01                                                      00863000
RPLH     EQU   @02                                                      00864000
RAMB     EQU   @03                                                      00865000
RBUFC    EQU   @04                                                      00866000
RWORK1   EQU   @05                                                      00867000
RWORK2   EQU   @06                                                      00868000
RWORK3   EQU   @07                                                      00869000
RWORK4   EQU   @08                                                      00870000
RWORK5   EQU   @09                                                      00871000
RPARM1   EQU   @12                                                      00872000
R15      EQU   @15                                                      00873000
R1       EQU   @01                                                      00874000
R10      EQU   @10                                                      00875000
R11      EQU   @11                                                      00876000
R13      EQU   @13                                                      00877000
R14      EQU   @14                                                      00878000
IDAICWA  EQU   0                                                        00879000
ICWFLG1  EQU   IDAICWA+1                                                00880000
ICWWNF   EQU   ICWFLG1                                                  00881000
ICWVSE   EQU   ICWFLG1                                                  00882000
ICWKRDS  EQU   ICWFLG1                                                  00883000
ICWSPLIT EQU   ICWFLG1                                                  00884000
ICWBUFC  EQU   IDAICWA+8                                                00885000
ICWCRBA  EQU   IDAICWA+12                                               00886000
ICWPRBA  EQU   IDAICWA+16                                               00887000
ICWADD   EQU   IDAICWA+24                                               00888000
ICWARDBP EQU   IDAICWA+36                                               00889000
ICWLN    EQU   IDAICWA+40                                               00890000
ICWKEY1L EQU   IDAICWA+42                                               00891000
ICWKEY2L EQU   IDAICWA+44                                               00892000
ICWKEY3L EQU   IDAICWA+46                                               00893000
ICWPTL   EQU   IDAICWA+55                                               00894000
ICWCER   EQU   IDAICWA+56                                               00895000
ICWCEF   EQU   IDAICWA+57                                               00896000
ICWCEL   EQU   IDAICWA+58                                               00897000
ICWCERP  EQU   IDAICWA+59                                               00898000
ICWKEY1  EQU   IDAICWA+60                                               00899000
IDAIXH   EQU   0                                                        00900000
IXHLL    EQU   IDAIXH                                                   00901000
IXHFLPLN EQU   IDAIXH+2                                                 00902000
IXHPTLS  EQU   IDAIXH+3                                                 00903000
IXHFSO   EQU   IDAIXH+18                                                00904000
IXHLEO   EQU   IDAIXH+20                                                00905000
IXHSEO   EQU   IDAIXH+22                                                00906000
IDAIBFLP EQU   0                                                        00907000
IBFLPF   EQU   IDAIBFLP                                                 00908000
IBFLPL   EQU   IDAIBFLP+1                                               00909000
IBFLP3   EQU   IDAIBFLP+2                                               00910000
IBFLP2   EQU   IBFLP3                                                   00911000
IDASELL  EQU   0                                                        00912000
IXSELL   EQU   IDASELL                                                  00913000
IDAIXK   EQU   0                                                        00914000
IFGRPL   EQU   0                                                        00915000
RPLCOMN  EQU   IFGRPL                                                   00916000
RPLIDWD  EQU   RPLCOMN                                                  00917000
RPLLEN   EQU   RPLIDWD+3                                                00918000
RPLECB   EQU   RPLCOMN+8                                                00919000
RPLFDBWD EQU   RPLCOMN+12                                               00920000
RPLFDBK  EQU   RPLFDBWD+1                                               00921000
RPLRTNCD EQU   RPLFDBK                                                  00922000
RPLERREG EQU   RPLRTNCD                                                 00923000
RPLCNDCD EQU   RPLFDBK+1                                                00924000
RPLCMPON EQU   RPLCNDCD                                                 00925000
RPLFDB2  EQU   RPLCMPON                                                 00926000
RPLERRCD EQU   RPLCNDCD+1                                               00927000
RPLFDB3  EQU   RPLERRCD                                                 00928000
RPLKEYLE EQU   RPLCOMN+16                                               00929000
RPLDACB  EQU   RPLCOMN+24                                               00930000
RPLARG   EQU   RPLCOMN+36                                               00931000
RPLOPTCD EQU   RPLCOMN+40                                               00932000
RPLOPT1  EQU   RPLOPTCD                                                 00933000
RPLECBSW EQU   RPLOPT1                                                  00934000
RPLOPT2  EQU   RPLOPTCD+1                                               00935000
RPLADR   EQU   RPLOPT2                                                  00936000
RPLOPT3  EQU   RPLOPTCD+2                                               00937000
RPLNXTRP EQU   RPLCOMN+44                                               00938000
RPLOPTC2 EQU   RPLCOMN+56                                               00939000
RPLOPT5  EQU   RPLOPTC2                                                 00940000
RPLWRTYP EQU   RPLOPT5                                                  00941000
RPLOPT6  EQU   RPLOPTC2+1                                               00942000
RPLUNTYP EQU   RPLOPT6                                                  00943000
RPLOPT7  EQU   RPLOPTC2+2                                               00944000
RPLCNOPT EQU   RPLOPT7                                                  00945000
RPLOPT8  EQU   RPLOPTC2+3                                               00946000
RPLRBAR  EQU   RPLCOMN+60                                               00947000
RPLAIXID EQU   RPLRBAR+2                                                00948000
RPLEXTDS EQU   RPLCOMN+68                                               00949000
RPLEXTD1 EQU   RPLEXTDS                                                 00950000
IDAPLHDR EQU   0                                                        00951000
IDAPLH   EQU   0                                                        00952000
PLHFLG1  EQU   IDAPLH+2                                                 00953000
PLHFLG2  EQU   IDAPLH+3                                                 00954000
PLHKEYMD EQU   PLHFLG2                                                  00955000
PLHEFLGS EQU   IDAPLH+4                                                 00956000
PLHFLG3  EQU   IDAPLH+6                                                 00957000
PLHAFLGS EQU   IDAPLH+7                                                 00958000
PLHCRBA  EQU   IDAPLH+28                                                00959000
PLHJORBA EQU   PLHCRBA                                                  00960000
PLHJCODE EQU   IDAPLH+40                                                00961000
PLHEOVR  EQU   IDAPLH+42                                                00962000
PLHDIOB  EQU   IDAPLH+76                                                00963000
PLHSAVE1 EQU   IDAPLH+84                                                00964000
PLHRETO  EQU   IDAPLH+116                                               00965000
PLHRET1  EQU   IDAPLH+120                                               00966000
PLHEOVPT EQU   IDAPLH+180                                               00967000
PLHIXSPL EQU   IDAPLH+200                                               00968000
PLHSSRBA EQU   PLHIXSPL                                                 00969000
PLHWAX   EQU   IDAPLH+232                                               00970000
PLHKEYPT EQU   IDAPLH+248                                               00971000
PLHEND   EQU   IDAPLH+280                                               00972000
PLHKEY   EQU   0                                                        00973000
IDAAMBL  EQU   0                                                        00974000
AMBLEOV  EQU   IDAAMBL+12                                               00975000
AMBLEFLG EQU   AMBLEOV                                                  00976000
AMBLDDNM EQU   IDAAMBL+16                                               00977000
AMBLIDF  EQU   AMBLDDNM                                                 00978000
AMBLQ    EQU   AMBLIDF+7                                                00979000
AMBLVC   EQU   IDAAMBL+28                                               00980000
AMBLTYPE EQU   IDAAMBL+30                                               00981000
AMBLSHAR EQU   IDAAMBL+33                                               00982000
AMBLFLG1 EQU   IDAAMBL+35                                               00983000
AMBLFLG2 EQU   IDAAMBL+36                                               00984000
AMBLDTA  EQU   IDAAMBL+52                                               00985000
IDAAMDSB EQU   0                                                        00986000
AMDATTR  EQU   IDAAMDSB+1                                               00987000
AMDSDT   EQU   AMDATTR                                                  00988000
AMDREPL  EQU   AMDATTR                                                  00989000
AMDNEST  EQU   IDAAMDSB+4                                               00990000
AMDKEYLN EQU   IDAAMDSB+8                                               00991000
AMDCIPCA EQU   IDAAMDSB+12                                              00992000
AMDCINV  EQU   IDAAMDSB+20                                              00993000
AMDHLRBA EQU   IDAAMDSB+28                                              00994000
AMDSSRBA EQU   IDAAMDSB+32                                              00995000
AMDPARDB EQU   IDAAMDSB+36                                              00996000
AMDATTR3 EQU   IDAAMDSB+40                                              00997000
AMDSTAT  EQU   IDAAMDSB+48                                              00998000
AMDNLR   EQU   AMDSTAT+12                                               00999000
AMDASPA  EQU   AMDSTAT+32                                               01000000
IDAARDB  EQU   0                                                        01001000
ARDTYPE  EQU   IDAARDB+1                                                01002000
ARDKR    EQU   ARDTYPE                                                  01003000
ARDHLI   EQU   ARDTYPE                                                  01004000
ARDSS    EQU   ARDTYPE                                                  01005000
ARDUSED  EQU   ARDTYPE                                                  01006000
ARDNPTR  EQU   IDAARDB+4                                                01007000
ARDHRBA  EQU   IDAARDB+12                                               01008000
ARDERBA  EQU   IDAARDB+16                                               01009000
ARDPRF   EQU   IDAARDB+28                                               01010000
ARDKEYS  EQU   IDAARDB+29                                               01011000
IFGACB   EQU   0                                                        01012000
ACBCOMN  EQU   IFGACB                                                   01013000
ACBLENG  EQU   ACBCOMN+2                                                01014000
ACBLENG2 EQU   ACBLENG                                                  01015000
ACBAMBL  EQU   ACBCOMN+4                                                01016000
ACBJWA   EQU   ACBAMBL                                                  01017000
ACBMACRF EQU   ACBCOMN+12                                               01018000
ACBMACR1 EQU   ACBMACRF                                                 01019000
ACBADR   EQU   ACBMACR1                                                 01020000
ACBCNV   EQU   ACBMACR1                                                 01021000
ACBMACR2 EQU   ACBMACRF+1                                               01022000
ACBBUFPL EQU   ACBCOMN+20                                               01023000
ACBMACR3 EQU   ACBBUFPL                                                 01024000
ACBRECFM EQU   ACBCOMN+24                                               01025000
ACBCCTYP EQU   ACBCOMN+25                                               01026000
ACBOPT   EQU   ACBCOMN+26                                               01027000
ACBDSORG EQU   ACBOPT                                                   01028000
ACBCROPS EQU   ACBDSORG                                                 01029000
ACBEXLST EQU   ACBCOMN+36                                               01030000
ACBDDNM  EQU   ACBCOMN+40                                               01031000
ACBAMETH EQU   ACBDDNM+3                                                01032000
ACBOFLGS EQU   ACBCOMN+48                                               01033000
ACBEXFG  EQU   ACBOFLGS                                                 01034000
ACBIOSFG EQU   ACBOFLGS                                                 01035000
ACBINFLG EQU   ACBCOMN+50                                               01036000
ACBUJFCB EQU   ACBCOMN+52                                               01037000
ACBBLKSZ EQU   ACBCOMN+60                                               01038000
IDAAMB   EQU   0                                                        01039000
AMBDSB   EQU   IDAAMB+20                                                01040000
AMBEOVR  EQU   IDAAMB+24                                                01041000
AMBFLG0  EQU   AMBEOVR                                                  01042000
AMBFLG1  EQU   IDAAMB+25                                                01043000
AMBCREAT EQU   AMBFLG1                                                  01044000
AMBDSORG EQU   IDAAMB+26                                                01045000
AMBIOBAD EQU   IDAAMB+28                                                01046000
AMBINFL  EQU   IDAAMB+42                                                01047000
AMBDEBPT EQU   IDAAMB+44                                                01048000
AMBOFLGS EQU   IDAAMB+48                                                01049000
AMBFLG2  EQU   IDAAMB+49                                                01050000
AMBEOVPT EQU   IDAAMB+56                                                01051000
AMBIWA   EQU   IDAAMB+64                                                01052000
AMBCSWD1 EQU   IDAAMB+84                                                01053000
AMBAFLG  EQU   AMBCSWD1                                                 01054000
IDABUFDR EQU   0                                                        01055000
BUFDRCIX EQU   IDABUFDR+9                                               01056000
BUFDRFLG EQU   IDABUFDR+11                                              01057000
IDABUFC  EQU   0                                                        01058000
BUFCAVL  EQU   IDABUFC                                                  01059000
BUFCFLG1 EQU   IDABUFC+1                                                01060000
BUFCIOFL EQU   IDABUFC+2                                                01061000
BUFCFLG2 EQU   IDABUFC+3                                                01062000
BUFCPLH  EQU   IDABUFC+4                                                01063000
BUFCBAD  EQU   IDABUFC+20                                               01064000
BUFCINV  EQU   IDABUFC+28                                               01065000
ICWKEY2  EQU   0                                                        01066000
ICWKEY3  EQU   0                                                        01067000
PLHPDL   EQU   0                                                        01068000
PLHPDLE  EQU   0                                                        01069000
PLHRRN   EQU   0                                                        01070000
PLHEXTEN EQU   PLHEND                                                   01071000
PLHBMWRK EQU   PLHEXTEN+5                                               01072000
BUFCRSC1 EQU   BUFCAVL                                                  01073000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01074000
PLHBMSV5 EQU   PLHEXTEN+24                                              01075000
PLHBMSV4 EQU   PLHEXTEN+20                                              01076000
PLHBMSV3 EQU   PLHEXTEN+16                                              01077000
PLHBMSV2 EQU   PLHEXTEN+12                                              01078000
PLHBMSV1 EQU   PLHEXTEN+8                                               01079000
PLHRDCNT EQU   PLHEXTEN+6                                               01080000
PLHBMSOV EQU   PLHBMWRK                                                 01081000
PLHBEUC  EQU   PLHBMWRK                                                 01082000
PLHBMRDF EQU   PLHBMWRK                                                 01083000
@NM00011 EQU   PLHEXTEN+4                                               01084000
PLHRESR1 EQU   PLHEXTEN                                                 01085000
BUFCEND  EQU   IDABUFC+64                                               01086000
BUFCUCDN EQU   IDABUFC+60                                               01087000
BUFCUCUP EQU   IDABUFC+56                                               01088000
BUFCMDBT EQU   IDABUFC+52                                               01089000
BUFCHAIN EQU   IDABUFC+48                                               01090000
BUFXORBA EQU   IDABUFC+44                                               01091000
BUFXIRBA EQU   IDABUFC+40                                               01092000
BUFCNXT2 EQU   IDABUFC+37                                               01093000
BUFCIDXL EQU   IDABUFC+36                                               01094000
BUFCDSPC EQU   IDABUFC+32                                               01095000
BUFCWLEN EQU   BUFCINV                                                  01096000
BUFCNXT1 EQU   IDABUFC+24                                               01097000
BUFCCPA  EQU   IDABUFC+16                                               01098000
BUFCORBA EQU   IDABUFC+12                                               01099000
BUFCDDDD EQU   IDABUFC+8                                                01100000
BUFCAMB  EQU   BUFCPLH                                                  01101000
@NM00046 EQU   BUFCFLG2                                                 01102000
BUFCEOD  EQU   BUFCFLG2                                                 01103000
BUFCBSYW EQU   BUFCFLG2                                                 01104000
BUFCBSYR EQU   BUFCFLG2                                                 01105000
BUFCNLAS EQU   BUFCFLG2                                                 01106000
BUFCXDDR EQU   BUFCFLG2                                                 01107000
BUFCFIX  EQU   BUFCIOFL                                                 01108000
BUFCPFCP EQU   BUFCIOFL                                                 01109000
BUFCXEDB EQU   BUFCIOFL                                                 01110000
BUFCWC   EQU   BUFCIOFL                                                 01111000
BUFCREAL EQU   BUFCIOFL                                                 01112000
BUFCRRD  EQU   BUFCIOFL                                                 01113000
BUFCFMT  EQU   BUFCIOFL                                                 01114000
BUFCMW   EQU   BUFCIOFL                                                 01115000
BUFCEPT  EQU   BUFCFLG1                                                 01116000
BUFCEXC  EQU   BUFCFLG1                                                 01117000
BUFCVAL  EQU   BUFCFLG1                                                 01118000
BUFCER2  EQU   BUFCFLG1                                                 01119000
BUFCER1  EQU   BUFCFLG1                                                 01120000
BUFCINS  EQU   BUFCFLG1                                                 01121000
BUFCSEG  EQU   BUFCFLG1                                                 01122000
BUFCUPG  EQU   BUFCFLG1                                                 01123000
BUFCUCNT EQU   BUFCAVL                                                  01124000
@NM00045 EQU   IDABUFDR+16                                              01125000
BUFDBUFC EQU   IDABUFDR+12                                              01126000
@NM00044 EQU   BUFDRFLG                                                 01127000
BUFDRAVL EQU   BUFDRFLG                                                 01128000
BUFDRREL EQU   BUFDRFLG                                                 01129000
BUFDRTSB EQU   IDABUFDR+10                                              01130000
BUFDRMAX EQU   BUFDRCIX                                                 01131000
BUFDRPFN EQU   IDABUFDR+8                                               01132000
BUFDRPFB EQU   IDABUFDR+4                                               01133000
BUFDRLEN EQU   IDABUFDR+2                                               01134000
BUFDRNO  EQU   IDABUFDR+1                                               01135000
BUFDRID  EQU   IDABUFDR                                                 01136000
AMBTRACE EQU   IDAAMB+120                                               01137000
AMBVIOT  EQU   IDAAMB+116                                               01138000
AMBSZCP  EQU   IDAAMB+114                                               01139000
AMBSZFW  EQU   IDAAMB+112                                               01140000
AMBSZWR  EQU   IDAAMB+110                                               01141000
AMBSZRD  EQU   IDAAMB+108                                               01142000
AMBEXEX  EQU   IDAAMB+100                                               01143000
AMBWSHD  EQU   IDAAMB+96                                                01144000
AMBCPA   EQU   IDAAMB+92                                                01145000
AMBBM2SH EQU   IDAAMB+88                                                01146000
AMBRDCNT EQU   AMBCSWD1+2                                               01147000
@NM00043 EQU   AMBCSWD1+1                                               01148000
@NM00042 EQU   AMBAFLG                                                  01149000
AMBCFX   EQU   AMBAFLG                                                  01150000
AMBSIS   EQU   AMBAFLG                                                  01151000
AMBDFR   EQU   AMBAFLG                                                  01152000
AMBICI   EQU   AMBAFLG                                                  01153000
AMBGSR   EQU   AMBAFLG                                                  01154000
AMBLSR   EQU   AMBAFLG                                                  01155000
@NM00041 EQU   AMBAFLG                                                  01156000
AMBUPLH  EQU   IDAAMB+80                                                01157000
AMBPAMBL EQU   IDAAMB+76                                                01158000
AMBPIXP  EQU   IDAAMB+72                                                01159000
@NM00040 EQU   IDAAMB+68                                                01160000
AMBWKA   EQU   IDAAMB+60                                                01161000
AMBAMBXN EQU   AMBEOVPT                                                 01162000
AMBEDB   EQU   IDAAMB+52                                                01163000
AMBRPT   EQU   IDAAMB+50                                                01164000
AMBPUG   EQU   AMBFLG2                                                  01165000
AMBBUSY  EQU   AMBOFLGS                                                 01166000
AMBEXFG  EQU   AMBOFLGS                                                 01167000
@NM00039 EQU   AMBOFLGS                                                 01168000
AMBOPEN  EQU   AMBOFLGS                                                 01169000
@NM00038 EQU   AMBOFLGS                                                 01170000
AMBDEBAD EQU   AMBDEBPT+1                                               01171000
AMBIFLGS EQU   AMBDEBPT                                                 01172000
AMBAMETH EQU   IDAAMB+43                                                01173000
AMBUPX   EQU   AMBINFL                                                  01174000
AMBUCRA  EQU   AMBINFL                                                  01175000
AMBSCRA  EQU   AMBINFL                                                  01176000
AMBCAT   EQU   AMBINFL                                                  01177000
@NM00037 EQU   AMBINFL                                                  01178000
@NM00036 EQU   AMBINFL                                                  01179000
AMBTIOT  EQU   IDAAMB+40                                                01180000
@NM00035 EQU   IDAAMB+38                                                01181000
AMBDDSN  EQU   IDAAMB+35                                                01182000
AMBCDSN  EQU   IDAAMB+32                                                01183000
AMBIOMB  EQU   AMBIOBAD                                                 01184000
@NM00034 EQU   AMBDSORG+1                                               01185000
AMBDORGA EQU   AMBDSORG+1                                               01186000
@NM00033 EQU   AMBDSORG                                                 01187000
AMBINBUF EQU   AMBFLG1                                                  01188000
AMBJRN   EQU   AMBFLG1                                                  01189000
AMBUBF   EQU   AMBFLG1                                                  01190000
AMBSPEED EQU   AMBFLG1                                                  01191000
AMBPCAT  EQU   AMBFLG1                                                  01192000
AMBMCAT  EQU   AMBFLG1                                                  01193000
AMBTYPE  EQU   AMBFLG1                                                  01194000
@NM00032 EQU   AMBFLG0                                                  01195000
AMBPSDS  EQU   AMBFLG0                                                  01196000
AMBCACB  EQU   IDAAMB+16                                                01197000
AMBPH    EQU   IDAAMB+12                                                01198000
AMBBUFC  EQU   IDAAMB+8                                                 01199000
AMBLINK  EQU   IDAAMB+4                                                 01200000
AMBLEN   EQU   IDAAMB+2                                                 01201000
AMBRSC   EQU   IDAAMB+1                                                 01202000
AMBID    EQU   IDAAMB                                                   01203000
ACBAPID  EQU   ACBCOMN+72                                               01204000
ACBCBMWA EQU   ACBCOMN+68                                               01205000
ACBUAPTR EQU   ACBCOMN+64                                               01206000
ACBLRECL EQU   ACBCOMN+62                                               01207000
ACBMSGLN EQU   ACBBLKSZ                                                 01208000
ACBBUFSP EQU   ACBCOMN+56                                               01209000
@NM00031 EQU   ACBUJFCB+1                                               01210000
ACBOPTN  EQU   ACBUJFCB                                                 01211000
ACBVVIC  EQU   ACBINFLG                                                 01212000
ACBUCRA  EQU   ACBINFLG                                                 01213000
ACBSCRA  EQU   ACBINFLG                                                 01214000
ACBCAT   EQU   ACBINFLG                                                 01215000
ACBIJRQE EQU   ACBINFLG                                                 01216000
ACBJEPS  EQU   ACBINFLG                                                 01217000
@NM00030 EQU   ACBINFLG                                                 01218000
ACBERFLG EQU   ACBCOMN+49                                               01219000
ACBBUSY  EQU   ACBIOSFG                                                 01220000
ACBLOCK  EQU   ACBEXFG                                                  01221000
@NM00029 EQU   ACBOFLGS                                                 01222000
ACBDSERR EQU   ACBOFLGS                                                 01223000
ACBOPEN  EQU   ACBOFLGS                                                 01224000
ACBEOV   EQU   ACBOFLGS                                                 01225000
@NM00028 EQU   ACBOFLGS                                                 01226000
ACBDEB   EQU   ACBDDNM+5                                                01227000
ACBERFL  EQU   ACBDDNM+4                                                01228000
ACBAM    EQU   ACBAMETH                                                 01229000
ACBINFL  EQU   ACBDDNM+2                                                01230000
ACBTIOT  EQU   ACBDDNM                                                  01231000
ACBUEL   EQU   ACBEXLST                                                 01232000
ACBPASSW EQU   ACBCOMN+32                                               01233000
ACBMSGAR EQU   ACBCOMN+28                                               01234000
@NM00027 EQU   ACBDSORG+1                                               01235000
ACBDORGA EQU   ACBDSORG+1                                               01236000
@NM00026 EQU   ACBDSORG                                                 01237000
ACBCRNRE EQU   ACBCROPS                                                 01238000
ACBCRNCK EQU   ACBCROPS                                                 01239000
ACBASA   EQU   ACBCCTYP                                                 01240000
@NM00025 EQU   ACBCCTYP                                                 01241000
ACBRECAF EQU   ACBRECFM                                                 01242000
ACBJBUF  EQU   ACBBUFPL+2                                               01243000
ACBMACR4 EQU   ACBBUFPL+1                                               01244000
@NM00024 EQU   ACBMACR3                                                 01245000
ACBNCFX  EQU   ACBMACR3                                                 01246000
ACBSIS   EQU   ACBMACR3                                                 01247000
ACBDFR   EQU   ACBMACR3                                                 01248000
ACBICI   EQU   ACBMACR3                                                 01249000
ACBGSR   EQU   ACBMACR3                                                 01250000
ACBLSR   EQU   ACBMACR3                                                 01251000
@NM00023 EQU   ACBMACR3                                                 01252000
ACBBUFNI EQU   ACBCOMN+18                                               01253000
ACBBUFND EQU   ACBCOMN+16                                               01254000
ACBSTRNO EQU   ACBCOMN+15                                               01255000
ACBBSTNO EQU   ACBCOMN+14                                               01256000
ACBAIX   EQU   ACBMACR2                                                 01257000
ACBDSN   EQU   ACBMACR2                                                 01258000
ACBRST   EQU   ACBMACR2                                                 01259000
ACBLOGON EQU   ACBMACR2                                                 01260000
ACBSKP   EQU   ACBMACR2                                                 01261000
@NM00022 EQU   ACBMACR2                                                 01262000
ACBUBF   EQU   ACBMACR1                                                 01263000
ACBOUT   EQU   ACBMACR1                                                 01264000
ACBIN    EQU   ACBMACR1                                                 01265000
ACBDIR   EQU   ACBMACR1                                                 01266000
ACBSEQ   EQU   ACBMACR1                                                 01267000
ACBBLK   EQU   ACBCNV                                                   01268000
ACBADD   EQU   ACBADR                                                   01269000
ACBKEY   EQU   ACBMACR1                                                 01270000
ACBINRTN EQU   ACBCOMN+8                                                01271000
ACBIBCT  EQU   ACBJWA                                                   01272000
ACBLEN2  EQU   ACBLENG2                                                 01273000
ACBSTYP  EQU   ACBCOMN+1                                                01274000
ACBID    EQU   ACBCOMN                                                  01275000
@NM00021 EQU   ARDPRF                                                   01276000
ARDPRFMT EQU   ARDPRF                                                   01277000
ARDPRSS  EQU   ARDPRF                                                   01278000
ARDRELNO EQU   IDAARDB+26                                               01279000
ARDVOLSR EQU   IDAARDB+20                                               01280000
ARDHKRBA EQU   IDAARDB+8                                                01281000
ARDLEN   EQU   IDAARDB+2                                                01282000
ARDEOD   EQU   ARDTYPE                                                  01283000
ARDUOVFL EQU   ARDTYPE                                                  01284000
ARDID    EQU   IDAARDB                                                  01285000
AMDEXCP  EQU   AMDSTAT+44                                               01286000
AMDNCAS  EQU   AMDSTAT+40                                               01287000
AMDNCIS  EQU   AMDSTAT+36                                               01288000
AMDRETR  EQU   AMDSTAT+28                                               01289000
AMDUPR   EQU   AMDSTAT+24                                               01290000
AMDIREC  EQU   AMDSTAT+20                                               01291000
AMDDELR  EQU   AMDSTAT+16                                               01292000
AMDNEXT  EQU   AMDSTAT+10                                               01293000
AMDNIL   EQU   AMDSTAT+8                                                01294000
AMDSTSP  EQU   AMDSTAT                                                  01295000
@NM00020 EQU   IDAAMDSB+41                                              01296000
@NM00019 EQU   AMDATTR3                                                 01297000
AMDLM    EQU   AMDATTR3                                                 01298000
AMDWAIT  EQU   AMDATTR3                                                 01299000
AMDBIND  EQU   AMDATTR3                                                 01300000
AMDFAULT EQU   AMDATTR3                                                 01301000
AMDUNQ   EQU   AMDATTR3                                                 01302000
AMDMAXRR EQU   AMDSSRBA                                                 01303000
AMDNSLOT EQU   AMDHLRBA                                                 01304000
AMDLRECL EQU   IDAAMDSB+24                                              01305000
AMDFSCI  EQU   IDAAMDSB+16                                              01306000
AMDFSCA  EQU   IDAAMDSB+14                                              01307000
AMDPCTCI EQU   IDAAMDSB+11                                              01308000
AMDPCTCA EQU   IDAAMDSB+10                                              01309000
AMDRKP   EQU   IDAAMDSB+6                                               01310000
AMDAXRKP EQU   AMDNEST                                                  01311000
AMDLEN   EQU   IDAAMDSB+2                                               01312000
AMDSPAN  EQU   AMDATTR                                                  01313000
AMDRRDS  EQU   AMDATTR                                                  01314000
AMDRANGE EQU   AMDATTR                                                  01315000
AMDORDER EQU   AMDATTR                                                  01316000
AMDWCK   EQU   AMDATTR                                                  01317000
AMDDST   EQU   AMDATTR                                                  01318000
AMDSBID  EQU   IDAAMDSB                                                 01319000
AMBLCMB  EQU   IDAAMBL+64                                               01320000
AMBLBIB  EQU   IDAAMBL+60                                               01321000
AMBLIX   EQU   IDAAMBL+56                                               01322000
AMBLMIDS EQU   IDAAMBL+42                                               01323000
AMBLNIDS EQU   IDAAMBL+41                                               01324000
@NM00018 EQU   IDAAMBL+40                                               01325000
AMBLNUM  EQU   IDAAMBL+38                                               01326000
AMBLNST  EQU   IDAAMBL+37                                               01327000
@NM00017 EQU   AMBLFLG2                                                 01328000
AMBLSTAG EQU   AMBLFLG2                                                 01329000
@NM00016 EQU   AMBLFLG2                                                 01330000
AMBLDUMY EQU   AMBLFLG1                                                 01331000
AMBLCAT  EQU   AMBLFLG1                                                 01332000
AMBLUCRA EQU   AMBLFLG1                                                 01333000
AMBLSCRA EQU   AMBLFLG1                                                 01334000
AMBLVVIC EQU   AMBLFLG1                                                 01335000
AMBLUPD  EQU   AMBLFLG1                                                 01336000
AMBLCINV EQU   AMBLFLG1                                                 01337000
AMBLFULL EQU   AMBLFLG1                                                 01338000
AMBLLEN  EQU   IDAAMBL+34                                               01339000
@NM00015 EQU   AMBLSHAR                                                 01340000
AMBLWRIT EQU   AMBLSHAR                                                 01341000
AMBLCATO EQU   AMBLSHAR                                                 01342000
AMBLPRIM EQU   AMBLSHAR                                                 01343000
AMBLID   EQU   IDAAMBL+32                                               01344000
@NM00014 EQU   IDAAMBL+31                                               01345000
@NM00013 EQU   AMBLTYPE                                                 01346000
AMBLFIX  EQU   AMBLTYPE                                                 01347000
AMBLBASE EQU   AMBLTYPE                                                 01348000
AMBLAIX  EQU   AMBLTYPE                                                 01349000
AMBLUPGR EQU   AMBLTYPE                                                 01350000
AMBLPATH EQU   AMBLTYPE                                                 01351000
AMBLENO  EQU   AMBLVC+1                                                 01352000
AMBLVRT  EQU   AMBLVC                                                   01353000
AMBLXPT  EQU   IDAAMBL+24                                               01354000
AMBLDFR  EQU   AMBLQ                                                    01355000
AMBLESDS EQU   AMBLQ                                                    01356000
AMBLKSDS EQU   AMBLQ                                                    01357000
AMBLUBF  EQU   AMBLQ                                                    01358000
AMBLFSTP EQU   AMBLQ                                                    01359000
AMBLLSR  EQU   AMBLQ                                                    01360000
AMBLGSR  EQU   AMBLQ                                                    01361000
AMBLDDC  EQU   AMBLQ                                                    01362000
AMBLDCI  EQU   AMBLIDF+4                                                01363000
AMBLCACB EQU   AMBLIDF                                                  01364000
@NM00012 EQU   AMBLEOV+2                                                01365000
AMBLCOMP EQU   AMBLEOV+1                                                01366000
AMBLESET EQU   AMBLEFLG                                                 01367000
AMBLWAIT EQU   AMBLEFLG                                                 01368000
AMBLACB  EQU   IDAAMBL+8                                                01369000
AMBLSCHN EQU   IDAAMBL+4                                                01370000
AMBLPCHN EQU   IDAAMBL                                                  01371000
PLHERRET EQU   IDAPLH+276                                               01372000
PLHASCB  EQU   IDAPLH+272                                               01373000
PLHECB   EQU   IDAPLH+268                                               01374000
@NM00010 EQU   IDAPLH+265                                               01375000
PLHDRMSK EQU   IDAPLH+264                                               01376000
PLHR13   EQU   IDAPLH+260                                               01377000
PLHPARM1 EQU   IDAPLH+256                                               01378000
PLHDRRSC EQU   IDAPLH+252                                               01379000
PLHSLRBA EQU   IDAPLH+244                                               01380000
PLHSRCSG EQU   IDAPLH+242                                               01381000
PLHNOSEG EQU   IDAPLH+240                                               01382000
PLHLLOR  EQU   IDAPLH+236                                               01383000
PLHXPLH  EQU   PLHWAX                                                   01384000
@NM00009 EQU   PLHIXSPL+8                                               01385000
PLHIXBFC EQU   PLHIXSPL+4                                               01386000
PLHHIREC EQU   PLHSSRBA                                                 01387000
PLHISPLP EQU   IDAPLH+196                                               01388000
PLHRBUFC EQU   IDAPLH+192                                               01389000
PLHIBUFC EQU   IDAPLH+188                                               01390000
PLHNRBA  EQU   IDAPLH+184                                               01391000
PLHDDDD  EQU   PLHEOVPT                                                 01392000
PLHAR14  EQU   IDAPLH+176                                               01393000
@NM00008 EQU   IDAPLH+172                                               01394000
@NM00007 EQU   IDAPLH+168                                               01395000
PLHASAVE EQU   IDAPLH+164                                               01396000
PLHRETOS EQU   IDAPLH+118                                               01397000
PLHCHAIN EQU   IDAPLH+112                                               01398000
PLHAMB   EQU   IDAPLH+108                                               01399000
PLHSAVE6 EQU   IDAPLH+104                                               01400000
PLHSAVE5 EQU   IDAPLH+100                                               01401000
PLHSAVE4 EQU   IDAPLH+96                                                01402000
PLHSAVE3 EQU   IDAPLH+92                                                01403000
PLHSAVE2 EQU   IDAPLH+88                                                01404000
PLHARET  EQU   IDAPLH+80                                                01405000
PLHIIOB  EQU   PLHDIOB                                                  01406000
PLHSRSID EQU   IDAPLH+74                                                01407000
PLHRDFC  EQU   IDAPLH+72                                                01408000
PLHRDFP  EQU   IDAPLH+68                                                01409000
PLHFSP   EQU   IDAPLH+64                                                01410000
PLHRECP  EQU   IDAPLH+60                                                01411000
PLHNBUFC EQU   IDAPLH+56                                                01412000
PLHDBUFC EQU   IDAPLH+52                                                01413000
PLHLRECL EQU   IDAPLH+48                                                01414000
PLHARDB  EQU   IDAPLH+44                                                01415000
@NM00006 EQU   IDAPLH+43                                                01416000
PLHRCODE EQU   IDAPLH+41                                                01417000
PLHUCODE EQU   PLHJCODE                                                 01418000
PLHJNRBA EQU   IDAPLH+36                                                01419000
PLHJRNLL EQU   IDAPLH+32                                                01420000
PLHUPECB EQU   PLHJORBA                                                 01421000
PLHDSIDA EQU   IDAPLH+24                                                01422000
PLHCRPL  EQU   IDAPLH+20                                                01423000
PLHMRPL  EQU   IDAPLH+16                                                01424000
PLHBFRNO EQU   IDAPLH+15                                                01425000
PLHFRCNT EQU   IDAPLH+14                                                01426000
PLHRMIN  EQU   IDAPLH+13                                                01427000
PLHDSTYP EQU   IDAPLH+12                                                01428000
PLHACB   EQU   IDAPLH+8                                                 01429000
PLHRAE   EQU   PLHAFLGS                                                 01430000
PLHRABWD EQU   PLHAFLGS                                                 01431000
PLHIOSID EQU   PLHAFLGS                                                 01432000
PLHDBDC  EQU   PLHAFLGS                                                 01433000
PLHVAMB  EQU   PLHAFLGS                                                 01434000
PLHIOSRQ EQU   PLHAFLGS                                                 01435000
PLHDRLM  EQU   PLHAFLGS                                                 01436000
PLHEOVDF EQU   PLHFLG3                                                  01437000
PLHRVRS  EQU   PLHFLG3                                                  01438000
PLHBWD   EQU   PLHFLG3                                                  01439000
PLHSLVLD EQU   PLHFLG3                                                  01440000
PLHRAHD  EQU   PLHFLG3                                                  01441000
PLHSRBSG EQU   PLHFLG3                                                  01442000
@NM00005 EQU   PLHEFLGS+1                                               01443000
PLHRSTRT EQU   PLHEFLGS+1                                               01444000
PLHDSCAN EQU   PLHEFLGS                                                 01445000
PLHINVAL EQU   PLHEFLGS                                                 01446000
PLHEODX  EQU   PLHEFLGS                                                 01447000
PLHNOADV EQU   PLHEFLGS                                                 01448000
PLHSRINV EQU   PLHEFLGS                                                 01449000
PLHSKPER EQU   PLHEFLGS                                                 01450000
PLH1ST   EQU   PLHEFLGS                                                 01451000
PLHNOSPC EQU   PLHEFLGS                                                 01452000
PLHIWAIT EQU   PLHFLG2                                                  01453000
PLHSVADV EQU   PLHFLG2                                                  01454000
PLHCIINS EQU   PLHFLG2                                                  01455000
PLHKRE   EQU   PLHFLG2                                                  01456000
PLHADDTE EQU   PLHFLG2                                                  01457000
PLHSQINS EQU   PLHFLG2                                                  01458000
PLHUPD   EQU   PLHFLG2                                                  01459000
@NM00004 EQU   PLHFLG1                                                  01460000
PLHDRPND EQU   PLHFLG1                                                  01461000
PLHASYRQ EQU   PLHFLG1                                                  01462000
PLHRDEXC EQU   PLHFLG1                                                  01463000
PLHSSR   EQU   PLHFLG1                                                  01464000
PLHASKBF EQU   PLHFLG1                                                  01465000
PLHENDRQ EQU   PLHFLG1                                                  01466000
PLHEOVW  EQU   PLHFLG1                                                  01467000
PLHATV   EQU   IDAPLH+1                                                 01468000
PLHAVL   EQU   IDAPLH                                                   01469000
PLHIOSDQ EQU   IDAPLHDR+12                                              01470000
PLHDRCUR EQU   IDAPLHDR+10                                              01471000
PLHDRMAX EQU   IDAPLHDR+8                                               01472000
PLHDRREQ EQU   IDAPLHDR+4                                               01473000
PLHELTH  EQU   IDAPLHDR+2                                               01474000
PLHCNT   EQU   IDAPLHDR+1                                               01475000
PLHID    EQU   IDAPLHDR                                                 01476000
RPLERMSA EQU   RPLCOMN+72                                               01477000
RPLEMLEN EQU   RPLCOMN+70                                               01478000
RPLACTIV EQU   RPLCOMN+69                                               01479000
RPLBRANC EQU   RPLEXTD1                                                 01480000
RPLNIB   EQU   RPLEXTD1                                                 01481000
@NM00003 EQU   RPLEXTD1                                                 01482000
RPLEXIT  EQU   RPLEXTD1                                                 01483000
RPLNEXIT EQU   RPLEXTD1                                                 01484000
RPLEXSCH EQU   RPLEXTD1                                                 01485000
RPLDDDD  EQU   RPLRBAR+4                                                01486000
@NM00002 EQU   RPLRBAR+3                                                01487000
@NM00001 EQU   RPLAIXID                                                 01488000
RPLAXPKP EQU   RPLAIXID                                                 01489000
RPLAIXPC EQU   RPLRBAR                                                  01490000
RPLRSV88 EQU   RPLOPT8                                                  01491000
RPLUNCON EQU   RPLOPT8                                                  01492000
RPLACTV  EQU   RPLOPT8                                                  01493000
RPLSESS  EQU   RPLOPT8                                                  01494000
RPLPEND  EQU   RPLOPT8                                                  01495000
RPLODPRM EQU   RPLOPT8                                                  01496000
RPLODACP EQU   RPLOPT8                                                  01497000
RPLODACQ EQU   RPLOPT8                                                  01498000
RPLRSV78 EQU   RPLOPT7                                                  01499000
RPLRSV77 EQU   RPLOPT7                                                  01500000
RPLRLSOP EQU   RPLOPT7                                                  01501000
RPLTPOST EQU   RPLOPT7                                                  01502000
RPLQOPT  EQU   RPLOPT7                                                  01503000
RPLCNIMM EQU   RPLCNOPT                                                 01504000
RPLCNANY EQU   RPLCNOPT                                                 01505000
RPLCNALL EQU   RPLCNOPT                                                 01506000
RPLRSV68 EQU   RPLOPT6                                                  01507000
RPLRSV67 EQU   RPLOPT6                                                  01508000
RPLLOCK  EQU   RPLOPT6                                                  01509000
RPLNCOND EQU   RPLOPT6                                                  01510000
RPLCOND  EQU   RPLOPT6                                                  01511000
RPLEOT   EQU   RPLUNTYP                                                 01512000
RPLEOM   EQU   RPLUNTYP                                                 01513000
RPLEOB   EQU   RPLUNTYP                                                 01514000
RPLWROPT EQU   RPLOPT5                                                  01515000
RPLNODE  EQU   RPLOPT5                                                  01516000
RPLERACE EQU   RPLWRTYP                                                 01517000
RPLEAU   EQU   RPLWRTYP                                                 01518000
RPLNERAS EQU   RPLWRTYP                                                 01519000
RPLPSOPT EQU   RPLOPT5                                                  01520000
RPLSSNIN EQU   RPLOPT5                                                  01521000
RPLDLGIN EQU   RPLOPT5                                                  01522000
RPLBUFL  EQU   RPLCOMN+52                                               01523000
RPLRLEN  EQU   RPLCOMN+48                                               01524000
RPLCHAIN EQU   RPLNXTRP                                                 01525000
RPLOPT4  EQU   RPLOPTCD+3                                               01526000
RPLALIGN EQU   RPLOPT3                                                  01527000
RPLFMT   EQU   RPLOPT3                                                  01528000
RPLFLD   EQU   RPLOPT3                                                  01529000
RPLVFY   EQU   RPLOPT3                                                  01530000
RPLBLK   EQU   RPLOPT3                                                  01531000
RPLSFORM EQU   RPLOPT3                                                  01532000
RPLEODS  EQU   RPLOPT3                                                  01533000
RPLNSP   EQU   RPLOPT2                                                  01534000
RPLUPD   EQU   RPLOPT2                                                  01535000
RPLWAITX EQU   RPLOPT2                                                  01536000
RPLLRD   EQU   RPLOPT2                                                  01537000
RPLBWD   EQU   RPLOPT2                                                  01538000
RPLCNV   EQU   RPLOPT2                                                  01539000
RPLADD   EQU   RPLADR                                                   01540000
RPLKEY   EQU   RPLOPT2                                                  01541000
RPLECBIN EQU   RPLECBSW                                                 01542000
RPLGEN   EQU   RPLOPT1                                                  01543000
RPLKGE   EQU   RPLOPT1                                                  01544000
RPLASY   EQU   RPLOPT1                                                  01545000
RPLSKP   EQU   RPLOPT1                                                  01546000
RPLSEQ   EQU   RPLOPT1                                                  01547000
RPLDIR   EQU   RPLOPT1                                                  01548000
RPLLOC   EQU   RPLOPT1                                                  01549000
RPLDAF   EQU   RPLARG+2                                                 01550000
RPLSAF   EQU   RPLARG                                                   01551000
RPLAREA  EQU   RPLCOMN+32                                               01552000
RPLTCBPT EQU   RPLCOMN+28                                               01553000
RPLCCHAR EQU   RPLCOMN+20                                               01554000
RPLSTRID EQU   RPLCOMN+18                                               01555000
RPLKEYL  EQU   RPLKEYLE                                                 01556000
RPLRDSOH EQU   RPLFDB3                                                  01557000
RPLRLG   EQU   RPLFDB3                                                  01558000
RPLLGFRC EQU   RPLFDB3                                                  01559000
RPLREOT  EQU   RPLFDB3                                                  01560000
RPLREOM  EQU   RPLFDB3                                                  01561000
RPLREOB  EQU   RPLFDB3                                                  01562000
RPLSV32  EQU   RPLFDB3                                                  01563000
RPLUINPT EQU   RPLFDB3                                                  01564000
RPLSTSAV EQU   RPLFDB2                                                  01565000
RPLCUERR EQU   RPLFDB2                                                  01566000
RPLDLGFL EQU   RPLFDB2                                                  01567000
RPLIOERR EQU   RPLFDB2                                                  01568000
RPLDVUNS EQU   RPLFDB2                                                  01569000
RPLATND  EQU   RPLFDB2                                                  01570000
RPLRVID  EQU   RPLFDB2                                                  01571000
RPLERLK  EQU   RPLFDB2                                                  01572000
RPLSTAT  EQU   RPLFDBWD                                                 01573000
RPLPOST  EQU   RPLECB                                                   01574000
RPLWAIT  EQU   RPLECB                                                   01575000
RPLPLHPT EQU   RPLCOMN+4                                                01576000
RPLLEN2  EQU   RPLLEN                                                   01577000
RPLREQ   EQU   RPLIDWD+2                                                01578000
RPLSTYP  EQU   RPLIDWD+1                                                01579000
RPLID    EQU   RPLIDWD                                                  01580000
IXKEY    EQU   IDAIXK                                                   01581000
IBFLP1   EQU   IBFLP2                                                   01582000
IXHFLGS  EQU   IDAIXH+17                                                01583000
IXHLV    EQU   IDAIXH+16                                                01584000
IXHXX    EQU   IDAIXH+12                                                01585000
IXHHP    EQU   IDAIXH+8                                                 01586000
IXHBRBA  EQU   IDAIXH+4                                                 01587000
ICWREQ   EQU   IDAICWA+54                                               01588000
ICWCRSEG EQU   IDAICWA+52                                               01589000
ICWNOSEG EQU   IDAICWA+50                                               01590000
ICWNEST  EQU   IDAICWA+48                                               01591000
ICWTPTR  EQU   IDAICWA+32                                               01592000
ICWTBASE EQU   IDAICWA+28                                               01593000
ICWSCNT  EQU   IDAICWA+22                                               01594000
ICWPSEO  EQU   IDAICWA+20                                               01595000
ICWCHN   EQU   IDAICWA+4                                                01596000
ICWLEN   EQU   IDAICWA+2                                                01597000
ICWENDRQ EQU   ICWFLG1                                                  01598000
ICWVNE   EQU   ICWFLG1                                                  01599000
ICWRBAOK EQU   ICWFLG1                                                  01600000
ICWWAGM  EQU   ICWFLG1                                                  01601000
ICWID    EQU   IDAICWA                                                  01602000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01603000
@RT00112 EQU   PROCEED                                                  01604000
@RT00119 EQU   PROCEED                                                  01605000
@RC00105 EQU   @RC00103                                                 01606000
@RT00125 EQU   PROCEED                                                  01607000
@RT00180 EQU   FMTERR                                                   01608000
@RT00188 EQU   PREFMT                                                   01609000
@ENDDATA EQU   *                                                        01610000
         END   IDA019RN,(C'PLS2100',0701,78172)                         01611000
