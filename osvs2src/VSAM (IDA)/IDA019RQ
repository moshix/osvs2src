         TITLE 'IDA019RQ - VSAM RELATIVE RECORD PUT/ERASE              *00001000
                        '                                               00002000
IDA019RQ CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019RQ  78.172'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
*                                                                  0154 00013000
         IDASVR14                                                       00014000
*   /*****************************************************************/ 00015000
*   /*                                                               */ 00016000
*   /* VALIDATE PUT REQUEST ---                                      */ 00017000
*   /*                                                               */ 00018000
*   /*****************************************************************/ 00019000
*                                                                  0155 00020000
*   IF AMBLFULL=OFF&AMBLUPD=OFF THEN/* OUTPUT NOT ALLOWED FOR THIS 0155 00021000
*                                      USER.                         */ 00022000
         L     @10,RPLDACB(,RRPL)                                  0155 00023000
         L     @10,ACBAMBL(,@10)                                   0155 00024000
         TM    AMBLFULL(@10),B'10100000'                           0155 00025000
         BNZ   @RF00155                                            0155 00026000
*     DO;                           /* INVALID ACCESS ERROR.         */ 00027000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00028000
         MVI   RPLERREG(RRPL),X'08'                                0157 00029000
*       RPLERRCD=RPLINACC;          /* SET INVALID ACCESS ERROR.     */ 00030000
         MVI   RPLERRCD(RRPL),X'44'                                0158 00031000
*       CALL EXIT;                  /* RETURN.                       */ 00032000
         BAL   @14,EXIT                                            0159 00033000
*     END;                          /* END INVALID ACCESS ERROR.     */ 00034000
*   IF RPLREQ=RPLPUT&RPLLOC=ON THEN /* PUT LOCATE REQUEST.           */ 00035000
@RF00155 CLI   RPLREQ(RRPL),1                                      0161 00036000
         BNE   @RF00161                                            0161 00037000
         TM    RPLLOC(RRPL),B'10000000'                            0161 00038000
         BNO   @RF00161                                            0161 00039000
*     DO;                           /* INVALID LOCATE REQUEST.       */ 00040000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00041000
         MVI   RPLERREG(RRPL),X'08'                                0163 00042000
*       RPLERRCD=RPLINLOC;          /* SET INVALID LOCATE REQ.       */ 00043000
         MVI   RPLERRCD(RRPL),X'54'                                0164 00044000
*       CALL EXIT;                  /* RETURN.                       */ 00045000
         BAL   @14,EXIT                                            0165 00046000
*     END;                          /* END INVALID LOCATE REQUEST    */ 00047000
*                                                                  0167 00048000
*   /*****************************************************************/ 00049000
*   /*                                                               */ 00050000
*   /* PUT UPDATE OR ERASE REQUEST ---                               */ 00051000
*   /*                                                               */ 00052000
*   /*****************************************************************/ 00053000
*                                                                  0167 00054000
*   IF(RPLREQ=RPLPUT&RPLUPD=ON)|RPLREQ=RPLERASE THEN/* PUT UPDATE OR    00055000
*                                      ERASE REQUEST.                */ 00056000
@RF00161 CLI   RPLREQ(RRPL),1                                      0167 00057000
         BNE   @GL00002                                            0167 00058000
         TM    RPLUPD(RRPL),B'00000010'                            0167 00059000
         BO    @RT00167                                            0167 00060000
@GL00002 CLI   RPLREQ(RRPL),5                                      0167 00061000
         BNE   @RF00167                                            0167 00062000
@RT00167 DS    0H                                                  0168 00063000
*     DO;                           /* PUT UPD/ERASE REQUEST.        */ 00064000
*       IF PLHUPD=OFF THEN          /* NO PREVIOUS GET UPDATE.       */ 00065000
         TM    PLHUPD(RPLH),B'10000000'                            0169 00066000
         BNZ   @RF00169                                            0169 00067000
*         DO;                                                      0170 00068000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 00069000
         MVI   RPLERREG(RRPL),X'08'                                0171 00070000
*           RPLERRCD=RPLINUPD;      /* SET NO GET UPDATE ERROR.      */ 00071000
         MVI   RPLERRCD(RRPL),X'5C'                                0172 00072000
*           CALL EXIT;              /* RETURN.                       */ 00073000
         BAL   @14,EXIT                                            0173 00074000
*         END;                                                     0174 00075000
*       IF RPLREQ=RPLPUT THEN       /* PUT REQUEST.                  */ 00076000
@RF00169 CLI   RPLREQ(RRPL),1                                      0175 00077000
         BNE   @RF00175                                            0175 00078000
*         DO;                       /* PROCESS PUT REQUEST.          */ 00079000
*           IF RPLRLEN^=PLHLRECL THEN/* RECORD LENGTH NOT EQUAL TO 0177 00080000
*                                      DEFINE RECORDSIZE.            */ 00081000
         CLC   RPLRLEN(4,RRPL),PLHLRECL(RPLH)                      0177 00082000
         BE    @RF00177                                            0177 00083000
*             DO;                                                  0178 00084000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00085000
         MVI   RPLERREG(RRPL),X'08'                                0179 00086000
*               RPLERRCD=RPLDLCER;  /* SET UPDATE REC LENGTH ERROR.  */ 00087000
         MVI   RPLERRCD(RRPL),X'64'                                0180 00088000
*               CALL EXIT;          /* RETURN.                       */ 00089000
         BAL   @14,EXIT                                            0181 00090000
*             END;                                                 0182 00091000
*           RFY                                                    0183 00092000
*            (RWORK2,                                              0183 00093000
*             RWORK3,                                              0183 00094000
*             RWORK4,                                              0183 00095000
*             RWORK5) RSTD;         /* RESTRICT REGS.                */ 00096000
@RF00177 DS    0H                                                  0184 00097000
*           RWORK2=PLHRECP;         /* TO ADDRESS.                   */ 00098000
         L     RWORK2,PLHRECP(,RPLH)                               0184 00099000
*           RWORK4=RPLAREA;         /* FROM ADDRESS.                 */ 00100000
         L     RWORK4,RPLAREA(,RRPL)                               0185 00101000
*           RWORK3=PLHLRECL;        /* TO LENGTH.                    */ 00102000
         L     RWORK3,PLHLRECL(,RPLH)                              0186 00103000
*           RWORK5=RWORK3;          /* FROM LENGTH.                  */ 00104000
         LR    RWORK5,RWORK3                                       0187 00105000
*           GEN(MVCL RWORK2,RWORK4);/* MOVE USER RECORD TO BUFFER.   */ 00106000
         MVCL RWORK2,RWORK4                                             00107000
*         END;                      /* END PROCESS PUT REQ.          */ 00108000
*       ELSE                        /* ERASE REQUEST.                */ 00109000
*         DO;                       /* PROCESS ERASE REQUEST.        */ 00110000
         B     @RC00175                                            0190 00111000
@RF00175 DS    0H                                                  0191 00112000
*           RWORK2=PLHRECP;         /* TO ADDRESS.                   */ 00113000
         L     RWORK2,PLHRECP(,RPLH)                               0191 00114000
*           RWORK3=PLHLRECL;        /* TO LENGTH.                    */ 00115000
         L     RWORK3,PLHLRECL(,RPLH)                              0192 00116000
*           RWORK5=ZERO;            /* PAD CHAR.                     */ 00117000
         SLR   RWORK5,RWORK5                                       0193 00118000
*           GEN(MVCL RWORK2,RWORK4);/* ZERO RECORD IN BUFFER.        */ 00119000
         MVCL RWORK2,RWORK4                                             00120000
*           RFY                                                    0195 00121000
*            (RWORK2,                                              0195 00122000
*             RWORK3,                                              0195 00123000
*             RWORK4,                                              0195 00124000
*             RWORK5) UNRSTD;       /* FREE REGS.                    */ 00125000
*           RDFEMPTY=ON;            /* SET RDF EMPTY.                */ 00126000
         L     @10,PLHRDFP(,RPLH)                                  0196 00127000
         OI    RDFEMPTY(@10),B'00000100'                           0196 00128000
*         END;                      /* END PROCESS ERASE REQ.        */ 00129000
*       RPARM1=BUFCDDDD;            /* OUTPUT RBA.                   */ 00130000
@RC00175 L     @10,PLHDBUFC(,RPLH)                                 0198 00131000
         L     RPARM1,BUFCDDDD(,@10)                               0198 00132000
*       DO;                         /* SET OUTPUT RBA                */ 00133000
*         BUFCORBA=RPARM1;                                         0200 00134000
         ST    RPARM1,BUFCORBA(,@10)                               0200 00135000
*         BUFCMW=ON;                /* SET MUST WRITE                */ 00136000
         OI    BUFCMW(@10),B'10000000'                             0201 00137000
*       END;                        /* SET BUFC MW & OUTPUT RBA.     */ 00138000
*       PLHUPD=OFF;                 /* RESET PLH UPDATE FLAG.        */ 00139000
         NI    PLHUPD(RPLH),B'01111111'                            0203 00140000
*       RPLDDDD=PLHSAVE1;           /* SET RPL RBA.                  */ 00141000
         L     @10,PLHSAVE1(,RPLH)                                 0204 00142000
         ST    @10,RPLDDDD(,RRPL)                                  0204 00143000
*       PLHRCODE=RPLREQ;            /* SAVE REQUEST CODE.            */ 00144000
         IC    @10,RPLREQ(,RRPL)                                   0205 00145000
         STC   @10,PLHRCODE(,RPLH)                                 0205 00146000
*       IF RPLREQ=RPLPUT THEN       /* PUT REQUEST.                  */ 00147000
         CLI   RPLREQ(RRPL),1                                      0206 00148000
         BNE   @RF00206                                            0206 00149000
*         DO;                                                      0207 00150000
*           AMDUPR=AMDUPR+ONE;      /* INCREMENT UPDATE COUNT.       */ 00151000
         L     @10,AMBDSB(,RAMB)                                   0208 00152000
         LA    @05,1                                               0208 00153000
         AL    @05,AMDUPR(,@10)                                    0208 00154000
         ST    @05,AMDUPR(,@10)                                    0208 00155000
*           PLHJCODE=PLHJPUT;       /* SET JOURNAL CODE = PUT.       */ 00156000
         MVI   PLHJCODE(RPLH),B'00000100'                          0209 00157000
*         END;                                                     0210 00158000
*       ELSE                        /* ERASE REQUEST.                */ 00159000
*         DO;                                                      0211 00160000
         B     @RC00206                                            0211 00161000
@RF00206 DS    0H                                                  0212 00162000
*           AMDDELR=AMDDELR+ONE;    /* INCREMENT DELETE COUNT.       */ 00163000
         L     @10,AMBDSB(,RAMB)                                   0212 00164000
         LA    @05,1                                               0212 00165000
         AL    @05,AMDDELR(,@10)                                   0212 00166000
         ST    @05,AMDDELR(,@10)                                   0212 00167000
*           AMDIREC=AMDIREC-ONE;    /* DECREMENT NO. INSERTS COUNT.  */ 00168000
         L     @05,AMDIREC(,@10)                                   0213 00169000
         BCTR  @05,0                                               0213 00170000
         ST    @05,AMDIREC(,@10)                                   0213 00171000
*           PLHJCODE=PLHJERS;       /* SET JOURNAL CODE = ERASE.     */ 00172000
         MVI   PLHJCODE(RPLH),B'00001000'                          0214 00173000
*         END;                                                     0215 00174000
*       IF RPLDIR=ON&RPLNSP=OFF THEN/* DIR & NOT NSP REQ.            */ 00175000
@RC00206 TM    RPLDIR(RRPL),B'01000000'                            0216 00176000
         BNO   @RF00216                                            0216 00177000
         TM    RPLNSP(RRPL),B'00000001'                            0216 00178000
         BNZ   @RF00216                                            0216 00179000
*         DO;                                                      0217 00180000
*           PLHINVAL=ON;            /* SET PLH INVALID.              */ 00181000
         OI    PLHINVAL(RPLH),B'00000010'                          0218 00182000
*           IF AMBDFR=OFF THEN      /* NOT DEFER WRITE.              */ 00183000
         TM    AMBDFR(RAMB),B'00001000'                            0219 00184000
         BNZ   @RF00219                                            0219 00185000
*             DO;                                                  0220 00186000
*               RBUFC=PLHDBUFC;     /* POINT TO DATA BUFC.           */ 00187000
         L     RBUFC,PLHDBUFC(,RPLH)                               0221 00188000
*I02:                                                              0222 00189000
*               DO;                 /* IDACALL(IDAWRBFR)             */ 00190000
I02      DS    0H                                                  0223 00191000
*                 CALL IDAWRBFR;    /* EXIT TO IDAWRBFR              */ 00192000
         L     @15,@CV00946                                        0223 00193000
         BALR  @14,@15                                             0223 00194000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00195000
         BALR @11,0                                                     00196000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00197000
         USING *,@11                                                    00198000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00199000
         L     @11,=A(@PSTART)                                          00200000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00201000
         USING @PSTART,@11                                              00202000
*               END I02;            /* WRITE DATA BUFFER.            */ 00203000
*             END;                                                 0229 00204000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC.           */ 00205000
@RF00219 L     RBUFC,PLHDBUFC(,RPLH)                               0230 00206000
*I03:                                                              0231 00207000
*           DO;                     /* IDACALL(IDAFREEB)             */ 00208000
I03      DS    0H                                                  0232 00209000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 00210000
         L     @15,@CV00947                                        0232 00211000
         BALR  @14,@15                                             0232 00212000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00213000
         BALR @11,0                                                     00214000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00215000
         USING *,@11                                                    00216000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00217000
         L     @11,=A(@PSTART)                                          00218000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00219000
         USING @PSTART,@11                                              00220000
*           END I03;                /* FREE DATA BUFFER.             */ 00221000
*         END;                                                     0238 00222000
*       IF AMBJRN=ON THEN           /* JOURNAL EXIT.                 */ 00223000
@RF00216 TM    AMBJRN(RAMB),B'00000010'                            0239 00224000
         BNO   @RF00239                                            0239 00225000
*I04:                                                              0240 00226000
*         DO;                       /* IDACALL(IDATJXIT)             */ 00227000
I04      DS    0H                                                  0241 00228000
*           CALL IDATJXIT;          /* EXIT TO IDATJXIT              */ 00229000
         L     @15,@CV00949                                        0241 00230000
         BALR  @14,@15                                             0241 00231000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00232000
         BALR @11,0                                                     00233000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00234000
         USING *,@11                                                    00235000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00236000
         L     @11,=A(@PSTART)                                          00237000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00238000
         USING @PSTART,@11                                              00239000
*         END I04;                  /* CALL JOURNAL EXIT ROUTINE.    */ 00240000
*       CALL EXIT;                  /* RETURN.                       */ 00241000
@RF00239 BAL   @14,EXIT                                            0247 00242000
*     END;                          /* END PUT UPD/ERASE REQ.        */ 00243000
*                                                                  0249 00244000
*   /*****************************************************************/ 00245000
*   /*                                                               */ 00246000
*   /* PUT INSERT REQUEST ---                                        */ 00247000
*   /*                                                               */ 00248000
*   /*****************************************************************/ 00249000
*                                                                  0249 00250000
*   IF RPLBWD=ON THEN               /* BACKWARD REQUEST.             */ 00251000
@RF00167 TM    RPLBWD(RRPL),B'00010000'                            0249 00252000
         BNO   @RF00249                                            0249 00253000
*     DO;                           /* INVALID BACKWARD REQUEST.     */ 00254000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00255000
         MVI   RPLERREG(RRPL),X'08'                                0251 00256000
*       RPLERRCD=RPLPUTBK;          /* SET PUT INSERT BACKWARD ERROR.*/ 00257000
         MVI   RPLERRCD(RRPL),X'CC'                                0252 00258000
*       CALL EXIT;                  /* RETURN.                       */ 00259000
         BAL   @14,EXIT                                            0253 00260000
*     END;                          /* END INVALID BACKWARD ERROR.   */ 00261000
*   IF RPLRLEN^=PLHLRECL THEN       /* RECORD LENGTH NOT EQUAL TO  0255 00262000
*                                      DEFINE RECORDSIZE.            */ 00263000
@RF00249 CLC   RPLRLEN(4,RRPL),PLHLRECL(RPLH)                      0255 00264000
         BE    @RF00255                                            0255 00265000
*     DO;                           /* INCORRECT RECORD LEN. ERROR.  */ 00266000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00267000
         MVI   RPLERREG(RRPL),X'08'                                0257 00268000
*       RPLERRCD=RPLINLEN;          /* SET RECORD LENGTH ERROR.      */ 00269000
         MVI   RPLERRCD(RRPL),X'6C'                                0258 00270000
*       CALL EXIT;                  /* RETURN.                       */ 00271000
         BAL   @14,EXIT                                            0259 00272000
*     END;                          /* END RECORD LENGTH ERROR.      */ 00273000
*   IF RPLSEQ=OFF THEN              /* NON-SEQUENTIAL REQUEST.       */ 00274000
*                                                                  0261 00275000
@RF00255 TM    RPLSEQ(RRPL),B'00100000'                            0261 00276000
         BNZ   @RF00261                                            0261 00277000
*     /***************************************************************/ 00278000
*     /*                                                             */ 00279000
*     /* PROCESS SKP/DIR REQUEST.                                    */ 00280000
*     /*                                                             */ 00281000
*     /***************************************************************/ 00282000
*                                                                  0262 00283000
*     CALL PUTNONSQ;                /* PROCESS SKP/DIR REQUEST.      */ 00284000
         BAL   @14,PUTNONSQ                                        0262 00285000
*   ELSE                            /* SEQUENTIAL REQUEST.           */ 00286000
*     IF PLH1ST=ON THEN             /* PROCESS 1ST PUT INSERT REQ.   */ 00287000
         B     @RC00261                                            0263 00288000
@RF00261 TM    PLH1ST(RPLH),B'01000000'                            0263 00289000
         BNO   @RF00263                                            0263 00290000
*       CALL PUTSQ1ST;              /* CALL PUT SEQ 1ST.             */ 00291000
         BAL   @14,PUTSQ1ST                                        0264 00292000
*     ELSE                          /* NOT 1ST SEQ REQUEST.          */ 00293000
*       IF AMBCREAT=ON THEN         /* CREATE MODE.                  */ 00294000
         B     @RC00263                                            0265 00295000
@RF00263 TM    AMBCREAT(RAMB),B'10000000'                          0265 00296000
         BNO   @RF00265                                            0265 00297000
*         CALL PUTSQCRE;            /* CALL PUT SEQ CREATE.          */ 00298000
         BAL   @14,PUTSQCRE                                        0266 00299000
*       ELSE                        /* NOT CREATE MODE.              */ 00300000
*                                                                  0267 00301000
*         /***********************************************************/ 00302000
*         /*                                                         */ 00303000
*         /* PROCESS NON-CREATE SEQ. REQ.                            */ 00304000
*         /*                                                         */ 00305000
*         /***********************************************************/ 00306000
*                                                                  0267 00307000
*         CALL PUTSQNCR;            /* PROCESS NON-CREATE SEQ REQ.   */ 00308000
         B     @RC00265                                            0267 00309000
@RF00265 BAL   @14,PUTSQNCR                                        0267 00310000
*   IF RPLERREG^='00'X THEN         /* ERROR OCCURRED.               */ 00311000
@RC00265 DS    0H                                                  0268 00312000
@RC00263 DS    0H                                                  0268 00313000
@RC00261 CLI   RPLERREG(RRPL),0                                    0268 00314000
         BE    @RF00268                                            0268 00315000
*     CALL EXIT;                    /* RETURN.                       */ 00316000
         BAL   @14,EXIT                                            0269 00317000
*   IF RDFEMPTY=OFF THEN            /* RECORD IS NOT EMPTY.          */ 00318000
@RF00268 L     @10,PLHRDFP(,RPLH)                                  0270 00319000
         TM    RDFEMPTY(@10),B'00000100'                           0270 00320000
         BNZ   @RF00270                                            0270 00321000
*     DO;                           /* DUPLICATE RECORD ERROR.       */ 00322000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00323000
         MVI   RPLERREG(RRPL),X'08'                                0272 00324000
*       RPLERRCD=RPLDUP;            /* SET DUPLICATE RECORD ERROR.   */ 00325000
         MVI   RPLERRCD(RRPL),X'08'                                0273 00326000
*       CALL EXIT;                  /* RETURN.                       */ 00327000
         BAL   @14,EXIT                                            0274 00328000
*     END;                          /* END DUPLICATE RECORD ERROR.   */ 00329000
*   PLHNOADV=OFF;                   /* RESET NO ADVANCE FLAG.        */ 00330000
@RF00270 NI    PLHNOADV(RPLH),B'11110111'                          0276 00331000
*   AMDIREC=AMDIREC+ONE;            /* INCREMENT STATISTICS NO. OF 0277 00332000
*                                      INSERTED RECORDS.             */ 00333000
         L     @10,AMBDSB(,RAMB)                                   0277 00334000
         LA    @05,1                                               0277 00335000
         AL    @05,AMDIREC(,@10)                                   0277 00336000
         ST    @05,AMDIREC(,@10)                                   0277 00337000
*   RFY                                                            0278 00338000
*    (RWORK2,                                                      0278 00339000
*     RWORK3,                                                      0278 00340000
*     RWORK4,                                                      0278 00341000
*     RWORK5) RSTD;                 /* RESTRICT REGS.                */ 00342000
*   RWORK2=PLHRECP;                 /* TO ADDRESS.                   */ 00343000
         L     RWORK2,PLHRECP(,RPLH)                               0279 00344000
*   RWORK4=RPLAREA;                 /* FROM ADDRESS.                 */ 00345000
         L     RWORK4,RPLAREA(,RRPL)                               0280 00346000
*   RWORK3=PLHLRECL;                /* TO LENGTH.                    */ 00347000
         L     RWORK3,PLHLRECL(,RPLH)                              0281 00348000
*   RWORK5=RWORK3;                  /* FROM LENGTH.                  */ 00349000
         LR    RWORK5,RWORK3                                       0282 00350000
*   GEN(MVCL RWORK2,RWORK4);        /* MOVE USER RECORD TO BUFFER.   */ 00351000
         MVCL RWORK2,RWORK4                                             00352000
*   RFY                                                            0284 00353000
*    (RWORK2,                                                      0284 00354000
*     RWORK3,                                                      0284 00355000
*     RWORK4,                                                      0284 00356000
*     RWORK5) UNRSTD;               /* DROP REGS.                    */ 00357000
*   RDFEMPTY=OFF;                   /* SET RDF NOT EMPTY.            */ 00358000
         L     @10,PLHRDFP(,RPLH)                                  0285 00359000
         NI    RDFEMPTY(@10),B'11111011'                           0285 00360000
*   BUFCMW=ON;                      /* SET BUFC MUST WRITE.          */ 00361000
         L     @10,PLHDBUFC(,RPLH)                                 0286 00362000
         OI    BUFCMW(@10),B'10000000'                             0286 00363000
*   IF AMBSPEED=ON&BUFCORBA<PLHHIREC THEN/* SPEED & BFR RBA IS LT  0287 00364000
*                                      HI-RECORD RBA.                */ 00365000
         TM    AMBSPEED(RAMB),B'00001000'                          0287 00366000
         BNO   @RF00287                                            0287 00367000
         CLC   BUFCORBA(4,@10),PLHHIREC(RPLH)                      0287 00368000
         BNL   @RF00287                                            0287 00369000
*     DO;                                                          0288 00370000
*       IF RPLDIR=ON&RPLNSP=OFF THEN/* REQ IS DIR & NOT NSP.         */ 00371000
         TM    RPLDIR(RRPL),B'01000000'                            0289 00372000
         BNO   @RF00289                                            0289 00373000
         TM    RPLNSP(RRPL),B'00000001'                            0289 00374000
         BNZ   @RF00289                                            0289 00375000
*         DO;                                                      0290 00376000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC.           */ 00377000
         LR    RBUFC,@10                                           0291 00378000
*I05:                                                              0292 00379000
*           DO;                     /* IDACALL(IDASBF)               */ 00380000
I05      DS    0H                                                  0293 00381000
*             CALL IDASBF;          /* EXIT TO IDASBF                */ 00382000
         L     @15,@CV00953                                        0293 00383000
         BALR  @14,@15                                             0293 00384000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00385000
         BALR @11,0                                                     00386000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00387000
         USING *,@11                                                    00388000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00389000
         L     @11,=A(@PSTART)                                          00390000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00391000
         USING @PSTART,@11                                              00392000
*           END I05;                /* SUBTRACT DATA BUFC.           */ 00393000
*           PLHINVAL=ON;            /* SET PLH INVALID.              */ 00394000
         OI    PLHINVAL(RPLH),B'00000010'                          0299 00395000
*         END;                                                     0300 00396000
*     END;                                                         0301 00397000
*   ELSE                            /* NOT SPEED OR BFR RBA GTE    0302 00398000
*                                      HI-RECORD RBA.                */ 00399000
*     DO;                                                          0302 00400000
         B     @RC00287                                            0302 00401000
@RF00287 DS    0H                                                  0303 00402000
*       IF AMBCREAT=ON&BUFCORBA=>PLHHIREC THEN/* CREATE & CURRENT BFR   00403000
*                                      RBA GTE HI-RECORD RBA.        */ 00404000
         TM    AMBCREAT(RAMB),B'10000000'                          0303 00405000
         BNO   @RF00303                                            0303 00406000
         L     @10,PLHDBUFC(,RPLH)                                 0303 00407000
         L     @10,BUFCORBA(,@10)                                  0303 00408000
         CL    @10,PLHHIREC(,RPLH)                                 0303 00409000
         BL    @RF00303                                            0303 00410000
*         PLHHIREC=BUFCORBA+AMDCINV;/* SET HI-RECORD RBA TO NEXT CI     00411000
*                                      PAST CURRENT.                 */ 00412000
         L     @05,AMBDSB(,RAMB)                                   0304 00413000
         AL    @10,AMDCINV(,@05)                                   0304 00414000
         ST    @10,PLHHIREC(,RPLH)                                 0304 00415000
*       IF RPLDIR=ON&RPLNSP=OFF THEN/* REQUEST IS DIR & NOT NSP.     */ 00416000
@RF00303 TM    RPLDIR(RRPL),B'01000000'                            0305 00417000
         BNO   @RF00305                                            0305 00418000
         TM    RPLNSP(RRPL),B'00000001'                            0305 00419000
         BNZ   @RF00305                                            0305 00420000
*         DO;                       /* RELEASE PLH STRING POSITION.  */ 00421000
*           IF AMBDFR=OFF THEN      /* NOT DEFER WRITE.              */ 00422000
         TM    AMBDFR(RAMB),B'00001000'                            0307 00423000
         BNZ   @RF00307                                            0307 00424000
*             DO;                                                  0308 00425000
*               RBUFC=PLHDBUFC;     /* POINT TO DATA BUFC.           */ 00426000
         L     RBUFC,PLHDBUFC(,RPLH)                               0309 00427000
*I06:                                                              0310 00428000
*               DO;                 /* IDACALL(IDAWRBFR)             */ 00429000
I06      DS    0H                                                  0311 00430000
*                 CALL IDAWRBFR;    /* EXIT TO IDAWRBFR              */ 00431000
         L     @15,@CV00946                                        0311 00432000
         BALR  @14,@15                                             0311 00433000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00434000
         BALR @11,0                                                     00435000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00436000
         USING *,@11                                                    00437000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00438000
         L     @11,=A(@PSTART)                                          00439000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00440000
         USING @PSTART,@11                                              00441000
*               END I06;            /* WRITE THE BUFFER.             */ 00442000
*             END;                                                 0317 00443000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC.           */ 00444000
@RF00307 L     RBUFC,PLHDBUFC(,RPLH)                               0318 00445000
*I07:                                                              0319 00446000
*           DO;                     /* IDACALL(IDAFREEB)             */ 00447000
I07      DS    0H                                                  0320 00448000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 00449000
         L     @15,@CV00947                                        0320 00450000
         BALR  @14,@15                                             0320 00451000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00452000
         BALR @11,0                                                     00453000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00454000
         USING *,@11                                                    00455000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00456000
         L     @11,=A(@PSTART)                                          00457000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00458000
         USING @PSTART,@11                                              00459000
*           END I07;                /* FREE THE BUFFER.              */ 00460000
*           PLHINVAL=ON;            /* SET PLH INVALID.              */ 00461000
         OI    PLHINVAL(RPLH),B'00000010'                          0326 00462000
*         END;                      /* END RELEASE PLH STRING POS.   */ 00463000
*     END;                                                         0328 00464000
@RF00305 DS    0H                                                  0329 00465000
*   IF RPLSEQ=ON THEN               /* SEQUENTIAL REQUEST.           */ 00466000
@RC00287 TM    RPLSEQ(RRPL),B'00100000'                            0329 00467000
         BNO   @RF00329                                            0329 00468000
*     DO;                                                          0330 00469000
*       PLHRRN=((PLHSAV1X/AMDCINV)*AMDNSLOT)+((PLHSAV1X//AMDCINV)/ 0331 00470000
*           PLHLRECL)+ONE;          /* CONVERT REC RBA TO REL REC NO.   00471000
*                                      & SAVE                @ZA10887*/ 00472000
         L     @10,PLHKEYPT(,RPLH)                                 0331 00473000
         L     @05,PLHSAV1X(,RPLH)                                 0331 00474000
         L     @15,AMBDSB(,RAMB)                                   0331 00475000
         L     @14,AMDCINV(,@15)                                   0331 00476000
         LR    @07,@05                                             0331 00477000
         SLR   @06,@06                                             0331 00478000
         DR    @06,@14                                             0331 00479000
         M     @06,AMDNSLOT(,@15)                                  0331 00480000
         LR    @09,@05                                             0331 00481000
         SLR   @08,@08                                             0331 00482000
         DR    @08,@14                                             0331 00483000
         LR    @15,@08                                             0331 00484000
         SLR   @14,@14                                             0331 00485000
         D     @14,PLHLRECL(,RPLH)                                 0331 00486000
         ALR   @07,@15                                             0331 00487000
         AL    @07,@CF00053                                        0331 00488000
         ST    @07,PLHRRN(,@10)                                    0331 00489000
*       ARGFIELD=PLHRRN;            /* SET RRN IN RPL ARG.           */ 00490000
         L     @10,RPLARG(,RRPL)                                   0332 00491000
         ST    @07,ARGFIELD(,@10)                                  0332 00492000
*     END;                                                         0333 00493000
*   ELSE                            /* NOT SEQ REQUEST.              */ 00494000
*     PLHRRN=ARGFIELD;              /* SAVE ARG RRN IN PLH.          */ 00495000
         B     @RC00329                                            0334 00496000
@RF00329 L     @10,PLHKEYPT(,RPLH)                                 0334 00497000
         L     @05,RPLARG(,RRPL)                                   0334 00498000
         L     @05,ARGFIELD(,@05)                                  0334 00499000
         ST    @05,PLHRRN(,@10)                                    0334 00500000
*   PLHBWD=OFF;                     /* RESET BWD FLAG IN PLH.        */ 00501000
@RC00329 NI    PLHBWD(RPLH),B'11101111'                            0335 00502000
*   PLHUPD=OFF;                     /* RESET GET UPDATE FLAG.        */ 00503000
         NI    PLHUPD(RPLH),B'01111111'                            0336 00504000
*   RPLDDDD=PLHSAVE1;               /* SET RECORD RBA IN RPL.        */ 00505000
         L     @10,PLHSAVE1(,RPLH)                                 0337 00506000
         ST    @10,RPLDDDD(,RRPL)                                  0337 00507000
*   PLHRCODE=RPLREQ;                /* SAVE REQUEST CODE.            */ 00508000
         IC    @10,RPLREQ(,RRPL)                                   0338 00509000
         STC   @10,PLHRCODE(,RPLH)                                 0338 00510000
*   IF AMBJRN=ON THEN               /* JOURNAL EXIT SPECIFIED.       */ 00511000
         TM    AMBJRN(RAMB),B'00000010'                            0339 00512000
         BNO   @RF00339                                            0339 00513000
*     DO;                           /* SETUP JOURNAL EXIT.           */ 00514000
*       PLHJCODE=PLHJPUT;           /* SET JOURNAL CODE = PUT.       */ 00515000
         MVI   PLHJCODE(RPLH),B'00000100'                          0341 00516000
*I08:                                                              0342 00517000
*       DO;                         /* IDACALL(IDATJXIT)             */ 00518000
I08      DS    0H                                                  0343 00519000
*         CALL IDATJXIT;            /* EXIT TO IDATJXIT              */ 00520000
         L     @15,@CV00949                                        0343 00521000
         BALR  @14,@15                                             0343 00522000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00523000
         BALR @11,0                                                     00524000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00525000
         USING *,@11                                                    00526000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00527000
         L     @11,=A(@PSTART)                                          00528000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00529000
         USING @PSTART,@11                                              00530000
*       END I08;                    /* CALL JOURNAL EXIT ROUTINE.    */ 00531000
*     END;                          /* END JOURNAL EXIT.             */ 00532000
*   CALL EXIT;                      /* RETURN.                       */ 00533000
@RF00339 BAL   @14,EXIT                                            0350 00534000
*PUTSQ1ST:                                                         0351 00535000
*                                                                  0351 00536000
*   /*****************************************************************/ 00537000
*   /*                                                               */ 00538000
*   /* PUT SEQUENTIAL 1ST ROUTINE ---                                */ 00539000
*   /*                                                               */ 00540000
*   /*****************************************************************/ 00541000
*                                                                  0351 00542000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0351 00543000
         B     @PB00002                                            0351 00544000
PUTSQ1ST DS    0H                                                  0352 00545000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 00546000
         IDASVR14                                                       00547000
*   PLHASKBF=ON;                    /* SET ASK BUFFER.               */ 00548000
         OI    PLHASKBF(RPLH),B'00100000'                          0353 00549000
*   RPARM1=ZERO;                    /* ADD MAX. NO. OF BUFFERS.      */ 00550000
         SLR   RPARM1,RPARM1                                       0354 00551000
*I09:                                                              0355 00552000
*   DO;                             /* IDACALL(IDAABF)               */ 00553000
I09      DS    0H                                                  0356 00554000
*     CALL IDAABF;                  /* EXIT TO IDAABF                */ 00555000
         L     @15,@CV00943                                        0356 00556000
         BALR  @14,@15                                             0356 00557000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00558000
         BALR @11,0                                                     00559000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00560000
         USING *,@11                                                    00561000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00562000
         L     @11,=A(@PSTART)                                          00563000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00564000
         USING @PSTART,@11                                              00565000
*   END I09;                        /* CALL ADD BUFFER.              */ 00566000
*   PLHSAVE1=ZERO;                  /* CURRENT RBA=1ST REC. OF DS.   */ 00567000
         SLR   @10,@10                                             0362 00568000
         ST    @10,PLHSAVE1(,RPLH)                                 0362 00569000
*   IF AMBCREAT=OFF THEN            /* NOT CREATE MODE.              */ 00570000
         TM    AMBCREAT(RAMB),B'10000000'                          0363 00571000
         BNZ   @RF00363                                            0363 00572000
*     DO;                                                          0364 00573000
*       RPARM1=PLHSAVE1;            /* RBA OF 1ST REQUEST.           */ 00574000
         LR    RPARM1,@10                                          0365 00575000
*       ARGFIELD=ONE;               /* SET RPL ARG = RRN 1 FOR DRL.  */ 00576000
         L     @10,RPLARG(,RRPL)                                   0366 00577000
         MVC   ARGFIELD(4,@10),@CF00053                            0366 00578000
*I10:                                                              0367 00579000
*       DO;                         /* IDACALL(IDARRDRL)             */ 00580000
I10      DS    0H                                                  0368 00581000
*         CALL IDARRDRL;            /* EXIT TO IDARRDRL              */ 00582000
         L     @15,@CV00956                                        0368 00583000
         BALR  @14,@15                                             0368 00584000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00585000
         BALR @11,0                                                     00586000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00587000
         USING *,@11                                                    00588000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00589000
         L     @11,=A(@PSTART)                                          00590000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00591000
         USING @PSTART,@11                                              00592000
*       END I10;                    /* CALL DIRECT RECORD LOCATE.    */ 00593000
*       IF RPLERREG^='00'X THEN     /* ERROR.                        */ 00594000
         CLI   RPLERREG(RRPL),0                                    0374 00595000
         BE    @RF00374                                            0374 00596000
*         CALL EXIT;                /* RETURN.                       */ 00597000
         BAL   @14,EXIT                                            0375 00598000
*       BUFCORBA=PLHSAVE1;          /* SET BUFC OUTPUT RBA.          */ 00599000
@RF00374 L     @10,PLHDBUFC(,RPLH)                                 0376 00600000
         L     @05,PLHSAVE1(,RPLH)                                 0376 00601000
         ST    @05,BUFCORBA(,@10)                                  0376 00602000
*     END;                                                         0377 00603000
*   ELSE                            /* CREATE MODE.                  */ 00604000
*     DO;                           /* GET EMPTY BUFFER.             */ 00605000
         B     @RC00363                                            0378 00606000
@RF00363 DS    0H                                                  0379 00607000
*       IF AMBSPEED=ON THEN         /* CREATE SPEED MODE.            */ 00608000
         TM    AMBSPEED(RAMB),B'00001000'                          0379 00609000
         BNO   @RF00379                                            0379 00610000
*         DO;                                                      0380 00611000
*           ARDHRBA=AMDCINV;        /* SET HI-USED RBA TO NEXT CI.   */ 00612000
         L     @10,AMBDSB(,RAMB)                                   0381 00613000
         L     @05,AMDPARDB(,@10)                                  0381 00614000
         L     @00,AMDCINV(,@10)                                   0381 00615000
         ST    @00,ARDHRBA(,@05)                                   0381 00616000
*           AMDNLR=AMDNSLOT;        /* SET TOTAL NO. RECS = 1ST CI.  */ 00617000
         L     @05,AMDNSLOT(,@10)                                  0382 00618000
         ST    @05,AMDNLR(,@10)                                    0382 00619000
*         END;                                                     0383 00620000
*       ELSE                        /* NOT CREATE SPEED MODE.        */ 00621000
*         DO;                                                      0384 00622000
         B     @RC00379                                            0384 00623000
@RF00379 DS    0H                                                  0385 00624000
*           ARDHRBA=AMDCIPCA*AMDCINV;/* SET HI-USED RBA TO NEXT CA.  */ 00625000
         L     @10,AMBDSB(,RAMB)                                   0385 00626000
         L     @05,AMDPARDB(,@10)                                  0385 00627000
         LH    @15,AMDCIPCA(,@10)                                  0385 00628000
         LR    @07,@15                                             0385 00629000
         M     @06,AMDCINV(,@10)                                   0385 00630000
         ST    @07,ARDHRBA(,@05)                                   0385 00631000
*           AMDNLR=AMDNSLOT*AMDCIPCA;/* SET TOTAL NO. RECS. = 1ST CA.*/ 00632000
         M     @14,AMDNSLOT(,@10)                                  0386 00633000
         ST    @15,AMDNLR(,@10)                                    0386 00634000
*         END;                                                     0387 00635000
*       AMDASPA=ARDERBA-ARDHRBA;    /* SET NO. BYTES FREE SPACE.     */ 00636000
@RC00379 L     @10,AMBDSB(,RAMB)                                   0388 00637000
         L     @05,AMDPARDB(,@10)                                  0388 00638000
         L     @00,ARDERBA(,@05)                                   0388 00639000
         SL    @00,ARDHRBA(,@05)                                   0388 00640000
         ST    @00,AMDASPA(,@10)                                   0388 00641000
*I11:                                                              0389 00642000
*       DO;                         /* IDACALL(IDAGNNFL)             */ 00643000
I11      DS    0H                                                  0390 00644000
*         CALL IDAGNNFL;            /* EXIT TO IDAGNNFL              */ 00645000
         L     @15,@CV00945                                        0390 00646000
         BALR  @14,@15                                             0390 00647000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00648000
         BALR @11,0                                                     00649000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00650000
         USING *,@11                                                    00651000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00652000
         L     @11,=A(@PSTART)                                          00653000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00654000
         USING @PSTART,@11                                              00655000
*       END I11;                    /* CALL GET NEXT NO FILL.        */ 00656000
*       IF RPLERREG^='00'X THEN     /* BUFFER ERROR.                 */ 00657000
         CLI   RPLERREG(RRPL),0                                    0396 00658000
         BE    @RF00396                                            0396 00659000
*         CALL EXIT;                /* RETURN.                       */ 00660000
         BAL   @14,EXIT                                            0397 00661000
*       RFY                                                        0398 00662000
*         IDABUFC BASED(RBUFC);     /* BASE BUFC ON REG.             */ 00663000
@RF00396 DS    0H                                                  0399 00664000
*       BUFCORBA=PLHSAVE1;          /* SET BUFC OUTPUT RBA.          */ 00665000
         L     @10,PLHSAVE1(,RPLH)                                 0399 00666000
         ST    @10,BUFCORBA(,RBUFC)                                0399 00667000
*       BUFCDDDD=BUFCORBA;          /* SET BUFC INPUT RBA.           */ 00668000
         ST    @10,BUFCDDDD(,RBUFC)                                0400 00669000
*       BUFXIRBA=BUFCORBA;          /* SET BUFC EXCL RBA.            */ 00670000
         ST    @10,BUFXIRBA(,RBUFC)                                0401 00671000
*       BUFCVAL=ON;                 /* SET BUFFER VALID.             */ 00672000
*       BUFCEXC=ON;                 /* SET BUFC EXCL.                */ 00673000
         OI    BUFCVAL(RBUFC),B'00000110'                          0403 00674000
*       CALL BFRFMT;                /* FORMAT BFR WITH EMPTY REC'S.  */ 00675000
         BAL   @14,BFRFMT                                          0404 00676000
*       PLHRECP=BUFCBAD;            /* SET PLH RECORD PTR.           */ 00677000
         L     @10,BUFCBAD(,RBUFC)                                 0405 00678000
         ST    @10,PLHRECP(,RPLH)                                  0405 00679000
*       PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/* SET   00680000
*                                      PLH RDF PTR.                  */ 00681000
         L     @05,AMBDSB(,RAMB)                                   0406 00682000
         LR    @00,@10                                             0406 00683000
         AL    @00,AMDCINV(,@05)                                   0406 00684000
         SL    @00,@CF00288                                        0406 00685000
         ST    @00,PLHRDFP(,RPLH)                                  0406 00686000
*       PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FREE SPACE PTR.*/ 00687000
         L     @07,AMDNSLOT(,@05)                                  0407 00688000
         M     @06,PLHLRECL(,RPLH)                                 0407 00689000
         ALR   @10,@07                                             0407 00690000
         ST    @10,PLHFSP(,RPLH)                                   0407 00691000
*       PLHHIREC=ZERO;              /* INIT. HI-RECORD RBA.          */ 00692000
         SLR   @10,@10                                             0408 00693000
         ST    @10,PLHHIREC(,RPLH)                                 0408 00694000
*       RFY                                                        0409 00695000
*         IDABUFC BASED(PLHDBUFC);  /* REBASE BUFC.                  */ 00696000
*     END;                          /* END GET EMPTY BUFFER.         */ 00697000
*   PLH1ST=OFF;                     /* TURN OFF PLH 1ST TIME.        */ 00698000
@RC00363 NI    PLH1ST(RPLH),B'10111111'                            0411 00699000
*   CALL EXIT;                      /* RETURN.                       */ 00700000
         BAL   @14,EXIT                                            0412 00701000
*   END PUTSQ1ST;                   /* END PROC. PUTSQ1ST.           */ 00702000
@EL00002 DS    0H                                                  0413 00703000
@EF00002 DS    0H                                                  0413 00704000
@ER00002 BR    @14                                                 0413 00705000
*PUTSQCRE:                                                         0414 00706000
*                                                                  0414 00707000
*   /*****************************************************************/ 00708000
*   /*                                                               */ 00709000
*   /* PUT SEQUENTIAL CREATE ROUTINE ---                             */ 00710000
*   /*                                                               */ 00711000
*   /*****************************************************************/ 00712000
*                                                                  0414 00713000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0414 00714000
PUTSQCRE DS    0H                                                  0415 00715000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 00716000
         IDASVR14                                                       00717000
*   IF PLHEFLGS^=PLHVALID THEN      /* PLH POSITION NOT VALID.       */ 00718000
         CLC   PLHEFLGS(2,RPLH),@CB00797                           0416 00719000
         BE    @RF00416                                            0416 00720000
*     DO;                           /* POSITIONING ERROR.            */ 00721000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00722000
         MVI   RPLERREG(RRPL),X'08'                                0418 00723000
*       RPLERRCD=RPLNOPTR;          /* SET NO POSITION FOR PUT SEQ 0419 00724000
*                                      INSERT.                       */ 00725000
         MVI   RPLERRCD(RRPL),X'58'                                0419 00726000
*       CALL EXIT;                  /* RETURN.                       */ 00727000
         BAL   @14,EXIT                                            0420 00728000
*     END;                          /* END POSITIONING ERROR.        */ 00729000
*   PLHRECP=PLHRECP+PLHLRECL;       /* ADVANCE RECORD POSITION.      */ 00730000
@RF00416 L     @10,PLHLRECL(,RPLH)                                 0422 00731000
         L     @05,PLHRECP(,RPLH)                                  0422 00732000
         ALR   @05,@10                                             0422 00733000
         ST    @05,PLHRECP(,RPLH)                                  0422 00734000
*   IF PLHRECP<PLHFSP THEN          /* NOT END OF CI.                */ 00735000
         C     @05,PLHFSP(,RPLH)                                   0423 00736000
         BNL   @RF00423                                            0423 00737000
*     DO;                                                          0424 00738000
*       PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.         */ 00739000
         L     @05,PLHRDFP(,RPLH)                                  0425 00740000
         SL    @05,@CF00157                                        0425 00741000
         ST    @05,PLHRDFP(,RPLH)                                  0425 00742000
*       PLHSAVE1=PLHSAVE1+PLHLRECL; /* ADVANCE RECORD RBA.           */ 00743000
         AL    @10,PLHSAVE1(,RPLH)                                 0426 00744000
         ST    @10,PLHSAVE1(,RPLH)                                 0426 00745000
*       CALL EXIT;                  /* RETURN.                       */ 00746000
         BAL   @14,EXIT                                            0427 00747000
*     END;                                                         0428 00748000
*   ELSE                            /* END OF CI.                    */ 00749000
*     DO;                           /* ADVANCE TO NEXT CI.           */ 00750000
         B     @RC00423                                            0429 00751000
@RF00423 DS    0H                                                  0430 00752000
*       PLHSAVE1=BUFCORBA+AMDCINV;  /* ADVANCE RECORD RBA TO NEXT CI.*/ 00753000
         L     @10,PLHDBUFC(,RPLH)                                 0430 00754000
         L     @05,AMBDSB(,RAMB)                                   0430 00755000
         L     @10,BUFCORBA(,@10)                                  0430 00756000
         AL    @10,AMDCINV(,@05)                                   0430 00757000
         ST    @10,PLHSAVE1(,RPLH)                                 0430 00758000
*       IF AMBSPEED=OFF THEN        /* NOT CREATE SPEED.             */ 00759000
         TM    AMBSPEED(RAMB),B'00001000'                          0431 00760000
         BNZ   @RF00431                                            0431 00761000
*         DO;                       /* CHECK HI-USED RBA.            */ 00762000
*           IF PLHSAVE1=>ARDHRBA THEN/* CURRENT RBA IS IN NEXT CA.   */ 00763000
         L     @05,AMDPARDB(,@05)                                  0433 00764000
         CL    @10,ARDHRBA(,@05)                                   0433 00765000
         BL    @RF00433                                            0433 00766000
*             DO;                   /* GO TO NEXT CA.                */ 00767000
*               CALL GETSPACE;      /* PREFORMAT AND/OR ALLOC. SPACE.*/ 00768000
         BAL   @14,GETSPACE                                        0435 00769000
*               IF RPLERREG^='00'X THEN/* ERROR.                     */ 00770000
         CLI   RPLERREG(RRPL),0                                    0436 00771000
         BE    @RF00436                                            0436 00772000
*                 CALL EXIT;        /* RETURN.                       */ 00773000
         BAL   @14,EXIT                                            0437 00774000
*             END;                  /* END GO TO NEXT CA.            */ 00775000
*         END;                      /* END CHECK HI-USED RBA.        */ 00776000
*       ELSE                        /* CREATE SPEED.                 */ 00777000
*         IF PLHSAVE1^<ARDHRBA THEN /* RBA IS NOT LT HI-USED RBA.    */ 00778000
         B     @RC00431                                            0440 00779000
@RF00431 L     @10,PLHSAVE1(,RPLH)                                 0440 00780000
         L     @05,AMBDSB(,RAMB)                                   0440 00781000
         L     @05,AMDPARDB(,@05)                                  0440 00782000
         CL    @10,ARDHRBA(,@05)                                   0440 00783000
         BL    @RF00440                                            0440 00784000
*           DO;                     /* ADVANCE HI-USED RBA.          */ 00785000
*             IF PLHSAVE1=>ARDERBA THEN/* OUT OF SPACE.              */ 00786000
         CL    @10,ARDERBA(,@05)                                   0442 00787000
         BL    @RF00442                                            0442 00788000
*               DO;                 /* GET MORE SPACE.               */ 00789000
*                 CALL GETSPACE;    /* ALLOCATE SPACE.               */ 00790000
         BAL   @14,GETSPACE                                        0444 00791000
*                 IF RPLERREG^='00'X THEN/* ERROR.                   */ 00792000
         CLI   RPLERREG(RRPL),0                                    0445 00793000
         BE    @RF00445                                            0445 00794000
*                   CALL EXIT;      /* RETURN.                       */ 00795000
         BAL   @14,EXIT                                            0446 00796000
*               END;                /* END GET MORE SPACE.           */ 00797000
*             ELSE                  /* NOT OUT OF SPACE.             */ 00798000
*               DO;                                                0448 00799000
         B     @RC00442                                            0448 00800000
@RF00442 DS    0H                                                  0449 00801000
*                 ARDHRBA=ARDHRBA+AMDCINV;/* BUMP HI-USED RBA TO NEXT   00802000
*                                      CI.                           */ 00803000
         L     @10,AMBDSB(,RAMB)                                   0449 00804000
         L     @05,AMDPARDB(,@10)                                  0449 00805000
         L     @00,ARDHRBA(,@05)                                   0449 00806000
         AL    @00,AMDCINV(,@10)                                   0449 00807000
         ST    @00,ARDHRBA(,@05)                                   0449 00808000
*                 AMDNLR=AMDNLR+AMDNSLOT;/* INCR TOTAL NO. OF      0450 00809000
*                                      RECORDS.                      */ 00810000
         L     @15,AMDNLR(,@10)                                    0450 00811000
         AL    @15,AMDNSLOT(,@10)                                  0450 00812000
         ST    @15,AMDNLR(,@10)                                    0450 00813000
*                 AMDASPA=ARDERBA-ARDHRBA;/* SET NO. BYTES FREE    0451 00814000
*                                      SPACE.                        */ 00815000
         LCR   @00,@00                                             0451 00816000
         AL    @00,ARDERBA(,@05)                                   0451 00817000
         ST    @00,AMDASPA(,@10)                                   0451 00818000
*               END;                                               0452 00819000
*           END;                    /* END ADVANCE HI-USED RBA.      */ 00820000
@RC00442 DS    0H                                                  0454 00821000
*       IF PLHSAVE1=>PLHHIREC THEN  /* CURRENT RECORD RBA IS GTE   0454 00822000
*                                      HI-RECORD RBA.                */ 00823000
@RF00440 DS    0H                                                  0454 00824000
@RC00431 CLC   PLHSAVE1(4,RPLH),PLHHIREC(RPLH)                     0454 00825000
         BL    @RF00454                                            0454 00826000
*         DO;                       /* GET EMPTY BUFFER.             */ 00827000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC.           */ 00828000
         L     @10,PLHDBUFC(,RPLH)                                 0456 00829000
         LR    RBUFC,@10                                           0456 00830000
*           IF BUFCINS=ON THEN      /* CUR BUFC IS INSERT BUFC.      */ 00831000
         TM    BUFCINS(@10),B'00100000'                            0457 00832000
         BNO   @RF00457                                            0457 00833000
*             DO;                                                  0458 00834000
*               PLHSAVE2=ZERO;      /* ZERO HI-PREFORMAT RBA @ZA15685*/ 00835000
         SLR   @10,@10                                             0459 00836000
         ST    @10,PLHSAVE2(,RPLH)                                 0459 00837000
*I12:                                                              0460 00838000
*               DO;                 /* IDACALL(IDASBF)               */ 00839000
I12      DS    0H                                                  0461 00840000
*                 CALL IDASBF;      /* EXIT TO IDASBF                */ 00841000
         L     @15,@CV00953                                        0461 00842000
         BALR  @14,@15                                             0461 00843000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00844000
         BALR @11,0                                                     00845000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00846000
         USING *,@11                                                    00847000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00848000
         L     @11,=A(@PSTART)                                          00849000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00850000
         USING @PSTART,@11                                              00851000
*               END I12;            /* SUBTRACT DATA BUFC.           */ 00852000
*               IF RPLERREG^='00'X THEN/* ERROR.                     */ 00853000
         CLI   RPLERREG(RRPL),0                                    0467 00854000
         BE    @RF00467                                            0467 00855000
*                 CALL EXIT;        /* RETURN.                       */ 00856000
         BAL   @14,EXIT                                            0468 00857000
*             END;                                                 0469 00858000
*           ELSE                    /* CUR BUFC NOT INSERT BUFC.     */ 00859000
*I13:                                                              0470 00860000
*             DO;                   /* IDACALL(IDAFREEB)             */ 00861000
         B     @RC00457                                            0470 00862000
@RF00457 DS    0H                                                  0470 00863000
I13      DS    0H                                                  0471 00864000
*               CALL IDAFREEB;      /* EXIT TO IDAFREEB              */ 00865000
         L     @15,@CV00947                                        0471 00866000
         BALR  @14,@15                                             0471 00867000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00868000
         BALR @11,0                                                     00869000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00870000
         USING *,@11                                                    00871000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00872000
         L     @11,=A(@PSTART)                                          00873000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00874000
         USING @PSTART,@11                                              00875000
*             END I13;              /* FREE BUFFER.                  */ 00876000
*I14:                                                              0477 00877000
*           DO;                     /* IDACALL(IDAGNNFL)             */ 00878000
@RC00457 DS    0H                                                  0477 00879000
I14      DS    0H                                                  0478 00880000
*             CALL IDAGNNFL;        /* EXIT TO IDAGNNFL              */ 00881000
         L     @15,@CV00945                                        0478 00882000
         BALR  @14,@15                                             0478 00883000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00884000
         BALR @11,0                                                     00885000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00886000
         USING *,@11                                                    00887000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00888000
         L     @11,=A(@PSTART)                                          00889000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00890000
         USING @PSTART,@11                                              00891000
*           END I14;                /* GET NEXT CI NO FILL.          */ 00892000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 00893000
         CLI   RPLERREG(RRPL),0                                    0484 00894000
         BE    @RF00484                                            0484 00895000
*             CALL EXIT;            /* RETURN.                       */ 00896000
         BAL   @14,EXIT                                            0485 00897000
*           RFY                                                    0486 00898000
*             IDABUFC BASED(RBUFC); /* BASE BUFC ON REG.             */ 00899000
@RF00484 DS    0H                                                  0487 00900000
*           BUFCDDDD=PLHSAVE1;      /* SET BUFC INPUT RBA.           */ 00901000
         L     @10,PLHSAVE1(,RPLH)                                 0487 00902000
         ST    @10,BUFCDDDD(,RBUFC)                                0487 00903000
*           BUFXIRBA=PLHSAVE1;      /* SET BUFC EXCL INPUT RBA.      */ 00904000
         ST    @10,BUFXIRBA(,RBUFC)                                0488 00905000
*           BUFCVAL=ON;             /* SET BUFC VALID.               */ 00906000
*           BUFCEXC=ON;             /* SET BUFC EXCL.                */ 00907000
         OI    BUFCVAL(RBUFC),B'00000110'                          0490 00908000
*           RFY                                                    0491 00909000
*             IDABUFC BASED(PLHDBUFC);/* REBASE BUFC.                */ 00910000
*           CALL BFRFMT;            /* FORMAT BFR WITH EMPTY REC'S.  */ 00911000
         BAL   @14,BFRFMT                                          0492 00912000
*         END;                      /* END GET EMPTY BUFFER.         */ 00913000
*       ELSE                        /* CURRENT RECORD RBA IS LTE   0494 00914000
*                                      HI-RECORD RBA.                */ 00915000
*         DO;                       /* GET NEXT CI.                  */ 00916000
         B     @RC00454                                            0494 00917000
@RF00454 DS    0H                                                  0495 00918000
*           IF AMBSPEED=OFF THEN    /* NOT CREATE SPEED.             */ 00919000
         TM    AMBSPEED(RAMB),B'00001000'                          0495 00920000
         BNZ   @RF00495                                            0495 00921000
*             DO;                   /* GET NEXT CI FOR RECOVERY.     */ 00922000
*               IF PLHASKBF=ON THEN /* ASK BUFFER IS ON.             */ 00923000
         TM    PLHASKBF(RPLH),B'00100000'                          0497 00924000
         BNO   @RF00497                                            0497 00925000
*I15:                                                              0498 00926000
*                 DO;               /* IDACALL(IDAABF)               */ 00927000
I15      DS    0H                                                  0499 00928000
*                   CALL IDAABF;    /* EXIT TO IDAABF                */ 00929000
         L     @15,@CV00943                                        0499 00930000
         BALR  @14,@15                                             0499 00931000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 00932000
         BALR @11,0                                                     00933000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 00934000
         USING *,@11                                                    00935000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 00936000
         L     @11,=A(@PSTART)                                          00937000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 00938000
         USING @PSTART,@11                                              00939000
*                 END I15;          /* ADD BUFFERS.                  */ 00940000
*               PLHRAHD=ON;         /* ALLOW READ AHEAD.             */ 00941000
@RF00497 OI    PLHRAHD(RPLH),B'01000000'                           0505 00942000
*               PLHRDEXC=ON;        /* SET READ EXCLUSIVE ON.        */ 00943000
         OI    PLHRDEXC(RPLH),B'00001000'                          0506 00944000
*               RBUFC=PLHDBUFC;     /* POINT TO DATA BUFC.           */ 00945000
         L     RBUFC,PLHDBUFC(,RPLH)                               0507 00946000
*I16:                                                              0508 00947000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00948000
I16      DS    0H                                                  0509 00949000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00950000
         L     @15,@CV00947                                        0509 00951000
         BALR  @14,@15                                             0509 00952000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00953000
         BALR @11,0                                                     00954000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00955000
         USING *,@11                                                    00956000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00957000
         L     @11,=A(@PSTART)                                          00958000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00959000
         USING @PSTART,@11                                              00960000
*               END I16;            /* FREE BUFFER.                  */ 00961000
*I17:                                                              0515 00962000
*               DO;                 /* IDACALL(IDAGNXT)              */ 00963000
I17      DS    0H                                                  0516 00964000
*                 CALL IDAGNXT;     /* EXIT TO IDAGNXT               */ 00965000
         L     @15,@CV00944                                        0516 00966000
         BALR  @14,@15                                             0516 00967000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00968000
         BALR @11,0                                                     00969000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00970000
         USING *,@11                                                    00971000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00972000
         L     @11,=A(@PSTART)                                          00973000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00974000
         USING @PSTART,@11                                              00975000
*               END I17;            /* GET NEXT CI.                  */ 00976000
*               PLHRAHD=OFF;        /* TURN OFF PLH READ AHEAD.      */ 00977000
         NI    PLHRAHD(RPLH),B'10111111'                           0522 00978000
*               IF RPLERREG^='00'X THEN/* ERROR.                     */ 00979000
         CLI   RPLERREG(RRPL),0                                    0523 00980000
         BE    @RF00523                                            0523 00981000
*                 CALL EXIT;        /* RETURN.                       */ 00982000
         BAL   @14,EXIT                                            0524 00983000
*             END;                  /* END GET NEXT CI FOR RECOVERY. */ 00984000
*           ELSE                    /* CREATE SPEED.                 */ 00985000
*             DO;                   /* GET NEXT CI FOR SPEED.        */ 00986000
         B     @RC00495                                            0526 00987000
@RF00495 DS    0H                                                  0527 00988000
*               RPARM1=PLHSAVE1;    /* SET RBA OF CI TO BE READ.     */ 00989000
         L     RPARM1,PLHSAVE1(,RPLH)                              0527 00990000
*I18:                                                              0528 00991000
*               DO;                 /* IDACALL(IDAGRB)               */ 00992000
I18      DS    0H                                                  0529 00993000
*                 CALL IDAGRB;      /* EXIT TO IDAGRB                */ 00994000
         L     @15,@CV00952                                        0529 00995000
         BALR  @14,@15                                             0529 00996000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00997000
         BALR @11,0                                                     00998000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00999000
         USING *,@11                                                    01000000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01001000
         L     @11,=A(@PSTART)                                          01002000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01003000
         USING @PSTART,@11                                              01004000
*               END I18;            /* READ NEXT CI.                 */ 01005000
*               IF RPLERREG^='00'X THEN/* ERROR.                     */ 01006000
         CLI   RPLERREG(RRPL),0                                    0535 01007000
         BE    @RF00535                                            0535 01008000
*                 CALL EXIT;        /* RETURN.                       */ 01009000
         BAL   @14,EXIT                                            0536 01010000
*             END;                  /* END GET NEXT CI FOR SPEED.    */ 01011000
@RF00535 DS    0H                                                  0538 01012000
*         END;                      /* END GET NEXT CI.              */ 01013000
@RC00495 DS    0H                                                  0539 01014000
*       BUFCORBA=PLHSAVE1;          /* SET BUFC OUTPUT RBA.          */ 01015000
@RC00454 L     @10,PLHDBUFC(,RPLH)                                 0539 01016000
         L     @05,PLHSAVE1(,RPLH)                                 0539 01017000
         ST    @05,BUFCORBA(,@10)                                  0539 01018000
*       PLHRECP=BUFCBAD;            /* SET RECORD PTR TO 1ST RECORD. */ 01019000
         L     @10,BUFCBAD(,@10)                                   0540 01020000
         ST    @10,PLHRECP(,RPLH)                                  0540 01021000
*       PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/* SET   01022000
*                                      RDF POINTER.                  */ 01023000
         L     @05,AMBDSB(,RAMB)                                   0541 01024000
         LR    @00,@10                                             0541 01025000
         AL    @00,AMDCINV(,@05)                                   0541 01026000
         SL    @00,@CF00288                                        0541 01027000
         ST    @00,PLHRDFP(,RPLH)                                  0541 01028000
*       PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FREE SPACE PTR.*/ 01029000
         L     @07,AMDNSLOT(,@05)                                  0542 01030000
         M     @06,PLHLRECL(,RPLH)                                 0542 01031000
         ALR   @10,@07                                             0542 01032000
         ST    @10,PLHFSP(,RPLH)                                   0542 01033000
*       CALL EXIT;                  /* RETURN.                       */ 01034000
         BAL   @14,EXIT                                            0543 01035000
*     END;                          /* END ADVANCE TO NEXT CI.       */ 01036000
*   END PUTSQCRE;                   /* END PROC PUTSQCRE.            */ 01037000
@EL00003 DS    0H                                                  0545 01038000
@EF00003 DS    0H                                                  0545 01039000
@ER00003 BR    @14                                                 0545 01040000
*PUTSQNCR:                                                         0546 01041000
*                                                                  0546 01042000
*   /*****************************************************************/ 01043000
*   /*                                                               */ 01044000
*   /* PUT SEQUENTIAL NON-CREATE ROUTINE ---                         */ 01045000
*   /*                                                               */ 01046000
*   /*****************************************************************/ 01047000
*                                                                  0546 01048000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0546 01049000
PUTSQNCR DS    0H                                                  0547 01050000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01051000
         IDASVR14                                                       01052000
*   IF PLHINVAL=ON|PLHBWD=ON|PLHSKPER=ON THEN/* PLH NOT VALID OR PREV   01053000
*                                      BWD REQ OR SKIP ERR.          */ 01054000
         TM    PLHINVAL(RPLH),B'00000010'                          0548 01055000
         BO    @RT00548                                            0548 01056000
         TM    PLHBWD(RPLH),B'00010000'                            0548 01057000
         BO    @RT00548                                            0548 01058000
         TM    PLHSKPER(RPLH),B'00100000'                          0548 01059000
         BNO   @RF00548                                            0548 01060000
@RT00548 DS    0H                                                  0549 01061000
*     DO;                                                          0549 01062000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR.            */ 01063000
         MVI   RPLERREG(RRPL),X'08'                                0550 01064000
*       RPLERRCD=RPLNOPTR;          /* SET NO POSIT. ERROR.          */ 01065000
         MVI   RPLERRCD(RRPL),X'58'                                0551 01066000
*       CALL EXIT;                  /* RETURN.                       */ 01067000
         BAL   @14,EXIT                                            0552 01068000
*     END;                                                         0553 01069000
*                                                                  0553 01070000
*   /*****************************************************************/ 01071000
*   /*                                                               */ 01072000
*   /* IN THE FOLLOWING TEST OF PLHRSTRT AND PLHEODX, PLHRSTRT MUST  */ 01073000
*   /* BE TESTED FIRST. IF PLHRSTRT IS ON, PLHEODX WILL ALSO BE ON.  */ 01074000
*   /* HOWEVER, IF PLHEODX IS ON, PLHRSTRT MAY NOT BE ON. PLHRSTRT IS*/ 01075000
*   /* TURNED ON WHEN AN END OF DATA CONDITION IS ENCOUNTERED ON A   */ 01076000
*   /* POINT (KGE) REQUEST. PLHEODX IS TURNED ON BY IDA019R1 FOR ANY */ 01077000
*   /* END OF DATA ERROR.                                    @ZA07544*/ 01078000
*   /*                                                               */ 01079000
*   /*****************************************************************/ 01080000
*                                                                  0554 01081000
*   IF PLHRSTRT=ON|PLHEODX=ON THEN  /* IF POSITIONING REQUIRED     0554 01082000
*                                                            @ZA07544*/ 01083000
@RF00548 TM    PLHRSTRT(RPLH),B'10000000'                          0554 01084000
         BO    @RT00554                                            0554 01085000
         TM    PLHEODX(RPLH),B'00000100'                           0554 01086000
         BNO   @RF00554                                            0554 01087000
@RT00554 DS    0H                                                  0555 01088000
*     DO;                           /* THEN REPOSITION       @ZA07544*/ 01089000
*       IF PLHRSTRT=ON THEN         /* IF REPOSITION TO PREVIOUS RRN    01090000
*                                                            @ZA07544*/ 01091000
         TM    PLHRSTRT(RPLH),B'10000000'                          0556 01092000
         BNO   @RF00556                                            0556 01093000
*         ARGFIELD=PLHRRN;          /* SET RPL ARG FROM PREVIOUS   0557 01094000
*                                      POINT KGE ARG         @ZA07544*/ 01095000
         L     @10,RPLARG(,RRPL)                                   0557 01096000
         L     @05,PLHKEYPT(,RPLH)                                 0557 01097000
         L     @05,PLHRRN(,@05)                                    0557 01098000
         ST    @05,ARGFIELD(,@10)                                  0557 01099000
*       ELSE                        /* EOD ON PREVIOUS READ  @ZA07544*/ 01100000
*         ARGFIELD=PLHRRN+ONE;      /* POSITION TO EOD       @ZA07544*/ 01101000
         B     @RC00556                                            0558 01102000
@RF00556 L     @10,RPLARG(,RRPL)                                   0558 01103000
         L     @05,PLHKEYPT(,RPLH)                                 0558 01104000
         LA    @00,1                                               0558 01105000
         AL    @00,PLHRRN(,@05)                                    0558 01106000
         ST    @00,ARGFIELD(,@10)                                  0558 01107000
*       CALL PUTNONSQ;              /* REPOSITION            @ZA07544*/ 01108000
@RC00556 BAL   @14,PUTNONSQ                                        0559 01109000
*       IF RPLERREG='08'X&RPLERRCD=RPLEXCL THEN/* READ EXCL ERROR. 0560 01110000
*                                                            @ZA07544*/ 01111000
         CLI   RPLERREG(RRPL),8                                    0560 01112000
         BNE   @RF00560                                            0560 01113000
         CLI   RPLERRCD(RRPL),20                                   0560 01114000
         BNE   @RF00560                                            0560 01115000
*         PLHINVAL=OFF;             /* KEEP PLH              @ZA07544*/ 01116000
         NI    PLHINVAL(RPLH),B'11111101'                          0561 01117000
*       CALL EXIT;                  /* RETURN                @ZA07544*/ 01118000
@RF00560 BAL   @14,EXIT                                            0562 01119000
*     END;                          /* END REPOSITIONING     @ZA07544*/ 01120000
*   IF PLHDSCAN=ON THEN             /* READ EXCL ERROR.              */ 01121000
@RF00554 TM    PLHDSCAN(RPLH),B'00000001'                          0564 01122000
         BNO   @RF00564                                            0564 01123000
*     DO;                                                          0565 01124000
*I19:                                                              0566 01125000
*       DO;                         /* IDACALL(IDAGXCTL)             */ 01126000
I19      DS    0H                                                  0567 01127000
*         CALL IDAGXCTL;            /* EXIT TO IDAGXCTL              */ 01128000
         L     @15,@CV00950                                        0567 01129000
         BALR  @14,@15                                             0567 01130000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01131000
         BALR @11,0                                                     01132000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01133000
         USING *,@11                                                    01134000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01135000
         L     @11,=A(@PSTART)                                          01136000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01137000
         USING @PSTART,@11                                              01138000
*       END I19;                    /* REREAD CI IN EXCL CTL.        */ 01139000
*       IF RPLERREG^='00'X THEN     /* ERROR.                @ZA07544*/ 01140000
         CLI   RPLERREG(RRPL),0                                    0573 01141000
         BE    @RF00573                                            0573 01142000
*         CALL EXIT;                /* RETURN.                       */ 01143000
         BAL   @14,EXIT                                            0574 01144000
*     END;                                                         0575 01145000
*   ELSE                            /* GET BFR IN EXCL CTL.  @ZA07544*/ 01146000
*     IF BUFCEXC=OFF THEN           /* BFR NOT IN EXCL MODE.         */ 01147000
         B     @RC00564                                            0576 01148000
@RF00564 L     @10,PLHDBUFC(,RPLH)                                 0576 01149000
         TM    BUFCEXC(@10),B'00000010'                            0576 01150000
         BNZ   @RF00576                                            0576 01151000
*       DO;                                                        0577 01152000
*I20:                                                              0578 01153000
*         DO;                       /* IDACALL(IDAGXCTL)             */ 01154000
I20      DS    0H                                                  0579 01155000
*           CALL IDAGXCTL;          /* EXIT TO IDAGXCTL              */ 01156000
         L     @15,@CV00950                                        0579 01157000
         BALR  @14,@15                                             0579 01158000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01159000
         BALR @11,0                                                     01160000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01161000
         USING *,@11                                                    01162000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01163000
         L     @11,=A(@PSTART)                                          01164000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01165000
         USING @PSTART,@11                                              01166000
*         END I20;                  /* REREAD CI IN EXCL CTL.        */ 01167000
*         IF RPLERREG^='00'X THEN   /* ERROR.                        */ 01168000
         CLI   RPLERREG(RRPL),0                                    0585 01169000
         BE    @RF00585                                            0585 01170000
*           CALL EXIT;              /* RETURN.                       */ 01171000
         BAL   @14,EXIT                                            0586 01172000
*       END;                                                       0587 01173000
@RF00585 DS    0H                                                  0588 01174000
*   IF PLHNOADV=OFF THEN            /* NO ADVANCE IS OFF.            */ 01175000
@RF00576 DS    0H                                                  0588 01176000
@RC00564 TM    PLHNOADV(RPLH),B'00001000'                          0588 01177000
         BNZ   @RF00588                                            0588 01178000
*     DO;                           /* ADVANCE POSITIONING.          */ 01179000
*       PLHRECP=PLHRECP+PLHLRECL;   /* ADVANCE RECORD PTR.           */ 01180000
         L     @10,PLHLRECL(,RPLH)                                 0590 01181000
         L     @05,PLHRECP(,RPLH)                                  0590 01182000
         ALR   @05,@10                                             0590 01183000
         ST    @05,PLHRECP(,RPLH)                                  0590 01184000
*       IF PLHRECP<PLHFSP THEN      /* NOT END OF CI.                */ 01185000
         C     @05,PLHFSP(,RPLH)                                   0591 01186000
         BNL   @RF00591                                            0591 01187000
*         DO;                                                      0592 01188000
*           PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.     */ 01189000
         L     @05,PLHRDFP(,RPLH)                                  0593 01190000
         SL    @05,@CF00157                                        0593 01191000
         ST    @05,PLHRDFP(,RPLH)                                  0593 01192000
*           PLHSAVE1=PLHSAVE1+PLHLRECL;/* ADVANCE RECORD RBA.        */ 01193000
         AL    @10,PLHSAVE1(,RPLH)                                 0594 01194000
         ST    @10,PLHSAVE1(,RPLH)                                 0594 01195000
*         END;                                                     0595 01196000
*       ELSE                        /* END OF CI.                    */ 01197000
*         DO;                       /* ADVANCE TO NEXT CI.           */ 01198000
         B     @RC00591                                            0596 01199000
@RF00591 DS    0H                                                  0597 01200000
*           PLHSAVE1=BUFCDDDD+AMDCINV;/* ADVANCE RECORD RBA TO NEXT     01201000
*                                      CI.                           */ 01202000
         L     @10,PLHDBUFC(,RPLH)                                 0597 01203000
         L     @05,AMBDSB(,RAMB)                                   0597 01204000
         L     @10,BUFCDDDD(,@10)                                  0597 01205000
         AL    @10,AMDCINV(,@05)                                   0597 01206000
         ST    @10,PLHSAVE1(,RPLH)                                 0597 01207000
*CHKHURBA:                                                         0598 01208000
*           IF PLHSAVE1=>ARDHRBA THEN/* CURRENT RBA IS IN NEXT CA.   */ 01209000
CHKHURBA L     @10,AMBDSB(,RAMB)                                   0598 01210000
         L     @10,AMDPARDB(,@10)                                  0598 01211000
         CLC   PLHSAVE1(4,RPLH),ARDHRBA(@10)                       0598 01212000
         BL    @RF00598                                            0598 01213000
*             DO;                   /* GO TO NEXT CA.                */ 01214000
*               RPARM1=ADDR(IDADIWA);/* POINT TO DIWA.               */ 01215000
         L     RPARM1,AMBIWA(,RAMB)                                0600 01216000
*               GEN REFS(DIWATV)(TS DIWATV(RPARM1));/* TEST IF     0601 01217000
*                                      RESOURCE IS AVAILABLE.        */ 01218000
         TS DIWATV(RPARM1)                                              01219000
*               BC(8,DIWLCKED);     /* BRANCH IF RESOURCE IS AVAIL.  */ 01220000
         BC    8,DIWLCKED                                          0602 01221000
*               RFY                                                0603 01222000
*                 RWORK0 RSTD;      /* GET WORK REG.                 */ 01223000
*               RWORK0=DEFR0;       /* SET DEFER PARAMETER.          */ 01224000
         SLR   RWORK0,RWORK0                                       0604 01225000
*I21:                                                              0605 01226000
*               DO;                 /* IDACALL(IDADRQ)               */ 01227000
I21      DS    0H                                                  0606 01228000
*                 CALL IDADRQ;      /* EXIT TO IDADRQ                */ 01229000
         L     @15,@CV00951                                        0606 01230000
         BALR  @14,@15                                             0606 01231000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01232000
         BALR @11,0                                                     01233000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01234000
         USING *,@11                                                    01235000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01236000
         L     @11,=A(@PSTART)                                          01237000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01238000
         USING @PSTART,@11                                              01239000
*               END I21;            /* CALL DEFER REQUEST ROUT.      */ 01240000
*               GOTO CHKHURBA;      /* RECHECK HI-USED RBA.          */ 01241000
         B     CHKHURBA                                            0612 01242000
*               RFY                                                0613 01243000
*                 RWORK0 UNRSTD;    /* FREE WORK REG.                */ 01244000
*DIWLCKED:                                                         0614 01245000
*               IF PLHSAVE1=>ARDHRBA THEN/* CURRENT RBA GTE HI-USED     01246000
*                                      RBA.                          */ 01247000
DIWLCKED L     @10,AMBDSB(,RAMB)                                   0614 01248000
         L     @10,AMDPARDB(,@10)                                  0614 01249000
         CLC   PLHSAVE1(4,RPLH),ARDHRBA(@10)                       0614 01250000
         BL    @RF00614                                            0614 01251000
*                 CALL GETSPACE;    /* PREFORMAT AND/OR ALLOCATE   0615 01252000
*                                      SPACE.                        */ 01253000
         BAL   @14,GETSPACE                                        0615 01254000
*               DIWATV=ZERO;        /* FREE RESOURCE.                */ 01255000
@RF00614 L     @10,AMBIWA(,RAMB)                                   0616 01256000
         MVI   DIWATV(@10),X'00'                                   0616 01257000
*               IF RPLERREG^='00'X THEN/* ERROR.                     */ 01258000
         CLI   RPLERREG(RRPL),0                                    0617 01259000
         BE    @RF00617                                            0617 01260000
*                 CALL EXIT;        /* RETURN.                       */ 01261000
         BAL   @14,EXIT                                            0618 01262000
*               PLHEODX=ON;         /* GETSPACE WAS CALLED   @ZA18303*/ 01263000
@RF00617 OI    PLHEODX(RPLH),B'00000100'                           0619 01264000
*             END;                  /* END GO TO NEXT CA.            */ 01265000
*           IF PLHASKBF=ON THEN     /* PLH ASK BUFFER IS ON.         */ 01266000
@RF00598 TM    PLHASKBF(RPLH),B'00100000'                          0621 01267000
         BNO   @RF00621                                            0621 01268000
*I22:                                                              0622 01269000
*             DO;                   /* IDACALL(IDAABF)               */ 01270000
I22      DS    0H                                                  0623 01271000
*               CALL IDAABF;        /* EXIT TO IDAABF                */ 01272000
         L     @15,@CV00943                                        0623 01273000
         BALR  @14,@15                                             0623 01274000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01275000
         BALR @11,0                                                     01276000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01277000
         USING *,@11                                                    01278000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01279000
         L     @11,=A(@PSTART)                                          01280000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01281000
         USING @PSTART,@11                                              01282000
*             END I22;              /* ADD BUFFERS.                  */ 01283000
*           PLHRAHD=ON;             /* ALLOW READ AHEAD.             */ 01284000
@RF00621 OI    PLHRAHD(RPLH),B'01000000'                           0629 01285000
*           PLHRDEXC=ON;            /* SET READ EXCLUSIVE.           */ 01286000
         OI    PLHRDEXC(RPLH),B'00001000'                          0630 01287000
*           IF PLHEODX=ON THEN      /* IF NEW SPACE OBTAINED @ZA18303*/ 01288000
         TM    PLHEODX(RPLH),B'00000100'                           0631 01289000
         BNO   @RF00631                                            0631 01290000
*             DO;                   /* RESET THE BUFFERS     @ZA18303*/ 01291000
*               PLHEODX=OFF;        /* RESET EOD FLAG        @ZA18303*/ 01292000
         NI    PLHEODX(RPLH),B'11111011'                           0633 01293000
*               RPARM1=PLHSAVE1;    /* RBA FOR IDAGRB        @ZA18303*/ 01294000
         L     RPARM1,PLHSAVE1(,RPLH)                              0634 01295000
*I23:                                                              0635 01296000
*               DO;                 /* IDACALL(IDAGRB)               */ 01297000
I23      DS    0H                                                  0636 01298000
*                 CALL IDAGRB;      /* EXIT TO IDAGRB                */ 01299000
         L     @15,@CV00952                                        0636 01300000
         BALR  @14,@15                                             0636 01301000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01302000
         BALR @11,0                                                     01303000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01304000
         USING *,@11                                                    01305000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01306000
         L     @11,=A(@PSTART)                                          01307000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01308000
         USING @PSTART,@11                                              01309000
*               END I23;            /* GET THE NEW CI        @ZA18303*/ 01310000
*             END;                  /* END - RESET BUFFERS   @ZA18303*/ 01311000
*           ELSE                    /* NEW SPACE NOT GOTTEN  @ZA18303*/ 01312000
*             DO;                   /* GET THE NEXT CI       @ZA18303*/ 01313000
         B     @RC00631                                            0643 01314000
@RF00631 DS    0H                                                  0644 01315000
*               RBUFC=PLHDBUFC;     /* POINT TO DATA BUFC.           */ 01316000
         L     RBUFC,PLHDBUFC(,RPLH)                               0644 01317000
*I24:                                                              0645 01318000
*               DO;                 /* IDACALL(IDAFREEB)             */ 01319000
I24      DS    0H                                                  0646 01320000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 01321000
         L     @15,@CV00947                                        0646 01322000
         BALR  @14,@15                                             0646 01323000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01324000
         BALR @11,0                                                     01325000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01326000
         USING *,@11                                                    01327000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01328000
         L     @11,=A(@PSTART)                                          01329000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01330000
         USING @PSTART,@11                                              01331000
*               END I24;            /* FREE DATA BUFFER.             */ 01332000
*I25:                                                              0652 01333000
*               DO;                 /* IDACALL(IDAGNXT)              */ 01334000
I25      DS    0H                                                  0653 01335000
*                 CALL IDAGNXT;     /* EXIT TO IDAGNXT               */ 01336000
         L     @15,@CV00944                                        0653 01337000
         BALR  @14,@15                                             0653 01338000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01339000
         BALR @11,0                                                     01340000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01341000
         USING *,@11                                                    01342000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01343000
         L     @11,=A(@PSTART)                                          01344000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01345000
         USING @PSTART,@11                                              01346000
*               END I25;            /* GET NEXT CI.                  */ 01347000
*             END;                  /* END - GET NEXT CI     @ZA18303*/ 01348000
*           PLHRAHD=OFF;            /* TURN OFF PLH READ AHEAD.      */ 01349000
@RC00631 NI    PLHRAHD(RPLH),B'10111111'                           0660 01350000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 01351000
         CLI   RPLERREG(RRPL),0                                    0661 01352000
         BE    @RF00661                                            0661 01353000
*             DO;                                                  0662 01354000
*               IF RPLERREG='08'X&RPLERRCD=RPLEXCL THEN/* READ EXCL     01355000
*                                      ERROR.                        */ 01356000
         CLI   RPLERREG(RRPL),8                                    0663 01357000
         BNE   @RF00663                                            0663 01358000
         CLI   RPLERRCD(RRPL),20                                   0663 01359000
         BNE   @RF00663                                            0663 01360000
*                 PLHDSCAN=ON;      /* SET SCANDATA FLAG.    @ZA07544*/ 01361000
         OI    PLHDSCAN(RPLH),B'00000001'                          0664 01362000
*               PLHNOADV=ON;        /* DO NOT ADVANCE PLH    @ZA07544*/ 01363000
@RF00663 OI    PLHNOADV(RPLH),B'00001000'                          0665 01364000
*               CALL EXIT;          /* RETURN.                       */ 01365000
         BAL   @14,EXIT                                            0666 01366000
*             END;                                                 0667 01367000
*           PLHRECP=BUFCBAD;        /* SET RECORD PTR TO 1ST RECORD. */ 01368000
@RF00661 L     @10,PLHDBUFC(,RPLH)                                 0668 01369000
         L     @10,BUFCBAD(,@10)                                   0668 01370000
         ST    @10,PLHRECP(,RPLH)                                  0668 01371000
*           PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/*   01372000
*                                      SET RDF POINTER.              */ 01373000
         L     @05,AMBDSB(,RAMB)                                   0669 01374000
         LR    @00,@10                                             0669 01375000
         AL    @00,AMDCINV(,@05)                                   0669 01376000
         SL    @00,@CF00288                                        0669 01377000
         ST    @00,PLHRDFP(,RPLH)                                  0669 01378000
*           PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FREE SPACE    01379000
*                                      POINTER.                      */ 01380000
         L     @07,AMDNSLOT(,@05)                                  0670 01381000
         M     @06,PLHLRECL(,RPLH)                                 0670 01382000
         ALR   @10,@07                                             0670 01383000
         ST    @10,PLHFSP(,RPLH)                                   0670 01384000
*         END;                      /* END ADVANCE TO NEXT CI.       */ 01385000
*     END;                          /* END ADVANCE POSITIONING.      */ 01386000
@RC00591 DS    0H                                                  0673 01387000
*   BUFCORBA=BUFCDDDD;              /* SET BUFC OUTPUT RBA.          */ 01388000
@RF00588 L     @10,PLHDBUFC(,RPLH)                                 0673 01389000
         L     @05,BUFCDDDD(,@10)                                  0673 01390000
         ST    @05,BUFCORBA(,@10)                                  0673 01391000
*   CALL EXIT;                      /* RETURN.                       */ 01392000
         BAL   @14,EXIT                                            0674 01393000
*   END PUTSQNCR;                   /* END PROC PUTSQNCR.            */ 01394000
@EL00004 DS    0H                                                  0675 01395000
@EF00004 DS    0H                                                  0675 01396000
@ER00004 BR    @14                                                 0675 01397000
*PUTNONSQ:                                                         0676 01398000
*                                                                  0676 01399000
*   /*****************************************************************/ 01400000
*   /*                                                               */ 01401000
*   /* PUT NON-SEQUENTIAL ROUTINE ---                                */ 01402000
*   /*                                                               */ 01403000
*   /*****************************************************************/ 01404000
*                                                                  0676 01405000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0676 01406000
PUTNONSQ DS    0H                                                  0677 01407000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01408000
         IDASVR14                                                       01409000
*   IF ARGFIELD=ZERO|ARGFIELD>AMDMAXRR THEN/* INVALID RRN.           */ 01410000
         L     @10,RPLARG(,RRPL)                                   0678 01411000
         L     @10,ARGFIELD(,@10)                                  0678 01412000
         LTR   @10,@10                                             0678 01413000
         BZ    @RT00678                                            0678 01414000
         L     @05,AMBDSB(,RAMB)                                   0678 01415000
         CL    @10,AMDMAXRR(,@05)                                  0678 01416000
         BNH   @RF00678                                            0678 01417000
@RT00678 DS    0H                                                  0679 01418000
*     DO;                                                          0679 01419000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 01420000
         MVI   RPLERREG(RRPL),X'08'                                0680 01421000
*       RPLERRCD=RPLIRRNO;          /* SET INVALID RRN ERROR.        */ 01422000
         MVI   RPLERRCD(RRPL),X'C0'                                0681 01423000
*       CALL EXIT;                  /* RETURN.                       */ 01424000
         BAL   @14,EXIT                                            0682 01425000
*     END;                                                         0683 01426000
*   PLHSAVE1=AMDCINV*((ARGFIELD-ONE)/AMDNSLOT)+PLHLRECL*((ARGFIELD-ONE) 01427000
*       //AMDNSLOT);                /* CONVERT RRN TO RBA.           */ 01428000
@RF00678 L     @10,AMBDSB(,RAMB)                                   0684 01429000
         L     @05,RPLARG(,RRPL)                                   0684 01430000
         L     @05,ARGFIELD(,@05)                                  0684 01431000
         BCTR  @05,0                                               0684 01432000
         L     @15,AMDNSLOT(,@10)                                  0684 01433000
         LR    @07,@05                                             0684 01434000
         SLR   @06,@06                                             0684 01435000
         DR    @06,@15                                             0684 01436000
         M     @06,AMDCINV(,@10)                                   0684 01437000
         LR    @09,@05                                             0684 01438000
         SLR   @08,@08                                             0684 01439000
         DR    @08,@15                                             0684 01440000
         LR    @15,@08                                             0684 01441000
         M     @14,PLHLRECL(,RPLH)                                 0684 01442000
         ALR   @07,@15                                             0684 01443000
         ST    @07,PLHSAVE1(,RPLH)                                 0684 01444000
*TSTHURBA:                                                         0685 01445000
*   IF PLHSAVE1<ARDHRBA THEN        /* REQUESTED RBA IS LT HI-USED 0685 01446000
*                                      RBA.                          */ 01447000
TSTHURBA L     @10,PLHSAVE1(,RPLH)                                 0685 01448000
         L     @05,AMBDSB(,RAMB)                                   0685 01449000
         L     @05,AMDPARDB(,@05)                                  0685 01450000
         CL    @10,ARDHRBA(,@05)                                   0685 01451000
         BNL   @RF00685                                            0685 01452000
*     DO;                           /* RETRIEVE CI.                  */ 01453000
*       RPARM1=PLHSAVE1;            /* RBA TO RETRIEVE.              */ 01454000
         LR    RPARM1,@10                                          0687 01455000
*I26:                                                              0688 01456000
*       DO;                         /* IDACALL(IDARRDRL)             */ 01457000
I26      DS    0H                                                  0689 01458000
*         CALL IDARRDRL;            /* EXIT TO IDARRDRL              */ 01459000
         L     @15,@CV00956                                        0689 01460000
         BALR  @14,@15                                             0689 01461000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01462000
         BALR @11,0                                                     01463000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01464000
         USING *,@11                                                    01465000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01466000
         L     @11,=A(@PSTART)                                          01467000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01468000
         USING @PSTART,@11                                              01469000
*       END I26;                    /* CALL DIRECT RECORD LOCATE.    */ 01470000
*       IF RPLERREG^='00'X THEN     /* ERROR.                        */ 01471000
         CLI   RPLERREG(RRPL),0                                    0695 01472000
         BE    @RF00695                                            0695 01473000
*         CALL EXIT;                /* RETURN.                       */ 01474000
         BAL   @14,EXIT                                            0696 01475000
*       BUFCORBA=BUFCDDDD;          /* SET BUFC OUTPUT RBA.          */ 01476000
@RF00695 L     @10,PLHDBUFC(,RPLH)                                 0697 01477000
         L     @05,BUFCDDDD(,@10)                                  0697 01478000
         ST    @05,BUFCORBA(,@10)                                  0697 01479000
*     END;                          /* END RETRIEVE CI.              */ 01480000
*   ELSE                            /* REQUESTED RBA IS GTE HI-USED     01481000
*                                      RBA.                          */ 01482000
*     DO;                           /* REQ IS PAST DATA SET END.     */ 01483000
         B     @RC00685                                            0699 01484000
@RF00685 DS    0H                                                  0700 01485000
*       RBUFC=PLHDBUFC;             /* POINT TO DATA BUFC.           */ 01486000
         L     @10,PLHDBUFC(,RPLH)                                 0700 01487000
         LR    RBUFC,@10                                           0700 01488000
*       IF BUFCINS=ON THEN          /* CURRENT IS INSERT BUFC.       */ 01489000
         TM    BUFCINS(@10),B'00100000'                            0701 01490000
         BNO   @RF00701                                            0701 01491000
*I27:                                                              0702 01492000
*         DO;                       /* IDACALL(IDASBF)               */ 01493000
I27      DS    0H                                                  0703 01494000
*           CALL IDASBF;            /* EXIT TO IDASBF                */ 01495000
         L     @15,@CV00953                                        0703 01496000
         BALR  @14,@15                                             0703 01497000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01498000
         BALR @11,0                                                     01499000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01500000
         USING *,@11                                                    01501000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01502000
         L     @11,=A(@PSTART)                                          01503000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01504000
         USING @PSTART,@11                                              01505000
*         END I27;                  /* SUBTRACT INSERT BUFC.         */ 01506000
*       ELSE                        /* NOT INSERT BUFC.              */ 01507000
*         IF PLHINVAL=OFF&PLH1ST=OFF&AMBCREAT=ON THEN/* VALID DATA 0709 01508000
*                                      BUFFER EXISTS.                */ 01509000
         B     @RC00701                                            0709 01510000
@RF00701 TM    PLHINVAL(RPLH),B'01000010'                          0709 01511000
         BNZ   @RF00709                                            0709 01512000
         TM    AMBCREAT(RAMB),B'10000000'                          0709 01513000
         BNO   @RF00709                                            0709 01514000
*I28:                                                              0710 01515000
*           DO;                     /* IDACALL(IDAFREEB)             */ 01516000
I28      DS    0H                                                  0711 01517000
*             CALL IDAFREEB;        /* EXIT TO IDAFREEB              */ 01518000
         L     @15,@CV00947                                        0711 01519000
         BALR  @14,@15                                             0711 01520000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01521000
         BALR @11,0                                                     01522000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01523000
         USING *,@11                                                    01524000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01525000
         L     @11,=A(@PSTART)                                          01526000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01527000
         USING @PSTART,@11                                              01528000
*           END I28;                /* FREE DATA BUFC.               */ 01529000
*       RPARM1=ADDR(IDADIWA);       /* POINT TO DIWA.                */ 01530000
@RF00709 DS    0H                                                  0717 01531000
@RC00701 L     RPARM1,AMBIWA(,RAMB)                                0717 01532000
*       GEN REFS(DIWATV)(TS DIWATV(RPARM1));/* TEST IF RESOURCE IS 0718 01533000
*                                      AVAILABLE.                    */ 01534000
         TS DIWATV(RPARM1)                                              01535000
*       BC(8,DIWLCKD);              /* BRANCH IF RESOURCE IS AVAIL.  */ 01536000
         BC    8,DIWLCKD                                           0719 01537000
*       RFY                                                        0720 01538000
*         RWORK0 RSTD;              /* GET WORK REG.                 */ 01539000
*       RWORK0=DEFR0;               /* SET DEFER PARAMETER.          */ 01540000
         SLR   RWORK0,RWORK0                                       0721 01541000
*I29:                                                              0722 01542000
*       DO;                         /* IDACALL(IDADRQ)               */ 01543000
I29      DS    0H                                                  0723 01544000
*         CALL IDADRQ;              /* EXIT TO IDADRQ                */ 01545000
         L     @15,@CV00951                                        0723 01546000
         BALR  @14,@15                                             0723 01547000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01548000
         BALR @11,0                                                     01549000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01550000
         USING *,@11                                                    01551000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01552000
         L     @11,=A(@PSTART)                                          01553000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01554000
         USING @PSTART,@11                                              01555000
*       END I29;                    /* CALL DEFER REQUEST ROUT.      */ 01556000
*       GOTO TSTHURBA;              /* RECHECK HI-USED RBA.          */ 01557000
         B     TSTHURBA                                            0729 01558000
*       RFY                                                        0730 01559000
*         RWORK0 UNRSTD;            /* FREE WORK REG.                */ 01560000
*DIWLCKD:                                                          0731 01561000
*                                                                  0731 01562000
*       /*************************************************************/ 01563000
*       /*                                                           */ 01564000
*       /* CHECK CURRENT RBA AGAINST HIGH USED/PREFORMAT RBA @ZA15685*/ 01565000
*       /*                                                           */ 01566000
*       /*************************************************************/ 01567000
*                                                                  0731 01568000
*       IF PLHSAVE1=>ARDHRBA THEN   /* IF GTE HI-USED RBA    @ZA15685*/ 01569000
DIWLCKD  L     @10,PLHSAVE1(,RPLH)                                 0731 01570000
         L     @05,AMBDSB(,RAMB)                                   0731 01571000
         L     @05,AMDPARDB(,@05)                                  0731 01572000
         CL    @10,ARDHRBA(,@05)                                   0731 01573000
         BL    @RF00731                                            0731 01574000
*         IF(AMBSPEED=OFF|          /* IF NOT SPEED CREATE OR@ZA15685*/ 01575000
*             PLHSAVE1=>PLHSAVE2) THEN/* RBA ^ PREFORMATTED  @ZA15685*/ 01576000
         TM    AMBSPEED(RAMB),B'00001000'                          0732 01577000
         BZ    @RT00732                                            0732 01578000
         C     @10,PLHSAVE2(,RPLH)                                 0732 01579000
         BL    @RF00732                                            0732 01580000
@RT00732 DS    0H                                                  0733 01581000
*           CALL GETSPACE;          /* PREFORMAT AND/OR ALLOCATE   0733 01582000
*                                      SPACE.                        */ 01583000
         BAL   @14,GETSPACE                                        0733 01584000
*         ELSE                      /* SPEED & PREFORMATTED  @ZA15685*/ 01585000
*           ARDHRBA=PLHSAV1X-(PLHSAV1X//AMDCINV)+AMDCINV;/* SET    0734 01586000
*                                      HI-USED RBA TO NEXT CI PAST 0734 01587000
*                                      CURRENT.              @ZA15685*/ 01588000
         B     @RC00732                                            0734 01589000
@RF00732 L     @10,AMBDSB(,RAMB)                                   0734 01590000
         L     @05,AMDPARDB(,@10)                                  0734 01591000
         L     @15,PLHSAV1X(,RPLH)                                 0734 01592000
         L     @10,AMDCINV(,@10)                                   0734 01593000
         LR    @07,@15                                             0734 01594000
         SLR   @06,@06                                             0734 01595000
         DR    @06,@10                                             0734 01596000
         SLR   @15,@06                                             0734 01597000
         ALR   @15,@10                                             0734 01598000
         ST    @15,ARDHRBA(,@05)                                   0734 01599000
*       DIWATV=ZERO;                /* FREE RESOURCE.                */ 01600000
@RC00732 DS    0H                                                  0735 01601000
@RF00731 L     @10,AMBIWA(,RAMB)                                   0735 01602000
         MVI   DIWATV(@10),X'00'                                   0735 01603000
*       IF RPLERREG^='00'X THEN     /* ERROR.                        */ 01604000
         CLI   RPLERREG(RRPL),0                                    0736 01605000
         BE    @RF00736                                            0736 01606000
*         CALL EXIT;                /* RETURN.                       */ 01607000
         BAL   @14,EXIT                                            0737 01608000
*       IF AMBCREAT=OFF THEN        /* NOT CREATE MODE.              */ 01609000
@RF00736 TM    AMBCREAT(RAMB),B'10000000'                          0738 01610000
         BNZ   @RF00738                                            0738 01611000
*         DO;                                                      0739 01612000
*           RPARM1=PLHSAVE1;        /* RBA TO RETRIEVE.              */ 01613000
         L     RPARM1,PLHSAVE1(,RPLH)                              0740 01614000
*I30:                                                              0741 01615000
*           DO;                     /* IDACALL(IDARRDRL)             */ 01616000
I30      DS    0H                                                  0742 01617000
*             CALL IDARRDRL;        /* EXIT TO IDARRDRL              */ 01618000
         L     @15,@CV00956                                        0742 01619000
         BALR  @14,@15                                             0742 01620000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01621000
         BALR @11,0                                                     01622000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01623000
         USING *,@11                                                    01624000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01625000
         L     @11,=A(@PSTART)                                          01626000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01627000
         USING @PSTART,@11                                              01628000
*           END I30;                /* CALL DIRECT RECORD LOCATE.    */ 01629000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 01630000
         CLI   RPLERREG(RRPL),0                                    0748 01631000
         BE    @RF00748                                            0748 01632000
*             CALL EXIT;            /* RETURN.                       */ 01633000
         BAL   @14,EXIT                                            0749 01634000
*           BUFCORBA=BUFCDDDD;      /* SET BUFC OUTPUT RBA.          */ 01635000
@RF00748 L     @10,PLHDBUFC(,RPLH)                                 0750 01636000
         L     @05,BUFCDDDD(,@10)                                  0750 01637000
         ST    @05,BUFCORBA(,@10)                                  0750 01638000
*         END;                                                     0751 01639000
*       ELSE                        /* CREATE MODE.                  */ 01640000
*         DO;                       /* PROCESS CREATE REQ.           */ 01641000
         B     @RC00738                                            0752 01642000
@RF00738 DS    0H                                                  0753 01643000
*           IF AMBSPEED=ON THEN     /* IF SPEED CREATE       @ZA15685*/ 01644000
         TM    AMBSPEED(RAMB),B'00001000'                          0753 01645000
         BNO   @RF00753                                            0753 01646000
*             DO;                   /* THEN GET INSERT BUFC  @ZA15685*/ 01647000
*I31:                                                              0755 01648000
*               DO;                 /* IDACALL(IDAAIBF)              */ 01649000
I31      DS    0H                                                  0756 01650000
*                 CALL IDAAIBF;     /* EXIT TO IDAAIBF               */ 01651000
         L     @15,@CV00954                                        0756 01652000
         BALR  @14,@15                                             0756 01653000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01654000
         BALR @11,0                                                     01655000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01656000
         USING *,@11                                                    01657000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01658000
         L     @11,=A(@PSTART)                                          01659000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01660000
         USING @PSTART,@11                                              01661000
*               END I31;            /* ADD INSERT BUFFER     @ZA15685*/ 01662000
*               PLHDBUFC=RBUFC;     /* POINT PLH TO BUFC     @ZA15685*/ 01663000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0762 01664000
*               BUFCINS=ON;         /* SET INSERT FLAG ON    @ZA15685*/ 01665000
         L     @10,PLHDBUFC(,RPLH)                                 0763 01666000
         OI    BUFCINS(@10),B'00100000'                            0763 01667000
*             END;                  /* END - GET INSERT BUFC @ZA15685*/ 01668000
*I32:                                                              0765 01669000
*           DO;                     /* IDACALL(IDAGNNFL)             */ 01670000
@RF00753 DS    0H                                                  0765 01671000
I32      DS    0H                                                  0766 01672000
*             CALL IDAGNNFL;        /* EXIT TO IDAGNNFL              */ 01673000
         L     @15,@CV00945                                        0766 01674000
         BALR  @14,@15                                             0766 01675000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01676000
         BALR @11,0                                                     01677000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01678000
         USING *,@11                                                    01679000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01680000
         L     @11,=A(@PSTART)                                          01681000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01682000
         USING @PSTART,@11                                              01683000
*           END I32;                /* GET NEXT CI NO FILL.          */ 01684000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 01685000
         CLI   RPLERREG(RRPL),0                                    0772 01686000
         BE    @RF00772                                            0772 01687000
*             DO;                                                  0773 01688000
*               PLHINVAL=ON;        /* SET PLH INVALID.              */ 01689000
         OI    PLHINVAL(RPLH),B'00000010'                          0774 01690000
*               CALL EXIT;          /* RETURN.                       */ 01691000
         BAL   @14,EXIT                                            0775 01692000
*             END;                                                 0776 01693000
*           RFY                                                    0777 01694000
*             IDABUFC BASED(RBUFC); /* BASE BUFC ON REG.             */ 01695000
@RF00772 DS    0H                                                  0778 01696000
*           BUFCORBA=PLHSAV1X-(PLHSAV1X//AMDCINV);/* SET BUFC OUTPUT    01697000
*                                      RBA                   @ZA10887*/ 01698000
         L     @10,PLHSAV1X(,RPLH)                                 0778 01699000
         L     @05,AMBDSB(,RAMB)                                   0778 01700000
         LR    @07,@10                                             0778 01701000
         SLR   @06,@06                                             0778 01702000
         D     @06,AMDCINV(,@05)                                   0778 01703000
         SLR   @10,@06                                             0778 01704000
         ST    @10,BUFCORBA(,RBUFC)                                0778 01705000
*           BUFCDDDD=BUFCORBA;      /* SET BUFC INPUT RBA.           */ 01706000
         ST    @10,BUFCDDDD(,RBUFC)                                0779 01707000
*           BUFXIRBA=BUFCORBA;      /* SET BUFC EXCL RBA.            */ 01708000
         ST    @10,BUFXIRBA(,RBUFC)                                0780 01709000
*           BUFCVAL=ON;             /* SET BUFFER VALID.             */ 01710000
*           BUFCEXC=ON;             /* SET BUFC EXCL.                */ 01711000
         OI    BUFCVAL(RBUFC),B'00000110'                          0782 01712000
*           CALL BFRFMT;            /* FORMAT BFR WITH EMPTY REC'S.  */ 01713000
         BAL   @14,BFRFMT                                          0783 01714000
*           PLHRECP=BUFCBAD+PLHSAVE1-BUFCORBA;/* POINT TO REQ REC.   */ 01715000
         L     @10,BUFCBAD(,RBUFC)                                 0784 01716000
         LR    @05,@10                                             0784 01717000
         AL    @05,PLHSAVE1(,RPLH)                                 0784 01718000
         SL    @05,BUFCORBA(,RBUFC)                                0784 01719000
         ST    @05,PLHRECP(,RPLH)                                  0784 01720000
*           PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-((((ARGFIELD-ONE)// 01721000
*               AMDNSLOT)+ONE)*LENGTH(IDARDF));/* SET RDF POINTER.   */ 01722000
         L     @05,AMBDSB(,RAMB)                                   0785 01723000
         LR    @00,@10                                             0785 01724000
         AL    @00,AMDCINV(,@05)                                   0785 01725000
         SL    @00,@CF00067                                        0785 01726000
         L     @15,RPLARG(,RRPL)                                   0785 01727000
         L     @15,ARGFIELD(,@15)                                  0785 01728000
         BCTR  @15,0                                               0785 01729000
         L     @05,AMDNSLOT(,@05)                                  0785 01730000
         SLR   @14,@14                                             0785 01731000
         DR    @14,@05                                             0785 01732000
         AL    @14,@CF00053                                        0785 01733000
         MH    @14,@CH00157                                        0785 01734000
         SLR   @00,@14                                             0785 01735000
         ST    @00,PLHRDFP(,RPLH)                                  0785 01736000
*           PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FS PTR.    */ 01737000
         LR    @07,@05                                             0786 01738000
         M     @06,PLHLRECL(,RPLH)                                 0786 01739000
         ALR   @10,@07                                             0786 01740000
         ST    @10,PLHFSP(,RPLH)                                   0786 01741000
*           PLHEFLGS=PLHVALID;      /* MAKE PLH VALID.               */ 01742000
         MVC   PLHEFLGS(2,RPLH),@CB00797                           0787 01743000
*           RFY                                                    0788 01744000
*             IDABUFC BASED(PLHDBUFC);/* REBASE BUFC.                */ 01745000
*         END;                      /* END PROCESS CREATE REQ.       */ 01746000
*     END;                          /* END REQ PAST DATA SET END.    */ 01747000
@RC00738 DS    0H                                                  0791 01748000
*   IF AMBCREAT=ON&RPLDIR=ON THEN   /* CREATE MODE & DIRECT REQ.     */ 01749000
@RC00685 TM    AMBCREAT(RAMB),B'10000000'                          0791 01750000
         BNO   @RF00791                                            0791 01751000
         TM    RPLDIR(RRPL),B'01000000'                            0791 01752000
         BNO   @RF00791                                            0791 01753000
*     PLHDRLM=ON;                   /* INDICATE DIRECT REQ ISSUED  0792 01754000
*                                      DURING LOAD MODE.             */ 01755000
         OI    PLHDRLM(RPLH),B'10000000'                           0792 01756000
*   CALL EXIT;                      /* RETURN.                       */ 01757000
@RF00791 BAL   @14,EXIT                                            0793 01758000
*   END PUTNONSQ;                   /* END PROC PUTNONSQ.            */ 01759000
@EL00005 DS    0H                                                  0794 01760000
@EF00005 DS    0H                                                  0794 01761000
@ER00005 BR    @14                                                 0794 01762000
*GETSPACE:                                                         0795 01763000
*                                                                  0795 01764000
*   /*****************************************************************/ 01765000
*   /*                                                               */ 01766000
*   /* GETSPACE ROUTINE --- CHECKS IF PREFORMAT AND/OR MORE SPACE IS */ 01767000
*   /* REQUIRED. IF NON-SEQUENTIAL REQUEST, PREFORMATS NECESSARY     */ 01768000
*   /* NUMBER OF CA'S TO GET TO CA THAT CONTAINS RBA OF REQUEST. --- */ 01769000
*   /* INPUT - PLHSAVE1 = RBA OF CURRENT RECORD, ARDB = HI-USED &    */ 01770000
*   /* HI-ALLOCATED RBA'S. --- OUTPUT - SPACE ALLOCATED BY EOV IF    */ 01771000
*   /* NECESSARY, UPDATED ARDB HI-USED & HI-ALLOCATED RBA'S, IF      */ 01772000
*   /* NON-SEQ REQUEST ALL CA'S UP TO CA CONTAINING CURRENT RECORD   */ 01773000
*   /* ARE PREFORMATTED(SPEED OR RECOVERY), RECOVERY - NEXT CA       */ 01774000
*   /* PREFORMATTED, CREATE SPEED - HI-USED RBA SET TO NEXT CI.      */ 01775000
*   /*                                                               */ 01776000
*   /*****************************************************************/ 01777000
*                                                                  0795 01778000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0795 01779000
GETSPACE DS    0H                                                  0796 01780000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01781000
*                                                                  0796 01782000
         IDASVR14                                                       01783000
*   /*****************************************************************/ 01784000
*   /*                                                               */ 01785000
*   /* IF THIS DATA SET IS OPEN FOR SHROPT(4), DO NOT ALLOW IT TO BE */ 01786000
*   /* EXTENDED.                                             @ZA13568*/ 01787000
*   /*                                                               */ 01788000
*   /*****************************************************************/ 01789000
*                                                                  0797 01790000
*   IF AMBINBUF=ON THEN             /* IF SHROPT(4)          @ZA13568*/ 01791000
         TM    AMBINBUF(RAMB),B'00000001'                          0797 01792000
         BNO   @RF00797                                            0797 01793000
*     DO;                           /* PREVENT EXTEND        @ZA13568*/ 01794000
*       RPLERREG='08'X;             /* IND LOGICAL ERROR     @ZA13568*/ 01795000
         MVI   RPLERREG(RRPL),X'08'                                0799 01796000
*       RPLERRCD=RPLNOEXT;          /* UNABEL TO EXTEND ERR  @ZA13568*/ 01797000
         MVI   RPLERRCD(RRPL),X'1C'                                0800 01798000
*     END;                          /* END OF EXTEND ERR     @ZA13568*/ 01799000
*   PLHARDB=ADDR(IDAARDB);          /* SET PLH ARDB FOR PRFMT.       */ 01800000
@RF00797 L     @10,AMBDSB(,RAMB)                                   0802 01801000
         L     @10,AMDPARDB(,@10)                                  0802 01802000
         ST    @10,PLHARDB(,RPLH)                                  0802 01803000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC.           */ 01804000
         L     RBUFC,PLHDBUFC(,RPLH)                               0803 01805000
*   IF RPLSEQ=ON&PLHRSTRT=OFF THEN  /* SEQ REQUEST & PLH RESTART FLAG   01806000
*                                      OFF.                          */ 01807000
         TM    RPLSEQ(RRPL),B'00100000'                            0804 01808000
         BNO   @RF00804                                            0804 01809000
         TM    PLHRSTRT(RPLH),B'10000000'                          0804 01810000
         BNZ   @RF00804                                            0804 01811000
*     DO;                           /* GET SPACE FOR SEQ.            */ 01812000
*       IF PLHSAVE1=>ARDERBA THEN   /* OUT OF SPACE.                 */ 01813000
         CLC   PLHSAVE1(4,RPLH),ARDERBA(@10)                       0806 01814000
         BL    @RF00806                                            0806 01815000
*         DO;                       /* EOV ALLOCATE SPACE.           */ 01816000
*           PLHEOVR=AMBEOVAR;       /* SET ALLOCATE BY RBA.          */ 01817000
         MVI   PLHEOVR(RPLH),B'10000010'                           0808 01818000
*           PLHEOVPT=ADDR(ARDERBA); /* POINT TO END RBA.             */ 01819000
         LA    @10,ARDERBA(,@10)                                   0809 01820000
         ST    @10,PLHEOVPT(,RPLH)                                 0809 01821000
*I33:                                                              0810 01822000
*           DO;                     /* IDACALL(IDAEOVIF)             */ 01823000
I33      DS    0H                                                  0811 01824000
*             CALL IDAEOVIF;        /* EXIT TO IDAEOVIF              */ 01825000
         L     @15,@CV00955                                        0811 01826000
         BALR  @14,@15                                             0811 01827000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01828000
         BALR @11,0                                                     01829000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01830000
         USING *,@11                                                    01831000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01832000
         L     @11,=A(@PSTART)                                          01833000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01834000
         USING @PSTART,@11                                              01835000
*           END I33;                /* CALL EOV INTERFACE.           */ 01836000
*           IF RPLERREG^='00'X THEN /* EOV ERROR.                    */ 01837000
         CLI   RPLERREG(RRPL),0                                    0817 01838000
         BE    @RF00817                                            0817 01839000
*             CALL EXIT;            /* RETURN.                       */ 01840000
         BAL   @14,EXIT                                            0818 01841000
*           IF AMBSPEED=OFF THEN    /* NOT CREATE SPEED.             */ 01842000
@RF00817 TM    AMBSPEED(RAMB),B'00001000'                          0819 01843000
         BNZ   @RF00819                                            0819 01844000
*             ARDHRBA=ARDHRBA+AMDCINV*AMDCIPCA;/* BUMP HI-USED RBA TO   01845000
*                                      NEXT CA.                      */ 01846000
         L     @10,AMBDSB(,RAMB)                                   0820 01847000
         L     @05,AMDPARDB(,@10)                                  0820 01848000
         L     @00,AMDCINV(,@10)                                   0820 01849000
         MH    @00,AMDCIPCA(,@10)                                  0820 01850000
         AL    @00,ARDHRBA(,@05)                                   0820 01851000
         ST    @00,ARDHRBA(,@05)                                   0820 01852000
*           ELSE                    /* CREATE SPEED.                 */ 01853000
*             ARDHRBA=ARDHRBA+AMDCINV;/* BUMP HI-USED RBA TO NEXT CI */ 01854000
         B     @RC00819                                            0821 01855000
@RF00819 L     @10,AMBDSB(,RAMB)                                   0821 01856000
         L     @05,AMDPARDB(,@10)                                  0821 01857000
         L     @00,ARDHRBA(,@05)                                   0821 01858000
         AL    @00,AMDCINV(,@10)                                   0821 01859000
         ST    @00,ARDHRBA(,@05)                                   0821 01860000
*         END;                      /* END EOV ALLOCATE SPACE.       */ 01861000
*       ELSE                        /* NOT OUT OF SPACE.             */ 01862000
*         IF AMBSPEED=OFF THEN      /* IF NOT SPEED CREATE   @ZA15685*/ 01863000
         B     @RC00806                                            0823 01864000
@RF00806 TM    AMBSPEED(RAMB),B'00001000'                          0823 01865000
         BNZ   @RF00823                                            0823 01866000
*           DO;                     /* PREFORMAT NEXT CA.            */ 01867000
*             RPARM1=ARDHRBA;       /* SET PREFORMAT START RBA.      */ 01868000
         L     @10,AMBDSB(,RAMB)                                   0825 01869000
         L     @10,AMDPARDB(,@10)                                  0825 01870000
         L     RPARM1,ARDHRBA(,@10)                                0825 01871000
*I34:                                                              0826 01872000
*             DO;                   /* IDACALL(IDA019RK)             */ 01873000
I34      DS    0H                                                  0827 01874000
*               CALL IDA019RK;      /* EXIT TO IDA019RK              */ 01875000
         L     @15,@CV00948                                        0827 01876000
         BALR  @14,@15                                             0827 01877000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01878000
         BALR @11,0                                                     01879000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01880000
         USING *,@11                                                    01881000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01882000
         L     @11,=A(@PSTART)                                          01883000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 01884000
         USING @PSTART,@11                                              01885000
*             END I34;              /* PREFORMAT NEXT CA.            */ 01886000
*             IF RPLERREG^='00'X THEN/* PREFORMAT ERROR.             */ 01887000
         CLI   RPLERREG(RRPL),0                                    0833 01888000
         BE    @RF00833                                            0833 01889000
*               CALL EXIT;          /* RETURN.                       */ 01890000
         BAL   @14,EXIT                                            0834 01891000
*             ARDHRBA=RPARM1;       /* SET HI-USED RBA TO NEXT CA.   */ 01892000
@RF00833 L     @10,AMBDSB(,RAMB)                                   0835 01893000
         L     @10,AMDPARDB(,@10)                                  0835 01894000
         ST    RPARM1,ARDHRBA(,@10)                                0835 01895000
*           END;                    /* END PREFORMAT NEXT CA.        */ 01896000
*     END;                          /* END GETSPACE FOR SEQ.         */ 01897000
*   ELSE                            /* NOT SEQUENTIAL REQ.           */ 01898000
*     DO;                           /* GET SPACE FOR NON-SEQ REQ.    */ 01899000
         B     @RC00804                                            0838 01900000
@RF00804 DS    0H                                                  0839 01901000
*       IF AMBSPEED=ON THEN         /* IF SPEED CREATE       @ZA15685*/ 01902000
         TM    AMBSPEED(RAMB),B'00001000'                          0839 01903000
         BNO   @RF00839                                            0839 01904000
*         DO;                       /* PREFORMAT REMAINDER OF CA.    */ 01905000
*           RBUFC=BUFCNXT2;         /* WRITE LOWEST RBA FIRST@ZA15685*/ 01906000
         L     @10,PLHDBUFC(,RPLH)                                 0841 01907000
         L     RBUFC,BUFCNXT2-1(,@10)                              0841 01908000
         LA    RBUFC,0(,RBUFC)                                     0841 01909000
*I35:                                                              0842 01910000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 01911000
I35      DS    0H                                                  0843 01912000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 01913000
         L     @15,@CV00946                                        0843 01914000
         BALR  @14,@15                                             0843 01915000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01916000
         BALR @11,0                                                     01917000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01918000
         USING *,@11                                                    01919000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01920000
         L     @11,=A(@PSTART)                                          01921000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01922000
         USING @PSTART,@11                                              01923000
*           END I35;                /* FORCE OUT MW BUFFERS  @ZA15685*/ 01924000
*           IF RPLERREG^='00'X THEN /* WRITE-BUFFER ERROR?   @ZA15685*/ 01925000
         CLI   RPLERREG(RRPL),0                                    0849 01926000
         BE    @RF00849                                            0849 01927000
*             CALL EXIT;            /* RETURN.               @ZA15685*/ 01928000
         BAL   @14,EXIT                                            0850 01929000
*           IF ARDHRBA//(AMDCINV*AMDCIPCA)^=ZERO/* IF NOT ON @ZA15685*/ 01930000
*             THEN                  /* A CA BOUNDARY         @ZA15685*/ 01931000
@RF00849 L     @10,AMBDSB(,RAMB)                                   0851 01932000
         L     @05,AMDPARDB(,@10)                                  0851 01933000
         L     @05,ARDHRBA(,@05)                                   0851 01934000
         L     @00,AMDCINV(,@10)                                   0851 01935000
         MH    @00,AMDCIPCA(,@10)                                  0851 01936000
         LR    @07,@05                                             0851 01937000
         SLR   @06,@06                                             0851 01938000
         DR    @06,@00                                             0851 01939000
         LTR   @06,@06                                             0851 01940000
         BZ    @RF00851                                            0851 01941000
*             DO;                   /* THEN PREFORMAT        @ZA15685*/ 01942000
*               RPARM1=ARDHRBA;     /* SET PREFORMAT RBA.            */ 01943000
         LR    RPARM1,@05                                          0853 01944000
*I36:                                                              0854 01945000
*               DO;                 /* IDACALL(IDA019RK)             */ 01946000
I36      DS    0H                                                  0855 01947000
*                 CALL IDA019RK;    /* EXIT TO IDA019RK              */ 01948000
         L     @15,@CV00948                                        0855 01949000
         BALR  @14,@15                                             0855 01950000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01951000
         BALR @11,0                                                     01952000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01953000
         USING *,@11                                                    01954000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01955000
         L     @11,=A(@PSTART)                                          01956000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01957000
         USING @PSTART,@11                                              01958000
*               END I36;            /* CALL PREFORMAT.               */ 01959000
*               IF RPLERREG^='00'X THEN/* PREFORMAT ERROR.           */ 01960000
         CLI   RPLERREG(RRPL),0                                    0861 01961000
         BE    @RF00861                                            0861 01962000
*                 CALL EXIT;        /* RETURN.                       */ 01963000
         BAL   @14,EXIT                                            0862 01964000
*               ARDHRBA=RPARM1;     /* SET NEW HI-USED RBA.          */ 01965000
@RF00861 L     @10,AMBDSB(,RAMB)                                   0863 01966000
         L     @10,AMDPARDB(,@10)                                  0863 01967000
         ST    RPARM1,ARDHRBA(,@10)                                0863 01968000
*             END;                  /* END - PREFORMAT CALL  @ZA15685*/ 01969000
*         END;                      /* END OF PREFORMAT.             */ 01970000
@RF00851 DS    0H                                                  0866 01971000
*       DO WHILE PLHSAVE1=>ARDHRBA; /* PREFORMAT ALL CA'S WITH EMPTY    01972000
*                                      REC'S UP TO & INCLUDING CA OF    01973000
*                                      REQUESTED RECORD.             */ 01974000
@RF00839 B     @DE00866                                            0866 01975000
@DL00866 DS    0H                                                  0867 01976000
*         IF ARDHRBA=>ARDERBA THEN  /* OUT OF SPACE.                 */ 01977000
         L     @10,AMBDSB(,RAMB)                                   0867 01978000
         L     @10,AMDPARDB(,@10)                                  0867 01979000
         CLC   ARDHRBA(4,@10),ARDERBA(@10)                         0867 01980000
         BL    @RF00867                                            0867 01981000
*           DO;                     /* EOV ALLOCATE SPACE.           */ 01982000
*             PLHEOVR=AMBEOVAR;     /* SET ALLOCATE BY RBA.          */ 01983000
         MVI   PLHEOVR(RPLH),B'10000010'                           0869 01984000
*             PLHEOVPT=ADDR(ARDERBA);/* POINT TO END RBA.            */ 01985000
         LA    @10,ARDERBA(,@10)                                   0870 01986000
         ST    @10,PLHEOVPT(,RPLH)                                 0870 01987000
*I37:                                                              0871 01988000
*             DO;                   /* IDACALL(IDAEOVIF)             */ 01989000
I37      DS    0H                                                  0872 01990000
*               CALL IDAEOVIF;      /* EXIT TO IDAEOVIF              */ 01991000
         L     @15,@CV00955                                        0872 01992000
         BALR  @14,@15                                             0872 01993000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 01994000
         BALR @11,0                                                     01995000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 01996000
         USING *,@11                                                    01997000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 01998000
         L     @11,=A(@PSTART)                                          01999000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 02000000
         USING @PSTART,@11                                              02001000
*             END I37;              /* CALL EOV INTERFACE.           */ 02002000
*             IF RPLERREG^='00'X THEN/* EOV ERROR.                   */ 02003000
         CLI   RPLERREG(RRPL),0                                    0878 02004000
         BE    @RF00878                                            0878 02005000
*               CALL EXIT;          /* RETURN.                       */ 02006000
         BAL   @14,EXIT                                            0879 02007000
*             PLHARDB=ADDR(IDAARDB);/* SET PLH ARDB - MAY HAVE BEEN     02008000
*                                      ZEROED BY EOV PRFMT REQ.      */ 02009000
@RF00878 L     @10,AMBDSB(,RAMB)                                   0880 02010000
         L     @10,AMDPARDB(,@10)                                  0880 02011000
         ST    @10,PLHARDB(,RPLH)                                  0880 02012000
*             IF AMBSPEED=ON THEN   /* CREATE SPEED.                 */ 02013000
         TM    AMBSPEED(RAMB),B'00001000'                          0881 02014000
         BNO   @RF00881                                            0881 02015000
*               DO;                                                0882 02016000
*                 RPARM1=ARDHRBA;   /* SET PREFORMAT RBA.            */ 02017000
         L     RPARM1,ARDHRBA(,@10)                                0883 02018000
*I38:                                                              0884 02019000
*                 DO;               /* IDACALL(IDA019RK)             */ 02020000
I38      DS    0H                                                  0885 02021000
*                   CALL IDA019RK;  /* EXIT TO IDA019RK              */ 02022000
         L     @15,@CV00948                                        0885 02023000
         BALR  @14,@15                                             0885 02024000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 02025000
         BALR @11,0                                                     02026000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 02027000
         USING *,@11                                                    02028000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 02029000
         L     @11,=A(@PSTART)                                          02030000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 02031000
         USING @PSTART,@11                                              02032000
*                 END I38;          /* CALL PREFORMAT.               */ 02033000
*                 IF RPLERREG^='00'X THEN/* PREFORMAT ERROR.         */ 02034000
         CLI   RPLERREG(RRPL),0                                    0891 02035000
         BE    @RF00891                                            0891 02036000
*                   CALL EXIT;      /* RETURN.                       */ 02037000
         BAL   @14,EXIT                                            0892 02038000
*                 ARDHRBA=RPARM1;   /* SET HI-USED RBA TO NEXT CA.   */ 02039000
@RF00891 L     @10,AMBDSB(,RAMB)                                   0893 02040000
         L     @10,AMDPARDB(,@10)                                  0893 02041000
         ST    RPARM1,ARDHRBA(,@10)                                0893 02042000
*               END;                                               0894 02043000
*             ELSE                  /* NOT CREATE SPEED.             */ 02044000
*               ARDHRBA=ARDHRBA+AMDCINV*AMDCIPCA;/* BUMP HI=USED RBA    02045000
*                                      TO NEXT CA.                   */ 02046000
         B     @RC00881                                            0895 02047000
@RF00881 L     @10,AMBDSB(,RAMB)                                   0895 02048000
         L     @05,AMDPARDB(,@10)                                  0895 02049000
         L     @00,AMDCINV(,@10)                                   0895 02050000
         MH    @00,AMDCIPCA(,@10)                                  0895 02051000
         AL    @00,ARDHRBA(,@05)                                   0895 02052000
         ST    @00,ARDHRBA(,@05)                                   0895 02053000
*           END;                    /* END EOV ALLOCATE SPACE.       */ 02054000
*         ELSE                      /* NOT OUT OF SPACE.             */ 02055000
*           DO;                                                    0897 02056000
         B     @RC00867                                            0897 02057000
@RF00867 DS    0H                                                  0898 02058000
*             RPARM1=ARDHRBA;       /* SET PREFORMAT RBA.            */ 02059000
         L     @10,AMBDSB(,RAMB)                                   0898 02060000
         L     @10,AMDPARDB(,@10)                                  0898 02061000
         L     RPARM1,ARDHRBA(,@10)                                0898 02062000
*I39:                                                              0899 02063000
*             DO;                   /* IDACALL(IDA019RK)             */ 02064000
I39      DS    0H                                                  0900 02065000
*               CALL IDA019RK;      /* EXIT TO IDA019RK              */ 02066000
         L     @15,@CV00948                                        0900 02067000
         BALR  @14,@15                                             0900 02068000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 02069000
         BALR @11,0                                                     02070000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 02071000
         USING *,@11                                                    02072000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 02073000
         L     @11,=A(@PSTART)                                          02074000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 02075000
         USING @PSTART,@11                                              02076000
*             END I39;              /* CALL PREFORMAT.               */ 02077000
*             IF RPLERREG^='00'X THEN/* PREFORMAT ERROR.             */ 02078000
         CLI   RPLERREG(RRPL),0                                    0906 02079000
         BE    @RF00906                                            0906 02080000
*               CALL EXIT;          /* RETURN.                       */ 02081000
         BAL   @14,EXIT                                            0907 02082000
*             ARDHRBA=RPARM1;       /* SET HI-USED RBA TO NEXT CA.   */ 02083000
@RF00906 L     @10,AMBDSB(,RAMB)                                   0908 02084000
         L     @10,AMDPARDB(,@10)                                  0908 02085000
         ST    RPARM1,ARDHRBA(,@10)                                0908 02086000
*           END;                                                   0909 02087000
*       END;                        /* END OF DO LOOP.               */ 02088000
@RC00867 DS    0H                                                  0910 02089000
@DE00866 L     @10,AMBDSB(,RAMB)                                   0910 02090000
         L     @05,AMDPARDB(,@10)                                  0910 02091000
         L     @15,ARDHRBA(,@05)                                   0910 02092000
         CL    @15,PLHSAVE1(,RPLH)                                 0910 02093000
         BNH   @DL00866                                            0910 02094000
*       IF AMBSPEED=ON THEN         /* CREATE SPEED.                 */ 02095000
         TM    AMBSPEED(RAMB),B'00001000'                          0911 02096000
         BNO   @RF00911                                            0911 02097000
*         DO;                       /* YES, SET HRBA & HKRBA @ZA15685*/ 02098000
*           PLHSAVE2=ARDHRBA;       /* HIGH PREFORMATTED RBA @ZA15685*/ 02099000
         ST    @15,PLHSAVE2(,RPLH)                                 0913 02100000
*           ARDHRBA=PLHSAV1X-(PLHSAV1X//AMDCINV)+AMDCINV;/* RESET  0914 02101000
*                                      HI-USED RBA TO NEXT CI PAST 0914 02102000
*                                      CURRENT.              @ZA10887*/ 02103000
         L     @15,PLHSAV1X(,RPLH)                                 0914 02104000
         L     @10,AMDCINV(,@10)                                   0914 02105000
         LR    @07,@15                                             0914 02106000
         SLR   @06,@06                                             0914 02107000
         DR    @06,@10                                             0914 02108000
         SLR   @15,@06                                             0914 02109000
         ALR   @15,@10                                             0914 02110000
         ST    @15,ARDHRBA(,@05)                                   0914 02111000
*         END;                      /* END - CREATE SPEED    @ZA15685*/ 02112000
*     END;                          /* END GET SPACE NON-SEQ REQ.    */ 02113000
@RF00911 DS    0H                                                  0917 02114000
*   AMDNLR=(ARDHRBA/AMDCINV)*AMDNSLOT;/* SET TOTAL NO. OF RECS.      */ 02115000
@RC00804 L     @10,AMBDSB(,RAMB)                                   0917 02116000
         L     @05,AMDPARDB(,@10)                                  0917 02117000
         L     @15,ARDHRBA(,@05)                                   0917 02118000
         LR    @07,@15                                             0917 02119000
         SLR   @06,@06                                             0917 02120000
         D     @06,AMDCINV(,@10)                                   0917 02121000
         M     @06,AMDNSLOT(,@10)                                  0917 02122000
         ST    @07,AMDNLR(,@10)                                    0917 02123000
*   AMDASPA=ARDERBA-ARDHRBA;        /* SET NO. BYTES FREE SPACE.     */ 02124000
         LCR   @15,@15                                             0918 02125000
         AL    @15,ARDERBA(,@05)                                   0918 02126000
         ST    @15,AMDASPA(,@10)                                   0918 02127000
*   CALL EXIT;                      /* RETURN.                       */ 02128000
         BAL   @14,EXIT                                            0919 02129000
*   END GETSPACE;                   /* END PROC. GETSPACE.           */ 02130000
@EL00006 DS    0H                                                  0920 02131000
@EF00006 DS    0H                                                  0920 02132000
@ER00006 BR    @14                                                 0920 02133000
*BFRFMT:                                                           0921 02134000
*                                                                  0921 02135000
*   /*****************************************************************/ 02136000
*   /*                                                               */ 02137000
*   /* BUFFER FORMAT ROUTINE --- FORMATS BUFFER WITH EMPTY RECORDS.  */ 02138000
*   /* --- INPUT - PLHDBUFC = BUFC OF BUFFER TO BE FORMATTED. ---    */ 02139000
*   /* OUTPUT - FORMATTED BUFFER.                                    */ 02140000
*   /*                                                               */ 02141000
*   /*****************************************************************/ 02142000
*                                                                  0921 02143000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0921 02144000
BFRFMT   DS    0H                                                  0922 02145000
*   RFY                                                            0922 02146000
*     R14 RSTD;                     /* RESTRICT REG 14.              */ 02147000
*   RFY                                                            0923 02148000
*    (RWORK2,                                                      0923 02149000
*     RWORK3,                                                      0923 02150000
*     RWORK5) RSTD;                 /* RESTRICT WORK REGS.           */ 02151000
*   RFY                                                            0924 02152000
*     IDARDF BASED(RWORK5);         /* BASE RDF ON RWORK5.           */ 02153000
*   RWORK2=BUFCBAD;                 /* TO ADDRESS.                   */ 02154000
         L     @15,PLHDBUFC(,RPLH)                                 0925 02155000
         L     RWORK2,BUFCBAD(,@15)                                0925 02156000
*   RWORK3=AMDCINV;                 /* TO LENGTH.                    */ 02157000
         L     @15,AMBDSB(,RAMB)                                   0926 02158000
         L     RWORK3,AMDCINV(,@15)                                0926 02159000
*   RWORK5=ZERO;                    /* PAD CHAR. & FROM LENGTH.      */ 02160000
         SLR   RWORK5,RWORK5                                       0927 02161000
*   GEN(MVCL RWORK2,RWORK4);        /* SET BUFFER TO 0'S.            */ 02162000
         MVCL RWORK2,RWORK4                                             02163000
*   RFY                                                            0929 02164000
*     RWORK3 UNRSTD;                /* FREE REGISTER.                */ 02165000
*   RWORK5=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* POINT TO CIDF.         */ 02166000
         LA    @15,4                                               0930 02167000
         L     @10,PLHDBUFC(,RPLH)                                 0930 02168000
         L     @07,AMBDSB(,RAMB)                                   0930 02169000
         L     @05,AMDCINV(,@07)                                   0930 02170000
         L     RWORK5,BUFCBAD(,@10)                                0930 02171000
         ALR   RWORK5,@05                                          0930 02172000
         SLR   RWORK5,@15                                          0930 02173000
*   RWORK2=AMDNSLOT*PLHLRECL;       /* LENGTH OF RECORDS.            */ 02174000
         L     @10,AMDNSLOT(,@07)                                  0931 02175000
         LR    @07,@10                                             0931 02176000
         M     RWORK2,PLHLRECL(,RPLH)                              0931 02177000
         LR    RWORK2,@07                                          0931 02178000
*   RWORK5->CIDFOSET=RWORK2;        /* SET CIDF OFFSET.              */ 02179000
         STH   RWORK2,CIDFOSET(,RWORK5)                            0932 02180000
*   RWORK2=RWORK2+(AMDNSLOT*LENGTH(IDARDF))+LENGTH(IDACIDF);/* LENGTH   02181000
*                                      OF RECS, RDF'S & CIDF.        */ 02182000
         LR    @08,@10                                             0933 02183000
         MH    @08,@CH00157                                        0933 02184000
         ALR   @08,RWORK2                                          0933 02185000
         ALR   @08,@15                                             0933 02186000
         LR    RWORK2,@08                                          0933 02187000
*   RWORK5->CIDFLL=AMDCINV-RWORK2;  /* SET CIDF FS COUNT.            */ 02188000
         SLR   @05,RWORK2                                          0934 02189000
         STH   @05,CIDFLL(,RWORK5)                                 0934 02190000
*   DO RWORK2=AMDNSLOT TO 1 BY-1;   /* LOOP THRU ALL RDF'S.          */ 02191000
         LR    RWORK2,@10                                          0935 02192000
         B     @DE00935                                            0935 02193000
@DL00935 DS    0H                                                  0936 02194000
*     RWORK5=RWORK5-LENGTH(IDARDF); /* BACKUP RDF PTR.               */ 02195000
         SL    RWORK5,@CF00157                                     0936 02196000
*     RDFEMPTY=ON;                  /* SET RDF EMPTY RECORD.         */ 02197000
         OI    RDFEMPTY(RWORK5),B'00000100'                        0937 02198000
*     RDFLL=PLHLRECL;               /* SET RDF RECORD LENGTH.        */ 02199000
         MVC   RDFLL(2,RWORK5),PLHLRECL+2(RPLH)                    0938 02200000
*   END;                            /* END OF RDF LOOP.              */ 02201000
         BCTR  RWORK2,0                                            0939 02202000
@DE00935 CL    RWORK2,@CF00053                                     0939 02203000
         BNL   @DL00935                                            0939 02204000
*   RETURN;                         /* RETURN.                       */ 02205000
@EL00007 DS    0H                                                  0940 02206000
@EF00007 DS    0H                                                  0940 02207000
@ER00007 BR    @14                                                 0940 02208000
*   RFY                                                            0941 02209000
*    (RWORK2,                                                      0941 02210000
*     RWORK5) UNRSTD;               /* FREE REG'S.                   */ 02211000
*   RFY                                                            0942 02212000
*     IDARDF BASED;                 /* RESET RDF BASE.               */ 02213000
*   RFY                                                            0943 02214000
*     R14 UNRSTD;                   /* FREE REGISTER 14.             */ 02215000
*   END BFRFMT;                     /* END PROC BFRFMT.              */ 02216000
*EXIT:                                                             0945 02217000
*                                                                  0945 02218000
*   /*****************************************************************/ 02219000
*   /*                                                               */ 02220000
*   /* EXIT ROUTINE --- RESTORES REGISTER 14 FROM PLH PUSHDOWN LIST &*/ 02221000
*   /* RETURNS TO CALLER.                                            */ 02222000
*   /*                                                               */ 02223000
*   /*****************************************************************/ 02224000
*                                                                  0945 02225000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0945 02226000
EXIT     DS    0H                                                  0946 02227000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14.          */ 02228000
         IDARST14                                                       02229000
*   RETURN;                         /* RETURN TO CALLER.             */ 02230000
@EL00008 DS    0H                                                  0947 02231000
@EF00008 DS    0H                                                  0947 02232000
@ER00008 BR    @14                                                 0947 02233000
*   END EXIT;                       /* END PROC. EXIT.               */ 02234000
@PB00008 DS    0H                                                  0949 02235000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA.            */ 02236000
         IDAPATCH                                                       02237000
*   END IDA019RQ                    /* END MODULE IDA019RQ.          */ 02238000
*                                                                  0950 02239000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02240000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02241000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02242000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02243000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02244000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02245000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02246000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02247000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02248000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02249000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02250000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02251000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02252000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02253000
*                                                                  0950 02254000
*       ;                                                          0950 02255000
@EL00001 DS    0H                                                  0950 02256000
@EF00001 DS    0H                                                  0950 02257000
@ER00001 BR    @14                                                 0950 02258000
@DATA    DS    0H                                                       02259000
@DATD    DSECT                                                          02260000
         DS    0F                                                       02261000
IDA019RQ CSECT                                                          02262000
         DS    0F                                                       02263000
@CF00053 DC    F'1'                                                     02264000
@CF00157 DC    F'3'                                                     02265000
@CH00157 EQU   @CF00157+2                                               02266000
@CF00067 DC    F'4'                                                     02267000
@CF00288 DC    F'7'                                                     02268000
@DATD    DSECT                                                          02269000
         DS    0D                                                       02270000
IDA019RQ CSECT                                                          02271000
         DS    0F                                                       02272000
@SIZDATD DC    AL1(0)                                                   02273000
         DC    AL3(@ENDDATD-@DATD)                                      02274000
@CV00943 DC    V(IDAABF)                                                02275000
@CV00944 DC    V(IDAGNXT)                                               02276000
@CV00945 DC    V(IDAGNNFL)                                              02277000
@CV00946 DC    V(IDAWRBFR)                                              02278000
@CV00947 DC    V(IDAFREEB)                                              02279000
@CV00948 DC    V(IDA019RK)                                              02280000
@CV00949 DC    V(IDATJXIT)                                              02281000
@CV00950 DC    V(IDAGXCTL)                                              02282000
@CV00951 DC    V(IDADRQ)                                                02283000
@CV00952 DC    V(IDAGRB)                                                02284000
@CV00953 DC    V(IDASBF)                                                02285000
@CV00954 DC    V(IDAAIBF)                                               02286000
@CV00955 DC    V(IDAEOVIF)                                              02287000
@CV00956 DC    V(IDARRDRL)                                              02288000
         DS    0D                                                       02289000
HWORD4   DC    H'4'                                                     02290000
@CB00797 DC    X'0000'                                                  02291000
@DATD    DSECT                                                          02292000
*                                                          /*@X04SVLC*/ 02293000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02294000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02295000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02296000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02297000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02298000
RDFLEN   EQU   3                        LENGTH OF RDF                   02299000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02300000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02301000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02302000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02303000
@DATD    DSECT                                                          02304000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02305000
@ENDDATD EQU   *                                                        02306000
IDA019RQ CSECT                                                          02307000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02308000
@01      EQU   01                                                       02309000
@02      EQU   02                                                       02310000
@03      EQU   03                                                       02311000
@04      EQU   04                                                       02312000
@05      EQU   05                                                       02313000
@06      EQU   06                                                       02314000
@07      EQU   07                                                       02315000
@08      EQU   08                                                       02316000
@09      EQU   09                                                       02317000
@10      EQU   10                                                       02318000
@11      EQU   11                                                       02319000
@12      EQU   12                                                       02320000
@13      EQU   13                                                       02321000
@14      EQU   14                                                       02322000
@15      EQU   15                                                       02323000
RWORK0   EQU   @00                                                      02324000
RRPL     EQU   @01                                                      02325000
RPLH     EQU   @02                                                      02326000
RAMB     EQU   @03                                                      02327000
RBUFC    EQU   @04                                                      02328000
RWORK2   EQU   @06                                                      02329000
RWORK3   EQU   @07                                                      02330000
RWORK4   EQU   @08                                                      02331000
RWORK5   EQU   @09                                                      02332000
RPARM1   EQU   @12                                                      02333000
R14      EQU   @14                                                      02334000
RWORK1   EQU   @05                                                      02335000
R1       EQU   @01                                                      02336000
R10      EQU   @10                                                      02337000
R11      EQU   @11                                                      02338000
R13      EQU   @13                                                      02339000
R15      EQU   @15                                                      02340000
IFGRPL   EQU   0                                                        02341000
RPLCOMN  EQU   IFGRPL                                                   02342000
RPLIDWD  EQU   RPLCOMN                                                  02343000
RPLREQ   EQU   RPLIDWD+2                                                02344000
RPLLEN   EQU   RPLIDWD+3                                                02345000
RPLECB   EQU   RPLCOMN+8                                                02346000
RPLFDBWD EQU   RPLCOMN+12                                               02347000
RPLFDBK  EQU   RPLFDBWD+1                                               02348000
RPLRTNCD EQU   RPLFDBK                                                  02349000
RPLERREG EQU   RPLRTNCD                                                 02350000
RPLCNDCD EQU   RPLFDBK+1                                                02351000
RPLCMPON EQU   RPLCNDCD                                                 02352000
RPLFDB2  EQU   RPLCMPON                                                 02353000
RPLERRCD EQU   RPLCNDCD+1                                               02354000
RPLFDB3  EQU   RPLERRCD                                                 02355000
RPLKEYLE EQU   RPLCOMN+16                                               02356000
RPLDACB  EQU   RPLCOMN+24                                               02357000
RPLAREA  EQU   RPLCOMN+32                                               02358000
RPLARG   EQU   RPLCOMN+36                                               02359000
RPLOPTCD EQU   RPLCOMN+40                                               02360000
RPLOPT1  EQU   RPLOPTCD                                                 02361000
RPLLOC   EQU   RPLOPT1                                                  02362000
RPLDIR   EQU   RPLOPT1                                                  02363000
RPLSEQ   EQU   RPLOPT1                                                  02364000
RPLECBSW EQU   RPLOPT1                                                  02365000
RPLOPT2  EQU   RPLOPTCD+1                                               02366000
RPLADR   EQU   RPLOPT2                                                  02367000
RPLBWD   EQU   RPLOPT2                                                  02368000
RPLUPD   EQU   RPLOPT2                                                  02369000
RPLNSP   EQU   RPLOPT2                                                  02370000
RPLOPT3  EQU   RPLOPTCD+2                                               02371000
RPLNXTRP EQU   RPLCOMN+44                                               02372000
RPLRLEN  EQU   RPLCOMN+48                                               02373000
RPLOPTC2 EQU   RPLCOMN+56                                               02374000
RPLOPT5  EQU   RPLOPTC2                                                 02375000
RPLWRTYP EQU   RPLOPT5                                                  02376000
RPLOPT6  EQU   RPLOPTC2+1                                               02377000
RPLUNTYP EQU   RPLOPT6                                                  02378000
RPLOPT7  EQU   RPLOPTC2+2                                               02379000
RPLCNOPT EQU   RPLOPT7                                                  02380000
RPLOPT8  EQU   RPLOPTC2+3                                               02381000
RPLRBAR  EQU   RPLCOMN+60                                               02382000
RPLAIXID EQU   RPLRBAR+2                                                02383000
RPLDDDD  EQU   RPLRBAR+4                                                02384000
RPLEXTDS EQU   RPLCOMN+68                                               02385000
RPLEXTD1 EQU   RPLEXTDS                                                 02386000
IFGACB   EQU   0                                                        02387000
ACBCOMN  EQU   IFGACB                                                   02388000
ACBLENG  EQU   ACBCOMN+2                                                02389000
ACBLENG2 EQU   ACBLENG                                                  02390000
ACBAMBL  EQU   ACBCOMN+4                                                02391000
ACBJWA   EQU   ACBAMBL                                                  02392000
ACBMACRF EQU   ACBCOMN+12                                               02393000
ACBMACR1 EQU   ACBMACRF                                                 02394000
ACBADR   EQU   ACBMACR1                                                 02395000
ACBCNV   EQU   ACBMACR1                                                 02396000
ACBMACR2 EQU   ACBMACRF+1                                               02397000
ACBBUFPL EQU   ACBCOMN+20                                               02398000
ACBMACR3 EQU   ACBBUFPL                                                 02399000
ACBRECFM EQU   ACBCOMN+24                                               02400000
ACBCCTYP EQU   ACBCOMN+25                                               02401000
ACBOPT   EQU   ACBCOMN+26                                               02402000
ACBDSORG EQU   ACBOPT                                                   02403000
ACBCROPS EQU   ACBDSORG                                                 02404000
ACBEXLST EQU   ACBCOMN+36                                               02405000
ACBDDNM  EQU   ACBCOMN+40                                               02406000
ACBAMETH EQU   ACBDDNM+3                                                02407000
ACBOFLGS EQU   ACBCOMN+48                                               02408000
ACBEXFG  EQU   ACBOFLGS                                                 02409000
ACBIOSFG EQU   ACBOFLGS                                                 02410000
ACBINFLG EQU   ACBCOMN+50                                               02411000
ACBUJFCB EQU   ACBCOMN+52                                               02412000
ACBBLKSZ EQU   ACBCOMN+60                                               02413000
IDAAMBL  EQU   0                                                        02414000
AMBLEOV  EQU   IDAAMBL+12                                               02415000
AMBLEFLG EQU   AMBLEOV                                                  02416000
AMBLDDNM EQU   IDAAMBL+16                                               02417000
AMBLIDF  EQU   AMBLDDNM                                                 02418000
AMBLQ    EQU   AMBLIDF+7                                                02419000
AMBLVC   EQU   IDAAMBL+28                                               02420000
AMBLTYPE EQU   IDAAMBL+30                                               02421000
AMBLSHAR EQU   IDAAMBL+33                                               02422000
AMBLFLG1 EQU   IDAAMBL+35                                               02423000
AMBLFULL EQU   AMBLFLG1                                                 02424000
AMBLUPD  EQU   AMBLFLG1                                                 02425000
AMBLFLG2 EQU   IDAAMBL+36                                               02426000
IDAAMB   EQU   0                                                        02427000
AMBDSB   EQU   IDAAMB+20                                                02428000
AMBEOVR  EQU   IDAAMB+24                                                02429000
AMBFLG0  EQU   AMBEOVR                                                  02430000
AMBFLG1  EQU   IDAAMB+25                                                02431000
AMBCREAT EQU   AMBFLG1                                                  02432000
AMBSPEED EQU   AMBFLG1                                                  02433000
AMBJRN   EQU   AMBFLG1                                                  02434000
AMBINBUF EQU   AMBFLG1                                                  02435000
AMBDSORG EQU   IDAAMB+26                                                02436000
AMBIOBAD EQU   IDAAMB+28                                                02437000
AMBINFL  EQU   IDAAMB+42                                                02438000
AMBDEBPT EQU   IDAAMB+44                                                02439000
AMBOFLGS EQU   IDAAMB+48                                                02440000
AMBFLG2  EQU   IDAAMB+49                                                02441000
AMBEOVPT EQU   IDAAMB+56                                                02442000
AMBIWA   EQU   IDAAMB+64                                                02443000
AMBCSWD1 EQU   IDAAMB+84                                                02444000
AMBAFLG  EQU   AMBCSWD1                                                 02445000
AMBDFR   EQU   AMBAFLG                                                  02446000
IDAAMDSB EQU   0                                                        02447000
AMDATTR  EQU   IDAAMDSB+1                                               02448000
AMDNEST  EQU   IDAAMDSB+4                                               02449000
AMDCIPCA EQU   IDAAMDSB+12                                              02450000
AMDCINV  EQU   IDAAMDSB+20                                              02451000
AMDHLRBA EQU   IDAAMDSB+28                                              02452000
AMDNSLOT EQU   AMDHLRBA                                                 02453000
AMDSSRBA EQU   IDAAMDSB+32                                              02454000
AMDMAXRR EQU   AMDSSRBA                                                 02455000
AMDPARDB EQU   IDAAMDSB+36                                              02456000
AMDATTR3 EQU   IDAAMDSB+40                                              02457000
AMDSTAT  EQU   IDAAMDSB+48                                              02458000
AMDNLR   EQU   AMDSTAT+12                                               02459000
AMDDELR  EQU   AMDSTAT+16                                               02460000
AMDIREC  EQU   AMDSTAT+20                                               02461000
AMDUPR   EQU   AMDSTAT+24                                               02462000
AMDASPA  EQU   AMDSTAT+32                                               02463000
IDAPLHDR EQU   0                                                        02464000
IDAPLH   EQU   0                                                        02465000
PLHFLG1  EQU   IDAPLH+2                                                 02466000
PLHASKBF EQU   PLHFLG1                                                  02467000
PLHRDEXC EQU   PLHFLG1                                                  02468000
PLHFLG2  EQU   IDAPLH+3                                                 02469000
PLHUPD   EQU   PLHFLG2                                                  02470000
PLHEFLGS EQU   IDAPLH+4                                                 02471000
PLH1ST   EQU   PLHEFLGS                                                 02472000
PLHSKPER EQU   PLHEFLGS                                                 02473000
PLHNOADV EQU   PLHEFLGS                                                 02474000
PLHEODX  EQU   PLHEFLGS                                                 02475000
PLHINVAL EQU   PLHEFLGS                                                 02476000
PLHDSCAN EQU   PLHEFLGS                                                 02477000
PLHRSTRT EQU   PLHEFLGS+1                                               02478000
PLHFLG3  EQU   IDAPLH+6                                                 02479000
PLHRAHD  EQU   PLHFLG3                                                  02480000
PLHBWD   EQU   PLHFLG3                                                  02481000
PLHAFLGS EQU   IDAPLH+7                                                 02482000
PLHDRLM  EQU   PLHAFLGS                                                 02483000
PLHCRBA  EQU   IDAPLH+28                                                02484000
PLHJORBA EQU   PLHCRBA                                                  02485000
PLHJCODE EQU   IDAPLH+40                                                02486000
PLHRCODE EQU   IDAPLH+41                                                02487000
PLHEOVR  EQU   IDAPLH+42                                                02488000
PLHARDB  EQU   IDAPLH+44                                                02489000
PLHLRECL EQU   IDAPLH+48                                                02490000
PLHDBUFC EQU   IDAPLH+52                                                02491000
PLHRECP  EQU   IDAPLH+60                                                02492000
PLHFSP   EQU   IDAPLH+64                                                02493000
PLHRDFP  EQU   IDAPLH+68                                                02494000
PLHDIOB  EQU   IDAPLH+76                                                02495000
PLHSAVE1 EQU   IDAPLH+84                                                02496000
PLHSAVE2 EQU   IDAPLH+88                                                02497000
PLHRETO  EQU   IDAPLH+116                                               02498000
PLHRET1  EQU   IDAPLH+120                                               02499000
PLHEOVPT EQU   IDAPLH+180                                               02500000
PLHIXSPL EQU   IDAPLH+200                                               02501000
PLHSSRBA EQU   PLHIXSPL                                                 02502000
PLHHIREC EQU   PLHSSRBA                                                 02503000
PLHWAX   EQU   IDAPLH+232                                               02504000
PLHKEYPT EQU   IDAPLH+248                                               02505000
PLHEND   EQU   IDAPLH+280                                               02506000
PLHRRN   EQU   0                                                        02507000
IDABUFDR EQU   0                                                        02508000
BUFDRCIX EQU   IDABUFDR+9                                               02509000
BUFDRFLG EQU   IDABUFDR+11                                              02510000
IDABUFC  EQU   0                                                        02511000
BUFCAVL  EQU   IDABUFC                                                  02512000
BUFCFLG1 EQU   IDABUFC+1                                                02513000
BUFCINS  EQU   BUFCFLG1                                                 02514000
BUFCVAL  EQU   BUFCFLG1                                                 02515000
BUFCEXC  EQU   BUFCFLG1                                                 02516000
BUFCIOFL EQU   IDABUFC+2                                                02517000
BUFCMW   EQU   BUFCIOFL                                                 02518000
BUFCFLG2 EQU   IDABUFC+3                                                02519000
BUFCPLH  EQU   IDABUFC+4                                                02520000
BUFCDDDD EQU   IDABUFC+8                                                02521000
BUFCORBA EQU   IDABUFC+12                                               02522000
BUFCBAD  EQU   IDABUFC+20                                               02523000
BUFCINV  EQU   IDABUFC+28                                               02524000
BUFCNXT2 EQU   IDABUFC+37                                               02525000
BUFXIRBA EQU   IDABUFC+40                                               02526000
IDAARDB  EQU   0                                                        02527000
ARDTYPE  EQU   IDAARDB+1                                                02528000
ARDHRBA  EQU   IDAARDB+12                                               02529000
ARDERBA  EQU   IDAARDB+16                                               02530000
ARDPRF   EQU   IDAARDB+28                                               02531000
IDADIWA  EQU   0                                                        02532000
DIWATV   EQU   IDADIWA+1                                                02533000
DIWFLG1  EQU   IDADIWA+4                                                02534000
DIWFLG2  EQU   IDADIWA+5                                                02535000
DIWSAVE  EQU   IDADIWA+28                                               02536000
IDACIDF  EQU   0                                                        02537000
CIDFOSET EQU   IDACIDF                                                  02538000
CIDFLL   EQU   IDACIDF+2                                                02539000
IDARDF   EQU   0                                                        02540000
RDFRBYTE EQU   IDARDF                                                   02541000
RDFSEG   EQU   RDFRBYTE                                                 02542000
RDFEMPTY EQU   RDFRBYTE                                                 02543000
RDFLL    EQU   IDARDF+1                                                 02544000
IDADATA  EQU   0                                                        02545000
IDAKEY   EQU   0                                                        02546000
ARGFIELD EQU   0                                                        02547000
PLHKEY   EQU   0                                                        02548000
PLHPDL   EQU   0                                                        02549000
PLHPDLE  EQU   0                                                        02550000
PLHEXTEN EQU   PLHEND                                                   02551000
PLHBMWRK EQU   PLHEXTEN+5                                               02552000
PLHSAV1X EQU   PLHSAVE1                                                 02553000
BUFCRSC1 EQU   BUFCAVL                                                  02554000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02555000
PLHBMSV5 EQU   PLHEXTEN+24                                              02556000
PLHBMSV4 EQU   PLHEXTEN+20                                              02557000
PLHBMSV3 EQU   PLHEXTEN+16                                              02558000
PLHBMSV2 EQU   PLHEXTEN+12                                              02559000
PLHBMSV1 EQU   PLHEXTEN+8                                               02560000
PLHRDCNT EQU   PLHEXTEN+6                                               02561000
PLHBMSOV EQU   PLHBMWRK                                                 02562000
PLHBEUC  EQU   PLHBMWRK                                                 02563000
PLHBMRDF EQU   PLHBMWRK                                                 02564000
@NM00042 EQU   PLHEXTEN+4                                               02565000
PLHRESR1 EQU   PLHEXTEN                                                 02566000
KEY      EQU   IDAKEY                                                   02567000
AMDATA   EQU   IDADATA                                                  02568000
RDFREPL  EQU   RDFRBYTE                                                 02569000
RDF1ST   EQU   RDFSEG                                                   02570000
RDFNOT1  EQU   RDFSEG                                                   02571000
RDFCTNU  EQU   RDFRBYTE                                                 02572000
RDFTYPE  EQU   RDFRBYTE                                                 02573000
@NM00058 EQU   CIDFLL                                                   02574000
CIDFBUSY EQU   CIDFLL                                                   02575000
@NM00057 EQU   IDADIWA+92                                               02576000
@NM00056 EQU   IDADIWA+88                                               02577000
@NM00055 EQU   IDADIWA+84                                               02578000
@NM00054 EQU   IDADIWA+80                                               02579000
@NM00053 EQU   IDADIWA+76                                               02580000
@NM00052 EQU   IDADIWA+72                                               02581000
@NM00051 EQU   IDADIWA+68                                               02582000
@NM00050 EQU   IDADIWA+64                                               02583000
@NM00049 EQU   IDADIWA+60                                               02584000
@NM00048 EQU   IDADIWA+56                                               02585000
DIWINRBA EQU   IDADIWA+52                                               02586000
DIWRKCT  EQU   IDADIWA+48                                               02587000
DIWSAVE5 EQU   DIWSAVE+16                                               02588000
DIWSAVE4 EQU   DIWSAVE+12                                               02589000
DIWSAVE3 EQU   DIWSAVE+8                                                02590000
DIWSAVE2 EQU   DIWSAVE+4                                                02591000
DIWSAVE1 EQU   DIWSAVE                                                  02592000
DIWSPLTP EQU   IDADIWA+24                                               02593000
DIWBUFC  EQU   IDADIWA+20                                               02594000
DIWPLH   EQU   IDADIWA+16                                               02595000
DIWHRBA  EQU   IDADIWA+12                                               02596000
DIWLRBA  EQU   IDADIWA+8                                                02597000
@NM00047 EQU   IDADIWA+6                                                02598000
DIWFSPF  EQU   DIWFLG2                                                  02599000
DIW1ST   EQU   DIWFLG1                                                  02600000
DIWNOT1  EQU   DIWFLG1                                                  02601000
DIWSHIFT EQU   DIWFLG1                                                  02602000
DIWGSPC  EQU   DIWFLG1                                                  02603000
DIWEOKR  EQU   DIWFLG1                                                  02604000
DIWPFERR EQU   DIWFLG1                                                  02605000
DIWCISPL EQU   DIWFLG1                                                  02606000
DIWCAS   EQU   DIWFLG1                                                  02607000
DIWLEN   EQU   IDADIWA+2                                                02608000
DIWID    EQU   IDADIWA                                                  02609000
ARDKEYS  EQU   IDAARDB+29                                               02610000
@NM00046 EQU   ARDPRF                                                   02611000
ARDPRFMT EQU   ARDPRF                                                   02612000
ARDPRSS  EQU   ARDPRF                                                   02613000
ARDRELNO EQU   IDAARDB+26                                               02614000
ARDVOLSR EQU   IDAARDB+20                                               02615000
ARDHKRBA EQU   IDAARDB+8                                                02616000
ARDNPTR  EQU   IDAARDB+4                                                02617000
ARDLEN   EQU   IDAARDB+2                                                02618000
ARDUSED  EQU   ARDTYPE                                                  02619000
ARDEOD   EQU   ARDTYPE                                                  02620000
ARDUOVFL EQU   ARDTYPE                                                  02621000
ARDSS    EQU   ARDTYPE                                                  02622000
ARDHLI   EQU   ARDTYPE                                                  02623000
ARDKR    EQU   ARDTYPE                                                  02624000
ARDID    EQU   IDAARDB                                                  02625000
BUFCEND  EQU   IDABUFC+64                                               02626000
BUFCUCDN EQU   IDABUFC+60                                               02627000
BUFCUCUP EQU   IDABUFC+56                                               02628000
BUFCMDBT EQU   IDABUFC+52                                               02629000
BUFCHAIN EQU   IDABUFC+48                                               02630000
BUFXORBA EQU   IDABUFC+44                                               02631000
BUFCIDXL EQU   IDABUFC+36                                               02632000
BUFCDSPC EQU   IDABUFC+32                                               02633000
BUFCWLEN EQU   BUFCINV                                                  02634000
BUFCNXT1 EQU   IDABUFC+24                                               02635000
BUFCCPA  EQU   IDABUFC+16                                               02636000
BUFCAMB  EQU   BUFCPLH                                                  02637000
@NM00045 EQU   BUFCFLG2                                                 02638000
BUFCEOD  EQU   BUFCFLG2                                                 02639000
BUFCBSYW EQU   BUFCFLG2                                                 02640000
BUFCBSYR EQU   BUFCFLG2                                                 02641000
BUFCNLAS EQU   BUFCFLG2                                                 02642000
BUFCXDDR EQU   BUFCFLG2                                                 02643000
BUFCFIX  EQU   BUFCIOFL                                                 02644000
BUFCPFCP EQU   BUFCIOFL                                                 02645000
BUFCXEDB EQU   BUFCIOFL                                                 02646000
BUFCWC   EQU   BUFCIOFL                                                 02647000
BUFCREAL EQU   BUFCIOFL                                                 02648000
BUFCRRD  EQU   BUFCIOFL                                                 02649000
BUFCFMT  EQU   BUFCIOFL                                                 02650000
BUFCEPT  EQU   BUFCFLG1                                                 02651000
BUFCER2  EQU   BUFCFLG1                                                 02652000
BUFCER1  EQU   BUFCFLG1                                                 02653000
BUFCSEG  EQU   BUFCFLG1                                                 02654000
BUFCUPG  EQU   BUFCFLG1                                                 02655000
BUFCUCNT EQU   BUFCAVL                                                  02656000
@NM00044 EQU   IDABUFDR+16                                              02657000
BUFDBUFC EQU   IDABUFDR+12                                              02658000
@NM00043 EQU   BUFDRFLG                                                 02659000
BUFDRAVL EQU   BUFDRFLG                                                 02660000
BUFDRREL EQU   BUFDRFLG                                                 02661000
BUFDRTSB EQU   IDABUFDR+10                                              02662000
BUFDRMAX EQU   BUFDRCIX                                                 02663000
BUFDRPFN EQU   IDABUFDR+8                                               02664000
BUFDRPFB EQU   IDABUFDR+4                                               02665000
BUFDRLEN EQU   IDABUFDR+2                                               02666000
BUFDRNO  EQU   IDABUFDR+1                                               02667000
BUFDRID  EQU   IDABUFDR                                                 02668000
PLHERRET EQU   IDAPLH+276                                               02669000
PLHASCB  EQU   IDAPLH+272                                               02670000
PLHECB   EQU   IDAPLH+268                                               02671000
@NM00041 EQU   IDAPLH+265                                               02672000
PLHDRMSK EQU   IDAPLH+264                                               02673000
PLHR13   EQU   IDAPLH+260                                               02674000
PLHPARM1 EQU   IDAPLH+256                                               02675000
PLHDRRSC EQU   IDAPLH+252                                               02676000
PLHSLRBA EQU   IDAPLH+244                                               02677000
PLHSRCSG EQU   IDAPLH+242                                               02678000
PLHNOSEG EQU   IDAPLH+240                                               02679000
PLHLLOR  EQU   IDAPLH+236                                               02680000
PLHXPLH  EQU   PLHWAX                                                   02681000
@NM00040 EQU   PLHIXSPL+8                                               02682000
PLHIXBFC EQU   PLHIXSPL+4                                               02683000
PLHISPLP EQU   IDAPLH+196                                               02684000
PLHRBUFC EQU   IDAPLH+192                                               02685000
PLHIBUFC EQU   IDAPLH+188                                               02686000
PLHNRBA  EQU   IDAPLH+184                                               02687000
PLHDDDD  EQU   PLHEOVPT                                                 02688000
PLHAR14  EQU   IDAPLH+176                                               02689000
@NM00039 EQU   IDAPLH+172                                               02690000
@NM00038 EQU   IDAPLH+168                                               02691000
PLHASAVE EQU   IDAPLH+164                                               02692000
PLHRETOS EQU   IDAPLH+118                                               02693000
PLHCHAIN EQU   IDAPLH+112                                               02694000
PLHAMB   EQU   IDAPLH+108                                               02695000
PLHSAVE6 EQU   IDAPLH+104                                               02696000
PLHSAVE5 EQU   IDAPLH+100                                               02697000
PLHSAVE4 EQU   IDAPLH+96                                                02698000
PLHSAVE3 EQU   IDAPLH+92                                                02699000
PLHARET  EQU   IDAPLH+80                                                02700000
PLHIIOB  EQU   PLHDIOB                                                  02701000
PLHSRSID EQU   IDAPLH+74                                                02702000
PLHRDFC  EQU   IDAPLH+72                                                02703000
PLHNBUFC EQU   IDAPLH+56                                                02704000
@NM00037 EQU   IDAPLH+43                                                02705000
PLHUCODE EQU   PLHJCODE                                                 02706000
PLHJNRBA EQU   IDAPLH+36                                                02707000
PLHJRNLL EQU   IDAPLH+32                                                02708000
PLHUPECB EQU   PLHJORBA                                                 02709000
PLHDSIDA EQU   IDAPLH+24                                                02710000
PLHCRPL  EQU   IDAPLH+20                                                02711000
PLHMRPL  EQU   IDAPLH+16                                                02712000
PLHBFRNO EQU   IDAPLH+15                                                02713000
PLHFRCNT EQU   IDAPLH+14                                                02714000
PLHRMIN  EQU   IDAPLH+13                                                02715000
PLHDSTYP EQU   IDAPLH+12                                                02716000
PLHACB   EQU   IDAPLH+8                                                 02717000
PLHRAE   EQU   PLHAFLGS                                                 02718000
PLHRABWD EQU   PLHAFLGS                                                 02719000
PLHIOSID EQU   PLHAFLGS                                                 02720000
PLHDBDC  EQU   PLHAFLGS                                                 02721000
PLHVAMB  EQU   PLHAFLGS                                                 02722000
PLHIOSRQ EQU   PLHAFLGS                                                 02723000
PLHEOVDF EQU   PLHFLG3                                                  02724000
PLHRVRS  EQU   PLHFLG3                                                  02725000
PLHSLVLD EQU   PLHFLG3                                                  02726000
PLHSRBSG EQU   PLHFLG3                                                  02727000
@NM00036 EQU   PLHEFLGS+1                                               02728000
PLHSRINV EQU   PLHEFLGS                                                 02729000
PLHNOSPC EQU   PLHEFLGS                                                 02730000
PLHIWAIT EQU   PLHFLG2                                                  02731000
PLHSVADV EQU   PLHFLG2                                                  02732000
PLHCIINS EQU   PLHFLG2                                                  02733000
PLHKRE   EQU   PLHFLG2                                                  02734000
PLHADDTE EQU   PLHFLG2                                                  02735000
PLHKEYMD EQU   PLHFLG2                                                  02736000
PLHSQINS EQU   PLHFLG2                                                  02737000
@NM00035 EQU   PLHFLG1                                                  02738000
PLHDRPND EQU   PLHFLG1                                                  02739000
PLHASYRQ EQU   PLHFLG1                                                  02740000
PLHSSR   EQU   PLHFLG1                                                  02741000
PLHENDRQ EQU   PLHFLG1                                                  02742000
PLHEOVW  EQU   PLHFLG1                                                  02743000
PLHATV   EQU   IDAPLH+1                                                 02744000
PLHAVL   EQU   IDAPLH                                                   02745000
PLHIOSDQ EQU   IDAPLHDR+12                                              02746000
PLHDRCUR EQU   IDAPLHDR+10                                              02747000
PLHDRMAX EQU   IDAPLHDR+8                                               02748000
PLHDRREQ EQU   IDAPLHDR+4                                               02749000
PLHELTH  EQU   IDAPLHDR+2                                               02750000
PLHCNT   EQU   IDAPLHDR+1                                               02751000
PLHID    EQU   IDAPLHDR                                                 02752000
AMDEXCP  EQU   AMDSTAT+44                                               02753000
AMDNCAS  EQU   AMDSTAT+40                                               02754000
AMDNCIS  EQU   AMDSTAT+36                                               02755000
AMDRETR  EQU   AMDSTAT+28                                               02756000
AMDNEXT  EQU   AMDSTAT+10                                               02757000
AMDNIL   EQU   AMDSTAT+8                                                02758000
AMDSTSP  EQU   AMDSTAT                                                  02759000
@NM00034 EQU   IDAAMDSB+41                                              02760000
@NM00033 EQU   AMDATTR3                                                 02761000
AMDLM    EQU   AMDATTR3                                                 02762000
AMDWAIT  EQU   AMDATTR3                                                 02763000
AMDBIND  EQU   AMDATTR3                                                 02764000
AMDFAULT EQU   AMDATTR3                                                 02765000
AMDUNQ   EQU   AMDATTR3                                                 02766000
AMDLRECL EQU   IDAAMDSB+24                                              02767000
AMDFSCI  EQU   IDAAMDSB+16                                              02768000
AMDFSCA  EQU   IDAAMDSB+14                                              02769000
AMDPCTCI EQU   IDAAMDSB+11                                              02770000
AMDPCTCA EQU   IDAAMDSB+10                                              02771000
AMDKEYLN EQU   IDAAMDSB+8                                               02772000
AMDRKP   EQU   IDAAMDSB+6                                               02773000
AMDAXRKP EQU   AMDNEST                                                  02774000
AMDLEN   EQU   IDAAMDSB+2                                               02775000
AMDSPAN  EQU   AMDATTR                                                  02776000
AMDRRDS  EQU   AMDATTR                                                  02777000
AMDRANGE EQU   AMDATTR                                                  02778000
AMDORDER EQU   AMDATTR                                                  02779000
AMDREPL  EQU   AMDATTR                                                  02780000
AMDSDT   EQU   AMDATTR                                                  02781000
AMDWCK   EQU   AMDATTR                                                  02782000
AMDDST   EQU   AMDATTR                                                  02783000
AMDSBID  EQU   IDAAMDSB                                                 02784000
AMBTRACE EQU   IDAAMB+120                                               02785000
AMBVIOT  EQU   IDAAMB+116                                               02786000
AMBSZCP  EQU   IDAAMB+114                                               02787000
AMBSZFW  EQU   IDAAMB+112                                               02788000
AMBSZWR  EQU   IDAAMB+110                                               02789000
AMBSZRD  EQU   IDAAMB+108                                               02790000
AMBEXEX  EQU   IDAAMB+100                                               02791000
AMBWSHD  EQU   IDAAMB+96                                                02792000
AMBCPA   EQU   IDAAMB+92                                                02793000
AMBBM2SH EQU   IDAAMB+88                                                02794000
AMBRDCNT EQU   AMBCSWD1+2                                               02795000
@NM00032 EQU   AMBCSWD1+1                                               02796000
@NM00031 EQU   AMBAFLG                                                  02797000
AMBCFX   EQU   AMBAFLG                                                  02798000
AMBSIS   EQU   AMBAFLG                                                  02799000
AMBICI   EQU   AMBAFLG                                                  02800000
AMBGSR   EQU   AMBAFLG                                                  02801000
AMBLSR   EQU   AMBAFLG                                                  02802000
@NM00030 EQU   AMBAFLG                                                  02803000
AMBUPLH  EQU   IDAAMB+80                                                02804000
AMBPAMBL EQU   IDAAMB+76                                                02805000
AMBPIXP  EQU   IDAAMB+72                                                02806000
@NM00029 EQU   IDAAMB+68                                                02807000
AMBWKA   EQU   IDAAMB+60                                                02808000
AMBAMBXN EQU   AMBEOVPT                                                 02809000
AMBEDB   EQU   IDAAMB+52                                                02810000
AMBRPT   EQU   IDAAMB+50                                                02811000
AMBPUG   EQU   AMBFLG2                                                  02812000
AMBBUSY  EQU   AMBOFLGS                                                 02813000
AMBEXFG  EQU   AMBOFLGS                                                 02814000
@NM00028 EQU   AMBOFLGS                                                 02815000
AMBOPEN  EQU   AMBOFLGS                                                 02816000
@NM00027 EQU   AMBOFLGS                                                 02817000
AMBDEBAD EQU   AMBDEBPT+1                                               02818000
AMBIFLGS EQU   AMBDEBPT                                                 02819000
AMBAMETH EQU   IDAAMB+43                                                02820000
AMBUPX   EQU   AMBINFL                                                  02821000
AMBUCRA  EQU   AMBINFL                                                  02822000
AMBSCRA  EQU   AMBINFL                                                  02823000
AMBCAT   EQU   AMBINFL                                                  02824000
@NM00026 EQU   AMBINFL                                                  02825000
@NM00025 EQU   AMBINFL                                                  02826000
AMBTIOT  EQU   IDAAMB+40                                                02827000
@NM00024 EQU   IDAAMB+38                                                02828000
AMBDDSN  EQU   IDAAMB+35                                                02829000
AMBCDSN  EQU   IDAAMB+32                                                02830000
AMBIOMB  EQU   AMBIOBAD                                                 02831000
@NM00023 EQU   AMBDSORG+1                                               02832000
AMBDORGA EQU   AMBDSORG+1                                               02833000
@NM00022 EQU   AMBDSORG                                                 02834000
AMBUBF   EQU   AMBFLG1                                                  02835000
AMBPCAT  EQU   AMBFLG1                                                  02836000
AMBMCAT  EQU   AMBFLG1                                                  02837000
AMBTYPE  EQU   AMBFLG1                                                  02838000
@NM00021 EQU   AMBFLG0                                                  02839000
AMBPSDS  EQU   AMBFLG0                                                  02840000
AMBCACB  EQU   IDAAMB+16                                                02841000
AMBPH    EQU   IDAAMB+12                                                02842000
AMBBUFC  EQU   IDAAMB+8                                                 02843000
AMBLINK  EQU   IDAAMB+4                                                 02844000
AMBLEN   EQU   IDAAMB+2                                                 02845000
AMBRSC   EQU   IDAAMB+1                                                 02846000
AMBID    EQU   IDAAMB                                                   02847000
AMBLCMB  EQU   IDAAMBL+64                                               02848000
AMBLBIB  EQU   IDAAMBL+60                                               02849000
AMBLIX   EQU   IDAAMBL+56                                               02850000
AMBLDTA  EQU   IDAAMBL+52                                               02851000
AMBLMIDS EQU   IDAAMBL+42                                               02852000
AMBLNIDS EQU   IDAAMBL+41                                               02853000
@NM00020 EQU   IDAAMBL+40                                               02854000
AMBLNUM  EQU   IDAAMBL+38                                               02855000
AMBLNST  EQU   IDAAMBL+37                                               02856000
@NM00019 EQU   AMBLFLG2                                                 02857000
AMBLSTAG EQU   AMBLFLG2                                                 02858000
@NM00018 EQU   AMBLFLG2                                                 02859000
AMBLDUMY EQU   AMBLFLG1                                                 02860000
AMBLCAT  EQU   AMBLFLG1                                                 02861000
AMBLUCRA EQU   AMBLFLG1                                                 02862000
AMBLSCRA EQU   AMBLFLG1                                                 02863000
AMBLVVIC EQU   AMBLFLG1                                                 02864000
AMBLCINV EQU   AMBLFLG1                                                 02865000
AMBLLEN  EQU   IDAAMBL+34                                               02866000
@NM00017 EQU   AMBLSHAR                                                 02867000
AMBLWRIT EQU   AMBLSHAR                                                 02868000
AMBLCATO EQU   AMBLSHAR                                                 02869000
AMBLPRIM EQU   AMBLSHAR                                                 02870000
AMBLID   EQU   IDAAMBL+32                                               02871000
@NM00016 EQU   IDAAMBL+31                                               02872000
@NM00015 EQU   AMBLTYPE                                                 02873000
AMBLFIX  EQU   AMBLTYPE                                                 02874000
AMBLBASE EQU   AMBLTYPE                                                 02875000
AMBLAIX  EQU   AMBLTYPE                                                 02876000
AMBLUPGR EQU   AMBLTYPE                                                 02877000
AMBLPATH EQU   AMBLTYPE                                                 02878000
AMBLENO  EQU   AMBLVC+1                                                 02879000
AMBLVRT  EQU   AMBLVC                                                   02880000
AMBLXPT  EQU   IDAAMBL+24                                               02881000
AMBLDFR  EQU   AMBLQ                                                    02882000
AMBLESDS EQU   AMBLQ                                                    02883000
AMBLKSDS EQU   AMBLQ                                                    02884000
AMBLUBF  EQU   AMBLQ                                                    02885000
AMBLFSTP EQU   AMBLQ                                                    02886000
AMBLLSR  EQU   AMBLQ                                                    02887000
AMBLGSR  EQU   AMBLQ                                                    02888000
AMBLDDC  EQU   AMBLQ                                                    02889000
AMBLDCI  EQU   AMBLIDF+4                                                02890000
AMBLCACB EQU   AMBLIDF                                                  02891000
@NM00014 EQU   AMBLEOV+2                                                02892000
AMBLCOMP EQU   AMBLEOV+1                                                02893000
AMBLESET EQU   AMBLEFLG                                                 02894000
AMBLWAIT EQU   AMBLEFLG                                                 02895000
AMBLACB  EQU   IDAAMBL+8                                                02896000
AMBLSCHN EQU   IDAAMBL+4                                                02897000
AMBLPCHN EQU   IDAAMBL                                                  02898000
ACBAPID  EQU   ACBCOMN+72                                               02899000
ACBCBMWA EQU   ACBCOMN+68                                               02900000
ACBUAPTR EQU   ACBCOMN+64                                               02901000
ACBLRECL EQU   ACBCOMN+62                                               02902000
ACBMSGLN EQU   ACBBLKSZ                                                 02903000
ACBBUFSP EQU   ACBCOMN+56                                               02904000
@NM00013 EQU   ACBUJFCB+1                                               02905000
ACBOPTN  EQU   ACBUJFCB                                                 02906000
ACBVVIC  EQU   ACBINFLG                                                 02907000
ACBUCRA  EQU   ACBINFLG                                                 02908000
ACBSCRA  EQU   ACBINFLG                                                 02909000
ACBCAT   EQU   ACBINFLG                                                 02910000
ACBIJRQE EQU   ACBINFLG                                                 02911000
ACBJEPS  EQU   ACBINFLG                                                 02912000
@NM00012 EQU   ACBINFLG                                                 02913000
ACBERFLG EQU   ACBCOMN+49                                               02914000
ACBBUSY  EQU   ACBIOSFG                                                 02915000
ACBLOCK  EQU   ACBEXFG                                                  02916000
@NM00011 EQU   ACBOFLGS                                                 02917000
ACBDSERR EQU   ACBOFLGS                                                 02918000
ACBOPEN  EQU   ACBOFLGS                                                 02919000
ACBEOV   EQU   ACBOFLGS                                                 02920000
@NM00010 EQU   ACBOFLGS                                                 02921000
ACBDEB   EQU   ACBDDNM+5                                                02922000
ACBERFL  EQU   ACBDDNM+4                                                02923000
ACBAM    EQU   ACBAMETH                                                 02924000
ACBINFL  EQU   ACBDDNM+2                                                02925000
ACBTIOT  EQU   ACBDDNM                                                  02926000
ACBUEL   EQU   ACBEXLST                                                 02927000
ACBPASSW EQU   ACBCOMN+32                                               02928000
ACBMSGAR EQU   ACBCOMN+28                                               02929000
@NM00009 EQU   ACBDSORG+1                                               02930000
ACBDORGA EQU   ACBDSORG+1                                               02931000
@NM00008 EQU   ACBDSORG                                                 02932000
ACBCRNRE EQU   ACBCROPS                                                 02933000
ACBCRNCK EQU   ACBCROPS                                                 02934000
ACBASA   EQU   ACBCCTYP                                                 02935000
@NM00007 EQU   ACBCCTYP                                                 02936000
ACBRECAF EQU   ACBRECFM                                                 02937000
ACBJBUF  EQU   ACBBUFPL+2                                               02938000
ACBMACR4 EQU   ACBBUFPL+1                                               02939000
@NM00006 EQU   ACBMACR3                                                 02940000
ACBNCFX  EQU   ACBMACR3                                                 02941000
ACBSIS   EQU   ACBMACR3                                                 02942000
ACBDFR   EQU   ACBMACR3                                                 02943000
ACBICI   EQU   ACBMACR3                                                 02944000
ACBGSR   EQU   ACBMACR3                                                 02945000
ACBLSR   EQU   ACBMACR3                                                 02946000
@NM00005 EQU   ACBMACR3                                                 02947000
ACBBUFNI EQU   ACBCOMN+18                                               02948000
ACBBUFND EQU   ACBCOMN+16                                               02949000
ACBSTRNO EQU   ACBCOMN+15                                               02950000
ACBBSTNO EQU   ACBCOMN+14                                               02951000
ACBAIX   EQU   ACBMACR2                                                 02952000
ACBDSN   EQU   ACBMACR2                                                 02953000
ACBRST   EQU   ACBMACR2                                                 02954000
ACBLOGON EQU   ACBMACR2                                                 02955000
ACBSKP   EQU   ACBMACR2                                                 02956000
@NM00004 EQU   ACBMACR2                                                 02957000
ACBUBF   EQU   ACBMACR1                                                 02958000
ACBOUT   EQU   ACBMACR1                                                 02959000
ACBIN    EQU   ACBMACR1                                                 02960000
ACBDIR   EQU   ACBMACR1                                                 02961000
ACBSEQ   EQU   ACBMACR1                                                 02962000
ACBBLK   EQU   ACBCNV                                                   02963000
ACBADD   EQU   ACBADR                                                   02964000
ACBKEY   EQU   ACBMACR1                                                 02965000
ACBINRTN EQU   ACBCOMN+8                                                02966000
ACBIBCT  EQU   ACBJWA                                                   02967000
ACBLEN2  EQU   ACBLENG2                                                 02968000
ACBSTYP  EQU   ACBCOMN+1                                                02969000
ACBID    EQU   ACBCOMN                                                  02970000
RPLERMSA EQU   RPLCOMN+72                                               02971000
RPLEMLEN EQU   RPLCOMN+70                                               02972000
RPLACTIV EQU   RPLCOMN+69                                               02973000
RPLBRANC EQU   RPLEXTD1                                                 02974000
RPLNIB   EQU   RPLEXTD1                                                 02975000
@NM00003 EQU   RPLEXTD1                                                 02976000
RPLEXIT  EQU   RPLEXTD1                                                 02977000
RPLNEXIT EQU   RPLEXTD1                                                 02978000
RPLEXSCH EQU   RPLEXTD1                                                 02979000
@NM00002 EQU   RPLRBAR+3                                                02980000
@NM00001 EQU   RPLAIXID                                                 02981000
RPLAXPKP EQU   RPLAIXID                                                 02982000
RPLAIXPC EQU   RPLRBAR                                                  02983000
RPLRSV88 EQU   RPLOPT8                                                  02984000
RPLUNCON EQU   RPLOPT8                                                  02985000
RPLACTV  EQU   RPLOPT8                                                  02986000
RPLSESS  EQU   RPLOPT8                                                  02987000
RPLPEND  EQU   RPLOPT8                                                  02988000
RPLODPRM EQU   RPLOPT8                                                  02989000
RPLODACP EQU   RPLOPT8                                                  02990000
RPLODACQ EQU   RPLOPT8                                                  02991000
RPLRSV78 EQU   RPLOPT7                                                  02992000
RPLRSV77 EQU   RPLOPT7                                                  02993000
RPLRLSOP EQU   RPLOPT7                                                  02994000
RPLTPOST EQU   RPLOPT7                                                  02995000
RPLQOPT  EQU   RPLOPT7                                                  02996000
RPLCNIMM EQU   RPLCNOPT                                                 02997000
RPLCNANY EQU   RPLCNOPT                                                 02998000
RPLCNALL EQU   RPLCNOPT                                                 02999000
RPLRSV68 EQU   RPLOPT6                                                  03000000
RPLRSV67 EQU   RPLOPT6                                                  03001000
RPLLOCK  EQU   RPLOPT6                                                  03002000
RPLNCOND EQU   RPLOPT6                                                  03003000
RPLCOND  EQU   RPLOPT6                                                  03004000
RPLEOT   EQU   RPLUNTYP                                                 03005000
RPLEOM   EQU   RPLUNTYP                                                 03006000
RPLEOB   EQU   RPLUNTYP                                                 03007000
RPLWROPT EQU   RPLOPT5                                                  03008000
RPLNODE  EQU   RPLOPT5                                                  03009000
RPLERACE EQU   RPLWRTYP                                                 03010000
RPLEAU   EQU   RPLWRTYP                                                 03011000
RPLNERAS EQU   RPLWRTYP                                                 03012000
RPLPSOPT EQU   RPLOPT5                                                  03013000
RPLSSNIN EQU   RPLOPT5                                                  03014000
RPLDLGIN EQU   RPLOPT5                                                  03015000
RPLBUFL  EQU   RPLCOMN+52                                               03016000
RPLCHAIN EQU   RPLNXTRP                                                 03017000
RPLOPT4  EQU   RPLOPTCD+3                                               03018000
RPLALIGN EQU   RPLOPT3                                                  03019000
RPLFMT   EQU   RPLOPT3                                                  03020000
RPLFLD   EQU   RPLOPT3                                                  03021000
RPLVFY   EQU   RPLOPT3                                                  03022000
RPLBLK   EQU   RPLOPT3                                                  03023000
RPLSFORM EQU   RPLOPT3                                                  03024000
RPLEODS  EQU   RPLOPT3                                                  03025000
RPLWAITX EQU   RPLOPT2                                                  03026000
RPLLRD   EQU   RPLOPT2                                                  03027000
RPLCNV   EQU   RPLOPT2                                                  03028000
RPLADD   EQU   RPLADR                                                   03029000
RPLKEY   EQU   RPLOPT2                                                  03030000
RPLECBIN EQU   RPLECBSW                                                 03031000
RPLGEN   EQU   RPLOPT1                                                  03032000
RPLKGE   EQU   RPLOPT1                                                  03033000
RPLASY   EQU   RPLOPT1                                                  03034000
RPLSKP   EQU   RPLOPT1                                                  03035000
RPLDAF   EQU   RPLARG+2                                                 03036000
RPLSAF   EQU   RPLARG                                                   03037000
RPLTCBPT EQU   RPLCOMN+28                                               03038000
RPLCCHAR EQU   RPLCOMN+20                                               03039000
RPLSTRID EQU   RPLCOMN+18                                               03040000
RPLKEYL  EQU   RPLKEYLE                                                 03041000
RPLRDSOH EQU   RPLFDB3                                                  03042000
RPLRLG   EQU   RPLFDB3                                                  03043000
RPLLGFRC EQU   RPLFDB3                                                  03044000
RPLREOT  EQU   RPLFDB3                                                  03045000
RPLREOM  EQU   RPLFDB3                                                  03046000
RPLREOB  EQU   RPLFDB3                                                  03047000
RPLSV32  EQU   RPLFDB3                                                  03048000
RPLUINPT EQU   RPLFDB3                                                  03049000
RPLSTSAV EQU   RPLFDB2                                                  03050000
RPLCUERR EQU   RPLFDB2                                                  03051000
RPLDLGFL EQU   RPLFDB2                                                  03052000
RPLIOERR EQU   RPLFDB2                                                  03053000
RPLDVUNS EQU   RPLFDB2                                                  03054000
RPLATND  EQU   RPLFDB2                                                  03055000
RPLRVID  EQU   RPLFDB2                                                  03056000
RPLERLK  EQU   RPLFDB2                                                  03057000
RPLSTAT  EQU   RPLFDBWD                                                 03058000
RPLPOST  EQU   RPLECB                                                   03059000
RPLWAIT  EQU   RPLECB                                                   03060000
RPLPLHPT EQU   RPLCOMN+4                                                03061000
RPLLEN2  EQU   RPLLEN                                                   03062000
RPLSTYP  EQU   RPLIDWD+1                                                03063000
RPLID    EQU   RPLIDWD                                                  03064000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03065000
@RF00289 EQU   @RC00287                                                 03066000
@RF00433 EQU   @RC00431                                                 03067000
@RF00436 EQU   @RC00431                                                 03068000
@RF00445 EQU   @RC00442                                                 03069000
@RF00467 EQU   @RC00457                                                 03070000
@RF00523 EQU   @RC00495                                                 03071000
@RC00423 EQU   @EL00003                                                 03072000
@RF00573 EQU   @RC00564                                                 03073000
@RF00823 EQU   @RC00804                                                 03074000
@RC00806 EQU   @RC00804                                                 03075000
@RC00881 EQU   @RC00867                                                 03076000
@PB00007 EQU   @PB00008                                                 03077000
@RC00819 EQU   @RC00806                                                 03078000
@PB00006 EQU   @PB00007                                                 03079000
@PB00005 EQU   @PB00006                                                 03080000
@PB00004 EQU   @PB00005                                                 03081000
@PB00003 EQU   @PB00004                                                 03082000
@PB00002 EQU   @PB00003                                                 03083000
@ENDDATA EQU   *                                                        03084000
         END   IDA019RQ,(C'PLS2115',0701,78172)                         03085000
