         TITLE 'IDA019RR - VSAM RELATIVE RECORD DRIVER                 *00001000
                        '                                               00002000
IDA019RR CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RR  78.172'                                 0001 00009000
IDARRDRL DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00270-IDARRDRL)                                   00013000
         ENTRY IDARRDRL                                                 00014000
IDAGXCTL DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00415-IDAGXCTL)                                   00018000
         ENTRY IDAGXCTL                                                 00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
         IDASVR14                                                       00027000
*   PLHLRECL=AMDLRECL;              /* INIT. PLH REC. LENGTH.        */ 00028000
         L     @10,AMBDSB(,RAMB)                                   0155 00029000
         L     @10,AMDLRECL(,@10)                                  0155 00030000
         ST    @10,PLHLRECL(,RPLH)                                 0155 00031000
*   IF AMBCREAT=ON&RPLREQ^=RPLPUT THEN/* CREATE MODE & NOT PUT     0156 00032000
*                                      REQUEST.                      */ 00033000
         TM    AMBCREAT(RAMB),B'10000000'                          0156 00034000
         BNO   @RF00156                                            0156 00035000
         CLI   RPLREQ(RRPL),1                                      0156 00036000
         BE    @RF00156                                            0156 00037000
*     DO;                                                          0157 00038000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00039000
         MVI   RPLERREG(RRPL),X'08'                                0158 00040000
*       RPLERRCD=RPLINLRQ;          /* SET INVALID CREATE REQ. ERROR.*/ 00041000
         MVI   RPLERRCD(RRPL),X'74'                                0159 00042000
*       CALL MODEXIT;               /* EXIT FROM MODULE.             */ 00043000
         BAL   @14,MODEXIT                                         0160 00044000
*     END;                                                         0161 00045000
*   IF RPLREQ=RPLPUT|RPLREQ=RPLERASE THEN/* PUT OR ERASE REQ.        */ 00046000
@RF00156 CLI   RPLREQ(RRPL),1                                      0162 00047000
         BE    @RT00162                                            0162 00048000
         CLI   RPLREQ(RRPL),5                                      0162 00049000
         BNE   @RF00162                                            0162 00050000
@RT00162 DS    0H                                                  0163 00051000
*     DO;                                                          0163 00052000
*I01:                                                              0164 00053000
*       DO;                         /* IDACALL(IDA019RQ)             */ 00054000
I01      DS    0H                                                  0165 00055000
*         CALL IDA019RQ;            /* EXIT TO IDA019RQ              */ 00056000
         L     @15,@CV00909                                        0165 00057000
         BALR  @14,@15                                             0165 00058000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00059000
         BALR @11,0                                                     00060000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00061000
         USING *,@11                                                    00062000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00063000
         L     @11,=A(@PSTART)                                          00064000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00065000
         USING @PSTART,@11                                              00066000
*       END I01;                    /* CALL PUT/ERASE ROUTINES.      */ 00067000
*       CALL MODEXIT;               /* EXIT FROM MODULE.             */ 00068000
         BAL   @14,MODEXIT                                         0171 00069000
*     END;                                                         0172 00070000
*                                                                  0173 00071000
*   /*****************************************************************/ 00072000
*   /*                                                               */ 00073000
*   /* GET SEQUENTIAL REQUEST ---                                    */ 00074000
*   /*                                                               */ 00075000
*   /*****************************************************************/ 00076000
*                                                                  0173 00077000
*   IF RPLREQ=RPLGET&RPLSEQ=ON THEN /* GET SEQ REQUEST.              */ 00078000
@RF00162 CLI   RPLREQ(RRPL),0                                      0173 00079000
         BNE   @RF00173                                            0173 00080000
         TM    RPLSEQ(RRPL),B'00100000'                            0173 00081000
         BNO   @RF00173                                            0173 00082000
*     DO;                           /* GET SEQ REQUEST.              */ 00083000
*       IF PLHEFLGS=PLHVALID THEN   /* PLH IS VALID.                 */ 00084000
         CLC   PLHEFLGS(2,RPLH),@CB00797                           0175 00085000
         BNE   @RF00175                                            0175 00086000
*         CALL ADVPLH;              /* ADVANCE TO NEXT RECORD.       */ 00087000
         BAL   @14,ADVPLH                                          0176 00088000
*       ELSE                        /* PLH NOT VALID.                */ 00089000
*         CALL PLHEXP;              /* PROCESS EXCEPTIONAL CONDITION */ 00090000
         B     @RC00175                                            0177 00091000
@RF00175 BAL   @14,PLHEXP                                          0177 00092000
*       IF RPLERREG^='00'X THEN     /* ERROR OCCURRED.               */ 00093000
@RC00175 CLI   RPLERREG(RRPL),0                                    0178 00094000
         BE    @RF00178                                            0178 00095000
*         CALL MODEXIT;             /* RETURN FROM MODULE.           */ 00096000
         BAL   @14,MODEXIT                                         0179 00097000
*       PLHSAVE1=BUFCDDDD+PLHRECP-BUFCBAD;/* SET RECORD RBA.         */ 00098000
@RF00178 L     @10,PLHDBUFC(,RPLH)                                 0180 00099000
         L     @05,BUFCDDDD(,@10)                                  0180 00100000
         AL    @05,PLHRECP(,RPLH)                                  0180 00101000
         SL    @05,BUFCBAD(,@10)                                   0180 00102000
         ST    @05,PLHSAVE1(,RPLH)                                 0180 00103000
*       IF RPLUPD=ON&BUFCEXC=OFF THEN/* UPD REQ & BUFFER NOT IN    0181 00104000
*                                      EXCLUSIVE CONTROL.            */ 00105000
         TM    RPLUPD(RRPL),B'00000010'                            0181 00106000
         BNO   @RF00181                                            0181 00107000
         TM    BUFCEXC(@10),B'00000010'                            0181 00108000
         BNZ   @RF00181                                            0181 00109000
*         DO;                                                      0182 00110000
*           CALL IDAGXCTL;          /* GET BFR IN EXCL CONTROL.      */ 00111000
         L     @15,@CA00914                                        0183 00112000
         BALR  @14,@15                                             0183 00113000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 00114000
         CLI   RPLERREG(RRPL),0                                    0184 00115000
         BE    @RF00184                                            0184 00116000
*             CALL MODEXIT;         /* EXIT FROM MODULE.             */ 00117000
         BAL   @14,MODEXIT                                         0185 00118000
*         END;                                                     0186 00119000
@RF00184 DS    0H                                                  0187 00120000
*       PLHRRN=((PLHSAV1X/AMDCINV)*AMDNSLOT)+((PLHSAV1X//AMDCINV)/ 0187 00121000
*           PLHLRECL)+ONE;          /* CONVERT REC RBA TO REL. REC.     00122000
*                                      NO. AND SAVE          @ZA10887*/ 00123000
@RF00181 L     @10,PLHKEYPT(,RPLH)                                 0187 00124000
         L     @05,PLHSAV1X(,RPLH)                                 0187 00125000
         L     @15,AMBDSB(,RAMB)                                   0187 00126000
         L     @14,AMDCINV(,@15)                                   0187 00127000
         LR    @07,@05                                             0187 00128000
         SLR   @06,@06                                             0187 00129000
         DR    @06,@14                                             0187 00130000
         M     @06,AMDNSLOT(,@15)                                  0187 00131000
         LR    @09,@05                                             0187 00132000
         SLR   @08,@08                                             0187 00133000
         DR    @08,@14                                             0187 00134000
         LR    @15,@08                                             0187 00135000
         SLR   @14,@14                                             0187 00136000
         D     @14,PLHLRECL(,RPLH)                                 0187 00137000
         ALR   @07,@15                                             0187 00138000
         AL    @07,@CF00053                                        0187 00139000
         ST    @07,PLHRRN(,@10)                                    0187 00140000
*       ARGFIELD=PLHRRN;            /* SET RRN IN RPL ARG.           */ 00141000
         L     @10,RPLARG(,RRPL)                                   0188 00142000
         ST    @07,ARGFIELD(,@10)                                  0188 00143000
*       CALL COMGET;                /* PROCESS COMMON GET FUNCTION.  */ 00144000
         BAL   @14,COMGET                                          0189 00145000
*       CALL MODEXIT;               /* RETURN FROM MODULE.           */ 00146000
         BAL   @14,MODEXIT                                         0190 00147000
*     END;                          /* END GET SEQ REQUEST.          */ 00148000
*                                                                  0192 00149000
*   /*****************************************************************/ 00150000
*   /*                                                               */ 00151000
*   /* GET SKIP/DIRECT REQUEST ---                                   */ 00152000
*   /*                                                               */ 00153000
*   /*****************************************************************/ 00154000
*                                                                  0192 00155000
*   IF RPLREQ=RPLGET THEN           /* GET REQ-HAS TO BE SKP/DIR.    */ 00156000
@RF00173 CLI   RPLREQ(RRPL),0                                      0192 00157000
         BNE   @RF00192                                            0192 00158000
*     DO;                           /* GET SKP/DIR REQUEST.          */ 00159000
*       IF RPLSKP=ON&RPLBWD=ON THEN /* SKP & BWD REQUEST.            */ 00160000
         TM    RPLSKP(RRPL),B'00010000'                            0194 00161000
         BNO   @RF00194                                            0194 00162000
         TM    RPLBWD(RRPL),B'00010000'                            0194 00163000
         BNO   @RF00194                                            0194 00164000
*         DO;                       /* SKP NOT ALLOWED IN BWD MODE.  */ 00165000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 00166000
         MVI   RPLERREG(RRPL),X'08'                                0196 00167000
*           RPLERRCD=RPLINVP;       /* SET INVALID RPL OPTIONS ERROR.*/ 00168000
         MVI   RPLERRCD(RRPL),X'68'                                0197 00169000
*           CALL MODEXIT;           /* RETURN FROM MODULE.           */ 00170000
         BAL   @14,MODEXIT                                         0198 00171000
*         END;                                                     0199 00172000
*       IF RPLLRD=ON THEN           /* LAST RECORD SPECIFIED.        */ 00173000
@RF00194 TM    RPLLRD(RRPL),B'00001000'                            0200 00174000
         BNO   @RF00200                                            0200 00175000
*         DO;                       /* SEARCH FOR LAST RECORD.       */ 00176000
*           IF RPLBWD=OFF THEN      /* FORWARD DIRECTION.            */ 00177000
         TM    RPLBWD(RRPL),B'00010000'                            0202 00178000
         BNZ   @RF00202                                            0202 00179000
*             DO;                   /* LRD & FWD NOT ALLOWED.        */ 00180000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00181000
         MVI   RPLERREG(RRPL),X'08'                                0204 00182000
*               RPLERRCD=RPLINVP;   /* SET INVALID RPL OPTIONS ERROR.*/ 00183000
         MVI   RPLERRCD(RRPL),X'68'                                0205 00184000
*               CALL MODEXIT;       /* RETURN FROM MODULE.           */ 00185000
         BAL   @14,MODEXIT                                         0206 00186000
*             END;                  /* END LRD/BWD ERROR.            */ 00187000
*           CALL LRD;               /* POSITION TO LAST RECORD.      */ 00188000
@RF00202 BAL   @14,LRD                                             0208 00189000
*         END;                      /* END SEARCH LAST RECORD.       */ 00190000
*       ELSE                        /* LAST RECORD NOT SPECIFIED.    */ 00191000
*         DO;                       /* PROCESS GET WITH ARD.         */ 00192000
         B     @RC00200                                            0210 00193000
@RF00200 DS    0H                                                  0211 00194000
*           IF ARGFIELD=ZERO|ARGFIELD>AMDMAXRR THEN/* INVALID RRN.   */ 00195000
         L     @10,RPLARG(,RRPL)                                   0211 00196000
         L     @10,ARGFIELD(,@10)                                  0211 00197000
         LTR   @10,@10                                             0211 00198000
         BZ    @RT00211                                            0211 00199000
         L     @05,AMBDSB(,RAMB)                                   0211 00200000
         CL    @10,AMDMAXRR(,@05)                                  0211 00201000
         BNH   @RF00211                                            0211 00202000
@RT00211 DS    0H                                                  0212 00203000
*             DO;                                                  0212 00204000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00205000
         MVI   RPLERREG(RRPL),X'08'                                0213 00206000
*               RPLERRCD=RPLIRRNO;  /* SET INVALID RRN ERROR.        */ 00207000
         MVI   RPLERRCD(RRPL),X'C0'                                0214 00208000
*               CALL MODEXIT;       /* RETURN FROM MODULE.           */ 00209000
         BAL   @14,MODEXIT                                         0215 00210000
*             END;                                                 0216 00211000
*           PLHSAVE1=AMDCINV*((ARGFIELD-ONE)/AMDNSLOT)+PLHLRECL*(( 0217 00212000
*               ARGFIELD-ONE)//AMDNSLOT);/* CONVERT RRN TO RBA.      */ 00213000
@RF00211 L     @10,AMBDSB(,RAMB)                                   0217 00214000
         L     @05,RPLARG(,RRPL)                                   0217 00215000
         L     @05,ARGFIELD(,@05)                                  0217 00216000
         BCTR  @05,0                                               0217 00217000
         L     @15,AMDNSLOT(,@10)                                  0217 00218000
         LR    @07,@05                                             0217 00219000
         SLR   @06,@06                                             0217 00220000
         DR    @06,@15                                             0217 00221000
         M     @06,AMDCINV(,@10)                                   0217 00222000
         LR    @09,@05                                             0217 00223000
         SLR   @08,@08                                             0217 00224000
         DR    @08,@15                                             0217 00225000
         LR    @15,@08                                             0217 00226000
         M     @14,PLHLRECL(,RPLH)                                 0217 00227000
         ALR   @07,@15                                             0217 00228000
         ST    @07,PLHSAVE1(,RPLH)                                 0217 00229000
*           CALL IDARRDRL;          /* CALL DIRECT RECORD LOCATE.    */ 00230000
         L     @15,@CA00913                                        0218 00231000
         BALR  @14,@15                                             0218 00232000
*         END;                      /* END POINT WITH ARD.           */ 00233000
*       IF RPLERREG^='00'X THEN     /* ERROR.                        */ 00234000
@RC00200 CLI   RPLERREG(RRPL),0                                    0220 00235000
         BE    @RF00220                                            0220 00236000
*         CALL MODEXIT;             /* RETURN FROM MODULE.           */ 00237000
         BAL   @14,MODEXIT                                         0221 00238000
*       IF RPLBWD=OFF THEN          /* FORWARD DIRECTION.            */ 00239000
@RF00220 TM    RPLBWD(RRPL),B'00010000'                            0222 00240000
         BNZ   @RF00222                                            0222 00241000
*         PLHBWD=OFF;               /* SAVE IN PLH.                  */ 00242000
         NI    PLHBWD(RPLH),B'11101111'                            0223 00243000
*       ELSE                        /* BACKWARD DIRECTION.           */ 00244000
*         PLHBWD=ON;                /* SAVE IN PLH.                  */ 00245000
         B     @RC00222                                            0224 00246000
@RF00222 OI    PLHBWD(RPLH),B'00010000'                            0224 00247000
*       IF RPLLRD=OFF THEN          /* NOT LRD.                      */ 00248000
@RC00222 TM    RPLLRD(RRPL),B'00001000'                            0225 00249000
         BNZ   @RF00225                                            0225 00250000
*         PLHRRN=ARGFIELD;          /* SAVE ARG RRN IN PLH.          */ 00251000
         L     @10,PLHKEYPT(,RPLH)                                 0226 00252000
         L     @05,RPLARG(,RRPL)                                   0226 00253000
         L     @05,ARGFIELD(,@05)                                  0226 00254000
         ST    @05,PLHRRN(,@10)                                    0226 00255000
*       CALL COMGET;                /* PROCESS COMMON GET FUNCTION.  */ 00256000
@RF00225 BAL   @14,COMGET                                          0227 00257000
*       CALL MODEXIT;               /* RETURN FROM MODULE.           */ 00258000
         BAL   @14,MODEXIT                                         0228 00259000
*     END;                          /* END GET SKP/DIR REQUEST.      */ 00260000
*                                                                  0230 00261000
*   /*****************************************************************/ 00262000
*   /*                                                               */ 00263000
*   /* POINT REQUEST ---                                             */ 00264000
*   /*                                                               */ 00265000
*   /*****************************************************************/ 00266000
*                                                                  0230 00267000
*   IF RPLREQ=RPLPOINT THEN         /* POINT REQUEST.                */ 00268000
@RF00192 CLI   RPLREQ(RRPL),3                                      0230 00269000
         BNE   @RF00230                                            0230 00270000
*     DO;                           /* PROCESS POINT REQUEST.        */ 00271000
*       IF RPLLRD=ON THEN           /* LAST RECORD SPECIFIED.        */ 00272000
         TM    RPLLRD(RRPL),B'00001000'                            0232 00273000
         BNO   @RF00232                                            0232 00274000
*         DO;                       /* SEARCH FOR LAST RECORD.       */ 00275000
*           IF RPLBWD=OFF THEN      /* FORWARD DIRECTION.            */ 00276000
         TM    RPLBWD(RRPL),B'00010000'                            0234 00277000
         BNZ   @RF00234                                            0234 00278000
*             DO;                   /* LRD & FWD NOT ALLOWED.        */ 00279000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00280000
         MVI   RPLERREG(RRPL),X'08'                                0236 00281000
*               RPLERRCD=RPLINVP;   /* SET INVALID RPL OPTIONS ERROR.*/ 00282000
         MVI   RPLERRCD(RRPL),X'68'                                0237 00283000
*               CALL MODEXIT;       /* RETURN FROM MODULE.           */ 00284000
         BAL   @14,MODEXIT                                         0238 00285000
*             END;                  /* END LRD/BWD ERROR.            */ 00286000
*           CALL LRD;               /* POSITION TO LAST RECORD.      */ 00287000
@RF00234 BAL   @14,LRD                                             0240 00288000
*         END;                      /* END SEARCH LAST RECORD.       */ 00289000
*       ELSE                        /* LAST RECORD NOT SPECIFIED.    */ 00290000
*         DO;                       /* PROCESS POINT WITH ARD.       */ 00291000
         B     @RC00232                                            0242 00292000
@RF00232 DS    0H                                                  0243 00293000
*           IF ARGFIELD=ZERO|ARGFIELD>AMDMAXRR THEN/* INVALID RRN.   */ 00294000
         L     @10,RPLARG(,RRPL)                                   0243 00295000
         L     @10,ARGFIELD(,@10)                                  0243 00296000
         LTR   @10,@10                                             0243 00297000
         BZ    @RT00243                                            0243 00298000
         L     @05,AMBDSB(,RAMB)                                   0243 00299000
         CL    @10,AMDMAXRR(,@05)                                  0243 00300000
         BNH   @RF00243                                            0243 00301000
@RT00243 DS    0H                                                  0244 00302000
*             DO;                                                  0244 00303000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00304000
         MVI   RPLERREG(RRPL),X'08'                                0245 00305000
*               RPLERRCD=RPLIRRNO;  /* SET INVALID RRN ERROR.        */ 00306000
         MVI   RPLERRCD(RRPL),X'C0'                                0246 00307000
*               CALL MODEXIT;       /* RETURN FROM MODULE.           */ 00308000
         BAL   @14,MODEXIT                                         0247 00309000
*             END;                                                 0248 00310000
*           PLHSAVE1=AMDCINV*((ARGFIELD-ONE)/AMDNSLOT)+PLHLRECL*(( 0249 00311000
*               ARGFIELD-ONE)//AMDNSLOT);/* CONVERT RRN TO RBA.      */ 00312000
@RF00243 L     @10,AMBDSB(,RAMB)                                   0249 00313000
         L     @05,RPLARG(,RRPL)                                   0249 00314000
         L     @05,ARGFIELD(,@05)                                  0249 00315000
         BCTR  @05,0                                               0249 00316000
         L     @15,AMDNSLOT(,@10)                                  0249 00317000
         LR    @07,@05                                             0249 00318000
         SLR   @06,@06                                             0249 00319000
         DR    @06,@15                                             0249 00320000
         M     @06,AMDCINV(,@10)                                   0249 00321000
         LR    @09,@05                                             0249 00322000
         SLR   @08,@08                                             0249 00323000
         DR    @08,@15                                             0249 00324000
         LR    @15,@08                                             0249 00325000
         M     @14,PLHLRECL(,RPLH)                                 0249 00326000
         ALR   @07,@15                                             0249 00327000
         ST    @07,PLHSAVE1(,RPLH)                                 0249 00328000
*           CALL IDARRDRL;          /* CALL DIRECT RECORD LOCATE.    */ 00329000
         L     @15,@CA00913                                        0250 00330000
         BALR  @14,@15                                             0250 00331000
*         END;                      /* END POINT WITH ARD.           */ 00332000
*       IF RPLERREG^='00'X&RPLERRCD^=RPLEODER THEN/* ERROR, BUT NOT     00333000
*                                      END-OF-DATA.                  */ 00334000
@RC00232 CLI   RPLERREG(RRPL),0                                    0252 00335000
         BE    @RF00252                                            0252 00336000
         CLI   RPLERRCD(RRPL),4                                    0252 00337000
         BE    @RF00252                                            0252 00338000
*         CALL MODEXIT;             /* RETURN FROM MODULE.           */ 00339000
         BAL   @14,MODEXIT                                         0253 00340000
*       PLHNOADV=ON;                /* SET PLH NO ADVANCE.           */ 00341000
@RF00252 OI    PLHNOADV(RPLH),B'00001000'                          0254 00342000
*       PLHUPD=OFF;                 /* TURN OFF GET UPDATE FLAG.     */ 00343000
         NI    PLHUPD(RPLH),B'01111111'                            0255 00344000
*       IF RPLBWD=OFF THEN          /* FORWARD DIRECTION.            */ 00345000
         TM    RPLBWD(RRPL),B'00010000'                            0256 00346000
         BNZ   @RF00256                                            0256 00347000
*         PLHBWD=OFF;               /* SAVE IN PLH.                  */ 00348000
         NI    PLHBWD(RPLH),B'11101111'                            0257 00349000
*       ELSE                        /* BACKWARD DIRECTION.           */ 00350000
*         PLHBWD=ON;                /* SAVE IN PLH.                  */ 00351000
         B     @RC00256                                            0258 00352000
@RF00256 OI    PLHBWD(RPLH),B'00010000'                            0258 00353000
*       IF RPLLRD=OFF THEN          /* NOT LAST RECORD.              */ 00354000
@RC00256 TM    RPLLRD(RRPL),B'00001000'                            0259 00355000
         BNZ   @RF00259                                            0259 00356000
*         PLHRRN=ARGFIELD;          /* SAVE ARG RRN IN PLH.          */ 00357000
         L     @10,PLHKEYPT(,RPLH)                                 0260 00358000
         L     @05,RPLARG(,RRPL)                                   0260 00359000
         L     @05,ARGFIELD(,@05)                                  0260 00360000
         ST    @05,PLHRRN(,@10)                                    0260 00361000
*       RPLDDDD=PLHSAVE1;           /* SET RECORD RBA IN RPL.        */ 00362000
@RF00259 L     @10,PLHSAVE1(,RPLH)                                 0261 00363000
         ST    @10,RPLDDDD(,RRPL)                                  0261 00364000
*       PLHRCODE=RPLREQ;            /* SAVE REQUEST CODE.            */ 00365000
         IC    @10,RPLREQ(,RRPL)                                   0262 00366000
         STC   @10,PLHRCODE(,RPLH)                                 0262 00367000
*       CALL MODEXIT;               /* RETURN FROM MODULE.           */ 00368000
         BAL   @14,MODEXIT                                         0263 00369000
*     END;                          /* END POINT REQUEST.            */ 00370000
*                                                                  0265 00371000
*   /*****************************************************************/ 00372000
*   /*                                                               */ 00373000
*   /* INVALID REQUEST ---                                           */ 00374000
*   /*                                                               */ 00375000
*   /*****************************************************************/ 00376000
*                                                                  0265 00377000
*   ELSE                            /* INVALID REQUEST.              */ 00378000
*     DO;                           /* SET INVALID REQUEST ERROR.    */ 00379000
         B     @RC00230                                            0265 00380000
@RF00230 DS    0H                                                  0266 00381000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00382000
         MVI   RPLERREG(RRPL),X'08'                                0266 00383000
*       RPLERRCD=RPLINVP;           /* SET INVALID REQUEST.          */ 00384000
         MVI   RPLERRCD(RRPL),X'68'                                0267 00385000
*       CALL MODEXIT;               /* RETURN FROM MODULE.           */ 00386000
         BAL   @14,MODEXIT                                         0268 00387000
*     END;                          /* END INVALID REQ. ERROR.       */ 00388000
*                                                                  0269 00389000
*   /*****************************************************************/ 00390000
*   /*                                                               */ 00391000
*   /* END OF VSAM RELATIVE RECORD DRIVER HI-LEVEL.                  */ 00392000
*   /*                                                               */ 00393000
*   /*****************************************************************/ 00394000
*                                                                  0270 00395000
*IDARRDRL:                                                         0270 00396000
*                                                                  0270 00397000
*   /*****************************************************************/ 00398000
*   /*                                                               */ 00399000
*   /* DIRECT RECORD LOCATE ROUTINE --- RETRIEVES CI OF REQUESTED RBA*/ 00400000
*   /* FOR GET, PUT, OR POINT REQUEST. PERFORMS SEQUENCE CHECK IF SKP*/ 00401000
*   /* REQUEST. IF POINT KGE & RBA IS GT HURBA, SETS END-OF- DATA. IF*/ 00402000
*   /* POINT KGE & SLOT IS EMPTY SEARCHES FORWARD FOR NEXT VALID     */ 00403000
*   /* RECORD. IF GET & SLOT IS EMPTY SETS NO RECORD FOUND ERROR. ---*/ 00404000
*   /* INPUT - PLHSAVE1 = RBA OF RECORD TO BE RETRIEVED, RPL ARG(IF  */ 00405000
*   /* SKP REQ) = RRN OF REQUESTED RECORD, PLHDBUFC = CURRENT DATA   */ 00406000
*   /* BUFC, PLHRRN(IF SKP REQ) = PREVIOUS REQUEST RRN. --- OUTPUT - */ 00407000
*   /* PLHDBUFC = BUFC OF RETRIEVED RECORD, PLHRECP, PLHFSP, PLHRDF =*/ 00408000
*   /* POINTER TO REQUESTED RECORD IN DATA BUFFER.                   */ 00409000
*   /*                                                               */ 00410000
*   /*****************************************************************/ 00411000
*                                                                  0270 00412000
*   ENTRY;                                                         0270 00413000
@EP00270 DS    0H                                                  0270 00414000
@EC00270 DS    0H                                                  0271 00415000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 00416000
         IDASVR14                                                       00417000
*   IF PLHINVAL=OFF&RPLSKP=ON&RPLREQ^=RPLPOINT&PLH1ST=OFF&PLHBWD=OFF    00418000
*     THEN                          /* VALID POSITION & SKP & NOT  0272 00419000
*                                      POINT & NOT 1ST REQ & NOT PREV   00420000
*                                      BWD                           */ 00421000
         TM    PLHINVAL(RPLH),B'00000010'                          0272 00422000
         BNZ   @RF00272                                            0272 00423000
         TM    RPLSKP(RRPL),B'00010000'                            0272 00424000
         BNO   @RF00272                                            0272 00425000
         CLI   RPLREQ(RRPL),3                                      0272 00426000
         BE    @RF00272                                            0272 00427000
         TM    PLH1ST(RPLH),B'01000000'                            0272 00428000
         BNZ   @RF00272                                            0272 00429000
         TM    PLHBWD(RPLH),B'00010000'                            0272 00430000
         BNZ   @RF00272                                            0272 00431000
*     DO;                           /* SEQUENCE CHECK REQ.           */ 00432000
*       IF ARGFIELD<PLHRRN THEN     /* ARG RRN IS LT PREV RRN.       */ 00433000
         L     @10,RPLARG(,RRPL)                                   0274 00434000
         L     @05,PLHKEYPT(,RPLH)                                 0274 00435000
         CLC   ARGFIELD(4,@10),PLHRRN(@05)                         0274 00436000
         BNL   @RF00274                                            0274 00437000
*         DO;                                                      0275 00438000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 00439000
         MVI   RPLERREG(RRPL),X'08'                                0276 00440000
*           RPLERRCD=RPLSEQCK;      /* SET SEQUENCE ERROR.           */ 00441000
         MVI   RPLERRCD(RRPL),X'0C'                                0277 00442000
*           CALL EXIT;              /* RETURN.                       */ 00443000
         BAL   @14,EXIT                                            0278 00444000
*         END;                                                     0279 00445000
*       ELSE                        /* ARG RRN IS GTE PREV RRN.      */ 00446000
*         IF ARGFIELD=PLHRRN THEN   /* ARG RRN IS EQ PREV RRN.       */ 00447000
         B     @RC00274                                            0280 00448000
@RF00274 L     @10,RPLARG(,RRPL)                                   0280 00449000
         L     @05,PLHKEYPT(,RPLH)                                 0280 00450000
         CLC   ARGFIELD(4,@10),PLHRRN(@05)                         0280 00451000
         BNE   @RF00280                                            0280 00452000
*           IF PLHRCODE^=RPLPOINT&^(RPLREQ=RPLPUT&PLHRCODE=RPLERASE)    00453000
*             THEN                  /* NOT PREV POINT & NOT PUT &  0281 00454000
*                                      PREV ERASE.                   */ 00455000
         CLI   PLHRCODE(RPLH),3                                    0281 00456000
         BE    @RF00281                                            0281 00457000
         CLI   RPLREQ(RRPL),1                                      0281 00458000
         BNE   @RT00281                                            0281 00459000
         CLI   PLHRCODE(RPLH),5                                    0281 00460000
         BE    @RF00281                                            0281 00461000
@RT00281 DS    0H                                                  0282 00462000
*             DO;                                                  0282 00463000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR IN RPL.     */ 00464000
         MVI   RPLERREG(RRPL),X'08'                                0283 00465000
*               RPLERRCD=RPLSEQCK;  /* SET SEQUENCE ERROR.           */ 00466000
         MVI   RPLERRCD(RRPL),X'0C'                                0284 00467000
*               CALL EXIT;          /* RETURN.                       */ 00468000
         BAL   @14,EXIT                                            0285 00469000
*             END;                                                 0286 00470000
*     END;                          /* END SEQUENCE CHECK REQ.       */ 00471000
@RF00281 DS    0H                                                  0287 00472000
@RF00280 DS    0H                                                  0287 00473000
@RC00274 DS    0H                                                  0288 00474000
*   PLHASKBF=ON;                    /* SET PLH ASK BUFFER.           */ 00475000
@RF00272 OI    PLHASKBF(RPLH),B'00100000'                          0288 00476000
*   IF PLHSAVE1>=ARDHRBA THEN       /* REQ IS PAST END OF DATA SET.  */ 00477000
         L     @10,AMBDSB(,RAMB)                                   0289 00478000
         L     @10,AMDPARDB(,@10)                                  0289 00479000
         CLC   PLHSAVE1(4,RPLH),ARDHRBA(@10)                       0289 00480000
         BL    @RF00289                                            0289 00481000
*     DO;                                                          0290 00482000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR IN RPL.     */ 00483000
         MVI   RPLERREG(RRPL),X'08'                                0291 00484000
*       IF RPLREQ=RPLPOINT&RPLKGE=ON&RPLBWD=OFF THEN/* POINT KGE FWD.*/ 00485000
         CLI   RPLREQ(RRPL),3                                      0292 00486000
         BNE   @RF00292                                            0292 00487000
         TM    RPLKGE(RRPL),B'00000100'                            0292 00488000
         BNO   @RF00292                                            0292 00489000
         TM    RPLBWD(RRPL),B'00010000'                            0292 00490000
         BNZ   @RF00292                                            0292 00491000
*         DO;                                                      0293 00492000
*           RPLERRCD=RPLEODER;      /* SET EOD ERROR.                */ 00493000
         MVI   RPLERRCD(RRPL),X'04'                                0294 00494000
*           PLHEFLGS=PLHVALID;      /* MAKE PLH VALID.               */ 00495000
         MVC   PLHEFLGS(2,RPLH),@CB00797                           0295 00496000
*           PLHRSTRT=ON;            /* SET PLH RESTART FLAG.         */ 00497000
         OI    PLHRSTRT(RPLH),B'10000000'                          0296 00498000
*         END;                                                     0297 00499000
*       ELSE                        /* NOT POINT KGE FWD.            */ 00500000
*         DO;                                                      0298 00501000
         B     @RC00292                                            0298 00502000
@RF00292 DS    0H                                                  0299 00503000
*           RPLERRCD=RPLNOREC;      /* SET NO RECORD FOUND ERROR.    */ 00504000
         MVI   RPLERRCD(RRPL),X'10'                                0299 00505000
*           PLHINVAL=ON;            /* MAKE PLH INVALID.             */ 00506000
         OI    PLHINVAL(RPLH),B'00000010'                          0300 00507000
*         END;                                                     0301 00508000
*       CALL EXIT;                  /* RETURN.                       */ 00509000
@RC00292 BAL   @14,EXIT                                            0302 00510000
*     END;                                                         0303 00511000
*   IF RPLREQ=RPLPOINT&RPLSEQ=ON THEN/* POINT SEQ REQ.               */ 00512000
@RF00289 CLI   RPLREQ(RRPL),3                                      0304 00513000
         BNE   @RF00304                                            0304 00514000
         TM    RPLSEQ(RRPL),B'00100000'                            0304 00515000
         BNO   @RF00304                                            0304 00516000
*     DO;                                                          0305 00517000
*       RPARM1=ZERO;                /* ADD MAX NO. OF BFRS.          */ 00518000
         SLR   RPARM1,RPARM1                                       0306 00519000
*I02:                                                              0307 00520000
*       DO;                         /* IDACALL(IDAABF)               */ 00521000
I02      DS    0H                                                  0308 00522000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 00523000
         L     @15,@CV00904                                        0308 00524000
         BALR  @14,@15                                             0308 00525000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00526000
         BALR @11,0                                                     00527000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00528000
         USING *,@11                                                    00529000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00530000
         L     @11,=A(@PSTART)                                          00531000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00532000
         USING @PSTART,@11                                              00533000
*       END I02;                    /* CALL ADD BUFFER.              */ 00534000
*     END;                                                         0314 00535000
*   IF RPLUPD=ON|RPLREQ=RPLPUT THEN /* UPDATE OR PUT REQUEST.        */ 00536000
@RF00304 TM    RPLUPD(RRPL),B'00000010'                            0315 00537000
         BO    @RT00315                                            0315 00538000
         CLI   RPLREQ(RRPL),1                                      0315 00539000
         BNE   @RF00315                                            0315 00540000
@RT00315 DS    0H                                                  0316 00541000
*     PLHRDEXC=ON;                  /* SET PLH READ EXCLUSIVE.       */ 00542000
         OI    PLHRDEXC(RPLH),B'00001000'                          0316 00543000
*   ELSE                            /* NOT UPDATE REQUEST.           */ 00544000
*     PLHRDEXC=OFF;                 /* CLEAR PLH READ EXCLUSIVE.     */ 00545000
         B     @RC00315                                            0317 00546000
@RF00315 NI    PLHRDEXC(RPLH),B'11110111'                          0317 00547000
*   RPLDDDD=PLHSAV1X-(PLHSAV1X//AMDCINV);/* CI RBA OF REQ. RECORD. 0318 00548000
*                                                            @ZA10887*/ 00549000
@RC00315 L     @10,PLHSAV1X(,RPLH)                                 0318 00550000
         L     @05,AMBDSB(,RAMB)                                   0318 00551000
         LR    @07,@10                                             0318 00552000
         SLR   @06,@06                                             0318 00553000
         D     @06,AMDCINV(,@05)                                   0318 00554000
         SLR   @10,@06                                             0318 00555000
         ST    @10,RPLDDDD(,RRPL)                                  0318 00556000
*   IF AMBSPEED=ON&RPLREQ=RPLPUT THEN/* SPEED & PUT REQ.             */ 00557000
         TM    AMBSPEED(RAMB),B'00001000'                          0319 00558000
         BNO   @RF00319                                            0319 00559000
         CLI   RPLREQ(RRPL),1                                      0319 00560000
         BNE   @RF00319                                            0319 00561000
*     DO;                           /* BUFFER FOR SPEED MODE.        */ 00562000
*       IF^(BUFCDDDD=RPLDDDD&BUFCMW=ON&BUFCVAL=ON) THEN/* BUFFER   0321 00563000
*                                      DOESN'T CONTAIN CI OR HAS BEEN   00564000
*                                      WRITTEN.                      */ 00565000
         L     @05,PLHDBUFC(,RPLH)                                 0321 00566000
         CL    @10,BUFCDDDD(,@05)                                  0321 00567000
         BNE   @RT00321                                            0321 00568000
         TM    BUFCMW(@05),B'10000000'                             0321 00569000
         BNO   @RT00321                                            0321 00570000
         TM    BUFCVAL(@05),B'00000100'                            0321 00571000
         BO    @RF00321                                            0321 00572000
@RT00321 DS    0H                                                  0322 00573000
*         DO;                       /* CI NOT IN CURRENT BUFFER.     */ 00574000
*           IF BUFCINS=ON THEN      /* CUR. BUFC IS INSERT BUFC.     */ 00575000
         L     @10,PLHDBUFC(,RPLH)                                 0323 00576000
         TM    BUFCINS(@10),B'00100000'                            0323 00577000
         BNO   @RF00323                                            0323 00578000
*             DO;                                                  0324 00579000
*               RBUFC=PLHDBUFC;     /* POINT TO CURRENT BUFC.        */ 00580000
         LR    RBUFC,@10                                           0325 00581000
*I03:                                                              0326 00582000
*               DO;                 /* IDACALL(IDASBF)               */ 00583000
I03      DS    0H                                                  0327 00584000
*                 CALL IDASBF;      /* EXIT TO IDASBF                */ 00585000
         L     @15,@CV00911                                        0327 00586000
         BALR  @14,@15                                             0327 00587000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00588000
         BALR @11,0                                                     00589000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00590000
         USING *,@11                                                    00591000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00592000
         L     @11,=A(@PSTART)                                          00593000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00594000
         USING @PSTART,@11                                              00595000
*               END I03;            /* SUBTRACT INSERT BUFC.         */ 00596000
*             END;                                                 0333 00597000
*           ELSE                    /* CUR. BUFC IS NOT INSERT BUFC. */ 00598000
*             IF PLHBFRNO>ONE THEN  /* NO. BUFFERS GT 1.             */ 00599000
         B     @RC00323                                            0334 00600000
@RF00323 CLI   PLHBFRNO(RPLH),1                                    0334 00601000
         BNH   @RF00334                                            0334 00602000
*               DO;                                                0335 00603000
*                 PLHDBUFC=BUFCNXT2;/* POINT TO NEXT LOG. BUFC TO  0336 00604000
*                                      FORMAT WRT BFRS IN CORRECT  0336 00605000
*                                      SEQUENCE.                     */ 00606000
         L     @10,PLHDBUFC(,RPLH)                                 0336 00607000
         L     @10,BUFCNXT2-1(,@10)                                0336 00608000
         LA    @10,0(,@10)                                         0336 00609000
         ST    @10,PLHDBUFC(,RPLH)                                 0336 00610000
*                 RBUFC=PLHDBUFC;   /* POINT TO CUR BUFC.            */ 00611000
         LR    RBUFC,@10                                           0337 00612000
*I04:                                                              0338 00613000
*                 DO;               /* IDACALL(IDAWRBFR)             */ 00614000
I04      DS    0H                                                  0339 00615000
*                   CALL IDAWRBFR;  /* EXIT TO IDAWRBFR              */ 00616000
         L     @15,@CV00907                                        0339 00617000
         BALR  @14,@15                                             0339 00618000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 00619000
         BALR @11,0                                                     00620000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 00621000
         USING *,@11                                                    00622000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 00623000
         L     @11,=A(@PSTART)                                          00624000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 00625000
         USING @PSTART,@11                                              00626000
*                 END I04;          /* WRT BUFFERS TO INSURE NORMAL     00627000
*                                      BFR CHAIN GETS WRITTEN.       */ 00628000
*               END;                                               0345 00629000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 00630000
@RF00334 DS    0H                                                  0346 00631000
@RC00323 CLI   RPLERREG(RRPL),0                                    0346 00632000
         BE    @RF00346                                            0346 00633000
*             DO;                                                  0347 00634000
*               PLHINVAL=ON;        /* SET PLH INVALID.              */ 00635000
         OI    PLHINVAL(RPLH),B'00000010'                          0348 00636000
*               CALL EXIT;          /* RETURN.                       */ 00637000
         BAL   @14,EXIT                                            0349 00638000
*             END;                                                 0350 00639000
*           IF PLHSAVE1<PLHHIREC THEN/* CUR RBA LT HI-REC RBA.       */ 00640000
@RF00346 CLC   PLHSAVE1(4,RPLH),PLHHIREC(RPLH)                     0351 00641000
         BNL   @RF00351                                            0351 00642000
*             DO;                                                  0352 00643000
*I05:                                                              0353 00644000
*               DO;                 /* IDACALL(IDAAIBF)              */ 00645000
I05      DS    0H                                                  0354 00646000
*                 CALL IDAAIBF;     /* EXIT TO IDAAIBF               */ 00647000
         L     @15,@CV00910                                        0354 00648000
         BALR  @14,@15                                             0354 00649000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00650000
         BALR @11,0                                                     00651000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00652000
         USING *,@11                                                    00653000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00654000
         L     @11,=A(@PSTART)                                          00655000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00656000
         USING @PSTART,@11                                              00657000
*               END I05;            /* ADD INSERT BUFFER.            */ 00658000
*               PLHDBUFC=RBUFC;     /* POINT PLH TO INSERT BUFC.     */ 00659000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0360 00660000
*               BUFCINS=ON;         /* SET INSERT BFR FLAG BACK ON.  */ 00661000
         L     @10,PLHDBUFC(,RPLH)                                 0361 00662000
         OI    BUFCINS(@10),B'00100000'                            0361 00663000
*             END;                                                 0362 00664000
*         END;                      /* END CI NOT IN CUR BFR.        */ 00665000
@RF00351 DS    0H                                                  0364 00666000
*     END;                          /* END BUFFER FOR SPEED MODE.    */ 00667000
@RF00321 DS    0H                                                  0365 00668000
*   RPARM1=RPLDDDD;                 /* SET CI RBA OF REQ RECORD.     */ 00669000
@RF00319 L     RPARM1,RPLDDDD(,RRPL)                               0365 00670000
*I06:                                                              0366 00671000
*   DO;                             /* IDACALL(IDAGRB)               */ 00672000
I06      DS    0H                                                  0367 00673000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 00674000
         L     @15,@CV00906                                        0367 00675000
         BALR  @14,@15                                             0367 00676000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00677000
         BALR @11,0                                                     00678000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00679000
         USING *,@11                                                    00680000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00681000
         L     @11,=A(@PSTART)                                          00682000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00683000
         USING @PSTART,@11                                              00684000
*   END I06;                        /* GET CI OF REQ RBA.            */ 00685000
*   IF RPLERREG^='00'X THEN         /* ERROR.                        */ 00686000
         CLI   RPLERREG(RRPL),0                                    0373 00687000
         BE    @RF00373                                            0373 00688000
*     DO;                                                          0374 00689000
*       PLHINVAL=ON;                /* SET PLH INVALID.              */ 00690000
         OI    PLHINVAL(RPLH),B'00000010'                          0375 00691000
*       CALL EXIT;                  /* RETURN.                       */ 00692000
         BAL   @14,EXIT                                            0376 00693000
*     END;                                                         0377 00694000
*   RFY                                                            0378 00695000
*     RWORK1 RSTD;                  /* GET WORK REG.                 */ 00696000
@RF00373 DS    0H                                                  0379 00697000
*   RWORK1=PLHSAVE1-BUFCDDDD;       /* OFFSET INTO CI.               */ 00698000
         L     @10,PLHDBUFC(,RPLH)                                 0379 00699000
         L     RWORK1,PLHSAVE1(,RPLH)                              0379 00700000
         SL    RWORK1,BUFCDDDD(,@10)                               0379 00701000
*   PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-(((RWORK1/PLHLRECL)+ONE)*   00702000
*       LENGTH(IDARDF));            /* POINT TO RDF OF REQ. RECORD   */ 00703000
         L     @10,BUFCBAD(,@10)                                   0380 00704000
         L     @15,AMBDSB(,RAMB)                                   0380 00705000
         LR    @00,@10                                             0380 00706000
         AL    @00,AMDCINV(,@15)                                   0380 00707000
         SL    @00,@CF00067                                        0380 00708000
         L     @14,PLHLRECL(,RPLH)                                 0380 00709000
         LR    @07,RWORK1                                          0380 00710000
         SLR   @06,@06                                             0380 00711000
         DR    @06,@14                                             0380 00712000
         AL    @07,@CF00053                                        0380 00713000
         MH    @07,@CH00157                                        0380 00714000
         SLR   @00,@07                                             0380 00715000
         ST    @00,PLHRDFP(,RPLH)                                  0380 00716000
*   PLHRECP=BUFCBAD+RWORK1;         /* POINT TO REQ. RECORD.         */ 00717000
         LR    @09,RWORK1                                          0381 00718000
         ALR   @09,@10                                             0381 00719000
         ST    @09,PLHRECP(,RPLH)                                  0381 00720000
*   PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* POINT TO PLH FSP.          */ 00721000
         LR    @07,@14                                             0382 00722000
         M     @06,AMDNSLOT(,@15)                                  0382 00723000
         ALR   @10,@07                                             0382 00724000
         ST    @10,PLHFSP(,RPLH)                                   0382 00725000
*   RFY                                                            0383 00726000
*     RWORK1 UNRSTD;                /* FREE WORK REG.                */ 00727000
*   IF RPLREQ^=RPLPUT&RDFEMPTY=ON&PLHDSCAN=OFF THEN/* NOT PUT REQ. &    00728000
*                                      EMPTY REC & NOT PREV RD EXCL     00729000
*                                      ERR                           */ 00730000
         CLI   RPLREQ(RRPL),1                                      0384 00731000
         BE    @RF00384                                            0384 00732000
         LR    @10,@00                                             0384 00733000
         TM    RDFEMPTY(@10),B'00000100'                           0384 00734000
         BNO   @RF00384                                            0384 00735000
         TM    PLHDSCAN(RPLH),B'00000001'                          0384 00736000
         BNZ   @RF00384                                            0384 00737000
*     DO;                           /* SEARCH FOR RECORD.            */ 00738000
*       IF^(RPLREQ=RPLPOINT&RPLKGE=ON&RPLBWD=OFF) THEN/* NOT POINT 0386 00739000
*                                      KGE FWD REQ.                  */ 00740000
         CLI   RPLREQ(RRPL),3                                      0386 00741000
         BNE   @RT00386                                            0386 00742000
         TM    RPLKGE(RRPL),B'00000100'                            0386 00743000
         BNO   @RT00386                                            0386 00744000
         TM    RPLBWD(RRPL),B'00010000'                            0386 00745000
         BZ    @RF00386                                            0386 00746000
@RT00386 DS    0H                                                  0387 00747000
*         DO;                                                      0387 00748000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 00749000
         MVI   RPLERREG(RRPL),X'08'                                0388 00750000
*           RPLERRCD=RPLNOREC;      /* SET NO RECORD FOUND ERROR.    */ 00751000
         MVI   RPLERRCD(RRPL),X'10'                                0389 00752000
*           PLHINVAL=ON;            /* SET PLH INVALID.              */ 00753000
         OI    PLHINVAL(RPLH),B'00000010'                          0390 00754000
*           CALL EXIT;              /* RETURN.                       */ 00755000
         BAL   @14,EXIT                                            0391 00756000
*         END;                                                     0392 00757000
*RECSRCH:                                                          0393 00758000
*       PLHRECP=PLHRECP+PLHLRECL;   /* POINT TO NEXT RECORD.         */ 00759000
@RF00386 DS    0H                                                  0393 00760000
RECSRCH  L     @10,PLHRECP(,RPLH)                                  0393 00761000
         AL    @10,PLHLRECL(,RPLH)                                 0393 00762000
         ST    @10,PLHRECP(,RPLH)                                  0393 00763000
*       IF PLHRECP=>PLHFSP THEN     /* END OF CI.                    */ 00764000
         C     @10,PLHFSP(,RPLH)                                   0394 00765000
         BL    @RF00394                                            0394 00766000
*         DO;                                                      0395 00767000
*           PLHRAHD=ON;             /* ALLOW READ AHEAD.             */ 00768000
         OI    PLHRAHD(RPLH),B'01000000'                           0396 00769000
*           CALL ADVCI;             /* ADVANCE TO NEXT CI & SEARCH 0397 00770000
*                                      FOR RECORD.                   */ 00771000
         BAL   @14,ADVCI                                           0397 00772000
*           PLHRAHD=OFF;            /* RESET READ AHEAD FLAG.        */ 00773000
         NI    PLHRAHD(RPLH),B'10111111'                           0398 00774000
*         END;                                                     0399 00775000
*       ELSE                        /* NOT END OF CI.                */ 00776000
*         DO;                                                      0400 00777000
         B     @RC00394                                            0400 00778000
@RF00394 DS    0H                                                  0401 00779000
*           PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.     */ 00780000
         L     @10,PLHRDFP(,RPLH)                                  0401 00781000
         SL    @10,@CF00157                                        0401 00782000
         ST    @10,PLHRDFP(,RPLH)                                  0401 00783000
*           IF RDFEMPTY=ON THEN     /* EMPTY RECORD.                 */ 00784000
         TM    RDFEMPTY(@10),B'00000100'                           0402 00785000
         BO    @RT00402                                            0402 00786000
*             GOTO RECSRCH;         /* CONTINUE SEARCH.              */ 00787000
*         END;                                                     0404 00788000
*       IF RPLERREG='00'X|(RPLERREG='08'X&RPLERRCD=RPLEODER) THEN/*     00789000
*                                      NO ERROR OR END-OF-DATA.      */ 00790000
@RC00394 CLI   RPLERREG(RRPL),0                                    0405 00791000
         BE    @RT00405                                            0405 00792000
         CLI   RPLERREG(RRPL),8                                    0405 00793000
         BNE   @RF00405                                            0405 00794000
         CLI   RPLERRCD(RRPL),4                                    0405 00795000
         BNE   @RF00405                                            0405 00796000
@RT00405 DS    0H                                                  0406 00797000
*         DO;                                                      0406 00798000
*           PLHSAVE1=BUFCDDDD+PLHRECP-BUFCBAD;/* SET RECORD RBA TO 0407 00799000
*                                      ADVANCED POSITION.            */ 00800000
         L     @10,PLHDBUFC(,RPLH)                                 0407 00801000
         L     @05,BUFCDDDD(,@10)                                  0407 00802000
         AL    @05,PLHRECP(,RPLH)                                  0407 00803000
         SL    @05,BUFCBAD(,@10)                                   0407 00804000
         ST    @05,PLHSAVE1(,RPLH)                                 0407 00805000
*           PLHEFLGS=PLHVALID;      /* MAKE PLH VALID.               */ 00806000
         MVC   PLHEFLGS(2,RPLH),@CB00797                           0408 00807000
*           PLHRSTRT=ON;            /* SET PLH RESTART FLAG.         */ 00808000
         OI    PLHRSTRT(RPLH),B'10000000'                          0409 00809000
*         END;                                                     0410 00810000
*       ELSE                        /* ERROR, BUT NOT END-OF-DATA.   */ 00811000
*         PLHINVAL=ON;              /* MAKE PLH INVALID.             */ 00812000
         B     @RC00405                                            0411 00813000
@RF00405 OI    PLHINVAL(RPLH),B'00000010'                          0411 00814000
*     END;                          /* END SEARCH FOR RECORD.        */ 00815000
*   ELSE                            /* PUT REQ. OR NON-EMPTY RECORD. */ 00816000
*     PLHEFLGS=PLHVALID;            /* MAKE PLH VALID.               */ 00817000
         B     @RC00384                                            0413 00818000
@RF00384 MVC   PLHEFLGS(2,RPLH),@CB00797                           0413 00819000
*   CALL EXIT;                      /* RETURN.                       */ 00820000
@RC00384 BAL   @14,EXIT                                            0414 00821000
*IDAGXCTL:                                                         0415 00822000
*                                                                  0415 00823000
*   /*****************************************************************/ 00824000
*   /*                                                               */ 00825000
*   /* GET EXCLUSIVE CONTROL ROUTINE --- SETS READ EXCLUSIVE CONTROL */ 00826000
*   /* & CALLS DIRECT RECORD LOCATE TO OBTAIN BUFFER IN EXCLUSIVE    */ 00827000
*   /* CONTROL. IF EXCLUSIVE CONTROL NOT OBTAINED, PLHDSCAN IS SET   */ 00828000
*   /* ON.                                                           */ 00829000
*   /*                                                               */ 00830000
*   /*****************************************************************/ 00831000
*                                                                  0415 00832000
*   ENTRY;                                                         0415 00833000
@EP00415 DS    0H                                                  0416 00834000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 00835000
         IDASVR14                                                       00836000
*   IF PLHNOADV=ON THEN             /* NO ADVANCE IS ON.             */ 00837000
         TM    PLHNOADV(RPLH),B'00001000'                          0417 00838000
         BNO   @RF00417                                            0417 00839000
*     PLHSVADV=ON;                  /* REMEMBER NO ADVANCE.          */ 00840000
         OI    PLHSVADV(RPLH),B'00000010'                          0418 00841000
*   ELSE                            /* NO ADVANCE IS OFF.            */ 00842000
*     PLHSVADV=OFF;                 /* REMEMBER ADVANCE.             */ 00843000
         B     @RC00417                                            0419 00844000
@RF00417 NI    PLHSVADV(RPLH),B'11111101'                          0419 00845000
*   CALL IDARRDRL;                  /* CALL DIRECT RECORD LOCATE.    */ 00846000
@RC00417 L     @15,@CA00913                                        0420 00847000
         BALR  @14,@15                                             0420 00848000
*   IF RPLERREG='00'X THEN          /* NO ERROR.                     */ 00849000
         CLI   RPLERREG(RRPL),0                                    0421 00850000
         BNE   @RF00421                                            0421 00851000
*     DO;                           /* PROCESS ERROR.                */ 00852000
*       PLHDSCAN=OFF;               /* TURN OFF SCAN DATA FLAG.      */ 00853000
         NI    PLHDSCAN(RPLH),B'11111110'                          0423 00854000
*       IF PLHSVADV=ON THEN         /* NO ADVANCE ON BEFORE.         */ 00855000
         TM    PLHSVADV(RPLH),B'00000010'                          0424 00856000
         BNO   @RF00424                                            0424 00857000
*         PLHNOADV=ON;              /* SET PLH NO ADVANCE.           */ 00858000
         OI    PLHNOADV(RPLH),B'00001000'                          0425 00859000
*       ELSE                        /* NO ADVANCE OFF BEFORE.        */ 00860000
*         PLHNOADV=OFF;             /* TURN OFF NO ADVANCE.          */ 00861000
         B     @RC00424                                            0426 00862000
@RF00424 NI    PLHNOADV(RPLH),B'11110111'                          0426 00863000
*     END;                          /* END NO ERROR.                 */ 00864000
*   ELSE                            /* ERROR.                        */ 00865000
*     IF RPLERREG='08'X&RPLERRCD=RPLEXCL THEN/* READ EXCL ERROR.     */ 00866000
         B     @RC00421                                            0428 00867000
@RF00421 CLI   RPLERREG(RRPL),8                                    0428 00868000
         BNE   @RF00428                                            0428 00869000
         CLI   RPLERRCD(RRPL),20                                   0428 00870000
         BNE   @RF00428                                            0428 00871000
*       DO;                                                        0429 00872000
*         PLHDSCAN=ON;              /* SET SCAN DATA FLAG.           */ 00873000
*         PLHINVAL=OFF;             /* TURN OFF INVALID POS.         */ 00874000
         OI    PLHDSCAN(RPLH),B'00000001'                          0431 00875000
         NI    PLHINVAL(RPLH),B'11111101'                          0431 00876000
*       END;                                                       0432 00877000
*   CALL EXIT;                      /* RETURN.                       */ 00878000
@RF00428 DS    0H                                                  0433 00879000
@RC00421 BAL   @14,EXIT                                            0433 00880000
*COMGET:                                                           0434 00881000
*                                                                  0434 00882000
*   /*****************************************************************/ 00883000
*   /*                                                               */ 00884000
*   /* COMMON GET ROUTINE ---                                        */ 00885000
*   /*                                                               */ 00886000
*   /*****************************************************************/ 00887000
*                                                                  0434 00888000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0434 00889000
         B     @PB00002                                            0434 00890000
COMGET   DS    0H                                                  0435 00891000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 00892000
         IDASVR14                                                       00893000
*   RPLRLEN=PLHLRECL;               /* SET RECORD LENGTH IN RPL.     */ 00894000
         L     @10,PLHLRECL(,RPLH)                                 0436 00895000
         ST    @10,RPLRLEN(,RRPL)                                  0436 00896000
*   RPLDDDD=PLHSAVE1;               /* SET RECORD RBA IN RPL.        */ 00897000
         L     @10,PLHSAVE1(,RPLH)                                 0437 00898000
         ST    @10,RPLDDDD(,RRPL)                                  0437 00899000
*   PLHRCODE=RPLREQ;                /* SAVE REQUEST CODE.            */ 00900000
         IC    @10,RPLREQ(,RRPL)                                   0438 00901000
         STC   @10,PLHRCODE(,RPLH)                                 0438 00902000
*   IF RPLLOC=ON THEN               /* LOCATE MODE.                  */ 00903000
         TM    RPLLOC(RRPL),B'10000000'                            0439 00904000
         BNO   @RF00439                                            0439 00905000
*     RPLAREA->AREA=PLHRECP;        /* SET RECORD ADR IN RPLAREA   0440 00906000
*                                      FIELD.                        */ 00907000
         L     @10,RPLAREA(,RRPL)                                  0440 00908000
         L     @05,PLHRECP(,RPLH)                                  0440 00909000
         ST    @05,AREA(,@10)                                      0440 00910000
*   ELSE                            /* MOVE MODE.                    */ 00911000
*     DO;                           /* PROCESS MOVE MODE.            */ 00912000
         B     @RC00439                                            0441 00913000
@RF00439 DS    0H                                                  0442 00914000
*       IF RPLBUFL=>PLHLRECL THEN   /* USER AREA IS LARGE ENOUGH.    */ 00915000
         L     @10,PLHLRECL(,RPLH)                                 0442 00916000
         C     @10,RPLBUFL(,RRPL)                                  0442 00917000
         BH    @RF00442                                            0442 00918000
*         DO;                       /* MOVE RECORD TO USER.          */ 00919000
*           RFY                                                    0444 00920000
*            (RWORK2,                                              0444 00921000
*             RWORK3,                                              0444 00922000
*             RWORK4,                                              0444 00923000
*             RWORK5) RSTD;         /* RESTRICT REGS.                */ 00924000
*           RWORK2=RPLAREA;         /* TO ADDRESS.                   */ 00925000
         L     RWORK2,RPLAREA(,RRPL)                               0445 00926000
*           RWORK4=PLHRECP;         /* FROM ADDRESS.                 */ 00927000
         L     RWORK4,PLHRECP(,RPLH)                               0446 00928000
*           RWORK3=PLHLRECL;        /* TO LENGTH.                    */ 00929000
         LR    RWORK3,@10                                          0447 00930000
*           RWORK5=RWORK3;          /* FROM LENGTH.                  */ 00931000
         LR    RWORK5,RWORK3                                       0448 00932000
*           GEN(MVCL RWORK2,RWORK4);/* MOVE RECORD TO USER AREA.     */ 00933000
         MVCL RWORK2,RWORK4                                             00934000
*           RFY                                                    0450 00935000
*            (RWORK2,                                              0450 00936000
*             RWORK3,                                              0450 00937000
*             RWORK4,                                              0450 00938000
*             RWORK5) UNRSTD;       /* DROP REGS.                    */ 00939000
*         END;                      /* END MOVE RECORD.              */ 00940000
*       ELSE                        /* USER AREA TOO SMALL.          */ 00941000
*         DO;                       /* AREA LENGTH ERROR.            */ 00942000
         B     @RC00442                                            0452 00943000
@RF00442 DS    0H                                                  0453 00944000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 00945000
         MVI   RPLERREG(RRPL),X'08'                                0453 00946000
*           RPLERRCD=RPLINBUF;      /* SET AREA TOO SMALL ERROR.     */ 00947000
         MVI   RPLERRCD(RRPL),X'2C'                                0454 00948000
*           IF RPLDIR=ON&RPLNSP=OFF THEN/* REQ IS DIR & NOT NSP.     */ 00949000
         TM    RPLDIR(RRPL),B'01000000'                            0455 00950000
         BNO   @RF00455                                            0455 00951000
         TM    RPLNSP(RRPL),B'00000001'                            0455 00952000
         BNZ   @RF00455                                            0455 00953000
*             DO;                                                  0456 00954000
*               PLHINVAL=ON;        /* SET PLH INVALID.              */ 00955000
         OI    PLHINVAL(RPLH),B'00000010'                          0457 00956000
*               RBUFC=PLHDBUFC;     /* POINT TO DATA BUFC.           */ 00957000
         L     RBUFC,PLHDBUFC(,RPLH)                               0458 00958000
*I07:                                                              0459 00959000
*               DO;                 /* IDACALL(IDAFREEB)             */ 00960000
I07      DS    0H                                                  0460 00961000
*                 CALL IDAFREEB;    /* EXIT TO IDAFREEB              */ 00962000
         L     @15,@CV00908                                        0460 00963000
         BALR  @14,@15                                             0460 00964000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00965000
         BALR @11,0                                                     00966000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00967000
         USING *,@11                                                    00968000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00969000
         L     @11,=A(@PSTART)                                          00970000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00971000
         USING @PSTART,@11                                              00972000
*               END I07;            /* FREE DATA BUFFER.             */ 00973000
*             END;                                                 0466 00974000
*           ELSE                    /* REQ. NOT DIR & NSP OR UPD.    */ 00975000
*             PLHNOADV=ON;          /* SET PLH NO ADVANCE.           */ 00976000
         B     @RC00455                                            0467 00977000
@RF00455 OI    PLHNOADV(RPLH),B'00001000'                          0467 00978000
*           CALL EXIT;              /* RETURN.                       */ 00979000
@RC00455 BAL   @14,EXIT                                            0468 00980000
*         END;                      /* END AREA LENGTH ERROR.        */ 00981000
*     END;                          /* END OF MOVE MODE.             */ 00982000
@RC00442 DS    0H                                                  0471 00983000
*   IF RPLDIR=ON&RPLUPD=OFF&RPLNSP=OFF&RPLLOC=OFF THEN/* DIR & NUP &    00984000
*                                      MVE REQUEST.                  */ 00985000
@RC00439 TM    RPLDIR(RRPL),B'01000000'                            0471 00986000
         BNO   @RF00471                                            0471 00987000
         TM    RPLUPD(RRPL),B'00000011'                            0471 00988000
         BNZ   @RF00471                                            0471 00989000
         TM    RPLLOC(RRPL),B'10000000'                            0471 00990000
         BNZ   @RF00471                                            0471 00991000
*     DO;                           /* RELEASE POISITION.            */ 00992000
*       PLHINVAL=ON;                /* SET PLH INVALID.              */ 00993000
         OI    PLHINVAL(RPLH),B'00000010'                          0473 00994000
*       RBUFC=PLHDBUFC;             /* POINT TO DATA BUFC.           */ 00995000
         L     RBUFC,PLHDBUFC(,RPLH)                               0474 00996000
*I08:                                                              0475 00997000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00998000
I08      DS    0H                                                  0476 00999000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 01000000
         L     @15,@CV00908                                        0476 01001000
         BALR  @14,@15                                             0476 01002000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01003000
         BALR @11,0                                                     01004000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01005000
         USING *,@11                                                    01006000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01007000
         L     @11,=A(@PSTART)                                          01008000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01009000
         USING @PSTART,@11                                              01010000
*       END I08;                    /* FREE DATA BUFFER.             */ 01011000
*     END;                          /* END RELEASE POSITION.         */ 01012000
*   ELSE                            /* NOT DIR NUP MVE REQUEST.      */ 01013000
*     DO;                           /* RETAIN POSITION.              */ 01014000
         B     @RC00471                                            0483 01015000
@RF00471 DS    0H                                                  0484 01016000
*       IF RPLUPD=ON THEN           /* UPDATE REQUEST.               */ 01017000
         TM    RPLUPD(RRPL),B'00000010'                            0484 01018000
         BNO   @RF00484                                            0484 01019000
*         PLHUPD=ON;                /* SAVE IN PLH.                  */ 01020000
         OI    PLHUPD(RPLH),B'10000000'                            0485 01021000
*       ELSE                        /* NOT UPDATE REQUEST.           */ 01022000
*         PLHUPD=OFF;               /* SAVE IN PLH.                  */ 01023000
         B     @RC00484                                            0486 01024000
@RF00484 NI    PLHUPD(RPLH),B'01111111'                            0486 01025000
*       PLHNOADV=OFF;               /* CLEAR NO ADVANCE FLAG.        */ 01026000
@RC00484 NI    PLHNOADV(RPLH),B'11110111'                          0487 01027000
*       PLHRSTRT=OFF;               /* CLEAR RESTART FLAG.           */ 01028000
         NI    PLHRSTRT(RPLH),B'01111111'                          0488 01029000
*     END;                          /* END RETAIN POSITION.          */ 01030000
*   AMDRETR=AMDRETR+ONE;            /* INCR RETRIEVE COUNT STATISTICS*/ 01031000
@RC00471 L     @10,AMBDSB(,RAMB)                                   0490 01032000
         LA    @05,1                                               0490 01033000
         AL    @05,AMDRETR(,@10)                                   0490 01034000
         ST    @05,AMDRETR(,@10)                                   0490 01035000
*   IF AMBJRN=ON THEN               /* JOURNAL EXIT.                 */ 01036000
         TM    AMBJRN(RAMB),B'00000010'                            0491 01037000
         BNO   @RF00491                                            0491 01038000
*     DO;                                                          0492 01039000
*       PLHJCODE=PLHJGET;           /* SET JOURN CODE = GET.         */ 01040000
         MVI   PLHJCODE(RPLH),B'00000000'                          0493 01041000
*I09:                                                              0494 01042000
*       DO;                         /* IDACALL(IDATJXIT)             */ 01043000
I09      DS    0H                                                  0495 01044000
*         CALL IDATJXIT;            /* EXIT TO IDATJXIT              */ 01045000
         L     @15,@CV00912                                        0495 01046000
         BALR  @14,@15                                             0495 01047000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01048000
         BALR @11,0                                                     01049000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01050000
         USING *,@11                                                    01051000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01052000
         L     @11,=A(@PSTART)                                          01053000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01054000
         USING @PSTART,@11                                              01055000
*       END I09;                    /* CALL JOURNAL EXIT ROUTINE.    */ 01056000
*     END;                                                         0501 01057000
*   CALL EXIT;                      /* RETURN.                       */ 01058000
@RF00491 BAL   @14,EXIT                                            0502 01059000
*   END COMGET;                     /* END PROC. COMGET.             */ 01060000
@EL00002 DS    0H                                                  0503 01061000
@EF00002 DS    0H                                                  0503 01062000
@ER00002 BR    @14                                                 0503 01063000
*ADVPLH:                                                           0504 01064000
*                                                                  0504 01065000
*   /*****************************************************************/ 01066000
*   /*                                                               */ 01067000
*   /* ADVANCE PLH ROUTINE --- FOR SEQUENTIAL PROCESSING, ADVANCES   */ 01068000
*   /* POSITIONING TO NEXT VALID RECORD. SKIPS OVER EMPTY RECORDS.   */ 01069000
*   /* ADVANCES IN BACKWARD DIRECTION IF USER SPECIFIED BACKWARD     */ 01070000
*   /* PROCESSING IN RPL.                                            */ 01071000
*   /*                                                               */ 01072000
*   /*****************************************************************/ 01073000
*                                                                  0504 01074000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0504 01075000
ADVPLH   DS    0H                                                  0505 01076000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01077000
         IDASVR14                                                       01078000
*   IF RPLBWD=OFF THEN              /* FORWARD REQUEST.              */ 01079000
         TM    RPLBWD(RRPL),B'00010000'                            0506 01080000
         BNZ   @RF00506                                            0506 01081000
*     DO;                           /* ADVANCE FORWARD.              */ 01082000
*       IF PLHBWD=ON THEN           /* PREVIOUS REQ. WAS BACKWARD.   */ 01083000
         TM    PLHBWD(RPLH),B'00010000'                            0508 01084000
         BNO   @RF00508                                            0508 01085000
*         DO;                       /* POSITIONING ERROR.            */ 01086000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 01087000
         MVI   RPLERREG(RRPL),X'08'                                0510 01088000
*           RPLERRCD=RPLNOPTR;      /* SET POSITIONING ERROR.        */ 01089000
         MVI   RPLERRCD(RRPL),X'58'                                0511 01090000
*           CALL EXIT;              /* RETURN.                       */ 01091000
         BAL   @14,EXIT                                            0512 01092000
*         END;                      /* END POSITIONING ERROR.        */ 01093000
*       IF PLHSKPER=ON THEN         /* READ SKIP FLAG ON.            */ 01094000
@RF00508 TM    PLHSKPER(RPLH),B'00100000'                          0514 01095000
         BNO   @RF00514                                            0514 01096000
*         DO;                       /* SKIP ERROR CI.                */ 01097000
*           PLHSKPER=OFF;           /* CLEAR SKIP ERROR FLAG.        */ 01098000
         NI    PLHSKPER(RPLH),B'11011111'                          0516 01099000
*           CALL ADVCI;             /* ADVANCE TO NEXT CI & SEARCH 0517 01100000
*                                      FOR NEXT VALID RECORD.        */ 01101000
         BAL   @14,ADVCI                                           0517 01102000
*           CALL EXIT;              /* RETURN.                       */ 01103000
         BAL   @14,EXIT                                            0518 01104000
*         END;                      /* END SKIP ERROR CI.            */ 01105000
*NXTRCD:                                                           0520 01106000
*       PLHRECP=PLHRECP+PLHLRECL;   /* ADVANCE RECORD POINTER.       */ 01107000
@RF00514 DS    0H                                                  0520 01108000
NXTRCD   L     @10,PLHRECP(,RPLH)                                  0520 01109000
         AL    @10,PLHLRECL(,RPLH)                                 0520 01110000
         ST    @10,PLHRECP(,RPLH)                                  0520 01111000
*       IF PLHRECP<PLHFSP THEN      /* NOT END OF CI.                */ 01112000
         C     @10,PLHFSP(,RPLH)                                   0521 01113000
         BNL   @RF00521                                            0521 01114000
*         DO;                       /* NEXT RECORD.                  */ 01115000
*           PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.     */ 01116000
         L     @10,PLHRDFP(,RPLH)                                  0523 01117000
         SL    @10,@CF00157                                        0523 01118000
         ST    @10,PLHRDFP(,RPLH)                                  0523 01119000
*           IF RDFEMPTY=ON THEN     /* RECORD IS EMPTY.              */ 01120000
         TM    RDFEMPTY(@10),B'00000100'                           0524 01121000
         BO    @RT00524                                            0524 01122000
*             GOTO NXTRCD;          /* GO CHECK NEXT RECORD.         */ 01123000
*         END;                      /* END NEXT RECORD.              */ 01124000
*       ELSE                        /* END OF CI.                    */ 01125000
*         CALL ADVCI;               /* ADVANCE TO NEXT CI & SEARCH 0527 01126000
*                                      FOR NEXT VALID RECORD.        */ 01127000
         B     @RC00521                                            0527 01128000
@RF00521 BAL   @14,ADVCI                                           0527 01129000
*       CALL EXIT;                  /* RETURN.                       */ 01130000
@RC00521 BAL   @14,EXIT                                            0528 01131000
*     END;                          /* END ADVANCE FORWARD.          */ 01132000
*   ELSE                            /* BACKWARD REQUEST.             */ 01133000
*     DO;                           /* ADVANCE BACKWARD.             */ 01134000
         B     @RC00506                                            0530 01135000
@RF00506 DS    0H                                                  0531 01136000
*       IF PLHBWD=OFF THEN          /* PREVIOUS REQ. WAS FORWARD.    */ 01137000
         TM    PLHBWD(RPLH),B'00010000'                            0531 01138000
         BNZ   @RF00531                                            0531 01139000
*         DO;                       /* POSITIONING ERROR.            */ 01140000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 01141000
         MVI   RPLERREG(RRPL),X'08'                                0533 01142000
*           RPLERRCD=RPLNOPTR;      /* SET POSITIONING ERROR.        */ 01143000
         MVI   RPLERRCD(RRPL),X'58'                                0534 01144000
*           CALL EXIT;              /* RETURN.                       */ 01145000
         BAL   @14,EXIT                                            0535 01146000
*         END;                      /* END POSITIONING ERROR.        */ 01147000
*       IF PLHSKPER=ON THEN         /* READ SKIP FLAG ON.            */ 01148000
@RF00531 TM    PLHSKPER(RPLH),B'00100000'                          0537 01149000
         BNO   @RF00537                                            0537 01150000
*         DO;                       /* SKIP ERROR CI.                */ 01151000
*           PLHSKPER=OFF;           /* CLEAR SKIP ERROR FLAG.        */ 01152000
         NI    PLHSKPER(RPLH),B'11011111'                          0539 01153000
*           CALL ADVCI;             /* ADVANCE TO PREVIOUS CI &    0540 01154000
*                                      SEARCH FOR NEXT VALID RECORD. */ 01155000
         BAL   @14,ADVCI                                           0540 01156000
*           CALL EXIT;              /* RETURN.                       */ 01157000
         BAL   @14,EXIT                                            0541 01158000
*         END;                      /* END SKIP ERROR CI.            */ 01159000
*PRVRCD:                                                           0543 01160000
*       IF PLHRECP>BUFCBAD THEN     /* NOT BEGINNING OF CI.          */ 01161000
@RF00537 DS    0H                                                  0543 01162000
PRVRCD   L     @10,PLHRECP(,RPLH)                                  0543 01163000
         L     @05,PLHDBUFC(,RPLH)                                 0543 01164000
         C     @10,BUFCBAD(,@05)                                   0543 01165000
         BNH   @RF00543                                            0543 01166000
*         DO;                       /* PREVIOUS RECORD.              */ 01167000
*           PLHRECP=PLHRECP-PLHLRECL;/* BACKUP RECORD POINTER.       */ 01168000
         SL    @10,PLHLRECL(,RPLH)                                 0545 01169000
         ST    @10,PLHRECP(,RPLH)                                  0545 01170000
*           PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* POINT TO PREVIOUS RDF. */ 01171000
         LA    @10,3                                               0546 01172000
         AL    @10,PLHRDFP(,RPLH)                                  0546 01173000
         ST    @10,PLHRDFP(,RPLH)                                  0546 01174000
*           IF RDFEMPTY=ON THEN     /* EMPTY RECORD.                 */ 01175000
         TM    RDFEMPTY(@10),B'00000100'                           0547 01176000
         BO    @RT00547                                            0547 01177000
*             GOTO PRVRCD;          /* GO CHECK PREVIOUS RECORD.     */ 01178000
*         END;                      /* END PREVIOUS RECORD.          */ 01179000
*       ELSE                        /* BEGINNING OF CI.              */ 01180000
*         CALL ADVCI;               /* ADVANCE TO PREVIOUS CI &    0550 01181000
*                                      SEARCH FOR NEXT VALID RECORD. */ 01182000
         B     @RC00543                                            0550 01183000
@RF00543 BAL   @14,ADVCI                                           0550 01184000
*       CALL EXIT;                  /* RETURN.                       */ 01185000
@RC00543 BAL   @14,EXIT                                            0551 01186000
*     END;                          /* END ADVANCE BACKWARD.         */ 01187000
*   END ADVPLH;                     /* END PROC. ADVPLH.             */ 01188000
@EL00003 DS    0H                                                  0553 01189000
@EF00003 DS    0H                                                  0553 01190000
@ER00003 BR    @14                                                 0553 01191000
*ADVCI:                                                            0554 01192000
*                                                                  0554 01193000
*   /*****************************************************************/ 01194000
*   /*                                                               */ 01195000
*   /* ADVANCE CI ROUTINE ---                                        */ 01196000
*   /*                                                               */ 01197000
*   /*****************************************************************/ 01198000
*                                                                  0554 01199000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0554 01200000
ADVCI    DS    0H                                                  0555 01201000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01202000
         IDASVR14                                                       01203000
*   IF PLHASKBF=ON THEN             /* ASK BUFFER IS ON.             */ 01204000
         TM    PLHASKBF(RPLH),B'00100000'                          0556 01205000
         BNO   @RF00556                                            0556 01206000
*     DO;                                                          0557 01207000
*       RPARM1=ZERO;                /* ADD MAX. NO. OF BUFFERS.      */ 01208000
         SLR   RPARM1,RPARM1                                       0558 01209000
*I10:                                                              0559 01210000
*       DO;                         /* IDACALL(IDAABF)               */ 01211000
I10      DS    0H                                                  0560 01212000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 01213000
         L     @15,@CV00904                                        0560 01214000
         BALR  @14,@15                                             0560 01215000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01216000
         BALR @11,0                                                     01217000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01218000
         USING *,@11                                                    01219000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01220000
         L     @11,=A(@PSTART)                                          01221000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01222000
         USING @PSTART,@11                                              01223000
*       END I10;                    /* CALL ADD BUFFER.              */ 01224000
*     END;                                                         0566 01225000
*   IF RPLUPD=ON THEN               /* UPDATE REQ.                   */ 01226000
@RF00556 TM    RPLUPD(RRPL),B'00000010'                            0567 01227000
         BNO   @RF00567                                            0567 01228000
*     PLHRDEXC=ON;                  /* SET READ EXCLUSIVE FLAG.      */ 01229000
         OI    PLHRDEXC(RPLH),B'00001000'                          0568 01230000
*   ELSE                            /* NOT UPDATE REQ.               */ 01231000
*     PLHRDEXC=OFF;                 /* CLEAR READ EXCLUSIVE FLAG.    */ 01232000
         B     @RC00567                                            0569 01233000
@RF00567 NI    PLHRDEXC(RPLH),B'11110111'                          0569 01234000
*GNXTCI:                                                           0570 01235000
*   RBUFC=PLHDBUFC;                 /* POINT TO DATA BUFC.           */ 01236000
@RC00567 DS    0H                                                  0570 01237000
GNXTCI   L     RBUFC,PLHDBUFC(,RPLH)                               0570 01238000
*I11:                                                              0571 01239000
*   DO;                             /* IDACALL(IDAFREEB)             */ 01240000
I11      DS    0H                                                  0572 01241000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 01242000
         L     @15,@CV00908                                        0572 01243000
         BALR  @14,@15                                             0572 01244000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01245000
         BALR @11,0                                                     01246000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01247000
         USING *,@11                                                    01248000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01249000
         L     @11,=A(@PSTART)                                          01250000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01251000
         USING @PSTART,@11                                              01252000
*   END I11;                        /* FREE DATA BUFFER.             */ 01253000
*I12:                                                              0578 01254000
*   DO;                             /* IDACALL(IDAGNXT)              */ 01255000
I12      DS    0H                                                  0579 01256000
*     CALL IDAGNXT;                 /* EXIT TO IDAGNXT               */ 01257000
         L     @15,@CV00905                                        0579 01258000
         BALR  @14,@15                                             0579 01259000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01260000
         BALR @11,0                                                     01261000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01262000
         USING *,@11                                                    01263000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01264000
         L     @11,=A(@PSTART)                                          01265000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01266000
         USING @PSTART,@11                                              01267000
*   END I12;                        /* GET NEXT CI.                  */ 01268000
*   IF RPLERREG^='00'X THEN         /* BUFFER ERROR.                 */ 01269000
         CLI   RPLERREG(RRPL),0                                    0585 01270000
         BE    @RF00585                                            0585 01271000
*     DO;                           /* PROCESS ERROR.                */ 01272000
*       IF RPLERREG='08'X&RPLERRCD=RPLEXCL THEN/* EXCL CTL ERR.      */ 01273000
         CLI   RPLERREG(RRPL),8                                    0587 01274000
         BNE   @RF00587                                            0587 01275000
         CLI   RPLERRCD(RRPL),20                                   0587 01276000
         BNE   @RF00587                                            0587 01277000
*         PLHDSCAN=ON;              /* SET SCANDATA FLAG.            */ 01278000
         OI    PLHDSCAN(RPLH),B'00000001'                          0588 01279000
*       IF RPLBWD=ON THEN           /* BACKWARD REQ.                 */ 01280000
@RF00587 TM    RPLBWD(RRPL),B'00010000'                            0589 01281000
         BNO   @RF00589                                            0589 01282000
*         PLHSAVE1=RPARM1+((AMDNSLOT-1)*PLHLRECL);/* SAVE    @ZA07544   01283000
*                                      RBA OF LAST REC IN PREV CI.   */ 01284000
         L     @10,AMBDSB(,RAMB)                                   0590 01285000
         L     @07,AMDNSLOT(,@10)                                  0590 01286000
         BCTR  @07,0                                               0590 01287000
         M     @06,PLHLRECL(,RPLH)                                 0590 01288000
         ALR   @07,RPARM1                                          0590 01289000
         ST    @07,PLHSAVE1(,RPLH)                                 0590 01290000
*       ELSE                        /* FORWARD REQ.                  */ 01291000
*         PLHSAVE1=RPARM1;          /* SAVE RBA OF NEXT CI.  @ZA07544*/ 01292000
         B     @RC00589                                            0591 01293000
@RF00589 ST    RPARM1,PLHSAVE1(,RPLH)                              0591 01294000
*       PLHNOADV=ON;                /* DO NOT ADVANCE PLH.   @ZA07544*/ 01295000
@RC00589 OI    PLHNOADV(RPLH),B'00001000'                          0592 01296000
*       CALL EXIT;                  /* RETURN.                       */ 01297000
         BAL   @14,EXIT                                            0593 01298000
*     END;                          /* END PROCESS ERROR.            */ 01299000
*   PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FS PTR.            */ 01300000
@RF00585 L     @10,PLHDBUFC(,RPLH)                                 0595 01301000
         L     @10,BUFCBAD(,@10)                                   0595 01302000
         L     @05,AMBDSB(,RAMB)                                   0595 01303000
         L     @07,AMDNSLOT(,@05)                                  0595 01304000
         M     @06,PLHLRECL(,RPLH)                                 0595 01305000
         ALR   @07,@10                                             0595 01306000
         ST    @07,PLHFSP(,RPLH)                                   0595 01307000
*   IF RPLBWD=OFF THEN              /* FORWARD DIRECTION.            */ 01308000
         TM    RPLBWD(RRPL),B'00010000'                            0596 01309000
         BNZ   @RF00596                                            0596 01310000
*     DO;                           /* ADVANCE FORWARD.              */ 01311000
*       PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/*  0598 01312000
*                                      POINT TO 1ST RDF.             */ 01313000
         LR    @00,@10                                             0598 01314000
         AL    @00,AMDCINV(,@05)                                   0598 01315000
         SL    @00,@CF00288                                        0598 01316000
         ST    @00,PLHRDFP(,RPLH)                                  0598 01317000
*       PLHRECP=BUFCBAD;            /* POINT TO 1ST RECORD.          */ 01318000
         ST    @10,PLHRECP(,RPLH)                                  0599 01319000
*       DO WHILE RDFEMPTY=ON;       /* LOOP ON EMPTY RECORDS.        */ 01320000
         B     @DE00600                                            0600 01321000
@DL00600 DS    0H                                                  0601 01322000
*         PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.       */ 01323000
         L     @10,PLHRDFP(,RPLH)                                  0601 01324000
         SL    @10,@CF00157                                        0601 01325000
         ST    @10,PLHRDFP(,RPLH)                                  0601 01326000
*         PLHRECP=PLHRECP+PLHLRECL; /* POINT TO NEXT RECORD.         */ 01327000
         L     @10,PLHRECP(,RPLH)                                  0602 01328000
         AL    @10,PLHLRECL(,RPLH)                                 0602 01329000
         ST    @10,PLHRECP(,RPLH)                                  0602 01330000
*         IF PLHRECP=>PLHFSP THEN   /* END OF CI.                    */ 01331000
         C     @10,PLHFSP(,RPLH)                                   0603 01332000
         BNL   @RT00603                                            0603 01333000
*           GOTO GNXTCI;            /* GO TO NEXT CI.                */ 01334000
*       END;                        /* END OF LOOP.                  */ 01335000
@DE00600 L     @10,PLHRDFP(,RPLH)                                  0605 01336000
         TM    RDFEMPTY(@10),B'00000100'                           0605 01337000
         BO    @DL00600                                            0605 01338000
*     END;                          /* END ADVANCE FORWARD.          */ 01339000
*   ELSE                            /* ADVANCE BACKWARD.             */ 01340000
*     DO;                                                          0607 01341000
         B     @RC00596                                            0607 01342000
@RF00596 DS    0H                                                  0608 01343000
*       PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-(AMDNSLOT*LENGTH(IDARDF 01344000
*           ));                     /* POINT TO LAST RDF.            */ 01345000
         L     @10,PLHDBUFC(,RPLH)                                 0608 01346000
         L     @05,AMBDSB(,RAMB)                                   0608 01347000
         L     @10,BUFCBAD(,@10)                                   0608 01348000
         AL    @10,AMDCINV(,@05)                                   0608 01349000
         SL    @10,@CF00067                                        0608 01350000
         L     @05,AMDNSLOT(,@05)                                  0608 01351000
         MH    @05,@CH00157                                        0608 01352000
         SLR   @10,@05                                             0608 01353000
         ST    @10,PLHRDFP(,RPLH)                                  0608 01354000
*       PLHRECP=PLHFSP-PLHLRECL;    /* POINT TO LAST RECORD.         */ 01355000
         L     @10,PLHFSP(,RPLH)                                   0609 01356000
         SL    @10,PLHLRECL(,RPLH)                                 0609 01357000
         ST    @10,PLHRECP(,RPLH)                                  0609 01358000
*       DO WHILE RDFEMPTY=ON;       /* LOOP ON EMPTY RECORDS.        */ 01359000
         B     @DE00610                                            0610 01360000
@DL00610 DS    0H                                                  0611 01361000
*         IF PLHRECP=<BUFCBAD THEN  /* BEGINNING OF CI.              */ 01362000
         L     @10,PLHRECP(,RPLH)                                  0611 01363000
         L     @05,PLHDBUFC(,RPLH)                                 0611 01364000
         C     @10,BUFCBAD(,@05)                                   0611 01365000
         BNH   @RT00611                                            0611 01366000
*           GOTO GNXTCI;            /* GO TO NEXT CI.                */ 01367000
*         PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* POINT TO PREV. RDF.      */ 01368000
         LA    @05,3                                               0613 01369000
         AL    @05,PLHRDFP(,RPLH)                                  0613 01370000
         ST    @05,PLHRDFP(,RPLH)                                  0613 01371000
*         PLHRECP=PLHRECP-PLHLRECL; /* POINT TO PREV. RECORD.        */ 01372000
         SL    @10,PLHLRECL(,RPLH)                                 0614 01373000
         ST    @10,PLHRECP(,RPLH)                                  0614 01374000
*       END;                        /* END OF LOOP.                  */ 01375000
@DE00610 L     @10,PLHRDFP(,RPLH)                                  0615 01376000
         TM    RDFEMPTY(@10),B'00000100'                           0615 01377000
         BO    @DL00610                                            0615 01378000
*     END;                          /* END ADVANCE BACKWARD.         */ 01379000
*   CALL EXIT;                      /* RETURN.                       */ 01380000
@RC00596 BAL   @14,EXIT                                            0617 01381000
*   END ADVCI;                      /* END PROC. ADVCI.              */ 01382000
@EL00004 DS    0H                                                  0618 01383000
@EF00004 DS    0H                                                  0618 01384000
@ER00004 BR    @14                                                 0618 01385000
*PLHEXP:                                                           0619 01386000
*                                                                  0619 01387000
*   /*****************************************************************/ 01388000
*   /*                                                               */ 01389000
*   /* PLH EXCEPTION ROUTINE ---                                     */ 01390000
*   /*                                                               */ 01391000
*   /*****************************************************************/ 01392000
*                                                                  0619 01393000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0619 01394000
PLHEXP   DS    0H                                                  0620 01395000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14.             */ 01396000
         IDASVR14                                                       01397000
*   IF PLH1ST=ON THEN               /* 1ST REQ AFTER OPEN.           */ 01398000
         TM    PLH1ST(RPLH),B'01000000'                            0621 01399000
         BNO   @RF00621                                            0621 01400000
*     DO;                           /* PROCESS 1ST REQ.              */ 01401000
*       IF RPLBWD=ON THEN           /* BACKWARD DIRECTION.           */ 01402000
         TM    RPLBWD(RRPL),B'00010000'                            0623 01403000
         BNO   @RF00623                                            0623 01404000
*         DO;                       /* BWD FOR 1ST REQ NOT ALLOWED.  */ 01405000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 01406000
         MVI   RPLERREG(RRPL),X'08'                                0625 01407000
*           RPLERRCD=RPLNOPTR;      /* SET NO POSITION ERROR.        */ 01408000
         MVI   RPLERRCD(RRPL),X'58'                                0626 01409000
*           CALL EXIT;              /* RETURN.                       */ 01410000
         BAL   @14,EXIT                                            0627 01411000
*         END;                      /* END BWD ERROR.                */ 01412000
*       PLHASKBF=ON;                /* SET PLH ASK BUFFER.           */ 01413000
@RF00623 OI    PLHASKBF(RPLH),B'00100000'                          0629 01414000
*       RPARM1=ZERO;                /* ADD MAX NO. OF BUFFERS.       */ 01415000
         SLR   RPARM1,RPARM1                                       0630 01416000
*I13:                                                              0631 01417000
*       DO;                         /* IDACALL(IDAABF)               */ 01418000
I13      DS    0H                                                  0632 01419000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 01420000
         L     @15,@CV00904                                        0632 01421000
         BALR  @14,@15                                             0632 01422000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01423000
         BALR @11,0                                                     01424000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01425000
         USING *,@11                                                    01426000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01427000
         L     @11,=A(@PSTART)                                          01428000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01429000
         USING @PSTART,@11                                              01430000
*       END I13;                    /* CALL ADD BUFFER.              */ 01431000
*       IF RPLUPD=ON THEN           /* UPDATE REQUEST.               */ 01432000
         TM    RPLUPD(RRPL),B'00000010'                            0638 01433000
         BNO   @RF00638                                            0638 01434000
*         PLHRDEXC=ON;              /* SET PLH READ EXCLUSIVE.       */ 01435000
         OI    PLHRDEXC(RPLH),B'00001000'                          0639 01436000
*       RPARM1=ZERO;                /* RBA OF 1ST CI.                */ 01437000
@RF00638 SLR   RPARM1,RPARM1                                       0640 01438000
*I14:                                                              0641 01439000
*       DO;                         /* IDACALL(IDAGRB)               */ 01440000
I14      DS    0H                                                  0642 01441000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 01442000
         L     @15,@CV00906                                        0642 01443000
         BALR  @14,@15                                             0642 01444000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01445000
         BALR @11,0                                                     01446000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01447000
         USING *,@11                                                    01448000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01449000
         L     @11,=A(@PSTART)                                          01450000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01451000
         USING @PSTART,@11                                              01452000
*       END I14;                    /* GET CI BY RBA.                */ 01453000
*       IF RPLERREG^='00'X THEN     /* ERROR.                        */ 01454000
         CLI   RPLERREG(RRPL),0                                    0648 01455000
         BE    @RF00648                                            0648 01456000
*         DO;                                                      0649 01457000
*           IF RPLERREG='0C'X THEN  /* I/O ERROR.                    */ 01458000
         CLI   RPLERREG(RRPL),12                                   0650 01459000
         BNE   @RF00650                                            0650 01460000
*             PLH1ST=OFF;           /* ALLOW SKIPPING 1ST CI.        */ 01461000
         NI    PLH1ST(RPLH),B'10111111'                            0651 01462000
*           CALL EXIT;              /* RETURN.                       */ 01463000
@RF00650 BAL   @14,EXIT                                            0652 01464000
*         END;                                                     0653 01465000
*       PLH1ST=OFF;                 /* TURN OFF 1ST REQ. FLAG.       */ 01466000
@RF00648 NI    PLH1ST(RPLH),B'10111111'                            0654 01467000
*       PLHRECP=BUFCBAD;            /* SET REC. PTR TO 1ST RECORD.   */ 01468000
         L     @10,PLHDBUFC(,RPLH)                                 0655 01469000
         L     @10,BUFCBAD(,@10)                                   0655 01470000
         ST    @10,PLHRECP(,RPLH)                                  0655 01471000
*       PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/* SET   01472000
*                                      RDF PTR.                      */ 01473000
         L     @05,AMBDSB(,RAMB)                                   0656 01474000
         LR    @00,@10                                             0656 01475000
         AL    @00,AMDCINV(,@05)                                   0656 01476000
         SL    @00,@CF00288                                        0656 01477000
         ST    @00,PLHRDFP(,RPLH)                                  0656 01478000
*       PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FS PTR.        */ 01479000
         L     @07,AMDNSLOT(,@05)                                  0657 01480000
         M     @06,PLHLRECL(,RPLH)                                 0657 01481000
         ALR   @10,@07                                             0657 01482000
         ST    @10,PLHFSP(,RPLH)                                   0657 01483000
*RECLOOP:                                                          0658 01484000
*       IF RDFEMPTY=ON THEN         /* EMPTY RECORD.                 */ 01485000
RECLOOP  L     @10,PLHRDFP(,RPLH)                                  0658 01486000
         TM    RDFEMPTY(@10),B'00000100'                           0658 01487000
         BNO   @RF00658                                            0658 01488000
*         DO;                                                      0659 01489000
*           PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* POINT TO NEXT RDF.     */ 01490000
         SL    @10,@CF00157                                        0660 01491000
         ST    @10,PLHRDFP(,RPLH)                                  0660 01492000
*           PLHRECP=PLHRECP+PLHLRECL;/* ADVANCE RECORD PTR.          */ 01493000
         L     @10,PLHRECP(,RPLH)                                  0661 01494000
         AL    @10,PLHLRECL(,RPLH)                                 0661 01495000
         ST    @10,PLHRECP(,RPLH)                                  0661 01496000
*           IF PLHRECP<PLHFSP THEN  /* NOT END OF CI.                */ 01497000
         C     @10,PLHFSP(,RPLH)                                   0662 01498000
         BL    @RT00662                                            0662 01499000
*             GOTO RECLOOP;         /* GO CHECK NEXT RECORD.         */ 01500000
*           CALL ADVCI;             /* ADVANCE TO NEXT CI & SEARCH 0664 01501000
*                                      FOR RECORD.                   */ 01502000
         BAL   @14,ADVCI                                           0664 01503000
*         END;                                                     0665 01504000
*       CALL EXIT;                  /* RETURN.                       */ 01505000
@RF00658 BAL   @14,EXIT                                            0666 01506000
*     END;                          /* END PROCESS 1ST REQ.          */ 01507000
*   ELSE                            /* NOT 1ST REQ AFTER OPEN.       */ 01508000
*     DO;                           /* PROCESS NON-1ST REQ.          */ 01509000
         B     @RC00621                                            0668 01510000
@RF00621 DS    0H                                                  0669 01511000
*       IF PLHEODX=ON THEN          /* EOD ON PREVIOUS REQ.          */ 01512000
         TM    PLHEODX(RPLH),B'00000100'                           0669 01513000
         BNO   @RF00669                                            0669 01514000
*         DO;                                                      0670 01515000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR IN RPL.     */ 01516000
         MVI   RPLERREG(RRPL),X'08'                                0671 01517000
*           RPLERRCD=RPLEODER;      /* SET EOD ERROR.                */ 01518000
         MVI   RPLERRCD(RRPL),X'04'                                0672 01519000
*           CALL EXIT;              /* RETURN.                       */ 01520000
         BAL   @14,EXIT                                            0673 01521000
*         END;                                                     0674 01522000
*       IF PLHSKPER=ON THEN         /* SKIP CI FLAG ON.              */ 01523000
@RF00669 TM    PLHSKPER(RPLH),B'00100000'                          0675 01524000
         BNO   @RF00675                                            0675 01525000
*         DO;                                                      0676 01526000
*           CALL ADVPLH;            /* CALL ADVANCE PLACEHOLDER.     */ 01527000
         BAL   @14,ADVPLH                                          0677 01528000
*           CALL EXIT;              /* RETURN.                       */ 01529000
         BAL   @14,EXIT                                            0678 01530000
*         END;                                                     0679 01531000
*       IF PLHDSCAN=ON THEN         /* PREV READ EXCL CONTROL ERROR. */ 01532000
@RF00675 TM    PLHDSCAN(RPLH),B'00000001'                          0680 01533000
         BNO   @RF00680                                            0680 01534000
*         DO;                                                      0681 01535000
*           CALL IDAGXCTL;          /* GET BUFFER IN EXCL CONTROL.   */ 01536000
         L     @15,@CA00914                                        0682 01537000
         BALR  @14,@15                                             0682 01538000
*           IF RPLERREG^='00'X THEN /* ERROR.                        */ 01539000
         CLI   RPLERREG(RRPL),0                                    0683 01540000
         BE    @RF00683                                            0683 01541000
*             CALL EXIT;            /* RETURN.                       */ 01542000
         BAL   @14,EXIT                                            0684 01543000
*           IF RDFEMPTY=ON THEN     /* RECORD IS EMPTY.              */ 01544000
@RF00683 L     @10,PLHRDFP(,RPLH)                                  0685 01545000
         TM    RDFEMPTY(@10),B'00000100'                           0685 01546000
         BNO   @RF00685                                            0685 01547000
*             CALL ADVPLH;          /* SEARCH FOR NEXT RECORD.       */ 01548000
         BAL   @14,ADVPLH                                          0686 01549000
*           CALL EXIT;              /* RETURN.                       */ 01550000
@RF00685 BAL   @14,EXIT                                            0687 01551000
*         END;                                                     0688 01552000
*       IF PLHNOADV=ON THEN         /* NO ADVANCE IS ON.             */ 01553000
@RF00680 TM    PLHNOADV(RPLH),B'00001000'                          0689 01554000
         BNO   @RF00689                                            0689 01555000
*         DO;                                                      0690 01556000
*           IF PLHRECP=>PLHFSP THEN /* REC PTR AT END OF CI.         */ 01557000
         CLC   PLHRECP(4,RPLH),PLHFSP(RPLH)                        0691 01558000
         BL    @RF00691                                            0691 01559000
*             CALL ADVPLH;          /* CALL ADVANCE PLACEHOLDER.     */ 01560000
         BAL   @14,ADVPLH                                          0692 01561000
*         END;                                                     0693 01562000
*       ELSE                        /* NO ADVANCE IS OFF.            */ 01563000
*         IF PLHINVAL=ON THEN       /* PLH IS INVALID.               */ 01564000
         B     @RC00689                                            0694 01565000
@RF00689 TM    PLHINVAL(RPLH),B'00000010'                          0694 01566000
         BNO   @RF00694                                            0694 01567000
*           DO;                                                    0695 01568000
*             RPLERREG='08'X;       /* SET LOGICAL IN RPL.           */ 01569000
         MVI   RPLERREG(RRPL),X'08'                                0696 01570000
*             RPLERRCD=RPLNOPTR;    /* SET NO POSITION ERROR.        */ 01571000
         MVI   RPLERRCD(RRPL),X'58'                                0697 01572000
*           END;                                                   0698 01573000
*     END;                          /* END NON-1ST REQUEST.          */ 01574000
@RF00694 DS    0H                                                  0699 01575000
@RC00689 DS    0H                                                  0700 01576000
*   CALL EXIT;                      /* RETURN.                       */ 01577000
@RC00621 BAL   @14,EXIT                                            0700 01578000
*   END PLHEXP;                     /* END PROC. PLHEXP.             */ 01579000
@EL00005 DS    0H                                                  0701 01580000
@EF00005 DS    0H                                                  0701 01581000
@ER00005 BR    @14                                                 0701 01582000
*LRD:                                                              0702 01583000
*                                                                  0702 01584000
*   /*****************************************************************/ 01585000
*   /*                                                               */ 01586000
*   /* LAST RECORD ROUTINE ---                                       */ 01587000
*   /*                                                               */ 01588000
*   /*****************************************************************/ 01589000
*                                                                  0702 01590000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0702 01591000
LRD      DS    0H                                                  0703 01592000
*   GEN(IDASVR14);                                                 0703 01593000
         IDASVR14                                                       01594000
*   PLHASKBF=ON;                    /* SET PLH ASK BUFFER.           */ 01595000
         OI    PLHASKBF(RPLH),B'00100000'                          0704 01596000
*   IF RPLUPD=ON THEN               /* UPDATE REQUEST.               */ 01597000
         TM    RPLUPD(RRPL),B'00000010'                            0705 01598000
         BNO   @RF00705                                            0705 01599000
*     PLHRDEXC=ON;                  /* SET PLH READ EXCLUSIVE.       */ 01600000
         OI    PLHRDEXC(RPLH),B'00001000'                          0706 01601000
*   ELSE                            /* NOT UPDATE REQUEST.           */ 01602000
*     PLHRDEXC=OFF;                 /* CLEAR PLH READ EXCLUSIVE.     */ 01603000
         B     @RC00705                                            0707 01604000
@RF00705 NI    PLHRDEXC(RPLH),B'11110111'                          0707 01605000
*   RPARM1=ARDHRBA-AMDCINV;         /* RBA OF LAST CI OF DATA SET.   */ 01606000
@RC00705 L     @10,AMBDSB(,RAMB)                                   0708 01607000
         L     @05,AMDPARDB(,@10)                                  0708 01608000
         L     RPARM1,ARDHRBA(,@05)                                0708 01609000
         SL    RPARM1,AMDCINV(,@10)                                0708 01610000
*I15:                                                              0709 01611000
*   DO;                             /* IDACALL(IDAGRB)               */ 01612000
I15      DS    0H                                                  0710 01613000
*     CALL IDAGRB;                  /* EXIT TO IDAGRB                */ 01614000
         L     @15,@CV00906                                        0710 01615000
         BALR  @14,@15                                             0710 01616000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01617000
         BALR @11,0                                                     01618000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01619000
         USING *,@11                                                    01620000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01621000
         L     @11,=A(@PSTART)                                          01622000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01623000
         USING @PSTART,@11                                              01624000
*   END I15;                        /* GET CI BY RBA.                */ 01625000
*   IF RPLERREG^='00'X THEN         /* ERROR.                        */ 01626000
         CLI   RPLERREG(RRPL),0                                    0716 01627000
         BE    @RF00716                                            0716 01628000
*     DO;                                                          0717 01629000
*       PLHINVAL=ON;                /* SET PLH INVALID.              */ 01630000
         OI    PLHINVAL(RPLH),B'00000010'                          0718 01631000
*       CALL EXIT;                  /* RETURN.                       */ 01632000
         BAL   @14,EXIT                                            0719 01633000
*     END;                                                         0720 01634000
*   PLHRDFP=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-(AMDNSLOT*LENGTH(IDARDF));  01635000
@RF00716 L     @10,PLHDBUFC(,RPLH)                                 0721 01636000
         L     @10,BUFCBAD(,@10)                                   0721 01637000
         L     @05,AMBDSB(,RAMB)                                   0721 01638000
         LR    @00,@10                                             0721 01639000
         AL    @00,AMDCINV(,@05)                                   0721 01640000
         SL    @00,@CF00067                                        0721 01641000
         L     @05,AMDNSLOT(,@05)                                  0721 01642000
         LR    @15,@05                                             0721 01643000
         MH    @15,@CH00157                                        0721 01644000
         SLR   @00,@15                                             0721 01645000
         ST    @00,PLHRDFP(,RPLH)                                  0721 01646000
*                                   /* POINT TO LAST RDF.            */ 01647000
*   PLHFSP=BUFCBAD+(AMDNSLOT*PLHLRECL);/* SET PLH FS PTR.            */ 01648000
         L     @15,PLHLRECL(,RPLH)                                 0722 01649000
         LR    @07,@05                                             0722 01650000
         MR    @06,@15                                             0722 01651000
         ALR   @10,@07                                             0722 01652000
         ST    @10,PLHFSP(,RPLH)                                   0722 01653000
*   PLHRECP=PLHFSP-PLHLRECL;        /* POINT TO LAST RECORD.         */ 01654000
         SLR   @10,@15                                             0723 01655000
         ST    @10,PLHRECP(,RPLH)                                  0723 01656000
*RCDLOOP:                                                          0724 01657000
*   IF RDFEMPTY=ON THEN             /* EMPTY RECORD.                 */ 01658000
RCDLOOP  L     @10,PLHRDFP(,RPLH)                                  0724 01659000
         TM    RDFEMPTY(@10),B'00000100'                           0724 01660000
         BNO   @RF00724                                            0724 01661000
*     IF PLHRECP>BUFCBAD THEN       /* NOT BEGINNING OF CI.          */ 01662000
         L     @05,PLHRECP(,RPLH)                                  0725 01663000
         L     @15,PLHDBUFC(,RPLH)                                 0725 01664000
         C     @05,BUFCBAD(,@15)                                   0725 01665000
         BNH   @RF00725                                            0725 01666000
*       DO;                                                        0726 01667000
*         PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* POINT TO PREV RDF.       */ 01668000
         AL    @10,@CF00157                                        0727 01669000
         ST    @10,PLHRDFP(,RPLH)                                  0727 01670000
*         PLHRECP=PLHRECP-PLHLRECL; /* POINT TO PREV RECORD.         */ 01671000
         SL    @05,PLHLRECL(,RPLH)                                 0728 01672000
         ST    @05,PLHRECP(,RPLH)                                  0728 01673000
*         GOTO RCDLOOP;             /* CONTINUE SEARCH.              */ 01674000
         B     RCDLOOP                                             0729 01675000
*       END;                                                       0730 01676000
*     ELSE                          /* BEGINNING OF CI.              */ 01677000
*       DO;                                                        0731 01678000
@RF00725 DS    0H                                                  0732 01679000
*         PLHRAHD=ON;               /* ALLOW READ AHEAD.             */ 01680000
         OI    PLHRAHD(RPLH),B'01000000'                           0732 01681000
*         CALL ADVCI;               /* ADVANCE TO NEXT CI & SEARCH 0733 01682000
*                                      FOR RECORD.                   */ 01683000
         BAL   @14,ADVCI                                           0733 01684000
*         PLHRAHD=OFF;              /* RESET READ AHEAD FLAG.        */ 01685000
         NI    PLHRAHD(RPLH),B'10111111'                           0734 01686000
*         IF RPLERREG='08'X&RPLERRCD=RPLEODER THEN/* EOD - HIT     0735 01687000
*                                      BEGINNING OF DATA SET.        */ 01688000
         CLI   RPLERREG(RRPL),8                                    0735 01689000
         BNE   @RF00735                                            0735 01690000
         CLI   RPLERRCD(RRPL),4                                    0735 01691000
         BNE   @RF00735                                            0735 01692000
*           RPLERRCD=RPLNOREC;      /* SET NO RECORD FOUND ERROR.    */ 01693000
         MVI   RPLERRCD(RRPL),X'10'                                0736 01694000
*       END;                                                       0737 01695000
@RF00735 DS    0H                                                  0738 01696000
*   IF RPLERREG='00'X THEN          /* NO ERROR.                     */ 01697000
@RF00724 CLI   RPLERREG(RRPL),0                                    0738 01698000
         BNE   @RF00738                                            0738 01699000
*     DO;                                                          0739 01700000
*       PLHSAVE1=BUFCDDDD+PLHRECP-BUFCBAD;/* SET RECORD RBA.         */ 01701000
         L     @10,PLHDBUFC(,RPLH)                                 0740 01702000
         L     @05,BUFCDDDD(,@10)                                  0740 01703000
         AL    @05,PLHRECP(,RPLH)                                  0740 01704000
         SL    @05,BUFCBAD(,@10)                                   0740 01705000
         ST    @05,PLHSAVE1(,RPLH)                                 0740 01706000
*       PLHEFLGS=PLHVALID;          /* MAKE PLH VALID.               */ 01707000
         MVC   PLHEFLGS(2,RPLH),@CB00797                           0741 01708000
*     END;                                                         0742 01709000
*   ELSE                            /* ERROR.                        */ 01710000
*     PLHINVAL=ON;                  /* MAKE PLH INVALID.             */ 01711000
         B     @RC00738                                            0743 01712000
@RF00738 OI    PLHINVAL(RPLH),B'00000010'                          0743 01713000
*   CALL EXIT;                      /* RETURN.                       */ 01714000
@RC00738 BAL   @14,EXIT                                            0744 01715000
*   END LRD;                        /* END PROC. LRD.                */ 01716000
@EL00006 DS    0H                                                  0745 01717000
@EF00006 DS    0H                                                  0745 01718000
@ER00006 BR    @14                                                 0745 01719000
*EXIT:                                                             0746 01720000
*                                                                  0746 01721000
*   /*****************************************************************/ 01722000
*   /*                                                               */ 01723000
*   /* EXIT ROUTINE --- RESTORES REGISTER 14 FROM PLH PUSHDOWN LIST &*/ 01724000
*   /* RETURNS TO CALLER.                                            */ 01725000
*   /*                                                               */ 01726000
*   /*****************************************************************/ 01727000
*                                                                  0746 01728000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0746 01729000
EXIT     DS    0H                                                  0747 01730000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14.          */ 01731000
         IDARST14                                                       01732000
*   RETURN;                         /* RETURN TO CALLER.             */ 01733000
@EL00007 DS    0H                                                  0748 01734000
@EF00007 DS    0H                                                  0748 01735000
@ER00007 BR    @14                                                 0748 01736000
*   END EXIT;                       /* END PROC. EXIT.               */ 01737000
*MODEXIT:                                                          0750 01738000
*                                                                  0750 01739000
*   /*****************************************************************/ 01740000
*   /*                                                               */ 01741000
*   /* MODULE EXIT ROUTINE --- RESTORES REGISTER 14 & RETURNS TO     */ 01742000
*   /* CALLER OF MODULE.                                             */ 01743000
*   /*                                                               */ 01744000
*   /*****************************************************************/ 01745000
*                                                                  0750 01746000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0750 01747000
MODEXIT  DS    0H                                                  0751 01748000
*   GEN(IDARST14);                  /* RESTORE REG 14                */ 01749000
         IDARST14                                                       01750000
*   RETURN;                         /* EXIT FROM MODULE.             */ 01751000
@EL00008 DS    0H                                                  0752 01752000
@EF00008 DS    0H                                                  0752 01753000
@ER00008 BR    @14                                                 0752 01754000
*   END MODEXIT;                    /* END PROC. MODEXIT.            */ 01755000
@PB00008 DS    0H                                                  0754 01756000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA.            */ 01757000
         IDAPATCH                                                       01758000
*   END IDA019RR                    /* END MODULE IDA019RR.          */ 01759000
*                                                                  0755 01760000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01761000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01762000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01763000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01764000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01765000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01766000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01767000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01768000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01769000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01770000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 01771000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01772000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01773000
*                                                                  0755 01774000
*       ;                                                          0755 01775000
@EL00001 DS    0H                                                  0755 01776000
@EF00001 DS    0H                                                  0755 01777000
@ER00001 BR    @14                                                 0755 01778000
@DATA    DS    0H                                                       01779000
@DATD    DSECT                                                          01780000
         DS    0F                                                       01781000
IDA019RR CSECT                                                          01782000
         DS    0F                                                       01783000
@CF00053 DC    F'1'                                                     01784000
@CF00157 DC    F'3'                                                     01785000
@CH00157 EQU   @CF00157+2                                               01786000
@CF00067 DC    F'4'                                                     01787000
@CF00288 DC    F'7'                                                     01788000
@DATD    DSECT                                                          01789000
         DS    0D                                                       01790000
IDA019RR CSECT                                                          01791000
         DS    0F                                                       01792000
@SIZDATD DC    AL1(0)                                                   01793000
         DC    AL3(@ENDDATD-@DATD)                                      01794000
@CA00913 DC    A(IDARRDRL)                                              01795000
@CA00914 DC    A(IDAGXCTL)                                              01796000
@CV00904 DC    V(IDAABF)                                                01797000
@CV00905 DC    V(IDAGNXT)                                               01798000
@CV00906 DC    V(IDAGRB)                                                01799000
@CV00907 DC    V(IDAWRBFR)                                              01800000
@CV00908 DC    V(IDAFREEB)                                              01801000
@CV00909 DC    V(IDA019RQ)                                              01802000
@CV00910 DC    V(IDAAIBF)                                               01803000
@CV00911 DC    V(IDASBF)                                                01804000
@CV00912 DC    V(IDATJXIT)                                              01805000
         DS    0D                                                       01806000
HWORD4   DC    H'4'                                                     01807000
@CB00797 DC    X'0000'                                                  01808000
@DATD    DSECT                                                          01809000
*                                                          /*@X04SVLC*/ 01810000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01811000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01812000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01813000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01814000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01815000
RDFLEN   EQU   3                        LENGTH OF RDF                   01816000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01817000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01818000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01819000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01820000
@DATD    DSECT                                                          01821000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01822000
@ENDDATD EQU   *                                                        01823000
IDA019RR CSECT                                                          01824000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01825000
@01      EQU   01                                                       01826000
@02      EQU   02                                                       01827000
@03      EQU   03                                                       01828000
@04      EQU   04                                                       01829000
@05      EQU   05                                                       01830000
@06      EQU   06                                                       01831000
@07      EQU   07                                                       01832000
@08      EQU   08                                                       01833000
@09      EQU   09                                                       01834000
@10      EQU   10                                                       01835000
@11      EQU   11                                                       01836000
@12      EQU   12                                                       01837000
@13      EQU   13                                                       01838000
@14      EQU   14                                                       01839000
@15      EQU   15                                                       01840000
RRPL     EQU   @01                                                      01841000
RPLH     EQU   @02                                                      01842000
RAMB     EQU   @03                                                      01843000
RBUFC    EQU   @04                                                      01844000
RWORK1   EQU   @05                                                      01845000
RWORK2   EQU   @06                                                      01846000
RWORK3   EQU   @07                                                      01847000
RWORK4   EQU   @08                                                      01848000
RWORK5   EQU   @09                                                      01849000
RPARM1   EQU   @12                                                      01850000
RWORK0   EQU   @00                                                      01851000
R1       EQU   @01                                                      01852000
R10      EQU   @10                                                      01853000
R11      EQU   @11                                                      01854000
R13      EQU   @13                                                      01855000
R14      EQU   @14                                                      01856000
R15      EQU   @15                                                      01857000
IFGRPL   EQU   0                                                        01858000
RPLCOMN  EQU   IFGRPL                                                   01859000
RPLIDWD  EQU   RPLCOMN                                                  01860000
RPLREQ   EQU   RPLIDWD+2                                                01861000
RPLLEN   EQU   RPLIDWD+3                                                01862000
RPLECB   EQU   RPLCOMN+8                                                01863000
RPLFDBWD EQU   RPLCOMN+12                                               01864000
RPLFDBK  EQU   RPLFDBWD+1                                               01865000
RPLRTNCD EQU   RPLFDBK                                                  01866000
RPLERREG EQU   RPLRTNCD                                                 01867000
RPLCNDCD EQU   RPLFDBK+1                                                01868000
RPLCMPON EQU   RPLCNDCD                                                 01869000
RPLFDB2  EQU   RPLCMPON                                                 01870000
RPLERRCD EQU   RPLCNDCD+1                                               01871000
RPLFDB3  EQU   RPLERRCD                                                 01872000
RPLKEYLE EQU   RPLCOMN+16                                               01873000
RPLDACB  EQU   RPLCOMN+24                                               01874000
RPLAREA  EQU   RPLCOMN+32                                               01875000
RPLARG   EQU   RPLCOMN+36                                               01876000
RPLOPTCD EQU   RPLCOMN+40                                               01877000
RPLOPT1  EQU   RPLOPTCD                                                 01878000
RPLLOC   EQU   RPLOPT1                                                  01879000
RPLDIR   EQU   RPLOPT1                                                  01880000
RPLSEQ   EQU   RPLOPT1                                                  01881000
RPLSKP   EQU   RPLOPT1                                                  01882000
RPLKGE   EQU   RPLOPT1                                                  01883000
RPLECBSW EQU   RPLOPT1                                                  01884000
RPLOPT2  EQU   RPLOPTCD+1                                               01885000
RPLADR   EQU   RPLOPT2                                                  01886000
RPLBWD   EQU   RPLOPT2                                                  01887000
RPLLRD   EQU   RPLOPT2                                                  01888000
RPLUPD   EQU   RPLOPT2                                                  01889000
RPLNSP   EQU   RPLOPT2                                                  01890000
RPLOPT3  EQU   RPLOPTCD+2                                               01891000
RPLNXTRP EQU   RPLCOMN+44                                               01892000
RPLRLEN  EQU   RPLCOMN+48                                               01893000
RPLBUFL  EQU   RPLCOMN+52                                               01894000
RPLOPTC2 EQU   RPLCOMN+56                                               01895000
RPLOPT5  EQU   RPLOPTC2                                                 01896000
RPLWRTYP EQU   RPLOPT5                                                  01897000
RPLOPT6  EQU   RPLOPTC2+1                                               01898000
RPLUNTYP EQU   RPLOPT6                                                  01899000
RPLOPT7  EQU   RPLOPTC2+2                                               01900000
RPLCNOPT EQU   RPLOPT7                                                  01901000
RPLOPT8  EQU   RPLOPTC2+3                                               01902000
RPLRBAR  EQU   RPLCOMN+60                                               01903000
RPLAIXID EQU   RPLRBAR+2                                                01904000
RPLDDDD  EQU   RPLRBAR+4                                                01905000
RPLEXTDS EQU   RPLCOMN+68                                               01906000
RPLEXTD1 EQU   RPLEXTDS                                                 01907000
IFGACB   EQU   0                                                        01908000
ACBCOMN  EQU   IFGACB                                                   01909000
ACBLENG  EQU   ACBCOMN+2                                                01910000
ACBLENG2 EQU   ACBLENG                                                  01911000
ACBAMBL  EQU   ACBCOMN+4                                                01912000
ACBJWA   EQU   ACBAMBL                                                  01913000
ACBMACRF EQU   ACBCOMN+12                                               01914000
ACBMACR1 EQU   ACBMACRF                                                 01915000
ACBADR   EQU   ACBMACR1                                                 01916000
ACBCNV   EQU   ACBMACR1                                                 01917000
ACBMACR2 EQU   ACBMACRF+1                                               01918000
ACBBUFPL EQU   ACBCOMN+20                                               01919000
ACBMACR3 EQU   ACBBUFPL                                                 01920000
ACBRECFM EQU   ACBCOMN+24                                               01921000
ACBCCTYP EQU   ACBCOMN+25                                               01922000
ACBOPT   EQU   ACBCOMN+26                                               01923000
ACBDSORG EQU   ACBOPT                                                   01924000
ACBCROPS EQU   ACBDSORG                                                 01925000
ACBEXLST EQU   ACBCOMN+36                                               01926000
ACBDDNM  EQU   ACBCOMN+40                                               01927000
ACBAMETH EQU   ACBDDNM+3                                                01928000
ACBOFLGS EQU   ACBCOMN+48                                               01929000
ACBEXFG  EQU   ACBOFLGS                                                 01930000
ACBIOSFG EQU   ACBOFLGS                                                 01931000
ACBINFLG EQU   ACBCOMN+50                                               01932000
ACBUJFCB EQU   ACBCOMN+52                                               01933000
ACBBLKSZ EQU   ACBCOMN+60                                               01934000
IDAAMBL  EQU   0                                                        01935000
AMBLEOV  EQU   IDAAMBL+12                                               01936000
AMBLEFLG EQU   AMBLEOV                                                  01937000
AMBLDDNM EQU   IDAAMBL+16                                               01938000
AMBLIDF  EQU   AMBLDDNM                                                 01939000
AMBLQ    EQU   AMBLIDF+7                                                01940000
AMBLVC   EQU   IDAAMBL+28                                               01941000
AMBLTYPE EQU   IDAAMBL+30                                               01942000
AMBLSHAR EQU   IDAAMBL+33                                               01943000
AMBLFLG1 EQU   IDAAMBL+35                                               01944000
AMBLFLG2 EQU   IDAAMBL+36                                               01945000
IDAAMB   EQU   0                                                        01946000
AMBDSB   EQU   IDAAMB+20                                                01947000
AMBEOVR  EQU   IDAAMB+24                                                01948000
AMBFLG0  EQU   AMBEOVR                                                  01949000
AMBFLG1  EQU   IDAAMB+25                                                01950000
AMBCREAT EQU   AMBFLG1                                                  01951000
AMBSPEED EQU   AMBFLG1                                                  01952000
AMBJRN   EQU   AMBFLG1                                                  01953000
AMBDSORG EQU   IDAAMB+26                                                01954000
AMBIOBAD EQU   IDAAMB+28                                                01955000
AMBINFL  EQU   IDAAMB+42                                                01956000
AMBDEBPT EQU   IDAAMB+44                                                01957000
AMBOFLGS EQU   IDAAMB+48                                                01958000
AMBFLG2  EQU   IDAAMB+49                                                01959000
AMBEOVPT EQU   IDAAMB+56                                                01960000
AMBCSWD1 EQU   IDAAMB+84                                                01961000
AMBAFLG  EQU   AMBCSWD1                                                 01962000
IDAAMDSB EQU   0                                                        01963000
AMDATTR  EQU   IDAAMDSB+1                                               01964000
AMDNEST  EQU   IDAAMDSB+4                                               01965000
AMDCINV  EQU   IDAAMDSB+20                                              01966000
AMDLRECL EQU   IDAAMDSB+24                                              01967000
AMDHLRBA EQU   IDAAMDSB+28                                              01968000
AMDNSLOT EQU   AMDHLRBA                                                 01969000
AMDSSRBA EQU   IDAAMDSB+32                                              01970000
AMDMAXRR EQU   AMDSSRBA                                                 01971000
AMDPARDB EQU   IDAAMDSB+36                                              01972000
AMDATTR3 EQU   IDAAMDSB+40                                              01973000
AMDSTAT  EQU   IDAAMDSB+48                                              01974000
AMDRETR  EQU   AMDSTAT+28                                               01975000
IDAPLHDR EQU   0                                                        01976000
IDAPLH   EQU   0                                                        01977000
PLHFLG1  EQU   IDAPLH+2                                                 01978000
PLHASKBF EQU   PLHFLG1                                                  01979000
PLHRDEXC EQU   PLHFLG1                                                  01980000
PLHFLG2  EQU   IDAPLH+3                                                 01981000
PLHUPD   EQU   PLHFLG2                                                  01982000
PLHSVADV EQU   PLHFLG2                                                  01983000
PLHEFLGS EQU   IDAPLH+4                                                 01984000
PLH1ST   EQU   PLHEFLGS                                                 01985000
PLHSKPER EQU   PLHEFLGS                                                 01986000
PLHNOADV EQU   PLHEFLGS                                                 01987000
PLHEODX  EQU   PLHEFLGS                                                 01988000
PLHINVAL EQU   PLHEFLGS                                                 01989000
PLHDSCAN EQU   PLHEFLGS                                                 01990000
PLHRSTRT EQU   PLHEFLGS+1                                               01991000
PLHFLG3  EQU   IDAPLH+6                                                 01992000
PLHRAHD  EQU   PLHFLG3                                                  01993000
PLHBWD   EQU   PLHFLG3                                                  01994000
PLHAFLGS EQU   IDAPLH+7                                                 01995000
PLHBFRNO EQU   IDAPLH+15                                                01996000
PLHCRBA  EQU   IDAPLH+28                                                01997000
PLHJORBA EQU   PLHCRBA                                                  01998000
PLHJCODE EQU   IDAPLH+40                                                01999000
PLHRCODE EQU   IDAPLH+41                                                02000000
PLHLRECL EQU   IDAPLH+48                                                02001000
PLHDBUFC EQU   IDAPLH+52                                                02002000
PLHRECP  EQU   IDAPLH+60                                                02003000
PLHFSP   EQU   IDAPLH+64                                                02004000
PLHRDFP  EQU   IDAPLH+68                                                02005000
PLHDIOB  EQU   IDAPLH+76                                                02006000
PLHSAVE1 EQU   IDAPLH+84                                                02007000
PLHRETO  EQU   IDAPLH+116                                               02008000
PLHRET1  EQU   IDAPLH+120                                               02009000
PLHEOVPT EQU   IDAPLH+180                                               02010000
PLHIXSPL EQU   IDAPLH+200                                               02011000
PLHSSRBA EQU   PLHIXSPL                                                 02012000
PLHHIREC EQU   PLHSSRBA                                                 02013000
PLHWAX   EQU   IDAPLH+232                                               02014000
PLHKEYPT EQU   IDAPLH+248                                               02015000
PLHEND   EQU   IDAPLH+280                                               02016000
PLHRRN   EQU   0                                                        02017000
IDABUFDR EQU   0                                                        02018000
BUFDRCIX EQU   IDABUFDR+9                                               02019000
BUFDRFLG EQU   IDABUFDR+11                                              02020000
IDABUFC  EQU   0                                                        02021000
BUFCAVL  EQU   IDABUFC                                                  02022000
BUFCFLG1 EQU   IDABUFC+1                                                02023000
BUFCINS  EQU   BUFCFLG1                                                 02024000
BUFCVAL  EQU   BUFCFLG1                                                 02025000
BUFCEXC  EQU   BUFCFLG1                                                 02026000
BUFCIOFL EQU   IDABUFC+2                                                02027000
BUFCMW   EQU   BUFCIOFL                                                 02028000
BUFCFLG2 EQU   IDABUFC+3                                                02029000
BUFCPLH  EQU   IDABUFC+4                                                02030000
BUFCDDDD EQU   IDABUFC+8                                                02031000
BUFCBAD  EQU   IDABUFC+20                                               02032000
BUFCINV  EQU   IDABUFC+28                                               02033000
BUFCNXT2 EQU   IDABUFC+37                                               02034000
IDAARDB  EQU   0                                                        02035000
ARDTYPE  EQU   IDAARDB+1                                                02036000
ARDHRBA  EQU   IDAARDB+12                                               02037000
ARDPRF   EQU   IDAARDB+28                                               02038000
IDACIDF  EQU   0                                                        02039000
CIDFLL   EQU   IDACIDF+2                                                02040000
IDARDF   EQU   0                                                        02041000
RDFRBYTE EQU   IDARDF                                                   02042000
RDFSEG   EQU   RDFRBYTE                                                 02043000
RDFEMPTY EQU   RDFRBYTE                                                 02044000
IDADATA  EQU   0                                                        02045000
IDAKEY   EQU   0                                                        02046000
ARGFIELD EQU   0                                                        02047000
AREA     EQU   0                                                        02048000
PLHKEY   EQU   0                                                        02049000
PLHPDL   EQU   0                                                        02050000
PLHPDLE  EQU   0                                                        02051000
PLHEXTEN EQU   PLHEND                                                   02052000
PLHBMWRK EQU   PLHEXTEN+5                                               02053000
PLHSAV1X EQU   PLHSAVE1                                                 02054000
BUFCRSC1 EQU   BUFCAVL                                                  02055000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02056000
PLHBMSV5 EQU   PLHEXTEN+24                                              02057000
PLHBMSV4 EQU   PLHEXTEN+20                                              02058000
PLHBMSV3 EQU   PLHEXTEN+16                                              02059000
PLHBMSV2 EQU   PLHEXTEN+12                                              02060000
PLHBMSV1 EQU   PLHEXTEN+8                                               02061000
PLHRDCNT EQU   PLHEXTEN+6                                               02062000
PLHBMSOV EQU   PLHBMWRK                                                 02063000
PLHBEUC  EQU   PLHBMWRK                                                 02064000
PLHBMRDF EQU   PLHBMWRK                                                 02065000
@NM00042 EQU   PLHEXTEN+4                                               02066000
PLHRESR1 EQU   PLHEXTEN                                                 02067000
KEY      EQU   IDAKEY                                                   02068000
AMDATA   EQU   IDADATA                                                  02069000
RDFLL    EQU   IDARDF+1                                                 02070000
RDFREPL  EQU   RDFRBYTE                                                 02071000
RDF1ST   EQU   RDFSEG                                                   02072000
RDFNOT1  EQU   RDFSEG                                                   02073000
RDFCTNU  EQU   RDFRBYTE                                                 02074000
RDFTYPE  EQU   RDFRBYTE                                                 02075000
@NM00047 EQU   CIDFLL                                                   02076000
CIDFBUSY EQU   CIDFLL                                                   02077000
CIDFOSET EQU   IDACIDF                                                  02078000
ARDKEYS  EQU   IDAARDB+29                                               02079000
@NM00046 EQU   ARDPRF                                                   02080000
ARDPRFMT EQU   ARDPRF                                                   02081000
ARDPRSS  EQU   ARDPRF                                                   02082000
ARDRELNO EQU   IDAARDB+26                                               02083000
ARDVOLSR EQU   IDAARDB+20                                               02084000
ARDERBA  EQU   IDAARDB+16                                               02085000
ARDHKRBA EQU   IDAARDB+8                                                02086000
ARDNPTR  EQU   IDAARDB+4                                                02087000
ARDLEN   EQU   IDAARDB+2                                                02088000
ARDUSED  EQU   ARDTYPE                                                  02089000
ARDEOD   EQU   ARDTYPE                                                  02090000
ARDUOVFL EQU   ARDTYPE                                                  02091000
ARDSS    EQU   ARDTYPE                                                  02092000
ARDHLI   EQU   ARDTYPE                                                  02093000
ARDKR    EQU   ARDTYPE                                                  02094000
ARDID    EQU   IDAARDB                                                  02095000
BUFCEND  EQU   IDABUFC+64                                               02096000
BUFCUCDN EQU   IDABUFC+60                                               02097000
BUFCUCUP EQU   IDABUFC+56                                               02098000
BUFCMDBT EQU   IDABUFC+52                                               02099000
BUFCHAIN EQU   IDABUFC+48                                               02100000
BUFXORBA EQU   IDABUFC+44                                               02101000
BUFXIRBA EQU   IDABUFC+40                                               02102000
BUFCIDXL EQU   IDABUFC+36                                               02103000
BUFCDSPC EQU   IDABUFC+32                                               02104000
BUFCWLEN EQU   BUFCINV                                                  02105000
BUFCNXT1 EQU   IDABUFC+24                                               02106000
BUFCCPA  EQU   IDABUFC+16                                               02107000
BUFCORBA EQU   IDABUFC+12                                               02108000
BUFCAMB  EQU   BUFCPLH                                                  02109000
@NM00045 EQU   BUFCFLG2                                                 02110000
BUFCEOD  EQU   BUFCFLG2                                                 02111000
BUFCBSYW EQU   BUFCFLG2                                                 02112000
BUFCBSYR EQU   BUFCFLG2                                                 02113000
BUFCNLAS EQU   BUFCFLG2                                                 02114000
BUFCXDDR EQU   BUFCFLG2                                                 02115000
BUFCFIX  EQU   BUFCIOFL                                                 02116000
BUFCPFCP EQU   BUFCIOFL                                                 02117000
BUFCXEDB EQU   BUFCIOFL                                                 02118000
BUFCWC   EQU   BUFCIOFL                                                 02119000
BUFCREAL EQU   BUFCIOFL                                                 02120000
BUFCRRD  EQU   BUFCIOFL                                                 02121000
BUFCFMT  EQU   BUFCIOFL                                                 02122000
BUFCEPT  EQU   BUFCFLG1                                                 02123000
BUFCER2  EQU   BUFCFLG1                                                 02124000
BUFCER1  EQU   BUFCFLG1                                                 02125000
BUFCSEG  EQU   BUFCFLG1                                                 02126000
BUFCUPG  EQU   BUFCFLG1                                                 02127000
BUFCUCNT EQU   BUFCAVL                                                  02128000
@NM00044 EQU   IDABUFDR+16                                              02129000
BUFDBUFC EQU   IDABUFDR+12                                              02130000
@NM00043 EQU   BUFDRFLG                                                 02131000
BUFDRAVL EQU   BUFDRFLG                                                 02132000
BUFDRREL EQU   BUFDRFLG                                                 02133000
BUFDRTSB EQU   IDABUFDR+10                                              02134000
BUFDRMAX EQU   BUFDRCIX                                                 02135000
BUFDRPFN EQU   IDABUFDR+8                                               02136000
BUFDRPFB EQU   IDABUFDR+4                                               02137000
BUFDRLEN EQU   IDABUFDR+2                                               02138000
BUFDRNO  EQU   IDABUFDR+1                                               02139000
BUFDRID  EQU   IDABUFDR                                                 02140000
PLHERRET EQU   IDAPLH+276                                               02141000
PLHASCB  EQU   IDAPLH+272                                               02142000
PLHECB   EQU   IDAPLH+268                                               02143000
@NM00041 EQU   IDAPLH+265                                               02144000
PLHDRMSK EQU   IDAPLH+264                                               02145000
PLHR13   EQU   IDAPLH+260                                               02146000
PLHPARM1 EQU   IDAPLH+256                                               02147000
PLHDRRSC EQU   IDAPLH+252                                               02148000
PLHSLRBA EQU   IDAPLH+244                                               02149000
PLHSRCSG EQU   IDAPLH+242                                               02150000
PLHNOSEG EQU   IDAPLH+240                                               02151000
PLHLLOR  EQU   IDAPLH+236                                               02152000
PLHXPLH  EQU   PLHWAX                                                   02153000
@NM00040 EQU   PLHIXSPL+8                                               02154000
PLHIXBFC EQU   PLHIXSPL+4                                               02155000
PLHISPLP EQU   IDAPLH+196                                               02156000
PLHRBUFC EQU   IDAPLH+192                                               02157000
PLHIBUFC EQU   IDAPLH+188                                               02158000
PLHNRBA  EQU   IDAPLH+184                                               02159000
PLHDDDD  EQU   PLHEOVPT                                                 02160000
PLHAR14  EQU   IDAPLH+176                                               02161000
@NM00039 EQU   IDAPLH+172                                               02162000
@NM00038 EQU   IDAPLH+168                                               02163000
PLHASAVE EQU   IDAPLH+164                                               02164000
PLHRETOS EQU   IDAPLH+118                                               02165000
PLHCHAIN EQU   IDAPLH+112                                               02166000
PLHAMB   EQU   IDAPLH+108                                               02167000
PLHSAVE6 EQU   IDAPLH+104                                               02168000
PLHSAVE5 EQU   IDAPLH+100                                               02169000
PLHSAVE4 EQU   IDAPLH+96                                                02170000
PLHSAVE3 EQU   IDAPLH+92                                                02171000
PLHSAVE2 EQU   IDAPLH+88                                                02172000
PLHARET  EQU   IDAPLH+80                                                02173000
PLHIIOB  EQU   PLHDIOB                                                  02174000
PLHSRSID EQU   IDAPLH+74                                                02175000
PLHRDFC  EQU   IDAPLH+72                                                02176000
PLHNBUFC EQU   IDAPLH+56                                                02177000
PLHARDB  EQU   IDAPLH+44                                                02178000
@NM00037 EQU   IDAPLH+43                                                02179000
PLHEOVR  EQU   IDAPLH+42                                                02180000
PLHUCODE EQU   PLHJCODE                                                 02181000
PLHJNRBA EQU   IDAPLH+36                                                02182000
PLHJRNLL EQU   IDAPLH+32                                                02183000
PLHUPECB EQU   PLHJORBA                                                 02184000
PLHDSIDA EQU   IDAPLH+24                                                02185000
PLHCRPL  EQU   IDAPLH+20                                                02186000
PLHMRPL  EQU   IDAPLH+16                                                02187000
PLHFRCNT EQU   IDAPLH+14                                                02188000
PLHRMIN  EQU   IDAPLH+13                                                02189000
PLHDSTYP EQU   IDAPLH+12                                                02190000
PLHACB   EQU   IDAPLH+8                                                 02191000
PLHRAE   EQU   PLHAFLGS                                                 02192000
PLHRABWD EQU   PLHAFLGS                                                 02193000
PLHIOSID EQU   PLHAFLGS                                                 02194000
PLHDBDC  EQU   PLHAFLGS                                                 02195000
PLHVAMB  EQU   PLHAFLGS                                                 02196000
PLHIOSRQ EQU   PLHAFLGS                                                 02197000
PLHDRLM  EQU   PLHAFLGS                                                 02198000
PLHEOVDF EQU   PLHFLG3                                                  02199000
PLHRVRS  EQU   PLHFLG3                                                  02200000
PLHSLVLD EQU   PLHFLG3                                                  02201000
PLHSRBSG EQU   PLHFLG3                                                  02202000
@NM00036 EQU   PLHEFLGS+1                                               02203000
PLHSRINV EQU   PLHEFLGS                                                 02204000
PLHNOSPC EQU   PLHEFLGS                                                 02205000
PLHIWAIT EQU   PLHFLG2                                                  02206000
PLHCIINS EQU   PLHFLG2                                                  02207000
PLHKRE   EQU   PLHFLG2                                                  02208000
PLHADDTE EQU   PLHFLG2                                                  02209000
PLHKEYMD EQU   PLHFLG2                                                  02210000
PLHSQINS EQU   PLHFLG2                                                  02211000
@NM00035 EQU   PLHFLG1                                                  02212000
PLHDRPND EQU   PLHFLG1                                                  02213000
PLHASYRQ EQU   PLHFLG1                                                  02214000
PLHSSR   EQU   PLHFLG1                                                  02215000
PLHENDRQ EQU   PLHFLG1                                                  02216000
PLHEOVW  EQU   PLHFLG1                                                  02217000
PLHATV   EQU   IDAPLH+1                                                 02218000
PLHAVL   EQU   IDAPLH                                                   02219000
PLHIOSDQ EQU   IDAPLHDR+12                                              02220000
PLHDRCUR EQU   IDAPLHDR+10                                              02221000
PLHDRMAX EQU   IDAPLHDR+8                                               02222000
PLHDRREQ EQU   IDAPLHDR+4                                               02223000
PLHELTH  EQU   IDAPLHDR+2                                               02224000
PLHCNT   EQU   IDAPLHDR+1                                               02225000
PLHID    EQU   IDAPLHDR                                                 02226000
AMDEXCP  EQU   AMDSTAT+44                                               02227000
AMDNCAS  EQU   AMDSTAT+40                                               02228000
AMDNCIS  EQU   AMDSTAT+36                                               02229000
AMDASPA  EQU   AMDSTAT+32                                               02230000
AMDUPR   EQU   AMDSTAT+24                                               02231000
AMDIREC  EQU   AMDSTAT+20                                               02232000
AMDDELR  EQU   AMDSTAT+16                                               02233000
AMDNLR   EQU   AMDSTAT+12                                               02234000
AMDNEXT  EQU   AMDSTAT+10                                               02235000
AMDNIL   EQU   AMDSTAT+8                                                02236000
AMDSTSP  EQU   AMDSTAT                                                  02237000
@NM00034 EQU   IDAAMDSB+41                                              02238000
@NM00033 EQU   AMDATTR3                                                 02239000
AMDLM    EQU   AMDATTR3                                                 02240000
AMDWAIT  EQU   AMDATTR3                                                 02241000
AMDBIND  EQU   AMDATTR3                                                 02242000
AMDFAULT EQU   AMDATTR3                                                 02243000
AMDUNQ   EQU   AMDATTR3                                                 02244000
AMDFSCI  EQU   IDAAMDSB+16                                              02245000
AMDFSCA  EQU   IDAAMDSB+14                                              02246000
AMDCIPCA EQU   IDAAMDSB+12                                              02247000
AMDPCTCI EQU   IDAAMDSB+11                                              02248000
AMDPCTCA EQU   IDAAMDSB+10                                              02249000
AMDKEYLN EQU   IDAAMDSB+8                                               02250000
AMDRKP   EQU   IDAAMDSB+6                                               02251000
AMDAXRKP EQU   AMDNEST                                                  02252000
AMDLEN   EQU   IDAAMDSB+2                                               02253000
AMDSPAN  EQU   AMDATTR                                                  02254000
AMDRRDS  EQU   AMDATTR                                                  02255000
AMDRANGE EQU   AMDATTR                                                  02256000
AMDORDER EQU   AMDATTR                                                  02257000
AMDREPL  EQU   AMDATTR                                                  02258000
AMDSDT   EQU   AMDATTR                                                  02259000
AMDWCK   EQU   AMDATTR                                                  02260000
AMDDST   EQU   AMDATTR                                                  02261000
AMDSBID  EQU   IDAAMDSB                                                 02262000
AMBTRACE EQU   IDAAMB+120                                               02263000
AMBVIOT  EQU   IDAAMB+116                                               02264000
AMBSZCP  EQU   IDAAMB+114                                               02265000
AMBSZFW  EQU   IDAAMB+112                                               02266000
AMBSZWR  EQU   IDAAMB+110                                               02267000
AMBSZRD  EQU   IDAAMB+108                                               02268000
AMBEXEX  EQU   IDAAMB+100                                               02269000
AMBWSHD  EQU   IDAAMB+96                                                02270000
AMBCPA   EQU   IDAAMB+92                                                02271000
AMBBM2SH EQU   IDAAMB+88                                                02272000
AMBRDCNT EQU   AMBCSWD1+2                                               02273000
@NM00032 EQU   AMBCSWD1+1                                               02274000
@NM00031 EQU   AMBAFLG                                                  02275000
AMBCFX   EQU   AMBAFLG                                                  02276000
AMBSIS   EQU   AMBAFLG                                                  02277000
AMBDFR   EQU   AMBAFLG                                                  02278000
AMBICI   EQU   AMBAFLG                                                  02279000
AMBGSR   EQU   AMBAFLG                                                  02280000
AMBLSR   EQU   AMBAFLG                                                  02281000
@NM00030 EQU   AMBAFLG                                                  02282000
AMBUPLH  EQU   IDAAMB+80                                                02283000
AMBPAMBL EQU   IDAAMB+76                                                02284000
AMBPIXP  EQU   IDAAMB+72                                                02285000
@NM00029 EQU   IDAAMB+68                                                02286000
AMBIWA   EQU   IDAAMB+64                                                02287000
AMBWKA   EQU   IDAAMB+60                                                02288000
AMBAMBXN EQU   AMBEOVPT                                                 02289000
AMBEDB   EQU   IDAAMB+52                                                02290000
AMBRPT   EQU   IDAAMB+50                                                02291000
AMBPUG   EQU   AMBFLG2                                                  02292000
AMBBUSY  EQU   AMBOFLGS                                                 02293000
AMBEXFG  EQU   AMBOFLGS                                                 02294000
@NM00028 EQU   AMBOFLGS                                                 02295000
AMBOPEN  EQU   AMBOFLGS                                                 02296000
@NM00027 EQU   AMBOFLGS                                                 02297000
AMBDEBAD EQU   AMBDEBPT+1                                               02298000
AMBIFLGS EQU   AMBDEBPT                                                 02299000
AMBAMETH EQU   IDAAMB+43                                                02300000
AMBUPX   EQU   AMBINFL                                                  02301000
AMBUCRA  EQU   AMBINFL                                                  02302000
AMBSCRA  EQU   AMBINFL                                                  02303000
AMBCAT   EQU   AMBINFL                                                  02304000
@NM00026 EQU   AMBINFL                                                  02305000
@NM00025 EQU   AMBINFL                                                  02306000
AMBTIOT  EQU   IDAAMB+40                                                02307000
@NM00024 EQU   IDAAMB+38                                                02308000
AMBDDSN  EQU   IDAAMB+35                                                02309000
AMBCDSN  EQU   IDAAMB+32                                                02310000
AMBIOMB  EQU   AMBIOBAD                                                 02311000
@NM00023 EQU   AMBDSORG+1                                               02312000
AMBDORGA EQU   AMBDSORG+1                                               02313000
@NM00022 EQU   AMBDSORG                                                 02314000
AMBINBUF EQU   AMBFLG1                                                  02315000
AMBUBF   EQU   AMBFLG1                                                  02316000
AMBPCAT  EQU   AMBFLG1                                                  02317000
AMBMCAT  EQU   AMBFLG1                                                  02318000
AMBTYPE  EQU   AMBFLG1                                                  02319000
@NM00021 EQU   AMBFLG0                                                  02320000
AMBPSDS  EQU   AMBFLG0                                                  02321000
AMBCACB  EQU   IDAAMB+16                                                02322000
AMBPH    EQU   IDAAMB+12                                                02323000
AMBBUFC  EQU   IDAAMB+8                                                 02324000
AMBLINK  EQU   IDAAMB+4                                                 02325000
AMBLEN   EQU   IDAAMB+2                                                 02326000
AMBRSC   EQU   IDAAMB+1                                                 02327000
AMBID    EQU   IDAAMB                                                   02328000
AMBLCMB  EQU   IDAAMBL+64                                               02329000
AMBLBIB  EQU   IDAAMBL+60                                               02330000
AMBLIX   EQU   IDAAMBL+56                                               02331000
AMBLDTA  EQU   IDAAMBL+52                                               02332000
AMBLMIDS EQU   IDAAMBL+42                                               02333000
AMBLNIDS EQU   IDAAMBL+41                                               02334000
@NM00020 EQU   IDAAMBL+40                                               02335000
AMBLNUM  EQU   IDAAMBL+38                                               02336000
AMBLNST  EQU   IDAAMBL+37                                               02337000
@NM00019 EQU   AMBLFLG2                                                 02338000
AMBLSTAG EQU   AMBLFLG2                                                 02339000
@NM00018 EQU   AMBLFLG2                                                 02340000
AMBLDUMY EQU   AMBLFLG1                                                 02341000
AMBLCAT  EQU   AMBLFLG1                                                 02342000
AMBLUCRA EQU   AMBLFLG1                                                 02343000
AMBLSCRA EQU   AMBLFLG1                                                 02344000
AMBLVVIC EQU   AMBLFLG1                                                 02345000
AMBLUPD  EQU   AMBLFLG1                                                 02346000
AMBLCINV EQU   AMBLFLG1                                                 02347000
AMBLFULL EQU   AMBLFLG1                                                 02348000
AMBLLEN  EQU   IDAAMBL+34                                               02349000
@NM00017 EQU   AMBLSHAR                                                 02350000
AMBLWRIT EQU   AMBLSHAR                                                 02351000
AMBLCATO EQU   AMBLSHAR                                                 02352000
AMBLPRIM EQU   AMBLSHAR                                                 02353000
AMBLID   EQU   IDAAMBL+32                                               02354000
@NM00016 EQU   IDAAMBL+31                                               02355000
@NM00015 EQU   AMBLTYPE                                                 02356000
AMBLFIX  EQU   AMBLTYPE                                                 02357000
AMBLBASE EQU   AMBLTYPE                                                 02358000
AMBLAIX  EQU   AMBLTYPE                                                 02359000
AMBLUPGR EQU   AMBLTYPE                                                 02360000
AMBLPATH EQU   AMBLTYPE                                                 02361000
AMBLENO  EQU   AMBLVC+1                                                 02362000
AMBLVRT  EQU   AMBLVC                                                   02363000
AMBLXPT  EQU   IDAAMBL+24                                               02364000
AMBLDFR  EQU   AMBLQ                                                    02365000
AMBLESDS EQU   AMBLQ                                                    02366000
AMBLKSDS EQU   AMBLQ                                                    02367000
AMBLUBF  EQU   AMBLQ                                                    02368000
AMBLFSTP EQU   AMBLQ                                                    02369000
AMBLLSR  EQU   AMBLQ                                                    02370000
AMBLGSR  EQU   AMBLQ                                                    02371000
AMBLDDC  EQU   AMBLQ                                                    02372000
AMBLDCI  EQU   AMBLIDF+4                                                02373000
AMBLCACB EQU   AMBLIDF                                                  02374000
@NM00014 EQU   AMBLEOV+2                                                02375000
AMBLCOMP EQU   AMBLEOV+1                                                02376000
AMBLESET EQU   AMBLEFLG                                                 02377000
AMBLWAIT EQU   AMBLEFLG                                                 02378000
AMBLACB  EQU   IDAAMBL+8                                                02379000
AMBLSCHN EQU   IDAAMBL+4                                                02380000
AMBLPCHN EQU   IDAAMBL                                                  02381000
ACBAPID  EQU   ACBCOMN+72                                               02382000
ACBCBMWA EQU   ACBCOMN+68                                               02383000
ACBUAPTR EQU   ACBCOMN+64                                               02384000
ACBLRECL EQU   ACBCOMN+62                                               02385000
ACBMSGLN EQU   ACBBLKSZ                                                 02386000
ACBBUFSP EQU   ACBCOMN+56                                               02387000
@NM00013 EQU   ACBUJFCB+1                                               02388000
ACBOPTN  EQU   ACBUJFCB                                                 02389000
ACBVVIC  EQU   ACBINFLG                                                 02390000
ACBUCRA  EQU   ACBINFLG                                                 02391000
ACBSCRA  EQU   ACBINFLG                                                 02392000
ACBCAT   EQU   ACBINFLG                                                 02393000
ACBIJRQE EQU   ACBINFLG                                                 02394000
ACBJEPS  EQU   ACBINFLG                                                 02395000
@NM00012 EQU   ACBINFLG                                                 02396000
ACBERFLG EQU   ACBCOMN+49                                               02397000
ACBBUSY  EQU   ACBIOSFG                                                 02398000
ACBLOCK  EQU   ACBEXFG                                                  02399000
@NM00011 EQU   ACBOFLGS                                                 02400000
ACBDSERR EQU   ACBOFLGS                                                 02401000
ACBOPEN  EQU   ACBOFLGS                                                 02402000
ACBEOV   EQU   ACBOFLGS                                                 02403000
@NM00010 EQU   ACBOFLGS                                                 02404000
ACBDEB   EQU   ACBDDNM+5                                                02405000
ACBERFL  EQU   ACBDDNM+4                                                02406000
ACBAM    EQU   ACBAMETH                                                 02407000
ACBINFL  EQU   ACBDDNM+2                                                02408000
ACBTIOT  EQU   ACBDDNM                                                  02409000
ACBUEL   EQU   ACBEXLST                                                 02410000
ACBPASSW EQU   ACBCOMN+32                                               02411000
ACBMSGAR EQU   ACBCOMN+28                                               02412000
@NM00009 EQU   ACBDSORG+1                                               02413000
ACBDORGA EQU   ACBDSORG+1                                               02414000
@NM00008 EQU   ACBDSORG                                                 02415000
ACBCRNRE EQU   ACBCROPS                                                 02416000
ACBCRNCK EQU   ACBCROPS                                                 02417000
ACBASA   EQU   ACBCCTYP                                                 02418000
@NM00007 EQU   ACBCCTYP                                                 02419000
ACBRECAF EQU   ACBRECFM                                                 02420000
ACBJBUF  EQU   ACBBUFPL+2                                               02421000
ACBMACR4 EQU   ACBBUFPL+1                                               02422000
@NM00006 EQU   ACBMACR3                                                 02423000
ACBNCFX  EQU   ACBMACR3                                                 02424000
ACBSIS   EQU   ACBMACR3                                                 02425000
ACBDFR   EQU   ACBMACR3                                                 02426000
ACBICI   EQU   ACBMACR3                                                 02427000
ACBGSR   EQU   ACBMACR3                                                 02428000
ACBLSR   EQU   ACBMACR3                                                 02429000
@NM00005 EQU   ACBMACR3                                                 02430000
ACBBUFNI EQU   ACBCOMN+18                                               02431000
ACBBUFND EQU   ACBCOMN+16                                               02432000
ACBSTRNO EQU   ACBCOMN+15                                               02433000
ACBBSTNO EQU   ACBCOMN+14                                               02434000
ACBAIX   EQU   ACBMACR2                                                 02435000
ACBDSN   EQU   ACBMACR2                                                 02436000
ACBRST   EQU   ACBMACR2                                                 02437000
ACBLOGON EQU   ACBMACR2                                                 02438000
ACBSKP   EQU   ACBMACR2                                                 02439000
@NM00004 EQU   ACBMACR2                                                 02440000
ACBUBF   EQU   ACBMACR1                                                 02441000
ACBOUT   EQU   ACBMACR1                                                 02442000
ACBIN    EQU   ACBMACR1                                                 02443000
ACBDIR   EQU   ACBMACR1                                                 02444000
ACBSEQ   EQU   ACBMACR1                                                 02445000
ACBBLK   EQU   ACBCNV                                                   02446000
ACBADD   EQU   ACBADR                                                   02447000
ACBKEY   EQU   ACBMACR1                                                 02448000
ACBINRTN EQU   ACBCOMN+8                                                02449000
ACBIBCT  EQU   ACBJWA                                                   02450000
ACBLEN2  EQU   ACBLENG2                                                 02451000
ACBSTYP  EQU   ACBCOMN+1                                                02452000
ACBID    EQU   ACBCOMN                                                  02453000
RPLERMSA EQU   RPLCOMN+72                                               02454000
RPLEMLEN EQU   RPLCOMN+70                                               02455000
RPLACTIV EQU   RPLCOMN+69                                               02456000
RPLBRANC EQU   RPLEXTD1                                                 02457000
RPLNIB   EQU   RPLEXTD1                                                 02458000
@NM00003 EQU   RPLEXTD1                                                 02459000
RPLEXIT  EQU   RPLEXTD1                                                 02460000
RPLNEXIT EQU   RPLEXTD1                                                 02461000
RPLEXSCH EQU   RPLEXTD1                                                 02462000
@NM00002 EQU   RPLRBAR+3                                                02463000
@NM00001 EQU   RPLAIXID                                                 02464000
RPLAXPKP EQU   RPLAIXID                                                 02465000
RPLAIXPC EQU   RPLRBAR                                                  02466000
RPLRSV88 EQU   RPLOPT8                                                  02467000
RPLUNCON EQU   RPLOPT8                                                  02468000
RPLACTV  EQU   RPLOPT8                                                  02469000
RPLSESS  EQU   RPLOPT8                                                  02470000
RPLPEND  EQU   RPLOPT8                                                  02471000
RPLODPRM EQU   RPLOPT8                                                  02472000
RPLODACP EQU   RPLOPT8                                                  02473000
RPLODACQ EQU   RPLOPT8                                                  02474000
RPLRSV78 EQU   RPLOPT7                                                  02475000
RPLRSV77 EQU   RPLOPT7                                                  02476000
RPLRLSOP EQU   RPLOPT7                                                  02477000
RPLTPOST EQU   RPLOPT7                                                  02478000
RPLQOPT  EQU   RPLOPT7                                                  02479000
RPLCNIMM EQU   RPLCNOPT                                                 02480000
RPLCNANY EQU   RPLCNOPT                                                 02481000
RPLCNALL EQU   RPLCNOPT                                                 02482000
RPLRSV68 EQU   RPLOPT6                                                  02483000
RPLRSV67 EQU   RPLOPT6                                                  02484000
RPLLOCK  EQU   RPLOPT6                                                  02485000
RPLNCOND EQU   RPLOPT6                                                  02486000
RPLCOND  EQU   RPLOPT6                                                  02487000
RPLEOT   EQU   RPLUNTYP                                                 02488000
RPLEOM   EQU   RPLUNTYP                                                 02489000
RPLEOB   EQU   RPLUNTYP                                                 02490000
RPLWROPT EQU   RPLOPT5                                                  02491000
RPLNODE  EQU   RPLOPT5                                                  02492000
RPLERACE EQU   RPLWRTYP                                                 02493000
RPLEAU   EQU   RPLWRTYP                                                 02494000
RPLNERAS EQU   RPLWRTYP                                                 02495000
RPLPSOPT EQU   RPLOPT5                                                  02496000
RPLSSNIN EQU   RPLOPT5                                                  02497000
RPLDLGIN EQU   RPLOPT5                                                  02498000
RPLCHAIN EQU   RPLNXTRP                                                 02499000
RPLOPT4  EQU   RPLOPTCD+3                                               02500000
RPLALIGN EQU   RPLOPT3                                                  02501000
RPLFMT   EQU   RPLOPT3                                                  02502000
RPLFLD   EQU   RPLOPT3                                                  02503000
RPLVFY   EQU   RPLOPT3                                                  02504000
RPLBLK   EQU   RPLOPT3                                                  02505000
RPLSFORM EQU   RPLOPT3                                                  02506000
RPLEODS  EQU   RPLOPT3                                                  02507000
RPLWAITX EQU   RPLOPT2                                                  02508000
RPLCNV   EQU   RPLOPT2                                                  02509000
RPLADD   EQU   RPLADR                                                   02510000
RPLKEY   EQU   RPLOPT2                                                  02511000
RPLECBIN EQU   RPLECBSW                                                 02512000
RPLGEN   EQU   RPLOPT1                                                  02513000
RPLASY   EQU   RPLOPT1                                                  02514000
RPLDAF   EQU   RPLARG+2                                                 02515000
RPLSAF   EQU   RPLARG                                                   02516000
RPLTCBPT EQU   RPLCOMN+28                                               02517000
RPLCCHAR EQU   RPLCOMN+20                                               02518000
RPLSTRID EQU   RPLCOMN+18                                               02519000
RPLKEYL  EQU   RPLKEYLE                                                 02520000
RPLRDSOH EQU   RPLFDB3                                                  02521000
RPLRLG   EQU   RPLFDB3                                                  02522000
RPLLGFRC EQU   RPLFDB3                                                  02523000
RPLREOT  EQU   RPLFDB3                                                  02524000
RPLREOM  EQU   RPLFDB3                                                  02525000
RPLREOB  EQU   RPLFDB3                                                  02526000
RPLSV32  EQU   RPLFDB3                                                  02527000
RPLUINPT EQU   RPLFDB3                                                  02528000
RPLSTSAV EQU   RPLFDB2                                                  02529000
RPLCUERR EQU   RPLFDB2                                                  02530000
RPLDLGFL EQU   RPLFDB2                                                  02531000
RPLIOERR EQU   RPLFDB2                                                  02532000
RPLDVUNS EQU   RPLFDB2                                                  02533000
RPLATND  EQU   RPLFDB2                                                  02534000
RPLRVID  EQU   RPLFDB2                                                  02535000
RPLERLK  EQU   RPLFDB2                                                  02536000
RPLSTAT  EQU   RPLFDBWD                                                 02537000
RPLPOST  EQU   RPLECB                                                   02538000
RPLWAIT  EQU   RPLECB                                                   02539000
RPLPLHPT EQU   RPLCOMN+4                                                02540000
RPLLEN2  EQU   RPLLEN                                                   02541000
RPLSTYP  EQU   RPLIDWD+1                                                02542000
RPLID    EQU   RPLIDWD                                                  02543000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02544000
@RC00230 EQU   @EC00270                                                 02545000
@RT00402 EQU   RECSRCH                                                  02546000
@RC00405 EQU   @RC00384                                                 02547000
@RC00424 EQU   @RC00421                                                 02548000
@RT00524 EQU   NXTRCD                                                   02549000
@RT00547 EQU   PRVRCD                                                   02550000
@RC00506 EQU   @EL00003                                                 02551000
@RT00603 EQU   GNXTCI                                                   02552000
@RT00611 EQU   GNXTCI                                                   02553000
@RT00662 EQU   RECLOOP                                                  02554000
@RF00691 EQU   @RC00689                                                 02555000
@PB00007 EQU   @PB00008                                                 02556000
@PB00006 EQU   @PB00007                                                 02557000
@PB00005 EQU   @PB00006                                                 02558000
@PB00004 EQU   @PB00005                                                 02559000
@PB00003 EQU   @PB00004                                                 02560000
@PB00002 EQU   @PB00003                                                 02561000
@ENDDATA EQU   *                                                        02562000
         END   IDA019RR,(C'PLS2121',0701,78172)                         02563000
