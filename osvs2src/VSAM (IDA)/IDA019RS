         TITLE 'IDA019RS--SPANNED RECORD DATA MODIFY                   *00001000
                        '                                               00002000
IDA019RS CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RS  78.172'                                 0001 00009000
IDAMVSEG DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00460-IDAMVSEG)                                   00013000
         ENTRY IDAMVSEG                                                 00014000
IDAADSEG DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00549-IDAADSEG)                                   00018000
         ENTRY IDAADSEG                                                 00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
         IDASVR14                                                       00027000
*   IF AMDDST='0'B THEN             /* IS THIS ESDS                  */ 00028000
         L     @10,AMBDSB(,RAMB)                                   0107 00029000
         TM    AMDDST(@10),B'10000000'                             0107 00030000
         BZ    @RT00107                                            0107 00031000
*     GO TO HAVDIWA;                /* YES, AVOID DIWA               */ 00032000
*   IF AMBLSR=ON|AMBGSR=ON THEN     /* SHARED RESOURSES              */ 00033000
         TM    AMBLSR(RAMB),B'01100000'                            0109 00034000
         BZ    @RF00109                                            0109 00035000
*     DO;                           /* YES                           */ 00036000
*       RBUFC=PLHIBUFC;             /* POINT TO SEQ SET              */ 00037000
         L     RBUFC,PLHIBUFC(,RPLH)                               0111 00038000
*       IF RBUFC^=ZERO THEN         /* OWNED BY PLH                  */ 00039000
         LTR   RBUFC,RBUFC                                         0112 00040000
         BZ    @RF00112                                            0112 00041000
*I01:                                                              0113 00042000
*         DO;                       /* IDACALL(IDAFREEB)             */ 00043000
I01      DS    0H                                                  0114 00044000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 00045000
         L     @15,@CV00958                                        0114 00046000
         BALR  @14,@15                                             0114 00047000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00048000
         BALR @11,0                                                     00049000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00050000
         USING *,@11                                                    00051000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00052000
         L     @11,=A(@PSTART)                                          00053000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00054000
         USING @PSTART,@11                                              00055000
*         END I01;                  /* YES, FREE IT                  */ 00056000
*     END;                          /*                               */ 00057000
@RF00112 DS    0H                                                  0121 00058000
*LOCKDIWA:                                                         0121 00059000
*   RPARM1=ADDR(DIWATV);            /* POINT TO LOCK BYTE            */ 00060000
@RF00109 DS    0H                                                  0121 00061000
LOCKDIWA L     RPARM1,AMBIWA(,RAMB)                                0121 00062000
         LA    RPARM1,DIWATV(,RPARM1)                              0121 00063000
*   GEN(TS  0(RPARM1));             /* TEST AND SET                  */ 00064000
         TS  0(RPARM1)                                                  00065000
*   GEN FLOWS(HAVDIWA)(BZ  HAVDIWA);/* OBTAINED DIWA                 */ 00066000
         BZ  HAVDIWA                                                    00067000
*   RESPECIFY                                                      0124 00068000
*     RWORK0 RSTD;                  /*                               */ 00069000
*   RWORK0=DEFR0;                   /* DATA INSERT REQUEST           */ 00070000
         SLR   RWORK0,RWORK0                                       0125 00071000
*I02:                                                              0126 00072000
*   DO;                             /* IDACALL(IDADRQ)               */ 00073000
I02      DS    0H                                                  0127 00074000
*     CALL IDADRQ;                  /* EXIT TO IDADRQ                */ 00075000
         L     @15,@CV00919                                        0127 00076000
         BALR  @14,@15                                             0127 00077000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00078000
         BALR @11,0                                                     00079000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00080000
         USING *,@11                                                    00081000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00082000
         L     @11,=A(@PSTART)                                          00083000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00084000
         USING @PSTART,@11                                              00085000
*   END I02;                        /* GO TO DEFERRED REQUEST        */ 00086000
*   GO TO LOCKDIWA;                 /* TRY AGAIN                     */ 00087000
         B     LOCKDIWA                                            0133 00088000
*   RFY                                                            0134 00089000
*     RWORK0 UNRSTD;                /*                               */ 00090000
*HAVDIWA:                           /* DIWA OBTAINED                 */ 00091000
*   DIWPLH=RPLH;                    /* IDENTIFY LOCKING PLH          */ 00092000
HAVDIWA  L     @10,AMBIWA(,RAMB)                                   0135 00093000
         ST    RPLH,DIWPLH(,@10)                                   0135 00094000
*   RBUFC=PLHIBUFC;                 /* POINT TO SEQ SET BUFC         */ 00095000
         L     RBUFC,PLHIBUFC(,RPLH)                               0136 00096000
*   IF(RBUFC=ZERO|BUFCRRD=ON|       /* MUST THE SEQUENCE SET         */ 00097000
*       BUFCEXC=OFF)&AMDDST='1'B THEN/* BE REREAD                    */ 00098000
         LTR   RBUFC,RBUFC                                         0137 00099000
         BZ    @GL00001                                            0137 00100000
         TM    BUFCRRD(RBUFC),B'00100000'                          0137 00101000
         BO    @GL00001                                            0137 00102000
         TM    BUFCEXC(RBUFC),B'00000010'                          0137 00103000
         BNZ   @RF00137                                            0137 00104000
@GL00001 L     @10,AMBDSB(,RAMB)                                   0137 00105000
         TM    AMDDST(@10),B'10000000'                             0137 00106000
         BNO   @RF00137                                            0137 00107000
*     DO;                           /* YES                           */ 00108000
*       RAMB=AMBLIX;                /* POINT TO INDEX AMB            */ 00109000
         L     @10,RPLDACB(,RRPL)                                  0139 00110000
         L     @10,ACBAMBL(,@10)                                   0139 00111000
         L     RAMB,AMBLIX(,@10)                                   0139 00112000
*       RPARM1=ADDR(PLHIXSPL);      /* POINT TO INX PARM LIST        */ 00113000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0140 00114000
*       RPARM1->IXSILN=ONE;         /* SET LEVEL TO 1                */ 00115000
         MVI   IXSILN(RPARM1),X'01'                                0141 00116000
*       PLHSSR=ON;                  /* INDICATE SEQ SET READ         */ 00117000
         OI    PLHSSR(RPLH),B'00010000'                            0142 00118000
*       RPARM1=PLHSSRBA;            /* GET SEQ SET RBA               */ 00119000
         L     RPARM1,PLHSSRBA(,RPLH)                              0143 00120000
*I03:                                                              0144 00121000
*       DO;                         /* IDACALL(IDAGRB)               */ 00122000
I03      DS    0H                                                  0145 00123000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 00124000
         L     @15,@CV00928                                        0145 00125000
         BALR  @14,@15                                             0145 00126000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00127000
         BALR @11,0                                                     00128000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00129000
         USING *,@11                                                    00130000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00131000
         L     @11,=A(@PSTART)                                          00132000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00133000
         USING @PSTART,@11                                              00134000
*       END I03;                    /* GO READ THE SEQ SET           */ 00135000
*       RAMB=AMBLDTA;               /* RESET AMB REGISTER            */ 00136000
         L     @10,RPLDACB(,RRPL)                                  0151 00137000
         L     @10,ACBAMBL(,@10)                                   0151 00138000
         L     RAMB,AMBLDTA(,@10)                                  0151 00139000
*       IF RPLERREG^=ZERO THEN      /* I/O ERROR                     */ 00140000
         CLI   RPLERREG(RRPL),0                                    0152 00141000
         BE    @RF00152                                            0152 00142000
*         DO;                       /* YES                           */ 00143000
*           DIWATV=ZERO;            /* GIVE UP WORK AREA             */ 00144000
         L     @10,AMBIWA(,RAMB)                                   0154 00145000
         MVI   DIWATV(@10),X'00'                                   0154 00146000
*           CALL EXIT;              /* RETURN                        */ 00147000
         BAL   @14,EXIT                                            0155 00148000
*         END;                      /*                               */ 00149000
*     END;                          /*                               */ 00150000
@RF00152 DS    0H                                                  0158 00151000
*   PLHISPLP=ADDR(PLHIXSPL);        /* SET PARM LIST ADDRESS         */ 00152000
@RF00137 LA    @10,PLHIXSPL(,RPLH)                                 0158 00153000
         ST    @10,PLHISPLP(,RPLH)                                 0158 00154000
*   IF RPLREQ=RPLERASE THEN         /* IS REQUEST FOR ERASE          */ 00155000
         CLI   RPLREQ(RRPL),5                                      0159 00156000
         BNE   @RF00159                                            0159 00157000
*     DO;                           /* YES                           */ 00158000
*       RESPECIFY                                                  0161 00159000
*         RWORK3 RSTD;              /*                               */ 00160000
*       RBUFC=PLHIBUFC->BUFCBAD;    /* POINT TO INDEX RECORD         */ 00161000
         L     @10,PLHIBUFC(,RPLH)                                 0162 00162000
         L     RBUFC,BUFCBAD(,@10)                                 0162 00163000
*       RAMB=AMBLIX;                /* ADDRESS THRU INDEX CB         */ 00164000
         L     @10,RPLDACB(,RRPL)                                  0163 00165000
         L     @10,ACBAMBL(,@10)                                   0163 00166000
         L     RAMB,AMBLIX(,@10)                                   0163 00167000
*       IMWIXSP=ADDR(IMWISWKA);     /* SET ADDRESSABILITY TO         */ 00168000
         L     @10,AMBIWA(,RAMB)                                   0164 00169000
         L     @10,ICWCHN(,@10)                                    0164 00170000
         LA    @06,IMWISWKA(,@10)                                  0164 00171000
         ST    @06,IMWIXSP(,@10)                                   0164 00172000
*       RWORK3=IMWIXSP;             /* SET ADDR OF PARM LIST FOR SCIB*/ 00173000
         LR    RWORK3,@06                                          0165 00174000
*       RPARM1=ADDR(PLHKEY);        /* POINT TO ARGUMENT             */ 00175000
         L     RPARM1,PLHKEYPT(,RPLH)                              0166 00176000
*I04:                                                              0167 00177000
*       DO;                         /* IDACALL(IDA019RC)             */ 00178000
I04      DS    0H                                                  0168 00179000
*         CALL IDA019RC;            /* EXIT TO IDA019RC              */ 00180000
         L     @15,@CV00926                                        0168 00181000
         BALR  @14,@15                                             0168 00182000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00183000
         BALR @11,0                                                     00184000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00185000
         USING *,@11                                                    00186000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00187000
         L     @11,=A(@PSTART)                                          00188000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00189000
         USING @PSTART,@11                                              00190000
*       END I04;                    /* SCIB                          */ 00191000
*       RWORK3=IXSHEP;              /* POINT TO RIGHT END OF COMPLEX    00192000
*                                      ENTRY                         */ 00193000
         L     @10,AMBIWA(,RAMB)                                   0174 00194000
         L     @10,ICWCHN(,@10)                                    0174 00195000
         L     @10,IMWIXSP(,@10)                                   0174 00196000
         L     RWORK3,IXSHEP(,@10)                                 0174 00197000
*       PLHNOSEG=ONE;               /* START SEG COUNT AT 1          */ 00198000
         MVC   PLHNOSEG(2,RPLH),@CH00053                           0175 00199000
*       DO WHILE RWORK3->IBFLPF=AMDKEYLN;/* LOOP THRU ALL SEGMENTS TO   00200000
*                                      THE LAST                      */ 00201000
         B     @DE00176                                            0176 00202000
@DL00176 DS    0H                                                  0177 00203000
*         RWORK3=RWORK3-RBUFC->IXHFLPLN;/* MOVE TO NEXT ENTRY        */ 00204000
         SLR   @10,@10                                             0177 00205000
         IC    @10,IXHFLPLN(,RBUFC)                                0177 00206000
         SLR   RWORK3,@10                                          0177 00207000
*         PLHNOSEG=PLHNOSEG+ONE;    /* BUMP SEG COUNT                */ 00208000
         LA    @10,1                                               0178 00209000
         AH    @10,PLHNOSEG(,RPLH)                                 0178 00210000
         STH   @10,PLHNOSEG(,RPLH)                                 0178 00211000
*       END;                        /*                               */ 00212000
@DE00176 L     @10,AMBDSB(,RAMB)                                   0179 00213000
         SLR   @06,@06                                             0179 00214000
         IC    @06,IBFLPF(,RWORK3)                                 0179 00215000
         CH    @06,AMDKEYLN(,@10)                                  0179 00216000
         BE    @DL00176                                            0179 00217000
*       IXSHEP=RWORK3;              /* SAVE LEFT END POSITION        */ 00218000
         L     @10,AMBIWA(,RAMB)                                   0180 00219000
         L     @10,ICWCHN(,@10)                                    0180 00220000
         L     @10,IMWIXSP(,@10)                                   0180 00221000
         ST    RWORK3,IXSHEP(,@10)                                 0180 00222000
*       RESPECIFY                                                  0181 00223000
*        (RWORK2,                                                  0181 00224000
*         RWORK4) RSTD;             /*                               */ 00225000
*       DO PLHSRCSG=ONE TO PLHNOSEG;/* LOOP COVERS ALL SEGMENTS OF 0182 00226000
*                                      SPANNED RECORD                */ 00227000
         LA    @10,1                                               0182 00228000
         B     @DE00182                                            0182 00229000
@DL00182 DS    0H                                                  0183 00230000
*         RWORK2=PLHIBUFC->BUFCBAD; /* POINT TO INDEX RECORD         */ 00231000
         L     @10,PLHIBUFC(,RPLH)                                 0183 00232000
         L     RWORK2,BUFCBAD(,@10)                                0183 00233000
*         RWORK3=IXSHEP+LENGTH(IBFLPL)+/* POINT TO POINTER FIELD     */ 00234000
*             LENGTH(IBFLPF);       /* OF CURRENT ENTRY              */ 00235000
         L     @10,AMBIWA(,RAMB)                                   0184 00236000
         L     @10,ICWCHN(,@10)                                    0184 00237000
         L     @10,IMWIXSP(,@10)                                   0184 00238000
         LA    RWORK3,2                                            0184 00239000
         AL    RWORK3,IXSHEP(,@10)                                 0184 00240000
*         RWORK4=RWORK2->IXHPTLS;   /* GET MASK FROM HEADER          */ 00241000
         SLR   RWORK4,RWORK4                                       0185 00242000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0185 00243000
*         RPARM1=ZERO;              /* ASSURE CLEAN REGISTER         */ 00244000
         SLR   RPARM1,RPARM1                                       0186 00245000
*         GEN(EX  RWORK4,PICKPT);   /* EXTRACT POINTER AND           */ 00246000
         EX  RWORK4,PICKPT                                              00247000
*         IMWIPTR=RPARM1;           /* SAVE IT IN WORK AREA          */ 00248000
         L     @10,AMBIWA(,RAMB)                                   0188 00249000
         L     @10,ICWCHN(,@10)                                    0188 00250000
         ST    RPARM1,IMWIPTR(,@10)                                0188 00251000
*         RAMB=AMBLDTA;             /* ADDRESS THRU DATA CB          */ 00252000
         L     @10,RPLDACB(,RRPL)                                  0189 00253000
         L     @10,ACBAMBL(,@10)                                   0189 00254000
         L     RAMB,AMBLDTA(,@10)                                  0189 00255000
*         CALL CLEARSEG;            /* GET A BUFFER AND CLEAR        */ 00256000
         BAL   @14,CLEARSEG                                        0190 00257000
*         RAMB=AMBLIX;              /* ADDRESS THRU INDEX CB         */ 00258000
         L     @10,RPLDACB(,RRPL)                                  0191 00259000
         L     @10,ACBAMBL(,@10)                                   0191 00260000
         L     @09,AMBLIX(,@10)                                    0191 00261000
         LR    RAMB,@09                                            0191 00262000
*         RWORK2=IMWIPTR;           /* GET POINTER                   */ 00263000
         L     @05,AMBIWA(,RAMB)                                   0192 00264000
         L     @05,ICWCHN(,@05)                                    0192 00265000
         L     RWORK2,IMWIPTR(,@05)                                0192 00266000
*         RAMB=AMBLDTA;             /* ADDRESS THRU DATA CB          */ 00267000
         L     RAMB,AMBLDTA(,@10)                                  0193 00268000
*         BUFCORBA=(PLHIBUFC->BUFCBAD->IXHBRBA)+(RWORK2*AMDCINV);/*     00269000
*                                      COMPUTE THE RBA OF DATA RECORD   00270000
*                                      FROM POINTER EXTRACTED FROM 0194 00271000
*                                      SEQ SET                       */ 00272000
         L     @10,PLHIBUFC(,RPLH)                                 0194 00273000
         L     @10,BUFCBAD(,@10)                                   0194 00274000
         L     @05,AMBDSB(,RAMB)                                   0194 00275000
         LR    @15,RWORK2                                          0194 00276000
         M     @14,AMDCINV(,@05)                                   0194 00277000
         AL    @15,IXHBRBA(,@10)                                   0194 00278000
         ST    @15,BUFCORBA(,RBUFC)                                0194 00279000
*         BUFCDDDD=BUFCORBA;        /* SET INPUT RBA                 */ 00280000
         ST    @15,BUFCDDDD(,RBUFC)                                0195 00281000
*         RAMB=AMBLIX;              /* ADDRESS THRU INDEX CB         */ 00282000
         LR    RAMB,@09                                            0196 00283000
*         IF PLHSRCSG^=PLHNOSEG THEN/* LAST SEGMENT                  */ 00284000
         CLC   PLHSRCSG(2,RPLH),PLHNOSEG(RPLH)                     0197 00285000
         BE    @RF00197                                            0197 00286000
*           DO;                     /* NO                            */ 00287000
*             CALL DELSEG;          /* REMOVE A CI PTR FROM SEQ SET     00288000
*                                      AND UPDATE SS POINTERS FOR BUF   00289000
*                                      MGR                           */ 00290000
         BAL   @14,DELSEG                                          0199 00291000
*           END;                    /*                               */ 00292000
*         ELSE                      /* FINAL SEG COMPLETE            */ 00293000
*           DO;                     /*                               */ 00294000
         B     @RC00197                                            0201 00295000
@RF00197 DS    0H                                                  0202 00296000
*             RBUFC=PLHIBUFC;       /* POINT TO SEQ SET BUFC         */ 00297000
         L     RBUFC,PLHIBUFC(,RPLH)                               0202 00298000
*             BUFCMW=ON;            /* SET MUST WRITE ON             */ 00299000
         OI    BUFCMW(RBUFC),B'10000000'                           0203 00300000
*             BUFCORBA=BUFCDDDD;    /* SET OUTPUT RBA                */ 00301000
         L     @10,BUFCDDDD(,RBUFC)                                0204 00302000
         ST    @10,BUFCORBA(,RBUFC)                                0204 00303000
*I05:                                                              0205 00304000
*             DO;                   /* IDACALL(IDAWRBFR)             */ 00305000
I05      DS    0H                                                  0206 00306000
*               CALL IDAWRBFR;      /* EXIT TO IDAWRBFR              */ 00307000
         L     @15,@CV00925                                        0206 00308000
         BALR  @14,@15                                             0206 00309000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00310000
         BALR @11,0                                                     00311000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00312000
         USING *,@11                                                    00313000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00314000
         L     @11,=A(@PSTART)                                          00315000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00316000
         USING @PSTART,@11                                              00317000
*             END I05;              /* WRITE REVISED SEQ SET         */ 00318000
*I06:                                                              0212 00319000
*             DO;                   /* IDACALL(IDAIVIXB)             */ 00320000
I06      DS    0H                                                  0213 00321000
*               CALL IDAIVIXB;      /* EXIT TO IDAIVIXB              */ 00322000
         L     @15,@CV00921                                        0213 00323000
         BALR  @14,@15                                             0213 00324000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00325000
         BALR @11,0                                                     00326000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00327000
         USING *,@11                                                    00328000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00329000
         L     @11,=A(@PSTART)                                          00330000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00331000
         USING @PSTART,@11                                              00332000
*             END I06;              /* INVALIDATE OTHER BUFFERS WITH    00333000
*                                      SAME RBA                      */ 00334000
*             RAMB=AMBLDTA;         /* LEAVE RAMB ON DATA SIDE       */ 00335000
         L     @10,RPLDACB(,RRPL)                                  0219 00336000
         L     @10,ACBAMBL(,@10)                                   0219 00337000
         L     RAMB,AMBLDTA(,@10)                                  0219 00338000
*             DIWATV=ZERO;          /* FREE THE WORK AREA            */ 00339000
         L     @10,AMBIWA(,RAMB)                                   0220 00340000
         MVI   DIWATV(@10),X'00'                                   0220 00341000
*             CALL EXIT;            /* RETURN TO CALLER              */ 00342000
         BAL   @14,EXIT                                            0221 00343000
*           END;                    /*                               */ 00344000
*       END;                        /*                               */ 00345000
@RC00197 LA    @10,1                                               0223 00346000
         AH    @10,PLHSRCSG(,RPLH)                                 0223 00347000
@DE00182 STH   @10,PLHSRCSG(,RPLH)                                 0223 00348000
         CH    @10,PLHNOSEG(,RPLH)                                 0223 00349000
         BNH   @DL00182                                            0223 00350000
*       RESPECIFY                                                  0224 00351000
*        (RWORK2,                                                  0224 00352000
*         RWORK3,                                                  0224 00353000
*         RWORK4) UNRSTD;           /*                               */ 00354000
*     END;                          /* END OF ERASE CODE             */ 00355000
*   ELSE                            /*                               */ 00356000
*     DO;                           /* UPDATE CODE                   */ 00357000
         B     @RC00159                                            0226 00358000
@RF00159 DS    0H                                                  0227 00359000
*       PLHSRSID=PLHSRSID+ONE;      /* UPDATE SEGMENT ID             */ 00360000
         LA    @10,1                                               0227 00361000
         LH    @05,PLHSRSID(,RPLH)                                 0227 00362000
         N     @05,@CF01026                                        0227 00363000
         ALR   @05,@10                                             0227 00364000
         STH   @05,PLHSRSID(,RPLH)                                 0227 00365000
*       PLHSAVE1=AMDCINV-LENGTH(IDACIDF)/* COMPUTE MAXIMUM USABLE    */ 00366000
*           -TWO*LENGTH(IDARDF);    /* DATA SPACE IN A SR CI         */ 00367000
         L     @05,AMBDSB(,RAMB)                                   0228 00368000
         L     @05,AMDCINV(,@05)                                   0228 00369000
         SL    @05,@CF00226                                        0228 00370000
         ST    @05,PLHSAVE1(,RPLH)                                 0228 00371000
*       IF RPLRLEN>PLHSAVE1+LENGTH(IDARDF) THEN/* WILL THE RECORD  0229 00372000
*                                      EXCEED ONE CI                 */ 00373000
         L     @15,RPLRLEN(,RRPL)                                  0229 00374000
         LA    @00,3                                               0229 00375000
         ALR   @00,@05                                             0229 00376000
         CR    @15,@00                                             0229 00377000
         BNH   @RF00229                                            0229 00378000
*         DO;                       /* YES, IT IS SPANNED            */ 00379000
*           IF RPLRLEN//PLHSAVE1^=ZERO THEN/* IF RECORD PARTIALLY  0231 00380000
*                                      FILLS THE LAST CI             */ 00381000
         LR    @06,@15                                             0231 00382000
         SRDA  @06,32                                              0231 00383000
         DR    @06,@05                                             0231 00384000
         LTR   @06,@06                                             0231 00385000
         BZ    @RF00231                                            0231 00386000
*             PLHNOSEG=ONE;         /* BE SURE TO COUNT IT           */ 00387000
         STH   @10,PLHNOSEG(,RPLH)                                 0232 00388000
*           ELSE                    /* OTHERWISE START COUNT         */ 00389000
*             PLHNOSEG=ZERO;        /* AT ZERO                       */ 00390000
         B     @RC00231                                            0233 00391000
@RF00231 SLR   @10,@10                                             0233 00392000
         STH   @10,PLHNOSEG(,RPLH)                                 0233 00393000
*           PLHNOSEG=PLHNOSEG+      /* COMPUTE EXACT NUMBER          */ 00394000
*               (RPLRLEN/PLHSAVE1); /* OF SEGMENTS REQUIRED          */ 00395000
@RC00231 L     @07,RPLRLEN(,RRPL)                                  0234 00396000
         SLR   @06,@06                                             0234 00397000
         D     @06,PLHSAVE1(,RPLH)                                 0234 00398000
         AH    @07,PLHNOSEG(,RPLH)                                 0234 00399000
         STH   @07,PLHNOSEG(,RPLH)                                 0234 00400000
*         END;                      /*                               */ 00401000
*       ELSE                        /*                               */ 00402000
*         PLHNOSEG=ONE;             /* NON-SPANNED RECORD, SO SET  0236 00403000
*                                      SEGMENT COUNT AT 1            */ 00404000
         B     @RC00229                                            0236 00405000
@RF00229 MVC   PLHNOSEG(2,RPLH),@CH00053                           0236 00406000
*SRCH:                                                             0237 00407000
*       IF AMDDST='1'B THEN         /* KSDS                          */ 00408000
@RC00229 DS    0H                                                  0237 00409000
SRCH     L     @10,AMBDSB(,RAMB)                                   0237 00410000
         TM    AMDDST(@10),B'10000000'                             0237 00411000
         BNO   @RF00237                                            0237 00412000
*         DO;                       /* YES                           */ 00413000
*           RBUFC=PLHIBUFC->BUFCBAD;/* POINT TO INDEX RECORD         */ 00414000
         L     @10,PLHIBUFC(,RPLH)                                 0239 00415000
         L     RBUFC,BUFCBAD(,@10)                                 0239 00416000
*           RAMB=AMBLIX;            /* ADDRESS THRU INDEX CB         */ 00417000
         L     @10,RPLDACB(,RRPL)                                  0240 00418000
         L     @10,ACBAMBL(,@10)                                   0240 00419000
         L     RAMB,AMBLIX(,@10)                                   0240 00420000
*           IMWIXSP=ADDR(IMWISWKA); /* SET ADDRESSABILITY TO INDEX 0241 00421000
*                                      SEARCH PARM LIST              */ 00422000
         L     @10,AMBIWA(,RAMB)                                   0241 00423000
         L     @10,ICWCHN(,@10)                                    0241 00424000
         LA    @05,IMWISWKA(,@10)                                  0241 00425000
         ST    @05,IMWIXSP(,@10)                                   0241 00426000
*           RFY                                                    0242 00427000
*             RWORK3 RSTD;          /*                               */ 00428000
*           RWORK3=IMWIXSP;         /* SET ADDRESS OF PARM LIST FOR     00429000
*                                      SCIB                          */ 00430000
         LR    RWORK3,@05                                          0243 00431000
*           RPARM1=ADDR(PLHKEY);    /* POINT TO ARGUMENT             */ 00432000
         L     RPARM1,PLHKEYPT(,RPLH)                              0244 00433000
*I07:                                                              0245 00434000
*           DO;                     /* IDACALL(IDA019RC)             */ 00435000
I07      DS    0H                                                  0246 00436000
*             CALL IDA019RC;        /* EXIT TO IDA019RC              */ 00437000
         L     @15,@CV00926                                        0246 00438000
         BALR  @14,@15                                             0246 00439000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00440000
         BALR @11,0                                                     00441000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00442000
         USING *,@11                                                    00443000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00444000
         L     @11,=A(@PSTART)                                          00445000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00446000
         USING @PSTART,@11                                              00447000
*           END I07;                /* SEARCH INDEX                  */ 00448000
*           IXSNOSR=IXSNOSR+ONE;    /* SET EXACT NO. SEGMENTS IN THE    00449000
*                                      OLD SPANNED RCD               */ 00450000
         L     @10,AMBIWA(,RAMB)                                   0252 00451000
         L     @10,ICWCHN(,@10)                                    0252 00452000
         L     @10,IMWIXSP(,@10)                                   0252 00453000
         LA    @06,1                                               0252 00454000
         SLR   @05,@05                                             0252 00455000
         IC    @05,IXSNOSR(,@10)                                   0252 00456000
         ALR   @06,@05                                             0252 00457000
         STC   @06,IXSNOSR(,@10)                                   0252 00458000
*           RAMB=AMBLDTA;           /* POINT TO DATA CB              */ 00459000
         L     @10,RPLDACB(,RRPL)                                  0253 00460000
         L     @10,ACBAMBL(,@10)                                   0253 00461000
         L     RAMB,AMBLDTA(,@10)                                  0253 00462000
*         END;                      /*                               */ 00463000
*       RFY                                                        0255 00464000
*        (RWORK2,                                                  0255 00465000
*         RWORK4) RSTD;             /*                               */ 00466000
@RF00237 DS    0H                                                  0256 00467000
*       IF AMDDST='0'B|(PLHNOSEG^>  /* ESDS OR NEW RECORD HAS        */ 00468000
*           RWORK3->IXSNOSR) THEN   /* EQUAL OR FEWER SEGMENTS THAN     00469000
*                                      OLD RECD                      */ 00470000
         L     @10,AMBDSB(,RAMB)                                   0256 00471000
         TM    AMDDST(@10),B'10000000'                             0256 00472000
         BZ    @RT00256                                            0256 00473000
         LH    @10,PLHNOSEG(,RPLH)                                 0256 00474000
         SLR   @09,@09                                             0256 00475000
         IC    @09,IXSNOSR(,RWORK3)                                0256 00476000
         CR    @10,@09                                             0256 00477000
         BH    @RF00256                                            0256 00478000
@RT00256 DS    0H                                                  0257 00479000
*         DO;                       /* YES                           */ 00480000
*           DO PLHSRCSG=ONE TO PLHNOSEG;/* LOOP COVERS ALL SEGMENTS     00481000
*                                      OF NEW RECORD                 */ 00482000
         LA    @10,1                                               0258 00483000
         B     @DE00258                                            0258 00484000
@DL00258 DS    0H                                                  0259 00485000
*             RBUFC=ZERO;           /* USE WORK BUFFER               */ 00486000
         SLR   RBUFC,RBUFC                                         0259 00487000
*             CALL IDAMVSEG;        /* MOVE A SEGMENT TO A BUFFER    */ 00488000
         L     @15,@CA00980                                        0260 00489000
         BALR  @14,@15                                             0260 00490000
*             IF AMDDST='1'B THEN   /* KSDS                          */ 00491000
         L     @10,AMBDSB(,RAMB)                                   0261 00492000
         TM    AMDDST(@10),B'10000000'                             0261 00493000
         BNO   @RF00261                                            0261 00494000
*               DO;                 /* YES                           */ 00495000
*                 RAMB=AMBLIX;      /* ADDRESS INDEX BLOCKS          */ 00496000
         L     @10,RPLDACB(,RRPL)                                  0263 00497000
         L     @10,ACBAMBL(,@10)                                   0263 00498000
         L     RAMB,AMBLIX(,@10)                                   0263 00499000
*                 RWORK2=PLHIBUFC->BUFCBAD;/* POINT TO INDEX RECORD  */ 00500000
         L     @10,PLHIBUFC(,RPLH)                                 0264 00501000
         L     RWORK2,BUFCBAD(,@10)                                0264 00502000
*                 RWORK3=IXSHEP+LENGTH(IBFLPL)/* POINT TO CURRENT  0265 00503000
*                                      INDEX                         */ 00504000
*                     +LENGTH(IBFLPF);/* POINTER FIELD               */ 00505000
         L     @10,AMBIWA(,RAMB)                                   0265 00506000
         L     @10,ICWCHN(,@10)                                    0265 00507000
         L     @10,IMWIXSP(,@10)                                   0265 00508000
         LA    RWORK3,2                                            0265 00509000
         AL    RWORK3,IXSHEP(,@10)                                 0265 00510000
*                 RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HEADER     */ 00511000
         SLR   RWORK4,RWORK4                                       0266 00512000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0266 00513000
*                 RPARM1=ZERO;      /* CLEAR RECIEVING REG           */ 00514000
         SLR   RPARM1,RPARM1                                       0267 00515000
*                 GEN(EX  RWORK4,PICKPT);/* EXTRACT POINTER FIELD    */ 00516000
         EX  RWORK4,PICKPT                                              00517000
*                 BUFCORBA=RWORK2->IXHBRBA+/* COMPUTE RBA OF SEGMENT */ 00518000
*                     AMBLDTA->AMBDSB->/* IN CURRENT BUFFER AND      */ 00519000
*                     AMDCINV*RPARM1;/* STORE IN BUFC                */ 00520000
         L     @10,RPLDACB(,RRPL)                                  0269 00521000
         L     @10,ACBAMBL(,@10)                                   0269 00522000
         L     @10,AMBLDTA(,@10)                                   0269 00523000
         L     @09,AMBDSB(,@10)                                    0269 00524000
         LR    @15,RPARM1                                          0269 00525000
         M     @14,AMDCINV(,@09)                                   0269 00526000
         AL    @15,IXHBRBA(,RWORK2)                                0269 00527000
         ST    @15,BUFCORBA(,RBUFC)                                0269 00528000
*                 BUFCDDDD=BUFCORBA;/* SET INPUT RBA                 */ 00529000
         ST    @15,BUFCDDDD(,RBUFC)                                0270 00530000
*                 IXSHEP=IXSHEP-    /* MOVE POINTER TO CURRENT       */ 00531000
*                     RWORK2->IXHFLPLN;/* ENTRY TO THE LEFT          */ 00532000
         L     @09,AMBIWA(,RAMB)                                   0271 00533000
         L     @09,ICWCHN(,@09)                                    0271 00534000
         L     @09,IMWIXSP(,@09)                                   0271 00535000
         L     @05,IXSHEP(,@09)                                    0271 00536000
         SLR   @00,@00                                             0271 00537000
         IC    @00,IXHFLPLN(,RWORK2)                               0271 00538000
         SLR   @05,@00                                             0271 00539000
         ST    @05,IXSHEP(,@09)                                    0271 00540000
*                 RAMB=AMBLDTA;     /* BACK TO DATA CB               */ 00541000
         LR    RAMB,@10                                            0272 00542000
*               END;                /*                               */ 00543000
*             ELSE                  /*                               */ 00544000
*               BUFCORBA=AMDCINV*(PLHSRCSG-ONE)+RPLDDDD;/* COMPUTE 0274 00545000
*                                      RBA OF DATA RECORD            */ 00546000
         B     @RC00261                                            0274 00547000
@RF00261 L     @10,AMBDSB(,RAMB)                                   0274 00548000
         LH    @09,PLHSRCSG(,RPLH)                                 0274 00549000
         BCTR  @09,0                                               0274 00550000
         LR    @15,@09                                             0274 00551000
         M     @14,AMDCINV(,@10)                                   0274 00552000
         AL    @15,RPLDDDD(,RRPL)                                  0274 00553000
         ST    @15,BUFCORBA(,RBUFC)                                0274 00554000
*             IF AMBJRN=ON&PLHNOSEG>ONE THEN/* NEED JOURNAL EXIT     */ 00555000
@RC00261 TM    AMBJRN(RAMB),B'00000010'                            0275 00556000
         BNO   @RF00275                                            0275 00557000
         LH    @10,PLHNOSEG(,RPLH)                                 0275 00558000
         C     @10,@CF00053                                        0275 00559000
         BNH   @RF00275                                            0275 00560000
*I08:                                                              0276 00561000
*               DO;                 /* IDACALL(IDAJRNSR)             */ 00562000
I08      DS    0H                                                  0277 00563000
*                 CALL IDAJRNSR;    /* EXIT TO IDAJRNSR              */ 00564000
         L     @15,@CV00922                                        0277 00565000
         BALR  @14,@15                                             0277 00566000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00567000
         BALR @11,0                                                     00568000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00569000
         USING *,@11                                                    00570000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00571000
         L     @11,=A(@PSTART)                                          00572000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00573000
         USING @PSTART,@11                                              00574000
*               END I08;            /* YES, GO DO IT                 */ 00575000
*           END;                    /*                               */ 00576000
@RF00275 LA    @10,1                                               0283 00577000
         AH    @10,PLHSRCSG(,RPLH)                                 0283 00578000
@DE00258 STH   @10,PLHSRCSG(,RPLH)                                 0283 00579000
         CH    @10,PLHNOSEG(,RPLH)                                 0283 00580000
         BNH   @DL00258                                            0283 00581000
*           IF AMDDST='0'B|PLHNOSEG=AMBLIX->AMBIWA->ICWCHN->IMWIXSP->   00582000
*               IXSNOSR THEN        /* ESDS OR NEW AND OLD RECORDS 0284 00583000
*                                      HAVE EQUAL NO. SEGMENTS       */ 00584000
         L     @10,AMBDSB(,RAMB)                                   0284 00585000
         TM    AMDDST(@10),B'10000000'                             0284 00586000
         BZ    @RT00284                                            0284 00587000
         L     @10,RPLDACB(,RRPL)                                  0284 00588000
         L     @10,ACBAMBL(,@10)                                   0284 00589000
         L     @10,AMBLIX(,@10)                                    0284 00590000
         L     @10,AMBIWA(,@10)                                    0284 00591000
         L     @10,ICWCHN(,@10)                                    0284 00592000
         L     @10,IMWIXSP(,@10)                                   0284 00593000
         LH    @09,PLHNOSEG(,RPLH)                                 0284 00594000
         SLR   @05,@05                                             0284 00595000
         IC    @05,IXSNOSR(,@10)                                   0284 00596000
         CR    @09,@05                                             0284 00597000
         BNE   @RF00284                                            0284 00598000
@RT00284 DS    0H                                                  0285 00599000
*             DO;                   /* YES                           */ 00600000
*               IF AMDDST='1'B THEN /* IF KSDS                       */ 00601000
         L     @10,AMBDSB(,RAMB)                                   0286 00602000
         TM    AMDDST(@10),B'10000000'                             0286 00603000
         BNO   @RF00286                                            0286 00604000
*                 DIWATV=ZERO;      /* RELEASE WORK AREA             */ 00605000
         L     @10,AMBIWA(,RAMB)                                   0287 00606000
         MVI   DIWATV(@10),X'00'                                   0287 00607000
*               CALL EXIT;          /* RETURN                        */ 00608000
@RF00286 BAL   @14,EXIT                                            0288 00609000
*             END;                  /*                               */ 00610000
*           RAMB=AMBLIX;            /* POINT TO INDEX BLOCKS         */ 00611000
@RF00284 L     @10,RPLDACB(,RRPL)                                  0290 00612000
         L     @10,ACBAMBL(,@10)                                   0290 00613000
         L     RAMB,AMBLIX(,@10)                                   0290 00614000
*           PLHNOSEG=ONE;           /* START ERASE COUNT AT 1        */ 00615000
         MVC   PLHNOSEG(2,RPLH),@CH00053                           0291 00616000
*           RWORK3=IXSHEP;          /* POINT TO CURRENT ENTRY        */ 00617000
         L     @10,AMBIWA(,RAMB)                                   0292 00618000
         L     @10,ICWCHN(,@10)                                    0292 00619000
         L     @10,IMWIXSP(,@10)                                   0292 00620000
         L     RWORK3,IXSHEP(,@10)                                 0292 00621000
*           RWORK2=PLHIBUFC->BUFCBAD;/* POINT TO INDEX RECORD        */ 00622000
         L     @10,PLHIBUFC(,RPLH)                                 0293 00623000
         L     RWORK2,BUFCBAD(,@10)                                0293 00624000
*           DO WHILE RWORK3->IBFLPF=AMDKEYLN;/* LOOP TO LAST SEGMENT */ 00625000
         B     @DE00294                                            0294 00626000
@DL00294 DS    0H                                                  0295 00627000
*             RWORK3=RWORK3-RWORK2->IXHFLPLN;/* MOVE OVER 1 ENTRY    */ 00628000
         SLR   @10,@10                                             0295 00629000
         IC    @10,IXHFLPLN(,RWORK2)                               0295 00630000
         SLR   RWORK3,@10                                          0295 00631000
*             PLHNOSEG=PLHNOSEG+ONE;/* BUMP COUNT                    */ 00632000
         LA    @10,1                                               0296 00633000
         AH    @10,PLHNOSEG(,RPLH)                                 0296 00634000
         STH   @10,PLHNOSEG(,RPLH)                                 0296 00635000
*           END;                    /*                               */ 00636000
@DE00294 L     @10,AMBDSB(,RAMB)                                   0297 00637000
         SLR   @09,@09                                             0297 00638000
         IC    @09,IBFLPF(,RWORK3)                                 0297 00639000
         CH    @09,AMDKEYLN(,@10)                                  0297 00640000
         BE    @DL00294                                            0297 00641000
*           IXSHEP=RWORK3;          /* SET POSITION                  */ 00642000
         L     @10,AMBIWA(,RAMB)                                   0298 00643000
         L     @10,ICWCHN(,@10)                                    0298 00644000
         L     @10,IMWIXSP(,@10)                                   0298 00645000
         ST    RWORK3,IXSHEP(,@10)                                 0298 00646000
*           DO PLHSRCSG=ONE TO PLHNOSEG;/* LOOP COVERS ALL SEGMENTS     00647000
*                                      TO BE ERASED                  */ 00648000
         LA    @10,1                                               0299 00649000
         B     @DE00299                                            0299 00650000
@DL00299 DS    0H                                                  0300 00651000
*             RWORK2=PLHIBUFC->BUFCBAD;/* POINT TO INDEX RECORD      */ 00652000
         L     @10,PLHIBUFC(,RPLH)                                 0300 00653000
         L     RWORK2,BUFCBAD(,@10)                                0300 00654000
*             RWORK3=IXSHEP+LENGTH(IBFLPL)+/* POINT TO POINTER FIELD */ 00655000
*                 LENGTH(IBFLPF);   /* OF CURRENT ENTRY              */ 00656000
         L     @10,AMBIWA(,RAMB)                                   0301 00657000
         L     @10,ICWCHN(,@10)                                    0301 00658000
         L     @10,IMWIXSP(,@10)                                   0301 00659000
         LA    RWORK3,2                                            0301 00660000
         AL    RWORK3,IXSHEP(,@10)                                 0301 00661000
*             RWORK4=RWORK2->IXHPTLS;/* GET MASK FROM HEADER         */ 00662000
         SLR   RWORK4,RWORK4                                       0302 00663000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0302 00664000
*             RPARM1=ZERO;          /* ASSURE CLEAN REGISTER         */ 00665000
         SLR   RPARM1,RPARM1                                       0303 00666000
*             GEN(EX  RWORK4,PICKPT);/* EXTRACT POINTER AND          */ 00667000
         EX  RWORK4,PICKPT                                              00668000
*             IMWIPTR=RPARM1;       /* SAVE IT IN WORK AREA          */ 00669000
         L     @10,AMBIWA(,RAMB)                                   0305 00670000
         L     @10,ICWCHN(,@10)                                    0305 00671000
         ST    RPARM1,IMWIPTR(,@10)                                0305 00672000
*             RAMB=AMBLDTA;         /* ADDRESS THRU DATA BLKS.       */ 00673000
         L     @10,RPLDACB(,RRPL)                                  0306 00674000
         L     @10,ACBAMBL(,@10)                                   0306 00675000
         L     RAMB,AMBLDTA(,@10)                                  0306 00676000
*             CALL CLEARSEG;        /* GET A BUFFER AND CLEAR        */ 00677000
         BAL   @14,CLEARSEG                                        0307 00678000
*             RAMB=AMBLIX;          /* ADDRESS THRU INDEX            */ 00679000
         L     @10,RPLDACB(,RRPL)                                  0308 00680000
         L     @10,ACBAMBL(,@10)                                   0308 00681000
         L     @09,AMBLIX(,@10)                                    0308 00682000
         LR    RAMB,@09                                            0308 00683000
*             RWORK2=IMWIPTR;       /* GET POINTER                   */ 00684000
         L     @05,AMBIWA(,RAMB)                                   0309 00685000
         L     @05,ICWCHN(,@05)                                    0309 00686000
         L     RWORK2,IMWIPTR(,@05)                                0309 00687000
*             RAMB=AMBLDTA;         /* POINT TO DATA BLKS            */ 00688000
         L     RAMB,AMBLDTA(,@10)                                  0310 00689000
*             BUFCORBA=(PLHIBUFC->BUFCBAD->IXHBRBA)+(RWORK2*AMDCINV);   00690000
         L     @10,PLHIBUFC(,RPLH)                                 0311 00691000
         L     @10,BUFCBAD(,@10)                                   0311 00692000
         L     @05,AMBDSB(,RAMB)                                   0311 00693000
         LR    @15,RWORK2                                          0311 00694000
         M     @14,AMDCINV(,@05)                                   0311 00695000
         AL    @15,IXHBRBA(,@10)                                   0311 00696000
         ST    @15,BUFCORBA(,RBUFC)                                0311 00697000
*                                   /* COMPUTE THE RBA OF CLEARED  0312 00698000
*                                      DATA CI                       */ 00699000
*             BUFCDDDD=BUFCORBA;    /* SET INPUT RBA                 */ 00700000
         ST    @15,BUFCDDDD(,RBUFC)                                0312 00701000
*             RAMB=AMBLIX;          /* ADDRESS THRU INDEX BLKS       */ 00702000
         LR    RAMB,@09                                            0313 00703000
*             CALL DELSEG;          /* UPDATE INDEX                  */ 00704000
         BAL   @14,DELSEG                                          0314 00705000
*           END;                    /*                               */ 00706000
         LA    @10,1                                               0315 00707000
         AH    @10,PLHSRCSG(,RPLH)                                 0315 00708000
@DE00299 STH   @10,PLHSRCSG(,RPLH)                                 0315 00709000
         CH    @10,PLHNOSEG(,RPLH)                                 0315 00710000
         BNH   @DL00299                                            0315 00711000
*           RBUFC=PLHIBUFC;         /* SET FOR SEQ SET BUFC          */ 00712000
         L     RBUFC,PLHIBUFC(,RPLH)                               0316 00713000
*           BUFCORBA=BUFCDDDD;      /* SET OUTPUT RBA                */ 00714000
         L     @10,BUFCDDDD(,RBUFC)                                0317 00715000
         ST    @10,BUFCORBA(,RBUFC)                                0317 00716000
*           BUFCMW=ON;              /* SET MUST WRITE                */ 00717000
         OI    BUFCMW(RBUFC),B'10000000'                           0318 00718000
*I09:                                                              0319 00719000
*           DO;                     /* IDACALL(IDAWRBFR)             */ 00720000
I09      DS    0H                                                  0320 00721000
*             CALL IDAWRBFR;        /* EXIT TO IDAWRBFR              */ 00722000
         L     @15,@CV00925                                        0320 00723000
         BALR  @14,@15                                             0320 00724000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00725000
         BALR @11,0                                                     00726000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00727000
         USING *,@11                                                    00728000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00729000
         L     @11,=A(@PSTART)                                          00730000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00731000
         USING @PSTART,@11                                              00732000
*           END I09;                /* WRITE INDEX                   */ 00733000
*I10:                                                              0326 00734000
*           DO;                     /* IDACALL(IDAIVIXB)             */ 00735000
I10      DS    0H                                                  0327 00736000
*             CALL IDAIVIXB;        /* EXIT TO IDAIVIXB              */ 00737000
         L     @15,@CV00921                                        0327 00738000
         BALR  @14,@15                                             0327 00739000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00740000
         BALR @11,0                                                     00741000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00742000
         USING *,@11                                                    00743000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00744000
         L     @11,=A(@PSTART)                                          00745000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00746000
         USING @PSTART,@11                                              00747000
*           END I10;                /* INVALIDATE OTHER BUFFERS WITH    00748000
*                                      SAME RBA                      */ 00749000
*           RAMB=AMBLDTA;           /* RESET AMB POINTER             */ 00750000
         L     @10,RPLDACB(,RRPL)                                  0333 00751000
         L     @10,ACBAMBL(,@10)                                   0333 00752000
         L     RAMB,AMBLDTA(,@10)                                  0333 00753000
*           DIWATV=ZERO;            /* FREE THE WORK AREA            */ 00754000
         L     @10,AMBIWA(,RAMB)                                   0334 00755000
         MVI   DIWATV(@10),X'00'                                   0334 00756000
*           CALL EXIT;              /* RETURN                        */ 00757000
         BAL   @14,EXIT                                            0335 00758000
*         END;                      /*                               */ 00759000
*       RFY                                                        0337 00760000
*        (RWORK0,                                                  0337 00761000
*         RWORK1,                                                  0337 00762000
*         RWORK2,                                                  0337 00763000
*         RWORK3) RSTD;             /*                               */ 00764000
@RF00256 DS    0H                                                  0338 00765000
*       PLHARDB=AMDPARDB;           /* START WITH FIRST              */ 00766000
         L     @10,AMBDSB(,RAMB)                                   0338 00767000
         L     @09,AMDPARDB(,@10)                                  0338 00768000
         ST    @09,PLHARDB(,RPLH)                                  0338 00769000
*       IF AMDRANGE=ON THEN         /* IF KEY RANGE DS               */ 00770000
         TM    AMDRANGE(@10),B'00000100'                           0339 00771000
         BNO   @RF00339                                            0339 00772000
*         DO;                       /* GO SET ARDB IN PLH            */ 00773000
*           RWORK1=RPLAREA+AMDRKP;  /* SET KEY POINTER               */ 00774000
         LH    RWORK1,AMDRKP(,@10)                                 0341 00775000
         AL    RWORK1,RPLAREA(,RRPL)                               0341 00776000
*           RWORK2=AMDKEYLN;        /* SET KEY LENGTH                */ 00777000
         LH    RWORK2,AMDKEYLN(,@10)                               0342 00778000
*I11:                                                              0343 00779000
*           DO;                     /* IDACALL(IDACHKKR)             */ 00780000
I11      DS    0H                                                  0344 00781000
*             CALL IDACHKKR;        /* EXIT TO IDACHKKR              */ 00782000
         L     @15,@CV00929                                        0344 00783000
         BALR  @14,@15                                             0344 00784000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00785000
         BALR @11,0                                                     00786000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00787000
         USING *,@11                                                    00788000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00789000
         L     @11,=A(@PSTART)                                          00790000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00791000
         USING @PSTART,@11                                              00792000
*           END I11;                /* GO SET ARDB POINTER           */ 00793000
*         END;                      /*                               */ 00794000
*       RAMB=AMBLIX;                /* ADDRESS THRU INDEX BLKS       */ 00795000
@RF00339 L     @10,RPLDACB(,RRPL)                                  0351 00796000
         L     @10,ACBAMBL(,@10)                                   0351 00797000
         L     RAMB,AMBLIX(,@10)                                   0351 00798000
*       RWORK1=PLHNOSEG-IXSNOSR;    /* COMPUTE ADDITIONAL CIS        */ 00799000
         L     @10,AMBIWA(,RAMB)                                   0352 00800000
         L     @10,ICWCHN(,@10)                                    0352 00801000
         L     @10,IMWIXSP(,@10)                                   0352 00802000
         LH    RWORK1,PLHNOSEG(,RPLH)                              0352 00803000
         SLR   @09,@09                                             0352 00804000
         IC    @09,IXSNOSR(,@10)                                   0352 00805000
         SLR   RWORK1,@09                                          0352 00806000
*       RWORK2=PLHIBUFC->BUFCBAD;   /* POINT TO SEQ SET BUFFER       */ 00807000
         L     @10,PLHIBUFC(,RPLH)                                 0353 00808000
         L     RWORK2,BUFCBAD(,@10)                                0353 00809000
*       RWORK3=RWORK2+RWORK2->IXHLEO+/* POINT TO 'L' FIELD           */ 00810000
*           LENGTH(IBFLPF);         /* OF LAST ENTRY                 */ 00811000
         LH    @10,IXHLEO(,RWORK2)                                 0354 00812000
         LR    RWORK3,RWORK2                                       0354 00813000
         ALR   RWORK3,@10                                          0354 00814000
         AL    RWORK3,@CF00053                                     0354 00815000
*       RWORK0=RWORK3->IBFLPL;      /* EXTRACT LENGTH                */ 00816000
         SLR   RWORK0,RWORK0                                       0355 00817000
         IC    RWORK0,IBFLPL(,RWORK3)                              0355 00818000
*       RWORK3=(RWORK2->IXHLEO-     /* COMPUTE LENGTH OF             */ 00819000
*           LENGTH(IXSELL))-RWORK0- /* UNUSED SPACE IN               */ 00820000
*           RWORK2->IXHFSO;         /* SEQUENCE SET                  */ 00821000
         LA    @09,2                                               0356 00822000
         SLR   @10,@09                                             0356 00823000
         SLR   @10,RWORK0                                          0356 00824000
         LH    @15,IXHFSO(,RWORK2)                                 0356 00825000
         SLR   @10,@15                                             0356 00826000
         LR    RWORK3,@10                                          0356 00827000
*       RWORK0=LENGTH(IBFLPL)+LENGTH(IBFLPF);/* GET LENGTH EACH    0357 00828000
*                                      ADDITIONAL SPANNED RECORD CI     00829000
*                                      ENTRY                         */ 00830000
         LR    RWORK0,@09                                          0357 00831000
*       IF(RWORK0*RWORK1)>RWORK3|   /* IF NOT ENOUGH SPACE IN        */ 00832000
*           RWORK1>((RWORK2->IXHFSO-LENGTH(IDAIXH))/* SEQ SET        */ 00833000
*           /(RWORK2->IXHFLPLN-RWORK0)) THEN/* OR NOT ENOUGH CIS IN     00834000
*                                      THE CA THEN                   */ 00835000
         LR    @15,RWORK1                                          0358 00836000
         MR    @14,RWORK0                                          0358 00837000
         CLR   @15,RWORK3                                          0358 00838000
         BH    @RT00358                                            0358 00839000
         LH    @10,IXHFSO(,RWORK2)                                 0358 00840000
         SL    @10,@CF00083                                        0358 00841000
         SLR   @09,@09                                             0358 00842000
         IC    @09,IXHFLPLN(,RWORK2)                               0358 00843000
         SLR   @09,RWORK0                                          0358 00844000
         LR    @14,@10                                             0358 00845000
         SRDA  @14,32                                              0358 00846000
         DR    @14,@09                                             0358 00847000
         CLR   RWORK1,@15                                          0358 00848000
         BNH   @RF00358                                            0358 00849000
@RT00358 DS    0H                                                  0359 00850000
*         DO;                       /* GET HELP FROM CA SPLIT        */ 00851000
*           RPARM1=RWORK1;          /* SET NO. ADDITIONAL CIS      0360 00852000
*                                      REQUIRED FOR CA SPLIT         */ 00853000
         LR    RPARM1,RWORK1                                       0360 00854000
*           RAMB=AMBLDTA;           /* SET RAMB TO DATA SIDE         */ 00855000
         L     @10,RPLDACB(,RRPL)                                  0361 00856000
         L     @10,ACBAMBL(,@10)                                   0361 00857000
         L     RAMB,AMBLDTA(,@10)                                  0361 00858000
*I12:                                                              0362 00859000
*           DO;                     /* IDACALL(IDA019RF)             */ 00860000
I12      DS    0H                                                  0363 00861000
*             CALL IDA019RF;        /* EXIT TO IDA019RF              */ 00862000
         L     @15,@CV00927                                        0363 00863000
         BALR  @14,@15                                             0363 00864000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00865000
         BALR @11,0                                                     00866000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00867000
         USING *,@11                                                    00868000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00869000
         L     @11,=A(@PSTART)                                          00870000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00871000
         USING @PSTART,@11                                              00872000
*           END I12;                /* CALL CA SPLIT                 */ 00873000
*           IF RPLERREG^=ZERO THEN  /* ERROR FOUND                   */ 00874000
         CLI   RPLERREG(RRPL),0                                    0369 00875000
         BE    @RF00369                                            0369 00876000
*             DO;                   /* YES                           */ 00877000
*               DIWATV=ZERO;        /* FREE WORK AREA                */ 00878000
         L     @10,AMBIWA(,RAMB)                                   0371 00879000
         MVI   DIWATV(@10),X'00'                                   0371 00880000
*               CALL EXIT;          /* RETURN                        */ 00881000
         BAL   @14,EXIT                                            0372 00882000
*             END;                  /*                               */ 00883000
*I13:                                                              0374 00884000
*           DO;                     /* IDACALL(IDAREPOS)             */ 00885000
@RF00369 DS    0H                                                  0374 00886000
I13      DS    0H                                                  0375 00887000
*             CALL IDAREPOS;        /* EXIT TO IDAREPOS              */ 00888000
         L     @15,@CV00924                                        0375 00889000
         BALR  @14,@15                                             0375 00890000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00891000
         BALR @11,0                                                     00892000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00893000
         USING *,@11                                                    00894000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00895000
         L     @11,=A(@PSTART)                                          00896000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00897000
         USING @PSTART,@11                                              00898000
*           END I13;                /* RESTORE POINTERS FOR THE    0380 00899000
*                                      BUFFER MANAGER                */ 00900000
*           PLHSAVE1=AMDCINV-LENGTH(IDACIDF)/* RESTORE USABLE SPACE  */ 00901000
*               -TWO*LENGTH(IDARDF);/* CLOBBERED BY SPLIT            */ 00902000
         L     @10,AMBDSB(,RAMB)                                   0381 00903000
         L     @10,AMDCINV(,@10)                                   0381 00904000
         SL    @10,@CF00226                                        0381 00905000
         ST    @10,PLHSAVE1(,RPLH)                                 0381 00906000
*           GO TO SRCH;             /* BACK TO TRY AGAIN             */ 00907000
         B     SRCH                                                0382 00908000
*         END;                      /*                               */ 00909000
*       RESPECIFY                                                  0384 00910000
*         RWORK4 RSTD;              /*                               */ 00911000
@RF00358 DS    0H                                                  0385 00912000
*       RWORK3=IXSHEP+LENGTH(IBFLPL)+/* POINT TO POINTER FIELD       */ 00913000
*           LENGTH(IBFLPF);         /* OF HIT ENTRY                  */ 00914000
         L     @10,AMBIWA(,RAMB)                                   0385 00915000
         L     @10,ICWCHN(,@10)                                    0385 00916000
         L     @10,IMWIXSP(,@10)                                   0385 00917000
         LA    RWORK3,2                                            0385 00918000
         AL    RWORK3,IXSHEP(,@10)                                 0385 00919000
*       RWORK4=RWORK2->IXHPTLS;     /* GET MASK FROM HEADER          */ 00920000
         SLR   RWORK4,RWORK4                                       0386 00921000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0386 00922000
*       RPARM1=ZERO;                /* CLEAR PICKUP REGISTER         */ 00923000
         SLR   RPARM1,RPARM1                                       0387 00924000
*       GEN(EX  RWORK4,PICKPT);     /* EXTRACT POINTER FIELD         */ 00925000
         EX  RWORK4,PICKPT                                              00926000
*       RPLDDDD=RWORK2->IXHBRBA+    /* COMPUTE RBA OF                */ 00927000
*           AMDCINV*RPARM1;         /* FIRST SEGMENT                 */ 00928000
         L     @10,AMBDSB(,RAMB)                                   0389 00929000
         LR    @15,RPARM1                                          0389 00930000
         M     @14,AMDCINV(,@10)                                   0389 00931000
         AL    @15,IXHBRBA(,RWORK2)                                0389 00932000
         ST    @15,RPLDDDD(,RRPL)                                  0389 00933000
*       DO PLHSRCSG=ONE TO IXSNOSR; /* LOOP COVERS ALL OLD SEG       */ 00934000
         LA    @10,1                                               0390 00935000
         B     @DE00390                                            0390 00936000
@DL00390 DS    0H                                                  0391 00937000
*         RAMB=AMBLDTA;             /* DATA SIDE CONTROL BLKS        */ 00938000
         L     @10,RPLDACB(,RRPL)                                  0391 00939000
         L     @10,ACBAMBL(,@10)                                   0391 00940000
         L     RAMB,AMBLDTA(,@10)                                  0391 00941000
*         RBUFC=ZERO;               /* USE WORK BUFFER               */ 00942000
         SLR   RBUFC,RBUFC                                         0392 00943000
*         CALL IDAMVSEG;            /* MOVE A SEGMENT OF THE NEW   0393 00944000
*                                      RECORD TO A BUFFER            */ 00945000
         L     @15,@CA00980                                        0393 00946000
         BALR  @14,@15                                             0393 00947000
*         RAMB=AMBLIX;              /* ADDRESS THRU INDEX            */ 00948000
         L     @10,RPLDACB(,RRPL)                                  0394 00949000
         L     @10,ACBAMBL(,@10)                                   0394 00950000
         L     RAMB,AMBLIX(,@10)                                   0394 00951000
*         RWORK2=PLHIBUFC->BUFCBAD; /* POINT TO BUFFER               */ 00952000
         L     @10,PLHIBUFC(,RPLH)                                 0395 00953000
         L     RWORK2,BUFCBAD(,@10)                                0395 00954000
*         RWORK3=IXSHEP+LENGTH(IBFLPL)+/* POINT TO POINTER FIELD     */ 00955000
*             LENGTH(IBFLPF);       /* OF CURRENT ENTRY              */ 00956000
         L     @10,AMBIWA(,RAMB)                                   0396 00957000
         L     @10,ICWCHN(,@10)                                    0396 00958000
         L     @10,IMWIXSP(,@10)                                   0396 00959000
         LA    RWORK3,2                                            0396 00960000
         AL    RWORK3,IXSHEP(,@10)                                 0396 00961000
*         RWORK4=RWORK2->IXHPTLS;   /* GET MASK FROM HEADER          */ 00962000
         SLR   RWORK4,RWORK4                                       0397 00963000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0397 00964000
*         RPARM1=ZERO;              /* CLEAR RECIEVING REG.          */ 00965000
         SLR   RPARM1,RPARM1                                       0398 00966000
*         GEN(EX  RWORK4,PICKPT);   /* EXTRACT POINTER FIELD         */ 00967000
         EX  RWORK4,PICKPT                                              00968000
*         BUFCORBA=RWORK2->IXHBRBA+ /* COMPUTE RBA OF BUFFER         */ 00969000
*             AMBLDTA->AMBDSB->AMDCINV*RPARM1;/* WHICH WAS FILLED BY    00970000
*                                      MOVESEG                       */ 00971000
         L     @10,RPLDACB(,RRPL)                                  0400 00972000
         L     @10,ACBAMBL(,@10)                                   0400 00973000
         L     @10,AMBLDTA(,@10)                                   0400 00974000
         L     @10,AMBDSB(,@10)                                    0400 00975000
         LR    @15,RPARM1                                          0400 00976000
         M     @14,AMDCINV(,@10)                                   0400 00977000
         AL    @15,IXHBRBA(,RWORK2)                                0400 00978000
         ST    @15,BUFCORBA(,RBUFC)                                0400 00979000
*         BUFCDDDD=BUFCORBA;        /* SET INPUT RBA                 */ 00980000
         ST    @15,BUFCDDDD(,RBUFC)                                0401 00981000
*         IF PLHSRCSG^=IXSNOSR THEN /* LAST SEGMENT                  */ 00982000
         L     @10,AMBIWA(,RAMB)                                   0402 00983000
         L     @10,ICWCHN(,@10)                                    0402 00984000
         L     @10,IMWIXSP(,@10)                                   0402 00985000
         LH    @09,PLHSRCSG(,RPLH)                                 0402 00986000
         SLR   @15,@15                                             0402 00987000
         IC    @15,IXSNOSR(,@10)                                   0402 00988000
         CR    @09,@15                                             0402 00989000
         BE    @RF00402                                            0402 00990000
*           IXSHEP=IXSHEP-RWORK2->IXHFLPLN;/* NO MOVE CURRENT POINTER   00991000
*                                      TO THE LEFT                   */ 00992000
         L     @09,IXSHEP(,@10)                                    0403 00993000
         SLR   @15,@15                                             0403 00994000
         IC    @15,IXHFLPLN(,RWORK2)                               0403 00995000
         SLR   @09,@15                                             0403 00996000
         ST    @09,IXSHEP(,@10)                                    0403 00997000
*         IF AMBJRN=ON THEN         /* JOURNAL EXIT REQUIRED         */ 00998000
@RF00402 TM    AMBJRN(RAMB),B'00000010'                            0404 00999000
         BNO   @RF00404                                            0404 01000000
*I14:                                                              0405 01001000
*           DO;                     /* IDACALL(IDAJRNSR)             */ 01002000
I14      DS    0H                                                  0406 01003000
*             CALL IDAJRNSR;        /* EXIT TO IDAJRNSR              */ 01004000
         L     @15,@CV00922                                        0406 01005000
         BALR  @14,@15                                             0406 01006000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01007000
         BALR @11,0                                                     01008000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01009000
         USING *,@11                                                    01010000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01011000
         L     @11,=A(@PSTART)                                          01012000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01013000
         USING @PSTART,@11                                              01014000
*           END I14;                /* YES, GO JOURNAL               */ 01015000
*       END;                        /*                               */ 01016000
@RF00404 LA    @10,1                                               0412 01017000
         AH    @10,PLHSRCSG(,RPLH)                                 0412 01018000
@DE00390 STH   @10,PLHSRCSG(,RPLH)                                 0412 01019000
         L     @09,AMBIWA(,RAMB)                                   0412 01020000
         L     @09,ICWCHN(,@09)                                    0412 01021000
         L     @09,IMWIXSP(,@09)                                   0412 01022000
         SLR   @15,@15                                             0412 01023000
         IC    @15,IXSNOSR(,@09)                                   0412 01024000
         CR    @10,@15                                             0412 01025000
         BNH   @DL00390                                            0412 01026000
*       DO PLHSRCSG=IXSNOSR+ONE TO PLHNOSEG;/* LOOP COVERS ALL NEW 0413 01027000
*                                      SEGMENTS                      */ 01028000
         L     @10,AMBIWA(,RAMB)                                   0413 01029000
         L     @10,ICWCHN(,@10)                                    0413 01030000
         L     @10,IMWIXSP(,@10)                                   0413 01031000
         LA    @09,1                                               0413 01032000
         SLR   @15,@15                                             0413 01033000
         IC    @15,IXSNOSR(,@10)                                   0413 01034000
         ALR   @09,@15                                             0413 01035000
         B     @DE00413                                            0413 01036000
@DL00413 DS    0H                                                  0414 01037000
*         RAMB=AMBLDTA;             /* ADDRESS THRU DATA BLKS        */ 01038000
         L     @10,RPLDACB(,RRPL)                                  0414 01039000
         L     @10,ACBAMBL(,@10)                                   0414 01040000
         L     RAMB,AMBLDTA(,@10)                                  0414 01041000
*         RBUFC=ZERO;               /* USE WORK BUFFER               */ 01042000
         SLR   RBUFC,RBUFC                                         0415 01043000
*         CALL IDAMVSEG;            /* MOVE A SEGMENT TO BUFF        */ 01044000
         L     @15,@CA00980                                        0416 01045000
         BALR  @14,@15                                             0416 01046000
*         RAMB=AMBLIX;              /* ADDRESS THRU INDEX BLKS       */ 01047000
         L     @10,RPLDACB(,RRPL)                                  0417 01048000
         L     @10,ACBAMBL(,@10)                                   0417 01049000
         L     RAMB,AMBLIX(,@10)                                   0417 01050000
*         CALL IDAADSEG;            /* GO PLACE NEW SEGMENT IN     0418 01051000
*                                      SEQUENCE SET                  */ 01052000
         L     @15,@CA00995                                        0418 01053000
         BALR  @14,@15                                             0418 01054000
*         RWORK2=PLHIBUFC->BUFCBAD; /* POINT TO BUFFER               */ 01055000
         L     @10,PLHIBUFC(,RPLH)                                 0419 01056000
         L     RWORK2,BUFCBAD(,@10)                                0419 01057000
*         RWORK3=RWORK2+RWORK2->IXHFSO-/* POINT TO THE 1ST UNUSED    */ 01058000
*             RWORK2->IXHFLPLN+     /* BYTE IN THE SEQ SET           */ 01059000
*             LENGTH(IBFLPF)+       /* FREE LIST                     */ 01060000
*             LENGTH(IBFLPL);       /*                               */ 01061000
         LR    RWORK3,RWORK2                                       0420 01062000
         LH    @10,IXHFSO(,RWORK2)                                 0420 01063000
         ALR   RWORK3,@10                                          0420 01064000
         SLR   @10,@10                                             0420 01065000
         IC    @10,IXHFLPLN(,RWORK2)                               0420 01066000
         SLR   RWORK3,@10                                          0420 01067000
         AL    RWORK3,@CF00146                                     0420 01068000
*         RWORK4=RWORK2->IXHPTLS;   /* GET MASK FROM HEADER          */ 01069000
         SLR   RWORK4,RWORK4                                       0421 01070000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0421 01071000
*         RPARM1=ZERO;              /* CLEAR PICKUP REGISTER         */ 01072000
         SLR   RPARM1,RPARM1                                       0422 01073000
*         GEN(EX  RWORK4,PICKPT);   /* GRAB THE POINTER              */ 01074000
         EX  RWORK4,PICKPT                                              01075000
*         BUFCORBA=RWORK2->IXHBRBA+ /* COMPUTE THE RBA OF            */ 01076000
*             AMBLDTA->AMBDSB->     /* THE BUFFER WHICH WAS          */ 01077000
*             AMDCINV*RPARM1;       /* JUST FILLED                   */ 01078000
         L     @10,RPLDACB(,RRPL)                                  0424 01079000
         L     @10,ACBAMBL(,@10)                                   0424 01080000
         L     @10,AMBLDTA(,@10)                                   0424 01081000
         L     @10,AMBDSB(,@10)                                    0424 01082000
         LR    @15,RPARM1                                          0424 01083000
         M     @14,AMDCINV(,@10)                                   0424 01084000
         AL    @15,IXHBRBA(,RWORK2)                                0424 01085000
         ST    @15,BUFCORBA(,RBUFC)                                0424 01086000
*         BUFCDDDD=BUFCORBA;        /* SET INPUT RBA                 */ 01087000
         ST    @15,BUFCDDDD(,RBUFC)                                0425 01088000
*         RPARM1=ZERO;              /* CLEAR                         */ 01089000
         SLR   RPARM1,RPARM1                                       0426 01090000
*         GEN(EX  RWORK4,STOREPT);  /* REMOVE PTR FROM FREELIST      */ 01091000
         EX  RWORK4,STOREPT                                             01092000
*         RWORK2->IXHFSO=RWORK2->IXHFSO/* ADJUST OFFSET TO           */ 01093000
*             -RWORK2->IXHFLPLN     /* FREESPACE IN THE SEQ          */ 01094000
*             +LENGTH(IBFLPF)       /* SET                           */ 01095000
*             +LENGTH(IBFLPL);      /*                               */ 01096000
         LH    @10,IXHFSO(,RWORK2)                                 0428 01097000
         SLR   @09,@09                                             0428 01098000
         IC    @09,IXHFLPLN(,RWORK2)                               0428 01099000
         SLR   @10,@09                                             0428 01100000
         AL    @10,@CF00146                                        0428 01101000
         STH   @10,IXHFSO(,RWORK2)                                 0428 01102000
*         IF AMBJRN=ON THEN         /* JOURNAL EXIT REQUIRED         */ 01103000
         TM    AMBJRN(RAMB),B'00000010'                            0429 01104000
         BNO   @RF00429                                            0429 01105000
*I15:                                                              0430 01106000
*           DO;                     /* IDACALL(IDAJRNSR)             */ 01107000
I15      DS    0H                                                  0431 01108000
*             CALL IDAJRNSR;        /* EXIT TO IDAJRNSR              */ 01109000
         L     @15,@CV00922                                        0431 01110000
         BALR  @14,@15                                             0431 01111000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01112000
         BALR @11,0                                                     01113000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01114000
         USING *,@11                                                    01115000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01116000
         L     @11,=A(@PSTART)                                          01117000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01118000
         USING @PSTART,@11                                              01119000
*           END I15;                /* YES, GO TAKE IT               */ 01120000
*       END;                        /*                               */ 01121000
@RF00429 LA    @09,1                                               0437 01122000
         AH    @09,PLHSRCSG(,RPLH)                                 0437 01123000
@DE00413 STH   @09,PLHSRCSG(,RPLH)                                 0437 01124000
         CH    @09,PLHNOSEG(,RPLH)                                 0437 01125000
         BNH   @DL00413                                            0437 01126000
*       RBUFC=PLHIBUFC;             /* POINT RBUFC TO SEQ SET        */ 01127000
         L     RBUFC,PLHIBUFC(,RPLH)                               0438 01128000
*       BUFCORBA=BUFCDDDD;          /* SET OUTPUT RBA                */ 01129000
         L     @10,BUFCDDDD(,RBUFC)                                0439 01130000
         ST    @10,BUFCORBA(,RBUFC)                                0439 01131000
*       BUFCMW=ON;                  /* SET MUST WRITE ON             */ 01132000
         OI    BUFCMW(RBUFC),B'10000000'                           0440 01133000
*I16:                                                              0441 01134000
*       DO;                         /* IDACALL(IDAWRBFR)             */ 01135000
I16      DS    0H                                                  0442 01136000
*         CALL IDAWRBFR;            /* EXIT TO IDAWRBFR              */ 01137000
         L     @15,@CV00925                                        0442 01138000
         BALR  @14,@15                                             0442 01139000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01140000
         BALR @11,0                                                     01141000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01142000
         USING *,@11                                                    01143000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01144000
         L     @11,=A(@PSTART)                                          01145000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01146000
         USING @PSTART,@11                                              01147000
*       END I16;                    /* GO WRITE SEQ SET              */ 01148000
*I17:                                                              0448 01149000
*       DO;                         /* IDACALL(IDAIVIXB)             */ 01150000
I17      DS    0H                                                  0449 01151000
*         CALL IDAIVIXB;            /* EXIT TO IDAIVIXB              */ 01152000
         L     @15,@CV00921                                        0449 01153000
         BALR  @14,@15                                             0449 01154000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01155000
         BALR @11,0                                                     01156000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01157000
         USING *,@11                                                    01158000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01159000
         L     @11,=A(@PSTART)                                          01160000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01161000
         USING @PSTART,@11                                              01162000
*       END I17;                    /* INVALIDATE OTHER COPYS        */ 01163000
*       RAMB=AMBLDTA;               /* POINT TO DATA BLOCKS          */ 01164000
         L     @10,RPLDACB(,RRPL)                                  0455 01165000
         L     @10,ACBAMBL(,@10)                                   0455 01166000
         L     RAMB,AMBLDTA(,@10)                                  0455 01167000
*       DIWATV=ZERO;                /* FREE WORK AREA                */ 01168000
         L     @10,AMBIWA(,RAMB)                                   0456 01169000
         MVI   DIWATV(@10),X'00'                                   0456 01170000
*       CALL EXIT;                  /* RETURN                        */ 01171000
         BAL   @14,EXIT                                            0457 01172000
*       RFY                                                        0458 01173000
*        (RWORK0,                                                  0458 01174000
*         RWORK1,                                                  0458 01175000
*         RWORK2,                                                  0458 01176000
*         RWORK3,                                                  0458 01177000
*         RWORK4) UNRSTD;           /*                               */ 01178000
*     END;                          /* END OF UPDATE CODE            */ 01179000
*                                                                  0460 01180000
*   /*****************************************************************/ 01181000
*   /*                                                               */ 01182000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01183000
*   /* IDAMVSEG SUBROUTINE FUNCTION: IF A WORK BUFFER HAS BEEN       */ 01184000
*   /* REQUESTED (RBUFC = ZERO) GETS A BUFFER FROM BUFFER MANAGER,   */ 01185000
*   /* MOVES A SEGMENT OF THE NEW RECORD INTO THE BUFFER, AND BUILDS */ 01186000
*   /* PROPER RDF AND CIDF FIELDS FOR THE RECORD. SINCE I/O MAY BE   */ 01187000
*   /* INVOKED ON OBTAINING A BUFFER, A CHECK FOR ERRORS IS MADE. IF */ 01188000
*   /* AN ERROR IS DETECTED, RETURN IS NOT TO THE CALLER, BUT TO THE */ 01189000
*   /* CALLERS CALLER. * * * * * * * * * * * * * * * * * * * * * * * */ 01190000
*   /* * * * * * * * *                                               */ 01191000
*   /*                                                               */ 01192000
*   /*****************************************************************/ 01193000
*                                                                  0460 01194000
*IDAMVSEG:                                                         0460 01195000
*   ENTRY;                          /*                               */ 01196000
@EP00460 DS    0H                                                  0460 01197000
@EC00460 DS    0H                                                  0461 01198000
*   RFY                                                            0461 01199000
*    (RWORK2,                                                      0461 01200000
*     RWORK3,                                                      0461 01201000
*     RWORK4,                                                      0461 01202000
*     RWORK5) RSTD;                 /*                               */ 01203000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01204000
         IDASVR14                                                       01205000
*   IF RBUFC=ZERO THEN              /* WORK BUFFER REQUESTED         */ 01206000
         LTR   RBUFC,RBUFC                                         0463 01207000
         BNZ   @RF00463                                            0463 01208000
*I18:                                                              0464 01209000
*     DO;                           /* IDACALL(IDAGWSEG)             */ 01210000
I18      DS    0H                                                  0465 01211000
*       CALL IDAGWSEG;              /* EXIT TO IDAGWSEG              */ 01212000
         L     @15,@CV00920                                        0465 01213000
         BALR  @14,@15                                             0465 01214000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01215000
         BALR @11,0                                                     01216000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01217000
         USING *,@11                                                    01218000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01219000
         L     @11,=A(@PSTART)                                          01220000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01221000
         USING @PSTART,@11                                              01222000
*     END I18;                      /* YES, GET A BUFFER             */ 01223000
*   IF RPLERREG^=ZERO THEN          /* I/O ERROR                     */ 01224000
@RF00463 CLI   RPLERREG(RRPL),0                                    0471 01225000
         BE    @RF00471                                            0471 01226000
*     DO;                           /* YES                           */ 01227000
*       IF AMBLSR=OFF&AMBGSR=OFF THEN/* DB/DC                        */ 01228000
         TM    AMBLSR(RAMB),B'01100000'                            0473 01229000
         BNZ   @RF00473                                            0473 01230000
*         DO;                       /* NO                            */ 01231000
*           IF DIWBUFC->BUFCNXT2^=DIWBUFC THEN/* IS DI BUFFER IN   0475 01232000
*                                      BUFFER CHAIN                  */ 01233000
         L     @10,AMBIWA(,RAMB)                                   0475 01234000
         L     @10,DIWBUFC(,@10)                                   0475 01235000
         L     @05,BUFCNXT2-1(,@10)                                0475 01236000
         LA    @05,0(,@05)                                         0475 01237000
         CR    @10,@05                                             0475 01238000
         BE    @RF00475                                            0475 01239000
*             DO;                   /* YES                           */ 01240000
*               RBUFC=DIWBUFC;      /* POINT TO DI BUFC              */ 01241000
         LR    RBUFC,@10                                           0477 01242000
*I19:                                                              0478 01243000
*               DO;                 /* IDACALL(IDASBF)               */ 01244000
I19      DS    0H                                                  0479 01245000
*                 CALL IDASBF;      /* EXIT TO IDASBF                */ 01246000
         L     @15,@CV00923                                        0479 01247000
         BALR  @14,@15                                             0479 01248000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 01249000
         BALR @11,0                                                     01250000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 01251000
         USING *,@11                                                    01252000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 01253000
         L     @11,=A(@PSTART)                                          01254000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 01255000
         USING @PSTART,@11                                              01256000
*               END I19;            /* GO SUBTRACT IT                */ 01257000
*             END;                  /*                               */ 01258000
*         END;                      /*                               */ 01259000
@RF00475 DS    0H                                                  0487 01260000
*       IF AMDDST='1'B THEN         /* IF KSDS                       */ 01261000
@RF00473 L     @10,AMBDSB(,RAMB)                                   0487 01262000
         TM    AMDDST(@10),B'10000000'                             0487 01263000
         BNO   @RF00487                                            0487 01264000
*         DIWATV=ZERO;              /* FREE WORK AREA                */ 01265000
         L     @10,AMBIWA(,RAMB)                                   0488 01266000
         MVI   DIWATV(@10),X'00'                                   0488 01267000
*       GEN(IDARST14);              /* POINT TO CALLER               */ 01268000
@RF00487 DS    0H                                                  0489 01269000
         IDARST14                                                       01270000
*       CALL EXIT;                  /* RETURN TO CALLERS CALLER      */ 01271000
         BAL   @14,EXIT                                            0490 01272000
*     END;                          /*                               */ 01273000
*   RWORK2=BUFCBAD;                 /* 'TO' ADDRESS IS BUFFER        */ 01274000
@RF00471 L     RWORK2,BUFCBAD(,RBUFC)                              0492 01275000
*   RWORK4=RPLAREA+(PLHSRCSG-ONE)*PLHSAVE1;/* COMPUTE 'FROM' ADDRESS    01276000
*                                      IN USERS AREA                 */ 01277000
         L     @10,RPLAREA(,RRPL)                                  0493 01278000
         LH    @15,PLHSRCSG(,RPLH)                                 0493 01279000
         BCTR  @15,0                                               0493 01280000
         L     @05,PLHSAVE1(,RPLH)                                 0493 01281000
         MR    @14,@05                                             0493 01282000
         ALR   @15,@10                                             0493 01283000
         LR    RWORK4,@15                                          0493 01284000
*   IF(RWORK4+PLHSAVE1)>(RPLAREA+RPLRLEN) THEN/* IS LENGTH LESS THEN    01285000
*                                      A BUFFERFUL                   */ 01286000
         ALR   @05,RWORK4                                          0494 01287000
         L     @15,RPLRLEN(,RRPL)                                  0494 01288000
         LR    @00,@10                                             0494 01289000
         ALR   @00,@15                                             0494 01290000
         CR    @05,@00                                             0494 01291000
         BNH   @RF00494                                            0494 01292000
*     RWORK3=RPLRLEN-(RWORK4-RPLAREA);/* YES, SET CORRECT LENGTH     */ 01293000
         LCR   @10,@10                                             0495 01294000
         ALR   @10,RWORK4                                          0495 01295000
         SLR   @15,@10                                             0495 01296000
         LR    RWORK3,@15                                          0495 01297000
*   ELSE                            /* FULL BUFFER SO                */ 01298000
*     RWORK3=PLHSAVE1;              /* SET LENGTH AT FULL            */ 01299000
         B     @RC00494                                            0496 01300000
@RF00494 L     RWORK3,PLHSAVE1(,RPLH)                              0496 01301000
*   PLHSAVE2=RWORK3;                /* SAVE LENGTH MOVED             */ 01302000
@RC00494 ST    RWORK3,PLHSAVE2(,RPLH)                              0497 01303000
*   RWORK5=RWORK3;                  /* SET LENGTH                    */ 01304000
         LR    RWORK5,RWORK3                                       0498 01305000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE SEGMENT TO BUFFER        */ 01306000
         MVCL  RWORK2,RWORK4                                            01307000
*   RWORK3=AMDCINV-PLHSAVE2;        /* SET LENGTH AT REMAINING NO. OF   01308000
*                                      BYTES IN BUFFER               */ 01309000
         L     @10,AMBDSB(,RAMB)                                   0500 01310000
         L     RWORK3,AMDCINV(,@10)                                0500 01311000
         SL    RWORK3,PLHSAVE2(,RPLH)                              0500 01312000
*   GEN(MVCL  RWORK2,RWORK4);       /* CLEAR REMAINING BYTES IN    0501 01313000
*                                      BUFFER                        */ 01314000
         MVCL  RWORK2,RWORK4                                            01315000
*   IF RPLRLEN^>PLHSAVE1+LENGTH(IDARDF) THEN/* IS NEW RECORD       0502 01316000
*                                      NON-SPANNED                   */ 01317000
         L     @10,RPLRLEN(,RRPL)                                  0502 01318000
         L     @05,PLHSAVE1(,RPLH)                                 0502 01319000
         LA    @00,3                                               0502 01320000
         ALR   @00,@05                                             0502 01321000
         CR    @10,@00                                             0502 01322000
         BH    @RF00502                                            0502 01323000
*     DO;                           /* YES, IT MUST BE TREATED     0503 01324000
*                                      SEPARATELY                    */ 01325000
*       IF RPLRLEN>PLHSAVE1 THEN    /* ARE THERE SOME UNMOVED      0504 01326000
*                                      CHARACTERS IN THE RECD        */ 01327000
         CR    @10,@05                                             0504 01328000
         BNH   @RF00504                                            0504 01329000
*         DO;                       /* YES                           */ 01330000
*           RWORK2=BUFCBAD+PLHSAVE1;/* SET 'TO' ADDRESS              */ 01331000
         L     RWORK2,BUFCBAD(,RBUFC)                              0506 01332000
         ALR   RWORK2,@05                                          0506 01333000
*           RWORK4=RPLAREA+PLHSAVE1;/* SET 'FROM' ADDRESS            */ 01334000
         L     RWORK4,RPLAREA(,RRPL)                               0507 01335000
         ALR   RWORK4,@05                                          0507 01336000
*           RWORK3=RPLRLEN-PLHSAVE1;/* COMPUTE ADDITIONAL BYTES TO 0508 01337000
*                                      MOVE                          */ 01338000
         SLR   @10,@05                                             0508 01339000
         LR    RWORK3,@10                                          0508 01340000
*           RWORK5=RWORK3;          /* SET LENGTH                    */ 01341000
         LR    RWORK5,RWORK3                                       0509 01342000
*           GEN(MVCL  RWORK2,RWORK4);/* MOVE FINAL BYTES             */ 01343000
         MVCL  RWORK2,RWORK4                                            01344000
*         END;                      /*                               */ 01345000
*       RWORK2=BUFCBAD+PLHSAVE1+    /* POINT TO RDF POSITION         */ 01346000
*           LENGTH(IDARDF);         /* FOR ONE NON-SPND RECORD       */ 01347000
@RF00504 LA    @10,3                                               0512 01348000
         L     @05,PLHSAVE1(,RPLH)                                 0512 01349000
         L     RWORK2,BUFCBAD(,RBUFC)                              0512 01350000
         ALR   RWORK2,@05                                          0512 01351000
         ALR   RWORK2,@10                                          0512 01352000
*       RWORK2->RDFLL=RPLRLEN;      /* SET LL IN RDF                 */ 01353000
         L     @15,RPLRLEN(,RRPL)                                  0513 01354000
         STCM  @15,3,RDFLL(RWORK2)                                 0513 01355000
*       RWORK2=RWORK2+LENGTH(IDARDF);/* POINT TO CIDF POSITION       */ 01356000
         ALR   RWORK2,@10                                          0514 01357000
*       RWORK2->CIDFOSET=RPLRLEN;   /* SET FREE SPACE OFFSET         */ 01358000
         STH   @15,CIDFOSET(,RWORK2)                               0515 01359000
*       RWORK2->CIDFLL=PLHSAVE1+    /* SET LENGTH OF FREESPACE       */ 01360000
*           LENGTH(IDARDF)-         /* IN CIDF                       */ 01361000
*           RPLRLEN;                /*                               */ 01362000
         ALR   @05,@10                                             0516 01363000
         SLR   @05,@15                                             0516 01364000
         STH   @05,CIDFLL(,RWORK2)                                 0516 01365000
*     END;                          /* END OF NON-SPANNED CASE       */ 01366000
*   ELSE                            /*                               */ 01367000
*     DO;                           /* SPANNED RECORD STORED         */ 01368000
         B     @RC00502                                            0518 01369000
@RF00502 DS    0H                                                  0519 01370000
*       RWORK2=BUFCBAD+PLHSAVE1;    /* POINT TO ID RDF               */ 01371000
         L     RWORK2,BUFCBAD(,RBUFC)                              0519 01372000
         AL    RWORK2,PLHSAVE1(,RPLH)                              0519 01373000
*       RWORK3=RWORK2+LENGTH(IDARDF);/* POINT TO LENGTH RDF          */ 01374000
         LA    RWORK3,3                                            0520 01375000
         ALR   RWORK3,RWORK2                                       0520 01376000
*       RWORK2->RDFLL=PLHSRSID;     /* SET SEG. ID INTO RDF          */ 01377000
         MVC   RDFLL(2,RWORK2),PLHSRSID(RPLH)                      0521 01378000
*       RWORK3->RDFLL=PLHSAVE2;     /* SET LL IN RDF                 */ 01379000
         MVC   RDFLL(2,RWORK3),PLHSAVE2+2(RPLH)                    0522 01380000
*       RWORK2->RDFREPL=ON;         /* SET REPLICATION BIT           */ 01381000
         OI    RDFREPL(RWORK2),B'00001000'                         0523 01382000
*       RWORK3->RDFCTNU=ON;         /* SET CONTINUATION BIT          */ 01383000
         OI    RDFCTNU(RWORK3),B'01000000'                         0524 01384000
*       IF PLHSRCSG=ONE THEN        /* FIRST SEGMENT                 */ 01385000
         CLC   PLHSRCSG(2,RPLH),@CH00053                           0525 01386000
         BNE   @RF00525                                            0525 01387000
*         DO;                       /* YES                           */ 01388000
*           RWORK2->RDF1ST=ON;      /* SHOW THAT SEGMENT IS          */ 01389000
         OI    RDF1ST(RWORK2),B'00010000'                          0527 01390000
*           RWORK3->RDF1ST=ON;      /* THE FIRST IN BOTH RDFS        */ 01391000
         OI    RDF1ST(RWORK3),B'00010000'                          0528 01392000
*         END;                      /*                               */ 01393000
*       ELSE                        /*                               */ 01394000
*         DO;                       /* NOT FIRST SEGMENT             */ 01395000
         B     @RC00525                                            0530 01396000
@RF00525 DS    0H                                                  0531 01397000
*           RWORK2->RDFNOT1=ON;     /* SET NOT FIRST SEGMENT         */ 01398000
         OI    RDFNOT1(RWORK2),B'00100000'                         0531 01399000
*           RWORK3->RDFNOT1=ON;     /* BIT IN BOTH RDFS              */ 01400000
         OI    RDFNOT1(RWORK3),B'00100000'                         0532 01401000
*           IF PLHSRCSG^=PLHNOSEG THEN/* LAST SEGMENT                */ 01402000
         CLC   PLHSRCSG(2,RPLH),PLHNOSEG(RPLH)                     0533 01403000
         BE    @RF00533                                            0533 01404000
*             DO;                   /* NO                            */ 01405000
*               RWORK2->RDF1ST=ON;  /* SHOW INTERMEDIATE             */ 01406000
         OI    RDF1ST(RWORK2),B'00010000'                          0535 01407000
*               RWORK3->RDF1ST=ON;  /* SEGMENT IN BOTH RDFS          */ 01408000
         OI    RDF1ST(RWORK3),B'00010000'                          0536 01409000
*             END;                  /*                               */ 01410000
*         END;                      /*                               */ 01411000
@RF00533 DS    0H                                                  0539 01412000
*       RWORK3=RWORK3+LENGTH(IDARDF);/* POINT TO CIDF                */ 01413000
@RC00525 AL    RWORK3,@CF00159                                     0539 01414000
*       RWORK3->CIDFOSET=PLHSAVE2;  /* BUILD FREESPACE OFFSET        */ 01415000
         L     @10,PLHSAVE2(,RPLH)                                 0540 01416000
         STH   @10,CIDFOSET(,RWORK3)                               0540 01417000
*       RWORK3->CIDFLL=PLHSAVE1-PLHSAVE2;/* BUILD FREESPACE LENGTH   */ 01418000
         LCR   @10,@10                                             0541 01419000
         AL    @10,PLHSAVE1(,RPLH)                                 0541 01420000
         STH   @10,CIDFLL(,RWORK3)                                 0541 01421000
*       BUFCSEG=ON;                 /* SET SPANNED           @ZA07544*/ 01422000
         OI    BUFCSEG(RBUFC),B'01000000'                          0542 01423000
*     END;                          /*                               */ 01424000
*   BUFXORBA=RPLDDDD;               /* SET EXCLUSIVE CTL RBA         */ 01425000
@RC00502 L     @10,RPLDDDD(,RRPL)                                  0544 01426000
         ST    @10,BUFXORBA(,RBUFC)                                0544 01427000
*   BUFCMW=ON;                      /* SET MUST WRITE ON             */ 01428000
         OI    BUFCMW(RBUFC),B'10000000'                           0545 01429000
*   BUFCVAL=OFF;                    /* BUFCDDDD INVAL        @ZA10882*/ 01430000
         NI    BUFCVAL(RBUFC),B'11111011'                          0546 01431000
*   CALL EXIT;                      /* RETURN                        */ 01432000
         BAL   @14,EXIT                                            0547 01433000
*   RFY                                                            0548 01434000
*    (RWORK2,                                                      0548 01435000
*     RWORK3,                                                      0548 01436000
*     RWORK4,                                                      0548 01437000
*     RWORK5) UNRSTD;               /*                               */ 01438000
*                                                                  0549 01439000
*   /*****************************************************************/ 01440000
*   /*                                                               */ 01441000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01442000
*   /* IDAADSEG SUBROUTINE FUNCTION: MODIFIES A SEQUENCE SET RECORD  */ 01443000
*   /* AS FOLLOWS- 1) THAT PORTION OF THE INDEX RECORD FROM THE      */ 01444000
*   /* HIGHEST ENTRY TO THE ENTRY IDENTIFIED BY IXSHEP (PARM LIST    */ 01445000
*   /* FROM IMWA) IS SHIFTED LEFT BY THE LENGTH OF THE 'F' FIELD PLUS*/ 01446000
*   /* THE LENGTH OF THE 'L' FIELD PLUS THE LENGTH OF THE POINTER    */ 01447000
*   /* FIELD. THE POINTER DOES NOT MOVE. 2) THE ENTRY WHICH WAS AT   */ 01448000
*   /* IXSHEP BEFORE THE MOVE RECIEVES A NEW POINTER FROM THE        */ 01449000
*   /* FREELIST. 3) THE VACATED POSITIONS ARE CONVERTED INTO A       */ 01450000
*   /* SPANNED RECORD SEGMENT F AND L FIELDS, IE, F = KEY LENGTH,    */ 01451000
*   /* L=ZERO. 4) IF REQUIRED, ADJUSTMENT IS MADE TO THE SECTION     */ 01452000
*   /* ENTRY LL FIELD. 5) HEADER OFFSETS ARE ADJUSTED AS REQUIRED. 6)*/ 01453000
*   /* IXSHEP, IXSSEP, AND IXSLEP FIELDS(PARM LIST FROM PLH) ARE     */ 01454000
*   /* ADJUSTED AS REQUIRED. 7) IXSHEP (PARM LIST FROM IMWA) IS      */ 01455000
*   /* MODIFIED SO AS TO POINT TO THE SAME ENTRY AS ON ENTRY. NOTE   */ 01456000
*   /* THAT THIS ENTRY WILL HAVE A DIFFERENT POINTER FIELD AFTER THE */ 01457000
*   /* MOVE. * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01458000
*   /* * * *                                                         */ 01459000
*   /*                                                               */ 01460000
*   /*****************************************************************/ 01461000
*                                                                  0549 01462000
*IDAADSEG:                                                         0549 01463000
*   ENTRY;                          /*                               */ 01464000
@EP00549 DS    0H                                                  0550 01465000
*   RFY                                                            0550 01466000
*    (RWORK1,                                                      0550 01467000
*     RWORK2,                                                      0550 01468000
*     RWORK3,                                                      0550 01469000
*     RWORK4,                                                      0550 01470000
*     RWORK5) RSTD;                 /*                               */ 01471000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01472000
         IDASVR14                                                       01473000
*   RWORK1=PLHIBUFC->BUFCBAD;       /* POINT TO INDEX BUFFER         */ 01474000
         L     @10,PLHIBUFC(,RPLH)                                 0552 01475000
         L     RWORK1,BUFCBAD(,@10)                                0552 01476000
*   RWORK2=RWORK1+RWORK1->IXHLEO;   /* POINT TO LAST ENTRY           */ 01477000
         LR    RWORK2,RWORK1                                       0553 01478000
         AH    RWORK2,IXHLEO(,RWORK1)                              0553 01479000
*   RWORK2=RWORK2-RWORK2->IBFLPL-   /* BACK UP ACROSS KEY            */ 01480000
*       LENGTH(IXSELL)-RWORK1->     /* SECTION LL FIELD AND          */ 01481000
*       IXHFLPLN;                   /* MOVE AMOUNT TO SET 'TO'       */ 01482000
         LA    @10,2                                               0554 01483000
         LR    @00,RWORK2                                          0554 01484000
         SLR   @15,@15                                             0554 01485000
         IC    @15,IBFLPL(,RWORK2)                                 0554 01486000
         SLR   @00,@15                                             0554 01487000
         SLR   @00,@10                                             0554 01488000
         SLR   @15,@15                                             0554 01489000
         IC    @15,IXHFLPLN(,RWORK1)                               0554 01490000
         SLR   @00,@15                                             0554 01491000
         LR    RWORK2,@00                                          0554 01492000
*   RWORK4=RWORK2+RWORK1->IXHFLPLN; /* ESTABLISH 'FROM' ADD.         */ 01493000
         ALR   @15,RWORK2                                          0555 01494000
         LR    RWORK4,@15                                          0555 01495000
*   RWORK3=IXSHEP-RWORK4+           /* COMPUTE MOVE LENGTH           */ 01496000
*       LENGTH(IBFLPL)+LENGTH(IBFLPF);/*                             */ 01497000
         L     @15,AMBIWA(,RAMB)                                   0556 01498000
         L     @15,ICWCHN(,@15)                                    0556 01499000
         L     @15,IMWIXSP(,@15)                                   0556 01500000
         L     RWORK3,IXSHEP(,@15)                                 0556 01501000
         SLR   RWORK3,RWORK4                                       0556 01502000
         ALR   RWORK3,@10                                          0556 01503000
*   RWORK5=RWORK3;                  /* SET MOVE LENGTH               */ 01504000
         LR    RWORK5,RWORK3                                       0557 01505000
*   GEN(MVCL  RWORK2,RWORK4);       /* MOVE BLOCK TO LEFT            */ 01506000
         MVCL  RWORK2,RWORK4                                            01507000
*   RWORK3=RWORK1+RWORK1->IXHFSO-   /* POINT TO FIRST UNUSED         */ 01508000
*       RWORK1->IXHFLPLN+           /* POINTER IN THE SEQ SET        */ 01509000
*       LENGTH(IBFLPL)+LENGTH(IBFLPF);/* FREELIST                    */ 01510000
         LR    RWORK3,RWORK1                                       0559 01511000
         AH    RWORK3,IXHFSO(,RWORK1)                              0559 01512000
         SLR   @10,@10                                             0559 01513000
         IC    @10,IXHFLPLN(,RWORK1)                               0559 01514000
         SLR   RWORK3,@10                                          0559 01515000
         AL    RWORK3,@CF00146                                     0559 01516000
*   RWORK4=RWORK1->IXHPTLS;         /* GET MASK FROM HEADER          */ 01517000
         SLR   RWORK4,RWORK4                                       0560 01518000
         IC    RWORK4,IXHPTLS(,RWORK1)                             0560 01519000
*   GEN(EX  RWORK4,PICKPT);         /* EXTRACT POINTER               */ 01520000
         EX  RWORK4,PICKPT                                              01521000
*   RWORK3=RWORK2;                  /* POINT TO LAST ENTRY           */ 01522000
         LR    RWORK3,RWORK2                                       0562 01523000
*   GEN(EX  RWORK4,STOREPT);        /* STORE THE POINTER             */ 01524000
         EX  RWORK4,STOREPT                                             01525000
*   IXSHEP->IBFLPF=AMDKEYLN;        /* SET F FIELD TO KEY SIZE       */ 01526000
         L     @10,AMBIWA(,RAMB)                                   0564 01527000
         L     @10,ICWCHN(,@10)                                    0564 01528000
         L     @10,IMWIXSP(,@10)                                   0564 01529000
         L     @15,IXSHEP(,@10)                                    0564 01530000
         L     @14,AMBDSB(,RAMB)                                   0564 01531000
         LH    @00,AMDKEYLN(,@14)                                  0564 01532000
         STC   @00,IBFLPF(,@15)                                    0564 01533000
*   IXSHEP->IBFLPL=ZERO;            /* SET L FIELD TO ZERO           */ 01534000
         MVI   IBFLPL(@15),X'00'                                   0565 01535000
*   RWORK1->IXHLEO=RWORK1->IXHLEO-  /* ADJUST OFFSET TO              */ 01536000
*       RWORK1->IXHFLPLN;           /* LAST ENTRY                    */ 01537000
         SLR   @14,@14                                             0566 01538000
         IC    @14,IXHFLPLN(,RWORK1)                               0566 01539000
         LH    @00,IXHLEO(,RWORK1)                                 0566 01540000
         SLR   @00,@14                                             0566 01541000
         STH   @00,IXHLEO(,RWORK1)                                 0566 01542000
*   IXSSEP=IXSSEP-RWORK1->IXHFLPLN; /* MOVE SECTION POINTER          */ 01543000
         L     @00,IXSSEP(,@10)                                    0567 01544000
         SLR   @00,@14                                             0567 01545000
         ST    @00,IXSSEP(,@10)                                    0567 01546000
*   IF IXSHEP^<RWORK1+RWORK1->IXHSEO THEN/* IS POSITION IN FIRST   0568 01547000
*                                      SECTION                       */ 01548000
         LH    @10,IXHSEO(,RWORK1)                                 0568 01549000
         LR    @00,RWORK1                                          0568 01550000
         ALR   @00,@10                                             0568 01551000
         CR    @15,@00                                             0568 01552000
         BL    @RF00568                                            0568 01553000
*     RWORK1->IXHSEO=RWORK1->IXHSEO-/* YES, ADJUST OFFSET TO         */ 01554000
*         RWORK1->IXHFLPLN;         /* FIRST SECTION                 */ 01555000
         SLR   @10,@14                                             0569 01556000
         STH   @10,IXHSEO(,RWORK1)                                 0569 01557000
*   ELSE                            /* NOT IN 1ST SECTION            */ 01558000
*     DO;                           /*                               */ 01559000
         B     @RC00568                                            0570 01560000
@RF00568 DS    0H                                                  0571 01561000
*       RWORK2=IXSLEP+RWORK1->IXHFLPLN;/* POINT TO LL FIELD OF     0571 01562000
*                                      PREVIOUS SECTION              */ 01563000
         L     @10,AMBIWA(,RAMB)                                   0571 01564000
         L     @10,ICWCHN(,@10)                                    0571 01565000
         L     @10,IMWIXSP(,@10)                                   0571 01566000
         SLR   @15,@15                                             0571 01567000
         IC    @15,IXHFLPLN(,RWORK1)                               0571 01568000
         L     RWORK2,IXSLEP(,@10)                                 0571 01569000
         ALR   RWORK2,@15                                          0571 01570000
*       RWORK2->IXSELL=RWORK2->IXSELL+/* INCREASE LL FIELD BY        */ 01571000
*           RWORK1->IXHFLPLN;       /* AMOUNT MOVED                  */ 01572000
         SLR   @10,@10                                             0572 01573000
         ICM   @10,3,IXSELL(RWORK2)                                0572 01574000
         ALR   @15,@10                                             0572 01575000
         STCM  @15,3,IXSELL(RWORK2)                                0572 01576000
*     END;                          /*                               */ 01577000
*   RFY                                                            0574 01578000
*    (RWORK2,                                                      0574 01579000
*     RWORK3,                                                      0574 01580000
*     RWORK4,                                                      0574 01581000
*     RWORK5) UNRSTD;               /*                               */ 01582000
@RC00568 DS    0H                                                  0575 01583000
*   IF PLHISPLP->IXSHEP^>IXSHEP THEN/* IS BUFF MGR HEP TO LEFT OF  0575 01584000
*                                      CURRENT POSITION              */ 01585000
         L     @10,PLHISPLP(,RPLH)                                 0575 01586000
         L     @15,IXSHEP(,@10)                                    0575 01587000
         L     @14,AMBIWA(,RAMB)                                   0575 01588000
         L     @14,ICWCHN(,@14)                                    0575 01589000
         L     @14,IMWIXSP(,@14)                                   0575 01590000
         C     @15,IXSHEP(,@14)                                    0575 01591000
         BH    @RF00575                                            0575 01592000
*     PLHISPLP->IXSHEP=PLHISPLP->IXSHEP/* YES, MODIFY IT             */ 01593000
*         -RWORK1->IXHFLPLN;        /*                               */ 01594000
         SLR   @00,@00                                             0576 01595000
         IC    @00,IXHFLPLN(,RWORK1)                               0576 01596000
         SLR   @15,@00                                             0576 01597000
         ST    @15,IXSHEP(,@10)                                    0576 01598000
*   IF PLHISPLP->IXSSEP^>IXSHEP THEN/* IS BUFF MGR SEP TO LEFT OF  0577 01599000
*                                      CURRENT POSITION              */ 01600000
@RF00575 L     @10,PLHISPLP(,RPLH)                                 0577 01601000
         L     @15,IXSSEP(,@10)                                    0577 01602000
         L     @14,AMBIWA(,RAMB)                                   0577 01603000
         L     @14,ICWCHN(,@14)                                    0577 01604000
         L     @14,IMWIXSP(,@14)                                   0577 01605000
         C     @15,IXSHEP(,@14)                                    0577 01606000
         BH    @RF00577                                            0577 01607000
*     PLHISPLP->IXSSEP=PLHISPLP->IXSSEP/* YES, MODIFY IT             */ 01608000
*         -RWORK1->IXHFLPLN;        /*                               */ 01609000
         SLR   @00,@00                                             0578 01610000
         IC    @00,IXHFLPLN(,RWORK1)                               0578 01611000
         SLR   @15,@00                                             0578 01612000
         ST    @15,IXSSEP(,@10)                                    0578 01613000
*   IF PLHISPLP->IXSLEP<IXSHEP THEN /* IS BUFF MGR LEP TO LEFT OF  0579 01614000
*                                      CURRENT POSITION              */ 01615000
@RF00577 L     @10,PLHISPLP(,RPLH)                                 0579 01616000
         L     @15,IXSLEP(,@10)                                    0579 01617000
         L     @14,AMBIWA(,RAMB)                                   0579 01618000
         L     @14,ICWCHN(,@14)                                    0579 01619000
         L     @14,IMWIXSP(,@14)                                   0579 01620000
         C     @15,IXSHEP(,@14)                                    0579 01621000
         BNL   @RF00579                                            0579 01622000
*     PLHISPLP->IXSLEP=PLHISPLP->IXSLEP/* YES, MODIFY IT             */ 01623000
*         -RWORK1->IXHFLPLN;        /*                               */ 01624000
         SLR   @00,@00                                             0580 01625000
         IC    @00,IXHFLPLN(,RWORK1)                               0580 01626000
         SLR   @15,@00                                             0580 01627000
         ST    @15,IXSLEP(,@10)                                    0580 01628000
*   IXSHEP=IXSHEP-RWORK1->IXHFLPLN; /* MOVE CURRENT POINTER          */ 01629000
@RF00579 L     @10,AMBIWA(,RAMB)                                   0581 01630000
         L     @10,ICWCHN(,@10)                                    0581 01631000
         L     @10,IMWIXSP(,@10)                                   0581 01632000
         L     @00,IXSHEP(,@10)                                    0581 01633000
         SLR   @15,@15                                             0581 01634000
         IC    @15,IXHFLPLN(,RWORK1)                               0581 01635000
         SLR   @00,@15                                             0581 01636000
         ST    @00,IXSHEP(,@10)                                    0581 01637000
*   RFY                                                            0582 01638000
*     RWORK1 UNRSTD;                /*                               */ 01639000
*   CALL EXIT;                      /* RETURN                        */ 01640000
         BAL   @14,EXIT                                            0583 01641000
*                                                                  0584 01642000
*   /*****************************************************************/ 01643000
*   /*                                                               */ 01644000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01645000
*   /* DELSEG SUBROUTINE FUNCTION: MODIFIES A SEQUENCE SET RECORD AS */ 01646000
*   /* FOLLOWS- 1) THE POINTER FIELD FROM THE INDEX ENTRY IDENTIFIED */ 01647000
*   /* BY IXSHEP (PARM LIST FROM IMWA) IS PLACED INTO THE FREE LIST. */ 01648000
*   /* 2) THE F FIELD, L FIELD, AND KEY FIELD OF THE ENTRY IDENTIFIED*/ 01649000
*   /* BY IXSHEP PLUS ALL ENTRYS TO THE LEFT OF IT ARE MOVED RIGHT.  */ 01650000
*   /* THE DISTANCE MOVED IS EQUAL TO THE SUM OF THE LENGTHS OF F, L,*/ 01651000
*   /* AND POINTER FIELDS. 3) IF REQUIRED, ADJUSTMENT IS MADE TO THE */ 01652000
*   /* PRECEEDING SECTION ENTRY LL FIELD. 4) HEADER OFFSETS ARE      */ 01653000
*   /* ADJUSTED AS REQUIRED. 5) IXSHEP, IXSSEP, AND IXSLEP FIELDS    */ 01654000
*   /* (PARM LIST FROM PLH) ARE ADJUSTED AS REQUIRED. 6) IXSHEP (PARM*/ 01655000
*   /* LIST FROM IMWA) IS MODIFIED SO AS TO POINT TO THE SAME ENTRY  */ 01656000
*   /* AS ON ENTRY. NOTE THAT THIS ENTRY WILL HAVE A DIFFERENT       */ 01657000
*   /* POINTER FIELD AFTER THE MOVE. * * * * * * * * * * * * * * * * */ 01658000
*   /* * * * * * * * * * * * * * * *                                 */ 01659000
*   /*                                                               */ 01660000
*   /*****************************************************************/ 01661000
*                                                                  0584 01662000
*DELSEG:                                                           0584 01663000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01664000
         B     @PB00002                                            0584 01665000
DELSEG   DS    0H                                                  0585 01666000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01667000
         IDASVR14                                                       01668000
*   RFY                                                            0586 01669000
*    (RWORK0,                                                      0586 01670000
*     RWORK1,                                                      0586 01671000
*     RWORK2,                                                      0586 01672000
*     RWORK3,                                                      0586 01673000
*     RWORK4,                                                      0586 01674000
*     RWORK5) RSTD;                                                0586 01675000
*   RWORK1=PLHIBUFC->BUFCBAD;       /* POINT TO START OF BUFF        */ 01676000
         L     @10,PLHIBUFC(,RPLH)                                 0587 01677000
         L     RWORK1,BUFCBAD(,@10)                                0587 01678000
*   RWORK0=RWORK1->IXHFLPLN;        /* GET OFFSET                    */ 01679000
         SLR   RWORK0,RWORK0                                       0588 01680000
         IC    RWORK0,IXHFLPLN(,RWORK1)                            0588 01681000
*   RWORK1=RWORK1+RWORK1->IXHLEO;   /* POINT TO LAST ENTRY           */ 01682000
         AH    RWORK1,IXHLEO(,RWORK1)                              0589 01683000
*   RWORK1=RWORK1-(RWORK1->IBFLPL)- /* POINT TO LAST BYTE OF         */ 01684000
*       LENGTH(IXSELL);             /* INDEX ENTRYS                  */ 01685000
         LA    @10,2                                               0590 01686000
         LR    @15,RWORK1                                          0590 01687000
         SLR   @14,@14                                             0590 01688000
         IC    @14,IBFLPL(,RWORK1)                                 0590 01689000
         SLR   @15,@14                                             0590 01690000
         SLR   @15,@10                                             0590 01691000
         LR    RWORK1,@15                                          0590 01692000
*   RWORK4=IXSHEP+LENGTH(IBFLPF)+   /* SET INITIAL 'FROM'            */ 01693000
*       LENGTH(IBFLPL)-RWORK0;      /* POSITION FOR MVCL             */ 01694000
         L     @15,AMBIWA(,RAMB)                                   0591 01695000
         L     @15,ICWCHN(,@15)                                    0591 01696000
         L     @15,IMWIXSP(,@15)                                   0591 01697000
         AL    @10,IXSHEP(,@15)                                    0591 01698000
         SLR   @10,RWORK0                                          0591 01699000
         LR    RWORK4,@10                                          0591 01700000
*   DO WHILE RWORK4^<RWORK1;        /* LOOP WILL MOVE BLOCK IN     0592 01701000
*                                      SECTIONS = F+L+PTR            */ 01702000
         B     @DE00592                                            0592 01703000
@DL00592 DS    0H                                                  0593 01704000
*     RWORK2=RWORK4+RWORK0;         /* SET INITIAL 'TO' POSITION FOR    01705000
*                                      MVCL INSTRUCTION              */ 01706000
         LR    RWORK2,RWORK4                                       0593 01707000
         ALR   RWORK2,RWORK0                                       0593 01708000
*     RWORK3=RWORK0;                /* SET MOVE LENGTH               */ 01709000
         LR    RWORK3,RWORK0                                       0594 01710000
*     RWORK5=RWORK0;                /* DITTO                         */ 01711000
         LR    RWORK5,RWORK0                                       0595 01712000
*     GEN(MVCL  RWORK2,RWORK4);     /* MOVE A BLOCK                  */ 01713000
         MVCL  RWORK2,RWORK4                                            01714000
*     RWORK4=RWORK4-(TWO*RWORK0);   /* SET NEW 'FROM' ADDRESS        */ 01715000
         LR    @10,RWORK0                                          0597 01716000
         ALR   @10,@10                                             0597 01717000
         SLR   RWORK4,@10                                          0597 01718000
*   END;                            /*                               */ 01719000
@DE00592 CR    RWORK4,RWORK1                                       0598 01720000
         BNL   @DL00592                                            0598 01721000
*   RWORK3=RWORK1-RWORK4;           /* DETERMINE RESIDUE             */ 01722000
         LR    RWORK3,RWORK1                                       0599 01723000
         SLR   RWORK3,RWORK4                                       0599 01724000
*   IF RWORK3^=RWORK0 THEN          /* IS RESIDUE SAME AS MOVE     0600 01725000
*                                      INCREMENT                     */ 01726000
         CLR   RWORK3,RWORK0                                       0600 01727000
         BE    @RF00600                                            0600 01728000
*     DO;                           /* NO, THERE IS RESIDUE          */ 01729000
*       RWORK4=RWORK4+RWORK3;       /* SET NEW 'FROM' POINT          */ 01730000
         ALR   RWORK4,RWORK3                                       0602 01731000
*       RWORK2=RWORK4+RWORK0;       /* SET 'TO' POSITION             */ 01732000
         LR    RWORK2,RWORK4                                       0603 01733000
         ALR   RWORK2,RWORK0                                       0603 01734000
*       RWORK5=RWORK0-RWORK3;       /* DETERMINE RESIDUE LEN.        */ 01735000
         LR    RWORK5,RWORK0                                       0604 01736000
         SLR   RWORK5,RWORK3                                       0604 01737000
*       RWORK3=RWORK5;              /*                               */ 01738000
         LR    RWORK3,RWORK5                                       0605 01739000
*       GEN(MVCL  RWORK2,RWORK4);   /* MOVE RESIDUE                  */ 01740000
         MVCL  RWORK2,RWORK4                                            01741000
*     END;                          /*                               */ 01742000
*   RWORK2=RWORK1;                  /* POINT TO OLD LEFT END OF INDEX*/ 01743000
@RF00600 LR    RWORK2,RWORK1                                       0608 01744000
*   RWORK3=RWORK0;                  /* SET CLEAR LENGTH              */ 01745000
         LR    RWORK3,RWORK0                                       0609 01746000
*   GEN(MVCL  RWORK2,RWORK4);       /* CLEAR REMAINS OF INDEX        */ 01747000
         MVCL  RWORK2,RWORK4                                            01748000
*   RESPECIFY                                                      0611 01749000
*    (RWORK4,                                                      0611 01750000
*     RWORK5) UNRSTD;               /*                               */ 01751000
*   RWORK1=PLHIBUFC->BUFCBAD;       /* POINT TO BUFFER               */ 01752000
         L     @10,PLHIBUFC(,RPLH)                                 0612 01753000
         L     RWORK1,BUFCBAD(,@10)                                0612 01754000
*   RWORK1->IXHLEO=RWORK1->IXHLEO+  /* ADJUST LAST ENTRY             */ 01755000
*       RWORK0;                     /* OFFSET IN HEADER              */ 01756000
         LR    @10,RWORK0                                          0613 01757000
         LH    @15,IXHLEO(,RWORK1)                                 0613 01758000
         ALR   @10,@15                                             0613 01759000
         STH   @10,IXHLEO(,RWORK1)                                 0613 01760000
*   IXSSEP=IXSSEP+RWORK0;           /* MOVE SECTION POINTER          */ 01761000
         L     @10,AMBIWA(,RAMB)                                   0614 01762000
         L     @10,ICWCHN(,@10)                                    0614 01763000
         L     @10,IMWIXSP(,@10)                                   0614 01764000
         LR    @15,RWORK0                                          0614 01765000
         AL    @15,IXSSEP(,@10)                                    0614 01766000
         ST    @15,IXSSEP(,@10)                                    0614 01767000
*   IF IXSHEP^<RWORK1+RWORK1->IXHSEO THEN/* IS POSITION IN FIRST   0615 01768000
*                                      SECTION                       */ 01769000
         LH    @15,IXHSEO(,RWORK1)                                 0615 01770000
         LR    @14,RWORK1                                          0615 01771000
         ALR   @14,@15                                             0615 01772000
         C     @14,IXSHEP(,@10)                                    0615 01773000
         BH    @RF00615                                            0615 01774000
*     RWORK1->IXHSEO=RWORK1->IXHSEO+/* YES, ADJUST OFFSET TO         */ 01775000
*         RWORK0;                   /* FIRST SECTION                 */ 01776000
         ALR   @15,RWORK0                                          0616 01777000
         STH   @15,IXHSEO(,RWORK1)                                 0616 01778000
*   ELSE                            /* NOT FIRST SECTION             */ 01779000
*     DO;                           /*                               */ 01780000
         B     @RC00615                                            0617 01781000
@RF00615 DS    0H                                                  0618 01782000
*       RWORK2=IXSLEP+RWORK1->IXHFLPLN;/* POINT TO LL FIELD OF     0618 01783000
*                                      PREVIOUS SECTION              */ 01784000
         L     @10,AMBIWA(,RAMB)                                   0618 01785000
         L     @10,ICWCHN(,@10)                                    0618 01786000
         L     @10,IMWIXSP(,@10)                                   0618 01787000
         SLR   RWORK2,RWORK2                                       0618 01788000
         IC    RWORK2,IXHFLPLN(,RWORK1)                            0618 01789000
         AL    RWORK2,IXSLEP(,@10)                                 0618 01790000
*       RWORK2->IXSELL=RWORK2->IXSELL-/* REDUCE LL FIELD BY          */ 01791000
*           RWORK0;                 /* AMOUNT MOVED                  */ 01792000
         SLR   @10,@10                                             0619 01793000
         ICM   @10,3,IXSELL(RWORK2)                                0619 01794000
         SLR   @10,RWORK0                                          0619 01795000
         STCM  @10,3,IXSELL(RWORK2)                                0619 01796000
*     END;                          /*                               */ 01797000
*   RPARM1=IMWIPTR;                 /* GET SAVED POINTER             */ 01798000
@RC00615 L     @10,AMBIWA(,RAMB)                                   0621 01799000
         L     @10,ICWCHN(,@10)                                    0621 01800000
         L     RPARM1,IMWIPTR(,@10)                                0621 01801000
*   RWORK3=RWORK1+RWORK1->IXHFSO;   /* POINT TO FREE SPACE           */ 01802000
         LR    RWORK3,RWORK1                                       0622 01803000
         AH    RWORK3,IXHFSO(,RWORK1)                              0622 01804000
*   RESPECIFY                                                      0623 01805000
*     RWORK4 RSTD;                  /*                               */ 01806000
*   RWORK4=RWORK1->IXHPTLS;         /* GET MASK FROM HEADER          */ 01807000
         SLR   RWORK4,RWORK4                                       0624 01808000
         IC    RWORK4,IXHPTLS(,RWORK1)                             0624 01809000
*   GEN(EX  RWORK4,STOREPT);        /* STORE POINTER IN FREELIST     */ 01810000
         EX  RWORK4,STOREPT                                             01811000
*   RESPECIFY                                                      0626 01812000
*     RWORK4 UNRSTD;                /*                               */ 01813000
*   RWORK1->IXHFSO=RWORK1->IXHFSO+  /* ADJUST POINTER TO             */ 01814000
*       RWORK0-                     /* INDEX FREESPACE               */ 01815000
*       LENGTH(IBFLPL)-             /*                               */ 01816000
*       LENGTH(IBFLPF);             /*                               */ 01817000
         LR    @10,RWORK0                                          0627 01818000
         LH    @15,IXHFSO(,RWORK1)                                 0627 01819000
         ALR   @10,@15                                             0627 01820000
         BCTR  @10,0                                               0627 01821000
         BCTR  @10,0                                               0627 01822000
         STH   @10,IXHFSO(,RWORK1)                                 0627 01823000
*   RFY                                                            0628 01824000
*    (RWORK1,                                                      0628 01825000
*     RWORK2,                                                      0628 01826000
*     RWORK3) UNRSTD;               /*                               */ 01827000
*   IF PLHISPLP->IXSHEP^>IXSHEP THEN/* IS BUFF MGR HEP TO LEFT OF  0629 01828000
*                                      CURRENT POSITION              */ 01829000
         L     @10,PLHISPLP(,RPLH)                                 0629 01830000
         L     @05,IXSHEP(,@10)                                    0629 01831000
         L     @15,AMBIWA(,RAMB)                                   0629 01832000
         L     @15,ICWCHN(,@15)                                    0629 01833000
         L     @15,IMWIXSP(,@15)                                   0629 01834000
         C     @05,IXSHEP(,@15)                                    0629 01835000
         BH    @RF00629                                            0629 01836000
*     PLHISPLP->IXSHEP=PLHISPLP->IXSHEP/* YES, MODIFY IT             */ 01837000
*         +RWORK0;                  /*                               */ 01838000
         ALR   @05,RWORK0                                          0630 01839000
         ST    @05,IXSHEP(,@10)                                    0630 01840000
*   IF PLHISPLP->IXSSEP^>IXSHEP THEN/* IS BUFF MGR SEP TO LEFT OF  0631 01841000
*                                      CURRENT POSITION              */ 01842000
@RF00629 L     @10,PLHISPLP(,RPLH)                                 0631 01843000
         L     @05,IXSSEP(,@10)                                    0631 01844000
         L     @15,AMBIWA(,RAMB)                                   0631 01845000
         L     @15,ICWCHN(,@15)                                    0631 01846000
         L     @15,IMWIXSP(,@15)                                   0631 01847000
         C     @05,IXSHEP(,@15)                                    0631 01848000
         BH    @RF00631                                            0631 01849000
*     PLHISPLP->IXSSEP=PLHISPLP->IXSSEP/* YES, MODIFY IT             */ 01850000
*         +RWORK0;                  /*                               */ 01851000
         ALR   @05,RWORK0                                          0632 01852000
         ST    @05,IXSSEP(,@10)                                    0632 01853000
*   IF PLHISPLP->IXSLEP^>IXSHEP THEN/* IS BUFF MGR LEP TO LEFT OF  0633 01854000
*                                      CURRENT POSITION              */ 01855000
@RF00631 L     @10,PLHISPLP(,RPLH)                                 0633 01856000
         L     @05,IXSLEP(,@10)                                    0633 01857000
         L     @15,AMBIWA(,RAMB)                                   0633 01858000
         L     @15,ICWCHN(,@15)                                    0633 01859000
         L     @15,IMWIXSP(,@15)                                   0633 01860000
         C     @05,IXSHEP(,@15)                                    0633 01861000
         BH    @RF00633                                            0633 01862000
*     PLHISPLP->IXSLEP=PLHISPLP->IXSLEP/* YES, MODIFY IT             */ 01863000
*         +RWORK0;                  /*                               */ 01864000
         ALR   @05,RWORK0                                          0634 01865000
         ST    @05,IXSLEP(,@10)                                    0634 01866000
*   IXSHEP=IXSHEP+RWORK0;           /* MOVE CURRENT POINTER          */ 01867000
@RF00633 L     @10,AMBIWA(,RAMB)                                   0635 01868000
         L     @10,ICWCHN(,@10)                                    0635 01869000
         L     @10,IMWIXSP(,@10)                                   0635 01870000
         LR    @05,RWORK0                                          0635 01871000
         AL    @05,IXSHEP(,@10)                                    0635 01872000
         ST    @05,IXSHEP(,@10)                                    0635 01873000
*   RESPECIFY                                                      0636 01874000
*     RWORK0 UNRSTD;                /*                               */ 01875000
*   CALL EXIT;                      /* RETURN                        */ 01876000
         BAL   @14,EXIT                                            0637 01877000
*   END DELSEG;                     /*                               */ 01878000
@EL00002 DS    0H                                                  0638 01879000
@EF00002 DS    0H                                                  0638 01880000
@ER00002 BR    @14                                                 0638 01881000
*                                                                  0639 01882000
*   /*****************************************************************/ 01883000
*   /*                                                               */ 01884000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01885000
*   /* CLEARSEG SUBROUTINE FUNCTION: GETS A BUFFER FROM BUFFER MGR., */ 01886000
*   /* CLEARS IT TO ZEROS, AND BUILDS A CIDF INDICATING THE EMPTY    */ 01887000
*   /* STATE. SINCE I/O MAY HAVE BEEN EXERCISED IN PROVIDING THE     */ 01888000
*   /* BUFFER, A TEST FOR ERRORS IS MADE. RETURN IS TO THE CALLERS   */ 01889000
*   /* CALLER IN CASE OF AN I/O ERROR. * * * * * * * * * * * * * * * */ 01890000
*   /* * * * * * * * * * * * * * * * *                               */ 01891000
*   /*                                                               */ 01892000
*   /*****************************************************************/ 01893000
*                                                                  0639 01894000
*CLEARSEG:                                                         0639 01895000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01896000
CLEARSEG DS    0H                                                  0640 01897000
*   RFY                                                            0640 01898000
*    (RWORK0,                                                      0640 01899000
*     RWORK2,                                                      0640 01900000
*     RWORK3,                                                      0640 01901000
*     RWORK5) RSTD;                 /*                               */ 01902000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01903000
         IDASVR14                                                       01904000
*I20:                                                              0642 01905000
*   DO;                             /* IDACALL(IDAGWSEG)             */ 01906000
I20      DS    0H                                                  0643 01907000
*     CALL IDAGWSEG;                /* EXIT TO IDAGWSEG              */ 01908000
         L     @15,@CV00920                                        0643 01909000
         BALR  @14,@15                                             0643 01910000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01911000
         BALR @11,0                                                     01912000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01913000
         USING *,@11                                                    01914000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01915000
         L     @11,=A(@PSTART)                                          01916000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01917000
         USING @PSTART,@11                                              01918000
*   END I20;                        /* GET A BUFFER FROM BUFFER    0648 01919000
*                                      MANAGER                       */ 01920000
*   IF RPLERREG^=ZERO THEN          /* ERROR ENCOUNTERED             */ 01921000
         CLI   RPLERREG(RRPL),0                                    0649 01922000
         BE    @RF00649                                            0649 01923000
*     DO;                           /* YES                           */ 01924000
*       DIWATV=ZERO;                /* FREE WORK AREA                */ 01925000
         L     @10,AMBIWA(,RAMB)                                   0651 01926000
         MVI   DIWATV(@10),X'00'                                   0651 01927000
*       GEN(IDARST14);              /* POINT TO CALLER               */ 01928000
         IDARST14                                                       01929000
*       CALL EXIT;                  /* RETURN TO ROUTINE WHICH CALLED   01930000
*                                      THE CALLER                    */ 01931000
         BAL   @14,EXIT                                            0653 01932000
*     END;                          /*                               */ 01933000
*   RWORK2=BUFCBAD;                 /* POINT TO BUFFER               */ 01934000
@RF00649 L     RWORK2,BUFCBAD(,RBUFC)                              0655 01935000
*   RWORK0=AMDCINV;                 /* GET CI LENGTH                 */ 01936000
         L     @10,AMBDSB(,RAMB)                                   0656 01937000
         L     RWORK0,AMDCINV(,@10)                                0656 01938000
*   RWORK3=RWORK0;                  /*                               */ 01939000
         LR    RWORK3,RWORK0                                       0657 01940000
*   RWORK5=ZERO;                    /* SET PROPAGATION BYTE          */ 01941000
         SLR   RWORK5,RWORK5                                       0658 01942000
*   GEN(MVCL  RWORK2,RWORK4);       /* CLEAR THE BUFFER              */ 01943000
         MVCL  RWORK2,RWORK4                                            01944000
*   RWORK2=RWORK2-LENGTH(IDACIDF);  /* POINT TO CIDF                 */ 01945000
         LA    @10,4                                               0660 01946000
         SLR   RWORK2,@10                                          0660 01947000
*   RWORK2->CIDFLL=RWORK0-LENGTH(IDACIDF);/* SET FREESPACE LENGTH IN    01948000
*                                      CIDF                          */ 01949000
         LCR   @10,@10                                             0661 01950000
         ALR   @10,RWORK0                                          0661 01951000
         STH   @10,CIDFLL(,RWORK2)                                 0661 01952000
*   BUFXORBA=RPLDDDD;               /* SET EXCLUSIVE CONTROL FIELD IN   01953000
*                                      BUFC                          */ 01954000
         L     @10,RPLDDDD(,RRPL)                                  0662 01955000
         ST    @10,BUFXORBA(,RBUFC)                                0662 01956000
*   BUFCMW=ON;                      /* MARK FOR WRITING              */ 01957000
         OI    BUFCMW(RBUFC),B'10000000'                           0663 01958000
*   CALL EXIT;                      /* RETURN                        */ 01959000
         BAL   @14,EXIT                                            0664 01960000
*   END CLEARSEG;                   /*                               */ 01961000
@EL00003 DS    0H                                                  0665 01962000
@EF00003 DS    0H                                                  0665 01963000
@ER00003 BR    @14                                                 0665 01964000
*                                                                  0666 01965000
*   /*****************************************************************/ 01966000
*   /*                                                               */ 01967000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01968000
*   /* EXIT SUBROUTINE FUNCTION: RESTORES REGISTER 14 FROM THE       */ 01969000
*   /* PLACEHOLDER PUSH DOWN LIST AND RETURNS. * * * * * * * * * * * */ 01970000
*   /* * * * * * * * * * * * * * * * * * * * *                       */ 01971000
*   /*                                                               */ 01972000
*   /*****************************************************************/ 01973000
*                                                                  0666 01974000
*EXIT:                                                             0666 01975000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01976000
EXIT     DS    0H                                                  0667 01977000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14           */ 01978000
         IDARST14                                                       01979000
*   END EXIT;                       /* RETURN                        */ 01980000
@EL00004 DS    0H                                                  0668 01981000
@EF00004 DS    0H                                                  0668 01982000
@ER00004 BR    @14                                                 0668 01983000
@PB00004 DS    0H                                                  0669 01984000
*   GEN;                                                           0669 01985000
PICKPT   ICM   RPARM1,@00,@00(RWORK3)      /* EXTRACTS POINTER       */ 01986000
STOREPT  STCM  RPARM1,@00,@00(RWORK3)      /* STORES POINTER         */ 01987000
*   GEN(IDAPATCH);                  /* PATCH SPACE                   */ 01988000
         IDAPATCH                                                       01989000
*   END IDA019RS                    /* MODULE END                    */ 01990000
*                                                                  0671 01991000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01992000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01993000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01994000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01995000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01996000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01997000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01998000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01999000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02000000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02001000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02002000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02003000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 02004000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 02005000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02006000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02007000
*                                                                  0671 02008000
*       ;                                                          0671 02009000
@EL00001 DS    0H                                                  0671 02010000
@EF00001 DS    0H                                                  0671 02011000
@ER00001 BR    @14                                                 0671 02012000
@DATA    DS    0H                                                       02013000
@DATD    DSECT                                                          02014000
         DS    0F                                                       02015000
IDA019RS CSECT                                                          02016000
         DS    0F                                                       02017000
@CF00053 DC    F'1'                                                     02018000
@CH00053 EQU   @CF00053+2                                               02019000
@CF00146 DC    F'2'                                                     02020000
@CF00159 DC    F'3'                                                     02021000
@CF00226 DC    F'10'                                                    02022000
@CF00083 DC    F'24'                                                    02023000
@CF01026 DC    XL4'0000FFFF'                                            02024000
@DATD    DSECT                                                          02025000
         DS    0D                                                       02026000
IDA019RS CSECT                                                          02027000
         DS    0F                                                       02028000
@SIZDATD DC    AL1(0)                                                   02029000
         DC    AL3(@ENDDATD-@DATD)                                      02030000
@CA00980 DC    A(IDAMVSEG)                                              02031000
@CA00995 DC    A(IDAADSEG)                                              02032000
@CV00919 DC    V(IDADRQ)                                                02033000
@CV00920 DC    V(IDAGWSEG)                                              02034000
@CV00921 DC    V(IDAIVIXB)                                              02035000
@CV00922 DC    V(IDAJRNSR)                                              02036000
@CV00923 DC    V(IDASBF)                                                02037000
@CV00924 DC    V(IDAREPOS)                                              02038000
@CV00925 DC    V(IDAWRBFR)                                              02039000
@CV00926 DC    V(IDA019RC)                                              02040000
@CV00927 DC    V(IDA019RF)                                              02041000
@CV00928 DC    V(IDAGRB)                                                02042000
@CV00929 DC    V(IDACHKKR)                                              02043000
@CV00958 DC    V(IDAFREEB)                                              02044000
         DS    0D                                                       02045000
HWORD4   DC    H'4'                                                     02046000
@DATD    DSECT                                                          02047000
*                                                          /*@X04SVLC*/ 02048000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02049000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02050000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02051000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02052000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02053000
RDFLEN   EQU   3                        LENGTH OF RDF                   02054000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02055000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02056000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02057000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02058000
@DATD    DSECT                                                          02059000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02060000
@ENDDATD EQU   *                                                        02061000
IDA019RS CSECT                                                          02062000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02063000
@01      EQU   01                                                       02064000
@02      EQU   02                                                       02065000
@03      EQU   03                                                       02066000
@04      EQU   04                                                       02067000
@05      EQU   05                                                       02068000
@06      EQU   06                                                       02069000
@07      EQU   07                                                       02070000
@08      EQU   08                                                       02071000
@09      EQU   09                                                       02072000
@10      EQU   10                                                       02073000
@11      EQU   11                                                       02074000
@12      EQU   12                                                       02075000
@13      EQU   13                                                       02076000
@14      EQU   14                                                       02077000
@15      EQU   15                                                       02078000
RWORK0   EQU   @00                                                      02079000
RRPL     EQU   @01                                                      02080000
RPLH     EQU   @02                                                      02081000
RAMB     EQU   @03                                                      02082000
RBUFC    EQU   @04                                                      02083000
RWORK1   EQU   @05                                                      02084000
RWORK2   EQU   @06                                                      02085000
RWORK3   EQU   @07                                                      02086000
RWORK4   EQU   @08                                                      02087000
RWORK5   EQU   @09                                                      02088000
RPARM1   EQU   @12                                                      02089000
R1       EQU   @01                                                      02090000
R10      EQU   @10                                                      02091000
R11      EQU   @11                                                      02092000
R13      EQU   @13                                                      02093000
R14      EQU   @14                                                      02094000
R15      EQU   @15                                                      02095000
IFGRPL   EQU   0                                                        02096000
RPLCOMN  EQU   IFGRPL                                                   02097000
RPLIDWD  EQU   RPLCOMN                                                  02098000
RPLREQ   EQU   RPLIDWD+2                                                02099000
RPLLEN   EQU   RPLIDWD+3                                                02100000
RPLECB   EQU   RPLCOMN+8                                                02101000
RPLFDBWD EQU   RPLCOMN+12                                               02102000
RPLFDBK  EQU   RPLFDBWD+1                                               02103000
RPLRTNCD EQU   RPLFDBK                                                  02104000
RPLERREG EQU   RPLRTNCD                                                 02105000
RPLCNDCD EQU   RPLFDBK+1                                                02106000
RPLCMPON EQU   RPLCNDCD                                                 02107000
RPLFDB2  EQU   RPLCMPON                                                 02108000
RPLERRCD EQU   RPLCNDCD+1                                               02109000
RPLFDB3  EQU   RPLERRCD                                                 02110000
RPLKEYLE EQU   RPLCOMN+16                                               02111000
RPLDACB  EQU   RPLCOMN+24                                               02112000
RPLAREA  EQU   RPLCOMN+32                                               02113000
RPLARG   EQU   RPLCOMN+36                                               02114000
RPLOPTCD EQU   RPLCOMN+40                                               02115000
RPLOPT1  EQU   RPLOPTCD                                                 02116000
RPLECBSW EQU   RPLOPT1                                                  02117000
RPLOPT2  EQU   RPLOPTCD+1                                               02118000
RPLADR   EQU   RPLOPT2                                                  02119000
RPLOPT3  EQU   RPLOPTCD+2                                               02120000
RPLNXTRP EQU   RPLCOMN+44                                               02121000
RPLRLEN  EQU   RPLCOMN+48                                               02122000
RPLOPTC2 EQU   RPLCOMN+56                                               02123000
RPLOPT5  EQU   RPLOPTC2                                                 02124000
RPLWRTYP EQU   RPLOPT5                                                  02125000
RPLOPT6  EQU   RPLOPTC2+1                                               02126000
RPLUNTYP EQU   RPLOPT6                                                  02127000
RPLOPT7  EQU   RPLOPTC2+2                                               02128000
RPLCNOPT EQU   RPLOPT7                                                  02129000
RPLOPT8  EQU   RPLOPTC2+3                                               02130000
RPLRBAR  EQU   RPLCOMN+60                                               02131000
RPLAIXID EQU   RPLRBAR+2                                                02132000
RPLDDDD  EQU   RPLRBAR+4                                                02133000
RPLEXTDS EQU   RPLCOMN+68                                               02134000
RPLEXTD1 EQU   RPLEXTDS                                                 02135000
IFGACB   EQU   0                                                        02136000
ACBCOMN  EQU   IFGACB                                                   02137000
ACBLENG  EQU   ACBCOMN+2                                                02138000
ACBLENG2 EQU   ACBLENG                                                  02139000
ACBAMBL  EQU   ACBCOMN+4                                                02140000
ACBJWA   EQU   ACBAMBL                                                  02141000
ACBMACRF EQU   ACBCOMN+12                                               02142000
ACBMACR1 EQU   ACBMACRF                                                 02143000
ACBADR   EQU   ACBMACR1                                                 02144000
ACBCNV   EQU   ACBMACR1                                                 02145000
ACBMACR2 EQU   ACBMACRF+1                                               02146000
ACBBUFPL EQU   ACBCOMN+20                                               02147000
ACBMACR3 EQU   ACBBUFPL                                                 02148000
ACBRECFM EQU   ACBCOMN+24                                               02149000
ACBCCTYP EQU   ACBCOMN+25                                               02150000
ACBOPT   EQU   ACBCOMN+26                                               02151000
ACBDSORG EQU   ACBOPT                                                   02152000
ACBCROPS EQU   ACBDSORG                                                 02153000
ACBEXLST EQU   ACBCOMN+36                                               02154000
ACBDDNM  EQU   ACBCOMN+40                                               02155000
ACBAMETH EQU   ACBDDNM+3                                                02156000
ACBOFLGS EQU   ACBCOMN+48                                               02157000
ACBEXFG  EQU   ACBOFLGS                                                 02158000
ACBIOSFG EQU   ACBOFLGS                                                 02159000
ACBINFLG EQU   ACBCOMN+50                                               02160000
ACBUJFCB EQU   ACBCOMN+52                                               02161000
ACBBLKSZ EQU   ACBCOMN+60                                               02162000
IDAAMB   EQU   0                                                        02163000
AMBDSB   EQU   IDAAMB+20                                                02164000
AMBEOVR  EQU   IDAAMB+24                                                02165000
AMBFLG0  EQU   AMBEOVR                                                  02166000
AMBFLG1  EQU   IDAAMB+25                                                02167000
AMBJRN   EQU   AMBFLG1                                                  02168000
AMBDSORG EQU   IDAAMB+26                                                02169000
AMBIOBAD EQU   IDAAMB+28                                                02170000
AMBINFL  EQU   IDAAMB+42                                                02171000
AMBDEBPT EQU   IDAAMB+44                                                02172000
AMBOFLGS EQU   IDAAMB+48                                                02173000
AMBFLG2  EQU   IDAAMB+49                                                02174000
AMBEOVPT EQU   IDAAMB+56                                                02175000
AMBIWA   EQU   IDAAMB+64                                                02176000
AMBCSWD1 EQU   IDAAMB+84                                                02177000
AMBAFLG  EQU   AMBCSWD1                                                 02178000
AMBLSR   EQU   AMBAFLG                                                  02179000
AMBGSR   EQU   AMBAFLG                                                  02180000
IDAAMBL  EQU   0                                                        02181000
AMBLEOV  EQU   IDAAMBL+12                                               02182000
AMBLEFLG EQU   AMBLEOV                                                  02183000
AMBLDDNM EQU   IDAAMBL+16                                               02184000
AMBLIDF  EQU   AMBLDDNM                                                 02185000
AMBLQ    EQU   AMBLIDF+7                                                02186000
AMBLVC   EQU   IDAAMBL+28                                               02187000
AMBLTYPE EQU   IDAAMBL+30                                               02188000
AMBLSHAR EQU   IDAAMBL+33                                               02189000
AMBLFLG1 EQU   IDAAMBL+35                                               02190000
AMBLFLG2 EQU   IDAAMBL+36                                               02191000
AMBLDTA  EQU   IDAAMBL+52                                               02192000
AMBLIX   EQU   IDAAMBL+56                                               02193000
IDAPLHDR EQU   0                                                        02194000
IDAPLH   EQU   0                                                        02195000
PLHFLG1  EQU   IDAPLH+2                                                 02196000
PLHSSR   EQU   PLHFLG1                                                  02197000
PLHFLG2  EQU   IDAPLH+3                                                 02198000
PLHEFLGS EQU   IDAPLH+4                                                 02199000
PLHFLG3  EQU   IDAPLH+6                                                 02200000
PLHAFLGS EQU   IDAPLH+7                                                 02201000
PLHCRBA  EQU   IDAPLH+28                                                02202000
PLHJORBA EQU   PLHCRBA                                                  02203000
PLHJCODE EQU   IDAPLH+40                                                02204000
PLHARDB  EQU   IDAPLH+44                                                02205000
PLHSRSID EQU   IDAPLH+74                                                02206000
PLHDIOB  EQU   IDAPLH+76                                                02207000
PLHSAVE1 EQU   IDAPLH+84                                                02208000
PLHSAVE2 EQU   IDAPLH+88                                                02209000
PLHRETO  EQU   IDAPLH+116                                               02210000
PLHRET1  EQU   IDAPLH+120                                               02211000
PLHEOVPT EQU   IDAPLH+180                                               02212000
PLHIBUFC EQU   IDAPLH+188                                               02213000
PLHISPLP EQU   IDAPLH+196                                               02214000
PLHIXSPL EQU   IDAPLH+200                                               02215000
PLHSSRBA EQU   PLHIXSPL                                                 02216000
PLHWAX   EQU   IDAPLH+232                                               02217000
PLHNOSEG EQU   IDAPLH+240                                               02218000
PLHSRCSG EQU   IDAPLH+242                                               02219000
PLHKEYPT EQU   IDAPLH+248                                               02220000
PLHEND   EQU   IDAPLH+280                                               02221000
PLHKEY   EQU   0                                                        02222000
IDABUFDR EQU   0                                                        02223000
BUFDRCIX EQU   IDABUFDR+9                                               02224000
BUFDRFLG EQU   IDABUFDR+11                                              02225000
IDABUFC  EQU   0                                                        02226000
BUFCAVL  EQU   IDABUFC                                                  02227000
BUFCFLG1 EQU   IDABUFC+1                                                02228000
BUFCSEG  EQU   BUFCFLG1                                                 02229000
BUFCVAL  EQU   BUFCFLG1                                                 02230000
BUFCEXC  EQU   BUFCFLG1                                                 02231000
BUFCIOFL EQU   IDABUFC+2                                                02232000
BUFCMW   EQU   BUFCIOFL                                                 02233000
BUFCRRD  EQU   BUFCIOFL                                                 02234000
BUFCFLG2 EQU   IDABUFC+3                                                02235000
BUFCPLH  EQU   IDABUFC+4                                                02236000
BUFCDDDD EQU   IDABUFC+8                                                02237000
BUFCORBA EQU   IDABUFC+12                                               02238000
BUFCBAD  EQU   IDABUFC+20                                               02239000
BUFCINV  EQU   IDABUFC+28                                               02240000
BUFCNXT2 EQU   IDABUFC+37                                               02241000
BUFXORBA EQU   IDABUFC+44                                               02242000
IDAAMDSB EQU   0                                                        02243000
AMDATTR  EQU   IDAAMDSB+1                                               02244000
AMDDST   EQU   AMDATTR                                                  02245000
AMDRANGE EQU   AMDATTR                                                  02246000
AMDNEST  EQU   IDAAMDSB+4                                               02247000
AMDRKP   EQU   IDAAMDSB+6                                               02248000
AMDKEYLN EQU   IDAAMDSB+8                                               02249000
AMDCINV  EQU   IDAAMDSB+20                                              02250000
AMDHLRBA EQU   IDAAMDSB+28                                              02251000
AMDSSRBA EQU   IDAAMDSB+32                                              02252000
AMDPARDB EQU   IDAAMDSB+36                                              02253000
AMDATTR3 EQU   IDAAMDSB+40                                              02254000
AMDSTAT  EQU   IDAAMDSB+48                                              02255000
IDADIWA  EQU   0                                                        02256000
DIWATV   EQU   IDADIWA+1                                                02257000
DIWFLG1  EQU   IDADIWA+4                                                02258000
DIWFLG2  EQU   IDADIWA+5                                                02259000
DIWPLH   EQU   IDADIWA+16                                               02260000
DIWBUFC  EQU   IDADIWA+20                                               02261000
DIWSAVE  EQU   IDADIWA+28                                               02262000
IDACIDF  EQU   0                                                        02263000
CIDFOSET EQU   IDACIDF                                                  02264000
CIDFLL   EQU   IDACIDF+2                                                02265000
IDAIXH   EQU   0                                                        02266000
IXHFLPLN EQU   IDAIXH+2                                                 02267000
IXHPTLS  EQU   IDAIXH+3                                                 02268000
IXHBRBA  EQU   IDAIXH+4                                                 02269000
IXHFSO   EQU   IDAIXH+18                                                02270000
IXHLEO   EQU   IDAIXH+20                                                02271000
IXHSEO   EQU   IDAIXH+22                                                02272000
IDAIBFLP EQU   0                                                        02273000
IBFLPF   EQU   IDAIBFLP                                                 02274000
IBFLPL   EQU   IDAIBFLP+1                                               02275000
IBFLP3   EQU   IDAIBFLP+2                                               02276000
IBFLP2   EQU   IBFLP3                                                   02277000
IDASELL  EQU   0                                                        02278000
IXSELL   EQU   IDASELL                                                  02279000
IDAIXK   EQU   0                                                        02280000
IDAICWA  EQU   0                                                        02281000
ICWFLG1  EQU   IDAICWA+1                                                02282000
ICWCHN   EQU   IDAICWA+4                                                02283000
IDAIMWA  EQU   0                                                        02284000
IMWFLAGS EQU   IDAIMWA+1                                                02285000
IMWIXSP  EQU   IDAIMWA+4                                                02286000
IMWISWKA EQU   IDAIMWA+8                                                02287000
IMWIPTR  EQU   IDAIMWA+52                                               02288000
IDAIXSPL EQU   0                                                        02289000
IXSILN   EQU   IDAIXSPL+13                                              02290000
IXSNOSR  EQU   IDAIXSPL+16                                              02291000
IXSBFLG  EQU   IDAIXSPL+17                                              02292000
IXSHEP   EQU   IDAIXSPL+20                                              02293000
IXSSEP   EQU   IDAIXSPL+24                                              02294000
IXSLEP   EQU   IDAIXSPL+28                                              02295000
IDARDF   EQU   0                                                        02296000
RDFRBYTE EQU   IDARDF                                                   02297000
RDFCTNU  EQU   RDFRBYTE                                                 02298000
RDFSEG   EQU   RDFRBYTE                                                 02299000
RDFNOT1  EQU   RDFSEG                                                   02300000
RDF1ST   EQU   RDFSEG                                                   02301000
RDFREPL  EQU   RDFRBYTE                                                 02302000
RDFLL    EQU   IDARDF+1                                                 02303000
IDADATA  EQU   0                                                        02304000
IDAKEY   EQU   0                                                        02305000
ICWKEY2  EQU   0                                                        02306000
ICWKEY3  EQU   0                                                        02307000
PLHPDL   EQU   0                                                        02308000
PLHPDLE  EQU   0                                                        02309000
PLHRRN   EQU   0                                                        02310000
PLHEXTEN EQU   PLHEND                                                   02311000
PLHBMWRK EQU   PLHEXTEN+5                                               02312000
BUFCRSC1 EQU   BUFCAVL                                                  02313000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02314000
PLHBMSV5 EQU   PLHEXTEN+24                                              02315000
PLHBMSV4 EQU   PLHEXTEN+20                                              02316000
PLHBMSV3 EQU   PLHEXTEN+16                                              02317000
PLHBMSV2 EQU   PLHEXTEN+12                                              02318000
PLHBMSV1 EQU   PLHEXTEN+8                                               02319000
PLHRDCNT EQU   PLHEXTEN+6                                               02320000
PLHBMSOV EQU   PLHBMWRK                                                 02321000
PLHBEUC  EQU   PLHBMWRK                                                 02322000
PLHBMRDF EQU   PLHBMWRK                                                 02323000
@NM00040 EQU   PLHEXTEN+4                                               02324000
PLHRESR1 EQU   PLHEXTEN                                                 02325000
KEY      EQU   IDAKEY                                                   02326000
AMDATA   EQU   IDADATA                                                  02327000
RDFEMPTY EQU   RDFRBYTE                                                 02328000
RDFTYPE  EQU   RDFRBYTE                                                 02329000
IXSPEC   EQU   IDAIXSPL+19                                              02330000
IXSEKON  EQU   IDAIXSPL+18                                              02331000
@NM00060 EQU   IXSBFLG                                                  02332000
IXSLELV  EQU   IXSBFLG                                                  02333000
IXSSSRH  EQU   IXSBFLG                                                  02334000
IXSKLEN  EQU   IDAIXSPL+14                                              02335000
IXSTLN   EQU   IDAIXSPL+12                                              02336000
IXSARG   EQU   IDAIXSPL+8                                               02337000
IXSBUFC  EQU   IDAIXSPL+4                                               02338000
IXSSTRBA EQU   IDAIXSPL                                                 02339000
IMWKEY1  EQU   IDAIMWA+76                                               02340000
@NM00059 EQU   IDAIMWA+72                                               02341000
IMWNSOFF EQU   IDAIMWA+70                                               02342000
IMWCIMVN EQU   IDAIMWA+68                                               02343000
@NM00058 EQU   IDAIMWA+67                                               02344000
IMWSVIEL EQU   IDAIMWA+66                                               02345000
IMWIEL   EQU   IDAIMWA+65                                               02346000
IMWFGAIN EQU   IDAIMWA+64                                               02347000
IMWBUFP  EQU   IDAIMWA+60                                               02348000
IMWLBUFC EQU   IDAIMWA+56                                               02349000
IMWXPTR  EQU   IDAIMWA+48                                               02350000
IMWIKEYP EQU   IDAIMWA+44                                               02351000
IMWXKEYP EQU   IDAIMWA+40                                               02352000
IMWLEN   EQU   IDAIMWA+2                                                02353000
IMWBSE   EQU   IMWFLAGS                                                 02354000
IMWRIPL  EQU   IMWFLAGS                                                 02355000
IMWNEWHL EQU   IMWFLAGS                                                 02356000
IMWID    EQU   IDAIMWA                                                  02357000
ICWKEY1  EQU   IDAICWA+60                                               02358000
ICWCERP  EQU   IDAICWA+59                                               02359000
ICWCEL   EQU   IDAICWA+58                                               02360000
ICWCEF   EQU   IDAICWA+57                                               02361000
ICWCER   EQU   IDAICWA+56                                               02362000
ICWPTL   EQU   IDAICWA+55                                               02363000
ICWREQ   EQU   IDAICWA+54                                               02364000
ICWCRSEG EQU   IDAICWA+52                                               02365000
ICWNOSEG EQU   IDAICWA+50                                               02366000
ICWNEST  EQU   IDAICWA+48                                               02367000
ICWKEY3L EQU   IDAICWA+46                                               02368000
ICWKEY2L EQU   IDAICWA+44                                               02369000
ICWKEY1L EQU   IDAICWA+42                                               02370000
ICWLN    EQU   IDAICWA+40                                               02371000
ICWARDBP EQU   IDAICWA+36                                               02372000
ICWTPTR  EQU   IDAICWA+32                                               02373000
ICWTBASE EQU   IDAICWA+28                                               02374000
ICWADD   EQU   IDAICWA+24                                               02375000
ICWSCNT  EQU   IDAICWA+22                                               02376000
ICWPSEO  EQU   IDAICWA+20                                               02377000
ICWPRBA  EQU   IDAICWA+16                                               02378000
ICWCRBA  EQU   IDAICWA+12                                               02379000
ICWBUFC  EQU   IDAICWA+8                                                02380000
ICWLEN   EQU   IDAICWA+2                                                02381000
ICWENDRQ EQU   ICWFLG1                                                  02382000
ICWSPLIT EQU   ICWFLG1                                                  02383000
ICWKRDS  EQU   ICWFLG1                                                  02384000
ICWVNE   EQU   ICWFLG1                                                  02385000
ICWVSE   EQU   ICWFLG1                                                  02386000
ICWRBAOK EQU   ICWFLG1                                                  02387000
ICWWAGM  EQU   ICWFLG1                                                  02388000
ICWWNF   EQU   ICWFLG1                                                  02389000
ICWID    EQU   IDAICWA                                                  02390000
IXKEY    EQU   IDAIXK                                                   02391000
IBFLP1   EQU   IBFLP2                                                   02392000
IXHFLGS  EQU   IDAIXH+17                                                02393000
IXHLV    EQU   IDAIXH+16                                                02394000
IXHXX    EQU   IDAIXH+12                                                02395000
IXHHP    EQU   IDAIXH+8                                                 02396000
IXHLL    EQU   IDAIXH                                                   02397000
@NM00057 EQU   CIDFLL                                                   02398000
CIDFBUSY EQU   CIDFLL                                                   02399000
@NM00056 EQU   IDADIWA+92                                               02400000
@NM00055 EQU   IDADIWA+88                                               02401000
@NM00054 EQU   IDADIWA+84                                               02402000
@NM00053 EQU   IDADIWA+80                                               02403000
@NM00052 EQU   IDADIWA+76                                               02404000
@NM00051 EQU   IDADIWA+72                                               02405000
@NM00050 EQU   IDADIWA+68                                               02406000
@NM00049 EQU   IDADIWA+64                                               02407000
@NM00048 EQU   IDADIWA+60                                               02408000
@NM00047 EQU   IDADIWA+56                                               02409000
DIWINRBA EQU   IDADIWA+52                                               02410000
DIWRKCT  EQU   IDADIWA+48                                               02411000
DIWSAVE5 EQU   DIWSAVE+16                                               02412000
DIWSAVE4 EQU   DIWSAVE+12                                               02413000
DIWSAVE3 EQU   DIWSAVE+8                                                02414000
DIWSAVE2 EQU   DIWSAVE+4                                                02415000
DIWSAVE1 EQU   DIWSAVE                                                  02416000
DIWSPLTP EQU   IDADIWA+24                                               02417000
DIWHRBA  EQU   IDADIWA+12                                               02418000
DIWLRBA  EQU   IDADIWA+8                                                02419000
@NM00046 EQU   IDADIWA+6                                                02420000
DIWFSPF  EQU   DIWFLG2                                                  02421000
DIW1ST   EQU   DIWFLG1                                                  02422000
DIWNOT1  EQU   DIWFLG1                                                  02423000
DIWSHIFT EQU   DIWFLG1                                                  02424000
DIWGSPC  EQU   DIWFLG1                                                  02425000
DIWEOKR  EQU   DIWFLG1                                                  02426000
DIWPFERR EQU   DIWFLG1                                                  02427000
DIWCISPL EQU   DIWFLG1                                                  02428000
DIWCAS   EQU   DIWFLG1                                                  02429000
DIWLEN   EQU   IDADIWA+2                                                02430000
DIWID    EQU   IDADIWA                                                  02431000
AMDEXCP  EQU   AMDSTAT+44                                               02432000
AMDNCAS  EQU   AMDSTAT+40                                               02433000
AMDNCIS  EQU   AMDSTAT+36                                               02434000
AMDASPA  EQU   AMDSTAT+32                                               02435000
AMDRETR  EQU   AMDSTAT+28                                               02436000
AMDUPR   EQU   AMDSTAT+24                                               02437000
AMDIREC  EQU   AMDSTAT+20                                               02438000
AMDDELR  EQU   AMDSTAT+16                                               02439000
AMDNLR   EQU   AMDSTAT+12                                               02440000
AMDNEXT  EQU   AMDSTAT+10                                               02441000
AMDNIL   EQU   AMDSTAT+8                                                02442000
AMDSTSP  EQU   AMDSTAT                                                  02443000
@NM00045 EQU   IDAAMDSB+41                                              02444000
@NM00044 EQU   AMDATTR3                                                 02445000
AMDLM    EQU   AMDATTR3                                                 02446000
AMDWAIT  EQU   AMDATTR3                                                 02447000
AMDBIND  EQU   AMDATTR3                                                 02448000
AMDFAULT EQU   AMDATTR3                                                 02449000
AMDUNQ   EQU   AMDATTR3                                                 02450000
AMDMAXRR EQU   AMDSSRBA                                                 02451000
AMDNSLOT EQU   AMDHLRBA                                                 02452000
AMDLRECL EQU   IDAAMDSB+24                                              02453000
AMDFSCI  EQU   IDAAMDSB+16                                              02454000
AMDFSCA  EQU   IDAAMDSB+14                                              02455000
AMDCIPCA EQU   IDAAMDSB+12                                              02456000
AMDPCTCI EQU   IDAAMDSB+11                                              02457000
AMDPCTCA EQU   IDAAMDSB+10                                              02458000
AMDAXRKP EQU   AMDNEST                                                  02459000
AMDLEN   EQU   IDAAMDSB+2                                               02460000
AMDSPAN  EQU   AMDATTR                                                  02461000
AMDRRDS  EQU   AMDATTR                                                  02462000
AMDORDER EQU   AMDATTR                                                  02463000
AMDREPL  EQU   AMDATTR                                                  02464000
AMDSDT   EQU   AMDATTR                                                  02465000
AMDWCK   EQU   AMDATTR                                                  02466000
AMDSBID  EQU   IDAAMDSB                                                 02467000
BUFCEND  EQU   IDABUFC+64                                               02468000
BUFCUCDN EQU   IDABUFC+60                                               02469000
BUFCUCUP EQU   IDABUFC+56                                               02470000
BUFCMDBT EQU   IDABUFC+52                                               02471000
BUFCHAIN EQU   IDABUFC+48                                               02472000
BUFXIRBA EQU   IDABUFC+40                                               02473000
BUFCIDXL EQU   IDABUFC+36                                               02474000
BUFCDSPC EQU   IDABUFC+32                                               02475000
BUFCWLEN EQU   BUFCINV                                                  02476000
BUFCNXT1 EQU   IDABUFC+24                                               02477000
BUFCCPA  EQU   IDABUFC+16                                               02478000
BUFCAMB  EQU   BUFCPLH                                                  02479000
@NM00043 EQU   BUFCFLG2                                                 02480000
BUFCEOD  EQU   BUFCFLG2                                                 02481000
BUFCBSYW EQU   BUFCFLG2                                                 02482000
BUFCBSYR EQU   BUFCFLG2                                                 02483000
BUFCNLAS EQU   BUFCFLG2                                                 02484000
BUFCXDDR EQU   BUFCFLG2                                                 02485000
BUFCFIX  EQU   BUFCIOFL                                                 02486000
BUFCPFCP EQU   BUFCIOFL                                                 02487000
BUFCXEDB EQU   BUFCIOFL                                                 02488000
BUFCWC   EQU   BUFCIOFL                                                 02489000
BUFCREAL EQU   BUFCIOFL                                                 02490000
BUFCFMT  EQU   BUFCIOFL                                                 02491000
BUFCEPT  EQU   BUFCFLG1                                                 02492000
BUFCER2  EQU   BUFCFLG1                                                 02493000
BUFCER1  EQU   BUFCFLG1                                                 02494000
BUFCINS  EQU   BUFCFLG1                                                 02495000
BUFCUPG  EQU   BUFCFLG1                                                 02496000
BUFCUCNT EQU   BUFCAVL                                                  02497000
@NM00042 EQU   IDABUFDR+16                                              02498000
BUFDBUFC EQU   IDABUFDR+12                                              02499000
@NM00041 EQU   BUFDRFLG                                                 02500000
BUFDRAVL EQU   BUFDRFLG                                                 02501000
BUFDRREL EQU   BUFDRFLG                                                 02502000
BUFDRTSB EQU   IDABUFDR+10                                              02503000
BUFDRMAX EQU   BUFDRCIX                                                 02504000
BUFDRPFN EQU   IDABUFDR+8                                               02505000
BUFDRPFB EQU   IDABUFDR+4                                               02506000
BUFDRLEN EQU   IDABUFDR+2                                               02507000
BUFDRNO  EQU   IDABUFDR+1                                               02508000
BUFDRID  EQU   IDABUFDR                                                 02509000
PLHERRET EQU   IDAPLH+276                                               02510000
PLHASCB  EQU   IDAPLH+272                                               02511000
PLHECB   EQU   IDAPLH+268                                               02512000
@NM00039 EQU   IDAPLH+265                                               02513000
PLHDRMSK EQU   IDAPLH+264                                               02514000
PLHR13   EQU   IDAPLH+260                                               02515000
PLHPARM1 EQU   IDAPLH+256                                               02516000
PLHDRRSC EQU   IDAPLH+252                                               02517000
PLHSLRBA EQU   IDAPLH+244                                               02518000
PLHLLOR  EQU   IDAPLH+236                                               02519000
PLHXPLH  EQU   PLHWAX                                                   02520000
@NM00038 EQU   PLHIXSPL+8                                               02521000
PLHIXBFC EQU   PLHIXSPL+4                                               02522000
PLHHIREC EQU   PLHSSRBA                                                 02523000
PLHRBUFC EQU   IDAPLH+192                                               02524000
PLHNRBA  EQU   IDAPLH+184                                               02525000
PLHDDDD  EQU   PLHEOVPT                                                 02526000
PLHAR14  EQU   IDAPLH+176                                               02527000
@NM00037 EQU   IDAPLH+172                                               02528000
@NM00036 EQU   IDAPLH+168                                               02529000
PLHASAVE EQU   IDAPLH+164                                               02530000
PLHRETOS EQU   IDAPLH+118                                               02531000
PLHCHAIN EQU   IDAPLH+112                                               02532000
PLHAMB   EQU   IDAPLH+108                                               02533000
PLHSAVE6 EQU   IDAPLH+104                                               02534000
PLHSAVE5 EQU   IDAPLH+100                                               02535000
PLHSAVE4 EQU   IDAPLH+96                                                02536000
PLHSAVE3 EQU   IDAPLH+92                                                02537000
PLHARET  EQU   IDAPLH+80                                                02538000
PLHIIOB  EQU   PLHDIOB                                                  02539000
PLHRDFC  EQU   IDAPLH+72                                                02540000
PLHRDFP  EQU   IDAPLH+68                                                02541000
PLHFSP   EQU   IDAPLH+64                                                02542000
PLHRECP  EQU   IDAPLH+60                                                02543000
PLHNBUFC EQU   IDAPLH+56                                                02544000
PLHDBUFC EQU   IDAPLH+52                                                02545000
PLHLRECL EQU   IDAPLH+48                                                02546000
@NM00035 EQU   IDAPLH+43                                                02547000
PLHEOVR  EQU   IDAPLH+42                                                02548000
PLHRCODE EQU   IDAPLH+41                                                02549000
PLHUCODE EQU   PLHJCODE                                                 02550000
PLHJNRBA EQU   IDAPLH+36                                                02551000
PLHJRNLL EQU   IDAPLH+32                                                02552000
PLHUPECB EQU   PLHJORBA                                                 02553000
PLHDSIDA EQU   IDAPLH+24                                                02554000
PLHCRPL  EQU   IDAPLH+20                                                02555000
PLHMRPL  EQU   IDAPLH+16                                                02556000
PLHBFRNO EQU   IDAPLH+15                                                02557000
PLHFRCNT EQU   IDAPLH+14                                                02558000
PLHRMIN  EQU   IDAPLH+13                                                02559000
PLHDSTYP EQU   IDAPLH+12                                                02560000
PLHACB   EQU   IDAPLH+8                                                 02561000
PLHRAE   EQU   PLHAFLGS                                                 02562000
PLHRABWD EQU   PLHAFLGS                                                 02563000
PLHIOSID EQU   PLHAFLGS                                                 02564000
PLHDBDC  EQU   PLHAFLGS                                                 02565000
PLHVAMB  EQU   PLHAFLGS                                                 02566000
PLHIOSRQ EQU   PLHAFLGS                                                 02567000
PLHDRLM  EQU   PLHAFLGS                                                 02568000
PLHEOVDF EQU   PLHFLG3                                                  02569000
PLHRVRS  EQU   PLHFLG3                                                  02570000
PLHBWD   EQU   PLHFLG3                                                  02571000
PLHSLVLD EQU   PLHFLG3                                                  02572000
PLHRAHD  EQU   PLHFLG3                                                  02573000
PLHSRBSG EQU   PLHFLG3                                                  02574000
@NM00034 EQU   PLHEFLGS+1                                               02575000
PLHRSTRT EQU   PLHEFLGS+1                                               02576000
PLHDSCAN EQU   PLHEFLGS                                                 02577000
PLHINVAL EQU   PLHEFLGS                                                 02578000
PLHEODX  EQU   PLHEFLGS                                                 02579000
PLHNOADV EQU   PLHEFLGS                                                 02580000
PLHSRINV EQU   PLHEFLGS                                                 02581000
PLHSKPER EQU   PLHEFLGS                                                 02582000
PLH1ST   EQU   PLHEFLGS                                                 02583000
PLHNOSPC EQU   PLHEFLGS                                                 02584000
PLHIWAIT EQU   PLHFLG2                                                  02585000
PLHSVADV EQU   PLHFLG2                                                  02586000
PLHCIINS EQU   PLHFLG2                                                  02587000
PLHKRE   EQU   PLHFLG2                                                  02588000
PLHADDTE EQU   PLHFLG2                                                  02589000
PLHKEYMD EQU   PLHFLG2                                                  02590000
PLHSQINS EQU   PLHFLG2                                                  02591000
PLHUPD   EQU   PLHFLG2                                                  02592000
@NM00033 EQU   PLHFLG1                                                  02593000
PLHDRPND EQU   PLHFLG1                                                  02594000
PLHASYRQ EQU   PLHFLG1                                                  02595000
PLHRDEXC EQU   PLHFLG1                                                  02596000
PLHASKBF EQU   PLHFLG1                                                  02597000
PLHENDRQ EQU   PLHFLG1                                                  02598000
PLHEOVW  EQU   PLHFLG1                                                  02599000
PLHATV   EQU   IDAPLH+1                                                 02600000
PLHAVL   EQU   IDAPLH                                                   02601000
PLHIOSDQ EQU   IDAPLHDR+12                                              02602000
PLHDRCUR EQU   IDAPLHDR+10                                              02603000
PLHDRMAX EQU   IDAPLHDR+8                                               02604000
PLHDRREQ EQU   IDAPLHDR+4                                               02605000
PLHELTH  EQU   IDAPLHDR+2                                               02606000
PLHCNT   EQU   IDAPLHDR+1                                               02607000
PLHID    EQU   IDAPLHDR                                                 02608000
AMBLCMB  EQU   IDAAMBL+64                                               02609000
AMBLBIB  EQU   IDAAMBL+60                                               02610000
AMBLMIDS EQU   IDAAMBL+42                                               02611000
AMBLNIDS EQU   IDAAMBL+41                                               02612000
@NM00032 EQU   IDAAMBL+40                                               02613000
AMBLNUM  EQU   IDAAMBL+38                                               02614000
AMBLNST  EQU   IDAAMBL+37                                               02615000
@NM00031 EQU   AMBLFLG2                                                 02616000
AMBLSTAG EQU   AMBLFLG2                                                 02617000
@NM00030 EQU   AMBLFLG2                                                 02618000
AMBLDUMY EQU   AMBLFLG1                                                 02619000
AMBLCAT  EQU   AMBLFLG1                                                 02620000
AMBLUCRA EQU   AMBLFLG1                                                 02621000
AMBLSCRA EQU   AMBLFLG1                                                 02622000
AMBLVVIC EQU   AMBLFLG1                                                 02623000
AMBLUPD  EQU   AMBLFLG1                                                 02624000
AMBLCINV EQU   AMBLFLG1                                                 02625000
AMBLFULL EQU   AMBLFLG1                                                 02626000
AMBLLEN  EQU   IDAAMBL+34                                               02627000
@NM00029 EQU   AMBLSHAR                                                 02628000
AMBLWRIT EQU   AMBLSHAR                                                 02629000
AMBLCATO EQU   AMBLSHAR                                                 02630000
AMBLPRIM EQU   AMBLSHAR                                                 02631000
AMBLID   EQU   IDAAMBL+32                                               02632000
@NM00028 EQU   IDAAMBL+31                                               02633000
@NM00027 EQU   AMBLTYPE                                                 02634000
AMBLFIX  EQU   AMBLTYPE                                                 02635000
AMBLBASE EQU   AMBLTYPE                                                 02636000
AMBLAIX  EQU   AMBLTYPE                                                 02637000
AMBLUPGR EQU   AMBLTYPE                                                 02638000
AMBLPATH EQU   AMBLTYPE                                                 02639000
AMBLENO  EQU   AMBLVC+1                                                 02640000
AMBLVRT  EQU   AMBLVC                                                   02641000
AMBLXPT  EQU   IDAAMBL+24                                               02642000
AMBLDFR  EQU   AMBLQ                                                    02643000
AMBLESDS EQU   AMBLQ                                                    02644000
AMBLKSDS EQU   AMBLQ                                                    02645000
AMBLUBF  EQU   AMBLQ                                                    02646000
AMBLFSTP EQU   AMBLQ                                                    02647000
AMBLLSR  EQU   AMBLQ                                                    02648000
AMBLGSR  EQU   AMBLQ                                                    02649000
AMBLDDC  EQU   AMBLQ                                                    02650000
AMBLDCI  EQU   AMBLIDF+4                                                02651000
AMBLCACB EQU   AMBLIDF                                                  02652000
@NM00026 EQU   AMBLEOV+2                                                02653000
AMBLCOMP EQU   AMBLEOV+1                                                02654000
AMBLESET EQU   AMBLEFLG                                                 02655000
AMBLWAIT EQU   AMBLEFLG                                                 02656000
AMBLACB  EQU   IDAAMBL+8                                                02657000
AMBLSCHN EQU   IDAAMBL+4                                                02658000
AMBLPCHN EQU   IDAAMBL                                                  02659000
AMBTRACE EQU   IDAAMB+120                                               02660000
AMBVIOT  EQU   IDAAMB+116                                               02661000
AMBSZCP  EQU   IDAAMB+114                                               02662000
AMBSZFW  EQU   IDAAMB+112                                               02663000
AMBSZWR  EQU   IDAAMB+110                                               02664000
AMBSZRD  EQU   IDAAMB+108                                               02665000
AMBEXEX  EQU   IDAAMB+100                                               02666000
AMBWSHD  EQU   IDAAMB+96                                                02667000
AMBCPA   EQU   IDAAMB+92                                                02668000
AMBBM2SH EQU   IDAAMB+88                                                02669000
AMBRDCNT EQU   AMBCSWD1+2                                               02670000
@NM00025 EQU   AMBCSWD1+1                                               02671000
@NM00024 EQU   AMBAFLG                                                  02672000
AMBCFX   EQU   AMBAFLG                                                  02673000
AMBSIS   EQU   AMBAFLG                                                  02674000
AMBDFR   EQU   AMBAFLG                                                  02675000
AMBICI   EQU   AMBAFLG                                                  02676000
@NM00023 EQU   AMBAFLG                                                  02677000
AMBUPLH  EQU   IDAAMB+80                                                02678000
AMBPAMBL EQU   IDAAMB+76                                                02679000
AMBPIXP  EQU   IDAAMB+72                                                02680000
@NM00022 EQU   IDAAMB+68                                                02681000
AMBWKA   EQU   IDAAMB+60                                                02682000
AMBAMBXN EQU   AMBEOVPT                                                 02683000
AMBEDB   EQU   IDAAMB+52                                                02684000
AMBRPT   EQU   IDAAMB+50                                                02685000
AMBPUG   EQU   AMBFLG2                                                  02686000
AMBBUSY  EQU   AMBOFLGS                                                 02687000
AMBEXFG  EQU   AMBOFLGS                                                 02688000
@NM00021 EQU   AMBOFLGS                                                 02689000
AMBOPEN  EQU   AMBOFLGS                                                 02690000
@NM00020 EQU   AMBOFLGS                                                 02691000
AMBDEBAD EQU   AMBDEBPT+1                                               02692000
AMBIFLGS EQU   AMBDEBPT                                                 02693000
AMBAMETH EQU   IDAAMB+43                                                02694000
AMBUPX   EQU   AMBINFL                                                  02695000
AMBUCRA  EQU   AMBINFL                                                  02696000
AMBSCRA  EQU   AMBINFL                                                  02697000
AMBCAT   EQU   AMBINFL                                                  02698000
@NM00019 EQU   AMBINFL                                                  02699000
@NM00018 EQU   AMBINFL                                                  02700000
AMBTIOT  EQU   IDAAMB+40                                                02701000
@NM00017 EQU   IDAAMB+38                                                02702000
AMBDDSN  EQU   IDAAMB+35                                                02703000
AMBCDSN  EQU   IDAAMB+32                                                02704000
AMBIOMB  EQU   AMBIOBAD                                                 02705000
@NM00016 EQU   AMBDSORG+1                                               02706000
AMBDORGA EQU   AMBDSORG+1                                               02707000
@NM00015 EQU   AMBDSORG                                                 02708000
AMBINBUF EQU   AMBFLG1                                                  02709000
AMBUBF   EQU   AMBFLG1                                                  02710000
AMBSPEED EQU   AMBFLG1                                                  02711000
AMBPCAT  EQU   AMBFLG1                                                  02712000
AMBMCAT  EQU   AMBFLG1                                                  02713000
AMBTYPE  EQU   AMBFLG1                                                  02714000
AMBCREAT EQU   AMBFLG1                                                  02715000
@NM00014 EQU   AMBFLG0                                                  02716000
AMBPSDS  EQU   AMBFLG0                                                  02717000
AMBCACB  EQU   IDAAMB+16                                                02718000
AMBPH    EQU   IDAAMB+12                                                02719000
AMBBUFC  EQU   IDAAMB+8                                                 02720000
AMBLINK  EQU   IDAAMB+4                                                 02721000
AMBLEN   EQU   IDAAMB+2                                                 02722000
AMBRSC   EQU   IDAAMB+1                                                 02723000
AMBID    EQU   IDAAMB                                                   02724000
ACBAPID  EQU   ACBCOMN+72                                               02725000
ACBCBMWA EQU   ACBCOMN+68                                               02726000
ACBUAPTR EQU   ACBCOMN+64                                               02727000
ACBLRECL EQU   ACBCOMN+62                                               02728000
ACBMSGLN EQU   ACBBLKSZ                                                 02729000
ACBBUFSP EQU   ACBCOMN+56                                               02730000
@NM00013 EQU   ACBUJFCB+1                                               02731000
ACBOPTN  EQU   ACBUJFCB                                                 02732000
ACBVVIC  EQU   ACBINFLG                                                 02733000
ACBUCRA  EQU   ACBINFLG                                                 02734000
ACBSCRA  EQU   ACBINFLG                                                 02735000
ACBCAT   EQU   ACBINFLG                                                 02736000
ACBIJRQE EQU   ACBINFLG                                                 02737000
ACBJEPS  EQU   ACBINFLG                                                 02738000
@NM00012 EQU   ACBINFLG                                                 02739000
ACBERFLG EQU   ACBCOMN+49                                               02740000
ACBBUSY  EQU   ACBIOSFG                                                 02741000
ACBLOCK  EQU   ACBEXFG                                                  02742000
@NM00011 EQU   ACBOFLGS                                                 02743000
ACBDSERR EQU   ACBOFLGS                                                 02744000
ACBOPEN  EQU   ACBOFLGS                                                 02745000
ACBEOV   EQU   ACBOFLGS                                                 02746000
@NM00010 EQU   ACBOFLGS                                                 02747000
ACBDEB   EQU   ACBDDNM+5                                                02748000
ACBERFL  EQU   ACBDDNM+4                                                02749000
ACBAM    EQU   ACBAMETH                                                 02750000
ACBINFL  EQU   ACBDDNM+2                                                02751000
ACBTIOT  EQU   ACBDDNM                                                  02752000
ACBUEL   EQU   ACBEXLST                                                 02753000
ACBPASSW EQU   ACBCOMN+32                                               02754000
ACBMSGAR EQU   ACBCOMN+28                                               02755000
@NM00009 EQU   ACBDSORG+1                                               02756000
ACBDORGA EQU   ACBDSORG+1                                               02757000
@NM00008 EQU   ACBDSORG                                                 02758000
ACBCRNRE EQU   ACBCROPS                                                 02759000
ACBCRNCK EQU   ACBCROPS                                                 02760000
ACBASA   EQU   ACBCCTYP                                                 02761000
@NM00007 EQU   ACBCCTYP                                                 02762000
ACBRECAF EQU   ACBRECFM                                                 02763000
ACBJBUF  EQU   ACBBUFPL+2                                               02764000
ACBMACR4 EQU   ACBBUFPL+1                                               02765000
@NM00006 EQU   ACBMACR3                                                 02766000
ACBNCFX  EQU   ACBMACR3                                                 02767000
ACBSIS   EQU   ACBMACR3                                                 02768000
ACBDFR   EQU   ACBMACR3                                                 02769000
ACBICI   EQU   ACBMACR3                                                 02770000
ACBGSR   EQU   ACBMACR3                                                 02771000
ACBLSR   EQU   ACBMACR3                                                 02772000
@NM00005 EQU   ACBMACR3                                                 02773000
ACBBUFNI EQU   ACBCOMN+18                                               02774000
ACBBUFND EQU   ACBCOMN+16                                               02775000
ACBSTRNO EQU   ACBCOMN+15                                               02776000
ACBBSTNO EQU   ACBCOMN+14                                               02777000
ACBAIX   EQU   ACBMACR2                                                 02778000
ACBDSN   EQU   ACBMACR2                                                 02779000
ACBRST   EQU   ACBMACR2                                                 02780000
ACBLOGON EQU   ACBMACR2                                                 02781000
ACBSKP   EQU   ACBMACR2                                                 02782000
@NM00004 EQU   ACBMACR2                                                 02783000
ACBUBF   EQU   ACBMACR1                                                 02784000
ACBOUT   EQU   ACBMACR1                                                 02785000
ACBIN    EQU   ACBMACR1                                                 02786000
ACBDIR   EQU   ACBMACR1                                                 02787000
ACBSEQ   EQU   ACBMACR1                                                 02788000
ACBBLK   EQU   ACBCNV                                                   02789000
ACBADD   EQU   ACBADR                                                   02790000
ACBKEY   EQU   ACBMACR1                                                 02791000
ACBINRTN EQU   ACBCOMN+8                                                02792000
ACBIBCT  EQU   ACBJWA                                                   02793000
ACBLEN2  EQU   ACBLENG2                                                 02794000
ACBSTYP  EQU   ACBCOMN+1                                                02795000
ACBID    EQU   ACBCOMN                                                  02796000
RPLERMSA EQU   RPLCOMN+72                                               02797000
RPLEMLEN EQU   RPLCOMN+70                                               02798000
RPLACTIV EQU   RPLCOMN+69                                               02799000
RPLBRANC EQU   RPLEXTD1                                                 02800000
RPLNIB   EQU   RPLEXTD1                                                 02801000
@NM00003 EQU   RPLEXTD1                                                 02802000
RPLEXIT  EQU   RPLEXTD1                                                 02803000
RPLNEXIT EQU   RPLEXTD1                                                 02804000
RPLEXSCH EQU   RPLEXTD1                                                 02805000
@NM00002 EQU   RPLRBAR+3                                                02806000
@NM00001 EQU   RPLAIXID                                                 02807000
RPLAXPKP EQU   RPLAIXID                                                 02808000
RPLAIXPC EQU   RPLRBAR                                                  02809000
RPLRSV88 EQU   RPLOPT8                                                  02810000
RPLUNCON EQU   RPLOPT8                                                  02811000
RPLACTV  EQU   RPLOPT8                                                  02812000
RPLSESS  EQU   RPLOPT8                                                  02813000
RPLPEND  EQU   RPLOPT8                                                  02814000
RPLODPRM EQU   RPLOPT8                                                  02815000
RPLODACP EQU   RPLOPT8                                                  02816000
RPLODACQ EQU   RPLOPT8                                                  02817000
RPLRSV78 EQU   RPLOPT7                                                  02818000
RPLRSV77 EQU   RPLOPT7                                                  02819000
RPLRLSOP EQU   RPLOPT7                                                  02820000
RPLTPOST EQU   RPLOPT7                                                  02821000
RPLQOPT  EQU   RPLOPT7                                                  02822000
RPLCNIMM EQU   RPLCNOPT                                                 02823000
RPLCNANY EQU   RPLCNOPT                                                 02824000
RPLCNALL EQU   RPLCNOPT                                                 02825000
RPLRSV68 EQU   RPLOPT6                                                  02826000
RPLRSV67 EQU   RPLOPT6                                                  02827000
RPLLOCK  EQU   RPLOPT6                                                  02828000
RPLNCOND EQU   RPLOPT6                                                  02829000
RPLCOND  EQU   RPLOPT6                                                  02830000
RPLEOT   EQU   RPLUNTYP                                                 02831000
RPLEOM   EQU   RPLUNTYP                                                 02832000
RPLEOB   EQU   RPLUNTYP                                                 02833000
RPLWROPT EQU   RPLOPT5                                                  02834000
RPLNODE  EQU   RPLOPT5                                                  02835000
RPLERACE EQU   RPLWRTYP                                                 02836000
RPLEAU   EQU   RPLWRTYP                                                 02837000
RPLNERAS EQU   RPLWRTYP                                                 02838000
RPLPSOPT EQU   RPLOPT5                                                  02839000
RPLSSNIN EQU   RPLOPT5                                                  02840000
RPLDLGIN EQU   RPLOPT5                                                  02841000
RPLBUFL  EQU   RPLCOMN+52                                               02842000
RPLCHAIN EQU   RPLNXTRP                                                 02843000
RPLOPT4  EQU   RPLOPTCD+3                                               02844000
RPLALIGN EQU   RPLOPT3                                                  02845000
RPLFMT   EQU   RPLOPT3                                                  02846000
RPLFLD   EQU   RPLOPT3                                                  02847000
RPLVFY   EQU   RPLOPT3                                                  02848000
RPLBLK   EQU   RPLOPT3                                                  02849000
RPLSFORM EQU   RPLOPT3                                                  02850000
RPLEODS  EQU   RPLOPT3                                                  02851000
RPLNSP   EQU   RPLOPT2                                                  02852000
RPLUPD   EQU   RPLOPT2                                                  02853000
RPLWAITX EQU   RPLOPT2                                                  02854000
RPLLRD   EQU   RPLOPT2                                                  02855000
RPLBWD   EQU   RPLOPT2                                                  02856000
RPLCNV   EQU   RPLOPT2                                                  02857000
RPLADD   EQU   RPLADR                                                   02858000
RPLKEY   EQU   RPLOPT2                                                  02859000
RPLECBIN EQU   RPLECBSW                                                 02860000
RPLGEN   EQU   RPLOPT1                                                  02861000
RPLKGE   EQU   RPLOPT1                                                  02862000
RPLASY   EQU   RPLOPT1                                                  02863000
RPLSKP   EQU   RPLOPT1                                                  02864000
RPLSEQ   EQU   RPLOPT1                                                  02865000
RPLDIR   EQU   RPLOPT1                                                  02866000
RPLLOC   EQU   RPLOPT1                                                  02867000
RPLDAF   EQU   RPLARG+2                                                 02868000
RPLSAF   EQU   RPLARG                                                   02869000
RPLTCBPT EQU   RPLCOMN+28                                               02870000
RPLCCHAR EQU   RPLCOMN+20                                               02871000
RPLSTRID EQU   RPLCOMN+18                                               02872000
RPLKEYL  EQU   RPLKEYLE                                                 02873000
RPLRDSOH EQU   RPLFDB3                                                  02874000
RPLRLG   EQU   RPLFDB3                                                  02875000
RPLLGFRC EQU   RPLFDB3                                                  02876000
RPLREOT  EQU   RPLFDB3                                                  02877000
RPLREOM  EQU   RPLFDB3                                                  02878000
RPLREOB  EQU   RPLFDB3                                                  02879000
RPLSV32  EQU   RPLFDB3                                                  02880000
RPLUINPT EQU   RPLFDB3                                                  02881000
RPLSTSAV EQU   RPLFDB2                                                  02882000
RPLCUERR EQU   RPLFDB2                                                  02883000
RPLDLGFL EQU   RPLFDB2                                                  02884000
RPLIOERR EQU   RPLFDB2                                                  02885000
RPLDVUNS EQU   RPLFDB2                                                  02886000
RPLATND  EQU   RPLFDB2                                                  02887000
RPLRVID  EQU   RPLFDB2                                                  02888000
RPLERLK  EQU   RPLFDB2                                                  02889000
RPLSTAT  EQU   RPLFDBWD                                                 02890000
RPLPOST  EQU   RPLECB                                                   02891000
RPLWAIT  EQU   RPLECB                                                   02892000
RPLPLHPT EQU   RPLCOMN+4                                                02893000
RPLLEN2  EQU   RPLLEN                                                   02894000
RPLSTYP  EQU   RPLIDWD+1                                                02895000
RPLID    EQU   RPLIDWD                                                  02896000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02897000
@RT00107 EQU   HAVDIWA                                                  02898000
@RC00159 EQU   @EC00460                                                 02899000
@PB00003 EQU   @PB00004                                                 02900000
@PB00002 EQU   @PB00003                                                 02901000
@ENDDATA EQU   *                                                        02902000
         END   IDA019RS,(C'PLS2127',0701,78172)                         02903000
