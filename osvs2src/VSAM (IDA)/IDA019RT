         TITLE 'IDA019RT--SPANNED RECORD DATA INSERT                   *00001000
                        '                                               00002000
IDA019RT CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RT  78.172'                                 0001 00009000
IDADARTV DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00429-IDADARTV)                                   00013000
         ENTRY IDADARTV                                                 00014000
IDASPNPT DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00568-IDASPNPT)                                   00018000
         ENTRY IDASPNPT                                                 00019000
IDAJRNSR DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00599-IDAJRNSR)                                   00023000
         ENTRY IDAJRNSR                                                 00024000
         DROP  @15                                                      00025000
@PROLOG  BALR  @11,0                                               0001 00026000
@PSTART  DS    0H                                                  0001 00027000
         USING @PSTART,@11                                         0001 00028000
         AH    @15,4(,@15)                                         0001 00029000
         BR    @15                                                 0001 00030000
@EP00001 DS    0H                                                  0002 00031000
         IDASVR14                                                       00032000
*   IF AMDDST='0'B THEN             /* IF ESDS               @ZA07544*/ 00033000
         L     @10,AMBDSB(,RAMB)                                   0162 00034000
         TM    AMDDST(@10),B'10000000'                             0162 00035000
         BZ    @RT00162                                            0162 00036000
*     GO TO HAVDIWA;                /* AVOID DIWA                    */ 00037000
*   IF AMBLSR=ON|AMBGSR=ON THEN     /* SHR RESOURSES         @ZA02289*/ 00038000
         TM    AMBLSR(RAMB),B'01100000'                            0164 00039000
         BZ    @RF00164                                            0164 00040000
*     DO;                           /* YES                   @ZA02289*/ 00041000
*       RBUFC=PLHIBUFC;             /* PNT TO SEQ SET        @ZA02289*/ 00042000
         L     RBUFC,PLHIBUFC(,RPLH)                               0166 00043000
*       IF RBUFC^=ZERO THEN         /* OWNED BY PLH          @ZA02289*/ 00044000
         LTR   RBUFC,RBUFC                                         0167 00045000
         BZ    @RF00167                                            0167 00046000
*I01:                                                              0168 00047000
*         DO;                       /* IDACALL(IDAFREEB)             */ 00048000
I01      DS    0H                                                  0169 00049000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 00050000
         L     @15,@CV01006                                        0169 00051000
         BALR  @14,@15                                             0169 00052000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00053000
         BALR @11,0                                                     00054000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00055000
         USING *,@11                                                    00056000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00057000
         L     @11,=A(@PSTART)                                          00058000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00059000
         USING @PSTART,@11                                              00060000
*         END I01;                  /* YES, FREE IT          @ZA02289*/ 00061000
*     END;                          /*                       @ZA02289*/ 00062000
@RF00167 DS    0H                                                  0176 00063000
*LOCKDIWA:                                                         0176 00064000
*   RPARM1=ADDR(DIWATV);            /* POINT TO LOCK BYTE            */ 00065000
@RF00164 DS    0H                                                  0176 00066000
LOCKDIWA L     RPARM1,AMBIWA(,RAMB)                                0176 00067000
         LA    RPARM1,DIWATV(,RPARM1)                              0176 00068000
*   GEN(TS  0(RPARM1));             /* TEST AND SET                  */ 00069000
         TS  0(RPARM1)                                                  00070000
*   GEN FLOWS(HAVDIWA)(BZ  HAVDIWA);/* OBTAINED DIWA                 */ 00071000
         BZ  HAVDIWA                                                    00072000
*   RESPECIFY                                                      0179 00073000
*     RWORK0 RSTD;                  /*                               */ 00074000
*   RWORK0=DEFR0;                   /* DATA INSERT REQUEST           */ 00075000
         SLR   RWORK0,RWORK0                                       0180 00076000
*I02:                                                              0181 00077000
*   DO;                             /* IDACALL(IDADRQ)               */ 00078000
I02      DS    0H                                                  0182 00079000
*     CALL IDADRQ;                  /* EXIT TO IDADRQ                */ 00080000
         L     @15,@CV01005                                        0182 00081000
         BALR  @14,@15                                             0182 00082000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00083000
         BALR @11,0                                                     00084000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00085000
         USING *,@11                                                    00086000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00087000
         L     @11,=A(@PSTART)                                          00088000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00089000
         USING @PSTART,@11                                              00090000
*   END I02;                        /*                               */ 00091000
*   GO TO LOCKDIWA;                 /* TRY AGAIN                     */ 00092000
         B     LOCKDIWA                                            0188 00093000
*HAVDIWA:                           /* DIWA OBTAINED                 */ 00094000
*   RESPECIFY                                                      0189 00095000
*     RWORK0 UNRSTD;                /*                               */ 00096000
HAVDIWA  DS    0H                                                  0190 00097000
*   DIWPLH=RPLH;                    /* IDENTIFY LOCKING PLH          */ 00098000
         L     @10,AMBIWA(,RAMB)                                   0190 00099000
         ST    RPLH,DIWPLH(,@10)                                   0190 00100000
*   PLHSAVE3=AMDCINV-LENGTH(IDACIDF)/* COMPUTE MAX. USABLE           */ 00101000
*       -TWO*LENGTH(IDARDF);        /* SPACE IN A CI                 */ 00102000
         L     @10,AMBDSB(,RAMB)                                   0191 00103000
         L     @10,AMDCINV(,@10)                                   0191 00104000
         SL    @10,@CF00314                                        0191 00105000
         ST    @10,PLHSAVE3(,RPLH)                                 0191 00106000
*   IF RPLRLEN//PLHSAVE3^=ZERO THEN /* IF RECORD PARTIALLY           */ 00107000
         L     @06,RPLRLEN(,RRPL)                                  0192 00108000
         SRDA  @06,32                                              0192 00109000
         DR    @06,@10                                             0192 00110000
         LTR   @06,@06                                             0192 00111000
         BZ    @RF00192                                            0192 00112000
*     PLHNOSEG=ONE;                 /* FILLS LAST CI, USE 1          */ 00113000
         MVC   PLHNOSEG(2,RPLH),@CH00053                           0193 00114000
*   ELSE                            /* OTHERWISE, START WITH         */ 00115000
*     PLHNOSEG=ZERO;                /* SEG. COUNT OF ZERO            */ 00116000
         B     @RC00192                                            0194 00117000
@RF00192 SLR   @10,@10                                             0194 00118000
         STH   @10,PLHNOSEG(,RPLH)                                 0194 00119000
*   PLHNOSEG=PLHNOSEG+              /* COMPUTE EXACT NUMBER OF       */ 00120000
*       (RPLRLEN/PLHSAVE3);         /* SEGMENTS REQUIRED             */ 00121000
@RC00192 L     @07,RPLRLEN(,RRPL)                                  0195 00122000
         SLR   @06,@06                                             0195 00123000
         D     @06,PLHSAVE3(,RPLH)                                 0195 00124000
         AH    @07,PLHNOSEG(,RPLH)                                 0195 00125000
         STH   @07,PLHNOSEG(,RPLH)                                 0195 00126000
*   IF AMBCREAT=ON|AMDDST='0'B THEN /* CREATE MODE OR ESDS           */ 00127000
         TM    AMBCREAT(RAMB),B'10000000'                          0196 00128000
         BO    @RT00196                                            0196 00129000
         L     @10,AMBDSB(,RAMB)                                   0196 00130000
         TM    AMDDST(@10),B'10000000'                             0196 00131000
         BNZ   @RF00196                                            0196 00132000
@RT00196 DS    0H                                                  0197 00133000
*     DO;                           /* YES                           */ 00134000
*       IF AMBCREAT=OFF&RPLSEQ=OFF THEN/* IF NOT CREATE & SEQ        */ 00135000
         TM    AMBCREAT(RAMB),B'10000000'                          0198 00136000
         BNZ   @RF00198                                            0198 00137000
         TM    RPLSEQ(RRPL),B'00100000'                            0198 00138000
         BNZ   @RF00198                                            0198 00139000
*         DO;                       /* THEN ADD BUFFERS TO           */ 00140000
*           RPARM1=PLHNOSEG;        /* TAKE CARE OF THIS RECD.       */ 00141000
         LH    RPARM1,PLHNOSEG(,RPLH)                              0200 00142000
*I03:                                                              0201 00143000
*           DO;                     /* IDACALL(IDAABF)               */ 00144000
I03      DS    0H                                                  0202 00145000
*             CALL IDAABF;          /* EXIT TO IDAABF                */ 00146000
         L     @15,@CV01003                                        0202 00147000
         BALR  @14,@15                                             0202 00148000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00149000
         BALR @11,0                                                     00150000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00151000
         USING *,@11                                                    00152000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00153000
         L     @11,=A(@PSTART)                                          00154000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00155000
         USING @PSTART,@11                                              00156000
*           END I03;                /*                               */ 00157000
*         END;                      /*                               */ 00158000
*       RESPECIFY                                                  0209 00159000
*        (RWORK2,                                                  0209 00160000
*         RWORK3,                                                  0209 00161000
*         RWORK4,                                                  0209 00162000
*         RWORK5) RSTD;             /*                               */ 00163000
@RF00198 DS    0H                                                  0210 00164000
*       DO PLHSRCSG=ONE TO PLHNOSEG;/* LOOP COVERS ALL SEGS.         */ 00165000
         LA    @10,1                                               0210 00166000
         B     @DE00210                                            0210 00167000
@DL00210 DS    0H                                                  0211 00168000
*         IF PLHRECP^=BUFCBAD THEN  /* IF FIRST BUFFER IS EMPTY DONT    00169000
*                                      CALL SPLT                     */ 00170000
         L     @10,PLHDBUFC(,RPLH)                                 0211 00171000
         CLC   PLHRECP(4,RPLH),BUFCBAD(@10)                        0211 00172000
         BE    @RF00211                                            0211 00173000
*           DO;                     /*                               */ 00174000
*I04:                                                              0213 00175000
*             DO;                   /* IDACALL(IDA019SA)             */ 00176000
I04      DS    0H                                                  0214 00177000
*               CALL IDA019SA;      /* EXIT TO IDA019SA              */ 00178000
         L     @15,@CV01015                                        0214 00179000
         BALR  @14,@15                                             0214 00180000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00181000
         BALR @11,0                                                     00182000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00183000
         USING *,@11                                                    00184000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00185000
         L     @11,=A(@PSTART)                                          00186000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00187000
         USING @PSTART,@11                                              00188000
*             END I04;              /*                               */ 00189000
*             IF RPLERREG^=ZERO THEN/* ERROR                         */ 00190000
         CLI   RPLERREG(RRPL),0                                    0220 00191000
         BE    @RF00220                                            0220 00192000
*               DO;                 /* YES                           */ 00193000
*                 IF AMDDST='1'B THEN/* IF KSDS                      */ 00194000
         L     @10,AMBDSB(,RAMB)                                   0222 00195000
         TM    AMDDST(@10),B'10000000'                             0222 00196000
         BNO   @RF00222                                            0222 00197000
*                   DIWATV=ZERO;    /* FREE WORK AREA                */ 00198000
         L     @10,AMBIWA(,RAMB)                                   0223 00199000
         MVI   DIWATV(@10),X'00'                                   0223 00200000
*                 CALL EXIT;        /* YES, LEAVE                    */ 00201000
@RF00222 BAL   @14,EXIT                                            0224 00202000
*               END;                /*                               */ 00203000
*           END;                    /*                               */ 00204000
@RF00220 DS    0H                                                  0227 00205000
*         RWORK4=RPLAREA+((PLHSRCSG-/* COMPUTE ADDRESS IN USER       */ 00206000
*             ONE)*PLHSAVE3);       /* AREA FROM WHICH TO MOVE       */ 00207000
@RF00211 L     @10,RPLAREA(,RRPL)                                  0227 00208000
         LH    @15,PLHSRCSG(,RPLH)                                 0227 00209000
         BCTR  @15,0                                               0227 00210000
         L     @05,PLHSAVE3(,RPLH)                                 0227 00211000
         MR    @14,@05                                             0227 00212000
         ALR   @15,@10                                             0227 00213000
         LR    RWORK4,@15                                          0227 00214000
*         RWORK2=PLHRECP;           /* SET 'TO' ADDRESS              */ 00215000
         L     RWORK2,PLHRECP(,RPLH)                               0228 00216000
*         RWORK3=(RPLAREA+RPLRLEN)- /* COMPUTE REMAINING BYTES       */ 00217000
*             RWORK4;               /* TO BE MOVED                   */ 00218000
         AL    @10,RPLRLEN(,RRPL)                                  0229 00219000
         SLR   @10,RWORK4                                          0229 00220000
         LR    RWORK3,@10                                          0229 00221000
*         IF RWORK3>PLHSAVE3 THEN   /* REMAINDER MORE THAN CI        */ 00222000
         CR    RWORK3,@05                                          0230 00223000
         BNH   @RF00230                                            0230 00224000
*           RWORK3=PLHSAVE3;        /* YES, MOVE ONE CI FULL         */ 00225000
         LR    RWORK3,@05                                          0231 00226000
*         RWORK5=RWORK3;            /*                               */ 00227000
@RF00230 LR    RWORK5,RWORK3                                       0232 00228000
*         PLHRECP=RWORK2+RWORK3;    /* SET POSITION                  */ 00229000
         LR    @10,RWORK2                                          0233 00230000
         ALR   @10,RWORK3                                          0233 00231000
         ST    @10,PLHRECP(,RPLH)                                  0233 00232000
*         PLHRDFP->CIDFLL=PLHRDFP->CIDFLL-/* BUILD PROPER FREE       */ 00233000
*             (RWORK3+TWO*LENGTH(IDARDF));/* SPACE LENGTH            */ 00234000
         L     @10,PLHRDFP(,RPLH)                                  0234 00235000
         LA    @05,6                                               0234 00236000
         ALR   @05,RWORK3                                          0234 00237000
         LCR   @05,@05                                             0234 00238000
         AH    @05,CIDFLL(,@10)                                    0234 00239000
         STH   @05,CIDFLL(,@10)                                    0234 00240000
*         PLHRDFP->CIDFOSET=RWORK3; /* BUILD FREE SPACE OFFSET       */ 00241000
         STH   RWORK3,CIDFOSET(,@10)                               0235 00242000
*         PLHRDFP=PLHRDFP-LENGTH(IDARDF);/* MOVE RDF POINTER FROM  0236 00243000
*                                      CIDF TO RDF                   */ 00244000
         LA    @05,3                                               0236 00245000
         SLR   @10,@05                                             0236 00246000
         ST    @10,PLHRDFP(,RPLH)                                  0236 00247000
*         PLHSAVE4=PLHRDFP-LENGTH(IDARDF);/* ESTABLISH ADDRESSABILITY   00248000
*                                      TO SEGMENT ID RDF             */ 00249000
         LCR   @05,@05                                             0237 00250000
         ALR   @05,@10                                             0237 00251000
         ST    @05,PLHSAVE4(,RPLH)                                 0237 00252000
*         PLHRDFP->RDFLL=RWORK3;    /* PUT SEGMENT LL IN RDF         */ 00253000
         STCM  RWORK3,3,RDFLL(@10)                                 0238 00254000
*         PLHRDFP->RDFCTNU=ON;      /* SET OVERHEAD BIT IN RDF       */ 00255000
         OI    RDFCTNU(@10),B'01000000'                            0239 00256000
*         PLHSAVE4->RDFREPL=ON;     /* SAME FOR ID RDF               */ 00257000
         OI    RDFREPL(@05),B'00001000'                            0240 00258000
*         IF PLHSRCSG^=PLHNOSEG THEN/* IS THIS THE LAST SEG.         */ 00259000
         CLC   PLHSRCSG(2,RPLH),PLHNOSEG(RPLH)                     0241 00260000
         BE    @RF00241                                            0241 00261000
*           DO;                     /* NO                            */ 00262000
*             PLHRDFP->RDF1ST=ON;   /* SET SECOND BIT IN RDF         */ 00263000
         OI    RDF1ST(@10),B'00010000'                             0243 00264000
*             PLHSAVE4->RDF1ST=ON;  /* SAME FOR ID RDF               */ 00265000
         OI    RDF1ST(@05),B'00010000'                             0244 00266000
*           END;                    /*                               */ 00267000
*         IF PLHSRCSG^=ONE THEN     /* IS THIS THE FIRST SEG.        */ 00268000
@RF00241 CLC   PLHSRCSG(2,RPLH),@CH00053                           0246 00269000
         BE    @RF00246                                            0246 00270000
*           DO;                     /* NO                            */ 00271000
*             PLHRDFP->RDFNOT1=ON;  /* SET 1ST BIT ON                */ 00272000
         L     @10,PLHRDFP(,RPLH)                                  0248 00273000
         OI    RDFNOT1(@10),B'00100000'                            0248 00274000
*             PLHSAVE4->RDFNOT1=ON; /* SAME FOR ID RDF               */ 00275000
         L     @10,PLHSAVE4(,RPLH)                                 0249 00276000
         OI    RDFNOT1(@10),B'00100000'                            0249 00277000
*           END;                    /*                               */ 00278000
*         GEN(MVCL  RWORK2,RWORK4); /* MOVE SEGMENT TO BUFFER        */ 00279000
@RF00246 DS    0H                                                  0251 00280000
         MVCL  RWORK2,RWORK4                                            00281000
*         IF AMBJRN=ON THEN         /* JOURNAL EXIT REQUIRED         */ 00282000
         TM    AMBJRN(RAMB),B'00000010'                            0252 00283000
         BNO   @RF00252                                            0252 00284000
*           DO;                     /* YES                           */ 00285000
*             RBUFC=PLHDBUFC;       /* SET RBUFC                     */ 00286000
         L     RBUFC,PLHDBUFC(,RPLH)                               0254 00287000
*             CALL IDAJRNSR;        /* GO TAKE JOURNAL EXIT          */ 00288000
         L     @15,@CA01061                                        0255 00289000
         BALR  @14,@15                                             0255 00290000
*           END;                    /*                               */ 00291000
*       END;                        /*                               */ 00292000
@RF00252 LA    @10,1                                               0257 00293000
         AH    @10,PLHSRCSG(,RPLH)                                 0257 00294000
@DE00210 STH   @10,PLHSRCSG(,RPLH)                                 0257 00295000
         CH    @10,PLHNOSEG(,RPLH)                                 0257 00296000
         BNH   @DL00210                                            0257 00297000
*       RESPECIFY                                                  0258 00298000
*        (RWORK2,                                                  0258 00299000
*         RWORK3,                                                  0258 00300000
*         RWORK4,                                                  0258 00301000
*         RWORK5) UNRSTD;           /*                               */ 00302000
*       IF AMDDST='1'B THEN         /* IF KSDS                       */ 00303000
         L     @10,AMBDSB(,RAMB)                                   0259 00304000
         TM    AMDDST(@10),B'10000000'                             0259 00305000
         BNO   @RF00259                                            0259 00306000
*         DIWATV=ZERO;              /* FREE WORK AREA                */ 00307000
         L     @10,AMBIWA(,RAMB)                                   0260 00308000
         MVI   DIWATV(@10),X'00'                                   0260 00309000
*       PLHLRECL=RPLRLEN;           /* SET LRECL IN PLH              */ 00310000
@RF00259 L     @10,RPLRLEN(,RRPL)                                  0261 00311000
         ST    @10,PLHLRECL(,RPLH)                                 0261 00312000
*       RPLDDDD=BUFXIRBA;           /* SET RBA IN RPL                */ 00313000
         L     @10,PLHDBUFC(,RPLH)                                 0262 00314000
         L     @10,BUFXIRBA(,@10)                                  0262 00315000
         ST    @10,RPLDDDD(,RRPL)                                  0262 00316000
*       PLHFSP=PLHRECP;             /* SET FREESPACE POINTER         */ 00317000
         L     @10,PLHRECP(,RPLH)                                  0263 00318000
         ST    @10,PLHFSP(,RPLH)                                   0263 00319000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 00320000
         BAL   @14,EXIT                                            0264 00321000
*     END;                          /* END CREATE OR ESDS            */ 00322000
*   DO;                             /* INSERT SPANNED RECORD         */ 00323000
@RF00196 DS    0H                                                  0267 00324000
*     RBUFC=PLHIBUFC;               /* POINT TO SEQ SET BUFC         */ 00325000
         L     RBUFC,PLHIBUFC(,RPLH)                               0267 00326000
*     IF RBUFC=ZERO|RBUFC->BUFCRRD=ON|/* MUST SEQ SET BE             */ 00327000
*         RBUFC->BUFCEXC=OFF THEN   /* REREAD                        */ 00328000
         LTR   RBUFC,RBUFC                                         0268 00329000
         BZ    @RT00268                                            0268 00330000
         TM    BUFCRRD(RBUFC),B'00100000'                          0268 00331000
         BO    @RT00268                                            0268 00332000
         TM    BUFCEXC(RBUFC),B'00000010'                          0268 00333000
         BNZ   @RF00268                                            0268 00334000
@RT00268 DS    0H                                                  0269 00335000
*       DO;                         /* YES                           */ 00336000
*         RAMB=AMBLIX;              /* POINT TO INDEX AMB            */ 00337000
         L     @10,RPLDACB(,RRPL)                                  0270 00338000
         L     @10,ACBAMBL(,@10)                                   0270 00339000
         L     RAMB,AMBLIX(,@10)                                   0270 00340000
*         RPARM1=ADDR(PLHIXSPL);    /* POINT TO INX PARM LIST        */ 00341000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0271 00342000
*         RPARM1->IXSILN=ONE;       /* SET LEVEL TO 1                */ 00343000
         MVI   IXSILN(RPARM1),X'01'                                0272 00344000
*         PLHSSR=ON;                /* INDICATE SEQ SET REQD         */ 00345000
         OI    PLHSSR(RPLH),B'00010000'                            0273 00346000
*         RPARM1=PLHSSRBA;          /* GET SEQ SET RBA               */ 00347000
         L     RPARM1,PLHSSRBA(,RPLH)                              0274 00348000
*I05:                                                              0275 00349000
*         DO;                       /* IDACALL(IDAGRB)               */ 00350000
I05      DS    0H                                                  0276 00351000
*           CALL IDAGRB;            /* EXIT TO IDAGRB                */ 00352000
         L     @15,@CV01019                                        0276 00353000
         BALR  @14,@15                                             0276 00354000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00355000
         BALR @11,0                                                     00356000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00357000
         USING *,@11                                                    00358000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00359000
         L     @11,=A(@PSTART)                                          00360000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00361000
         USING @PSTART,@11                                              00362000
*         END I05;                  /* GO READ THE SEQ SET           */ 00363000
*         IF RPLERREG^=ZERO THEN    /* I/O ERROR                     */ 00364000
         CLI   RPLERREG(RRPL),0                                    0282 00365000
         BE    @RF00282                                            0282 00366000
*           DO;                     /* YES                           */ 00367000
*             RAMB=AMBLDTA;         /* SET DATA AMB                  */ 00368000
         L     @10,RPLDACB(,RRPL)                                  0284 00369000
         L     @10,ACBAMBL(,@10)                                   0284 00370000
         L     RAMB,AMBLDTA(,@10)                                  0284 00371000
*             DIWATV=ZERO;          /* GIVE UP WORK AREA             */ 00372000
         L     @10,AMBIWA(,RAMB)                                   0285 00373000
         MVI   DIWATV(@10),X'00'                                   0285 00374000
*             CALL EXIT;            /* RETURN                        */ 00375000
         BAL   @14,EXIT                                            0286 00376000
*           END;                    /*                               */ 00377000
*         RAMB=AMBLDTA;             /* RESET AMB REGISTER            */ 00378000
@RF00282 L     @10,RPLDACB(,RRPL)                                  0288 00379000
         L     @10,ACBAMBL(,@10)                                   0288 00380000
         L     RAMB,AMBLDTA(,@10)                                  0288 00381000
*       END;                        /*                               */ 00382000
*     IF RPLUPD=ON THEN             /* UPDATE MODE           @ZA02289*/ 00383000
@RF00268 TM    RPLUPD(RRPL),B'00000010'                            0290 00384000
         BNO   @RF00290                                            0290 00385000
*       DO;                         /* YES, SPLIT            @ZA02289*/ 00386000
*         CALL SPLTCA;              /* CA IF REQUIRED        @ZA02289*/ 00387000
         BAL   @14,SPLTCA                                          0292 00388000
*         PLHFSP=BUFCBAD;           /* ERASE RECORD          @ZA02289*/ 00389000
         L     @10,PLHDBUFC(,RPLH)                                 0293 00390000
         L     @10,BUFCBAD(,@10)                                   0293 00391000
         ST    @10,PLHFSP(,RPLH)                                   0293 00392000
*       END;                        /*                       @ZA02289*/ 00393000
*     DO WHILE BUFCBAD^=PLHFSP;     /* LOOP UNTIL BUFFER EMPTY     0295 00394000
*                                                            @ZA02289*/ 00395000
@RF00290 B     @DE00295                                            0295 00396000
@DL00295 DS    0H                                                  0296 00397000
*I06:                                                              0296 00398000
*       DO;                         /* IDACALL(IDA019RE)             */ 00399000
I06      DS    0H                                                  0297 00400000
*         CALL IDA019RE;            /* EXIT TO IDA019RE              */ 00401000
         L     @15,@CV01013                                        0297 00402000
         BALR  @14,@15                                             0297 00403000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00404000
         BALR @11,0                                                     00405000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00406000
         USING *,@11                                                    00407000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00408000
         L     @11,=A(@PSTART)                                          00409000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00410000
         USING @PSTART,@11                                              00411000
*       END I06;                    /* CALL CI SPLIT                 */ 00412000
*       IF RPLERREG^=ZERO THEN      /* ERROR ENCOUNTERED             */ 00413000
         CLI   RPLERREG(RRPL),0                                    0303 00414000
         BE    @RF00303                                            0303 00415000
*         DO;                       /* YES                           */ 00416000
*           DIWATV=ZERO;            /* FREE WORK AREA                */ 00417000
         L     @10,AMBIWA(,RAMB)                                   0305 00418000
         MVI   DIWATV(@10),X'00'                                   0305 00419000
*           CALL EXIT;              /* RETURN                        */ 00420000
         BAL   @14,EXIT                                            0306 00421000
*         END;                      /*                               */ 00422000
*     END;                          /*                               */ 00423000
@RF00303 DS    0H                                                  0308 00424000
@DE00295 L     @10,PLHDBUFC(,RPLH)                                 0308 00425000
         CLC   BUFCBAD(4,@10),PLHFSP(RPLH)                         0308 00426000
         BNE   @DL00295                                            0308 00427000
*     IF RPLUPD=OFF THEN            /* UPDATE MODE           @ZA02289*/ 00428000
         TM    RPLUPD(RRPL),B'00000010'                            0309 00429000
         BNZ   @RF00309                                            0309 00430000
*       CALL SPLTCA;                /* NO-GO SPLIT IF REQUIRED     0310 00431000
*                                                            @ZA02289*/ 00432000
         BAL   @14,SPLTCA                                          0310 00433000
*     RBUFC=PLHIBUFC->BUFCBAD;      /* POINT TO INDEX RECORD         */ 00434000
@RF00309 L     @10,PLHIBUFC(,RPLH)                                 0311 00435000
         L     RBUFC,BUFCBAD(,@10)                                 0311 00436000
*     RPARM1=RPLAREA+AMDRKP;        /* POINT TO ARGUMENT             */ 00437000
         L     @10,AMBDSB(,RAMB)                                   0312 00438000
         LH    RPARM1,AMDRKP(,@10)                                 0312 00439000
         AL    RPARM1,RPLAREA(,RRPL)                               0312 00440000
*     RAMB=AMBLIX;                  /* ADDRESS THRU INDEX CB         */ 00441000
         L     @10,RPLDACB(,RRPL)                                  0313 00442000
         L     @10,ACBAMBL(,@10)                                   0313 00443000
         L     RAMB,AMBLIX(,@10)                                   0313 00444000
*     IMWIXSP=ADDR(IMWISWKA);       /* SET ADD. TO PARM LIST         */ 00445000
         L     @10,AMBIWA(,RAMB)                                   0314 00446000
         L     @10,ICWCHN(,@10)                                    0314 00447000
         LA    @05,IMWISWKA(,@10)                                  0314 00448000
         ST    @05,IMWIXSP(,@10)                                   0314 00449000
*     RESPECIFY                                                    0315 00450000
*       RWORK3 RSTD;                /*                               */ 00451000
*     RWORK3=IMWIXSP;               /* ADD. OF PARM FOR SCIB         */ 00452000
         LR    RWORK3,@05                                          0316 00453000
*I07:                                                              0317 00454000
*     DO;                           /* IDACALL(IDA019RC)             */ 00455000
I07      DS    0H                                                  0318 00456000
*       CALL IDA019RC;              /* EXIT TO IDA019RC              */ 00457000
         L     @15,@CV01012                                        0318 00458000
         BALR  @14,@15                                             0318 00459000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00460000
         BALR @11,0                                                     00461000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00462000
         USING *,@11                                                    00463000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00464000
         L     @11,=A(@PSTART)                                          00465000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00466000
         USING @PSTART,@11                                              00467000
*     END I07;                      /* SCIB                          */ 00468000
*     RFY                                                          0324 00469000
*      (RWORK2,                                                    0324 00470000
*       RWORK4) RSTD;               /*                               */ 00471000
*     RWORK2=PLHIBUFC->BUFCBAD;     /* POINT TO INDEX RECORD         */ 00472000
         L     @10,PLHIBUFC(,RPLH)                                 0325 00473000
         L     RWORK2,BUFCBAD(,@10)                                0325 00474000
*     RWORK3=IXSHEP+LENGTH(IBFLPL)+ /* POINT TO CURRENT INDEX        */ 00475000
*         LENGTH(IBFLPF);           /* ENTRY POINTER FIELD           */ 00476000
         L     @10,AMBIWA(,RAMB)                                   0326 00477000
         L     @10,ICWCHN(,@10)                                    0326 00478000
         L     @10,IMWIXSP(,@10)                                   0326 00479000
         LA    RWORK3,2                                            0326 00480000
         AL    RWORK3,IXSHEP(,@10)                                 0326 00481000
*     RWORK4=RWORK2->IXHPTLS;       /* GET MASK FROM HEADER          */ 00482000
         SLR   RWORK4,RWORK4                                       0327 00483000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0327 00484000
*     RPARM1=ZERO;                  /* CLEAR PICKUP REG              */ 00485000
         SLR   RPARM1,RPARM1                                       0328 00486000
*     GEN(EX  RWORK4,PICKPT);       /* EXTRACT POINTER FIELD         */ 00487000
         EX  RWORK4,PICKPT                                              00488000
*     RAMB=AMBLDTA;                 /* ADDRESS DATA CB               */ 00489000
         L     @10,RPLDACB(,RRPL)                                  0330 00490000
         L     @10,ACBAMBL(,@10)                                   0330 00491000
         L     RAMB,AMBLDTA(,@10)                                  0330 00492000
*     RPLDDDD=RWORK2->IXHBRBA+      /* COMPUTE RBA OF FIRST          */ 00493000
*         AMDCINV*RPARM1;           /* SEGMENT OF SPANNED RCD        */ 00494000
         L     @10,AMBDSB(,RAMB)                                   0331 00495000
         LR    @15,RPARM1                                          0331 00496000
         M     @14,AMDCINV(,@10)                                   0331 00497000
         AL    @15,IXHBRBA(,RWORK2)                                0331 00498000
         ST    @15,RPLDDDD(,RRPL)                                  0331 00499000
*     RFY                                                          0332 00500000
*      (RWORK2,                                                    0332 00501000
*       RWORK3,                                                    0332 00502000
*       RWORK4) UNRSTD;             /*                               */ 00503000
*     IF RPLSEQ=OFF&AMBLSR=OFF&     /* DIR OR SKP AND NOT            */ 00504000
*         AMBGSR=OFF THEN           /* DB/DC                         */ 00505000
         TM    RPLSEQ(RRPL),B'00100000'                            0333 00506000
         BNZ   @RF00333                                            0333 00507000
         TM    AMBLSR(RAMB),B'01100000'                            0333 00508000
         BNZ   @RF00333                                            0333 00509000
*I08:                                                              0334 00510000
*       DO;                         /* IDACALL(IDAAIBF)              */ 00511000
I08      DS    0H                                                  0335 00512000
*         CALL IDAAIBF;             /* EXIT TO IDAAIBF               */ 00513000
         L     @15,@CV01004                                        0335 00514000
         BALR  @14,@15                                             0335 00515000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00516000
         BALR @11,0                                                     00517000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00518000
         USING *,@11                                                    00519000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00520000
         L     @11,=A(@PSTART)                                          00521000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00522000
         USING @PSTART,@11                                              00523000
*       END I08;                    /* YES, ADD DI BUFFER TO BUFFER     00524000
*                                      CHAIN                         */ 00525000
*     RPARM1=PLHNOSEG;              /* SET AT SEGMENT COUNT          */ 00526000
@RF00333 LH    RPARM1,PLHNOSEG(,RPLH)                              0341 00527000
*I09:                                                              0342 00528000
*     DO;                           /* IDACALL(IDAABF)               */ 00529000
I09      DS    0H                                                  0343 00530000
*       CALL IDAABF;                /* EXIT TO IDAABF                */ 00531000
         L     @15,@CV01003                                        0343 00532000
         BALR  @14,@15                                             0343 00533000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00534000
         BALR @11,0                                                     00535000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00536000
         USING *,@11                                                    00537000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00538000
         L     @11,=A(@PSTART)                                          00539000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00540000
         USING @PSTART,@11                                              00541000
*     END I09;                      /* TRY TO ADD BUFFERS            */ 00542000
*     PLHSAVE1=AMDCINV-LENGTH(IDACIDF)/* COMPUTE AND SAVE MAX        */ 00543000
*         -TWO*LENGTH(IDARDF);      /* SPACE IN CI FOR DATA          */ 00544000
         L     @10,AMBDSB(,RAMB)                                   0349 00545000
         L     @10,AMDCINV(,@10)                                   0349 00546000
         SL    @10,@CF00314                                        0349 00547000
         ST    @10,PLHSAVE1(,RPLH)                                 0349 00548000
*     PLHSRCSG=ONE;                 /* SET SEG NO. AT 1              */ 00549000
         MVC   PLHSRCSG(2,RPLH),@CH00053                           0350 00550000
*     RBUFC=PLHDBUFC;               /* USE CURRENT DATA BUFFER       */ 00551000
         L     RBUFC,PLHDBUFC(,RPLH)                               0351 00552000
*I10:                                                              0352 00553000
*     DO;                           /* IDACALL(IDAMVSEG)             */ 00554000
I10      DS    0H                                                  0353 00555000
*       CALL IDAMVSEG;              /* EXIT TO IDAMVSEG              */ 00556000
         L     @15,@CV01016                                        0353 00557000
         BALR  @14,@15                                             0353 00558000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00559000
         BALR @11,0                                                     00560000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00561000
         USING *,@11                                                    00562000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00563000
         L     @11,=A(@PSTART)                                          00564000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00565000
         USING @PSTART,@11                                              00566000
*     END I10;                      /* MOVE 1ST SEG TO BUFFER        */ 00567000
*     RBUFC->BUFCORBA=RPLDDDD;      /* SET OUTPUT RBA                */ 00568000
         L     @10,RPLDDDD(,RRPL)                                  0359 00569000
         ST    @10,BUFCORBA(,RBUFC)                                0359 00570000
*     IF AMBJRN=ON THEN             /* JOURNAL EXIT REQUIRED         */ 00571000
         TM    AMBJRN(RAMB),B'00000010'                            0360 00572000
         BNO   @RF00360                                            0360 00573000
*       CALL IDAJRNSR;              /* YES, GO JOURNAL               */ 00574000
         L     @15,@CA01061                                        0361 00575000
         BALR  @14,@15                                             0361 00576000
*     RFY                                                          0362 00577000
*      (RWORK2,                                                    0362 00578000
*       RWORK3,                                                    0362 00579000
*       RWORK4) RSTD;               /*                               */ 00580000
@RF00360 DS    0H                                                  0363 00581000
*     DO PLHSRCSG=TWO TO PLHNOSEG;  /* LOOP STORES 2ND THRU LAST   0363 00582000
*                                      SEGMENT                       */ 00583000
         LA    @10,2                                               0363 00584000
         B     @DE00363                                            0363 00585000
@DL00363 DS    0H                                                  0364 00586000
*       RAMB=AMBLDTA;               /* POINT TO DATA BLOCKS          */ 00587000
         L     @10,RPLDACB(,RRPL)                                  0364 00588000
         L     @10,ACBAMBL(,@10)                                   0364 00589000
         L     RAMB,AMBLDTA(,@10)                                  0364 00590000
*       RBUFC=ZERO;                 /* USE WORK BUFFER               */ 00591000
         SLR   RBUFC,RBUFC                                         0365 00592000
*I11:                                                              0366 00593000
*       DO;                         /* IDACALL(IDAMVSEG)             */ 00594000
I11      DS    0H                                                  0367 00595000
*         CALL IDAMVSEG;            /* EXIT TO IDAMVSEG              */ 00596000
         L     @15,@CV01016                                        0367 00597000
         BALR  @14,@15                                             0367 00598000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00599000
         BALR @11,0                                                     00600000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00601000
         USING *,@11                                                    00602000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00603000
         L     @11,=A(@PSTART)                                          00604000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00605000
         USING @PSTART,@11                                              00606000
*       END I11;                    /* MOVE A SEG TO BUFFER          */ 00607000
*       RAMB=AMBLIX;                /* ADDRESS THRU INDEX SIDE       */ 00608000
         L     @10,RPLDACB(,RRPL)                                  0373 00609000
         L     @10,ACBAMBL(,@10)                                   0373 00610000
         L     RAMB,AMBLIX(,@10)                                   0373 00611000
*I12:                                                              0374 00612000
*       DO;                         /* IDACALL(IDAADSEG)             */ 00613000
I12      DS    0H                                                  0375 00614000
*         CALL IDAADSEG;            /* EXIT TO IDAADSEG              */ 00615000
         L     @15,@CV01017                                        0375 00616000
         BALR  @14,@15                                             0375 00617000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00618000
         BALR @11,0                                                     00619000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00620000
         USING *,@11                                                    00621000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00622000
         L     @11,=A(@PSTART)                                          00623000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00624000
         USING @PSTART,@11                                              00625000
*       END I12;                    /* PLACE NEW SEGMENT IN SEQUENCE    00626000
*                                      SET                           */ 00627000
*       RWORK2=PLHIBUFC->BUFCBAD;   /* POINT TO INDEX BUFFER         */ 00628000
         L     @10,PLHIBUFC(,RPLH)                                 0381 00629000
         L     RWORK2,BUFCBAD(,@10)                                0381 00630000
*       RWORK3=RWORK2+RWORK2->IXHFSO-/* POINT TO FIRST UNUSED        */ 00631000
*           RWORK2->IXHFLPLN+       /* POINTER IN THE SEQ SET        */ 00632000
*           LENGTH(IBFLPF)+         /* FREE LIST                     */ 00633000
*           LENGTH(IBFLPL);         /*                               */ 00634000
         LR    RWORK3,RWORK2                                       0382 00635000
         LH    @10,IXHFSO(,RWORK2)                                 0382 00636000
         ALR   RWORK3,@10                                          0382 00637000
         SLR   @10,@10                                             0382 00638000
         IC    @10,IXHFLPLN(,RWORK2)                               0382 00639000
         SLR   RWORK3,@10                                          0382 00640000
         AL    RWORK3,@CF00155                                     0382 00641000
*       RWORK4=RWORK2->IXHPTLS;     /* GET MASK FROM HEADER          */ 00642000
         SLR   RWORK4,RWORK4                                       0383 00643000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0383 00644000
*       RPARM1=ZERO;                /* CLEAR PICKUP REGISTER         */ 00645000
         SLR   RPARM1,RPARM1                                       0384 00646000
*       GEN(EX  RWORK4,PICKPT);     /* EXTRACT THE POINTER           */ 00647000
         EX  RWORK4,PICKPT                                              00648000
*       RBUFC->BUFCORBA=RWORK2->IXHBRBA+/* COMPUTE THE RBA OF THE    */ 00649000
*           AMBLDTA->AMBDSB->       /* BUFFER WHICH WAS JUST         */ 00650000
*           AMDCINV*RPARM1;         /* FILLED                        */ 00651000
         L     @10,RPLDACB(,RRPL)                                  0386 00652000
         L     @10,ACBAMBL(,@10)                                   0386 00653000
         L     @10,AMBLDTA(,@10)                                   0386 00654000
         L     @10,AMBDSB(,@10)                                    0386 00655000
         LR    @15,RPARM1                                          0386 00656000
         M     @14,AMDCINV(,@10)                                   0386 00657000
         AL    @15,IXHBRBA(,RWORK2)                                0386 00658000
         ST    @15,BUFCORBA(,RBUFC)                                0386 00659000
*       RBUFC->BUFCDDDD=RBUFC->BUFCORBA;/* SET INPUT RBA             */ 00660000
         ST    @15,BUFCDDDD(,RBUFC)                                0387 00661000
*       RPARM1=ZERO;                /* CLEAR                         */ 00662000
         SLR   RPARM1,RPARM1                                       0388 00663000
*       GEN(EX  RWORK4,STOREPT);    /* REMOVE POINTER FROM FREELIST  */ 00664000
         EX  RWORK4,STOREPT                                             00665000
*       RWORK2->IXHFSO=RWORK2->IXHFSO/* ADJUST OFFSET TO             */ 00666000
*           -RWORK2->IXHFLPLN+      /* FREESPACE AREA IN             */ 00667000
*           LENGTH(IBFLPF)+         /* SEQ SET                       */ 00668000
*           LENGTH(IBFLPL);         /*                               */ 00669000
         LH    @10,IXHFSO(,RWORK2)                                 0390 00670000
         SLR   @09,@09                                             0390 00671000
         IC    @09,IXHFLPLN(,RWORK2)                               0390 00672000
         SLR   @10,@09                                             0390 00673000
         AL    @10,@CF00155                                        0390 00674000
         STH   @10,IXHFSO(,RWORK2)                                 0390 00675000
*       IF AMBJRN=ON THEN           /* JOURNAL EXIT REQUIRED         */ 00676000
         TM    AMBJRN(RAMB),B'00000010'                            0391 00677000
         BNO   @RF00391                                            0391 00678000
*         CALL IDAJRNSR;            /* YES, GO JOURNAL               */ 00679000
         L     @15,@CA01061                                        0392 00680000
         BALR  @14,@15                                             0392 00681000
*     END;                          /*                               */ 00682000
@RF00391 LA    @10,1                                               0393 00683000
         AH    @10,PLHSRCSG(,RPLH)                                 0393 00684000
@DE00363 STH   @10,PLHSRCSG(,RPLH)                                 0393 00685000
         CH    @10,PLHNOSEG(,RPLH)                                 0393 00686000
         BNH   @DL00363                                            0393 00687000
*     RFY                                                          0394 00688000
*      (RWORK2,                                                    0394 00689000
*       RWORK3,                                                    0394 00690000
*       RWORK4) UNRSTD;             /*                               */ 00691000
*     RBUFC=PLHIBUFC;               /* POINT RBUFC TO SEQ SET        */ 00692000
         L     RBUFC,PLHIBUFC(,RPLH)                               0395 00693000
*     RBUFC->BUFCORBA=RBUFC->BUFCDDDD;/* SET OUTPUT RBA              */ 00694000
         L     @10,BUFCDDDD(,RBUFC)                                0396 00695000
         ST    @10,BUFCORBA(,RBUFC)                                0396 00696000
*     RBUFC->BUFCMW=ON;             /* SET MUST WRITE                */ 00697000
         OI    BUFCMW(RBUFC),B'10000000'                           0397 00698000
*I13:                                                              0398 00699000
*     DO;                           /* IDACALL(IDAWRBFR)             */ 00700000
I13      DS    0H                                                  0399 00701000
*       CALL IDAWRBFR;              /* EXIT TO IDAWRBFR              */ 00702000
         L     @15,@CV01011                                        0399 00703000
         BALR  @14,@15                                             0399 00704000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00705000
         BALR @11,0                                                     00706000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00707000
         USING *,@11                                                    00708000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00709000
         L     @11,=A(@PSTART)                                          00710000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00711000
         USING @PSTART,@11                                              00712000
*     END I13;                      /* WRITE SEQ SET                 */ 00713000
*I14:                                                              0405 00714000
*     DO;                           /* IDACALL(IDAIVIXB)             */ 00715000
I14      DS    0H                                                  0406 00716000
*       CALL IDAIVIXB;              /* EXIT TO IDAIVIXB              */ 00717000
         L     @15,@CV01008                                        0406 00718000
         BALR  @14,@15                                             0406 00719000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00720000
         BALR @11,0                                                     00721000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00722000
         USING *,@11                                                    00723000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00724000
         L     @11,=A(@PSTART)                                          00725000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00726000
         USING @PSTART,@11                                              00727000
*     END I14;                      /* INVALIDATE OTHER COPIES       */ 00728000
*     RAMB=AMBLDTA;                 /* POINT TO DATA CBS             */ 00729000
         L     @10,RPLDACB(,RRPL)                                  0412 00730000
         L     @10,ACBAMBL(,@10)                                   0412 00731000
         L     RAMB,AMBLDTA(,@10)                                  0412 00732000
*     PLHFSP=PLHDBUFC->BUFCBAD;     /* SHOW CURRENT BUFFER OUT       */ 00733000
         L     @10,PLHDBUFC(,RPLH)                                 0413 00734000
         L     @10,BUFCBAD(,@10)                                   0413 00735000
         ST    @10,PLHFSP(,RPLH)                                   0413 00736000
*     IF RPLSEQ=OFF&AMBLSR=OFF&     /* IS INSERT BUFFER ON           */ 00737000
*         AMBGSR=OFF THEN           /* CHAIN OF BUFFERS              */ 00738000
         TM    RPLSEQ(RRPL),B'00100000'                            0414 00739000
         BNZ   @RF00414                                            0414 00740000
         TM    AMBLSR(RAMB),B'01100000'                            0414 00741000
         BNZ   @RF00414                                            0414 00742000
*       DO;                         /* YES                           */ 00743000
*         RBUFC=DIWBUFC;            /* SET RBUFC TO DI BUFC          */ 00744000
         L     @10,AMBIWA(,RAMB)                                   0416 00745000
         L     RBUFC,DIWBUFC(,@10)                                 0416 00746000
*I15:                                                              0417 00747000
*         DO;                       /* IDACALL(IDASBF)               */ 00748000
I15      DS    0H                                                  0418 00749000
*           CALL IDASBF;            /* EXIT TO IDASBF                */ 00750000
         L     @15,@CV01009                                        0418 00751000
         BALR  @14,@15                                             0418 00752000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00753000
         BALR @11,0                                                     00754000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00755000
         USING *,@11                                                    00756000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00757000
         L     @11,=A(@PSTART)                                          00758000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00759000
         USING @PSTART,@11                                              00760000
*         END I15;                  /* SUBTRACT BUFFER               */ 00761000
*       END;                        /*                               */ 00762000
*     DIWATV=ZERO;                  /* FREE DI WORK AREA             */ 00763000
@RF00414 L     @10,AMBIWA(,RAMB)                                   0425 00764000
         MVI   DIWATV(@10),X'00'                                   0425 00765000
*     PLHLRECL=RPLRLEN;             /* SAVE RECORD LENGTH            */ 00766000
         L     @10,RPLRLEN(,RRPL)                                  0426 00767000
         ST    @10,PLHLRECL(,RPLH)                                 0426 00768000
*     CALL EXIT;                    /* RETURN TO CALLER              */ 00769000
         BAL   @14,EXIT                                            0427 00770000
*   END;                            /* END OF INSERT CODE            */ 00771000
*                                                                  0429 00772000
*   /*****************************************************************/ 00773000
*   /*                                                               */ 00774000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00775000
*   /* IDADARTV SUBROUTINE RETRIEVES A SPANNED RECORD FROM EXTERNAL  */ 00776000
*   /* STORAGE AND PLACES IT IN THE USER AREA * * * * * * * * * * * **/ 00777000
*   /* * * * * * * * * * * * * * * * * * * *                         */ 00778000
*   /*                                                               */ 00779000
*   /*****************************************************************/ 00780000
*                                                                  0429 00781000
*IDADARTV:                                                         0429 00782000
*   ENTRY;                          /*                               */ 00783000
@EP00429 DS    0H                                                  0430 00784000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 00785000
         IDASVR14                                                       00786000
*   IF RPLADR=ON&AMDDST='1'B THEN   /* KSDS WITH ADDRESSED PROCESSING   00787000
*                                      OPTION                        */ 00788000
         TM    RPLADR(RRPL),B'01000000'                            0431 00789000
         BNO   @RF00431                                            0431 00790000
         L     @10,AMBDSB(,RAMB)                                   0431 00791000
         TM    AMDDST(@10),B'10000000'                             0431 00792000
         BNO   @RF00431                                            0431 00793000
*     DO;                           /* YES, CANT ALLOW THAT          */ 00794000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 00795000
         MVI   RPLERREG(RRPL),X'08'                                0433 00796000
*       RPLERRCD=RPLARSRK;          /* SET SPECIFIC ERROR CODE       */ 00797000
         MVI   RPLERRCD(RRPL),X'88'                                0434 00798000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 00799000
         BAL   @14,EXIT                                            0435 00800000
*     END;                          /*                               */ 00801000
*   RPLDDDD=BUFCDDDD;               /* SAVE RBA OF 1ST SEG.          */ 00802000
@RF00431 L     @10,PLHDBUFC(,RPLH)                                 0437 00803000
         L     @05,BUFCDDDD(,@10)                                  0437 00804000
         ST    @05,RPLDDDD(,RRPL)                                  0437 00805000
*   PLHDDDD=BUFCDDDD;               /* SAVE RBA              @ZA07544*/ 00806000
         ST    @05,PLHDDDD(,RPLH)                                  0438 00807000
*   IF AMDDST='1'B THEN             /* KSDS                          */ 00808000
         L     @05,AMBDSB(,RAMB)                                   0439 00809000
         TM    AMDDST(@05),B'10000000'                             0439 00810000
         BNO   @RF00439                                            0439 00811000
*     DO;                           /* YES, MUST SAVE KEY            */ 00812000
*       RFY                                                        0441 00813000
*        (RWORK2,                                                  0441 00814000
*         RWORK3,                                                  0441 00815000
*         RWORK4,                                                  0441 00816000
*         RWORK5) RSTD;             /*                               */ 00817000
*       RWORK2=ADDR(PLHKEY);        /* 'TO' ADDRESS AT PLH KEY       */ 00818000
         L     RWORK2,PLHKEYPT(,RPLH)                              0442 00819000
*       RWORK3=AMDKEYLN;            /* KEY LENGTH                    */ 00820000
         LH    RWORK3,AMDKEYLN(,@05)                               0443 00821000
*       RWORK5=RWORK3;              /* DITTO                         */ 00822000
         LR    RWORK5,RWORK3                                       0444 00823000
*       RWORK4=BUFCBAD+AMDRKP;      /* 'FROM' ADDRESS AT KEY         */ 00824000
         LH    RWORK4,AMDRKP(,@05)                                 0445 00825000
         AL    RWORK4,BUFCBAD(,@10)                                0445 00826000
*       GEN(MVCL   RWORK2,RWORK4);  /* MOVE KEY TO PLH               */ 00827000
         MVCL   RWORK2,RWORK4                                           00828000
*       RFY                                                        0447 00829000
*        (RWORK2,                                                  0447 00830000
*         RWORK3,                                                  0447 00831000
*         RWORK4,                                                  0447 00832000
*         RWORK5) UNRSTD;           /*                               */ 00833000
*     END;                          /*                               */ 00834000
*   IF RPLLOC=ON THEN               /* USER SPECIFY LOCATE MODE IN 0449 00835000
*                                      HIS RPL                       */ 00836000
@RF00439 TM    RPLLOC(RRPL),B'10000000'                            0449 00837000
         BNO   @RF00449                                            0449 00838000
*     DO;                           /* YES, ERROR                    */ 00839000
*       PLHSRINV=ON;                /* SET SPANNED RECORD EXCEPTION     00840000
*                                      FLAG                          */ 00841000
         OI    PLHSRINV(RPLH),B'00010000'                          0451 00842000
*       RPLERREG='08'X;             /* SHOW LOGICAL ERROR            */ 00843000
         MVI   RPLERREG(RRPL),X'08'                                0452 00844000
*       RPLERRCD=RPLSRLOC;          /* SHOW SPECIFIC CODE            */ 00845000
         MVI   RPLERRCD(RRPL),X'84'                                0453 00846000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 00847000
         BAL   @14,EXIT                                            0454 00848000
*     END;                          /*                               */ 00849000
*   RESPECIFY                                                      0456 00850000
*     RWORK1 RSTD;                  /*                               */ 00851000
@RF00449 DS    0H                                                  0457 00852000
*   PLHSRSID=PLHRDFP->RDFLL;        /* MOVE ID CONTENTS TO PLH       */ 00853000
         L     @10,PLHRDFP(,RPLH)                                  0457 00854000
         MVC   PLHSRSID(2,RPLH),RDFLL(@10)                         0457 00855000
*   PLHLRECL=ZERO;                  /* PREPARE TO ACCUMULATE RECORD     00856000
*                                      LENGTH                        */ 00857000
         SLR   @10,@10                                             0458 00858000
         ST    @10,PLHLRECL(,RPLH)                                 0458 00859000
*   IF((RPLBWD=OFF|RPLKEY=ON)&      /* IF FORWARD OR KEYED AND       */ 00860000
*       (PLHRDFP->RDFNOT1=OFF&      /* NOT THE FIRST SEGMENT         */ 00861000
*       PLHRDFP->RDF1ST=ON))|       /* OR                            */ 00862000
*       (RPLBWD=ON&                 /* BACKWARD AND NOT THE          */ 00863000
*       (PLHRDFP->RDFNOT1=ON&       /* LAST SEGMENT OF        SPANNED*/ 00864000
*       PLHRDFP->RDF1ST=OFF)) THEN  /* RECORD                        */ 00865000
         TM    RPLKEY(RRPL),B'10000000'                            0459 00866000
         BNZ   @GL00009                                            0459 00867000
         TM    RPLBWD(RRPL),B'00010000'                            0459 00868000
         BO    @GL00008                                            0459 00869000
@GL00009 L     @10,PLHRDFP(,RPLH)                                  0459 00870000
         TM    RDF1ST(@10),B'00010000'                             0459 00871000
         BNO   @GL00008                                            0459 00872000
         TM    RDFNOT1(@10),B'00100000'                            0459 00873000
         BZ    @RT00459                                            0459 00874000
@GL00008 TM    RPLBWD(RRPL),B'00010000'                            0459 00875000
         BNO   @RF00459                                            0459 00876000
         L     @10,PLHRDFP(,RPLH)                                  0459 00877000
         TM    RDFNOT1(@10),B'00100000'                            0459 00878000
         BNO   @RF00459                                            0459 00879000
         TM    RDF1ST(@10),B'00010000'                             0459 00880000
         BNZ   @RF00459                                            0459 00881000
@RT00459 DS    0H                                                  0460 00882000
*     PLHSRBSG=OFF;                 /* CLEAR INCONSISTENT BIT        */ 00883000
         NI    PLHSRBSG(RPLH),B'01111111'                          0460 00884000
*   ELSE                            /* IF FIRST, SET THE             */ 00885000
*     PLHSRBSG=ON;                  /* INCONSISTANT FLAG BIT         */ 00886000
         B     @RC00459                                            0461 00887000
@RF00459 OI    PLHSRBSG(RPLH),B'10000000'                          0461 00888000
*   PLHRAHD=ON;                     /* SET READ AHEAD ON FOR BUFFER     00889000
*                                      MANAGER                       */ 00890000
@RC00459 OI    PLHRAHD(RPLH),B'01000000'                           0462 00891000
*   RESPECIFY                                                      0463 00892000
*     RWORK0 RSTD;                  /*                               */ 00893000
*   PLHSRCSG=ONE;                   /* SET SEGMENT COUNT TO 1        */ 00894000
         MVC   PLHSRCSG(2,RPLH),@CH00053                           0464 00895000
*   RWORK0=ZERO;                    /* CLEAR SWITCH                  */ 00896000
         SLR   RWORK0,RWORK0                                       0465 00897000
*   RFY                                                            0466 00898000
*    (RWORK1,                                                      0466 00899000
*     RWORK2,                                                      0466 00900000
*     RWORK3,                                                      0466 00901000
*     RWORK4,                                                      0466 00902000
*     RWORK5) RSTD;                 /*                               */ 00903000
*   DO WHILE RWORK0=ZERO;           /* LOOP COVERS ALL SEGS.         */ 00904000
         B     @DE00467                                            0467 00905000
@DL00467 DS    0H                                                  0468 00906000
*     IF PLHRDFP->RDFLL^=PLHSRSID THEN/* SEGMENT ID OK               */ 00907000
         L     @10,PLHRDFP(,RPLH)                                  0468 00908000
         CLC   RDFLL(2,@10),PLHSRSID(RPLH)                         0468 00909000
         BE    @RF00468                                            0468 00910000
*       PLHSRBSG=ON;                /* NO, SET REMINDER              */ 00911000
         OI    PLHSRBSG(RPLH),B'10000000'                          0469 00912000
*     RWORK1=PLHRDFP+LENGTH(IDARDF);/* POINT TO LENGTH RDF           */ 00913000
@RF00468 LA    RWORK1,3                                            0470 00914000
         AL    RWORK1,PLHRDFP(,RPLH)                               0470 00915000
*     IF PLHLRECL+RWORK1->RDFLL>RPLBUFL THEN/* DOES ROOM EXIST IN  0471 00916000
*                                      USERS AREA FOR THIS SEGMENT   */ 00917000
         SLR   @10,@10                                             0471 00918000
         ICM   @10,3,RDFLL(RWORK1)                                 0471 00919000
         AL    @10,PLHLRECL(,RPLH)                                 0471 00920000
         C     @10,RPLBUFL(,RRPL)                                  0471 00921000
         BNH   @RF00471                                            0471 00922000
*       DO;                         /* NO                            */ 00923000
*         PLHRAHD=OFF;              /* STOP READ AHEAD               */ 00924000
         NI    PLHRAHD(RPLH),B'10111111'                           0473 00925000
*         PLHSRINV=ON;              /* SET EXCEPTION FLAG ON         */ 00926000
         OI    PLHSRINV(RPLH),B'00010000'                          0474 00927000
*         RPLERREG='08'X;           /* SET LOGICAL ERROR             */ 00928000
         MVI   RPLERREG(RRPL),X'08'                                0475 00929000
*         RPLERRCD=RPLINBUF;        /* SET SPECIFIC ERROR            */ 00930000
         MVI   RPLERRCD(RRPL),X'2C'                                0476 00931000
*         CALL EXIT;                /* RETURN TO CALLER              */ 00932000
         BAL   @14,EXIT                                            0477 00933000
*       END;                        /*                               */ 00934000
*     RWORK2=RPLAREA+PLHLRECL;      /* POINT TO NEXT BYTE TO BE    0479 00935000
*                                      FILLED IN USERS AREA          */ 00936000
@RF00471 L     RWORK2,RPLAREA(,RRPL)                               0479 00937000
         AL    RWORK2,PLHLRECL(,RPLH)                              0479 00938000
*     IF RPLBWD=ON&AMDDST='0'B&PLHSRCSG^=ONE THEN/* IF ESDS AND    0480 00939000
*                                      BACKWARD, THE RETRIEVAL ORDER    00940000
*                                      IS BACKWARDS                  */ 00941000
         TM    RPLBWD(RRPL),B'00010000'                            0480 00942000
         BNO   @RF00480                                            0480 00943000
         L     @10,AMBDSB(,RAMB)                                   0480 00944000
         TM    AMDDST(@10),B'10000000'                             0480 00945000
         BNZ   @RF00480                                            0480 00946000
         CLC   PLHSRCSG(2,RPLH),@CH00053                           0480 00947000
         BE    @RF00480                                            0480 00948000
*       CALL SLIDESEG;              /* SO MOVE EXISTING DATA TO RIGHT   00949000
*                                      TO MAKE ROOM                  */ 00950000
         BAL   @14,SLIDESEG                                        0481 00951000
*     RWORK1=PLHRDFP+LENGTH(IDARDF);/* POINT TO LENGTH RDF           */ 00952000
@RF00480 LA    RWORK1,3                                            0482 00953000
         AL    RWORK1,PLHRDFP(,RPLH)                               0482 00954000
*     RWORK3=RWORK1->RDFLL;         /* SET MOVE LENGTH               */ 00955000
         SLR   RWORK3,RWORK3                                       0483 00956000
         ICM   RWORK3,3,RDFLL(RWORK1)                              0483 00957000
*     RWORK5=RWORK3;                /* DITTO                         */ 00958000
         LR    RWORK5,RWORK3                                       0484 00959000
*     RWORK4=BUFCBAD;               /* SET 'FROM' LENGTH             */ 00960000
         L     @10,PLHDBUFC(,RPLH)                                 0485 00961000
         L     RWORK4,BUFCBAD(,@10)                                0485 00962000
*     PLHLRECL=PLHLRECL+RWORK3;     /* BUMP TOTAL BYTES MOVED        */ 00963000
         LR    @10,RWORK3                                          0486 00964000
         AL    @10,PLHLRECL(,RPLH)                                 0486 00965000
         ST    @10,PLHLRECL(,RPLH)                                 0486 00966000
*     GEN(MVCL  RWORK2,RWORK4);     /* MOVE SEGMENT TO BUFFER        */ 00967000
         MVCL  RWORK2,RWORK4                                            00968000
*     RFY                                                          0488 00969000
*      (RWORK1,                                                    0488 00970000
*       RWORK2,                                                    0488 00971000
*       RWORK3,                                                    0488 00972000
*       RWORK4,                                                    0488 00973000
*       RWORK5) UNRSTD;             /*                               */ 00974000
*     IF AMBJRN=ON THEN             /* JOURNAL EXIT REQUIRED         */ 00975000
         TM    AMBJRN(RAMB),B'00000010'                            0489 00976000
         BNO   @RF00489                                            0489 00977000
*       DO;                         /* YES                           */ 00978000
*         RBUFC=PLHDBUFC;           /* SET RBUFC FOR IDAJRNSR        */ 00979000
         L     RBUFC,PLHDBUFC(,RPLH)                               0491 00980000
*         CALL IDAJRNSR;            /* GO JOURNAL                    */ 00981000
         L     @15,@CA01061                                        0492 00982000
         BALR  @14,@15                                             0492 00983000
*       END;                        /*                               */ 00984000
*     IF((RPLBWD=OFF|RPLKEY=ON)&    /* IS DIRECTION FORWARD OR       */ 00985000
*         (PLHRDFP->RDFNOT1=ON&     /* KEYED MODE AND SEGMENT        */ 00986000
*         PLHRDFP->RDF1ST=OFF))|    /* IS THE LAST OR                */ 00987000
*         (RPLBWD=ON&RPLADR=ON)&    /* BACKWARD DIRECTION AND        */ 00988000
*         (PLHRDFP->RDFNOT1=OFF&    /* ESDS AND THE                  */ 00989000
*         PLHRDFP->RDF1ST=ON) THEN  /* SEGMENT IS THE FIRST          */ 00990000
@RF00489 TM    RPLKEY(RRPL),B'10000000'                            0494 00991000
         BNZ   @GL00014                                            0494 00992000
         TM    RPLBWD(RRPL),B'00010000'                            0494 00993000
         BO    @GL00013                                            0494 00994000
@GL00014 L     @10,PLHRDFP(,RPLH)                                  0494 00995000
         TM    RDFNOT1(@10),B'00100000'                            0494 00996000
         BNO   @GL00013                                            0494 00997000
         TM    RDF1ST(@10),B'00010000'                             0494 00998000
         BZ    @RT00494                                            0494 00999000
@GL00013 TM    RPLBWD(RRPL),B'01010000'                            0494 01000000
         BNO   @RF00494                                            0494 01001000
         L     @10,PLHRDFP(,RPLH)                                  0494 01002000
         TM    RDF1ST(@10),B'00010000'                             0494 01003000
         BNO   @RF00494                                            0494 01004000
         TM    RDFNOT1(@10),B'00100000'                            0494 01005000
         BNZ   @RF00494                                            0494 01006000
@RT00494 DS    0H                                                  0495 01007000
*       RWORK0=ONE;                 /* YES, SET SWITCH               */ 01008000
         LA    RWORK0,1                                            0495 01009000
*     ELSE                          /* NO                            */ 01010000
*       DO;                         /* PROCEED WITH NEXT SEG         */ 01011000
         B     @RC00494                                            0496 01012000
@RF00494 DS    0H                                                  0497 01013000
*         RBUFC=PLHDBUFC;           /* REESTABLISH BUFC              */ 01014000
         L     RBUFC,PLHDBUFC(,RPLH)                               0497 01015000
*I16:                                                              0498 01016000
*         DO;                       /* IDACALL(IDAFREEB)             */ 01017000
I16      DS    0H                                                  0499 01018000
*           CALL IDAFREEB;          /* EXIT TO IDAFREEB              */ 01019000
         L     @15,@CV01006                                        0499 01020000
         BALR  @14,@15                                             0499 01021000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01022000
         BALR @11,0                                                     01023000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01024000
         USING *,@11                                                    01025000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01026000
         L     @11,=A(@PSTART)                                          01027000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01028000
         USING @PSTART,@11                                              01029000
*         END I16;                  /* FREE BUFFER                   */ 01030000
*I17:                                                              0505 01031000
*         DO;                       /* IDACALL(IDAGNXT)              */ 01032000
I17      DS    0H                                                  0506 01033000
*           CALL IDAGNXT;           /* EXIT TO IDAGNXT               */ 01034000
         L     @15,@CV01007                                        0506 01035000
         BALR  @14,@15                                             0506 01036000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01037000
         BALR @11,0                                                     01038000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01039000
         USING *,@11                                                    01040000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01041000
         L     @11,=A(@PSTART)                                          01042000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01043000
         USING @PSTART,@11                                              01044000
*         END I17;                  /* GET NEXT SEGMENT              */ 01045000
*         IF RPLERREG^=ZERO THEN    /* ANY I/O ERRORS                */ 01046000
         CLI   RPLERREG(RRPL),0                                    0512 01047000
         BE    @RF00512                                            0512 01048000
*           DO;                     /* YES                           */ 01049000
*             PLHRAHD=OFF;          /* KILL READ AHEAD               */ 01050000
*             PLHSRBSG=OFF;         /* CLEAR INCONSISTANT SEGS       */ 01051000
         NI    PLHRAHD(RPLH),B'00111111'                           0515 01052000
*             IF RPLERREG='08'X&    /* EXCL CNTL ERR?        @ZA07544*/ 01053000
*                 RPLERRCD=RPLEXCL THEN/* IF SO,             @ZA07544*/ 01054000
         CLI   RPLERREG(RRPL),8                                    0516 01055000
         BNE   @RF00516                                            0516 01056000
         CLI   RPLERRCD(RRPL),20                                   0516 01057000
         BNE   @RF00516                                            0516 01058000
*               DO;                 /* CAUSE SCANDATA        @ZA07544*/ 01059000
*                 PLHNOADV=ON;      /* NO ADV OF PLH         @ZA07544*/ 01060000
*                 PLHDSCAN=ON;      /* DO SCANDATA           @ZA07544*/ 01061000
         OI    PLHNOADV(RPLH),B'00001001'                          0519 01062000
*               END;                /* END EXCL CNTL         @ZA07544*/ 01063000
*             CALL EXIT;            /* RETURN TO CALLER              */ 01064000
@RF00516 BAL   @14,EXIT                                            0521 01065000
*           END;                    /*                               */ 01066000
*         RWORK0=ZERO;              /* ASSURE RWORK0 IS CLEAN        */ 01067000
@RF00512 SLR   RWORK0,RWORK0                                       0523 01068000
*         PLHRECP=RBUFC->BUFCBAD;   /* SET RECORD PTR                */ 01069000
         L     @10,BUFCBAD(,RBUFC)                                 0524 01070000
         ST    @10,PLHRECP(,RPLH)                                  0524 01071000
*         PLHRDFP=RBUFC->BUFCBAD+AMDCINV/* SET RDF POINTER           */ 01072000
*             -LENGTH(IDACIDF)      /*                               */ 01073000
*             -TWO*(LENGTH(IDARDF));/*                               */ 01074000
         L     @05,AMBDSB(,RAMB)                                   0525 01075000
         AL    @10,AMDCINV(,@05)                                   0525 01076000
         SL    @10,@CF00314                                        0525 01077000
         ST    @10,PLHRDFP(,RPLH)                                  0525 01078000
*         IF((RPLBWD=OFF|RPLKEY=ON)&/* IS DIRECTION FORWARD OR       */ 01079000
*             (PLHRDFP->RDFNOT1=OFF))|/* KEYED MODE AND 1ST SEG      */ 01080000
*             ((RPLBWD=ON&RPLADR=ON)&/* OR BACKWARD AND ADDR         */ 01081000
*             PLHRDFP->RDF1ST=OFF) THEN/* AND SEGMENT IS LAST        */ 01082000
         TM    RPLKEY(RRPL),B'10000000'                            0526 01083000
         BNZ   @GL00018                                            0526 01084000
         TM    RPLBWD(RRPL),B'00010000'                            0526 01085000
         BO    @GL00017                                            0526 01086000
@GL00018 L     @10,PLHRDFP(,RPLH)                                  0526 01087000
         TM    RDFNOT1(@10),B'00100000'                            0526 01088000
         BZ    @RT00526                                            0526 01089000
@GL00017 TM    RPLBWD(RRPL),B'01010000'                            0526 01090000
         BNO   @RF00526                                            0526 01091000
         L     @10,PLHRDFP(,RPLH)                                  0526 01092000
         TM    RDF1ST(@10),B'00010000'                             0526 01093000
         BNZ   @RF00526                                            0526 01094000
@RT00526 DS    0H                                                  0527 01095000
*           DO;                     /* YES                           */ 01096000
*             RWORK0=ONE;           /* QUIT TO AVOID LOOP            */ 01097000
         LA    RWORK0,1                                            0528 01098000
*             PLHSRBSG=ON;          /* SET INCONSISTANT SEGMENTS ON  */ 01099000
         OI    PLHSRBSG(RPLH),B'10000000'                          0529 01100000
*           END;                    /*                               */ 01101000
*         PLHSRCSG=PLHSRCSG+ONE;    /* BUMP SEGMENT COUNT            */ 01102000
@RF00526 LA    @10,1                                               0531 01103000
         AH    @10,PLHSRCSG(,RPLH)                                 0531 01104000
         STH   @10,PLHSRCSG(,RPLH)                                 0531 01105000
*       END;                        /*                               */ 01106000
*     RFY                                                          0533 01107000
*      (RWORK1,                                                    0533 01108000
*       RWORK2,                                                    0533 01109000
*       RWORK3,                                                    0533 01110000
*       RWORK4,                                                    0533 01111000
*       RWORK5) RSTD;               /*                               */ 01112000
@RC00494 DS    0H                                                  0534 01113000
*   END;                            /*                               */ 01114000
@DE00467 LTR   RWORK0,RWORK0                                       0534 01115000
         BZ    @DL00467                                            0534 01116000
*   RFY                                                            0535 01117000
*    (RWORK1,                                                      0535 01118000
*     RWORK2,                                                      0535 01119000
*     RWORK3,                                                      0535 01120000
*     RWORK4,                                                      0535 01121000
*     RWORK5) UNRSTD;               /*                               */ 01122000
*   PLHRAHD=OFF;                    /* SET READ AHEAD OFF            */ 01123000
         NI    PLHRAHD(RPLH),B'10111111'                           0536 01124000
*   RPLRLEN=PLHLRECL;               /* GIVE RECORD LENGTH TO USER    */ 01125000
         L     @10,PLHLRECL(,RPLH)                                 0537 01126000
         ST    @10,RPLRLEN(,RRPL)                                  0537 01127000
*   IF RPLBWD=ON&AMDDST='0'B THEN   /* IF BACKWARDS & ESDS           */ 01128000
         TM    RPLBWD(RRPL),B'00010000'                            0538 01129000
         BNO   @RF00538                                            0538 01130000
         L     @10,AMBDSB(,RAMB)                                   0538 01131000
         TM    AMDDST(@10),B'10000000'                             0538 01132000
         BNZ   @RF00538                                            0538 01133000
*     RPLDDDD=BUFCDDDD;             /* GET RBA FROM BUFC             */ 01134000
         L     @10,PLHDBUFC(,RPLH)                                 0539 01135000
         L     @10,BUFCDDDD(,@10)                                  0539 01136000
         ST    @10,RPLDDDD(,RRPL)                                  0539 01137000
*   PLHDDDD=RPLDDDD;                /* SAVE LAST RBA                 */ 01138000
@RF00538 L     @10,RPLDDDD(,RRPL)                                  0540 01139000
         ST    @10,PLHDDDD(,RPLH)                                  0540 01140000
*   PLHFSP=RBUFC->BUFCBAD+          /* SET FREE SPACE POINTER        */ 01141000
*       PLHRDFP->RDFLL;             /*                               */ 01142000
         L     @10,PLHRDFP(,RPLH)                                  0541 01143000
         SLR   @05,@05                                             0541 01144000
         ICM   @05,3,RDFLL(@10)                                    0541 01145000
         AL    @05,BUFCBAD(,RBUFC)                                 0541 01146000
         ST    @05,PLHFSP(,RPLH)                                   0541 01147000
*   IF RPLBWD=OFF THEN              /* IF DIRECTION FORWARD          */ 01148000
         TM    RPLBWD(RRPL),B'00010000'                            0542 01149000
         BNZ   @RF00542                                            0542 01150000
*     PLHRECP=PLHFSP;               /* SHOW BUFFER EXHAUSTED         */ 01151000
         ST    @05,PLHRECP(,RPLH)                                  0543 01152000
*   CALL EXIT;                      /* RETURN                        */ 01153000
@RF00542 BAL   @14,EXIT                                            0544 01154000
*                                                                  0545 01155000
*   /*****************************************************************/ 01156000
*   /*                                                               */ 01157000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01158000
*   /* SLIDESEG SUBROUTINE FUNCTION: MOVES EXISTING DATA IN USERS    */ 01159000
*   /* AREA TO THE RIGHT TO MAKE ROOM FOR THE NEXT SEGMENT. * * * * **/ 01160000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * *           */ 01161000
*   /*                                                               */ 01162000
*   /*****************************************************************/ 01163000
*                                                                  0545 01164000
*SLIDESEG:                                                         0545 01165000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01166000
         B     @PB00002                                            0545 01167000
SLIDESEG DS    0H                                                  0546 01168000
*   RFY                                                            0546 01169000
*    (RWORK0,                                                      0546 01170000
*     RWORK1,                                                      0546 01171000
*     RWORK2,                                                      0546 01172000
*     RWORK3,                                                      0546 01173000
*     RWORK4,                                                      0546 01174000
*     RWORK5,                                                      0546 01175000
*     R14,                                                         0546 01176000
*     R15) RSTD;                    /*                               */ 01177000
*   R15=PLHRDFP+LENGTH(IDARDF);     /* POINT TO LENGTH RDF           */ 01178000
         LA    R15,3                                               0547 01179000
         AL    R15,PLHRDFP(,RPLH)                                  0547 01180000
*   DO WHILE RWORK0=ZERO;           /*                               */ 01181000
         B     @DE00548                                            0548 01182000
@DL00548 DS    0H                                                  0549 01183000
*     RWORK3=ZERO;                  /* CLEAR                         */ 01184000
         SLR   RWORK3,RWORK3                                       0549 01185000
*     RWORK1=RWORK2;                /* SAVE POSITION                 */ 01186000
         LR    RWORK1,RWORK2                                       0550 01187000
*     RWORK4=RWORK2-R15->RDFLL;     /* SET FIRST 'FROM' ADD.         */ 01188000
         LR    RWORK4,RWORK2                                       0551 01189000
         SLR   @10,@10                                             0551 01190000
         ICM   @10,3,RDFLL(R15)                                    0551 01191000
         SLR   RWORK4,@10                                          0551 01192000
*     IF RWORK4^>RPLAREA THEN       /* IS 'FROM' ADDRESS OUTSIDE OF     01193000
*                                      USERS AREA                    */ 01194000
         L     @10,RPLAREA(,RRPL)                                  0552 01195000
         CR    RWORK4,@10                                          0552 01196000
         BH    @RF00552                                            0552 01197000
*       DO;                         /* YES                           */ 01198000
*         RWORK3=RPLAREA-RWORK4;    /* COMPUTE EXTRA AMOUNT          */ 01199000
         SLR   @10,RWORK4                                          0554 01200000
         LR    RWORK3,@10                                          0554 01201000
*         RWORK0=ONE;               /* CAUSE EXIT                    */ 01202000
         LA    RWORK0,1                                            0555 01203000
*       END;                        /*                               */ 01204000
*     RWORK2=RWORK2+RWORK3;         /* SET 'TO' ADDRESS              */ 01205000
@RF00552 ALR   RWORK2,RWORK3                                       0557 01206000
*     RWORK4=RWORK4+RWORK3;         /* SET 'FROM' ADDRESS            */ 01207000
         ALR   RWORK4,RWORK3                                       0558 01208000
*     RWORK5=R15->RDFLL-RWORK3;     /* SET MOVE AMOUNT               */ 01209000
         SLR   RWORK5,RWORK5                                       0559 01210000
         ICM   RWORK5,3,RDFLL(R15)                                 0559 01211000
         SLR   RWORK5,RWORK3                                       0559 01212000
*     RWORK3=RWORK5;                /* DITTO                         */ 01213000
         LR    RWORK3,RWORK5                                       0560 01214000
*     GEN(MVCL  RWORK2,RWORK4);     /* MOVE BLOCK TO RIGHT           */ 01215000
         MVCL  RWORK2,RWORK4                                            01216000
*     RWORK2=RWORK1-R15->RDFLL;     /* SET NEW 'TO' ADDRESS          */ 01217000
         LR    RWORK2,RWORK1                                       0562 01218000
         SLR   @10,@10                                             0562 01219000
         ICM   @10,3,RDFLL(R15)                                    0562 01220000
         SLR   RWORK2,@10                                          0562 01221000
*   END;                            /*                               */ 01222000
@DE00548 LTR   RWORK0,RWORK0                                       0563 01223000
         BZ    @DL00548                                            0563 01224000
*   RWORK2=RPLAREA;                 /* RESET TO BEGINNING OF BUFFER  */ 01225000
         L     RWORK2,RPLAREA(,RRPL)                               0564 01226000
*   RWORK0=ZERO;                    /* HOUSEKEEP                     */ 01227000
         SLR   RWORK0,RWORK0                                       0565 01228000
*   END SLIDESEG;                   /* RETURN                        */ 01229000
@EL00002 DS    0H                                                  0566 01230000
@EF00002 DS    0H                                                  0566 01231000
@ER00002 BR    @14                                                 0566 01232000
*   RFY                                                            0567 01233000
*    (RWORK0,                                                      0567 01234000
*     RWORK1,                                                      0567 01235000
*     RWORK2,                                                      0567 01236000
*     RWORK3,                                                      0567 01237000
*     RWORK4,                                                      0567 01238000
*     R14,                                                         0567 01239000
*     R15) UNRSTD;                  /*                               */ 01240000
*                                                                  0568 01241000
*   /*****************************************************************/ 01242000
*   /*                                                               */ 01243000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   */ 01244000
*   /* IDASPNPT ROUTINE FUNCTION: MAKES AN ENTRY INTO THE CURRENT    */ 01245000
*   /* INDEX RECORD FOR A NON-LAST SPANNED RECORD SEGMENT. ON ENTRY, */ 01246000
*   /* RWORK1 CONTAINS ADDRESS OF ICWA * * * * * * * * * * * * * * * */ 01247000
*   /* * * * * * * * * * * * * * * *                                 */ 01248000
*   /*                                                               */ 01249000
*   /*****************************************************************/ 01250000
*                                                                  0568 01251000
*IDASPNPT:                                                         0568 01252000
*   ENTRY;                                                         0568 01253000
@EP00568 DS    0H                                                  0568 01254000
@EC00568 DS    0H                                                  0569 01255000
*   RESPECIFY                                                      0569 01256000
*    (RWORK0,                                                      0569 01257000
*     RWORK1,                                                      0569 01258000
*     RWORK2,                                                      0569 01259000
*     RWORK3,                                                      0569 01260000
*     RWORK4,                                                      0569 01261000
*     R14) RSTD;                    /*                               */ 01262000
*   RESPECIFY                                                      0570 01263000
*     IDAICWA BASED(RWORK1);        /*                               */ 01264000
*   RWORK2=ICWBUFC->BUFCBAD;        /* POINT TO INDEX BUFFER         */ 01265000
         L     @15,ICWBUFC(,RWORK1)                                0571 01266000
         L     RWORK2,BUFCBAD(,@15)                                0571 01267000
*   RWORK3=RWORK2+RWORK2->IXHLEO;   /* POINT TO CURRENT POSITION IN     01268000
*                                      BUFFER                        */ 01269000
         LR    RWORK3,RWORK2                                       0572 01270000
         LH    @15,IXHLEO(,RWORK2)                                 0572 01271000
         ALR   RWORK3,@15                                          0572 01272000
*   RWORK3->IBFLPF=AMDKEYLN;        /* SET F BYTE TO KEY LEN         */ 01273000
         L     @15,AMBDSB(,RAMB)                                   0573 01274000
         LH    @15,AMDKEYLN(,@15)                                  0573 01275000
         STC   @15,IBFLPF(,RWORK3)                                 0573 01276000
*   RWORK3->IBFLPL=ZERO;            /* SET L BYTE TO ZERO            */ 01277000
         MVI   IBFLPL(RWORK3),X'00'                                0574 01278000
*   RWORK3=RWORK2+RWORK2->IXHFSO-   /* POINT TO NEXT POINTER         */ 01279000
*       ICWPTL;                     /* IN THE INDEX FREELIST         */ 01280000
         LR    RWORK3,RWORK2                                       0575 01281000
         LH    @15,IXHFSO(,RWORK2)                                 0575 01282000
         ALR   RWORK3,@15                                          0575 01283000
         SLR   @15,@15                                             0575 01284000
         IC    @15,ICWPTL(,RWORK1)                                 0575 01285000
         SLR   RWORK3,@15                                          0575 01286000
*   RWORK4=RWORK2->IXHPTLS;         /* GET MASK FROM HEADER          */ 01287000
         SLR   RWORK4,RWORK4                                       0576 01288000
         IC    RWORK4,IXHPTLS(,RWORK2)                             0576 01289000
*   RWORK0=RWORK3;                  /* REMEMBER PTR POSITION         */ 01290000
         LR    RWORK0,RWORK3                                       0577 01291000
*   GEN(EX  RWORK4,PICKPT);         /* EXTRACT POINTER               */ 01292000
         EX  RWORK4,PICKPT                                              01293000
*   RWORK3=RWORK2+RWORK2->IXHLEO-   /* POINT TO NEXT POINTER         */ 01294000
*       ICWPTL;                     /* TO LEFT IN INDEX RECORD       */ 01295000
         LR    RWORK3,RWORK2                                       0579 01296000
         LH    @15,IXHLEO(,RWORK2)                                 0579 01297000
         ALR   RWORK3,@15                                          0579 01298000
         SLR   @15,@15                                             0579 01299000
         IC    @15,ICWPTL(,RWORK1)                                 0579 01300000
         SLR   RWORK3,@15                                          0579 01301000
*   GEN(EX  RWORK4,STOREPT);        /* STORE PTR FROM FREELIST       */ 01302000
         EX  RWORK4,STOREPT                                             01303000
*   RPARM1=ZERO;                    /* CLEAR STORING REGISTER        */ 01304000
         SLR   RPARM1,RPARM1                                       0581 01305000
*   RWORK3=RWORK0;                  /* POINT BACK TO FREELIST        */ 01306000
         LR    RWORK3,RWORK0                                       0582 01307000
*   GEN(EX  RWORK4,STOREPT);        /* CLEAR IT                      */ 01308000
         EX  RWORK4,STOREPT                                             01309000
*   RWORK2->IXHFSO=RWORK2->IXHFSO-  /* ADJUST FREESPACE PTR          */ 01310000
*       ICWPTL;                     /* FOR REMOVED POINTER           */ 01311000
         LH    @15,IXHFSO(,RWORK2)                                 0584 01312000
         SLR   @10,@10                                             0584 01313000
         IC    @10,ICWPTL(,RWORK1)                                 0584 01314000
         SLR   @15,@10                                             0584 01315000
         STH   @15,IXHFSO(,RWORK2)                                 0584 01316000
*   RWORK2->IXHLEO=RWORK2->IXHLEO-  /* ADJUST CURRENT POSITION       */ 01317000
*       RWORK2->IXHFLPLN;           /* TO THE LEFT                   */ 01318000
         LH    @15,IXHLEO(,RWORK2)                                 0585 01319000
         SLR   @10,@10                                             0585 01320000
         IC    @10,IXHFLPLN(,RWORK2)                               0585 01321000
         SLR   @15,@10                                             0585 01322000
         STH   @15,IXHLEO(,RWORK2)                                 0585 01323000
*   IF ICWVSE=ON THEN               /* IS THERE A SECTION            */ 01324000
         TM    ICWVSE(RWORK1),B'00010000'                          0586 01325000
         BNO   @RF00586                                            0586 01326000
*     DO;                           /* YES, UPDATE ITS LL            */ 01327000
*       RWORK4=RWORK2+ICWPSEO;      /* POINT TO SECTION ENTRY        */ 01328000
         LR    RWORK4,RWORK2                                       0588 01329000
         LH    @15,ICWPSEO(,RWORK1)                                0588 01330000
         ALR   RWORK4,@15                                          0588 01331000
*       RWORK3=RWORK4-RWORK4->IBFLPL-/* GET ADDRESSABILITY TO        */ 01332000
*           LENGTH(IXSELL);         /* ITS LL FIELD                  */ 01333000
         LR    RWORK3,RWORK4                                       0589 01334000
         SLR   @15,@15                                             0589 01335000
         IC    @15,IBFLPL(,RWORK4)                                 0589 01336000
         SLR   RWORK3,@15                                          0589 01337000
         BCTR  RWORK3,0                                            0589 01338000
         BCTR  RWORK3,0                                            0589 01339000
*       RWORK4='03'X;               /* SET MASK                      */ 01340000
         LA    RWORK4,3                                            0590 01341000
*       RPARM1=ZERO;                /* ASSURE CLEAN REGISTER         */ 01342000
         SLR   RPARM1,RPARM1                                       0591 01343000
*       GEN(EX  RWORK4,PICKPT);     /* PICK UP LL FIELD              */ 01344000
         EX  RWORK4,PICKPT                                              01345000
*       RPARM1=RPARM1+RWORK2->IXHFLPLN;/* INCREMENT BY THIS ENTRY    */ 01346000
         SLR   @15,@15                                             0593 01347000
         IC    @15,IXHFLPLN(,RWORK2)                               0593 01348000
         ALR   RPARM1,@15                                          0593 01349000
*       GEN(EX  RWORK4,STOREPT);    /* STORE IT BACK                 */ 01350000
         EX  RWORK4,STOREPT                                             01351000
*     END;                          /*                               */ 01352000
*   ELSE                            /* NO SECTION ENTRY YET          */ 01353000
*     RWORK2->IXHSEO=RWORK2->IXHLEO;/* SO 1ST EQUALS LAST            */ 01354000
         B     @RC00586                                            0596 01355000
@RF00586 LH    @15,IXHLEO(,RWORK2)                                 0596 01356000
         STH   @15,IXHSEO(,RWORK2)                                 0596 01357000
*   RETURN;                         /*                               */ 01358000
@EL00001 DS    0H                                                  0597 01359000
@EF00001 DS    0H                                                  0597 01360000
@ER00001 BR    @14                                                 0597 01361000
*   RESPECIFY                                                      0598 01362000
*    (RWORK0,                                                      0598 01363000
*     RWORK1,                                                      0598 01364000
*     RWORK2,                                                      0598 01365000
*     RWORK3,                                                      0598 01366000
*     RWORK4,                                                      0598 01367000
*     R14) UNRSTD;                  /*                               */ 01368000
*                                                                  0599 01369000
*   /*****************************************************************/ 01370000
*   /*                                                               */ 01371000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01372000
*   /* IDAJRNSR SUBROUTINE FUNCTION: TAKES A JOURNAL EXIT FOR READING*/ 01373000
*   /* OR WRITING A SPANNED RECORD SEGMENT ON ENTRY, RBUFC CONTAINS  */ 01374000
*   /* THE ADDRESS OF THE BUFC CONTAINING THE DATA BEING JOURNALED * */ 01375000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   */ 01376000
*   /*                                                               */ 01377000
*   /*****************************************************************/ 01378000
*                                                                  0599 01379000
*IDAJRNSR:                                                         0599 01380000
*   ENTRY;                          /*                               */ 01381000
@EP00599 DS    0H                                                  0600 01382000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 01383000
         IDASVR14                                                       01384000
*   IF RBUFC->BUFCMW=ON THEN        /* IS THIS AN OUTPUT BUFF        */ 01385000
         TM    BUFCMW(RBUFC),B'10000000'                           0601 01386000
         BNO   @RF00601                                            0601 01387000
*     DO;                           /* YES                           */ 01388000
*       PLHJCODE=PLHWSRSG;          /* SET WRITE CODE IN LIST        */ 01389000
         MVI   PLHJCODE(RPLH),B'00010100'                          0603 01390000
*       PLHJORBA=RBUFC->BUFCORBA;   /* SET RBA IN LIST               */ 01391000
         L     @10,BUFCORBA(,RBUFC)                                0604 01392000
         ST    @10,PLHJORBA(,RPLH)                                 0604 01393000
*     END;                          /*                               */ 01394000
*   ELSE                            /*                               */ 01395000
*     DO;                           /* INPUT BUFFER                  */ 01396000
         B     @RC00601                                            0606 01397000
@RF00601 DS    0H                                                  0607 01398000
*       PLHJCODE=PLHRSRSG;          /* SET READ CODE IN LIST         */ 01399000
         MVI   PLHJCODE(RPLH),B'00010000'                          0607 01400000
*       PLHJORBA=RBUFC->BUFCDDDD;   /* SET RBA IN LIST               */ 01401000
         L     @10,BUFCDDDD(,RBUFC)                                0608 01402000
         ST    @10,PLHJORBA(,RPLH)                                 0608 01403000
*     END;                          /*                               */ 01404000
*   RPARM1=RBUFC->BUFCBAD+AMBLDTA-> /* POINT TO THE LAST             */ 01405000
*       AMBDSB->AMDCINV-            /* RDF FIELD IN THE CI           */ 01406000
*       LENGTH(IDACIDF)-            /*                               */ 01407000
*       LENGTH(IDARDF);             /*                               */ 01408000
@RC00601 L     @10,RPLDACB(,RRPL)                                  0610 01409000
         L     @10,ACBAMBL(,@10)                                   0610 01410000
         L     @10,AMBLDTA(,@10)                                   0610 01411000
         L     @10,AMBDSB(,@10)                                    0610 01412000
         L     RPARM1,BUFCBAD(,RBUFC)                              0610 01413000
         AL    RPARM1,AMDCINV(,@10)                                0610 01414000
         SL    RPARM1,@CF00288                                     0610 01415000
*   PLHJRNLL=RPARM1->RDFLL;         /* SET LENGTH                    */ 01416000
         SLR   @10,@10                                             0611 01417000
         ICM   @10,3,RDFLL(RPARM1)                                 0611 01418000
         ST    @10,PLHJRNLL(,RPLH)                                 0611 01419000
*I18:                                                              0612 01420000
*   DO;                             /* IDACALL(IDATJXIT)             */ 01421000
I18      DS    0H                                                  0613 01422000
*     CALL IDATJXIT;                /* EXIT TO IDATJXIT              */ 01423000
         L     @15,@CV01010                                        0613 01424000
         BALR  @14,@15                                             0613 01425000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01426000
         BALR @11,0                                                     01427000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01428000
         USING *,@11                                                    01429000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01430000
         L     @11,=A(@PSTART)                                          01431000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01432000
         USING @PSTART,@11                                              01433000
*   END I18;                        /* GO TO EXIT ROUTINE            */ 01434000
*   CALL EXIT;                      /* RETURN                        */ 01435000
         BAL   @14,EXIT                                            0619 01436000
*                                                                  0620 01437000
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01438000
*/*  SUBROUTINE SPLTCA:                                      @ZA02289*/ 01439000
*/*                                                          @ZA02289*/ 01440000
*/*    FUNCTION:  DETERMINES IF A CONTROL AREA NEEDS TO BE   @ZA02289*/ 01441000
*/*             SPLIT AND SPLITS IT IF NECESSARY             @ZA02289*/ 01442000
*/*                                                          @ZA02289*/ 01443000
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01444000
*                                                                  0620 01445000
*SPLTCA:                                                           0620 01446000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @ZA02289*/ 01447000
         B     @PB00003                                            0620 01448000
SPLTCA   DS    0H                                                  0621 01449000
*   GEN(IDASVR14);                  /* SAVE R14              @ZA02289*/ 01450000
         IDASVR14                                                       01451000
*   RFY                                                            0622 01452000
*    (RWORK1,                                                      0622 01453000
*     RWORK2) RSTD;                 /*                       @ZA02289*/ 01454000
*   RWORK2=PLHIBUFC->BUFCBAD;       /* INDX BUFF PTR         @ZA02289*/ 01455000
         L     @10,PLHIBUFC(,RPLH)                                 0623 01456000
         L     RWORK2,BUFCBAD(,@10)                                0623 01457000
*   RWORK1=((RWORK2->IXHFSO-        /* COMPUTE NO. OF        @ZA02289*/ 01458000
*       LENGTH(IDAIXH))/            /* FREESPACE CI'S        @ZA02289*/ 01459000
*       (RWORK2->IXHFLPLN-          /* AVAILABLE FOR         @ZA02289*/ 01460000
*       LENGTH(IBFLPL)-             /* STORING THE           @ZA02289*/ 01461000
*       LENGTH(IBFLPF)))+ONE;       /* SPANNED RECORD        @ZA02289*/ 01462000
         LH    @10,IXHFSO(,RWORK2)                                 0624 01463000
         LR    RWORK1,@10                                          0624 01464000
         SL    RWORK1,@CF00083                                     0624 01465000
         LA    @08,2                                               0624 01466000
         SLR   @07,@07                                             0624 01467000
         IC    @07,IXHFLPLN(,RWORK2)                               0624 01468000
         SLR   @07,@08                                             0624 01469000
         LR    @14,RWORK1                                          0624 01470000
         SRDA  @14,32                                              0624 01471000
         DR    @14,@07                                             0624 01472000
         AL    @15,@CF00053                                        0624 01473000
         LR    RWORK1,@15                                          0624 01474000
*   RBUFC=RWORK2+RWORK2->IXHLEO;    /* PT TO F FIELD OF LAST ENT IN     01475000
*                                      SEQ SET               @ZA02289*/ 01476000
         LR    RBUFC,RWORK2                                        0625 01477000
         LH    @07,IXHLEO(,RWORK2)                                 0625 01478000
         ALR   RBUFC,@07                                           0625 01479000
*   RPARM1=RBUFC-RBUFC->IBFLPL-     /* MOVE ACROSS KEY FIELD,        */ 01480000
*       LENGTH(IXSELL);             /* AND SECTION LL FIELD  @ZA02289*/ 01481000
         LR    RPARM1,RBUFC                                        0626 01482000
         SLR   @07,@07                                             0626 01483000
         IC    @07,IBFLPL(,RBUFC)                                  0626 01484000
         SLR   RPARM1,@07                                          0626 01485000
         SLR   RPARM1,@08                                          0626 01486000
*   RBUFC=RPARM1-(RWORK2+           /* FIND LENGTH OF FREE           */ 01487000
*       RWORK2->IXHFSO);            /* AREA IN IDX REC@ZA02289       */ 01488000
         ALR   @10,RWORK2                                          0627 01489000
         LCR   @10,@10                                             0627 01490000
         ALR   @10,RPARM1                                          0627 01491000
         LR    RBUFC,@10                                           0627 01492000
*   DO WHILE PLHNOSEG>RWORK1|       /* LOOP CAUSES CA SPLIT IF       */ 01493000
*         PLHNOSEG*(LENGTH(IBFLPF)+ /* NOT ENOUGH CIS, NOT           */ 01494000
*         LENGTH(IBFLPL))>RBUFC|    /* ENOUGH ROOM IN SEQ SET,       */ 01495000
*         (RPLSEQ=ON&PLHNOSEG<      /* OR SEQ AND NO. CIS LESS       */ 01496000
*         (AMDCIPCA-AMDFSCA)&       /* THAN LOAD FACTOR AND          */ 01497000
*         ((PLHNOSEG+AMDFSCA-RWORK1)>/* DISTANCE FROM END TO         */ 01498000
*         (RWORK1-AMDFSCA-ONE)));   /* FREE SPACE POINT IS MORE THAN    01499000
*                                      FROM BEGINNING TO FREE SPACE     01500000
*                                      PT                    @ZA02289*/ 01501000
         B     @DE00628                                            0628 01502000
@DL00628 DS    0H                                                  0629 01503000
*     RPARM1=PLHNOSEG-ONE;          /* SET NO SEGS. REQD.    @ZA02289*/ 01504000
         LH    RPARM1,PLHNOSEG(,RPLH)                              0629 01505000
         BCTR  RPARM1,0                                            0629 01506000
*I19:                                                              0630 01507000
*     DO;                           /* IDACALL(IDA019RF)             */ 01508000
I19      DS    0H                                                  0631 01509000
*       CALL IDA019RF;              /* EXIT TO IDA019RF              */ 01510000
         L     @15,@CV01014                                        0631 01511000
         BALR  @14,@15                                             0631 01512000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01513000
         BALR @11,0                                                     01514000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01515000
         USING *,@11                                                    01516000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01517000
         L     @11,=A(@PSTART)                                          01518000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01519000
         USING @PSTART,@11                                              01520000
*     END I19;                      /* CALL CA SPLIT         @ZA02289*/ 01521000
*     IF RPLERREG^=ZERO THEN        /* DID ERR OCCUR         @ZA02289*/ 01522000
         CLI   RPLERREG(RRPL),0                                    0637 01523000
         BE    @RF00637                                            0637 01524000
*       DO;                         /* YES                   @ZA02289*/ 01525000
*         DIWPLH=ZERO;              /* CLEAR PLH PTR         @ZA02289*/ 01526000
         L     @10,AMBIWA(,RAMB)                                   0639 01527000
         SLR   @08,@08                                             0639 01528000
         ST    @08,DIWPLH(,@10)                                    0639 01529000
*         DIWATV=ZERO;              /* FREE WORK AREA        @ZA02289*/ 01530000
         MVI   DIWATV(@10),X'00'                                   0640 01531000
*         GEN(IDARST14);            /* PT TO CALLER          @ZA02289*/ 01532000
         IDARST14                                                       01533000
*         CALL EXIT;                /* RETURN                @ZA02289*/ 01534000
         BAL   @14,EXIT                                            0642 01535000
*       END;                        /*                       @ZA02289*/ 01536000
*I20:                                                              0644 01537000
*     DO;                           /* IDACALL(IDAREPOS)             */ 01538000
@RF00637 DS    0H                                                  0644 01539000
I20      DS    0H                                                  0645 01540000
*       CALL IDAREPOS;              /* EXIT TO IDAREPOS              */ 01541000
         L     @15,@CV01018                                        0645 01542000
         BALR  @14,@15                                             0645 01543000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01544000
         BALR @11,0                                                     01545000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01546000
         USING *,@11                                                    01547000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01548000
         L     @11,=A(@PSTART)                                          01549000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01550000
         USING @PSTART,@11                                              01551000
*     END I20;                      /* RST BUFF MANAGER PTR POSITION    01552000
*                                                            @ZA02289*/ 01553000
*     RWORK2=PLHIBUFC->BUFCBAD;     /* PT TO IDX BUFF        @ZA02289*/ 01554000
         L     @10,PLHIBUFC(,RPLH)                                 0651 01555000
         L     RWORK2,BUFCBAD(,@10)                                0651 01556000
*     RWORK1=((RWORK2->IXHFSO-      /* COMPUTE THE NUMBER OF         */ 01557000
*         LENGTH(IDAIXH))/          /* FREESPACE CONTROL             */ 01558000
*         (RWORK2->IXHFLPLN-        /* INTERVALS AVAILABLE FOR       */ 01559000
*         LENGTH(IBFLPL)-           /* STORING AWAY THE              */ 01560000
*         LENGTH(IBFLPF)))+ONE;     /* SPANNED RECORD        @ZA02289*/ 01561000
         LH    @10,IXHFSO(,RWORK2)                                 0652 01562000
         LR    RWORK1,@10                                          0652 01563000
         SL    RWORK1,@CF00083                                     0652 01564000
         LA    @08,2                                               0652 01565000
         SLR   @07,@07                                             0652 01566000
         IC    @07,IXHFLPLN(,RWORK2)                               0652 01567000
         SLR   @07,@08                                             0652 01568000
         LR    @14,RWORK1                                          0652 01569000
         SRDA  @14,32                                              0652 01570000
         DR    @14,@07                                             0652 01571000
         AL    @15,@CF00053                                        0652 01572000
         LR    RWORK1,@15                                          0652 01573000
*     RBUFC=RWORK2+RWORK2->IXHLEO;  /* POINT TO F FIELD OF LAST ENT     01574000
*                                      IN SEQ SET            @ZA02289*/ 01575000
         LR    RBUFC,RWORK2                                        0653 01576000
         LH    @07,IXHLEO(,RWORK2)                                 0653 01577000
         ALR   RBUFC,@07                                           0653 01578000
*     RPARM1=RBUFC-RBUFC->IBFLPL-   /* MOVE ACROSS KEY FLD AND       */ 01579000
*         LENGTH(IXSELL);           /* SECT LL FIELD         @ZA02289*/ 01580000
         LR    RPARM1,RBUFC                                        0654 01581000
         SLR   @07,@07                                             0654 01582000
         IC    @07,IBFLPL(,RBUFC)                                  0654 01583000
         SLR   RPARM1,@07                                          0654 01584000
         SLR   RPARM1,@08                                          0654 01585000
*     RBUFC=RPARM1-(RWORK2+         /* FIND LNG OF FREE AREA         */ 01586000
*         RWORK2->IXHFSO);          /* IN IDX RECORD         @ZA02289*/ 01587000
         ALR   @10,RWORK2                                          0655 01588000
         LCR   @10,@10                                             0655 01589000
         ALR   @10,RPARM1                                          0655 01590000
         LR    RBUFC,@10                                           0655 01591000
*   END;                            /*                       @ZA02289*/ 01592000
@DE00628 LH    @10,PLHNOSEG(,RPLH)                                 0656 01593000
         CR    @10,RWORK1                                          0656 01594000
         BH    @DL00628                                            0656 01595000
         LR    @08,@10                                             0656 01596000
         ALR   @08,@08                                             0656 01597000
         CR    @08,RBUFC                                           0656 01598000
         BH    @DL00628                                            0656 01599000
         TM    RPLSEQ(RRPL),B'00100000'                            0656 01600000
         BNO   @DC00628                                            0656 01601000
         L     @08,AMBDSB(,RAMB)                                   0656 01602000
         LH    @07,AMDFSCA(,@08)                                   0656 01603000
         LH    @08,AMDCIPCA(,@08)                                  0656 01604000
         SLR   @08,@07                                             0656 01605000
         CR    @10,@08                                             0656 01606000
         BNL   @DC00628                                            0656 01607000
         ALR   @10,@07                                             0656 01608000
         SLR   @10,RWORK1                                          0656 01609000
         LCR   @07,@07                                             0656 01610000
         ALR   @07,RWORK1                                          0656 01611000
         BCTR  @07,0                                               0656 01612000
         CR    @10,@07                                             0656 01613000
         BH    @DL00628                                            0656 01614000
@DC00628 DS    0H                                                  0657 01615000
*   CALL EXIT;                      /* RESTORE R14           @ZA02289*/ 01616000
         BAL   @14,EXIT                                            0657 01617000
*   END SPLTCA;                     /*                       @ZA02289*/ 01618000
@EL00003 DS    0H                                                  0658 01619000
@EF00003 DS    0H                                                  0658 01620000
@ER00003 BR    @14                                                 0658 01621000
*   RESPECIFY                                                      0659 01622000
*    (RWORK1,                                                      0659 01623000
*     RWORK2) UNRSTD;               /*                       @ZA02289*/ 01624000
*                                                                  0660 01625000
*   /*****************************************************************/ 01626000
*   /*                                                               */ 01627000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01628000
*   /* EXIT SUBROUTINE                                       @ZA02289*/ 01629000
*   /* FUNCTION: RESTORES REGISTER 14 FROM THE PLACEHOLDER PUSH DOWN */ 01630000
*   /* LIST AND RETURNS * * * * * * * * * * * * * * * * * * * * * * **/ 01631000
*   /* * * * * * * * *                                               */ 01632000
*   /*                                                               */ 01633000
*   /*****************************************************************/ 01634000
*                                                                  0660 01635000
*EXIT:                                                             0660 01636000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01637000
EXIT     DS    0H                                                  0661 01638000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14           */ 01639000
         IDARST14                                                       01640000
*   END EXIT;                       /* RETURN                        */ 01641000
@EL00004 DS    0H                                                  0662 01642000
@EF00004 DS    0H                                                  0662 01643000
@ER00004 BR    @14                                                 0662 01644000
@PB00004 DS    0H                                                  0663 01645000
*   GEN;                                                           0663 01646000
PICKPT   ICM   RPARM1,@00,@00(RWORK3)      /* EXTRACTS POINTER       */ 01647000
STOREPT  STCM  RPARM1,@00,@00(RWORK3)      /* STORES POINTER         */ 01648000
*   GEN(IDAPATCH);                  /* PATCH SPACE                   */ 01649000
         IDAPATCH                                                       01650000
*   END IDA019RT                    /* MODULE END                    */ 01651000
*                                                                  0665 01652000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01653000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01654000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01655000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01656000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01657000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01658000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01659000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01660000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01661000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01662000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 01663000
*/*%INCLUDE SYSLIB  (IDAICWA )                                       */ 01664000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01665000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 01666000
*/*%INCLUDE SYSLIB  (IDAIMWA )                                       */ 01667000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01668000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01669000
*                                                                  0665 01670000
*       ;                                                          0665 01671000
         B     @EL00001                                            0665 01672000
@DATA    DS    0H                                                       01673000
@DATD    DSECT                                                          01674000
         DS    0F                                                       01675000
IDA019RT CSECT                                                          01676000
         DS    0F                                                       01677000
@CF00053 DC    F'1'                                                     01678000
@CH00053 EQU   @CF00053+2                                               01679000
@CF00155 DC    F'2'                                                     01680000
@CF00288 DC    F'7'                                                     01681000
@CF00314 DC    F'10'                                                    01682000
@CF00083 DC    F'24'                                                    01683000
@DATD    DSECT                                                          01684000
         DS    0D                                                       01685000
IDA019RT CSECT                                                          01686000
         DS    0F                                                       01687000
@SIZDATD DC    AL1(0)                                                   01688000
         DC    AL3(@ENDDATD-@DATD)                                      01689000
@CA01061 DC    A(IDAJRNSR)                                              01690000
@CV01003 DC    V(IDAABF)                                                01691000
@CV01004 DC    V(IDAAIBF)                                               01692000
@CV01005 DC    V(IDADRQ)                                                01693000
@CV01006 DC    V(IDAFREEB)                                              01694000
@CV01007 DC    V(IDAGNXT)                                               01695000
@CV01008 DC    V(IDAIVIXB)                                              01696000
@CV01009 DC    V(IDASBF)                                                01697000
@CV01010 DC    V(IDATJXIT)                                              01698000
@CV01011 DC    V(IDAWRBFR)                                              01699000
@CV01012 DC    V(IDA019RC)                                              01700000
@CV01013 DC    V(IDA019RE)                                              01701000
@CV01014 DC    V(IDA019RF)                                              01702000
@CV01015 DC    V(IDA019SA)                                              01703000
@CV01016 DC    V(IDAMVSEG)                                              01704000
@CV01017 DC    V(IDAADSEG)                                              01705000
@CV01018 DC    V(IDAREPOS)                                              01706000
@CV01019 DC    V(IDAGRB)                                                01707000
         DS    0D                                                       01708000
HWORD4   DC    H'4'                                                     01709000
@DATD    DSECT                                                          01710000
*                                                          /*@X04SVLC*/ 01711000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01712000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01713000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01714000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01715000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01716000
RDFLEN   EQU   3                        LENGTH OF RDF                   01717000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01718000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01719000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01720000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01721000
@DATD    DSECT                                                          01722000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01723000
@ENDDATD EQU   *                                                        01724000
IDA019RT CSECT                                                          01725000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01726000
@01      EQU   01                                                       01727000
@02      EQU   02                                                       01728000
@03      EQU   03                                                       01729000
@04      EQU   04                                                       01730000
@05      EQU   05                                                       01731000
@06      EQU   06                                                       01732000
@07      EQU   07                                                       01733000
@08      EQU   08                                                       01734000
@09      EQU   09                                                       01735000
@10      EQU   10                                                       01736000
@11      EQU   11                                                       01737000
@12      EQU   12                                                       01738000
@13      EQU   13                                                       01739000
@14      EQU   14                                                       01740000
@15      EQU   15                                                       01741000
RWORK0   EQU   @00                                                      01742000
RRPL     EQU   @01                                                      01743000
RPLH     EQU   @02                                                      01744000
RAMB     EQU   @03                                                      01745000
RBUFC    EQU   @04                                                      01746000
RWORK1   EQU   @05                                                      01747000
RWORK2   EQU   @06                                                      01748000
RWORK3   EQU   @07                                                      01749000
RWORK4   EQU   @08                                                      01750000
RWORK5   EQU   @09                                                      01751000
RPARM1   EQU   @12                                                      01752000
R14      EQU   @14                                                      01753000
R15      EQU   @15                                                      01754000
R1       EQU   @01                                                      01755000
R10      EQU   @10                                                      01756000
R11      EQU   @11                                                      01757000
R13      EQU   @13                                                      01758000
IFGRPL   EQU   0                                                        01759000
RPLCOMN  EQU   IFGRPL                                                   01760000
RPLIDWD  EQU   RPLCOMN                                                  01761000
RPLLEN   EQU   RPLIDWD+3                                                01762000
RPLECB   EQU   RPLCOMN+8                                                01763000
RPLFDBWD EQU   RPLCOMN+12                                               01764000
RPLFDBK  EQU   RPLFDBWD+1                                               01765000
RPLRTNCD EQU   RPLFDBK                                                  01766000
RPLERREG EQU   RPLRTNCD                                                 01767000
RPLCNDCD EQU   RPLFDBK+1                                                01768000
RPLCMPON EQU   RPLCNDCD                                                 01769000
RPLFDB2  EQU   RPLCMPON                                                 01770000
RPLERRCD EQU   RPLCNDCD+1                                               01771000
RPLFDB3  EQU   RPLERRCD                                                 01772000
RPLKEYLE EQU   RPLCOMN+16                                               01773000
RPLDACB  EQU   RPLCOMN+24                                               01774000
RPLAREA  EQU   RPLCOMN+32                                               01775000
RPLARG   EQU   RPLCOMN+36                                               01776000
RPLOPTCD EQU   RPLCOMN+40                                               01777000
RPLOPT1  EQU   RPLOPTCD                                                 01778000
RPLLOC   EQU   RPLOPT1                                                  01779000
RPLSEQ   EQU   RPLOPT1                                                  01780000
RPLECBSW EQU   RPLOPT1                                                  01781000
RPLOPT2  EQU   RPLOPTCD+1                                               01782000
RPLKEY   EQU   RPLOPT2                                                  01783000
RPLADR   EQU   RPLOPT2                                                  01784000
RPLBWD   EQU   RPLOPT2                                                  01785000
RPLUPD   EQU   RPLOPT2                                                  01786000
RPLOPT3  EQU   RPLOPTCD+2                                               01787000
RPLNXTRP EQU   RPLCOMN+44                                               01788000
RPLRLEN  EQU   RPLCOMN+48                                               01789000
RPLBUFL  EQU   RPLCOMN+52                                               01790000
RPLOPTC2 EQU   RPLCOMN+56                                               01791000
RPLOPT5  EQU   RPLOPTC2                                                 01792000
RPLWRTYP EQU   RPLOPT5                                                  01793000
RPLOPT6  EQU   RPLOPTC2+1                                               01794000
RPLUNTYP EQU   RPLOPT6                                                  01795000
RPLOPT7  EQU   RPLOPTC2+2                                               01796000
RPLCNOPT EQU   RPLOPT7                                                  01797000
RPLOPT8  EQU   RPLOPTC2+3                                               01798000
RPLRBAR  EQU   RPLCOMN+60                                               01799000
RPLAIXID EQU   RPLRBAR+2                                                01800000
RPLDDDD  EQU   RPLRBAR+4                                                01801000
RPLEXTDS EQU   RPLCOMN+68                                               01802000
RPLEXTD1 EQU   RPLEXTDS                                                 01803000
IFGACB   EQU   0                                                        01804000
ACBCOMN  EQU   IFGACB                                                   01805000
ACBLENG  EQU   ACBCOMN+2                                                01806000
ACBLENG2 EQU   ACBLENG                                                  01807000
ACBAMBL  EQU   ACBCOMN+4                                                01808000
ACBJWA   EQU   ACBAMBL                                                  01809000
ACBMACRF EQU   ACBCOMN+12                                               01810000
ACBMACR1 EQU   ACBMACRF                                                 01811000
ACBADR   EQU   ACBMACR1                                                 01812000
ACBCNV   EQU   ACBMACR1                                                 01813000
ACBMACR2 EQU   ACBMACRF+1                                               01814000
ACBBUFPL EQU   ACBCOMN+20                                               01815000
ACBMACR3 EQU   ACBBUFPL                                                 01816000
ACBRECFM EQU   ACBCOMN+24                                               01817000
ACBCCTYP EQU   ACBCOMN+25                                               01818000
ACBOPT   EQU   ACBCOMN+26                                               01819000
ACBDSORG EQU   ACBOPT                                                   01820000
ACBCROPS EQU   ACBDSORG                                                 01821000
ACBEXLST EQU   ACBCOMN+36                                               01822000
ACBDDNM  EQU   ACBCOMN+40                                               01823000
ACBAMETH EQU   ACBDDNM+3                                                01824000
ACBOFLGS EQU   ACBCOMN+48                                               01825000
ACBEXFG  EQU   ACBOFLGS                                                 01826000
ACBIOSFG EQU   ACBOFLGS                                                 01827000
ACBINFLG EQU   ACBCOMN+50                                               01828000
ACBUJFCB EQU   ACBCOMN+52                                               01829000
ACBBLKSZ EQU   ACBCOMN+60                                               01830000
IDAAMB   EQU   0                                                        01831000
AMBDSB   EQU   IDAAMB+20                                                01832000
AMBEOVR  EQU   IDAAMB+24                                                01833000
AMBFLG0  EQU   AMBEOVR                                                  01834000
AMBFLG1  EQU   IDAAMB+25                                                01835000
AMBCREAT EQU   AMBFLG1                                                  01836000
AMBJRN   EQU   AMBFLG1                                                  01837000
AMBDSORG EQU   IDAAMB+26                                                01838000
AMBIOBAD EQU   IDAAMB+28                                                01839000
AMBINFL  EQU   IDAAMB+42                                                01840000
AMBDEBPT EQU   IDAAMB+44                                                01841000
AMBOFLGS EQU   IDAAMB+48                                                01842000
AMBFLG2  EQU   IDAAMB+49                                                01843000
AMBEOVPT EQU   IDAAMB+56                                                01844000
AMBIWA   EQU   IDAAMB+64                                                01845000
AMBCSWD1 EQU   IDAAMB+84                                                01846000
AMBAFLG  EQU   AMBCSWD1                                                 01847000
AMBLSR   EQU   AMBAFLG                                                  01848000
AMBGSR   EQU   AMBAFLG                                                  01849000
IDAAMBL  EQU   0                                                        01850000
AMBLEOV  EQU   IDAAMBL+12                                               01851000
AMBLEFLG EQU   AMBLEOV                                                  01852000
AMBLDDNM EQU   IDAAMBL+16                                               01853000
AMBLIDF  EQU   AMBLDDNM                                                 01854000
AMBLQ    EQU   AMBLIDF+7                                                01855000
AMBLVC   EQU   IDAAMBL+28                                               01856000
AMBLTYPE EQU   IDAAMBL+30                                               01857000
AMBLSHAR EQU   IDAAMBL+33                                               01858000
AMBLFLG1 EQU   IDAAMBL+35                                               01859000
AMBLFLG2 EQU   IDAAMBL+36                                               01860000
AMBLDTA  EQU   IDAAMBL+52                                               01861000
AMBLIX   EQU   IDAAMBL+56                                               01862000
IDAPLHDR EQU   0                                                        01863000
IDAPLH   EQU   0                                                        01864000
PLHFLG1  EQU   IDAPLH+2                                                 01865000
PLHSSR   EQU   PLHFLG1                                                  01866000
PLHFLG2  EQU   IDAPLH+3                                                 01867000
PLHEFLGS EQU   IDAPLH+4                                                 01868000
PLHSRINV EQU   PLHEFLGS                                                 01869000
PLHNOADV EQU   PLHEFLGS                                                 01870000
PLHDSCAN EQU   PLHEFLGS                                                 01871000
PLHFLG3  EQU   IDAPLH+6                                                 01872000
PLHSRBSG EQU   PLHFLG3                                                  01873000
PLHRAHD  EQU   PLHFLG3                                                  01874000
PLHAFLGS EQU   IDAPLH+7                                                 01875000
PLHCRBA  EQU   IDAPLH+28                                                01876000
PLHJORBA EQU   PLHCRBA                                                  01877000
PLHJRNLL EQU   IDAPLH+32                                                01878000
PLHJCODE EQU   IDAPLH+40                                                01879000
PLHLRECL EQU   IDAPLH+48                                                01880000
PLHDBUFC EQU   IDAPLH+52                                                01881000
PLHRECP  EQU   IDAPLH+60                                                01882000
PLHFSP   EQU   IDAPLH+64                                                01883000
PLHRDFP  EQU   IDAPLH+68                                                01884000
PLHSRSID EQU   IDAPLH+74                                                01885000
PLHDIOB  EQU   IDAPLH+76                                                01886000
PLHSAVE1 EQU   IDAPLH+84                                                01887000
PLHSAVE3 EQU   IDAPLH+92                                                01888000
PLHSAVE4 EQU   IDAPLH+96                                                01889000
PLHRETO  EQU   IDAPLH+116                                               01890000
PLHRET1  EQU   IDAPLH+120                                               01891000
PLHEOVPT EQU   IDAPLH+180                                               01892000
PLHDDDD  EQU   PLHEOVPT                                                 01893000
PLHIBUFC EQU   IDAPLH+188                                               01894000
PLHIXSPL EQU   IDAPLH+200                                               01895000
PLHSSRBA EQU   PLHIXSPL                                                 01896000
PLHWAX   EQU   IDAPLH+232                                               01897000
PLHNOSEG EQU   IDAPLH+240                                               01898000
PLHSRCSG EQU   IDAPLH+242                                               01899000
PLHKEYPT EQU   IDAPLH+248                                               01900000
PLHEND   EQU   IDAPLH+280                                               01901000
PLHKEY   EQU   0                                                        01902000
IDABUFDR EQU   0                                                        01903000
BUFDRCIX EQU   IDABUFDR+9                                               01904000
BUFDRFLG EQU   IDABUFDR+11                                              01905000
IDABUFC  EQU   0                                                        01906000
BUFCAVL  EQU   IDABUFC                                                  01907000
BUFCFLG1 EQU   IDABUFC+1                                                01908000
BUFCEXC  EQU   BUFCFLG1                                                 01909000
BUFCIOFL EQU   IDABUFC+2                                                01910000
BUFCMW   EQU   BUFCIOFL                                                 01911000
BUFCRRD  EQU   BUFCIOFL                                                 01912000
BUFCFLG2 EQU   IDABUFC+3                                                01913000
BUFCPLH  EQU   IDABUFC+4                                                01914000
BUFCDDDD EQU   IDABUFC+8                                                01915000
BUFCORBA EQU   IDABUFC+12                                               01916000
BUFCBAD  EQU   IDABUFC+20                                               01917000
BUFCINV  EQU   IDABUFC+28                                               01918000
BUFXIRBA EQU   IDABUFC+40                                               01919000
IDAAMDSB EQU   0                                                        01920000
AMDATTR  EQU   IDAAMDSB+1                                               01921000
AMDDST   EQU   AMDATTR                                                  01922000
AMDNEST  EQU   IDAAMDSB+4                                               01923000
AMDRKP   EQU   IDAAMDSB+6                                               01924000
AMDKEYLN EQU   IDAAMDSB+8                                               01925000
AMDCIPCA EQU   IDAAMDSB+12                                              01926000
AMDFSCA  EQU   IDAAMDSB+14                                              01927000
AMDCINV  EQU   IDAAMDSB+20                                              01928000
AMDHLRBA EQU   IDAAMDSB+28                                              01929000
AMDSSRBA EQU   IDAAMDSB+32                                              01930000
AMDATTR3 EQU   IDAAMDSB+40                                              01931000
AMDSTAT  EQU   IDAAMDSB+48                                              01932000
IDADIWA  EQU   0                                                        01933000
DIWATV   EQU   IDADIWA+1                                                01934000
DIWFLG1  EQU   IDADIWA+4                                                01935000
DIWFLG2  EQU   IDADIWA+5                                                01936000
DIWPLH   EQU   IDADIWA+16                                               01937000
DIWBUFC  EQU   IDADIWA+20                                               01938000
DIWSAVE  EQU   IDADIWA+28                                               01939000
IDAICWA  EQU   0                                                        01940000
ICWFLG1  EQU   IDAICWA+1                                                01941000
ICWVSE   EQU   ICWFLG1                                                  01942000
ICWCHN   EQU   IDAICWA+4                                                01943000
ICWBUFC  EQU   IDAICWA+8                                                01944000
ICWPSEO  EQU   IDAICWA+20                                               01945000
ICWPTL   EQU   IDAICWA+55                                               01946000
IDACIDF  EQU   0                                                        01947000
CIDFOSET EQU   IDACIDF                                                  01948000
CIDFLL   EQU   IDACIDF+2                                                01949000
IDAIXH   EQU   0                                                        01950000
IXHFLPLN EQU   IDAIXH+2                                                 01951000
IXHPTLS  EQU   IDAIXH+3                                                 01952000
IXHBRBA  EQU   IDAIXH+4                                                 01953000
IXHFSO   EQU   IDAIXH+18                                                01954000
IXHLEO   EQU   IDAIXH+20                                                01955000
IXHSEO   EQU   IDAIXH+22                                                01956000
IDAIBFLP EQU   0                                                        01957000
IBFLPF   EQU   IDAIBFLP                                                 01958000
IBFLPL   EQU   IDAIBFLP+1                                               01959000
IBFLP3   EQU   IDAIBFLP+2                                               01960000
IBFLP2   EQU   IBFLP3                                                   01961000
IDASELL  EQU   0                                                        01962000
IXSELL   EQU   IDASELL                                                  01963000
IDAIXK   EQU   0                                                        01964000
IDAIMWA  EQU   0                                                        01965000
IMWFLAGS EQU   IDAIMWA+1                                                01966000
IMWIXSP  EQU   IDAIMWA+4                                                01967000
IMWISWKA EQU   IDAIMWA+8                                                01968000
IDAIXSPL EQU   0                                                        01969000
IXSILN   EQU   IDAIXSPL+13                                              01970000
IXSBFLG  EQU   IDAIXSPL+17                                              01971000
IXSHEP   EQU   IDAIXSPL+20                                              01972000
IDARDF   EQU   0                                                        01973000
RDFRBYTE EQU   IDARDF                                                   01974000
RDFCTNU  EQU   RDFRBYTE                                                 01975000
RDFSEG   EQU   RDFRBYTE                                                 01976000
RDFNOT1  EQU   RDFSEG                                                   01977000
RDF1ST   EQU   RDFSEG                                                   01978000
RDFREPL  EQU   RDFRBYTE                                                 01979000
RDFLL    EQU   IDARDF+1                                                 01980000
IDADATA  EQU   0                                                        01981000
IDAKEY   EQU   0                                                        01982000
ICWKEY2  EQU   0                                                        01983000
ICWKEY3  EQU   0                                                        01984000
PLHPDL   EQU   0                                                        01985000
PLHPDLE  EQU   0                                                        01986000
PLHRRN   EQU   0                                                        01987000
PLHEXTEN EQU   PLHEND                                                   01988000
PLHBMWRK EQU   PLHEXTEN+5                                               01989000
BUFCRSC1 EQU   BUFCAVL                                                  01990000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01991000
PLHBMSV5 EQU   PLHEXTEN+24                                              01992000
PLHBMSV4 EQU   PLHEXTEN+20                                              01993000
PLHBMSV3 EQU   PLHEXTEN+16                                              01994000
PLHBMSV2 EQU   PLHEXTEN+12                                              01995000
PLHBMSV1 EQU   PLHEXTEN+8                                               01996000
PLHRDCNT EQU   PLHEXTEN+6                                               01997000
PLHBMSOV EQU   PLHBMWRK                                                 01998000
PLHBEUC  EQU   PLHBMWRK                                                 01999000
PLHBMRDF EQU   PLHBMWRK                                                 02000000
@NM00040 EQU   PLHEXTEN+4                                               02001000
PLHRESR1 EQU   PLHEXTEN                                                 02002000
KEY      EQU   IDAKEY                                                   02003000
AMDATA   EQU   IDADATA                                                  02004000
RDFEMPTY EQU   RDFRBYTE                                                 02005000
RDFTYPE  EQU   RDFRBYTE                                                 02006000
IXSLEP   EQU   IDAIXSPL+28                                              02007000
IXSSEP   EQU   IDAIXSPL+24                                              02008000
IXSPEC   EQU   IDAIXSPL+19                                              02009000
IXSEKON  EQU   IDAIXSPL+18                                              02010000
@NM00060 EQU   IXSBFLG                                                  02011000
IXSLELV  EQU   IXSBFLG                                                  02012000
IXSSSRH  EQU   IXSBFLG                                                  02013000
IXSNOSR  EQU   IDAIXSPL+16                                              02014000
IXSKLEN  EQU   IDAIXSPL+14                                              02015000
IXSTLN   EQU   IDAIXSPL+12                                              02016000
IXSARG   EQU   IDAIXSPL+8                                               02017000
IXSBUFC  EQU   IDAIXSPL+4                                               02018000
IXSSTRBA EQU   IDAIXSPL                                                 02019000
IMWKEY1  EQU   IDAIMWA+76                                               02020000
@NM00059 EQU   IDAIMWA+72                                               02021000
IMWNSOFF EQU   IDAIMWA+70                                               02022000
IMWCIMVN EQU   IDAIMWA+68                                               02023000
@NM00058 EQU   IDAIMWA+67                                               02024000
IMWSVIEL EQU   IDAIMWA+66                                               02025000
IMWIEL   EQU   IDAIMWA+65                                               02026000
IMWFGAIN EQU   IDAIMWA+64                                               02027000
IMWBUFP  EQU   IDAIMWA+60                                               02028000
IMWLBUFC EQU   IDAIMWA+56                                               02029000
IMWIPTR  EQU   IDAIMWA+52                                               02030000
IMWXPTR  EQU   IDAIMWA+48                                               02031000
IMWIKEYP EQU   IDAIMWA+44                                               02032000
IMWXKEYP EQU   IDAIMWA+40                                               02033000
IMWLEN   EQU   IDAIMWA+2                                                02034000
IMWBSE   EQU   IMWFLAGS                                                 02035000
IMWRIPL  EQU   IMWFLAGS                                                 02036000
IMWNEWHL EQU   IMWFLAGS                                                 02037000
IMWID    EQU   IDAIMWA                                                  02038000
IXKEY    EQU   IDAIXK                                                   02039000
IBFLP1   EQU   IBFLP2                                                   02040000
IXHFLGS  EQU   IDAIXH+17                                                02041000
IXHLV    EQU   IDAIXH+16                                                02042000
IXHXX    EQU   IDAIXH+12                                                02043000
IXHHP    EQU   IDAIXH+8                                                 02044000
IXHLL    EQU   IDAIXH                                                   02045000
@NM00057 EQU   CIDFLL                                                   02046000
CIDFBUSY EQU   CIDFLL                                                   02047000
ICWKEY1  EQU   IDAICWA+60                                               02048000
ICWCERP  EQU   IDAICWA+59                                               02049000
ICWCEL   EQU   IDAICWA+58                                               02050000
ICWCEF   EQU   IDAICWA+57                                               02051000
ICWCER   EQU   IDAICWA+56                                               02052000
ICWREQ   EQU   IDAICWA+54                                               02053000
ICWCRSEG EQU   IDAICWA+52                                               02054000
ICWNOSEG EQU   IDAICWA+50                                               02055000
ICWNEST  EQU   IDAICWA+48                                               02056000
ICWKEY3L EQU   IDAICWA+46                                               02057000
ICWKEY2L EQU   IDAICWA+44                                               02058000
ICWKEY1L EQU   IDAICWA+42                                               02059000
ICWLN    EQU   IDAICWA+40                                               02060000
ICWARDBP EQU   IDAICWA+36                                               02061000
ICWTPTR  EQU   IDAICWA+32                                               02062000
ICWTBASE EQU   IDAICWA+28                                               02063000
ICWADD   EQU   IDAICWA+24                                               02064000
ICWSCNT  EQU   IDAICWA+22                                               02065000
ICWPRBA  EQU   IDAICWA+16                                               02066000
ICWCRBA  EQU   IDAICWA+12                                               02067000
ICWLEN   EQU   IDAICWA+2                                                02068000
ICWENDRQ EQU   ICWFLG1                                                  02069000
ICWSPLIT EQU   ICWFLG1                                                  02070000
ICWKRDS  EQU   ICWFLG1                                                  02071000
ICWVNE   EQU   ICWFLG1                                                  02072000
ICWRBAOK EQU   ICWFLG1                                                  02073000
ICWWAGM  EQU   ICWFLG1                                                  02074000
ICWWNF   EQU   ICWFLG1                                                  02075000
ICWID    EQU   IDAICWA                                                  02076000
@NM00056 EQU   IDADIWA+92                                               02077000
@NM00055 EQU   IDADIWA+88                                               02078000
@NM00054 EQU   IDADIWA+84                                               02079000
@NM00053 EQU   IDADIWA+80                                               02080000
@NM00052 EQU   IDADIWA+76                                               02081000
@NM00051 EQU   IDADIWA+72                                               02082000
@NM00050 EQU   IDADIWA+68                                               02083000
@NM00049 EQU   IDADIWA+64                                               02084000
@NM00048 EQU   IDADIWA+60                                               02085000
@NM00047 EQU   IDADIWA+56                                               02086000
DIWINRBA EQU   IDADIWA+52                                               02087000
DIWRKCT  EQU   IDADIWA+48                                               02088000
DIWSAVE5 EQU   DIWSAVE+16                                               02089000
DIWSAVE4 EQU   DIWSAVE+12                                               02090000
DIWSAVE3 EQU   DIWSAVE+8                                                02091000
DIWSAVE2 EQU   DIWSAVE+4                                                02092000
DIWSAVE1 EQU   DIWSAVE                                                  02093000
DIWSPLTP EQU   IDADIWA+24                                               02094000
DIWHRBA  EQU   IDADIWA+12                                               02095000
DIWLRBA  EQU   IDADIWA+8                                                02096000
@NM00046 EQU   IDADIWA+6                                                02097000
DIWFSPF  EQU   DIWFLG2                                                  02098000
DIW1ST   EQU   DIWFLG1                                                  02099000
DIWNOT1  EQU   DIWFLG1                                                  02100000
DIWSHIFT EQU   DIWFLG1                                                  02101000
DIWGSPC  EQU   DIWFLG1                                                  02102000
DIWEOKR  EQU   DIWFLG1                                                  02103000
DIWPFERR EQU   DIWFLG1                                                  02104000
DIWCISPL EQU   DIWFLG1                                                  02105000
DIWCAS   EQU   DIWFLG1                                                  02106000
DIWLEN   EQU   IDADIWA+2                                                02107000
DIWID    EQU   IDADIWA                                                  02108000
AMDEXCP  EQU   AMDSTAT+44                                               02109000
AMDNCAS  EQU   AMDSTAT+40                                               02110000
AMDNCIS  EQU   AMDSTAT+36                                               02111000
AMDASPA  EQU   AMDSTAT+32                                               02112000
AMDRETR  EQU   AMDSTAT+28                                               02113000
AMDUPR   EQU   AMDSTAT+24                                               02114000
AMDIREC  EQU   AMDSTAT+20                                               02115000
AMDDELR  EQU   AMDSTAT+16                                               02116000
AMDNLR   EQU   AMDSTAT+12                                               02117000
AMDNEXT  EQU   AMDSTAT+10                                               02118000
AMDNIL   EQU   AMDSTAT+8                                                02119000
AMDSTSP  EQU   AMDSTAT                                                  02120000
@NM00045 EQU   IDAAMDSB+41                                              02121000
@NM00044 EQU   AMDATTR3                                                 02122000
AMDLM    EQU   AMDATTR3                                                 02123000
AMDWAIT  EQU   AMDATTR3                                                 02124000
AMDBIND  EQU   AMDATTR3                                                 02125000
AMDFAULT EQU   AMDATTR3                                                 02126000
AMDUNQ   EQU   AMDATTR3                                                 02127000
AMDPARDB EQU   IDAAMDSB+36                                              02128000
AMDMAXRR EQU   AMDSSRBA                                                 02129000
AMDNSLOT EQU   AMDHLRBA                                                 02130000
AMDLRECL EQU   IDAAMDSB+24                                              02131000
AMDFSCI  EQU   IDAAMDSB+16                                              02132000
AMDPCTCI EQU   IDAAMDSB+11                                              02133000
AMDPCTCA EQU   IDAAMDSB+10                                              02134000
AMDAXRKP EQU   AMDNEST                                                  02135000
AMDLEN   EQU   IDAAMDSB+2                                               02136000
AMDSPAN  EQU   AMDATTR                                                  02137000
AMDRRDS  EQU   AMDATTR                                                  02138000
AMDRANGE EQU   AMDATTR                                                  02139000
AMDORDER EQU   AMDATTR                                                  02140000
AMDREPL  EQU   AMDATTR                                                  02141000
AMDSDT   EQU   AMDATTR                                                  02142000
AMDWCK   EQU   AMDATTR                                                  02143000
AMDSBID  EQU   IDAAMDSB                                                 02144000
BUFCEND  EQU   IDABUFC+64                                               02145000
BUFCUCDN EQU   IDABUFC+60                                               02146000
BUFCUCUP EQU   IDABUFC+56                                               02147000
BUFCMDBT EQU   IDABUFC+52                                               02148000
BUFCHAIN EQU   IDABUFC+48                                               02149000
BUFXORBA EQU   IDABUFC+44                                               02150000
BUFCNXT2 EQU   IDABUFC+37                                               02151000
BUFCIDXL EQU   IDABUFC+36                                               02152000
BUFCDSPC EQU   IDABUFC+32                                               02153000
BUFCWLEN EQU   BUFCINV                                                  02154000
BUFCNXT1 EQU   IDABUFC+24                                               02155000
BUFCCPA  EQU   IDABUFC+16                                               02156000
BUFCAMB  EQU   BUFCPLH                                                  02157000
@NM00043 EQU   BUFCFLG2                                                 02158000
BUFCEOD  EQU   BUFCFLG2                                                 02159000
BUFCBSYW EQU   BUFCFLG2                                                 02160000
BUFCBSYR EQU   BUFCFLG2                                                 02161000
BUFCNLAS EQU   BUFCFLG2                                                 02162000
BUFCXDDR EQU   BUFCFLG2                                                 02163000
BUFCFIX  EQU   BUFCIOFL                                                 02164000
BUFCPFCP EQU   BUFCIOFL                                                 02165000
BUFCXEDB EQU   BUFCIOFL                                                 02166000
BUFCWC   EQU   BUFCIOFL                                                 02167000
BUFCREAL EQU   BUFCIOFL                                                 02168000
BUFCFMT  EQU   BUFCIOFL                                                 02169000
BUFCEPT  EQU   BUFCFLG1                                                 02170000
BUFCVAL  EQU   BUFCFLG1                                                 02171000
BUFCER2  EQU   BUFCFLG1                                                 02172000
BUFCER1  EQU   BUFCFLG1                                                 02173000
BUFCINS  EQU   BUFCFLG1                                                 02174000
BUFCSEG  EQU   BUFCFLG1                                                 02175000
BUFCUPG  EQU   BUFCFLG1                                                 02176000
BUFCUCNT EQU   BUFCAVL                                                  02177000
@NM00042 EQU   IDABUFDR+16                                              02178000
BUFDBUFC EQU   IDABUFDR+12                                              02179000
@NM00041 EQU   BUFDRFLG                                                 02180000
BUFDRAVL EQU   BUFDRFLG                                                 02181000
BUFDRREL EQU   BUFDRFLG                                                 02182000
BUFDRTSB EQU   IDABUFDR+10                                              02183000
BUFDRMAX EQU   BUFDRCIX                                                 02184000
BUFDRPFN EQU   IDABUFDR+8                                               02185000
BUFDRPFB EQU   IDABUFDR+4                                               02186000
BUFDRLEN EQU   IDABUFDR+2                                               02187000
BUFDRNO  EQU   IDABUFDR+1                                               02188000
BUFDRID  EQU   IDABUFDR                                                 02189000
PLHERRET EQU   IDAPLH+276                                               02190000
PLHASCB  EQU   IDAPLH+272                                               02191000
PLHECB   EQU   IDAPLH+268                                               02192000
@NM00039 EQU   IDAPLH+265                                               02193000
PLHDRMSK EQU   IDAPLH+264                                               02194000
PLHR13   EQU   IDAPLH+260                                               02195000
PLHPARM1 EQU   IDAPLH+256                                               02196000
PLHDRRSC EQU   IDAPLH+252                                               02197000
PLHSLRBA EQU   IDAPLH+244                                               02198000
PLHLLOR  EQU   IDAPLH+236                                               02199000
PLHXPLH  EQU   PLHWAX                                                   02200000
@NM00038 EQU   PLHIXSPL+8                                               02201000
PLHIXBFC EQU   PLHIXSPL+4                                               02202000
PLHHIREC EQU   PLHSSRBA                                                 02203000
PLHISPLP EQU   IDAPLH+196                                               02204000
PLHRBUFC EQU   IDAPLH+192                                               02205000
PLHNRBA  EQU   IDAPLH+184                                               02206000
PLHAR14  EQU   IDAPLH+176                                               02207000
@NM00037 EQU   IDAPLH+172                                               02208000
@NM00036 EQU   IDAPLH+168                                               02209000
PLHASAVE EQU   IDAPLH+164                                               02210000
PLHRETOS EQU   IDAPLH+118                                               02211000
PLHCHAIN EQU   IDAPLH+112                                               02212000
PLHAMB   EQU   IDAPLH+108                                               02213000
PLHSAVE6 EQU   IDAPLH+104                                               02214000
PLHSAVE5 EQU   IDAPLH+100                                               02215000
PLHSAVE2 EQU   IDAPLH+88                                                02216000
PLHARET  EQU   IDAPLH+80                                                02217000
PLHIIOB  EQU   PLHDIOB                                                  02218000
PLHRDFC  EQU   IDAPLH+72                                                02219000
PLHNBUFC EQU   IDAPLH+56                                                02220000
PLHARDB  EQU   IDAPLH+44                                                02221000
@NM00035 EQU   IDAPLH+43                                                02222000
PLHEOVR  EQU   IDAPLH+42                                                02223000
PLHRCODE EQU   IDAPLH+41                                                02224000
PLHUCODE EQU   PLHJCODE                                                 02225000
PLHJNRBA EQU   IDAPLH+36                                                02226000
PLHUPECB EQU   PLHJORBA                                                 02227000
PLHDSIDA EQU   IDAPLH+24                                                02228000
PLHCRPL  EQU   IDAPLH+20                                                02229000
PLHMRPL  EQU   IDAPLH+16                                                02230000
PLHBFRNO EQU   IDAPLH+15                                                02231000
PLHFRCNT EQU   IDAPLH+14                                                02232000
PLHRMIN  EQU   IDAPLH+13                                                02233000
PLHDSTYP EQU   IDAPLH+12                                                02234000
PLHACB   EQU   IDAPLH+8                                                 02235000
PLHRAE   EQU   PLHAFLGS                                                 02236000
PLHRABWD EQU   PLHAFLGS                                                 02237000
PLHIOSID EQU   PLHAFLGS                                                 02238000
PLHDBDC  EQU   PLHAFLGS                                                 02239000
PLHVAMB  EQU   PLHAFLGS                                                 02240000
PLHIOSRQ EQU   PLHAFLGS                                                 02241000
PLHDRLM  EQU   PLHAFLGS                                                 02242000
PLHEOVDF EQU   PLHFLG3                                                  02243000
PLHRVRS  EQU   PLHFLG3                                                  02244000
PLHBWD   EQU   PLHFLG3                                                  02245000
PLHSLVLD EQU   PLHFLG3                                                  02246000
@NM00034 EQU   PLHEFLGS+1                                               02247000
PLHRSTRT EQU   PLHEFLGS+1                                               02248000
PLHINVAL EQU   PLHEFLGS                                                 02249000
PLHEODX  EQU   PLHEFLGS                                                 02250000
PLHSKPER EQU   PLHEFLGS                                                 02251000
PLH1ST   EQU   PLHEFLGS                                                 02252000
PLHNOSPC EQU   PLHEFLGS                                                 02253000
PLHIWAIT EQU   PLHFLG2                                                  02254000
PLHSVADV EQU   PLHFLG2                                                  02255000
PLHCIINS EQU   PLHFLG2                                                  02256000
PLHKRE   EQU   PLHFLG2                                                  02257000
PLHADDTE EQU   PLHFLG2                                                  02258000
PLHKEYMD EQU   PLHFLG2                                                  02259000
PLHSQINS EQU   PLHFLG2                                                  02260000
PLHUPD   EQU   PLHFLG2                                                  02261000
@NM00033 EQU   PLHFLG1                                                  02262000
PLHDRPND EQU   PLHFLG1                                                  02263000
PLHASYRQ EQU   PLHFLG1                                                  02264000
PLHRDEXC EQU   PLHFLG1                                                  02265000
PLHASKBF EQU   PLHFLG1                                                  02266000
PLHENDRQ EQU   PLHFLG1                                                  02267000
PLHEOVW  EQU   PLHFLG1                                                  02268000
PLHATV   EQU   IDAPLH+1                                                 02269000
PLHAVL   EQU   IDAPLH                                                   02270000
PLHIOSDQ EQU   IDAPLHDR+12                                              02271000
PLHDRCUR EQU   IDAPLHDR+10                                              02272000
PLHDRMAX EQU   IDAPLHDR+8                                               02273000
PLHDRREQ EQU   IDAPLHDR+4                                               02274000
PLHELTH  EQU   IDAPLHDR+2                                               02275000
PLHCNT   EQU   IDAPLHDR+1                                               02276000
PLHID    EQU   IDAPLHDR                                                 02277000
AMBLCMB  EQU   IDAAMBL+64                                               02278000
AMBLBIB  EQU   IDAAMBL+60                                               02279000
AMBLMIDS EQU   IDAAMBL+42                                               02280000
AMBLNIDS EQU   IDAAMBL+41                                               02281000
@NM00032 EQU   IDAAMBL+40                                               02282000
AMBLNUM  EQU   IDAAMBL+38                                               02283000
AMBLNST  EQU   IDAAMBL+37                                               02284000
@NM00031 EQU   AMBLFLG2                                                 02285000
AMBLSTAG EQU   AMBLFLG2                                                 02286000
@NM00030 EQU   AMBLFLG2                                                 02287000
AMBLDUMY EQU   AMBLFLG1                                                 02288000
AMBLCAT  EQU   AMBLFLG1                                                 02289000
AMBLUCRA EQU   AMBLFLG1                                                 02290000
AMBLSCRA EQU   AMBLFLG1                                                 02291000
AMBLVVIC EQU   AMBLFLG1                                                 02292000
AMBLUPD  EQU   AMBLFLG1                                                 02293000
AMBLCINV EQU   AMBLFLG1                                                 02294000
AMBLFULL EQU   AMBLFLG1                                                 02295000
AMBLLEN  EQU   IDAAMBL+34                                               02296000
@NM00029 EQU   AMBLSHAR                                                 02297000
AMBLWRIT EQU   AMBLSHAR                                                 02298000
AMBLCATO EQU   AMBLSHAR                                                 02299000
AMBLPRIM EQU   AMBLSHAR                                                 02300000
AMBLID   EQU   IDAAMBL+32                                               02301000
@NM00028 EQU   IDAAMBL+31                                               02302000
@NM00027 EQU   AMBLTYPE                                                 02303000
AMBLFIX  EQU   AMBLTYPE                                                 02304000
AMBLBASE EQU   AMBLTYPE                                                 02305000
AMBLAIX  EQU   AMBLTYPE                                                 02306000
AMBLUPGR EQU   AMBLTYPE                                                 02307000
AMBLPATH EQU   AMBLTYPE                                                 02308000
AMBLENO  EQU   AMBLVC+1                                                 02309000
AMBLVRT  EQU   AMBLVC                                                   02310000
AMBLXPT  EQU   IDAAMBL+24                                               02311000
AMBLDFR  EQU   AMBLQ                                                    02312000
AMBLESDS EQU   AMBLQ                                                    02313000
AMBLKSDS EQU   AMBLQ                                                    02314000
AMBLUBF  EQU   AMBLQ                                                    02315000
AMBLFSTP EQU   AMBLQ                                                    02316000
AMBLLSR  EQU   AMBLQ                                                    02317000
AMBLGSR  EQU   AMBLQ                                                    02318000
AMBLDDC  EQU   AMBLQ                                                    02319000
AMBLDCI  EQU   AMBLIDF+4                                                02320000
AMBLCACB EQU   AMBLIDF                                                  02321000
@NM00026 EQU   AMBLEOV+2                                                02322000
AMBLCOMP EQU   AMBLEOV+1                                                02323000
AMBLESET EQU   AMBLEFLG                                                 02324000
AMBLWAIT EQU   AMBLEFLG                                                 02325000
AMBLACB  EQU   IDAAMBL+8                                                02326000
AMBLSCHN EQU   IDAAMBL+4                                                02327000
AMBLPCHN EQU   IDAAMBL                                                  02328000
AMBTRACE EQU   IDAAMB+120                                               02329000
AMBVIOT  EQU   IDAAMB+116                                               02330000
AMBSZCP  EQU   IDAAMB+114                                               02331000
AMBSZFW  EQU   IDAAMB+112                                               02332000
AMBSZWR  EQU   IDAAMB+110                                               02333000
AMBSZRD  EQU   IDAAMB+108                                               02334000
AMBEXEX  EQU   IDAAMB+100                                               02335000
AMBWSHD  EQU   IDAAMB+96                                                02336000
AMBCPA   EQU   IDAAMB+92                                                02337000
AMBBM2SH EQU   IDAAMB+88                                                02338000
AMBRDCNT EQU   AMBCSWD1+2                                               02339000
@NM00025 EQU   AMBCSWD1+1                                               02340000
@NM00024 EQU   AMBAFLG                                                  02341000
AMBCFX   EQU   AMBAFLG                                                  02342000
AMBSIS   EQU   AMBAFLG                                                  02343000
AMBDFR   EQU   AMBAFLG                                                  02344000
AMBICI   EQU   AMBAFLG                                                  02345000
@NM00023 EQU   AMBAFLG                                                  02346000
AMBUPLH  EQU   IDAAMB+80                                                02347000
AMBPAMBL EQU   IDAAMB+76                                                02348000
AMBPIXP  EQU   IDAAMB+72                                                02349000
@NM00022 EQU   IDAAMB+68                                                02350000
AMBWKA   EQU   IDAAMB+60                                                02351000
AMBAMBXN EQU   AMBEOVPT                                                 02352000
AMBEDB   EQU   IDAAMB+52                                                02353000
AMBRPT   EQU   IDAAMB+50                                                02354000
AMBPUG   EQU   AMBFLG2                                                  02355000
AMBBUSY  EQU   AMBOFLGS                                                 02356000
AMBEXFG  EQU   AMBOFLGS                                                 02357000
@NM00021 EQU   AMBOFLGS                                                 02358000
AMBOPEN  EQU   AMBOFLGS                                                 02359000
@NM00020 EQU   AMBOFLGS                                                 02360000
AMBDEBAD EQU   AMBDEBPT+1                                               02361000
AMBIFLGS EQU   AMBDEBPT                                                 02362000
AMBAMETH EQU   IDAAMB+43                                                02363000
AMBUPX   EQU   AMBINFL                                                  02364000
AMBUCRA  EQU   AMBINFL                                                  02365000
AMBSCRA  EQU   AMBINFL                                                  02366000
AMBCAT   EQU   AMBINFL                                                  02367000
@NM00019 EQU   AMBINFL                                                  02368000
@NM00018 EQU   AMBINFL                                                  02369000
AMBTIOT  EQU   IDAAMB+40                                                02370000
@NM00017 EQU   IDAAMB+38                                                02371000
AMBDDSN  EQU   IDAAMB+35                                                02372000
AMBCDSN  EQU   IDAAMB+32                                                02373000
AMBIOMB  EQU   AMBIOBAD                                                 02374000
@NM00016 EQU   AMBDSORG+1                                               02375000
AMBDORGA EQU   AMBDSORG+1                                               02376000
@NM00015 EQU   AMBDSORG                                                 02377000
AMBINBUF EQU   AMBFLG1                                                  02378000
AMBUBF   EQU   AMBFLG1                                                  02379000
AMBSPEED EQU   AMBFLG1                                                  02380000
AMBPCAT  EQU   AMBFLG1                                                  02381000
AMBMCAT  EQU   AMBFLG1                                                  02382000
AMBTYPE  EQU   AMBFLG1                                                  02383000
@NM00014 EQU   AMBFLG0                                                  02384000
AMBPSDS  EQU   AMBFLG0                                                  02385000
AMBCACB  EQU   IDAAMB+16                                                02386000
AMBPH    EQU   IDAAMB+12                                                02387000
AMBBUFC  EQU   IDAAMB+8                                                 02388000
AMBLINK  EQU   IDAAMB+4                                                 02389000
AMBLEN   EQU   IDAAMB+2                                                 02390000
AMBRSC   EQU   IDAAMB+1                                                 02391000
AMBID    EQU   IDAAMB                                                   02392000
ACBAPID  EQU   ACBCOMN+72                                               02393000
ACBCBMWA EQU   ACBCOMN+68                                               02394000
ACBUAPTR EQU   ACBCOMN+64                                               02395000
ACBLRECL EQU   ACBCOMN+62                                               02396000
ACBMSGLN EQU   ACBBLKSZ                                                 02397000
ACBBUFSP EQU   ACBCOMN+56                                               02398000
@NM00013 EQU   ACBUJFCB+1                                               02399000
ACBOPTN  EQU   ACBUJFCB                                                 02400000
ACBVVIC  EQU   ACBINFLG                                                 02401000
ACBUCRA  EQU   ACBINFLG                                                 02402000
ACBSCRA  EQU   ACBINFLG                                                 02403000
ACBCAT   EQU   ACBINFLG                                                 02404000
ACBIJRQE EQU   ACBINFLG                                                 02405000
ACBJEPS  EQU   ACBINFLG                                                 02406000
@NM00012 EQU   ACBINFLG                                                 02407000
ACBERFLG EQU   ACBCOMN+49                                               02408000
ACBBUSY  EQU   ACBIOSFG                                                 02409000
ACBLOCK  EQU   ACBEXFG                                                  02410000
@NM00011 EQU   ACBOFLGS                                                 02411000
ACBDSERR EQU   ACBOFLGS                                                 02412000
ACBOPEN  EQU   ACBOFLGS                                                 02413000
ACBEOV   EQU   ACBOFLGS                                                 02414000
@NM00010 EQU   ACBOFLGS                                                 02415000
ACBDEB   EQU   ACBDDNM+5                                                02416000
ACBERFL  EQU   ACBDDNM+4                                                02417000
ACBAM    EQU   ACBAMETH                                                 02418000
ACBINFL  EQU   ACBDDNM+2                                                02419000
ACBTIOT  EQU   ACBDDNM                                                  02420000
ACBUEL   EQU   ACBEXLST                                                 02421000
ACBPASSW EQU   ACBCOMN+32                                               02422000
ACBMSGAR EQU   ACBCOMN+28                                               02423000
@NM00009 EQU   ACBDSORG+1                                               02424000
ACBDORGA EQU   ACBDSORG+1                                               02425000
@NM00008 EQU   ACBDSORG                                                 02426000
ACBCRNRE EQU   ACBCROPS                                                 02427000
ACBCRNCK EQU   ACBCROPS                                                 02428000
ACBASA   EQU   ACBCCTYP                                                 02429000
@NM00007 EQU   ACBCCTYP                                                 02430000
ACBRECAF EQU   ACBRECFM                                                 02431000
ACBJBUF  EQU   ACBBUFPL+2                                               02432000
ACBMACR4 EQU   ACBBUFPL+1                                               02433000
@NM00006 EQU   ACBMACR3                                                 02434000
ACBNCFX  EQU   ACBMACR3                                                 02435000
ACBSIS   EQU   ACBMACR3                                                 02436000
ACBDFR   EQU   ACBMACR3                                                 02437000
ACBICI   EQU   ACBMACR3                                                 02438000
ACBGSR   EQU   ACBMACR3                                                 02439000
ACBLSR   EQU   ACBMACR3                                                 02440000
@NM00005 EQU   ACBMACR3                                                 02441000
ACBBUFNI EQU   ACBCOMN+18                                               02442000
ACBBUFND EQU   ACBCOMN+16                                               02443000
ACBSTRNO EQU   ACBCOMN+15                                               02444000
ACBBSTNO EQU   ACBCOMN+14                                               02445000
ACBAIX   EQU   ACBMACR2                                                 02446000
ACBDSN   EQU   ACBMACR2                                                 02447000
ACBRST   EQU   ACBMACR2                                                 02448000
ACBLOGON EQU   ACBMACR2                                                 02449000
ACBSKP   EQU   ACBMACR2                                                 02450000
@NM00004 EQU   ACBMACR2                                                 02451000
ACBUBF   EQU   ACBMACR1                                                 02452000
ACBOUT   EQU   ACBMACR1                                                 02453000
ACBIN    EQU   ACBMACR1                                                 02454000
ACBDIR   EQU   ACBMACR1                                                 02455000
ACBSEQ   EQU   ACBMACR1                                                 02456000
ACBBLK   EQU   ACBCNV                                                   02457000
ACBADD   EQU   ACBADR                                                   02458000
ACBKEY   EQU   ACBMACR1                                                 02459000
ACBINRTN EQU   ACBCOMN+8                                                02460000
ACBIBCT  EQU   ACBJWA                                                   02461000
ACBLEN2  EQU   ACBLENG2                                                 02462000
ACBSTYP  EQU   ACBCOMN+1                                                02463000
ACBID    EQU   ACBCOMN                                                  02464000
RPLERMSA EQU   RPLCOMN+72                                               02465000
RPLEMLEN EQU   RPLCOMN+70                                               02466000
RPLACTIV EQU   RPLCOMN+69                                               02467000
RPLBRANC EQU   RPLEXTD1                                                 02468000
RPLNIB   EQU   RPLEXTD1                                                 02469000
@NM00003 EQU   RPLEXTD1                                                 02470000
RPLEXIT  EQU   RPLEXTD1                                                 02471000
RPLNEXIT EQU   RPLEXTD1                                                 02472000
RPLEXSCH EQU   RPLEXTD1                                                 02473000
@NM00002 EQU   RPLRBAR+3                                                02474000
@NM00001 EQU   RPLAIXID                                                 02475000
RPLAXPKP EQU   RPLAIXID                                                 02476000
RPLAIXPC EQU   RPLRBAR                                                  02477000
RPLRSV88 EQU   RPLOPT8                                                  02478000
RPLUNCON EQU   RPLOPT8                                                  02479000
RPLACTV  EQU   RPLOPT8                                                  02480000
RPLSESS  EQU   RPLOPT8                                                  02481000
RPLPEND  EQU   RPLOPT8                                                  02482000
RPLODPRM EQU   RPLOPT8                                                  02483000
RPLODACP EQU   RPLOPT8                                                  02484000
RPLODACQ EQU   RPLOPT8                                                  02485000
RPLRSV78 EQU   RPLOPT7                                                  02486000
RPLRSV77 EQU   RPLOPT7                                                  02487000
RPLRLSOP EQU   RPLOPT7                                                  02488000
RPLTPOST EQU   RPLOPT7                                                  02489000
RPLQOPT  EQU   RPLOPT7                                                  02490000
RPLCNIMM EQU   RPLCNOPT                                                 02491000
RPLCNANY EQU   RPLCNOPT                                                 02492000
RPLCNALL EQU   RPLCNOPT                                                 02493000
RPLRSV68 EQU   RPLOPT6                                                  02494000
RPLRSV67 EQU   RPLOPT6                                                  02495000
RPLLOCK  EQU   RPLOPT6                                                  02496000
RPLNCOND EQU   RPLOPT6                                                  02497000
RPLCOND  EQU   RPLOPT6                                                  02498000
RPLEOT   EQU   RPLUNTYP                                                 02499000
RPLEOM   EQU   RPLUNTYP                                                 02500000
RPLEOB   EQU   RPLUNTYP                                                 02501000
RPLWROPT EQU   RPLOPT5                                                  02502000
RPLNODE  EQU   RPLOPT5                                                  02503000
RPLERACE EQU   RPLWRTYP                                                 02504000
RPLEAU   EQU   RPLWRTYP                                                 02505000
RPLNERAS EQU   RPLWRTYP                                                 02506000
RPLPSOPT EQU   RPLOPT5                                                  02507000
RPLSSNIN EQU   RPLOPT5                                                  02508000
RPLDLGIN EQU   RPLOPT5                                                  02509000
RPLCHAIN EQU   RPLNXTRP                                                 02510000
RPLOPT4  EQU   RPLOPTCD+3                                               02511000
RPLALIGN EQU   RPLOPT3                                                  02512000
RPLFMT   EQU   RPLOPT3                                                  02513000
RPLFLD   EQU   RPLOPT3                                                  02514000
RPLVFY   EQU   RPLOPT3                                                  02515000
RPLBLK   EQU   RPLOPT3                                                  02516000
RPLSFORM EQU   RPLOPT3                                                  02517000
RPLEODS  EQU   RPLOPT3                                                  02518000
RPLNSP   EQU   RPLOPT2                                                  02519000
RPLWAITX EQU   RPLOPT2                                                  02520000
RPLLRD   EQU   RPLOPT2                                                  02521000
RPLCNV   EQU   RPLOPT2                                                  02522000
RPLADD   EQU   RPLADR                                                   02523000
RPLECBIN EQU   RPLECBSW                                                 02524000
RPLGEN   EQU   RPLOPT1                                                  02525000
RPLKGE   EQU   RPLOPT1                                                  02526000
RPLASY   EQU   RPLOPT1                                                  02527000
RPLSKP   EQU   RPLOPT1                                                  02528000
RPLDIR   EQU   RPLOPT1                                                  02529000
RPLDAF   EQU   RPLARG+2                                                 02530000
RPLSAF   EQU   RPLARG                                                   02531000
RPLTCBPT EQU   RPLCOMN+28                                               02532000
RPLCCHAR EQU   RPLCOMN+20                                               02533000
RPLSTRID EQU   RPLCOMN+18                                               02534000
RPLKEYL  EQU   RPLKEYLE                                                 02535000
RPLRDSOH EQU   RPLFDB3                                                  02536000
RPLRLG   EQU   RPLFDB3                                                  02537000
RPLLGFRC EQU   RPLFDB3                                                  02538000
RPLREOT  EQU   RPLFDB3                                                  02539000
RPLREOM  EQU   RPLFDB3                                                  02540000
RPLREOB  EQU   RPLFDB3                                                  02541000
RPLSV32  EQU   RPLFDB3                                                  02542000
RPLUINPT EQU   RPLFDB3                                                  02543000
RPLSTSAV EQU   RPLFDB2                                                  02544000
RPLCUERR EQU   RPLFDB2                                                  02545000
RPLDLGFL EQU   RPLFDB2                                                  02546000
RPLIOERR EQU   RPLFDB2                                                  02547000
RPLDVUNS EQU   RPLFDB2                                                  02548000
RPLATND  EQU   RPLFDB2                                                  02549000
RPLRVID  EQU   RPLFDB2                                                  02550000
RPLERLK  EQU   RPLFDB2                                                  02551000
RPLSTAT  EQU   RPLFDBWD                                                 02552000
RPLPOST  EQU   RPLECB                                                   02553000
RPLWAIT  EQU   RPLECB                                                   02554000
RPLPLHPT EQU   RPLCOMN+4                                                02555000
RPLLEN2  EQU   RPLLEN                                                   02556000
RPLREQ   EQU   RPLIDWD+2                                                02557000
RPLSTYP  EQU   RPLIDWD+1                                                02558000
RPLID    EQU   RPLIDWD                                                  02559000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02560000
@RT00162 EQU   HAVDIWA                                                  02561000
@PB00002 EQU   @EC00568                                                 02562000
@RC00586 EQU   @EL00001                                                 02563000
@PB00003 EQU   @PB00004                                                 02564000
@ENDDATA EQU   *                                                        02565000
         END   IDA019RT,(C'PLS2133',0701,78172)                         02566000
