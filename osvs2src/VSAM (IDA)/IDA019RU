         TITLE 'IDA019RU - AIX UPGRADE DRIVER                          *00001000
                        '                                               00002000
IDA019RU CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RU  78.201'                                 0001 00009000
IDAXGPLH DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP01049-IDAXGPLH)                                   00013000
         ENTRY IDAXGPLH                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  BALR  @11,0                                               0001 00016000
@PSTART  LA    @10,4095(,@11)                                      0001 00017000
         USING @PSTART,@11                                         0001 00018000
         USING @PSTART+4095,@10                                    0001 00019000
         AH    @15,4(,@15)                                         0001 00020000
         BR    @15                                                 0001 00021000
@EP00001 DS    0H                                                  0002 00022000
*   RPARM1=AMBPAMBL;                /* LOAD POINTER TO AMBL          */ 00023000
         L     RPARM1,AMBPAMBL(,RAMB)                              0184 00024000
*   GOTO UPGROUT;                   /* BRANCH TO APPROPRIATE ROUTINE */ 00025000
         SLR   @15,@15                                             0185 00026000
         IC    @15,RPLREQ(,RRPL)                                   0185 00027000
         SLA   @15,2                                               0185 00028000
         L     @15,BRANCH(@15)                                     0185 00029000
         BR    @15                                                 0185 00030000
*UPGGET:                                                           0186 00031000
*                                                                  0186 00032000
*/********************************************************************/ 00033000
*/* DO WORK FOR A GET UPDATE - SAVE NEW RECORD IN PLHLLOR            */ 00034000
*/********************************************************************/ 00035000
*                                                                  0186 00036000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 00037000
UPGGET   IDASVR14                                                       00038000
*   IF PLHLLOR=0 THEN               /* IF SA FOR OLD RECORD NEEDED   */ 00039000
         L     @15,PLHLLOR(,RPLH)                                  0187 00040000
         LTR   @15,@15                                             0187 00041000
         BNZ   @RF00187                                            0187 00042000
*     DO;                                                          0188 00043000
*       RESPECIFY                                                  0189 00044000
*        (RWORK1,                                                  0189 00045000
*         R15) RESTRICTED;                                         0189 00046000
*       IF UPTLLEN<AMDRKP+AMDKEYLN THEN/* LLEN SMALL         @ZA10856*/ 00047000
         L     @09,AMBLBIB(,RPARM1)                                0190 00048000
         L     @09,BIBUPT(,@09)                                    0190 00049000
         L     @08,AMBDSB(,RAMB)                                   0190 00050000
         LH    @07,AMDRKP(,@08)                                    0190 00051000
         AH    @07,AMDKEYLN(,@08)                                  0190 00052000
         CH    @07,UPTLLEN(,@09)                                   0190 00053000
         BNH   @RF00190                                            0190 00054000
*         UPTLLEN=AMDRKP+AMDKEYLN;  /* INCLUDE BASE KEY      @ZA10856*/ 00055000
         STH   @07,UPTLLEN(,@09)                                   0191 00056000
*       RWORK1=UPTLLEN;             /* LOAD LENGTH OF SAVE AREA      */ 00057000
@RF00190 L     @09,AMBLBIB(,RPARM1)                                0192 00058000
         L     @09,BIBUPT(,@09)                                    0192 00059000
         LH    RWORK1,UPTLLEN(,@09)                                0192 00060000
*I01:                                                              0193 00061000
*       DO;                         /* IDACALL(IDAGETWS)             */ 00062000
I01      DS    0H                                                  0194 00063000
*         CALL IDAGETWS;            /* EXIT TO IDAGETWS              */ 00064000
         L     @15,@CV01385                                        0194 00065000
         BALR  @14,@15                                             0194 00066000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00067000
         BALR @11,0                                                     00068000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00069000
         USING *,@11                                                    00070000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 00071000
         USING *+4095,R10                                               00072000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 00073000
         LA    R10,4095(@11)                                            00074000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 00075000
         L     R10,=A(@PSTART+4095)                                     00076000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 00077000
         USING @PSTART+4095,R10                                         00078000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00079000
         L     @11,=A(@PSTART)                                          00080000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00081000
         USING @PSTART,@11                                              00082000
*       END I01;                    /* GET SAVE AREA                 */ 00083000
*       IF R15^=0 THEN              /* IF NO CORE AVAILABLE          */ 00084000
         LTR   R15,R15                                             0204 00085000
         BZ    @RF00204                                            0204 00086000
*         DO;                                                      0205 00087000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR             */ 00088000
         MVI   RPLERREG(RRPL),X'08'                                0206 00089000
*           RPLCMPON=RPLUPGER;      /* OCCURRED DURING UPGRADE       */ 00090000
         MVI   RPLCMPON(RRPL),X'04'                                0207 00091000
*           RPLERRCD=RPLNOVRT;      /* ERROR WAS NOT ENUF CORE       */ 00092000
         MVI   RPLERRCD(RRPL),X'28'                                0208 00093000
*           GEN(IDARST14);          /* RELOAD RETURN ADDRESS         */ 00094000
         IDARST14                                                       00095000
*           RETURN CODE(RPLERREG);  /* EXIT MODULE                   */ 00096000
         SLR   @15,@15                                             0210 00097000
         IC    @15,RPLERREG(,RRPL)                                 0210 00098000
@EL00001 DS    0H                                                  0210 00099000
@EF00001 DS    0H                                                  0210 00100000
@ER00001 BR    @14                                                 0210 00101000
*         END;                                                     0211 00102000
*       ELSE                        /* IF CORE WAS OBTAINED          */ 00103000
*         PLHLLOR=RWORK1;           /* SET ADDRESS OF SAVE AREA      */ 00104000
@RF00204 ST    RWORK1,PLHLLOR(,RPLH)                               0212 00105000
*       RESPECIFY                                                  0213 00106000
*        (RWORK1,                                                  0213 00107000
*         R15) UNRESTRICTED;                                       0213 00108000
*     END;                                                         0214 00109000
*   IF UPTLLEN>MAXMOVE THEN         /* IF SAVED PORTION TOO BIG F MVC*/ 00110000
@RF00187 L     @15,AMBLBIB(,RPARM1)                                0215 00111000
         L     @15,BIBUPT(,@15)                                    0215 00112000
         LH    @15,UPTLLEN(,@15)                                   0215 00113000
         C     @15,@CF01390                                        0215 00114000
         BNH   @RF00215                                            0215 00115000
*     DO;                                                          0216 00116000
*       RESPECIFY                                                  0217 00117000
*        (RWORK2,                                                  0217 00118000
*         RWORK3,                                                  0217 00119000
*         RWORK4,                                                  0217 00120000
*         RWORK5) RESTRICTED;                                      0217 00121000
*       RWORK2=PLHLLOR;             /* LOAD FLD ADDR TO RECIEVE RCD  */ 00122000
         L     RWORK2,PLHLLOR(,RPLH)                               0218 00123000
*       RWORK3=UPTLLEN;             /* LOAD LENGTH OF SAVED RECORD   */ 00124000
         LR    RWORK3,@15                                          0219 00125000
*       RWORK5=RWORK3;              /* COPY LENGTH                   */ 00126000
         LR    RWORK5,RWORK3                                       0220 00127000
*       IF RPLLOC=ON THEN           /* IF LOCATE MODE                */ 00128000
         TM    RPLLOC(RRPL),B'10000000'                            0221 00129000
         BNO   @RF00221                                            0221 00130000
*         RWORK4=RCDADDR;           /* LOAD PTR TO RECORD            */ 00131000
         L     @15,RPLAREA(,RRPL)                                  0222 00132000
         L     RWORK4,RCDADDR(,@15)                                0222 00133000
*       ELSE                        /* IF NOT LOCATE MODE            */ 00134000
*         RWORK4=RPLAREA;           /* POINT TO USERS AREA           */ 00135000
         B     @RC00221                                            0223 00136000
@RF00221 L     RWORK4,RPLAREA(,RRPL)                               0223 00137000
*       MVCL(RWORK2,RWORK4);        /* MOVE RECORD                   */ 00138000
@RC00221 MVCL  RWORK2,RWORK4                                       0224 00139000
*       RESPECIFY                                                  0225 00140000
*        (RWORK2,                                                  0225 00141000
*         RWORK3,                                                  0225 00142000
*         RWORK4,                                                  0225 00143000
*         RWORK5) UNRESTRICTED;                                    0225 00144000
*     END;                                                         0226 00145000
*   ELSE                            /* IF RCD LENGTH OK FOR MVC      */ 00146000
*     DO;                                                          0227 00147000
         B     @RC00215                                            0227 00148000
@RF00215 DS    0H                                                  0228 00149000
*       RESPECIFY                                                  0228 00150000
*         RWORK2 RESTRICTED;                                       0228 00151000
*       IF RPLLOC=ON THEN           /* IF LOCATE MODE                */ 00152000
         TM    RPLLOC(RRPL),B'10000000'                            0229 00153000
         BNO   @RF00229                                            0229 00154000
*         RWORK2=RCDADDR;           /* LOAD RECORD ADDRESS           */ 00155000
         L     @15,RPLAREA(,RRPL)                                  0230 00156000
         L     RWORK2,RCDADDR(,@15)                                0230 00157000
*       ELSE                        /* IF NOT LOCATE MODE            */ 00158000
*         RWORK2=RPLAREA;           /* LOAD RECORD ADDR              */ 00159000
         B     @RC00229                                            0231 00160000
@RF00229 L     RWORK2,RPLAREA(,RRPL)                               0231 00161000
*       PLHLLOR->RECORD(1:UPTLLEN)=RWORK2->RECORD(1:UPTLLEN);/* SAVE    00162000
*                                      ALL OLD KEYS                  */ 00163000
@RC00229 L     @15,PLHLLOR(,RPLH)                                  0232 00164000
         L     @07,AMBLBIB(,RPARM1)                                0232 00165000
         L     @07,BIBUPT(,@07)                                    0232 00166000
         LH    @07,UPTLLEN(,@07)                                   0232 00167000
         BCTR  @07,0                                               0232 00168000
         EX    @07,@SM01575                                        0232 00169000
*       RESPECIFY                                                  0233 00170000
*         RWORK2 UNRESTRICTED;                                     0233 00171000
*     END;                                                         0234 00172000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE?   @ZA29388*/ 00173000
@RC00215 L     @15,AMBTRACE(,RAMB)                                 0235 00174000
         LTR   @15,@15                                             0235 00175000
         BZ    @RF00235                                            0235 00176000
*     DO;                           /*                       @ZA29388*/ 00177000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 00178000
         L     @15,@CV01414                                        0237 00179000
         BALR  @14,@15                                             0237 00180000
*       GEN(DC X'010E');            /* TRACE ID              @ZA29388*/ 00181000
         DC X'010E'                                                     00182000
*     END;                          /*                       @ZA29388*/ 00183000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 00184000
@RF00235 DS    0H                                                  0240 00185000
         IDARST14                                                       00186000
*   RETURN CODE(0);                 /* PROCESSING DONE FOR GET       */ 00187000
         SLR   @15,@15                                             0241 00188000
         BR    @14                                                 0241 00189000
         EJECT                                                          00190000
*UPGPUT:                                                           0242 00191000
*                                                                  0242 00192000
*/********************************************************************/ 00193000
*/* DO WORK FOR A PUT - DECIDE IF UPGRADE IS NEEDED                  */ 00194000
*/********************************************************************/ 00195000
*                                                                  0242 00196000
*   IF RPLRLEN<UPTLLEN THEN         /* IF RECORD TOO SMALL           */ 00197000
UPGPUT   L     @15,AMBLBIB(,RPARM1)                                0242 00198000
         L     @15,BIBUPT(,@15)                                    0242 00199000
         L     @05,RPLRLEN(,RRPL)                                  0242 00200000
         CH    @05,UPTLLEN(,@15)                                   0242 00201000
         BNL   @RF00242                                            0242 00202000
*     DO;                                                          0243 00203000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 00204000
         MVI   RPLERREG(RRPL),X'08'                                0244 00205000
*       RPLCMPON=RPLUPGER;          /* OCCURRED DURING UPGRADE       */ 00206000
         MVI   RPLCMPON(RRPL),X'04'                                0245 00207000
*       RPLERRCD=RPLINLEN;          /* INVALID LENGTH                */ 00208000
         MVI   RPLERRCD(RRPL),X'6C'                                0246 00209000
*       IF AMBTRACE^=ZERO THEN      /* IS IDATRACE ACTIVE?   @ZA29388*/ 00210000
         L     @15,AMBTRACE(,RAMB)                                 0247 00211000
         LTR   @15,@15                                             0247 00212000
         BZ    @RF00247                                            0247 00213000
*         DO;                       /*                       @ZA29388*/ 00214000
*           GEN(IDASVR14);          /* SAVE RETURN ADDRESS   @ZA29388*/ 00215000
         IDASVR14                                                       00216000
*           CALL IDA019ST;          /* CALL IDATRACE         @ZA29388*/ 00217000
         L     @15,@CV01414                                        0250 00218000
         BALR  @14,@15                                             0250 00219000
*           GEN(DC X'010E');        /* TRACE ID              @ZA29388*/ 00220000
         DC X'010E'                                                     00221000
*           GEN(IDARST14);          /* RESTORE RETURN ADDRESS@ZA29388*/ 00222000
         IDARST14                                                       00223000
*         END;                      /*                       @ZA29388*/ 00224000
*       RETURN CODE(RPLERREG);      /* EXIT MODULE                   */ 00225000
@RF00247 SLR   @15,@15                                             0254 00226000
         IC    @15,RPLERREG(,RRPL)                                 0254 00227000
         BR    @14                                                 0254 00228000
*     END;                                                         0255 00229000
*                                                                  0255 00230000
*   /*****************************************************************/ 00231000
*   /*                                                               */ 00232000
*   /* CHECK FOR CHANGE IN ANY AIX KEY                               */ 00233000
*   /*                                                               */ 00234000
*   /*****************************************************************/ 00235000
*                                                                  0256 00236000
*   RESPECIFY                                                      0256 00237000
*    (RWORK1,                                                      0256 00238000
*     RWORK2,                                                      0256 00239000
*     RWORK3,                                                      0256 00240000
*     RWORK5) RESTRICTED;                                          0256 00241000
@RF00242 DS    0H                                                  0257 00242000
*   IF RPLUPD=ON THEN               /* IF PUT NO UPDATE              */ 00243000
         TM    RPLUPD(RRPL),B'00000010'                            0257 00244000
         BNO   @RF00257                                            0257 00245000
*     DO;                                                          0258 00246000
*       RWORK1=ADDR(IDAUPT);        /* POINT TO UPGRADE TABLE        */ 00247000
         L     @15,AMBLBIB(,RPARM1)                                0259 00248000
         L     RWORK1,BIBUPT(,@15)                                 0259 00249000
*       RESPECIFY                                                  0260 00250000
*         IDAUPT BASED(RWORK1);                                    0260 00251000
*       RWORK3=OFF;                 /* USE RWORK3 AS A SWITCH        */ 00252000
         SLR   RWORK3,RWORK3                                       0261 00253000
*       DO RWORK2=UPTNOENT TO 1 BY-1 WHILE RWORK3=OFF;/* LOOP THRU 0262 00254000
*                                      UPT                           */ 00255000
         SLR   RWORK2,RWORK2                                       0262 00256000
         IC    RWORK2,UPTNOENT(,RWORK1)                            0262 00257000
         B     @DE00262                                            0262 00258000
@DL00262 LTR   RWORK3,RWORK3                                       0262 00259000
         BNZ   @DC00262                                            0262 00260000
*         RESPECIFY                                                0263 00261000
*           OLDKEY BASED(PLHLLOR+UPTRKP);                          0263 00262000
*         RESPECIFY                                                0264 00263000
*           NEWKEY BASED(RWORK5);                                  0264 00264000
*         IF RPLLOC=ON THEN         /* IF LOCATE MODE                */ 00265000
         TM    RPLLOC(RRPL),B'10000000'                            0265 00266000
         BNO   @RF00265                                            0265 00267000
*           RWORK5=RCDADDR;         /* LOAD POINTER TO RECORD        */ 00268000
         L     @15,RPLAREA(,RRPL)                                  0266 00269000
         L     RWORK5,RCDADDR(,@15)                                0266 00270000
*         ELSE                      /* ELSE NOT LOCATE MODE          */ 00271000
*           RWORK5=RPLAREA;         /* LOAD POINTER TO RECORD        */ 00272000
         B     @RC00265                                            0267 00273000
@RF00265 L     RWORK5,RPLAREA(,RRPL)                               0267 00274000
*         RWORK5=RWORK5+UPTRKP;     /* POINT TO KEY                  */ 00275000
@RC00265 LH    @15,UPTRKP(,RWORK1)                                 0268 00276000
         ALR   RWORK5,@15                                          0268 00277000
*         IF UPTF1NOP=OFF&          /* IF VALID ENTRY                */ 00278000
*             NEWKEY(1:UPTLNCDE+1)^=OLDKEY(1:UPTLNCDE+1) THEN/* IF 0269 00279000
*                                      KEY CHANGED                   */ 00280000
         TM    UPTF1NOP(RWORK1),B'00010000'                        0269 00281000
         BNZ   @RF00269                                            0269 00282000
         AL    @15,PLHLLOR(,RPLH)                                  0269 00283000
         SLR   @08,@08                                             0269 00284000
         IC    @08,UPTLNCDE(,RWORK1)                               0269 00285000
         EX    @08,@SC01577                                        0269 00286000
         BE    @RF00269                                            0269 00287000
*           RWORK3=ON;                                             0270 00288000
         LA    RWORK3,1                                            0270 00289000
*         ELSE                      /* IF NONE OF THE ABOVE          */ 00290000
*           RWORK1=RWORK1+LENGTH(UPTAXENT);/* POINT TO NEXT ENTRY    */ 00291000
         B     @RC00269                                            0271 00292000
@RF00269 AL    RWORK1,@CF00229                                     0271 00293000
*       END;                                                       0272 00294000
@RC00269 BCTR  RWORK2,0                                            0272 00295000
@DE00262 CL    RWORK2,@CF00054                                     0272 00296000
         BNL   @DL00262                                            0272 00297000
@DC00262 DS    0H                                                  0273 00298000
*       IF RWORK3=OFF THEN          /* IF NO KEY CHANGED             */ 00299000
         LTR   RWORK3,RWORK3                                       0273 00300000
         BNZ   @RF00273                                            0273 00301000
*         DO;                       /*                       @ZA29388*/ 00302000
*           IF AMBTRACE^=ZERO THEN  /* IS IDATRACE ACTIVE?   @ZA29388*/ 00303000
         L     @15,AMBTRACE(,RAMB)                                 0275 00304000
         LTR   @15,@15                                             0275 00305000
         BZ    @RF00275                                            0275 00306000
*             DO;                   /*                       @ZA29388*/ 00307000
*               GEN(IDASVR14);      /* SAVE RETURN ADDRESS   @ZA29388*/ 00308000
         IDASVR14                                                       00309000
*               CALL IDA019ST;      /* CALL IDATRACE         @ZA29388*/ 00310000
         L     @15,@CV01414                                        0278 00311000
         BALR  @14,@15                                             0278 00312000
*               GEN(DC X'010E');    /* TRACE ID              @ZA29388*/ 00313000
         DC X'010E'                                                     00314000
*               GEN(IDARST14);      /* RESTORE RETURN ADDRESS@ZA29388*/ 00315000
         IDARST14                                                       00316000
*             END;                  /*                       @ZA29388*/ 00317000
*           RETURN CODE(0);         /* NO UPGRADE IS NEEDED          */ 00318000
@RF00275 SLR   @15,@15                                             0282 00319000
         BR    @14                                                 0282 00320000
*         END;                                                     0283 00321000
*     END;                          /*                       @ZA29388*/ 00322000
@RF00273 DS    0H                                                  0285 00323000
*   RESPECIFY                                                      0285 00324000
*    (RWORK2,                                                      0285 00325000
*     RWORK3,                                                      0285 00326000
*     RWORK5) UNRESTRICTED;                                        0285 00327000
@RF00257 DS    0H                                                  0286 00328000
         EJECT                                                          00329000
*                                                                  0286 00330000
*/********************************************************************/ 00331000
*/* START UPGRADE - GET EXCLUSIVE CONTROL OF IDAUPT                  */ 00332000
*/********************************************************************/ 00333000
*                                                                  0286 00334000
*UPGERASE:                                                         0286 00335000
*   GEN REFS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE RETURN ADDRESS       */ 00336000
UPGERASE IDASVR14                                                       00337000
*   PLHAMB=RAMB;                    /* SAVE PTR TO AMB               */ 00338000
         ST    RAMB,PLHAMB(,RPLH)                                  0287 00339000
*   RESPECIFY                                                      0288 00340000
*     IDAAMB BASED(PLHAMB);                                        0288 00341000
*   RESPECIFY                                                      0289 00342000
*    (RAMB,                                                        0289 00343000
*     RBUFC) UNRESTRICTED;                                         0289 00344000
*GETUPT:                                                           0290 00345000
*   RWORK1=BIBUPT;                  /* LOAD ADDR OF UPT              */ 00346000
GETUPT   L     @15,AMBLBIB(,RPARM1)                                0290 00347000
         L     RWORK1,BIBUPT(,@15)                                 0290 00348000
*   TS(UPTRSC);                     /* TRY TO GET EXCLUSIVE CONTROL  */ 00349000
         TS    UPTRSC(RWORK1)                                      0291 00350000
*   BC(8,GOTUPT);                   /* BRANCH IF SUCCESSFUL          */ 00351000
         BC    8,GOTUPT                                            0292 00352000
*   DO;                                                            0293 00353000
*                                                                  0293 00354000
*     /***************************************************************/ 00355000
*     /*                                                             */ 00356000
*     /* DEFER REQUEST                                               */ 00357000
*     /*                                                             */ 00358000
*     /***************************************************************/ 00359000
*                                                                  0294 00360000
*     PLHDRRSC=ADDR(UPTRSC);        /* POINT TO RESOURCE             */ 00361000
         LA    @15,UPTRSC(,RWORK1)                                 0294 00362000
         ST    @15,PLHDRRSC(,RPLH)                                 0294 00363000
*     PLHDRMSK='80'X;               /* LOAD MASK                     */ 00364000
         MVI   PLHDRMSK(RPLH),X'80'                                0295 00365000
*     RESPECIFY                                                    0296 00366000
*      (RWORK0,                                                    0296 00367000
*       RAMB) RESTRICTED;                                          0296 00368000
*     RAMB=ADDR(IDAAMB);            /* RELOAD AMB POINTER            */ 00369000
         L     RAMB,PLHAMB(,RPLH)                                  0297 00370000
*     RWORK0=GENRES;                /* INDICATE GENERAL RESOURCE     */ 00371000
         LA    RWORK0,16                                           0298 00372000
*I02:                                                              0299 00373000
*     DO;                           /* IDACALL(IDADRQ)               */ 00374000
I02      DS    0H                                                  0300 00375000
*       CALL IDADRQ;                /* EXIT TO IDADRQ                */ 00376000
         L     @15,@CV01384                                        0300 00377000
         BALR  @14,@15                                             0300 00378000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00379000
         BALR @11,0                                                     00380000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00381000
         USING *,@11                                                    00382000
*       GEN(USING *+4095,R10);      /* ESTABLISH SECOND BASE         */ 00383000
         USING *+4095,R10                                               00384000
*       GEN(LA    R10,4095(@11));   /* LOAD SECOND BASE              */ 00385000
         LA    R10,4095(@11)                                            00386000
*       GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE        */ 00387000
         L     R10,=A(@PSTART+4095)                                     00388000
*       GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE         */ 00389000
         USING @PSTART+4095,R10                                         00390000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00391000
         L     @11,=A(@PSTART)                                          00392000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00393000
         USING @PSTART,@11                                              00394000
*     END I02;                                                     0309 00395000
*     RESPECIFY                                                    0310 00396000
*      (RWORK0,                                                    0310 00397000
*       RAMB) UNRESTRICTED;                                        0310 00398000
*   END;                                                           0311 00399000
*   GOTO GETUPT;                    /* TRY TO GET UPT AGAIN          */ 00400000
         B     GETUPT                                              0312 00401000
         EJECT                                                          00402000
*GOTUPT:                                                           0313 00403000
*                                                                  0313 00404000
*   /*****************************************************************/ 00405000
*   /*                                                               */ 00406000
*   /* INITIALIZE UPGRADE TABLE                                      */ 00407000
*   /*                                                               */ 00408000
*   /*****************************************************************/ 00409000
*                                                                  0313 00410000
*   RPARM1=BIBUPT;                  /* LOAD PTR TO UPT               */ 00411000
GOTUPT   L     @15,AMBLBIB(,RPARM1)                                0313 00412000
         L     @15,BIBUPT(,@15)                                    0313 00413000
         LR    RPARM1,@15                                          0313 00414000
*   IF RPLLOC=ON THEN               /* IF LOCATE REQUEST             */ 00415000
         TM    RPLLOC(RRPL),B'10000000'                            0314 00416000
         BNO   @RF00314                                            0314 00417000
*     RPARM1->UPTNEW=RCDADDR;       /* COPY ADDR POINTER             */ 00418000
         L     @15,RPLAREA(,RRPL)                                  0315 00419000
         L     @15,RCDADDR(,@15)                                   0315 00420000
         ST    @15,UPTNEW(,RPARM1)                                 0315 00421000
*   ELSE                            /* IF NOT LOCATE MODE            */ 00422000
*     RPARM1->UPTNEW=RPLAREA;       /* SET PTR TO NEW RECORD         */ 00423000
         B     @RC00314                                            0316 00424000
@RF00314 L     @15,RPLAREA(,RRPL)                                  0316 00425000
         ST    @15,UPTNEW(,RPARM1)                                 0316 00426000
*   RPARM1->UPTOLD=PLHLLOR;         /* SET PTR TO OLD RECORD SAVED   */ 00427000
@RC00314 L     @15,PLHLLOR(,RPLH)                                  0317 00428000
         ST    @15,UPTOLD(,RPARM1)                                 0317 00429000
*   RESPECIFY                                                      0318 00430000
*    (RWORK2,                                                      0318 00431000
*     RWORK3,                                                      0318 00432000
*     RWORK4) RESTRICTED;                                          0318 00433000
*   IF RPLERREG^=0 THEN             /* IF ERROR PROCESSING BASE      */ 00434000
         CLI   RPLERREG(RRPL),0                                    0319 00435000
         BE    @RF00319                                            0319 00436000
*     DO;                                                          0320 00437000
*                                                                  0320 00438000
*       /*************************************************************/ 00439000
*       /*                                                           */ 00440000
*       /* SWAP UPTNEW AND UPTOLD POINTERS                           */ 00441000
*       /*                                                           */ 00442000
*       /*************************************************************/ 00443000
*                                                                  0321 00444000
*       RWORK2=RPARM1->UPTNEW;      /* SAVE UPTNEW                   */ 00445000
         L     RWORK2,UPTNEW(,RPARM1)                              0321 00446000
*       RPARM1->UPTNEW=RPARM1->UPTOLD;/* NEW IS NOW OLD              */ 00447000
         ST    @15,UPTNEW(,RPARM1)                                 0322 00448000
*       RPARM1->UPTOLD=RWORK2;      /* OLD IS NOW NEW                */ 00449000
         ST    RWORK2,UPTOLD(,RPARM1)                              0323 00450000
*       UPTBEREG=RPLERREG;          /* COPY BASE RPLERREG            */ 00451000
         IC    @15,RPLERREG(,RRPL)                                 0324 00452000
         STC   @15,UPTBEREG(,RWORK1)                               0324 00453000
*       UPTBERCD=RPLERRCD;          /* COPY BASE RPLERRCD            */ 00454000
         IC    @15,RPLERRCD(,RRPL)                                 0325 00455000
         STC   @15,UPTBERCD(,RWORK1)                               0325 00456000
*       RPLFDBWD=0;                 /* ZERO FEEDBACK WORD            */ 00457000
         SLR   @15,@15                                             0326 00458000
         ST    @15,RPLFDBWD(,RRPL)                                 0326 00459000
*     END;                                                         0327 00460000
*   RPARM1->UPTBRPL=ADDR(IFGRPL);   /* SAVE POINTER TO BASE RPL      */ 00461000
@RF00319 ST    RRPL,UPTBRPL(,RPARM1)                               0328 00462000
*   RPARM1->UPTSARES=RUNNING;       /* UPGRADE IS RUNNING            */ 00463000
         MVI   UPTSARES(RPARM1),B'11111111'                        0329 00464000
*   RESPECIFY                                                      0330 00465000
*     NEWKEY BASED(RPARM1->UPTNEW+RWORK1->UPTRKP);                 0330 00466000
*   RESPECIFY                                                      0331 00467000
*     OLDKEY BASED(RPARM1->UPTOLD+RWORK1->UPTRKP);                 0331 00468000
*   RWORK2=RWORK1;                  /* SAVE POINTER TO UPT           */ 00469000
         LR    RWORK2,RWORK1                                       0332 00470000
*   DO RWORK3=UPTNOENT TO 1 BY-1    /* LOOP THRU UPT ENTRIES         */ 00471000
*         WHILE RPLERREG=0;         /* WHILE NO ERROR DETECTED       */ 00472000
         SLR   RWORK3,RWORK3                                       0333 00473000
         IC    RWORK3,UPTNOENT(,RWORK1)                            0333 00474000
         B     @DE00333                                            0333 00475000
@DL00333 CLI   RPLERREG(RRPL),0                                    0333 00476000
         BNE   @DC00333                                            0333 00477000
*     UPTF1ATV=OFF;                 /* RESET ACTIVE BIT              */ 00478000
*     UPTF1NRF=OFF;                 /* RESET NO RECORD FOUND BIT     */ 00479000
*     UPTF1UPG=OFF;                 /* RESET IN UPGRADE BIT          */ 00480000
         NI    UPTF1ATV(RWORK1),B'10110110'                        0336 00481000
*     UPTF1BKO=OFF;                 /* RESET BACKOUT BIT             */ 00482000
*     UPTF1ERA=OFF;                 /* RESET BASE FUNCTION ERASE     */ 00483000
*     UPTF1PUD=OFF;                 /* RESET BASE FUNCTION PUT UPDATE*/ 00484000
*     UPTF1PNU=OFF;                 /* RESET BASE FUNCTION PUT NUP   */ 00485000
*     UPTF1LOG=OFF;                 /* RESET LOGICAL ERROR BIT       */ 00486000
*     UPTF1PHY=OFF;                 /* RESET PHYSICAL ERROR BIT      */ 00487000
         NI    UPTF1BKO(RWORK1),B'00000011'                        0342 00488000
*     IF UPTF1NOP=OFF&              /* IF VALID ENTRY                */ 00489000
*         (RPLREQ=RPLERASE|         /* USER REQUEST IS ERASE         */ 00490000
*         RPLUPD=OFF|               /* USER REQUEST IS PUT NUP       */ 00491000
*         NEWKEY(1:UPTLNCDE+1)^=OLDKEY(1:UPTLNCDE+1)) THEN/* IF AIX     00492000
*                                      KEY HAS CHANGED               */ 00493000
         TM    UPTF1NOP(RWORK1),B'00010000'                        0343 00494000
         BNZ   @RF00343                                            0343 00495000
         CLI   RPLREQ(RRPL),5                                      0343 00496000
         BE    @RT00343                                            0343 00497000
         TM    RPLUPD(RRPL),B'00000010'                            0343 00498000
         BZ    @RT00343                                            0343 00499000
         LH    @15,UPTRKP(,RWORK1)                                 0343 00500000
         L     @09,UPTNEW(,RPARM1)                                 0343 00501000
         ALR   @09,@15                                             0343 00502000
         AL    @15,UPTOLD(,RPARM1)                                 0343 00503000
         SLR   @04,@04                                             0343 00504000
         IC    @04,UPTLNCDE(,RWORK1)                               0343 00505000
         EX    @04,@SC01579                                        0343 00506000
         BE    @RF00343                                            0343 00507000
@RT00343 DS    0H                                                  0344 00508000
*       DO;                                                        0344 00509000
*         RESPECIFY                                                0345 00510000
*          (RWORK5,                                                0345 00511000
*           R15) RESTRICTED;                                       0345 00512000
*         CALL XPANDBFR;            /* BUILD RPLAREA FIELD           */ 00513000
         BAL   @14,XPANDBFR                                        0346 00514000
*         IF UPTRPL->RPLERREG=0 THEN/* IF CORE WAS AVAIL     @ZA19598*/ 00515000
         L     @04,UPTRPL(,RWORK1)                                 0347 00516000
         CLI   RPLERREG(@04),0                                     0347 00517000
         BNE   @RF00347                                            0347 00518000
*           DO;                                                    0348 00519000
*             UPTRPL->RPLBUFL=UPTBG;/* SET RPLAREA FIELD LENGTH      */ 00520000
         LH    @03,UPTBG(,RWORK1)                                  0349 00521000
         ST    @03,RPLBUFL(,@04)                                   0349 00522000
*             UPTRPL->RPLPOST=ON;   /* POST UPGRADE RPL              */ 00523000
         OI    RPLPOST(@04),B'01000000'                            0350 00524000
*             UPTRPL->RPLFDBWD=0;   /* ZERO FEEDBACK FIELD           */ 00525000
         SLR   @03,@03                                             0351 00526000
         ST    @03,RPLFDBWD(,@04)                                  0351 00527000
*             RWORK5=UPTRPL->RPLDACB->ACBAMBL->AMBLDTA;/* LOAD ADDR     00528000
*                                      OF BASE AMB                   */ 00529000
         L     @04,RPLDACB(,@04)                                   0352 00530000
         L     @04,ACBAMBL(,@04)                                   0352 00531000
         L     RWORK5,AMBLDTA(,@04)                                0352 00532000
*             IF(RWORK5->AMBLSR=ON|RWORK5->AMBGSR=ON) THEN/* IF    0353 00533000
*                                                              SHRING*/ 00534000
         TM    AMBLSR(RWORK5),B'01100000'                          0353 00535000
         BZ    @RF00353                                            0353 00536000
*               CALL GETPLH;        /* GET UPGRADE PLH               */ 00537000
         BAL   @14,GETPLH                                          0354 00538000
*             IF RPLERREG=0 THEN    /* IF NO ERROR                   */ 00539000
@RF00353 CLI   RPLERREG(RRPL),0                                    0355 00540000
         BNE   @RF00355                                            0355 00541000
*               DO;                                                0356 00542000
*                 UPTF1ATV=ON;      /* INDICATE ACTIVE ENTRY         */ 00543000
*                 UPTF1UPG=ON;      /* INDICATE AIX IN THIS UPGRADE  */ 00544000
         OI    UPTF1ATV(RWORK1),B'01000001'                        0358 00545000
*                 IF RPLREQ=RPLERASE THEN/* IF BASE FUNCTION IS ERASE*/ 00546000
         CLI   RPLREQ(RRPL),5                                      0359 00547000
         BNE   @RF00359                                            0359 00548000
*                   DO;                                            0360 00549000
*                     IF RPARM1->UPTBEREG=0 THEN/* IF CHANGE TO BASE    00550000
*                                      FAILED                @ZA10895*/ 00551000
         CLI   UPTBEREG(RPARM1),0                                  0361 00552000
         BNE   @RF00361                                            0361 00553000
*                       UPTF1ERA=ON;/* SET ERASE BIT                 */ 00554000
         OI    UPTF1ERA(RWORK1),B'00010000'                        0362 00555000
*                     ELSE          /* IF ERROR PROCESSING BASE      */ 00556000
*                       UPTF1PNU=ON;/* INSERT OLD RECORD             */ 00557000
         B     @RC00361                                            0363 00558000
@RF00361 OI    UPTF1PNU(RWORK1),B'00001000'                        0363 00559000
*                   END;                                           0364 00560000
*                 ELSE              /* BASE FUNCTION IS PUT          */ 00561000
*                   IF RPLUPD=OFF THEN/* IS UPDATE BIT OFF IN RPL    */ 00562000
         B     @RC00359                                            0365 00563000
@RF00359 TM    RPLUPD(RRPL),B'00000010'                            0365 00564000
         BNZ   @RF00365                                            0365 00565000
*                     DO;                                          0366 00566000
*                       IF RPARM1->UPTBEREG=0 THEN/* IF CHANGE TO  0367 00567000
*                                      BASE FAILED           @ZA10895*/ 00568000
         CLI   UPTBEREG(RPARM1),0                                  0367 00569000
         BNE   @RF00367                                            0367 00570000
*                         UPTF1PNU=ON;/* BASE FUNCTION IS PUT NUP    */ 00571000
         OI    UPTF1PNU(RWORK1),B'00001000'                        0368 00572000
*                       ELSE        /* IF ERROR PROCESSING BASE      */ 00573000
*                         UPTF1ERA=ON;/* SET ERASE BIT               */ 00574000
         B     @RC00367                                            0369 00575000
@RF00367 OI    UPTF1ERA(RWORK1),B'00010000'                        0369 00576000
*                     END;                                         0370 00577000
*                   ELSE            /* UPDATE BIT IS ON              */ 00578000
*                     UPTF1PUD=ON;  /* BASE FUNCTION IS PUT UPDATE   */ 00579000
         B     @RC00365                                            0371 00580000
@RF00365 OI    UPTF1PUD(RWORK1),B'00000100'                        0371 00581000
*                 UPTPASS=DPASS1;   /* INITIALIZE PASS INDICATOR     */ 00582000
@RC00365 DS    0H                                                  0372 00583000
@RC00359 MVI   UPTPASS(RWORK1),X'01'                               0372 00584000
*               END;                                               0373 00585000
*           END;                                                   0374 00586000
*         ELSE                      /* IF NO CORE FOR        @ZA19598*/ 00587000
*           RPLFDBWD=UPTRPL->RPLFDBWD;/* UPTRPL AREA         @ZA19598*/ 00588000
         B     @RC00347                                            0375 00589000
@RF00347 L     @04,UPTRPL(,RWORK1)                                 0375 00590000
         L     @04,RPLFDBWD(,@04)                                  0375 00591000
         ST    @04,RPLFDBWD(,RRPL)                                 0375 00592000
*         RESPECIFY                                                0376 00593000
*          (RWORK5,                                                0376 00594000
*           R15) UNRESTRICTED;                                     0376 00595000
@RC00347 DS    0H                                                  0377 00596000
*       END;                                                       0377 00597000
*     RWORK1=RWORK1+LENGTH(UPTAXENT);/* POINT TO NEXT ENTRY          */ 00598000
@RF00343 AL    RWORK1,@CF00229                                     0378 00599000
*   END;                                                           0379 00600000
         BCTR  RWORK3,0                                            0379 00601000
@DE00333 LTR   RWORK3,RWORK3                                       0379 00602000
         BP    @DL00333                                            0379 00603000
@DC00333 DS    0H                                                  0380 00604000
         EJECT                                                          00605000
*                                                                  0380 00606000
*/********************************************************************/ 00607000
*/* DO UPGRADE -                                                     */ 00608000
*/********************************************************************/ 00609000
*                                                                  0380 00610000
*   IF RPLERREG=0 THEN              /* IF NO ERROR AS YET            */ 00611000
         CLI   RPLERREG(RRPL),0                                    0380 00612000
         BNE   @RF00380                                            0380 00613000
*     DO;                                                          0381 00614000
*       RWORK1=RWORK2;              /* RESTORE UPT BASE              */ 00615000
         LR    RWORK1,RWORK2                                       0382 00616000
*       RESPECIFY                                                  0383 00617000
*        (RWORK2,                                                  0383 00618000
*         RWORK3,                                                  0383 00619000
*         RWORK4) UNRESTRICTED;                                    0383 00620000
*       DO UNTIL UPTPWS=OFF;        /* LOOP UNTIL BIT SET TO OFF     */ 00621000
*                                                                  0384 00622000
@DL00384 DS    0H                                                  0385 00623000
*         /***********************************************************/ 00624000
*         /*                                                         */ 00625000
*         /* LOOP UNTIL UPGRADE IS COMPLETE OR TERMINATED            */ 00626000
*         /*                                                         */ 00627000
*         /***********************************************************/ 00628000
*                                                                  0385 00629000
*         UPTPWS=OFF;               /* WILL STAY OFF UNTIL TET ON    */ 00630000
         NI    UPTPWS(RWORK1),B'01111111'                          0385 00631000
*         RWORK1=RWORK1-LENGTH(UPTAXENT);/* BACK UP BASE             */ 00632000
         SL    RWORK1,@CF00229                                     0386 00633000
*         DO UNTIL UPTF1LST=ON;     /* LOOP UNTIL LAST ENTRY         */ 00634000
@DL00387 DS    0H                                                  0388 00635000
*           RWORK1=RWORK1+LENGTH(UPTAXENT);/* POINT TO NEXT ENTRY    */ 00636000
         AL    RWORK1,@CF00229                                     0388 00637000
*           IF UPTF1ATV=ON THEN     /* IF ENTRY IS ACTIVE            */ 00638000
         TM    UPTF1ATV(RWORK1),B'01000000'                        0389 00639000
         BNO   @RF00389                                            0389 00640000
*             DO;                                                  0390 00641000
*               DO WHILE(UPTRPL->RPLPOST=OFF);/* IF NO POST  @ZA14791*/ 00642000
         B     @DE00391                                            0391 00643000
@DL00391 DS    0H                                                  0392 00644000
*                 CALL HOLD;        /* HOLD UNTIL I/O COMPLETE       */ 00645000
         BAL   @14,HOLD                                            0392 00646000
*               END;                /*                       @ZA14791*/ 00647000
@DE00391 L     @15,UPTRPL(,RWORK1)                                 0393 00648000
         TM    RPLPOST(@15),B'01000000'                            0393 00649000
         BZ    @DL00391                                            0393 00650000
*               IF UPTRPL->RPLERREG^=0 THEN/* IF ANY ERROR           */ 00651000
         CLI   RPLERREG(@15),0                                     0394 00652000
         BE    @RF00394                                            0394 00653000
*                 CALL ERRPROC;     /* DO ERROR PROCESSING           */ 00654000
         BAL   @14,ERRPROC                                         0395 00655000
*               IF UPTF1RTY=OFF&    /* IF NO RETRY NEEDED            */ 00656000
*                   UPTF1ATV=ON THEN/* IF ENTRY STILL ACTIVE         */ 00657000
@RF00394 TM    UPTF1ATV(RWORK1),B'01000000'                        0396 00658000
         BNO   @RF00396                                            0396 00659000
         TM    UPTF1RTY(RWORK1),B'00000010'                        0396 00660000
         BNZ   @RF00396                                            0396 00661000
*                 CALL PASS;        /* CALL PASS ROUTINE             */ 00662000
         SLR   @04,@04                                             0397 00663000
         IC    @04,UPTPASS(,RWORK1)                                0397 00664000
         SLA   @04,2                                               0397 00665000
         L     @15,PASSTAB-4(@04)                                  0397 00666000
         BALR  @14,@15                                             0397 00667000
*               UPTF1RTY=OFF;       /* RESET RETRY BIT               */ 00668000
@RF00396 NI    UPTF1RTY(RWORK1),B'11111101'                        0398 00669000
*               IF UPTF1ATV=ON THEN /* IF ENTRY STILL ACTIVE         */ 00670000
         TM    UPTF1ATV(RWORK1),B'01000000'                        0399 00671000
         BNO   @RF00399                                            0399 00672000
*                 DO;                                              0400 00673000
*                   IF UPTRPL->RPLERREG^=0 THEN/* IF ANY ERROR       */ 00674000
         L     @15,UPTRPL(,RWORK1)                                 0401 00675000
         CLI   RPLERREG(@15),0                                     0401 00676000
         BE    @RF00401                                            0401 00677000
*                     CALL ERRPROC; /* CHECK FOR FATAL ERROR         */ 00678000
         BAL   @14,ERRPROC                                         0402 00679000
*                   RPARM1->UPTPWS=ON;/* SET BIT TO CONTINUE SCAN    */ 00680000
@RF00401 OI    UPTPWS(RPARM1),B'10000000'                          0403 00681000
*                 END;                                             0404 00682000
*             END;                                                 0405 00683000
@RF00399 DS    0H                                                  0406 00684000
*         END;                                                     0406 00685000
@RF00389 DS    0H                                                  0406 00686000
@DE00387 TM    UPTF1LST(RWORK1),B'10000000'                        0406 00687000
         BNO   @DL00387                                            0406 00688000
*         RWORK1=RPARM1;            /* RELOAD PTR TO UPT             */ 00689000
         LR    RWORK1,RPARM1                                       0407 00690000
*       END;                                                       0408 00691000
@DE00384 TM    UPTPWS(RWORK1),B'10000000'                          0408 00692000
         BNZ   @DL00384                                            0408 00693000
*     END;                                                         0409 00694000
*   IF RPARM1->UPTBEREG^=0 THEN     /* IF ERROR WAS FROM BASE        */ 00695000
@RF00380 CLI   UPTBEREG(RPARM1),0                                  0410 00696000
         BE    @RF00410                                            0410 00697000
*     DO;                                                          0411 00698000
*       RPLERREG=RPARM1->UPTBEREG;  /* RESTORE BASE ERROR REG        */ 00699000
         IC    @15,UPTBEREG(,RPARM1)                               0412 00700000
         STC   @15,RPLERREG(,RRPL)                                 0412 00701000
*       RPLERRCD=RPARM1->UPTBERCD;  /* RESTORE BASE ERROR CODE       */ 00702000
         IC    @15,UPTBERCD(,RPARM1)                               0413 00703000
         STC   @15,RPLERRCD(,RRPL)                                 0413 00704000
*       RPARM1->UPTBEREG=0;         /* ZERO OLD COPY                 */ 00705000
         MVI   UPTBEREG(RPARM1),X'00'                              0414 00706000
*       RPARM1->UPTBERCD=0;         /* ZERO OLD COPY                 */ 00707000
         MVI   UPTBERCD(RPARM1),X'00'                              0415 00708000
*       IF RPLCMPON^=0 THEN         /* IF ANY ERROR                  */ 00709000
         CLI   RPLCMPON(RRPL),0                                    0416 00710000
         BE    @RF00416                                            0416 00711000
*         RPLCMPON=RPLBASUM;        /* UPGRADE MAY NOT BE COMPLETE   */ 00712000
         MVI   RPLCMPON(RRPL),X'01'                                0417 00713000
*     END;                                                         0418 00714000
@RF00416 DS    0H                                                  0419 00715000
         EJECT                                                          00716000
*                                                                  0419 00717000
*/********************************************************************/ 00718000
*/* TERMINATE UPGRADE                                                */ 00719000
*/********************************************************************/ 00720000
*                                                                  0419 00721000
*   RWORK1=RPARM1;                  /* POINT TO UPT                  */ 00722000
@RF00410 LR    RWORK1,RPARM1                                       0419 00723000
*   RESPECIFY                                                      0420 00724000
*     RWORK2 RESTRICTED;                                           0420 00725000
*   DO RWORK2=UPTNOENT TO 1 BY-1;   /* LOOP THRU UPT ENTRIES         */ 00726000
         SLR   RWORK2,RWORK2                                       0421 00727000
         IC    RWORK2,UPTNOENT(,RWORK1)                            0421 00728000
         B     @DE00421                                            0421 00729000
@DL00421 DS    0H                                                  0422 00730000
*     IF UPTF1NOP=OFF&              /* IF VALID ENTRY                */ 00731000
*         UPTRPL->RPLAREA^=0 THEN   /* IF RPLAREA FIELD EXISTS       */ 00732000
         TM    UPTF1NOP(RWORK1),B'00010000'                        0422 00733000
         BNZ   @RF00422                                            0422 00734000
         L     @15,UPTRPL(,RWORK1)                                 0422 00735000
         L     @07,RPLAREA(,@15)                                   0422 00736000
         LTR   @07,@07                                             0422 00737000
         BZ    @RF00422                                            0422 00738000
*       DO;                                                        0423 00739000
*         STM(RRPL,RPARM1,RPARM1->UPTR15);/* SAVE REGISTERS          */ 00740000
         STM   RRPL,RPARM1,UPTR15(RPARM1)                          0424 00741000
*         RWORK2=UPTRPL->RPLBUFL;   /* LOAD RPLAREA FIELD LENGTH     */ 00742000
         L     RWORK2,RPLBUFL(,@15)                                0425 00743000
*         RWORK1=UPTRPL->RPLAREA;   /* LOAD RPLAREA FIELD ADDRESS    */ 00744000
         LR    RWORK1,@07                                          0426 00745000
*         RESPECIFY                                                0427 00746000
*           RAMB RESTRICTED;                                       0427 00747000
*         RAMB=ADDR(IDAAMB);        /* POINT TO AMB                  */ 00748000
         L     RAMB,PLHAMB(,RPLH)                                  0428 00749000
*I03:                                                              0429 00750000
*         DO;                       /* IDACALL(IDARELWS)             */ 00751000
I03      DS    0H                                                  0430 00752000
*           CALL IDARELWS;          /* EXIT TO IDARELWS              */ 00753000
         L     @15,@CV01386                                        0430 00754000
         BALR  @14,@15                                             0430 00755000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00756000
         BALR @11,0                                                     00757000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00758000
         USING *,@11                                                    00759000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 00760000
         USING *+4095,R10                                               00761000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 00762000
         LA    R10,4095(@11)                                            00763000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 00764000
         L     R10,=A(@PSTART+4095)                                     00765000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 00766000
         USING @PSTART+4095,R10                                         00767000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00768000
         L     @11,=A(@PSTART)                                          00769000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00770000
         USING @PSTART,@11                                              00771000
*         END I03;                  /* RELEASE WORK SPACE            */ 00772000
*         RESPECIFY                                                0440 00773000
*           RAMB UNRESTRICTED;                                     0440 00774000
*         LM(RRPL,RPARM1,RPARM1->UPTR15);/* RESTORE REGISTERS        */ 00775000
         LM    RRPL,RPARM1,UPTR15(RPARM1)                          0441 00776000
*         UPTRPL->RPLAREA=0;        /* ZERO RPLAREA FIELD ADDRESS    */ 00777000
         SLR   @15,@15                                             0442 00778000
         L     @07,UPTRPL(,RWORK1)                                 0442 00779000
         ST    @15,RPLAREA(,@07)                                   0442 00780000
*         UPTRPL->RPLBUFL=0;        /* ZERO BUFFER LENGTH            */ 00781000
         ST    @15,RPLBUFL(,@07)                                   0443 00782000
*       END;                                                       0444 00783000
*     RESPECIFY                                                    0445 00784000
*       RWORK3 RESTRICTED;                                         0445 00785000
@RF00422 DS    0H                                                  0446 00786000
*     RWORK3=UPTRPL->RPLDACB->ACBAMBL->AMBLDTA;/* LOAD BASE AMB PTR  */ 00787000
         L     @15,UPTRPL(,RWORK1)                                 0446 00788000
         L     @15,RPLDACB(,@15)                                   0446 00789000
         L     @15,ACBAMBL(,@15)                                   0446 00790000
         L     RWORK3,AMBLDTA(,@15)                                0446 00791000
*     IF(RWORK3->AMBLSR=ON|RWORK3->AMBGSR=ON)&/* IF ANY RES SHRING   */ 00792000
*         UPTF1UPG=ON THEN          /* IF ENTRY WAS IN UPGRADE       */ 00793000
         TM    AMBLSR(RWORK3),B'01100000'                          0447 00794000
         BZ    @RF00447                                            0447 00795000
         TM    UPTF1UPG(RWORK1),B'00000001'                        0447 00796000
         BNO   @RF00447                                            0447 00797000
*       CALL RELPLH;                /* RELEASE PLH                   */ 00798000
         BAL   @14,RELPLH                                          0448 00799000
*     RESPECIFY                                                    0449 00800000
*       RWORK3 UNRESTRICTED;                                       0449 00801000
@RF00447 DS    0H                                                  0450 00802000
*     RWORK1=RWORK1+LENGTH(UPTAXENT);/* POINT TO NEXT ENTRY          */ 00803000
         AL    RWORK1,@CF00229                                     0450 00804000
*   END;                                                           0451 00805000
         BCTR  RWORK2,0                                            0451 00806000
@DE00421 CL    RWORK2,@CF00054                                     0451 00807000
         BNL   @DL00421                                            0451 00808000
*   RESPECIFY                                                      0452 00809000
*     RWORK2 UNRESTRICTED;                                         0452 00810000
*   RWORK1=RPARM1;                  /* RELOAD POINTER TO UPT         */ 00811000
         LR    RWORK1,RPARM1                                       0453 00812000
*   UPTRSC=0;                       /* RELEASE UPT RESOURCE          */ 00813000
         MVI   UPTRSC(RWORK1),X'00'                                0454 00814000
*   RRPL=RPARM1->UPTBRPL;           /* RELOAD USER RPL POINTER       */ 00815000
         L     RRPL,UPTBRPL(,RPARM1)                               0455 00816000
*   RPARM1=ACBAMBL;                 /* RELOAD AMBL ADDRESS           */ 00817000
         L     @15,RPLDACB(,RRPL)                                  0456 00818000
         L     RPARM1,ACBAMBL(,@15)                                0456 00819000
*   RESPECIFY                                                      0457 00820000
*     RAMB RESTRICTED;                                             0457 00821000
*   RAMB=PLHAMB;                    /* RESTORE PTR TO AMB            */ 00822000
         L     @15,PLHAMB(,RPLH)                                   0458 00823000
         LR    RAMB,@15                                            0458 00824000
*   IF AMBTRACE^=ZERO THEN          /* IS IDATRACE ACTIVE?   @ZA29388*/ 00825000
         L     @15,AMBTRACE(,@15)                                  0459 00826000
         LTR   @15,@15                                             0459 00827000
         BZ    @RF00459                                            0459 00828000
*     DO;                           /*                       @ZA29388*/ 00829000
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/ 00830000
         L     @15,@CV01414                                        0461 00831000
         BALR  @14,@15                                             0461 00832000
*       GEN(DC X'000E');            /* TRACE ID              @ZA29388*/ 00833000
         DC X'000E'                                                     00834000
*     END;                          /*                       @ZA29388*/ 00835000
*   GEN(IDARST14);                  /* RELOAD RETURN ADDRESS         */ 00836000
@RF00459 DS    0H                                                  0464 00837000
         IDARST14                                                       00838000
*   RETURN CODE(RPLERREG);          /* RETURN TO IDA019R4            */ 00839000
         SLR   @15,@15                                             0465 00840000
         IC    @15,RPLERREG(,RRPL)                                 0465 00841000
         BR    @14                                                 0465 00842000
*   RESPECIFY                                                      0466 00843000
*     RAMB UNRESTRICTED;                                           0466 00844000
         EJECT                                                          00845000
*HOLD:                                                             0467 00846000
*                                                                  0467 00847000
*/********************************************************************/ 00848000
*/* THIS ROUTINE WILL WAIT FOR I/O OR RETURN TO USER                 */ 00849000
*/********************************************************************/ 00850000
*                                                                  0467 00851000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0467 00852000
HOLD     DS    0H                                                  0468 00853000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00854000
         IDASVR14                                                       00855000
*   STM(R15,RPARM1,RPARM1->UPTR15); /* SAVE REGISTERS                */ 00856000
         STM   R15,RPARM1,UPTR15(RPARM1)                           0469 00857000
*   IF RPLASY=OFF THEN              /* IF SYNCH USER REQUEST         */ 00858000
         TM    RPLASY(RRPL),B'00001000'                            0470 00859000
         BNZ   @RF00470                                            0470 00860000
*     DO;                                                          0471 00861000
*       R1=ADDR(UPTRPL->RPLECB);    /* POINT TO ECB                  */ 00862000
         L     R1,UPTRPL(,RWORK1)                                  0472 00863000
         LA    R1,RPLECB(,R1)                                      0472 00864000
*       GEN(WAIT ECB=(1));          /* WAIT FOR I/O TO COMPLETE      */ 00865000
         WAIT ECB=(1)                                                   00866000
*     END;                                                         0474 00867000
*   ELSE                            /* OTHERWISE, ASYCH RESUEST      */ 00868000
*     DO;                                                          0475 00869000
         B     @RC00470                                            0475 00870000
@RF00470 DS    0H                                                  0476 00871000
*       RPARM1->UPTSARES=WAITING;   /* UPGRADE IS WAITING            */ 00872000
         MVI   UPTSARES(RPARM1),B'00000000'                        0476 00873000
*       IF UPTRPL->RPLPOST=ON THEN  /* IF I/O IS NOW COMPLETE        */ 00874000
         L     @15,UPTRPL(,RWORK1)                                 0477 00875000
         TM    RPLPOST(@15),B'01000000'                            0477 00876000
         BNO   @RF00477                                            0477 00877000
*         DO;                                                      0478 00878000
*           TS(RPARM1->UPTSARES);   /* TRY TO REGAIN CONTROL         */ 00879000
         TS    UPTSARES(RPARM1)                                    0479 00880000
*           GEN(BZ  CONTINUE);      /* BRANCH IF CONTROL REGAINED    */ 00881000
         BZ  CONTINUE                                                   00882000
*         END;                                                     0481 00883000
*       RAMB=UPTRPL->RPLDACB->ACBAMBL->AMBLDTA;/* GET AMB    @ZA28276*/ 00884000
@RF00477 L     @15,UPTRPL(,RWORK1)                                 0482 00885000
         L     @15,RPLDACB(,@15)                                   0482 00886000
         L     @15,ACBAMBL(,@15)                                   0482 00887000
         L     RAMB,AMBLDTA(,@15)                                  0482 00888000
*       RRPL=0;                     /* SET SW FOR NO RETURN  @ZA19555*/ 00889000
         SLR   RRPL,RRPL                                           0483 00890000
*I04:                                                              0484 00891000
*       DO;                         /* IDACALL(IDARSTRT)             */ 00892000
I04      DS    0H                                                  0485 00893000
*         CALL IDARSTRT;            /* EXIT TO IDARSTRT              */ 00894000
         L     @15,@CV01452                                        0485 00895000
         BALR  @14,@15                                             0485 00896000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00897000
         BALR @11,0                                                     00898000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00899000
         USING *,@11                                                    00900000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00901000
         L     @11,=A(@PSTART)                                          00902000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00903000
         USING @PSTART,@11                                              00904000
*       END I04;                    /* EXIT THRU RESTART     @ZA19555*/ 00905000
*     END;                                                         0491 00906000
*CONTINUE:                                                         0492 00907000
*   LM(R15,RPARM1,RPARM1->UPTR15);  /* LOAD REGISTERS FROM UPT       */ 00908000
@RC00470 DS    0H                                                  0492 00909000
CONTINUE LM    R15,RPARM1,UPTR15(RPARM1)                           0492 00910000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00911000
         IDARST14                                                       00912000
*   RETURN;                         /* RETURN TO USER                */ 00913000
@EL00002 DS    0H                                                  0494 00914000
@EF00002 DS    0H                                                  0494 00915000
@ER00002 BR    @14                                                 0494 00916000
*   END HOLD;                                                      0495 00917000
         EJECT                                                          00918000
*PASS1:                                                            0496 00919000
*                                                                  0496 00920000
*/********************************************************************/ 00921000
*/*                                                                  */ 00922000
*/* USER FUNCTION            UNIQUE KEYS            NON-UNIQUE KEYS  */ 00923000
*/*  1. ERASE                 GET UPD OLD KEY        GET UPD OLD KEY */ 00924000
*/*  2. PUT NUP               PUT NUP NEW KEY        GET UPD NEW KEY */ 00925000
*/*  3. PUT UPDATE            PUT NUP NEW KEY        GET UPD NEW KEY */ 00926000
*/*                                                                  */ 00927000
*/********************************************************************/ 00928000
*                                                                  0496 00929000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0496 00930000
PASS1    DS    0H                                                  0497 00931000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00932000
         IDASVR14                                                       00933000
*   IF UPTF1ERA=ON THEN             /* IF BASE RECORD BEING ERASED   */ 00934000
         TM    UPTF1ERA(RWORK1),B'00010000'                        0498 00935000
         BNO   @RF00498                                            0498 00936000
*     DO;                                                          0499 00937000
*       UPTF1KEY=UPTOKEY;           /* INDICATE OLD KEY NEEDED       */ 00938000
         NI    UPTF1KEY(RWORK1),B'11111011'                        0500 00939000
*       CALL GETUPD;                /* GET OLD KEY FOR UPDATE        */ 00940000
         BAL   @14,GETUPD                                          0501 00941000
*     END;                                                         0502 00942000
*   ELSE                            /* IF NONE OF THE ABOVE          */ 00943000
*     DO;                                                          0503 00944000
         B     @RC00498                                            0503 00945000
@RF00498 DS    0H                                                  0504 00946000
*       UPTF1KEY=UPTNKEY;           /* INDICATE NEW KEY              */ 00947000
         OI    UPTF1KEY(RWORK1),B'00000100'                        0504 00948000
*       IF UPTF1NUK=OFF THEN        /* IF UNIQUE KEYS                */ 00949000
         TM    UPTF1NUK(RWORK1),B'00100000'                        0505 00950000
         BNZ   @RF00505                                            0505 00951000
*         CALL PUTNUP;              /* PUT INSERT NEW KEY            */ 00952000
         BAL   @14,PUTNUP                                          0506 00953000
*       ELSE                        /* IF NON-UNIQUE KEYS            */ 00954000
*         CALL GETUPD;              /* GET RECORD IF EXISTS          */ 00955000
         B     @RC00505                                            0507 00956000
@RF00505 BAL   @14,GETUPD                                          0507 00957000
*     END;                                                         0508 00958000
@RC00505 DS    0H                                                  0509 00959000
*   UPTPASS=DPASS2;                 /* SET NEXT PASS                 */ 00960000
@RC00498 MVI   UPTPASS(RWORK1),X'02'                               0509 00961000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 00962000
         IDARST14                                                       00963000
*   END PASS1;                                                     0511 00964000
@EL00003 DS    0H                                                  0511 00965000
@EF00003 DS    0H                                                  0511 00966000
@ER00003 BR    @14                                                 0511 00967000
*PASS2:                                                            0512 00968000
*                                                                  0512 00969000
*/********************************************************************/ 00970000
*/*                                                                  */ 00971000
*/* WAIT FOR ALL PASS 1 I/O TO COMPLETE                              */ 00972000
*/*                                                                  */ 00973000
*/********************************************************************/ 00974000
*                                                                  0512 00975000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0512 00976000
PASS2    DS    0H                                                  0513 00977000
*   RESPECIFY                                                      0513 00978000
*     R14 RESTRICTED;                                              0513 00979000
*   UPTPASS=DPASS4;                 /* SET TO GO TO PASS 3           */ 00980000
         MVI   UPTPASS(RWORK1),X'04'                               0514 00981000
*   RESPECIFY                                                      0515 00982000
*     R14 UNRESTRICTED;                                            0515 00983000
*   END PASS2;                                                     0516 00984000
@EL00004 DS    0H                                                  0516 00985000
@EF00004 DS    0H                                                  0516 00986000
@ER00004 BR    @14                                                 0516 00987000
         EJECT                                                          00988000
*PASS4:                                                            0517 00989000
*                                                                  0517 00990000
*/********************************************************************/ 00991000
*/*                                                                  */ 00992000
*/* USER FUNCTION            UNIQUE KEYS            NON-UNIQUE KEYS  */ 00993000
*/*  1. ERASE                 ERASE OLD KEY          PUT UPD OLD KEY */ 00994000
*/*  2. PUT NUP                (DONE)                PUT UPD NEW KEY */ 00995000
*/*  3. PUT UPDATE            GET UPD OLD KEY        PUT UPD NEW KEY */ 00996000
*/*                                                                  */ 00997000
*/********************************************************************/ 00998000
*                                                                  0517 00999000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0517 01000000
PASS4    DS    0H                                                  0518 01001000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01002000
         IDASVR14                                                       01003000
*   IF(UPTF1PNU=ON)&                /* IF USER REQ PUT NUP           */ 01004000
*       UPTF1NUK=OFF THEN           /* IF UPGRADE ACB HAS UNIQUE KEYS*/ 01005000
         TM    UPTF1PNU(RWORK1),B'00001000'                        0519 01006000
         BNO   @RF00519                                            0519 01007000
         TM    UPTF1NUK(RWORK1),B'00100000'                        0519 01008000
         BNZ   @RF00519                                            0519 01009000
*     UPTF1ATV=OFF;                 /* THIS PART OF UPGRADE COMPLETE */ 01010000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0520 01011000
*   ELSE                            /* IF NONE OF THE ABOVE          */ 01012000
*     DO;                                                          0521 01013000
         B     @RC00519                                            0521 01014000
@RF00519 DS    0H                                                  0522 01015000
*       IF UPTF1LOP^=UPTLOPGU THEN  /* PASS 1 OPERATION NOT GET UPD  */ 01016000
         CLI   UPTF1LOP(RWORK1),B'01000000'                        0522 01017000
         BE    @RF00522                                            0522 01018000
*         DO;                                                      0523 01019000
*           IF UPTF1PNU=ON THEN     /* IF BASE FUNCTION PUT NUP      */ 01020000
         TM    UPTF1PNU(RWORK1),B'00001000'                        0524 01021000
         BNO   @RF00524                                            0524 01022000
*             UPTF1ATV=OFF;         /* UPGRADE IS COMPLETE           */ 01023000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0525 01024000
*           ELSE                    /* IF NOT PUT NUP                */ 01025000
*             DO;                                                  0526 01026000
         B     @RC00524                                            0526 01027000
@RF00524 DS    0H                                                  0527 01028000
*               UPTF1KEY=UPTOKEY;   /* PROCESS OLD KEY               */ 01029000
         NI    UPTF1KEY(RWORK1),B'11111011'                        0527 01030000
*               CALL GETUPD;        /* GET UPD OLD KEY               */ 01031000
         BAL   @14,GETUPD                                          0528 01032000
*             END;                                                 0529 01033000
*         END;                                                     0530 01034000
*       ELSE                        /* PASS 1 OPERATION WAS GET UPD  */ 01035000
*         IF UPTF1NRF=ON THEN       /* IF NO RECORD WAS FOUND        */ 01036000
         B     @RC00522                                            0531 01037000
@RF00522 TM    UPTF1NRF(RWORK1),B'00001000'                        0531 01038000
         BNO   @RF00531                                            0531 01039000
*           DO;                                                    0532 01040000
*             UPTF1NRF=OFF;         /* RESET BIT                     */ 01041000
         NI    UPTF1NRF(RWORK1),B'11110111'                        0533 01042000
*             IF UPTF1KEY=UPTOKEY THEN/* IF OLD KEY WAS NOT FOUND    */ 01043000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0534 01044000
         BNZ   @RF00534                                            0534 01045000
*               UPTF1ATV=OFF;       /* UPGRADE PROCESSING IS COMPLETE*/ 01046000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0535 01047000
*             ELSE                  /* IF NEW KEY WAS NOT FOUND      */ 01048000
*               CALL PUTNUP;        /* INSERT NEW KEY                */ 01049000
         B     @RC00534                                            0536 01050000
@RF00534 BAL   @14,PUTNUP                                          0536 01051000
*           END;                                                   0537 01052000
*         ELSE                      /* IF RECORD WAS FOUND           */ 01053000
*           DO;                                                    0538 01054000
         B     @RC00531                                            0538 01055000
@RF00531 DS    0H                                                  0539 01056000
*             IF UPTF1KEY=UPTOKEY THEN/* IF OLD KEY WAS FOUND        */ 01057000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0539 01058000
         BNZ   @RF00539                                            0539 01059000
*               DO;                                                0540 01060000
*                 IF UPTF1NUK=ON THEN/* IF NOT UNIQUE KEYS           */ 01061000
         TM    UPTF1NUK(RWORK1),B'00100000'                        0541 01062000
         BNO   @RF00541                                            0541 01063000
*                   CALL PUTUPD;    /* PUT UPD OLD KEY               */ 01064000
         BAL   @14,PUTUPD                                          0542 01065000
*                 ELSE              /* IF UNIQUE KEYS                */ 01066000
*                   CALL ERAUPD;    /* ERASE OLD KEY                 */ 01067000
         B     @RC00541                                            0543 01068000
@RF00541 BAL   @14,ERAUPD                                          0543 01069000
*               END;                                               0544 01070000
*             ELSE                  /* IF NEW KEY WAS FOUND          */ 01071000
*               CALL PUTUPD;        /* PUT UPD KEY KEY               */ 01072000
         B     @RC00539                                            0545 01073000
@RF00539 BAL   @14,PUTUPD                                          0545 01074000
*           END;                                                   0546 01075000
@RC00539 DS    0H                                                  0547 01076000
*     END;                                                         0547 01077000
@RC00531 DS    0H                                                  0547 01078000
@RC00522 DS    0H                                                  0548 01079000
*   UPTPASS=DPASS5;                 /* GO TO PASS 5 NEXT             */ 01080000
@RC00519 MVI   UPTPASS(RWORK1),X'05'                               0548 01081000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01082000
         IDARST14                                                       01083000
*   END PASS4;                                                     0550 01084000
@EL00005 DS    0H                                                  0550 01085000
@EF00005 DS    0H                                                  0550 01086000
@ER00005 BR    @14                                                 0550 01087000
         EJECT                                                          01088000
*PASS5:                                                            0551 01089000
*                                                                  0551 01090000
*/********************************************************************/ 01091000
*/*                                                                  */ 01092000
*/* USER FUNCTION            UNIQUE KEYS            NON-UNIQUE KEYS  */ 01093000
*/*  1. ERASE                 (DONE)                 (DONE)          */ 01094000
*/*  2. PUT NUP               (DONE)                 (DONE)          */ 01095000
*/*  3. PUT UPDATE            ERASE OLD KEY          GET UPD OLD KEY */ 01096000
*/*                                                                  */ 01097000
*/********************************************************************/ 01098000
*                                                                  0551 01099000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0551 01100000
PASS5    DS    0H                                                  0552 01101000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01102000
         IDASVR14                                                       01103000
*   IF(UPTF1PNU=ON)|                /* IF PUT NUP                    */ 01104000
*       UPTF1ERA=ON THEN            /* OR ERASE                      */ 01105000
         TM    UPTF1PNU(RWORK1),B'00011000'                        0553 01106000
         BZ    @RF00553                                            0553 01107000
*     UPTF1ATV=OFF;                 /* PROCESSING IS COMPLETE        */ 01108000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0554 01109000
*   ELSE                            /* IF NEITHER OF THE ABOVE       */ 01110000
*     DO;                                                          0555 01111000
         B     @RC00553                                            0555 01112000
@RF00553 DS    0H                                                  0556 01113000
*       UPTF1KEY=UPTOKEY;           /* PROCESS OLD KEY               */ 01114000
         NI    UPTF1KEY(RWORK1),B'11111011'                        0556 01115000
*       IF UPTF1NUK=OFF THEN        /* IF UNIQUE KEYS                */ 01116000
         TM    UPTF1NUK(RWORK1),B'00100000'                        0557 01117000
         BNZ   @RF00557                                            0557 01118000
*         DO;                                                      0558 01119000
*           CALL ERAUPD;            /* ERASE OLD KEY                 */ 01120000
         BAL   @14,ERAUPD                                          0559 01121000
*         END;                                                     0560 01122000
*       ELSE                        /* IF NON-UNIQUE KEYS            */ 01123000
*         DO;                                                      0561 01124000
         B     @RC00557                                            0561 01125000
@RF00557 DS    0H                                                  0562 01126000
*           CALL GETUPD;            /* GET UPD OLD KEY               */ 01127000
         BAL   @14,GETUPD                                          0562 01128000
*         END;                                                     0563 01129000
*     END;                                                         0564 01130000
@RC00557 DS    0H                                                  0565 01131000
*   UPTPASS=DPASS6;                 /* NEXT PASS IS PASS 6           */ 01132000
@RC00553 MVI   UPTPASS(RWORK1),X'06'                               0565 01133000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01134000
         IDARST14                                                       01135000
*   END PASS5;                                                     0567 01136000
@EL00006 DS    0H                                                  0567 01137000
@EF00006 DS    0H                                                  0567 01138000
@ER00006 BR    @14                                                 0567 01139000
         EJECT                                                          01140000
*PASS6:                                                            0568 01141000
*                                                                  0568 01142000
*/********************************************************************/ 01143000
*/*                                                                  */ 01144000
*/* USER FUNCTION            UNIQUE KEYS            NON-UNIQUE KEYS  */ 01145000
*/*  1. ERASE                 (DONE)                 (DONE)          */ 01146000
*/*  2. PUT NUP               (DONE)                 (DONE)          */ 01147000
*/*  3. PUT UPDATE            (DONE)                 PUT UPD OLD KEY */ 01148000
*/*                                                                  */ 01149000
*/********************************************************************/ 01150000
*                                                                  0568 01151000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0568 01152000
PASS6    DS    0H                                                  0569 01153000
*   RESPECIFY                                                      0569 01154000
*     R14 RESTRICTED;                                              0569 01155000
*   IF UPTF1LOP=UPTLOPER THEN       /* IF LAST OPERATION WAS ERASE   */ 01156000
         CLI   UPTF1LOP(RWORK1),B'10000000'                        0570 01157000
         BNE   @RF00570                                            0570 01158000
*     UPTF1ATV=OFF;                 /* THEN PROCESSING COMPLETE      */ 01159000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0571 01160000
*   ELSE                            /* IF NOT ERASE                  */ 01161000
*     DO;                                                          0572 01162000
         B     @RC00570                                            0572 01163000
@RF00570 DS    0H                                                  0573 01164000
*       GEN(IDASVR14);              /* SAVE RETURN ADDRESS           */ 01165000
         IDASVR14                                                       01166000
*       CALL PUTUPD;                /* PUT UPDATE OLD KEY            */ 01167000
         BAL   @14,PUTUPD                                          0574 01168000
*       GEN(IDARST14);              /* RESTORE RETURN ADDRESS        */ 01169000
         IDARST14                                                       01170000
*     END;                                                         0576 01171000
*   UPTPASS=DPASS7;                 /* NEXT PASS IS PASS 7           */ 01172000
@RC00570 MVI   UPTPASS(RWORK1),X'07'                               0577 01173000
*   RESPECIFY                                                      0578 01174000
*     R14 UNRESTRICTED;                                            0578 01175000
*   END PASS6;                                                     0579 01176000
@EL00007 DS    0H                                                  0579 01177000
@EF00007 DS    0H                                                  0579 01178000
@ER00007 BR    @14                                                 0579 01179000
*PASS7:                                                            0580 01180000
*                                                                  0580 01181000
*/********************************************************************/ 01182000
*/*                                                                  */ 01183000
*/* USER FUNCTION            UNIQUE KEYS            NON-UNIQUE KEYS  */ 01184000
*/*  1. ERASE                 (DONE)                 (DONE)          */ 01185000
*/*  2. PUT NUP               (DONE)                 (DONE)          */ 01186000
*/*  3. PUT UPDATE            (DONE)                 (DONE)          */ 01187000
*/*                                                                  */ 01188000
*/********************************************************************/ 01189000
*                                                                  0580 01190000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0580 01191000
PASS7    DS    0H                                                  0581 01192000
*   RESPECIFY                                                      0581 01193000
*     R14 RESTRICTED;                                              0581 01194000
*   UPTF1ATV=OFF;                   /* ALL PROCESSING IS COMPLETE    */ 01195000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0582 01196000
*   RESPECIFY                                                      0583 01197000
*     R14 UNRESTRICTED;                                            0583 01198000
*   END PASS7;                                                     0584 01199000
@EL00008 DS    0H                                                  0584 01200000
@EF00008 DS    0H                                                  0584 01201000
@ER00008 BR    @14                                                 0584 01202000
         EJECT                                                          01203000
*PASS8:                                                            0585 01204000
*                                                                  0585 01205000
*/********************************************************************/ 01206000
*/* FIRST BACKOUT PASS -                                             */ 01207000
*/*   . IF LOGICAL ERROR WITH NEW KEY, NO BACKOUT IS NEEDED          */ 01208000
*/*   . IF LOGICAL ERROR WITH OLD KEY, NEW KEY MUST BE REMOVED       */ 01209000
*/*   . IF NO ERROR - (OTHER AIX HAD ERROR)                          */ 01210000
*/*   . . IF LAST OPERATION WAS PUT, GET RECORD WRITTEN              */ 01211000
*/*   . . IF LAST OPERATION WAS ERASE, PUT NUP RECORD ERASED         */ 01212000
*/*   . . IF LAST OPERATION WAS GET UPD -                            */ 01213000
*/*   . . . IF OLD KEY WAS GOTTEN, GET UPD NEW KEY                   */ 01214000
*/*   . . . OTHER WISE, DONE                                         */ 01215000
*/********************************************************************/ 01216000
*                                                                  0585 01217000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0585 01218000
PASS8    DS    0H                                                  0586 01219000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01220000
         IDASVR14                                                       01221000
*   IF UPTF1LOG=ON|UPTF1PHY=ON THEN /* IF LAST OPERATION FAILED      */ 01222000
         TM    UPTF1LOG(RWORK1),B'01100000'                        0587 01223000
         BZ    @RF00587                                            0587 01224000
*     DO;                                                          0588 01225000
*       IF UPTF1KEY=UPTNKEY THEN    /* IF TRYING TO PROCESS NEW KEY  */ 01226000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0589 01227000
         BNO   @RF00589                                            0589 01228000
*         UPTF1ATV=OFF;             /* NO RECOVERY IS NEEDED         */ 01229000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0590 01230000
*       ELSE                        /* IF OLD KEY BEING PROCESSED    */ 01231000
*         DO;                                                      0591 01232000
         B     @RC00589                                            0591 01233000
@RF00589 DS    0H                                                  0592 01234000
*           UPTF1KEY=UPTNKEY;       /* SET TO PROCESS NEW KEY        */ 01235000
         OI    UPTF1KEY(RWORK1),B'00000100'                        0592 01236000
*           CALL GETUPD;            /* GET UPDATE NEW KEY            */ 01237000
         BAL   @14,GETUPD                                          0593 01238000
*         END;                                                     0594 01239000
*     END;                                                         0595 01240000
*   ELSE                            /* IF LAST OPERATION WAS OK      */ 01241000
*     IF UPTF1LOP=UPTLOPPU|         /* IF LAST OPERATION PUT UPDATE  */ 01242000
*         UPTF1LOP=UPTLOPPN THEN    /* IF LAST OPERATION WAS PUT NUP */ 01243000
         B     @RC00587                                            0596 01244000
@RF00587 CLI   UPTF1LOP(RWORK1),B'00100000'                        0596 01245000
         BE    @RT00596                                            0596 01246000
         CLI   UPTF1LOP(RWORK1),B'00010000'                        0596 01247000
         BNE   @RF00596                                            0596 01248000
@RT00596 DS    0H                                                  0597 01249000
*       CALL GETUPD;                /* GET LAST RECORD WRITTEN       */ 01250000
         BAL   @14,GETUPD                                          0597 01251000
*     ELSE                          /* LAST OP ERASE OR GET UPDATE   */ 01252000
*       IF UPTF1LOP=UPTLOPER THEN   /* IF LAST OPERATION ERASE       */ 01253000
         B     @RC00596                                            0598 01254000
@RF00596 CLI   UPTF1LOP(RWORK1),B'10000000'                        0598 01255000
         BNE   @RF00598                                            0598 01256000
*         CALL PUTNUP;              /* INSERT RECORD ERASED          */ 01257000
         BAL   @14,PUTNUP                                          0599 01258000
*       ELSE                        /* NOT ERASE - IS GET UPDATE     */ 01259000
*         IF UPTF1KEY=UPTNKEY|      /* IF LAST OPERATION GOT NEW KEY */ 01260000
*             UPTF1ERA=ON THEN      /* IF BASE FUNCTION ERASE        */ 01261000
         B     @RC00598                                            0600 01262000
@RF00598 TM    UPTF1KEY(RWORK1),B'00000100'                        0600 01263000
         BO    @RT00600                                            0600 01264000
         TM    UPTF1ERA(RWORK1),B'00010000'                        0600 01265000
         BNO   @RF00600                                            0600 01266000
@RT00600 DS    0H                                                  0601 01267000
*           UPTF1ATV=OFF;           /* BACKOUT IS COMPLETE           */ 01268000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0601 01269000
*         ELSE                      /* IF OLD KEY AND NOT ERASE      */ 01270000
*           DO;                                                    0602 01271000
         B     @RC00600                                            0602 01272000
@RF00600 DS    0H                                                  0603 01273000
*             UPTF1KEY=UPTNKEY;     /* PROCESS NEW KEY               */ 01274000
         OI    UPTF1KEY(RWORK1),B'00000100'                        0603 01275000
*             CALL GETUPD;          /* GET UPDATE NEW KEY            */ 01276000
         BAL   @14,GETUPD                                          0604 01277000
*           END;                                                   0605 01278000
*   UPTPASS=DPASS9;                 /* SET NEXT PASS                 */ 01279000
@RC00600 DS    0H                                                  0606 01280000
@RC00598 DS    0H                                                  0606 01281000
@RC00596 DS    0H                                                  0606 01282000
@RC00587 MVI   UPTPASS(RWORK1),X'09'                               0606 01283000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01284000
         IDARST14                                                       01285000
*   END PASS8;                                                     0608 01286000
@EL00009 DS    0H                                                  0608 01287000
@EF00009 DS    0H                                                  0608 01288000
@ER00009 BR    @14                                                 0608 01289000
         EJECT                                                          01290000
*PASS9:                                                            0609 01291000
*                                                                  0609 01292000
*/********************************************************************/ 01293000
*/*  SECOND BACKOUT PASS -                                           */ 01294000
*/*  . IF PROCESSING NEW KEY -                                       */ 01295000
*/*  . . IF LAST OPERATION WAS ERASE OR PUT UPDATE, THEN DONE        */ 01296000
*/*  . . IF LAST OPERATION WAS GET UPD, THEN PUT UPD NEW NEW         */ 01297000
*/*  . IF PROCESSING OLD KEY -                                       */ 01298000
*/*  . . IF LAST OPERATION WAS PUT, THEN GET UPD NEW KEY             */ 01299000
*/*  . . IF LAST OPERATION WAS GET UPDATE, THEN PUT UPD OLD KEY      */ 01300000
*/********************************************************************/ 01301000
*                                                                  0609 01302000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0609 01303000
PASS9    DS    0H                                                  0610 01304000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01305000
         IDASVR14                                                       01306000
*   IF UPTF1KEY=UPTNKEY THEN        /* IF NEW KEY BEING PROCESSED    */ 01307000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0611 01308000
         BNO   @RF00611                                            0611 01309000
*     DO;                                                          0612 01310000
*       IF UPTF1LOP=UPTLOPER|       /* IF NEW KEY ERASED             */ 01311000
*           UPTF1LOP=UPTLOPPU THEN  /* IF NEW KEY PUT UPDATED        */ 01312000
         CLI   UPTF1LOP(RWORK1),B'10000000'                        0613 01313000
         BE    @RT00613                                            0613 01314000
         CLI   UPTF1LOP(RWORK1),B'00100000'                        0613 01315000
         BNE   @RF00613                                            0613 01316000
@RT00613 DS    0H                                                  0614 01317000
*         UPTF1ATV=OFF;             /* THEN PROCESSING COMPLETE      */ 01318000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0614 01319000
*       ELSE                        /* IF LAST OPERATION GET UPDATE  */ 01320000
*         CALL PUTUPD;              /* THEN PUT UPDATE NEW KEY       */ 01321000
         B     @RC00613                                            0615 01322000
@RF00613 BAL   @14,PUTUPD                                          0615 01323000
*     END;                                                         0616 01324000
*   ELSE                            /* IF OLD KEY BEING PROCESSED    */ 01325000
*     IF UPTF1LOP=UPTLOPPN|         /* IF LAST OPERATION PUT NUP     */ 01326000
*         UPTF1LOP=UPTLOPPU THEN    /* IF LAST OPERATION PUT UPDATE  */ 01327000
         B     @RC00611                                            0617 01328000
@RF00611 CLI   UPTF1LOP(RWORK1),B'00010000'                        0617 01329000
         BE    @RT00617                                            0617 01330000
         CLI   UPTF1LOP(RWORK1),B'00100000'                        0617 01331000
         BNE   @RF00617                                            0617 01332000
@RT00617 DS    0H                                                  0618 01333000
*       DO;                                                        0618 01334000
*         UPTF1KEY=UPTNKEY;         /* SWITCH TO NEW KEY             */ 01335000
         OI    UPTF1KEY(RWORK1),B'00000100'                        0619 01336000
*         CALL GETUPD;              /* GET UPDATE NEW KEY            */ 01337000
         BAL   @14,GETUPD                                          0620 01338000
*       END;                                                       0621 01339000
*     ELSE                          /* LAST OPERATION WAS GET UPDATE */ 01340000
*       CALL PUTUPD;                /* PUT UPDATE OLD KEY            */ 01341000
         B     @RC00617                                            0622 01342000
@RF00617 BAL   @14,PUTUPD                                          0622 01343000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01344000
@RC00617 DS    0H                                                  0623 01345000
@RC00611 DS    0H                                                  0623 01346000
         IDARST14                                                       01347000
*   END PASS9;                                                     0624 01348000
@EL00010 DS    0H                                                  0624 01349000
@EF00010 DS    0H                                                  0624 01350000
@ER00010 BR    @14                                                 0624 01351000
         EJECT                                                          01352000
*   RESPECIFY                                                      0625 01353000
*     IFGRPL BASED(UPTRPL);                                        0625 01354000
*   RESPECIFY                                                      0626 01355000
*     IDAAIX BASED(RPLAREA);                                       0626 01356000
*GETUPD:                                                           0627 01357000
*                                                                  0627 01358000
*/********************************************************************/ 01359000
*/* THIS PROCEDURE ISSUES A GET UPD FOR THE AIX RECORD SPECIFIED BY  */ 01360000
*/* UPTF1KEY                                                         */ 01361000
*/********************************************************************/ 01362000
*                                                                  0627 01363000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0627 01364000
GETUPD   DS    0H                                                  0628 01365000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01366000
         IDASVR14                                                       01367000
*   UPTF1LOP=UPTLOPGU;              /* SET LAST OPERATION            */ 01368000
         MVI   UPTF1LOP(RWORK1),B'01000000'                        0629 01369000
*   RPLREQ=RPLGET;                  /* SET UPGRADE RPL FOR GET       */ 01370000
         L     @04,UPTRPL(,RWORK1)                                 0630 01371000
         MVI   RPLREQ(@04),X'00'                                   0630 01372000
*   RPLUPD=ON;                      /* SET UPGRADE RPL TO UPDATE     */ 01373000
         OI    RPLUPD(@04),B'00000010'                             0631 01374000
*   IF UPTF1KEY=UPTOKEY THEN        /* IF OLD KEY REQUESTED          */ 01375000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0632 01376000
         BNZ   @RF00632                                            0632 01377000
*     RPLARG=RPARM1->UPTOLD+UPTRKP; /* POINT TO OLD KEY              */ 01378000
         LH    @03,UPTRKP(,RWORK1)                                 0633 01379000
         AL    @03,UPTOLD(,RPARM1)                                 0633 01380000
         ST    @03,RPLARG(,@04)                                    0633 01381000
*   ELSE                            /* IF NEW KEY WAS REQUESTED      */ 01382000
*     RPLARG=RPARM1->UPTNEW+UPTRKP; /* POINT TO NEW KEY              */ 01383000
         B     @RC00632                                            0634 01384000
@RF00632 L     @04,UPTRPL(,RWORK1)                                 0634 01385000
         LH    @03,UPTRKP(,RWORK1)                                 0634 01386000
         AL    @03,UPTNEW(,RPARM1)                                 0634 01387000
         ST    @03,RPLARG(,@04)                                    0634 01388000
*   CALL R4INT;                     /* GET RECORD                    */ 01389000
@RC00632 BAL   @14,R4INT                                           0635 01390000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01391000
         IDARST14                                                       01392000
*   END GETUPD;                                                    0637 01393000
@EL00011 DS    0H                                                  0637 01394000
@EF00011 DS    0H                                                  0637 01395000
@ER00011 BR    @14                                                 0637 01396000
         EJECT                                                          01397000
*PUTUPD:                                                           0638 01398000
*                                                                  0638 01399000
*/********************************************************************/ 01400000
*/* THIS  PROCEDURE REBUILDS AND REWRITES THE NEW AIX RECORD         */ 01401000
*/*   KEY TYPE       UPGRADE        BACKOUT                          */ 01402000
*/*    OLD            KEY REMOVED    KEY ADDED                       */ 01403000
*/*    NEW            KEY ADDED      KEY REMOVED                     */ 01404000
*/********************************************************************/ 01405000
*                                                                  0638 01406000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0638 01407000
PUTUPD   DS    0H                                                  0639 01408000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01409000
         IDASVR14                                                       01410000
*   IF UPTF1NRF=ON THEN             /* IF NO RECORD WAS FOUND        */ 01411000
         TM    UPTF1NRF(RWORK1),B'00001000'                        0640 01412000
         BNO   @RF00640                                            0640 01413000
*     DO;                                                          0641 01414000
*       UPTF1NRF=OFF;               /* RESET INDICATOR               */ 01415000
         NI    UPTF1NRF(RWORK1),B'11110111'                        0642 01416000
*       IF UPTF1KEY=UPTNKEY THEN    /* IF NEW KEY WAS EXPECTED       */ 01417000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0643 01418000
         BNO   @RF00643                                            0643 01419000
*         CALL PUTNUP;              /* INSERT NEW KEY                */ 01420000
         BAL   @14,PUTNUP                                          0644 01421000
*     END;                                                         0645 01422000
*   ELSE                            /* IF RECORD WAS FOUND           */ 01423000
*     DO;                                                          0646 01424000
         B     @RC00640                                            0646 01425000
@RF00640 DS    0H                                                  0647 01426000
*       RESPECIFY                                                  0647 01427000
*        (RWORK2,                                                  0647 01428000
*         R15) RESTRICTED;                                         0647 01429000
*       IF UPTF1KEY=UPTOKEY THEN    /* IF OLD KEY WAS READ           */ 01430000
         TM    UPTF1KEY(RWORK1),B'00000100'                        0648 01431000
         BNZ   @RF00648                                            0648 01432000
*         DO;                                                      0649 01433000
*           IF AMDDST=ON THEN       /* IF KEYED DATA SET             */ 01434000
         L     @14,PLHAMB(,RPLH)                                   0650 01435000
         L     @14,AMBDSB(,@14)                                    0650 01436000
         TM    AMDDST(@14),B'10000000'                             0650 01437000
         BNO   @RF00650                                            0650 01438000
*             RWORK2=RPARM1->UPTOLD+AMDRKP;/* PT TO OLD KEY  @ZA10889*/ 01439000
         LH    RWORK2,AMDRKP(,@14)                                 0651 01440000
         AL    RWORK2,UPTOLD(,RPARM1)                              0651 01441000
*           ELSE                    /* IF ESDS                       */ 01442000
*             RWORK2=ADDR(PLHCRPL->RPLDDDD);/* POINT TO CURRENT RBA  */ 01443000
         B     @RC00650                                            0652 01444000
@RF00650 L     RWORK2,PLHCRPL(,RPLH)                               0652 01445000
         LA    RWORK2,RPLDDDD(,RWORK2)                             0652 01446000
*           IF UPTF1BKO=ON THEN     /* IF BACKOUT IN PROGRESS        */ 01447000
@RC00650 TM    UPTF1BKO(RWORK1),B'10000000'                        0653 01448000
         BNO   @RF00653                                            0653 01449000
*             CALL ADDEND;          /* ADD OLD KEY TO END            */ 01450000
         BAL   @14,ADDEND                                          0654 01451000
*           ELSE                    /* IF NOT BACKOUT                */ 01452000
*             CALL REMPTR;          /* REMOVE KEY FROM RECORD        */ 01453000
         B     @RC00653                                            0655 01454000
@RF00653 BAL   @14,REMPTR                                          0655 01455000
*         END;                                                     0656 01456000
*       ELSE                        /* IF NEW KEY RECORD WAS READ    */ 01457000
*         DO;                                                      0657 01458000
         B     @RC00648                                            0657 01459000
@RF00648 DS    0H                                                  0658 01460000
*           IF AMDDST=ON THEN       /* IF KEYED DATA SET             */ 01461000
         L     @14,PLHAMB(,RPLH)                                   0658 01462000
         L     @14,AMBDSB(,@14)                                    0658 01463000
         TM    AMDDST(@14),B'10000000'                             0658 01464000
         BNO   @RF00658                                            0658 01465000
*             RWORK2=RPARM1->UPTNEW+AMDRKP;/* PT TO NEW KEY  @ZA10889*/ 01466000
         LH    RWORK2,AMDRKP(,@14)                                 0659 01467000
         AL    RWORK2,UPTNEW(,RPARM1)                              0659 01468000
*           ELSE                    /* IF ESDS                       */ 01469000
*             RWORK2=ADDR(PLHCRPL->RPLDDDD);/* POINT TO CURRENT RBA  */ 01470000
         B     @RC00658                                            0660 01471000
@RF00658 L     RWORK2,PLHCRPL(,RPLH)                               0660 01472000
         LA    RWORK2,RPLDDDD(,RWORK2)                             0660 01473000
*           CALL REMPTR;            /* REMOVE ANY IF THERE           */ 01474000
@RC00658 BAL   @14,REMPTR                                          0661 01475000
*           IF UPTF1BKO=OFF THEN    /* IF BACKOUT NOT IN PROGRESS    */ 01476000
         TM    UPTF1BKO(RWORK1),B'10000000'                        0662 01477000
         BNZ   @RF00662                                            0662 01478000
*             CALL ADDEND;          /* ADD KEY TO END                */ 01479000
         BAL   @14,ADDEND                                          0663 01480000
*           ELSE                    /* IF NO NEED TO ADD PTR TO END  */ 01481000
*             R15=0;                /* THEN NO ERROR                 */ 01482000
         B     @RC00662                                            0664 01483000
@RF00662 SLR   R15,R15                                             0664 01484000
*         END;                                                     0665 01485000
@RC00662 DS    0H                                                  0666 01486000
*       IF R15=0 THEN               /* IF NO ERROR                   */ 01487000
@RC00648 SLR   @14,@14                                             0666 01488000
         CR    R15,@14                                             0666 01489000
         BNE   @RF00666                                            0666 01490000
*         DO;                                                      0667 01491000
*           IF AIXPC=0 THEN         /* IF NO PTRS LEFT               */ 01492000
         L     @07,UPTRPL(,RWORK1)                                 0668 01493000
         L     @07,RPLAREA(,@07)                                   0668 01494000
         CH    @14,AIXPC(,@07)                                     0668 01495000
         BNE   @RF00668                                            0668 01496000
*             CALL ERAUPD;          /* ERASE RECORD                  */ 01497000
         BAL   @14,ERAUPD                                          0669 01498000
*           ELSE                    /* IF AT LEAST ONE PTR LEFT      */ 01499000
*             DO;                                                  0670 01500000
         B     @RC00668                                            0670 01501000
@RF00668 DS    0H                                                  0671 01502000
*               UPTF1LOP=UPTLOPPU;  /* SET LAST OPERATION            */ 01503000
         MVI   UPTF1LOP(RWORK1),B'00100000'                        0671 01504000
*               RPLREQ=RPLPUT;      /* SET UPGRADE RPL FOR PUT       */ 01505000
         L     @14,UPTRPL(,RWORK1)                                 0672 01506000
         MVI   RPLREQ(@14),X'01'                                   0672 01507000
*               CALL R4INT;         /* PUT UPD RECPRD                */ 01508000
         BAL   @14,R4INT                                           0673 01509000
*             END;                                                 0674 01510000
*         END;                                                     0675 01511000
@RC00668 DS    0H                                                  0676 01512000
*       RESPECIFY                                                  0676 01513000
*        (RWORK2,                                                  0676 01514000
*         R15) UNRESTRICTED;                                       0676 01515000
@RF00666 DS    0H                                                  0677 01516000
*     END;                                                         0677 01517000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01518000
@RC00640 DS    0H                                                  0678 01519000
         IDARST14                                                       01520000
*   END PUTUPD;                                                    0679 01521000
@EL00012 DS    0H                                                  0679 01522000
@EF00012 DS    0H                                                  0679 01523000
@ER00012 BR    @14                                                 0679 01524000
         EJECT                                                          01525000
*PUTNUP:                                                           0680 01526000
*                                                                  0680 01527000
*/********************************************************************/ 01528000
*/* WRITES A NEW RECORD                                              */ 01529000
*/********************************************************************/ 01530000
*                                                                  0680 01531000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0680 01532000
PUTNUP   DS    0H                                                  0681 01533000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01534000
         IDASVR14                                                       01535000
*   UPTF1LOP=UPTLOPPN;              /* SET LAST OPERATION            */ 01536000
         MVI   UPTF1LOP(RWORK1),B'00010000'                        0682 01537000
*   RPLREQ=RPLPUT;                  /* SET UPGRADE RPL FOR PUT       */ 01538000
         L     @04,UPTRPL(,RWORK1)                                 0683 01539000
         MVI   RPLREQ(@04),X'01'                                   0683 01540000
*   RPLUPD=OFF;                     /* SET UPGRADE RPL FOR INSERT    */ 01541000
         NI    RPLUPD(@04),B'11111101'                             0684 01542000
*   CALL BLDNEW;                    /* BUILD NEW AIX RECORD          */ 01543000
         BAL   @14,BLDNEW                                          0685 01544000
*   RESPECIFY                                                      0686 01545000
*     R15 RESTRICTED;                                              0686 01546000
*   CALL ADDEND;                    /* ADD NEW KEY TO END            */ 01547000
         BAL   @14,ADDEND                                          0687 01548000
*   IF R15=0 THEN                   /* IF NO ERROR                   */ 01549000
         LTR   R15,R15                                             0688 01550000
         BNZ   @RF00688                                            0688 01551000
*     CALL R4INT;                   /* INSERT RECORD                 */ 01552000
         BAL   @14,R4INT                                           0689 01553000
*   RESPECIFY                                                      0690 01554000
*     R15 UNRESTRICTED;                                            0690 01555000
@RF00688 DS    0H                                                  0691 01556000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01557000
         IDARST14                                                       01558000
*   END PUTNUP;                                                    0692 01559000
@EL00013 DS    0H                                                  0692 01560000
@EF00013 DS    0H                                                  0692 01561000
@ER00013 BR    @14                                                 0692 01562000
         EJECT                                                          01563000
*ERAUPD:                                                           0693 01564000
*                                                                  0693 01565000
*/********************************************************************/ 01566000
*/* INITIATES THE ERASE OF AN AIX RECORD                             */ 01567000
*/********************************************************************/ 01568000
*                                                                  0693 01569000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0693 01570000
ERAUPD   DS    0H                                                  0694 01571000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01572000
         IDASVR14                                                       01573000
*   UPTF1LOP=UPTLOPER;              /* INDICATE LAST OPERATION       */ 01574000
         MVI   UPTF1LOP(RWORK1),B'10000000'                        0695 01575000
*   IF UPTF1NRF=OFF THEN            /* IF RECORD WAS FOUND           */ 01576000
         TM    UPTF1NRF(RWORK1),B'00001000'                        0696 01577000
         BNZ   @RF00696                                            0696 01578000
*     DO;                                                          0697 01579000
*       RPLREQ=RPLERASE;            /* SET RPL TO DO ERASE           */ 01580000
         L     @04,UPTRPL(,RWORK1)                                 0698 01581000
         MVI   RPLREQ(@04),X'05'                                   0698 01582000
*       CALL R4INT;                 /* GO TO IDA019R4                */ 01583000
         BAL   @14,R4INT                                           0699 01584000
*     END;                                                         0700 01585000
*   ELSE                            /* NO RECORD WAS FOUND           */ 01586000
*     UPTF1NRF=OFF;                 /* RESET BIT                     */ 01587000
         B     @RC00696                                            0701 01588000
@RF00696 NI    UPTF1NRF(RWORK1),B'11110111'                        0701 01589000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01590000
@RC00696 DS    0H                                                  0702 01591000
         IDARST14                                                       01592000
*   END ERAUPD;                                                    0703 01593000
@EL00014 DS    0H                                                  0703 01594000
@EF00014 DS    0H                                                  0703 01595000
@ER00014 BR    @14                                                 0703 01596000
         EJECT                                                          01597000
*BLDNEW:                                                           0704 01598000
*                                                                  0704 01599000
*/********************************************************************/ 01600000
*/* BUILDS THE HEADER PORTION OF A NEW RECORD                        */ 01601000
*/********************************************************************/ 01602000
*                                                                  0704 01603000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0704 01604000
BLDNEW   DS    0H                                                  0705 01605000
*   RESPECIFY                                                      0705 01606000
*     R14 RESTRICTED;                                              0705 01607000
*   AIXFG=0;                        /* ZERO FLAG FIELD               */ 01608000
         L     @15,UPTRPL(,RWORK1)                                 0706 01609000
         L     @04,RPLAREA(,@15)                                   0706 01610000
         MVI   AIXFG(@04),X'00'                                    0706 01611000
*   AIXPC=0;                        /* INITIALLY NO PTR PRESENT      */ 01612000
         SLR   @03,@03                                             0707 01613000
         STH   @03,AIXPC(,@04)                                     0707 01614000
*   AIXKL=UPTLNCDE+1;               /* SET KEY LENGTH                */ 01615000
         LA    @03,1                                               0708 01616000
         SLR   @00,@00                                             0708 01617000
         IC    @00,UPTLNCDE(,RWORK1)                               0708 01618000
         ALR   @03,@00                                             0708 01619000
         STC   @03,AIXKL(,@04)                                     0708 01620000
*   RPLRLEN=LENGTH(IDAAIX)+AIXKL;   /* SAY RECORD HAS HEADER         */ 01621000
         AL    @03,@CF00220                                        0709 01622000
         ST    @03,RPLRLEN(,@15)                                   0709 01623000
*   IF AMDDST=ON THEN               /* IF KEYED DATA SET             */ 01624000
         L     @15,PLHAMB(,RPLH)                                   0710 01625000
         L     @15,AMBDSB(,@15)                                    0710 01626000
         TM    AMDDST(@15),B'10000000'                             0710 01627000
         BNO   @RF00710                                            0710 01628000
*     DO;                                                          0711 01629000
*       AIXPKP=ON;                  /* INDICATE POINTERS ARE KEYS    */ 01630000
         OI    AIXPKP(@04),B'00000001'                             0712 01631000
*       AIXPL=AMDKEYLN;             /* PTR LENGTH IS BASE KEY LENGTH */ 01632000
         LH    @15,AMDKEYLN(,@15)                                  0713 01633000
         STC   @15,AIXPL(,@04)                                     0713 01634000
*     END;                                                         0714 01635000
*   ELSE                            /* IF ESDS                       */ 01636000
*     AIXPL=LENGTH(RPLDDDD);        /* PTR LENGTH IS 4 BYTES         */ 01637000
         B     @RC00710                                            0715 01638000
@RF00710 L     @15,UPTRPL(,RWORK1)                                 0715 01639000
         L     @15,RPLAREA(,@15)                                   0715 01640000
         MVI   AIXPL(@15),X'04'                                    0715 01641000
*   IF RPLRLEN+AIXPL>RPLBUFL THEN   /* IF NOT ENUF ROOM FOR BASE KEY    01642000
*                                                            @ZA24902*/ 01643000
@RC00710 L     @15,UPTRPL(,RWORK1)                                 0716 01644000
         L     @04,RPLAREA(,@15)                                   0716 01645000
         SLR   @03,@03                                             0716 01646000
         IC    @03,AIXPL(,@04)                                     0716 01647000
         AL    @03,RPLRLEN(,@15)                                   0716 01648000
         C     @03,RPLBUFL(,@15)                                   0716 01649000
         BNH   @RF00716                                            0716 01650000
*     DO;                                                          0717 01651000
*       GEN(IDASVR14);              /* SAVE RETURN ADDRESS           */ 01652000
         IDASVR14                                                       01653000
*       CALL XPANDBFR;              /* GET ROOM IN BUFFER            */ 01654000
         BAL   @14,XPANDBFR                                        0719 01655000
*       GEN(IDARST14);              /* RESTORE RETURN ADDRESS        */ 01656000
         IDARST14                                                       01657000
*       IF RPLERREG^=0 THEN         /* IF ANY ERROR                  */ 01658000
         L     @15,UPTRPL(,RWORK1)                                 0721 01659000
         CLI   RPLERREG(@15),0                                     0721 01660000
         BE    @RF00721                                            0721 01661000
*         RETURN CODE(RPLERREG);    /* EXIT PROCEDURE                */ 01662000
         SLR   @04,@04                                             0722 01663000
         IC    @04,RPLERREG(,@15)                                  0722 01664000
         LR    @15,@04                                             0722 01665000
@EL00015 DS    0H                                                  0722 01666000
@EF00015 DS    0H                                                  0722 01667000
@ER00015 BR    @14                                                 0722 01668000
*     END;                                                         0723 01669000
@RF00721 DS    0H                                                  0724 01670000
*   IF UPTF1KEY=UPTOKEY THEN        /* IF RECORD WITH OLD KEY REQTED */ 01671000
@RF00716 TM    UPTF1KEY(RWORK1),B'00000100'                        0724 01672000
         BNZ   @RF00724                                            0724 01673000
*     AIXKY(1:UPTLNCDE+1)=OLDKEY(1:UPTLNCDE+1);/* MOVE IN OLD KEY    */ 01674000
         L     @15,UPTRPL(,RWORK1)                                 0725 01675000
         L     @15,RPLAREA(,@15)                                   0725 01676000
         SLR   @04,@04                                             0725 01677000
         IC    @04,UPTLNCDE(,RWORK1)                               0725 01678000
         LH    @03,UPTRKP(,RWORK1)                                 0725 01679000
         AL    @03,UPTOLD(,RPARM1)                                 0725 01680000
         EX    @04,@SM01586                                        0725 01681000
*   ELSE                            /* IF RECORD WITH NEW KEY REQTED */ 01682000
*     AIXKY(1:UPTLNCDE+1)=NEWKEY(1:UPTLNCDE+1);/* MOVE IN NEW KEY    */ 01683000
         B     @RC00724                                            0726 01684000
@RF00724 L     @15,UPTRPL(,RWORK1)                                 0726 01685000
         L     @15,RPLAREA(,@15)                                   0726 01686000
         SLR   @04,@04                                             0726 01687000
         IC    @04,UPTLNCDE(,RWORK1)                               0726 01688000
         LH    @03,UPTRKP(,RWORK1)                                 0726 01689000
         AL    @03,UPTNEW(,RPARM1)                                 0726 01690000
         EX    @04,@SM01588                                        0726 01691000
*   RESPECIFY                                                      0727 01692000
*     R14 UNRESTRICTED;                                            0727 01693000
*   END BLDNEW;                                                    0728 01694000
         B     @EL00015                                            0728 01695000
         EJECT                                                          01696000
*ADDEND:                                                           0729 01697000
*                                                                  0729 01698000
*/********************************************************************/ 01699000
*/* ADDS A POINTER TO THE END OF AN AIX RECORD                       */ 01700000
*/*   INPUT = RWORK2 POINTS TO THE NEW POINTER                       */ 01701000
*/*   OUTPUT = AIXPC AND UPTRPL RPLRLEN IS INCREMENTED TO REFLECT NEW*/ 01702000
*/*               POINTER ADDED                                      */ 01703000
*/********************************************************************/ 01704000
*                                                                  0729 01705000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0729 01706000
ADDEND   DS    0H                                                  0730 01707000
*   RESPECIFY                                                      0730 01708000
*    (RWORK2,                                                      0730 01709000
*     RWORK3,                                                      0730 01710000
*     R14) RESTRICTED;                                             0730 01711000
*   IF AIXPC=AIXPCMAX THEN          /* IF COUNT AT THE MAXIMUM       */ 01712000
         L     @15,UPTRPL(,RWORK1)                                 0731 01713000
         L     @04,RPLAREA(,@15)                                   0731 01714000
         CLC   AIXPC(2,@04),@CH01063                               0731 01715000
         BNE   @RF00731                                            0731 01716000
*     DO;                                                          0732 01717000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 01718000
         MVI   RPLERREG(@15),X'08'                                 0733 01719000
*       RPLCMPON=RPLUPGER;          /* ERROR DURING UPGRADE          */ 01720000
         MVI   RPLCMPON(@15),X'04'                                 0734 01721000
*       RPLERRCD=RPLNXPTR;          /* MAX PTRS EXCEEDED             */ 01722000
         MVI   RPLERRCD(@15),X'94'                                 0735 01723000
*       RETURN CODE('08'X);         /* EXIT WITH ERROR               */ 01724000
         LA    @15,8                                               0736 01725000
@EL00016 DS    0H                                                  0736 01726000
@EF00016 DS    0H                                                  0736 01727000
@ER00016 BR    @14                                                 0736 01728000
*     END;                                                         0737 01729000
*   ELSE                            /* IF OK TO BUMP COUNT           */ 01730000
*     DO;                                                          0738 01731000
@RF00731 DS    0H                                                  0739 01732000
*       GEN(IDASVR14);              /* SAVE RETURN ADDRESS           */ 01733000
         IDASVR14                                                       01734000
*       RESPECIFY                                                  0740 01735000
*         R14 UNRESTRICTED;                                        0740 01736000
*       IF AMDDST=ON THEN           /* IF KEYED DATA SET             */ 01737000
         L     @04,PLHAMB(,RPLH)                                   0741 01738000
         L     @04,AMBDSB(,@04)                                    0741 01739000
         TM    AMDDST(@04),B'10000000'                             0741 01740000
         BNO   @RF00741                                            0741 01741000
*         RWORK2=RPARM1->UPTNEW+AMDRKP;/* POINT TO CURRENT KEY       */ 01742000
         LH    RWORK2,AMDRKP(,@04)                                 0742 01743000
         AL    RWORK2,UPTNEW(,RPARM1)                              0742 01744000
*       ELSE                        /* IF ESDS                       */ 01745000
*         RWORK2=ADDR(PLHCRPL->RPLDDDD);/* POINT TO CURRENT RBA      */ 01746000
         B     @RC00741                                            0743 01747000
@RF00741 L     RWORK2,PLHCRPL(,RPLH)                               0743 01748000
         LA    RWORK2,RPLDDDD(,RWORK2)                             0743 01749000
*       CALL REMPTR;                /* REMOVE PTR IF ALREADY PRESENT */ 01750000
@RC00741 BAL   @14,REMPTR                                          0744 01751000
*       IF RPLRLEN+AIXPL>RPLBUFL THEN/* IF NEW RCD TOO BIG           */ 01752000
         L     @04,UPTRPL(,RWORK1)                                 0745 01753000
         L     @03,RPLAREA(,@04)                                   0745 01754000
         SLR   @00,@00                                             0745 01755000
         IC    @00,AIXPL(,@03)                                     0745 01756000
         AL    @00,RPLRLEN(,@04)                                   0745 01757000
         C     @00,RPLBUFL(,@04)                                   0745 01758000
         BNH   @RF00745                                            0745 01759000
*         DO;                                                      0746 01760000
*           CALL XPANDBFR;          /* EXPAND BUFFER                 */ 01761000
         BAL   @14,XPANDBFR                                        0747 01762000
*           IF RPLERREG^=0 THEN     /* IF FAILED TO EXPAND BUFFER    */ 01763000
         L     @04,UPTRPL(,RWORK1)                                 0748 01764000
         CLI   RPLERREG(@04),0                                     0748 01765000
         BE    @RF00748                                            0748 01766000
*             DO;                                                  0749 01767000
*               GEN(IDARST14);      /* RESTORE RETURN ADDRESS        */ 01768000
         IDARST14                                                       01769000
*               RETURN CODE(RPLERREG);/* EXIT WITH RETURN CODE       */ 01770000
         L     @04,UPTRPL(,RWORK1)                                 0751 01771000
         SLR   @15,@15                                             0751 01772000
         IC    @15,RPLERREG(,@04)                                  0751 01773000
         BR    @14                                                 0751 01774000
*             END;                                                 0752 01775000
*         END;                                                     0753 01776000
@RF00748 DS    0H                                                  0754 01777000
*       RWORK3=ADDR(AIXKY)+AIXKL+AIXPC*AIXPL;/* POINT TO NEW PTR SPOT*/ 01778000
@RF00745 L     @04,UPTRPL(,RWORK1)                                 0754 01779000
         L     @04,RPLAREA(,@04)                                   0754 01780000
         LA    RWORK3,AIXKY(,@04)                                  0754 01781000
         SLR   @03,@03                                             0754 01782000
         IC    @03,AIXKL(,@04)                                     0754 01783000
         ALR   RWORK3,@03                                          0754 01784000
         LH    @03,AIXPC(,@04)                                     0754 01785000
         SLR   @09,@09                                             0754 01786000
         IC    @09,AIXPL(,@04)                                     0754 01787000
         MR    @08,@03                                             0754 01788000
         ALR   RWORK3,@09                                          0754 01789000
*       AIXPC=AIXPC+1;              /* BUMP POINTER COUNT            */ 01790000
         LA    @15,1                                               0755 01791000
         ALR   @03,@15                                             0755 01792000
         STH   @03,AIXPC(,@04)                                     0755 01793000
*       IF AIXPC>ONE THEN           /* TEST IF DUPLICATE KEY @XM08525*/ 01794000
         CR    @03,@15                                             0756 01795000
         BNH   @RF00756                                            0756 01796000
*         DO;                       /* CREATED               @XM08525*/ 01797000
*           RPARM1->UPTBRPL->RPLERRCD=RPLMOKEY;/* SET UNIQUE @XM08525*/ 01798000
         L     @04,UPTBRPL(,RPARM1)                                0758 01799000
         MVI   RPLERRCD(@04),X'08'                                 0758 01800000
*           RPARM1->UPTBRPL->RPLCMPON=RPLUPGER;/* CREATED IN @XM08525*/ 01801000
         MVI   RPLCMPON(@04),X'04'                                 0759 01802000
*         END;                      /* BASE RPL FEEDBACK.@XM08525    */ 01803000
*       RWORK3->AIXPTR(1:AIXPL)=RWORK2->AIXPTR(1:AIXPL);/* MOVE IN 0761 01804000
*                                      NEW PTR                       */ 01805000
@RF00756 L     @04,UPTRPL(,RWORK1)                                 0761 01806000
         L     @03,RPLAREA(,@04)                                   0761 01807000
         SLR   @15,@15                                             0761 01808000
         IC    @15,AIXPL(,@03)                                     0761 01809000
         LR    @03,@15                                             0761 01810000
         BCTR  @03,0                                               0761 01811000
         EX    @03,@SM01590                                        0761 01812000
*       RPLRLEN=RPLRLEN+AIXPL;      /* BUMP RECORD LENGTH            */ 01813000
         AL    @15,RPLRLEN(,@04)                                   0762 01814000
         ST    @15,RPLRLEN(,@04)                                   0762 01815000
*       GEN(IDARST14);              /* RESTORE RETURN ADDRESS        */ 01816000
         IDARST14                                                       01817000
*       RETURN CODE(0);             /* EXIT NO ERROR                 */ 01818000
         SLR   @15,@15                                             0764 01819000
         BR    @14                                                 0764 01820000
*     END;                                                         0765 01821000
*   RESPECIFY                                                      0766 01822000
*    (RWORK2,                                                      0766 01823000
*     RWORK3) UNRESTRICTED;                                        0766 01824000
*   END ADDEND;                                                    0767 01825000
         EJECT                                                          01826000
*REMPTR:                                                           0768 01827000
*                                                                  0768 01828000
*/********************************************************************/ 01829000
*/* SCANS AIX RECORD FOR A POINTER AND REMOVES IT IF FOUND           */ 01830000
*/*   INPUT = RWORK2 POINTS TO THE POINTER TO BE REMOVED             */ 01831000
*/*   OUTPUT = AIXPC AND RPLRLEN ARE DECREMENTED IF POINTER IS FOUND */ 01832000
*/*             AND REMOVED                                          */ 01833000
*/********************************************************************/ 01834000
*                                                                  0768 01835000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0768 01836000
*                                                                  0768 01837000
REMPTR   DS    0H                                                  0769 01838000
*   /*****************************************************************/ 01839000
*   /*                                                               */ 01840000
*   /* RWORK2 POINTS TO THE PTR TO BE REMOVED IF FOUND               */ 01841000
*   /*                                                               */ 01842000
*   /*****************************************************************/ 01843000
*                                                                  0769 01844000
*   RESPECIFY                                                      0769 01845000
*    (RWORK2,                                                      0769 01846000
*     RWORK3,                                                      0769 01847000
*     RWORK4,                                                      0769 01848000
*     RWORK5) RESTRICTED;                                          0769 01849000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01850000
         IDASVR14                                                       01851000
*   RWORK3=ADDR(AIXKY)+AIXKL;       /* POINT TO FIRST PTR            */ 01852000
         L     @04,UPTRPL(,RWORK1)                                 0771 01853000
         L     @04,RPLAREA(,@04)                                   0771 01854000
         LA    RWORK3,AIXKY(,@04)                                  0771 01855000
         SLR   @03,@03                                             0771 01856000
         IC    @03,AIXKL(,@04)                                     0771 01857000
         ALR   RWORK3,@03                                          0771 01858000
*   DO RWORK4=AIXPC TO 1 BY-1;      /* LOOP THRU ALL PTRS            */ 01859000
         LH    RWORK4,AIXPC(,@04)                                  0772 01860000
         B     @DE00772                                            0772 01861000
@DL00772 DS    0H                                                  0773 01862000
*     IF RWORK2->AIXPTR(1:AIXPL)=   /* IF INPUT POINTER              */ 01863000
*         RWORK3->AIXPTR(1:AIXPL) THEN/* MATCHES PTR IN AIX RCD      */ 01864000
         L     @04,UPTRPL(,RWORK1)                                 0773 01865000
         L     @04,RPLAREA(,@04)                                   0773 01866000
         SLR   @03,@03                                             0773 01867000
         IC    @03,AIXPL(,@04)                                     0773 01868000
         LR    @04,@03                                             0773 01869000
         BCTR  @04,0                                               0773 01870000
         EX    @04,@SC01592                                        0773 01871000
         BNE   @RF00773                                            0773 01872000
*       DO;                                                        0774 01873000
*         RWORK5=RWORK4*AIXPL-AIXPL;/* LOAD BYTES LEFT IN RECORD     */ 01874000
         LR    @15,RWORK4                                          0775 01875000
         MR    @14,@03                                             0775 01876000
         SLR   @15,@03                                             0775 01877000
         LR    RWORK5,@15                                          0775 01878000
*         IF RWORK5^=0 THEN         /* IF ANY BYTES TO MOVE          */ 01879000
         LTR   RWORK5,RWORK5                                       0776 01880000
         BZ    @RF00776                                            0776 01881000
*           DO;                                                    0777 01882000
*             IF RWORK5<=MAXMOVE THEN/* IF SMALL ENUF FOR MVC        */ 01883000
         C     RWORK5,@CF01390                                     0778 01884000
         BH    @RF00778                                            0778 01885000
*               DO;                                                0779 01886000
*                 RESPECIFY                                        0780 01887000
*                   R14 RESTRICTED;                                0780 01888000
*                 R14=RWORK3+AIXPL; /* POINT TO NEXT PTR             */ 01889000
         ALR   @03,RWORK3                                          0781 01890000
         LR    R14,@03                                             0781 01891000
*                 RWORK3->CORE(1:RWORK5)=R14->CORE(1:RWORK5);      0782 01892000
         LR    @15,RWORK5                                          0782 01893000
         BCTR  @15,0                                               0782 01894000
         EX    @15,@SM01594                                        0782 01895000
*                 RESPECIFY                                        0783 01896000
*                   R14 UNRESTRICTED;                              0783 01897000
*               END;                /* OVERLAY RECORD                */ 01898000
*             ELSE                  /* IF MOVE LONG NEEDED           */ 01899000
*               DO;                                                0785 01900000
         B     @RC00778                                            0785 01901000
@RF00778 DS    0H                                                  0786 01902000
*                 STM(RRPL,RPARM1,RPARM1->UPTR15);/* SAVE REGISTERS  */ 01903000
         STM   RRPL,RPARM1,UPTR15(RPARM1)                          0786 01904000
*                 RWORK2=RWORK3;    /* LOAD TO ADDRESS               */ 01905000
         LR    RWORK2,RWORK3                                       0787 01906000
*                 RWORK4=RWORK3+AIXPL;/* LOAD FROM ADDRESS           */ 01907000
         L     @04,UPTRPL(,RWORK1)                                 0788 01908000
         L     @04,RPLAREA(,@04)                                   0788 01909000
         LR    RWORK4,RWORK3                                       0788 01910000
         SLR   @03,@03                                             0788 01911000
         IC    @03,AIXPL(,@04)                                     0788 01912000
         ALR   RWORK4,@03                                          0788 01913000
*                 RWORK3=RWORK5;    /* LOAD TO LENGTH                */ 01914000
         LR    RWORK3,RWORK5                                       0789 01915000
*                 MVCL(RWORK2,RWORK4);/* OVERLAY PTR                 */ 01916000
         MVCL  RWORK2,RWORK4                                       0790 01917000
*                 LM(RRPL,RPARM1,RPARM1->UPTR15);/* RESTORE REGISTERS*/ 01918000
         LM    RRPL,RPARM1,UPTR15(RPARM1)                          0791 01919000
*               END;                                               0792 01920000
*           END;                                                   0793 01921000
@RC00778 DS    0H                                                  0794 01922000
*         RPLRLEN=RPLRLEN-AIXPL;    /* REDUCE AIX RECORD LENGTH      */ 01923000
@RF00776 L     @04,UPTRPL(,RWORK1)                                 0794 01924000
         L     @03,RPLAREA(,@04)                                   0794 01925000
         L     @00,RPLRLEN(,@04)                                   0794 01926000
         SLR   @15,@15                                             0794 01927000
         IC    @15,AIXPL(,@03)                                     0794 01928000
         SLR   @00,@15                                             0794 01929000
         ST    @00,RPLRLEN(,@04)                                   0794 01930000
*         AIXPC=AIXPC-1;            /* REDUCE AIX PTR COUNTER        */ 01931000
         LH    @04,AIXPC(,@03)                                     0795 01932000
         BCTR  @04,0                                               0795 01933000
         STH   @04,AIXPC(,@03)                                     0795 01934000
*       END;                                                       0796 01935000
*     ELSE                          /* IF PTRS DO NOT MATCH          */ 01936000
*       RWORK3=RWORK3+AIXPL;        /* POINT TO NEXT PTR             */ 01937000
         B     @RC00773                                            0797 01938000
@RF00773 L     @04,UPTRPL(,RWORK1)                                 0797 01939000
         L     @04,RPLAREA(,@04)                                   0797 01940000
         SLR   @03,@03                                             0797 01941000
         IC    @03,AIXPL(,@04)                                     0797 01942000
         ALR   RWORK3,@03                                          0797 01943000
*   END;                                                           0798 01944000
@RC00773 BCTR  RWORK4,0                                            0798 01945000
@DE00772 LTR   RWORK4,RWORK4                                       0798 01946000
         BP    @DL00772                                            0798 01947000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01948000
         IDARST14                                                       01949000
*   RETURN CODE(0);                 /* RETURN NO ERROR               */ 01950000
         SLR   @15,@15                                             0800 01951000
@EL00017 DS    0H                                                  0800 01952000
@EF00017 DS    0H                                                  0800 01953000
@ER00017 BR    @14                                                 0800 01954000
*   RESPECIFY                                                      0801 01955000
*    (RWORK2,                                                      0801 01956000
*     RWORK3,                                                      0801 01957000
*     RWORK4,                                                      0801 01958000
*     RWORK5) UNRESTRICTED;                                        0801 01959000
*   END REMPTR;                                                    0802 01960000
         EJECT                                                          01961000
*ERRPROC:                                                          0803 01962000
*                                                                  0803 01963000
*/********************************************************************/ 01964000
*/* THIS  PROCEDURE DOES INITIAL ERROR PROCESSING.  CALLS BADERROR   */ 01965000
*/*           IF BACKOUT IS NEEDED.                                  */ 01966000
*/********************************************************************/ 01967000
*                                                                  0803 01968000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0803 01969000
ERRPROC  DS    0H                                                  0804 01970000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01971000
         IDASVR14                                                       01972000
*   PLHCRPL->RPLCMPON=RPLUPGER;     /* SET COMPONENT CODE            */ 01973000
         L     @04,PLHCRPL(,RPLH)                                  0805 01974000
         MVI   RPLCMPON(@04),X'04'                                 0805 01975000
*   IF RPLERREG^='08'X THEN         /* IF NO A LOGICAL ERROR         */ 01976000
         L     @04,UPTRPL(,RWORK1)                                 0806 01977000
         CLI   RPLERREG(@04),8                                     0806 01978000
         BE    @RF00806                                            0806 01979000
*     CALL BADERROR;                /* DETERMINE RECOVERY            */ 01980000
         BAL   @14,BADERROR                                        0807 01981000
*   ELSE                            /* IF IS A LOGICAL ERROR         */ 01982000
*     DO;                                                          0808 01983000
         B     @RC00806                                            0808 01984000
@RF00806 DS    0H                                                  0809 01985000
*       IF RPLERRCD^=RPLNOREC THEN  /* IF NOT NO RECORD FOUND        */ 01986000
         L     @04,UPTRPL(,RWORK1)                                 0809 01987000
         CLI   RPLERRCD(@04),16                                    0809 01988000
         BE    @RF00809                                            0809 01989000
*         DO;                                                      0810 01990000
*           IF RPLERRCD^=RPLINBUF THEN/* IF NOT NOT ENUF BUFFER      */ 01991000
         CLI   RPLERRCD(@04),44                                    0811 01992000
         BE    @RF00811                                            0811 01993000
*             CALL BADERROR;        /* DETERMINE RECOVERY            */ 01994000
         BAL   @14,BADERROR                                        0812 01995000
*           ELSE                    /* IF IS NOT ENUF BUFFER         */ 01996000
*             DO;                                                  0813 01997000
         B     @RC00811                                            0813 01998000
@RF00811 DS    0H                                                  0814 01999000
*               RPLERREG=0;         /* ZERO ERROR REG                */ 02000000
         L     @04,UPTRPL(,RWORK1)                                 0814 02001000
         MVI   RPLERREG(@04),X'00'                                 0814 02002000
*               IF RPLPLHPT->PLHSRINV=ON THEN/* IF RECORD IS  SPANNED*/ 02003000
         L     @03,RPLPLHPT(,@04)                                  0815 02004000
         TM    PLHSRINV(@03),B'00010000'                           0815 02005000
         BNO   @RF00815                                            0815 02006000
*                 RPLRLEN=RPLBUFL+RPLBUFL;/* GUESS AT RECORD LENGTH  */ 02007000
         L     @03,RPLBUFL(,@04)                                   0816 02008000
         LR    @00,@03                                             0816 02009000
         ALR   @00,@03                                             0816 02010000
         ST    @00,RPLRLEN(,@04)                                   0816 02011000
*               CALL XPANDBFR;      /* EXPAND THE BUFFER             */ 02012000
@RF00815 BAL   @14,XPANDBFR                                        0817 02013000
*               IF RPLERREG^=0 THEN /* IF UNABLE TO EXPAND BUFFER    */ 02014000
         L     @04,UPTRPL(,RWORK1)                                 0818 02015000
         CLI   RPLERREG(@04),0                                     0818 02016000
         BE    @RF00818                                            0818 02017000
*                 CALL BADERROR;    /* DETERMINE RECOVERY            */ 02018000
         BAL   @14,BADERROR                                        0819 02019000
*               ELSE                /* IF NO ERROR                   */ 02020000
*                 DO;                                              0820 02021000
         B     @RC00818                                            0820 02022000
@RF00818 DS    0H                                                  0821 02023000
*                   PLHCRPL->RPLCMPON=0;/* ZERO COMPONENT CODE       */ 02024000
         L     @04,PLHCRPL(,RPLH)                                  0821 02025000
         MVI   RPLCMPON(@04),X'00'                                 0821 02026000
*                   UPTF1RTY=ON;    /* WILL RETRY I/O                */ 02027000
         OI    UPTF1RTY(RWORK1),B'00000010'                        0822 02028000
*                   CALL R4INT;     /* START I/O                     */ 02029000
         BAL   @14,R4INT                                           0823 02030000
*                 END;                                             0824 02031000
*             END;                                                 0825 02032000
*         END;                                                     0826 02033000
*       ELSE                        /* IF NO RECORD FOUND            */ 02034000
*         DO;                                                      0827 02035000
         B     @RC00809                                            0827 02036000
@RF00809 DS    0H                                                  0828 02037000
*           PLHCRPL->RPLCMPON=0;    /* ZERO COMPONENT CODE           */ 02038000
         L     @04,PLHCRPL(,RPLH)                                  0828 02039000
         MVI   RPLCMPON(@04),X'00'                                 0828 02040000
*           RPLFDBWD=0;             /* ZERO ERROR CODES              */ 02041000
         L     @04,UPTRPL(,RWORK1)                                 0829 02042000
         SLR   @03,@03                                             0829 02043000
         ST    @03,RPLFDBWD(,@04)                                  0829 02044000
*           UPTF1NRF=ON;            /* INDICATE NO RECORD FOUND      */ 02045000
         OI    UPTF1NRF(RWORK1),B'00001000'                        0830 02046000
*         END;                                                     0831 02047000
*     END;                                                         0832 02048000
@RC00809 DS    0H                                                  0833 02049000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02050000
@RC00806 DS    0H                                                  0833 02051000
         IDARST14                                                       02052000
*   END ERRPROC;                                                   0834 02053000
@EL00018 DS    0H                                                  0834 02054000
@EF00018 DS    0H                                                  0834 02055000
@ER00018 BR    @14                                                 0834 02056000
         EJECT                                                          02057000
*BADERROR:                                                         0835 02058000
*                                                                  0835 02059000
*/********************************************************************/ 02060000
*/* THIS  PROCEDURE INITIATES THE BACKOUT PROCESS.  IF BACKOUT       */ 02061000
*/*         PROCESSING IS ALREADY IN PROGRESS, THE AIX GETTING THE   */ 02062000
*/*         ERROR IS DEACTIVATED.                                    */ 02063000
*/********************************************************************/ 02064000
*                                                                  0835 02065000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0835 02066000
BADERROR DS    0H                                                  0836 02067000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 02068000
         IDASVR14                                                       02069000
*   RESPECIFY                                                      0837 02070000
*    (RWORK2,                                                      0837 02071000
*     RWORK3) RESTRICTED;                                          0837 02072000
*   IF UPTF1BKO=ON THEN             /* IF ALREADY IN BACKOUT         */ 02073000
         TM    UPTF1BKO(RWORK1),B'10000000'                        0838 02074000
         BNO   @RF00838                                            0838 02075000
*     DO;                                                          0839 02076000
*       UPTF1ATV=OFF;               /* IGNORE THIS AIX               */ 02077000
         NI    UPTF1ATV(RWORK1),B'10111111'                        0840 02078000
*       PLHCRPL->RPLCMPON=ERRTAB(PLHCRPL->RPLCMPON+1);/* INDICATE  0841 02079000
*                                      UPGRADE MAY BE BAD            */ 02080000
         L     @04,PLHCRPL(,RPLH)                                  0841 02081000
         SLR   @03,@03                                             0841 02082000
         IC    @03,RPLCMPON(,@04)                                  0841 02083000
         SLR   @00,@00                                             0841 02084000
         IC    @00,ERRTAB(@03)                                     0841 02085000
         STC   @00,RPLCMPON(,@04)                                  0841 02086000
*     END;                                                         0842 02087000
*   ELSE                            /* IF FIRST BAD ERROR            */ 02088000
*     DO;                                                          0843 02089000
         B     @RC00838                                            0843 02090000
@RF00838 DS    0H                                                  0844 02091000
*       IF RPLERREG='0C'X THEN      /* IF PHYSICAL ERROR             */ 02092000
         L     @04,UPTRPL(,RWORK1)                                 0844 02093000
         CLI   RPLERREG(@04),12                                    0844 02094000
         BNE   @RF00844                                            0844 02095000
*         DO;                                                      0845 02096000
*           PLHCRPL->RPLERREG='0C'X;/* SET PHYSICAL ERROR DETECTED   */ 02097000
         L     @03,PLHCRPL(,RPLH)                                  0846 02098000
         MVI   RPLERREG(@03),X'0C'                                 0846 02099000
*           PLHCRPL->RPLCMPON=RPLUPGER;/* OCCURRED DURING UPGRADE    */ 02100000
         MVI   RPLCMPON(@03),X'04'                                 0847 02101000
*           PLHCRPL->RPLERRCD=RPLERRCD;/* COPY ERROR CODE            */ 02102000
         IC    @00,RPLERRCD(,@04)                                  0848 02103000
         STC   @00,RPLERRCD(,@03)                                  0848 02104000
*           UPTF1PHY=ON;            /* INDICATE PLYSICAL THIS AIX    */ 02105000
         OI    UPTF1PHY(RWORK1),B'00100000'                        0849 02106000
*         END;                                                     0850 02107000
*       ELSE                        /* IF NOT PHYSICAL ERROR         */ 02108000
*         DO;                                                      0851 02109000
         B     @RC00844                                            0851 02110000
@RF00844 DS    0H                                                  0852 02111000
*           UPTF1LOG=ON;            /* INDICATE LOGICAL ERROR        */ 02112000
         OI    UPTF1LOG(RWORK1),B'01000000'                        0852 02113000
*           PLHCRPL->RPLERREG='08'X;/* SET ERROR REGISTER            */ 02114000
         L     @04,PLHCRPL(,RPLH)                                  0853 02115000
         MVI   RPLERREG(@04),X'08'                                 0853 02116000
*           PLHCRPL->RPLERRCD=RPLERRCD;/* COPY ERROR CODE            */ 02117000
         L     @03,UPTRPL(,RWORK1)                                 0854 02118000
         IC    @00,RPLERRCD(,@03)                                  0854 02119000
         STC   @00,RPLERRCD(,@04)                                  0854 02120000
*         END;                                                     0855 02121000
*       RWORK2=RPARM1;              /* LOAD POINTER TO UPT           */ 02122000
@RC00844 LR    RWORK2,RPARM1                                       0856 02123000
*       DO RWORK3=RWORK2->UPTNOENT TO 1 BY-1;/* LOOP THRU ALL UPT  0857 02124000
*                                      ENTRIES                       */ 02125000
         SLR   RWORK3,RWORK3                                       0857 02126000
         IC    RWORK3,UPTNOENT(,RWORK2)                            0857 02127000
         B     @DE00857                                            0857 02128000
@DL00857 DS    0H                                                  0858 02129000
*         IF RWORK2->UPTF1UPG=ON THEN/* IF AIX IN THIS UPGRADE       */ 02130000
         TM    UPTF1UPG(RWORK2),B'00000001'                        0858 02131000
         BNO   @RF00858                                            0858 02132000
*           DO;                                                    0859 02133000
*             IF RPLERREG='0C'X THEN/* IF PHYSICAL ERROR             */ 02134000
         L     @04,UPTRPL(,RWORK1)                                 0860 02135000
         CLI   RPLERREG(@04),12                                    0860 02136000
         BNE   @RF00860                                            0860 02137000
*               RWORK2->UPTF1ATV=OFF;/* NO BACKOUT IS POSSIBLE       */ 02138000
         NI    UPTF1ATV(RWORK2),B'10111111'                        0861 02139000
*             ELSE                  /* IF LOGICAL ERROR              */ 02140000
*               DO;                                                0862 02141000
         B     @RC00860                                            0862 02142000
@RF00860 DS    0H                                                  0863 02143000
*                 RWORK2->UPTPASS=DPASS8;/* SET FOR RECOVERY PASS    */ 02144000
         MVI   UPTPASS(RWORK2),X'08'                               0863 02145000
*                 RWORK2->UPTF1ATV=ON;/* AGAIN ACTIVE                */ 02146000
         OI    UPTF1ATV(RWORK2),B'01000000'                        0864 02147000
*                 RWORK2->UPTF1BKO=ON;/* SET BACKOUT STARTED         */ 02148000
         OI    UPTF1BKO(RWORK2),B'10000000'                        0865 02149000
*               END;                                               0866 02150000
*           END;                                                   0867 02151000
@RC00860 DS    0H                                                  0868 02152000
*         RWORK2=RWORK2+LENGTH(UPTAXENT);/* POINT TO NEXT ENTRY      */ 02153000
@RF00858 AL    RWORK2,@CF00229                                     0868 02154000
*       END;                                                       0869 02155000
         BCTR  RWORK3,0                                            0869 02156000
@DE00857 LTR   RWORK3,RWORK3                                       0869 02157000
         BP    @DL00857                                            0869 02158000
*       RPLFDBWD=0;                 /* ZERO ERROR INDIC              */ 02159000
         L     @04,UPTRPL(,RWORK1)                                 0870 02160000
         SLR   @03,@03                                             0870 02161000
         ST    @03,RPLFDBWD(,@04)                                  0870 02162000
*     END;                                                         0871 02163000
*   RESPECIFY                                                      0872 02164000
*    (RWORK2,                                                      0872 02165000
*     RWORK3) UNRESTRICTED;                                        0872 02166000
@RC00838 DS    0H                                                  0873 02167000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 02168000
         IDARST14                                                       02169000
*   END BADERROR;                                                  0874 02170000
@EL00019 DS    0H                                                  0874 02171000
@EF00019 DS    0H                                                  0874 02172000
@ER00019 BR    @14                                                 0874 02173000
         EJECT                                                          02174000
*XPANDBFR:                                                         0875 02175000
*                                                                  0875 02176000
*/********************************************************************/ 02177000
*/* EXPANDS THE UPTRPL RPLAREA                                       */ 02178000
*/********************************************************************/ 02179000
*                                                                  0875 02180000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0875 02181000
XPANDBFR DS    0H                                                  0876 02182000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 02183000
         IDASVR14                                                       02184000
*   RESPECIFY                                                      0877 02185000
*    (RWORK2,                                                      0877 02186000
*     RWORK3,                                                      0877 02187000
*     RWORK4,                                                      0877 02188000
*     RWORK5) RESTRICTED;                                          0877 02189000
*   RWORK4=RPLAREA;                 /* LOAD ADDRESS OLD AREA         */ 02190000
         L     @04,UPTRPL(,RWORK1)                                 0878 02191000
         L     RWORK4,RPLAREA(,@04)                                0878 02192000
*   RWORK5=RPLBUFL;                 /* LOAD OLD AREA LENGTH          */ 02193000
         L     RWORK5,RPLBUFL(,@04)                                0879 02194000
*   STM(RRPL,RPARM1,RPARM1->UPTR15);/* SAVE REGISTERS                */ 02195000
         STM   RRPL,RPARM1,UPTR15(RPARM1)                          0880 02196000
*   IF RWORK5^=0 THEN               /* IF RPLAREA EXISTS             */ 02197000
         LTR   RWORK5,RWORK5                                       0881 02198000
         BZ    @RF00881                                            0881 02199000
*     DO;                                                          0882 02200000
*       IF AMDDST=ON THEN           /* IF BASE IS KEYED DATA SET     */ 02201000
         L     @04,PLHAMB(,RPLH)                                   0883 02202000
         L     @04,AMBDSB(,@04)                                    0883 02203000
         TM    AMDDST(@04),B'10000000'                             0883 02204000
         BNO   @RF00883                                            0883 02205000
*         RWORK2=AMDKEYLN;          /* LOAD PTR LENGTH               */ 02206000
         LH    RWORK2,AMDKEYLN(,@04)                               0884 02207000
*       ELSE                        /* IF BASE IS ESDS               */ 02208000
*         RWORK2=LENGTH(RPLDDDD);   /* PTR LENGTH IS 4               */ 02209000
         B     @RC00883                                            0885 02210000
@RF00883 LA    RWORK2,4                                            0885 02211000
*       RWORK2=RWORK2+RPLRLEN;      /* LOAD NEW BUFFER LENGTH        */ 02212000
@RC00883 L     @04,UPTRPL(,RWORK1)                                 0886 02213000
         AL    RWORK2,RPLRLEN(,@04)                                0886 02214000
*     END;                                                         0887 02215000
*   ELSE                            /* RPLAREA DOES NOT EXIST        */ 02216000
*     RWORK2=UPTBG;                 /* USE INITIAL VALUE             */ 02217000
         B     @RC00881                                            0888 02218000
@RF00881 LH    RWORK2,UPTBG(,RWORK1)                               0888 02219000
*   RPLBUFL=RWORK2;                 /* SAVE BYTES NEEDED             */ 02220000
@RC00881 L     @04,UPTRPL(,RWORK1)                                 0889 02221000
         ST    RWORK2,RPLBUFL(,@04)                                0889 02222000
*   RWORK1=RWORK2;                  /* COPY BYTES NEEDED             */ 02223000
         LR    RWORK1,RWORK2                                       0890 02224000
*   RESPECIFY                                                      0891 02225000
*    (RAMB,                                                        0891 02226000
*     R15) RESTRICTED;                                             0891 02227000
*   RAMB=ADDR(IDAAMB);              /* RESTORE POINTER TO AMB        */ 02228000
         L     RAMB,PLHAMB(,RPLH)                                  0892 02229000
*I05:                                                              0893 02230000
*   DO;                             /* IDACALL(IDAGETWS)             */ 02231000
I05      DS    0H                                                  0894 02232000
*     CALL IDAGETWS;                /* EXIT TO IDAGETWS              */ 02233000
         L     @15,@CV01385                                        0894 02234000
         BALR  @14,@15                                             0894 02235000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02236000
         BALR @11,0                                                     02237000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02238000
         USING *,@11                                                    02239000
*     GEN(USING *+4095,R10);        /* ESTABLISH SECOND BASE         */ 02240000
         USING *+4095,R10                                               02241000
*     GEN(LA    R10,4095(@11));     /* LOAD SECOND BASE              */ 02242000
         LA    R10,4095(@11)                                            02243000
*     GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 02244000
         L     R10,=A(@PSTART+4095)                                     02245000
*     GEN(USING @PSTART+4095,R10);  /* ESTABLISH SECOND BASE         */ 02246000
         USING @PSTART+4095,R10                                         02247000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02248000
         L     @11,=A(@PSTART)                                          02249000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02250000
         USING @PSTART,@11                                              02251000
*   END I05;                        /* GET NEW BUFFER                */ 02252000
*   RESPECIFY                                                      0904 02253000
*    (R14,                                                         0904 02254000
*     R15) RESTRICTED;              /*                       @XA16126*/ 02255000
*   RPARM1=BIBUPT;                  /* RELOAD PTR TO UPT             */ 02256000
         L     @04,AMBLBIB(,RPARM1)                                0905 02257000
         L     @04,BIBUPT(,@04)                                    0905 02258000
         LR    RPARM1,@04                                          0905 02259000
*   RESPECIFY                                                      0906 02260000
*     RAMB UNRESTRICTED;                                           0906 02261000
*   IF R15^=0 THEN                  /* IF ANY ERROR                  */ 02262000
         LTR   R15,R15                                             0907 02263000
         BZ    @RF00907                                            0907 02264000
*     DO;                                                          0908 02265000
*       LM(RRPL,RPARM1,RPARM1->UPTR15);/* RESTORE REGISTERS          */ 02266000
         LM    RRPL,RPARM1,UPTR15(RPARM1)                          0909 02267000
*       RPLERREG='08'X;             /* SET LOGICALL ERROR            */ 02268000
         L     @04,UPTRPL(,RWORK1)                                 0910 02269000
         MVI   RPLERREG(@04),X'08'                                 0910 02270000
*       RPLCMPON=RPLUPGER;          /* ERROR DURING UPGRADE          */ 02271000
         MVI   RPLCMPON(@04),X'04'                                 0911 02272000
*       RPLERRCD=RPLNOVRT;          /* NO MO CORE                    */ 02273000
         MVI   RPLERRCD(@04),X'28'                                 0912 02274000
*       GEN(IDARST14);              /* RESTORE RETURN ADDR   @XA16126*/ 02275000
         IDARST14                                                       02276000
*       RETURN CODE(R15);           /* EXIT ROUTINE                  */ 02277000
@EL00020 DS    0H                                                  0914 02278000
@EF00020 DS    0H                                                  0914 02279000
@ER00020 BR    @14                                                 0914 02280000
*     END;                                                         0915 02281000
*   RESPECIFY                                                      0916 02282000
*     R15 UNRESTRICTED;                                            0916 02283000
@RF00907 DS    0H                                                  0917 02284000
*   RESPECIFY                                                      0917 02285000
*     R14 RESTRICTED;                                              0917 02286000
*   R14=RWORK1;                     /* SAVE BUFFER ADDRESS IF ANY    */ 02287000
         LR    R14,RWORK1                                          0918 02288000
*   LM(RRPL,RWORK5,RPARM1->UPTR15); /* RESTORE REGISTERS             */ 02289000
         LM    RRPL,RWORK5,UPTR15(RPARM1)                          0919 02290000
*   RWORK2=R14;                     /* COPY RESULT ADDR              */ 02291000
         LR    RWORK2,R14                                          0920 02292000
*   RESPECIFY                                                      0921 02293000
*     R14 UNRESTRICTED;                                            0921 02294000
*   RPLAREA=RWORK2;                 /* SAVE NEW AREA ADDR            */ 02295000
         L     @04,UPTRPL(,RWORK1)                                 0922 02296000
         ST    RWORK2,RPLAREA(,@04)                                0922 02297000
*   IF RWORK5^=0 THEN               /* IF RPLAREA ORIGINALLY EXISTED */ 02298000
         LTR   RWORK5,RWORK5                                       0923 02299000
         BZ    @RF00923                                            0923 02300000
*     DO;                                                          0924 02301000
*       RWORK3=RWORK5;              /* COPY OLD AREA LENGTH          */ 02302000
         LR    RWORK3,RWORK5                                       0925 02303000
*       MVCL(RWORK2,RWORK4);        /* MOVE OLD AREA INTO NEW AREA   */ 02304000
         MVCL  RWORK2,RWORK4                                       0926 02305000
*       LM(RRPL,RWORK5,RPARM1->UPTR15);/* RESTORE REGISTERS          */ 02306000
         LM    RRPL,RWORK5,UPTR15(RPARM1)                          0927 02307000
*       RWORK1=RWORK4;              /* POINT TO START OF OLD AREA    */ 02308000
         LR    RWORK1,RWORK4                                       0928 02309000
*       RWORK2=RWORK5;              /* COPY LENGTH OF OLD AREA       */ 02310000
         LR    RWORK2,RWORK5                                       0929 02311000
*       RESPECIFY                                                  0930 02312000
*         RAMB RESTRICTED;                                         0930 02313000
*       RAMB=ADDR(IDAAMB);          /* RESTORE POINTER TO AMB        */ 02314000
         L     RAMB,PLHAMB(,RPLH)                                  0931 02315000
*I06:                                                              0932 02316000
*       DO;                         /* IDACALL(IDARELWS)             */ 02317000
I06      DS    0H                                                  0933 02318000
*         CALL IDARELWS;            /* EXIT TO IDARELWS              */ 02319000
         L     @15,@CV01386                                        0933 02320000
         BALR  @14,@15                                             0933 02321000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02322000
         BALR @11,0                                                     02323000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02324000
         USING *,@11                                                    02325000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 02326000
         USING *+4095,R10                                               02327000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 02328000
         LA    R10,4095(@11)                                            02329000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 02330000
         L     R10,=A(@PSTART+4095)                                     02331000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 02332000
         USING @PSTART+4095,R10                                         02333000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02334000
         L     @11,=A(@PSTART)                                          02335000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02336000
         USING @PSTART,@11                                              02337000
*       END I06;                    /* RELEASE BUFFER                */ 02338000
*       RESPECIFY                                                  0943 02339000
*         RAMB UNRESTRICTED;                                       0943 02340000
*     END;                                                         0944 02341000
*   LM(RRPL,RPARM1,RPARM1->UPTR15); /* RESTORE REGISTERS             */ 02342000
@RF00923 LM    RRPL,RPARM1,UPTR15(RPARM1)                          0945 02343000
*   RESPECIFY                                                      0946 02344000
*    (RWORK2,                                                      0946 02345000
*     RWORK3,                                                      0946 02346000
*     RWORK4,                                                      0946 02347000
*     RWORK5) UNRESTRICTED;                                        0946 02348000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02349000
         IDARST14                                                       02350000
*   END XPANDBFR;                                                  0948 02351000
         B     @EL00020                                            0948 02352000
         EJECT                                                          02353000
*   RESPECIFY                                                      0949 02354000
*     RAMB RESTRICTED;                                             0949 02355000
*   RESPECIFY                                                      0950 02356000
*     IDAAMB BASED(RAMB);                                          0950 02357000
*R4INT:                                                            0951 02358000
*                                                                  0951 02359000
*/********************************************************************/ 02360000
*/* THIS  PROCEDURE INTERFACES WITH IDA019R4 TO DO THE I/O AGAINST   */ 02361000
*/*           THE AIX                                                */ 02362000
*/********************************************************************/ 02363000
*                                                                  0951 02364000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0951 02365000
R4INT    DS    0H                                                  0952 02366000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 02367000
         IDASVR14                                                       02368000
*   STM(R15,RPARM1,RPARM1->UPTR15); /* SAVE REGISTERS 15 - 12        */ 02369000
         STM   R15,RPARM1,UPTR15(RPARM1)                           0953 02370000
*   RRPL=ADDR(IFGRPL);              /* POINT TO UPGRADE RPL          */ 02371000
         L     RRPL,UPTRPL(,RWORK1)                                0954 02372000
*   RESPECIFY                                                      0955 02373000
*     IFGRPL BASED(RRPL);                                          0955 02374000
*   RPARM1=ACBAMBL;                 /* LOAD POINTER TO AMBL          */ 02375000
         L     @04,RPLDACB(,RRPL)                                  0956 02376000
         L     RPARM1,ACBAMBL(,@04)                                0956 02377000
*   RAMB=RPARM1->AMBLDTA;           /* POINT TO DATA AMB             */ 02378000
         L     RAMB,AMBLDTA(,RPARM1)                               0957 02379000
*   RPLH=RPLPLHPT;                  /* POINT TO PLH                  */ 02380000
         L     RPLH,RPLPLHPT(,RRPL)                                0958 02381000
*   RPLFDBWD=0;                     /* ZERO FEEDBACK FIELD           */ 02382000
         SLR   @04,@04                                             0959 02383000
         ST    @04,RPLFDBWD(,RRPL)                                 0959 02384000
*   RPLECB=0;                       /* ZERO ECB                      */ 02385000
         ST    @04,RPLECB(,RRPL)                                   0960 02386000
*   BIBUPT->UPTLSA=R13;             /* SAVE CURENT SA PTR            */ 02387000
         L     @04,AMBLBIB(,RPARM1)                                0961 02388000
         L     @04,BIBUPT(,@04)                                    0961 02389000
         ST    R13,UPTLSA(,@04)                                    0961 02390000
*   R13=ADDR(BIBUPT->UPTSA);        /* PT TO UPT SA SO THAT IDAWAIT     02391000
*                                      WILL RETURN TO IDA019RU       */ 02392000
         LA    R13,UPTSA(,@04)                                     0962 02393000
*   BIBUPT->UPTR14=ADDR(AFTR4);     /* SET IDAWAIT RETURN POINT      */ 02394000
         LA    @00,AFTR4                                           0963 02395000
         ST    @00,UPTR14(,@04)                                    0963 02396000
*   R14=ADDR(COMPIO);               /* SET ADDR OF ROUTINE TO RECIEVE   02397000
*                                      CONTROL WHEN I/O IS COMPLETE  */ 02398000
         LA    R14,COMPIO                                          0964 02399000
*   RESPECIFY                                                      0965 02400000
*     R15 RESTRICTED;                                              0965 02401000
*   R15=ADDR(IDA019R4);             /* POINT TO IDA019R4             */ 02402000
         L     R15,@CV01395                                        0966 02403000
*   GOTO BR15ROUT;                  /* EXIT TO IDA019R4              */ 02404000
         BR    R15                                                 0967 02405000
*   RESPECIFY                                                      0968 02406000
*     R15 UNRESTRICTED;                                            0968 02407000
*AFTR4:                                                            0969 02408000
*   R13=RPARM1->UPTLSA;             /* RESTORE CURRENT SA PTR        */ 02409000
AFTR4    L     R13,UPTLSA(,RPARM1)                                 0969 02410000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02411000
         IDARST14                                                       02412000
*   RETURN;                         /* EXIT PROCEDURE                */ 02413000
@EL00021 DS    0H                                                  0971 02414000
@EF00021 DS    0H                                                  0971 02415000
@ER00021 BR    @14                                                 0971 02416000
*COMPIO:                                                           0972 02417000
*   GEN;                                                           0972 02418000
COMPIO   DS    0H                                                  0972 02419000
*                                   /* RESTORE BASE REGISTER         */ 02420000
    BALR  @11,0                     LOAD ADDR OF REENTRY                02421000
    USING *,@11                     ESTABLISH ADDRESSING                02422000
    USING *+4095,@10                ESTABLISH SECOND BASE               02423000
    LA  @10,4095(@11)               LOAD SECOND BASE                    02424000
    L @10,=A(@PSTART+4095)          RELOAD SECOND BASE                  02425000
    USING @PSTART+4095,@10          ESTABLIST SECOND BASE               02426000
    L     @11,=A(@PSTART)           RELOAD BASE ADDRESS                 02427000
    USING @PSTART,@11               REESTABLISH BASE                    02428000
*   RPARM1=RPLDACB->ACBAMBL->AMBLBIB->BIBUPT;/* POINT TO UPT         */ 02429000
         L     @04,RPLDACB(,RRPL)                                  0973 02430000
         L     @04,ACBAMBL(,@04)                                   0973 02431000
         L     @04,AMBLBIB(,@04)                                   0973 02432000
         L     RPARM1,BIBUPT(,@04)                                 0973 02433000
*   IF RPARM1->UPTBRPL->RPLASY=ON THEN/* IF USER IS ASYNCH           */ 02434000
         L     @04,UPTBRPL(,RPARM1)                                0974 02435000
         TM    RPLASY(@04),B'00001000'                             0974 02436000
         BNO   @RF00974                                            0974 02437000
*     DO;                                                          0975 02438000
*       RPLPOST=ON;                 /* SET POST BIT                  */ 02439000
         OI    RPLPOST(RRPL),B'01000000'                           0976 02440000
*       TS(RPARM1->UPTSARES);       /* TRY TO GET CONTROL            */ 02441000
         TS    UPTSARES(RPARM1)                                    0977 02442000
*       GEN(BZ CONTINUE);           /* BR IF HAVE CONTROL            */ 02443000
         BZ CONTINUE                                                    02444000
*     END;                                                         0979 02445000
*   ELSE                            /* IF USER IS SYNCH              */ 02446000
*     DO;                                                          0980 02447000
         B     @RC00974                                            0980 02448000
@RF00974 DS    0H                                                  0981 02449000
*       RWORK1=RRPL;                /* SAVE POINTER TO RPL           */ 02450000
         LR    RWORK1,RRPL                                         0981 02451000
*       R1=ADDR(RPLECB);            /* PT TO ECB IN UPGRADE RPL      */ 02452000
         LA    @04,RPLECB(,RRPL)                                   0982 02453000
         LR    R1,@04                                              0982 02454000
*       GEN(POST (1));              /* POST UPGRADE ECB              */ 02455000
         POST (1)                                                       02456000
*       RRPL=RWORK1;                /* RESTORE PTR TO RPL            */ 02457000
         LR    RRPL,RWORK1                                         0984 02458000
*     END;                                                         0985 02459000
*   LM(R14,RPARM1,SSAR14);          /* RESTORE REGISTERS             */ 02460000
@RC00974 LM    R14,RPARM1,SSAR14(R13)                              0986 02461000
*   GEN(BR R14);                    /* RETURN TO CALLER              */ 02462000
         BR R14                                                         02463000
*   END R4INT;                                                     0988 02464000
         B     @EL00021                                            0988 02465000
*   RESPECIFY                                                      0989 02466000
*     IDAAMB BASED(PLHAMB);                                        0989 02467000
*   RESPECIFY                                                      0990 02468000
*     RAMB UNRESTRICTED;                                           0990 02469000
         EJECT                                                          02470000
*GETPLH:                                                           0991 02471000
*                                                                  0991 02472000
*/********************************************************************/ 02473000
*/* THIS  PROCEDURE OBTAINS A PLH TO BE USED WITH AIX PROCESSING     */ 02474000
*/********************************************************************/ 02475000
*                                                                  0991 02476000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0991 02477000
GETPLH   DS    0H                                                  0992 02478000
*   RESPECIFY                                                      0992 02479000
*     RWORK5 RESTRICTED;                                           0992 02480000
*   RESPECIFY                                                      0993 02481000
*     IFGRPL BASED(RRPL);                                          0993 02482000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 02483000
         IDASVR14                                                       02484000
*   STM(RRPL,RPARM1,RPARM1->UPTR15);/* SAVE REGISTERS                */ 02485000
         STM   RRPL,RPARM1,UPTR15(RPARM1)                          0995 02486000
*   RESPECIFY                                                      0996 02487000
*     RAMB RESTRICTED;                                             0996 02488000
*   RAMB=RWORK5;                    /* POINT TO BASE DATA AMB        */ 02489000
         LR    RAMB,RWORK5                                         0997 02490000
*   RRPL=UPTRPL;                    /* POINT TO UPGRADE RPL          */ 02491000
         L     RRPL,UPTRPL(,RWORK1)                                0998 02492000
*   CALL XGPLH;                     /* GET UPGRADE PLH               */ 02493000
         BAL   @14,XGPLH                                           0999 02494000
*   RESPECIFY                                                      1000 02495000
*     RAMB UNRESTRICTED;                                           1000 02496000
*   IF RPLH=0 THEN                  /* IF NO PLH IS AVAILABLE        */ 02497000
         SLR   @08,@08                                             1001 02498000
         CR    RPLH,@08                                            1001 02499000
         BNE   @RF01001                                            1001 02500000
*     DO;                                                          1002 02501000
*       RPLPLHPT=0;                 /* LAST PLH CANNOT BE USED       */ 02502000
         ST    @08,RPLPLHPT(,RRPL)                                 1003 02503000
*       RRPL=RPARM1->UPTBRPL;       /* RESTORE BASE RPL PTR          */ 02504000
         L     RRPL,UPTBRPL(,RPARM1)                               1004 02505000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 02506000
         MVI   RPLERREG(RRPL),X'08'                                1005 02507000
*       RPLCMPON=RPLBASER;          /* DURING BASE PROCESSING        */ 02508000
         MVI   RPLCMPON(RRPL),X'00'                                1006 02509000
*       RPLERRCD=RPLNOPLH;          /* ERROR IS NO PLH               */ 02510000
         MVI   RPLERRCD(RRPL),X'40'                                1007 02511000
*     END;                                                         1008 02512000
*   RPARM1=RPLDACB->ACBAMBL->AMBLBIB->BIBUPT;/* POINT TO UPT @ZA04706*/ 02513000
@RF01001 L     @08,RPLDACB(,RRPL)                                  1009 02514000
         L     @08,ACBAMBL(,@08)                                   1009 02515000
         L     @08,AMBLBIB(,@08)                                   1009 02516000
         L     RPARM1,BIBUPT(,@08)                                 1009 02517000
*   LM(RRPL,RPARM1,RPARM1->UPTR15); /* RESTORE REGISTERS             */ 02518000
         LM    RRPL,RPARM1,UPTR15(RPARM1)                          1010 02519000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02520000
         IDARST14                                                       02521000
*   RETURN CODE(RPLERREG);          /* EXIT TO CALLER                */ 02522000
         SLR   @15,@15                                             1012 02523000
         IC    @15,RPLERREG(,RRPL)                                 1012 02524000
@EL00022 DS    0H                                                  1012 02525000
@EF00022 DS    0H                                                  1012 02526000
@ER00022 BR    @14                                                 1012 02527000
*   RESPECIFY                                                      1013 02528000
*     RWORK5 UNRESTRICTED;                                         1013 02529000
*   END GETPLH;                                                    1014 02530000
         EJECT                                                          02531000
*RELPLH:                                                           1015 02532000
*                                                                  1015 02533000
*/********************************************************************/ 02534000
*/* THIS  PROCEDURE RELEASES THE PLH USED TO PROCESS THE AIX         */ 02535000
*/********************************************************************/ 02536000
*                                                                  1015 02537000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1015 02538000
RELPLH   DS    0H                                                  1016 02539000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 02540000
         IDASVR14                                                       02541000
*   STM(RRPL,RPARM1,RPARM1->UPTR15);/* SAVE REGISTERS                */ 02542000
         STM   RRPL,RPARM1,UPTR15(RPARM1)                          1017 02543000
*   RRPL=UPTRPL;                    /* POINT TO UPGRADE RPL          */ 02544000
         L     RRPL,UPTRPL(,RWORK1)                                1018 02545000
*   RPLH=RPLPLHPT;                  /* LOAD ADDR PLH TO RELEASE      */ 02546000
         L     RPLH,RPLPLHPT(,RRPL)                                1019 02547000
*   RPARM1=ACBAMBL;                 /* POINT TO UPGRADE AMBL         */ 02548000
         L     @04,RPLDACB(,RRPL)                                  1020 02549000
         L     RPARM1,ACBAMBL(,@04)                                1020 02550000
*   RESPECIFY                                                      1021 02551000
*     RAMB RESTRICTED;                                             1021 02552000
*   RAMB=RPARM1->AMBLDTA;           /* LOAD ADDR OF AMB              */ 02553000
         L     RAMB,AMBLDTA(,RPARM1)                               1022 02554000
*   RESPECIFY                                                      1023 02555000
*     RBUFC RESTRICTED;             /*                       @ZA24684*/ 02556000
*   RBUFC=0;                        /* ZERO REG TO SUBTRACT ALL      */ 02557000
         SLR   RBUFC,RBUFC                                         1024 02558000
*I07:                                                              1025 02559000
*   DO;                             /* IDACALL(IDASBF)               */ 02560000
I07      DS    0H                                                  1026 02561000
*     CALL IDASBF;                  /* EXIT TO IDASBF                */ 02562000
         L     @15,@CV01387                                        1026 02563000
         BALR  @14,@15                                             1026 02564000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02565000
         BALR @11,0                                                     02566000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02567000
         USING *,@11                                                    02568000
*     GEN(USING *+4095,R10);        /* ESTABLISH SECOND BASE         */ 02569000
         USING *+4095,R10                                               02570000
*     GEN(LA    R10,4095(@11));     /* LOAD SECOND BASE              */ 02571000
         LA    R10,4095(@11)                                            02572000
*     GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 02573000
         L     R10,=A(@PSTART+4095)                                     02574000
*     GEN(USING @PSTART+4095,R10);  /* ESTABLISH SECOND BASE         */ 02575000
         USING @PSTART+4095,R10                                         02576000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02577000
         L     @11,=A(@PSTART)                                          02578000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02579000
         USING @PSTART,@11                                              02580000
*   END I07;                        /* SUBTRACT BUFFERS              */ 02581000
*   PLHFLG1=0;                      /* ZERO FLAG BYTE 1              */ 02582000
         MVI   PLHFLG1(RPLH),X'00'                                 1036 02583000
*   PLHFLG2=0;                      /* ZERO FLAG BYTE 2              */ 02584000
         MVI   PLHFLG2(RPLH),X'00'                                 1037 02585000
*   PLHFLG3=0;                      /* ZERO FLAG BYTE 3              */ 02586000
         MVI   PLHFLG3(RPLH),X'00'                                 1038 02587000
*   PLHEFLGS=0;                     /* ZERO EXCEPTION FLAGS          */ 02588000
         SLR   @15,@15                                             1039 02589000
         STH   @15,PLHEFLGS(,RPLH)                                 1039 02590000
*   PLHINVAL=ON;                    /* RESET INVALID FLAG            */ 02591000
         OI    PLHINVAL(RPLH),B'00000010'                          1040 02592000
*   PLHAVL=0;                       /* MAKE PLH AVAILABLE            */ 02593000
         MVI   PLHAVL(RPLH),X'00'                                  1041 02594000
*   PLHARDB=0;                      /* ZERO ARDB POINTER     @XA16126*/ 02595000
         ST    @15,PLHARDB(,RPLH)                                  1042 02596000
*   RAMB->AMBUPLH->PLHDRCUR=RAMB->AMBUPLH->PLHDRCUR-1;/* REDUCE    1043 02597000
*                                      CURRENT PLH COUNT             */ 02598000
         L     @15,AMBUPLH(,RAMB)                                  1043 02599000
         LH    @00,PLHDRCUR(,@15)                                  1043 02600000
         BCTR  @00,0                                               1043 02601000
         STH   @00,PLHDRCUR(,@15)                                  1043 02602000
*   RESPECIFY                                                      1044 02603000
*     RAMB UNRESTRICTED;                                           1044 02604000
*   RPARM1=RPARM1->AMBLBIB->BIBUPT; /* RELOAD POINTER TO UPT         */ 02605000
         L     @03,AMBLBIB(,RPARM1)                                1045 02606000
         L     @03,BIBUPT(,@03)                                    1045 02607000
         LR    RPARM1,@03                                          1045 02608000
*   LM(RRPL,RPARM1,RPARM1->UPTR15); /* RESTORE REGISTERS             */ 02609000
         LM    RRPL,RPARM1,UPTR15(RPARM1)                          1046 02610000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02611000
         IDARST14                                                       02612000
*   END RELPLH;                                                    1048 02613000
@EL00023 DS    0H                                                  1048 02614000
@EF00023 DS    0H                                                  1048 02615000
@ER00023 BR    @14                                                 1048 02616000
         EJECT                                                          02617000
*IDAXGPLH:                                                         1049 02618000
*                                                                  1049 02619000
*/********************************************************************/ 02620000
*/* THIS  PROCEDURE GETS A PLH FROM THE PLH POOL                     */ 02621000
*/*   INPUT = POINTER TO RPL IN RRPL                                 */ 02622000
*/*   OUTPUT = RPLH HAS POINTER TO PLH IF ONE AVAILABLE              */ 02623000
*/*            RPLH HAS ZERO IF NONE AVAILABLE                       */ 02624000
*/********************************************************************/ 02625000
*                                                                  1049 02626000
*   ENTRY;                          /* EXTERNAL ENTRY                */ 02627000
@EP01049 DS    0H                                                  1050 02628000
*XGPLH:                                                            1050 02629000
*   RESPECIFY                                                      1050 02630000
*    (RWORK1,                                                      1050 02631000
*     RWORK2,                                                      1050 02632000
*     RWORK3,                                                      1050 02633000
*     RWORK4,                                                      1050 02634000
*     RWORK5,                                                      1050 02635000
*     R14) RESTRICTED;                                             1050 02636000
XGPLH    DS    0H                                                  1051 02637000
*   RESPECIFY                                                      1051 02638000
*     RAMB RESTRICTED;                                             1051 02639000
*   RESPECIFY                                                      1052 02640000
*     IDAAMB BASED(RAMB);                                          1052 02641000
*                                                                  1052 02642000
*   /*****************************************************************/ 02643000
*   /*                                                               */ 02644000
*   /* TRY TO GET LAST PLACEHOLDER USED                              */ 02645000
*   /*                                                               */ 02646000
*   /*****************************************************************/ 02647000
*                                                                  1053 02648000
*   RPLH=RPLPLHPT;                  /* LOAD PTR LAST PLH USED        */ 02649000
         L     RPLH,RPLPLHPT(,RRPL)                                1053 02650000
*   IF RPLH^=0 THEN                 /* IF LAST PLH EXISTS            */ 02651000
         LTR   RPLH,RPLH                                           1054 02652000
         BZ    @RF01054                                            1054 02653000
*     DO;                                                          1055 02654000
*       IF PLHMRPL=RRPL THEN        /* IF PLH STILL POINTS BACK      */ 02655000
         C     RRPL,PLHMRPL(,RPLH)                                 1056 02656000
         BNE   @RF01056                                            1056 02657000
*         DO;                                                      1057 02658000
*           TS(PLHAVL);             /* TRY TO REGAIN PLH             */ 02659000
         TS    PLHAVL(RPLH)                                        1058 02660000
*           BC(8,REPLH);            /* BRANCH IF PLH REGAINED        */ 02661000
         BC    8,REPLH                                             1059 02662000
*         END;                                                     1060 02663000
*     END;                                                         1061 02664000
@RF01056 DS    0H                                                  1062 02665000
*FNDPLH:                                                           1062 02666000
*                                                                  1062 02667000
*   /*****************************************************************/ 02668000
*   /*                                                               */ 02669000
*   /* SEARCH FOR A NEVER-ASSIGNED PLACEHOLDER                       */ 02670000
*   /*                                                               */ 02671000
*   /*****************************************************************/ 02672000
*                                                                  1062 02673000
*   IF AMBPH^=0 THEN                /* IF AMBPH POINTER PRESENT      */ 02674000
@RF01054 DS    0H                                                  1062 02675000
FNDPLH   L     @15,AMBPH(,RAMB)                                    1062 02676000
         LTR   @15,@15                                             1062 02677000
         BZ    @RF01062                                            1062 02678000
*     RPLH=AMBPH;                   /* POINT TO PLH HEADER           */ 02679000
         LR    RPLH,@15                                            1063 02680000
*   ELSE                            /* AMBUPLH PTR MUST BE PRESENT   */ 02681000
*     RPLH=AMBUPLH;                 /* POINT TO PLH HEADER           */ 02682000
         B     @RC01062                                            1064 02683000
@RF01062 L     RPLH,AMBUPLH(,RAMB)                                 1064 02684000
*   RPLH=RPLH+LENGTH(IDAPLHDR);     /* POINT TO FIRST PLH            */ 02685000
@RC01062 AL    RPLH,@CF00088                                       1065 02686000
*   DO UNTIL RPLH=0;                /* LOOP THRU PLH CHAIN           */ 02687000
@DL01066 DS    0H                                                  1067 02688000
*     IF PLHMRPL=0 THEN             /* IF PLH NEVER ASSIGNED         */ 02689000
         L     @15,PLHMRPL(,RPLH)                                  1067 02690000
         LTR   @15,@15                                             1067 02691000
         BNZ   @RF01067                                            1067 02692000
*       DO;                                                        1068 02693000
*         TS(PLHAVL);               /* TRY TO GET PLH                */ 02694000
         TS    PLHAVL(RPLH)                                        1069 02695000
*         BC(8,REPLH);              /* BRANCH IF PLH GOTTEN          */ 02696000
         BC    8,REPLH                                             1070 02697000
*       END;                                                       1071 02698000
*     RPLH=PLHCHAIN;                /* POINT TO NEXT PLH             */ 02699000
@RF01067 L     RPLH,PLHCHAIN(,RPLH)                                1072 02700000
*   END;                                                           1073 02701000
*                                                                  1073 02702000
@DE01066 SLR   @15,@15                                             1073 02703000
         CR    RPLH,@15                                            1073 02704000
         BNE   @DL01066                                            1073 02705000
*   /*****************************************************************/ 02706000
*   /*                                                               */ 02707000
*   /* TRY TO FIND FIRST PLACEHOLDER AVAILABLE                       */ 02708000
*   /*                                                               */ 02709000
*   /*****************************************************************/ 02710000
*                                                                  1074 02711000
*   IF AMBPH^=0 THEN                /* IF AMBPH POINTER PRESENT      */ 02712000
         L     @00,AMBPH(,RAMB)                                    1074 02713000
         CR    @00,@15                                             1074 02714000
         BE    @RF01074                                            1074 02715000
*     RPLH=AMBPH;                   /* POINT TO PLH HEADER           */ 02716000
         LR    RPLH,@00                                            1075 02717000
*   ELSE                            /* AMBUPLH PTR MUST BE PRESENT   */ 02718000
*     RPLH=AMBUPLH;                 /* POINT TO PLH HEADER           */ 02719000
         B     @RC01074                                            1076 02720000
@RF01074 L     RPLH,AMBUPLH(,RAMB)                                 1076 02721000
*   RPLH=RPLH+LENGTH(IDAPLHDR);     /* POINT TO FIRST PLH            */ 02722000
@RC01074 AL    RPLH,@CF00088                                       1077 02723000
*   DO UNTIL RPLH=0;                /* LOOP THRU PLH CHAIN           */ 02724000
@DL01078 DS    0H                                                  1079 02725000
*     TS(PLHAVL);                   /* TRY TO GET PLH                */ 02726000
         TS    PLHAVL(RPLH)                                        1079 02727000
*     BC(8,REPLH);                  /* BRANCH IF PLH GOTTEN          */ 02728000
         BC    8,REPLH                                             1080 02729000
*     RPLH=PLHCHAIN;                /* POINT TO NEXT PLH             */ 02730000
         L     RPLH,PLHCHAIN(,RPLH)                                1081 02731000
*   END;                                                           1082 02732000
@DE01078 LTR   RPLH,RPLH                                           1082 02733000
         BNZ   @DL01078                                            1082 02734000
*REPLH:                                                            1083 02735000
*   IF RPLH^=0 THEN                 /* IF A PLH WAS FOUND            */ 02736000
REPLH    LTR   RPLH,RPLH                                           1083 02737000
         BZ    @RF01083                                            1083 02738000
*     DO;                                                          1084 02739000
*       RPLPLHPT=RPLH;              /* POINT RPL TO PLH              */ 02740000
         ST    RPLH,RPLPLHPT(,RRPL)                                1085 02741000
*       PLHMRPL=RRPL;               /* POINT MASTER RPL TO RPL       */ 02742000
         ST    RRPL,PLHMRPL(,RPLH)                                 1086 02743000
*       PLHCRPL=RRPL;               /* POINT CURRENT RPL TO RPL      */ 02744000
         ST    RRPL,PLHCRPL(,RPLH)                                 1087 02745000
*       PLHRETO=PLHRETOS;           /* RESET PDL OFFSET      @ZA16007*/ 02746000
         LH    @15,PLHRETOS(,RPLH)                                 1088 02747000
         STH   @15,PLHRETO(,RPLH)                                  1088 02748000
*       RWORK3=ADDR(IFGACB);        /* LOAD PTR TO ACB       @ZA14829*/ 02749000
         L     RWORK3,RPLDACB(,RRPL)                               1089 02750000
*       GEN(LA RWORK3,0(RWORK3));   /* DROP HI ORD BYTE      @ZA14829*/ 02751000
         LA RWORK3,0(RWORK3)                                            02752000
*       PLHACB=RWORK3;              /* SET ACB PTR IN PLH    @ZA14829*/ 02753000
         ST    RWORK3,PLHACB(,RPLH)                                1091 02754000
*       PLHASCB=PSAAOLD;            /* SAVE ASCB ADDRESS             */ 02755000
         L     @15,PSAAOLD                                         1092 02756000
         ST    @15,PLHASCB(,RPLH)                                  1092 02757000
*       IF AMBPH^=0 THEN            /* IF AMBPH POINTER PRESENT      */ 02758000
         L     @15,AMBPH(,RAMB)                                    1093 02759000
         LTR   @15,@15                                             1093 02760000
         BZ    @RF01093                                            1093 02761000
*         RPLH=AMBPH;               /* POINT TO PLH HEADER           */ 02762000
         LR    RPLH,@15                                            1094 02763000
*       ELSE                        /* AMBUPLH PTR MUST BE PRESENT   */ 02764000
*         RPLH=AMBUPLH;             /* POINT TO PLH HEADER           */ 02765000
         B     @RC01093                                            1095 02766000
@RF01093 L     RPLH,AMBUPLH(,RAMB)                                 1095 02767000
*       RPLH->PLHDRCUR=RPLH->PLHDRCUR+1;/* ADD ONE TO CURR           */ 02768000
@RC01093 LA    @15,1                                               1096 02769000
         AH    @15,PLHDRCUR(,RPLH)                                 1096 02770000
         STH   @15,PLHDRCUR(,RPLH)                                 1096 02771000
*       IF RPLH->PLHDRCUR>RPLH->PLHDRMAX THEN/* IF NEW HIGH          */ 02772000
         CH    @15,PLHDRMAX(,RPLH)                                 1097 02773000
         BNH   @RF01097                                            1097 02774000
*         RPLH->PLHDRMAX=RPLH->PLHDRCUR;/* SAVE NEW HIGH             */ 02775000
         STH   @15,PLHDRMAX(,RPLH)                                 1098 02776000
*       RPLH=RPLPLHPT;              /* RESTORE PLH POINTER           */ 02777000
@RF01097 L     RPLH,RPLPLHPT(,RRPL)                                1099 02778000
*     END;                                                         1100 02779000
*   ELSE                            /* IF NO PLH WAS FOUND           */ 02780000
*     IF AMBLSR=OFF&AMBGSR=OFF THEN /* IF NO SHARING                 */ 02781000
         B     @RC01083                                            1101 02782000
@RF01083 TM    AMBLSR(RAMB),B'01100000'                            1101 02783000
         BNZ   @RF01101                                            1101 02784000
*       DO;                                                        1102 02785000
*         RWORK3=R14;               /* SAVE RETURN ADDRESS   @ZA04706*/ 02786000
         LR    RWORK3,R14                                          1103 02787000
*         RPARM1=RRPL;              /* SAVE POINTER TO RPL           */ 02788000
         LR    RPARM1,RRPL                                         1104 02789000
*I08:                                                              1105 02790000
*         DO;                       /* IDACALL(IDAPGETM)             */ 02791000
I08      DS    0H                                                  1106 02792000
*           CALL IDAPGETM;          /* EXIT TO IDAPGETM              */ 02793000
         L     @15,@CV01557                                        1106 02794000
         BALR  @14,@15                                             1106 02795000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02796000
         BALR @11,0                                                     02797000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02798000
         USING *,@11                                                    02799000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02800000
         L     @11,=A(@PSTART)                                          02801000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02802000
         USING @PSTART,@11                                              02803000
*         END I08;                  /* GET PARM FIELD                */ 02804000
*         IF RRPL^=0 THEN           /* IF NO ERROR                   */ 02805000
         LTR   RRPL,RRPL                                           1112 02806000
         BZ    @RF01112                                            1112 02807000
*           DO;                                                    1113 02808000
*             RESPECIFY                                            1114 02809000
*               IDABLPRM BASED(R1);                                1114 02810000
*             BLPFSTAD=ON;          /* INDICATE DSA                  */ 02811000
         OI    BLPFSTAD(R1),B'00000001'                            1115 02812000
*             RWORK1=ADDR(IDABLPRM);/* SAVE ACB ADDR                 */ 02813000
         LR    RWORK1,R1                                           1116 02814000
*             R1=ADDR(BLPOCODE);    /* PTR TO PARM LIST              */ 02815000
         LA    @15,BLPOCODE(,R1)                                   1117 02816000
         LR    R1,@15                                              1117 02817000
*             RESPECIFY                                            1118 02818000
*               R15 RESTRICTED;                                    1118 02819000
*             SVC(19);              /* ADD STRING                    */ 02820000
         SVC   19                                                  1119 02821000
*             RWORK2=R15;           /* SAVE RETURN CODE              */ 02822000
         LR    RWORK2,R15                                          1120 02823000
*             R1=RWORK1;            /* POINT TO PARM LIST            */ 02824000
         LR    R1,RWORK1                                           1121 02825000
*I09:                                                              1122 02826000
*             DO;                   /* IDACALL(IDAPFREE)             */ 02827000
I09      DS    0H                                                  1123 02828000
*               CALL IDAPFREE;      /* EXIT TO IDAPFREE              */ 02829000
         L     @15,@CV01562                                        1123 02830000
         BALR  @14,@15                                             1123 02831000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 02832000
         BALR @11,0                                                     02833000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 02834000
         USING *,@11                                                    02835000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 02836000
         L     @11,=A(@PSTART)                                          02837000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 02838000
         USING @PSTART,@11                                              02839000
*             END I09;              /* FREE PARM LIST                */ 02840000
*             R15=RWORK2;           /* RESTORE ERROR CODE            */ 02841000
         LR    R15,RWORK2                                          1129 02842000
*           END;                                                   1130 02843000
*         ELSE                      /* IF ANY ERROR                  */ 02844000
*           R15=-1;                 /* SET R15 NOT ZERO              */ 02845000
         B     @RC01112                                            1131 02846000
@RF01112 SLR   R15,R15                                             1131 02847000
         BCTR  R15,0                                               1131 02848000
*         R14=RWORK3;               /* RESTORE RETURN ADDR   @ZA04706*/ 02849000
@RC01112 LR    R14,RWORK3                                          1132 02850000
*         RRPL=RPARM1;              /* RESTORE RRPL POINTER          */ 02851000
         LR    RRPL,RPARM1                                         1133 02852000
*         IF R15=0 THEN             /* IF NO ERROR                   */ 02853000
         LTR   R15,R15                                             1134 02854000
         BZ    @RT01134                                            1134 02855000
*           GOTO FNDPLH;            /* TRY AGAIN ABOVE               */ 02856000
*         RESPECIFY                                                1136 02857000
*           R15 UNRESTRICTED;                                      1136 02858000
*       END;                                                       1137 02859000
*   RETURN;                         /* EXIT IDAXGPLH                 */ 02860000
         B     @EL00001                                            1138 02861000
*   RESPECIFY                                                      1139 02862000
*    (RWORK1,                                                      1139 02863000
*     RWORK2,                                                      1139 02864000
*     RWORK3,                                                      1139 02865000
*     RWORK4,                                                      1139 02866000
*     RWORK5,                                                      1139 02867000
*     RBUFC,                        /*                       @ZA24684*/ 02868000
*     R14) UNRESTRICTED;                                           1139 02869000
*   END IDA019RU                                                   1140 02870000
*                                                                  1140 02871000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02872000
*/*%INCLUDE SYSLIB  (LCGPLSSW)                                       */ 02873000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02874000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02875000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02876000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02877000
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */ 02878000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02879000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02880000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02881000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02882000
*/*%INCLUDE SYSLIB  (IDABIB  )                                       */ 02883000
*/*%INCLUDE SYSLIB  (IDAUPT  )                                       */ 02884000
*/*%INCLUDE SYSLIB  (IDAWSHD )                                       */ 02885000
*/*%INCLUDE SYSLIB  (IDABLPRM)                                       */ 02886000
*/*%INCLUDE SYSLIB  (IDAAIR  )                                       */ 02887000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */ 02888000
*                                                                  1140 02889000
*       ;                                                          1140 02890000
         B     @EL00001                                            1140 02891000
@DATA    DS    0H                                                       02892000
@CH01063 DC    H'32767'                                                 02893000
@SM01575 MVC   RECORD(0,@15),RECORD(RWORK2)                             02894000
@SC01577 CLC   NEWKEY(0,RWORK5),OLDKEY(@15)                             02895000
@SC01579 CLC   NEWKEY(0,@09),OLDKEY(@15)                                02896000
@SM01586 MVC   AIXKY(0,@15),OLDKEY(@03)                                 02897000
@SM01588 MVC   AIXKY(0,@15),NEWKEY(@03)                                 02898000
@SM01590 MVC   AIXPTR(0,RWORK3),AIXPTR(RWORK2)                          02899000
@SC01592 CLC   AIXPTR(0,RWORK2),AIXPTR(RWORK3)                          02900000
@SM01594 MVC   CORE(0,RWORK3),CORE(R14)                                 02901000
@DATD    DSECT                                                          02902000
         DS    0F                                                       02903000
IDA019RU CSECT                                                          02904000
         DS    0F                                                       02905000
@CF00054 DC    F'1'                                                     02906000
@CF00220 DC    F'5'                                                     02907000
@CF00229 DC    F'12'                                                    02908000
@CF00088 DC    F'16'                                                    02909000
@CF01390 DC    F'255'                                                   02910000
@DATD    DSECT                                                          02911000
         DS    0D                                                       02912000
IDA019RU CSECT                                                          02913000
         DS    0F                                                       02914000
@SIZDATD DC    AL1(0)                                                   02915000
         DC    AL3(@ENDDATD-@DATD)                                      02916000
@CV01384 DC    V(IDADRQ)                                                02917000
@CV01385 DC    V(IDAGETWS)                                              02918000
@CV01386 DC    V(IDARELWS)                                              02919000
@CV01387 DC    V(IDASBF)                                                02920000
@CV01395 DC    V(IDA019R4)                                              02921000
@CV01414 DC    V(IDA019ST)                                              02922000
@CV01452 DC    V(IDARSTRT)                                              02923000
@CV01557 DC    V(IDAPGETM)                                              02924000
@CV01562 DC    V(IDAPFREE)                                              02925000
         DS    0D                                                       02926000
HWORD4   DC    H'4'                                                     02927000
         DS    CL2                                                      02928000
BRANCH   DC    AL4(UPGGET)                                              02929000
         DC    AL4(UPGPUT)                                              02930000
         DC    3A(0)                                                    02931000
         DC    AL4(UPGERASE)                                            02932000
PASSTAB  DC    AL4(PASS1)                                               02933000
         DC    AL4(PASS2)                                               02934000
         DC    A(0)                                                     02935000
         DC    AL4(PASS4)                                               02936000
         DC    AL4(PASS5)                                               02937000
         DC    AL4(PASS6)                                               02938000
         DC    AL4(PASS7)                                               02939000
         DC    AL4(PASS8)                                               02940000
         DC    AL4(PASS9)                                               02941000
         DS    1XL4                                                     02942000
ERRTAB   DC    AL1(1)                                                   02943000
         DC    AL1(1)                                                   02944000
         DC    AL1(3)                                                   02945000
         DC    AL1(3)                                                   02946000
         DC    AL1(5)                                                   02947000
         DC    AL1(5)                                                   02948000
IDA019RU CSECT                                                          02949000
    LTORG                                                               02950000
    IDAPATCH                                                            02951000
@DATD    DSECT                                                          02952000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02953000
@ENDDATD EQU   *                                                        02954000
IDA019RU CSECT                                                          02955000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02956000
@01      EQU   01                                                       02957000
@02      EQU   02                                                       02958000
@03      EQU   03                                                       02959000
@04      EQU   04                                                       02960000
@05      EQU   05                                                       02961000
@06      EQU   06                                                       02962000
@07      EQU   07                                                       02963000
@08      EQU   08                                                       02964000
@09      EQU   09                                                       02965000
@10      EQU   10                                                       02966000
@11      EQU   11                                                       02967000
@12      EQU   12                                                       02968000
@13      EQU   13                                                       02969000
@14      EQU   14                                                       02970000
@15      EQU   15                                                       02971000
RWORK0   EQU   @00                                                      02972000
RRPL     EQU   @01                                                      02973000
R1       EQU   @01                                                      02974000
RPLH     EQU   @02                                                      02975000
RAMB     EQU   @03                                                      02976000
RBUFC    EQU   @04                                                      02977000
RWORK1   EQU   @05                                                      02978000
RWORK2   EQU   @06                                                      02979000
RWORK3   EQU   @07                                                      02980000
RWORK4   EQU   @08                                                      02981000
RWORK5   EQU   @09                                                      02982000
RPARM1   EQU   @12                                                      02983000
R13      EQU   @13                                                      02984000
R14      EQU   @14                                                      02985000
R15      EQU   @15                                                      02986000
R10      EQU   @10                                                      02987000
R11      EQU   @11                                                      02988000
PSA      EQU   0                                                        02989000
FLCRNPSW EQU   PSA                                                      02990000
FLCROPSW EQU   PSA+8                                                    02991000
FLCICCW2 EQU   PSA+16                                                   02992000
PSAEEPSW EQU   PSA+132                                                  02993000
PSAESPSW EQU   PSA+136                                                  02994000
FLCSVILC EQU   PSAESPSW+1                                               02995000
PSAEPPSW EQU   PSA+140                                                  02996000
FLCPIILC EQU   PSAEPPSW+1                                               02997000
FLCPICOD EQU   PSAEPPSW+2                                               02998000
PSAPICOD EQU   FLCPICOD+1                                               02999000
FLCTEA   EQU   PSAEPPSW+4                                               03000000
FLCPER   EQU   PSA+152                                                  03001000
FLCMCLA  EQU   PSA+168                                                  03002000
FLCIOEL  EQU   FLCMCLA+4                                                03003000
FLCIOA   EQU   FLCMCLA+16                                               03004000
FLCFSA   EQU   FLCMCLA+80                                               03005000
PSAAOLD  EQU   PSA+548                                                  03006000
PSASUPER EQU   PSA+552                                                  03007000
PSASUP1  EQU   PSASUPER                                                 03008000
PSASUP2  EQU   PSASUPER+1                                               03009000
PSASUP3  EQU   PSASUPER+2                                               03010000
PSASUP4  EQU   PSASUPER+3                                               03011000
PSACLHT  EQU   PSA+640                                                  03012000
PSALKSA  EQU   PSA+696                                                  03013000
PSAHLHI  EQU   PSA+760                                                  03014000
PSADSSFL EQU   PSA+836                                                  03015000
PSADSSF1 EQU   PSADSSFL                                                 03016000
PSADSSF3 EQU   PSADSSFL+2                                               03017000
PSADSSF4 EQU   PSADSSFL+3                                               03018000
PSARSVT  EQU   PSA+896                                                  03019000
IFGRPL   EQU   0                                                        03020000
RPLCOMN  EQU   IFGRPL                                                   03021000
RPLIDWD  EQU   RPLCOMN                                                  03022000
RPLREQ   EQU   RPLIDWD+2                                                03023000
RPLLEN   EQU   RPLIDWD+3                                                03024000
RPLPLHPT EQU   RPLCOMN+4                                                03025000
RPLECB   EQU   RPLCOMN+8                                                03026000
RPLPOST  EQU   RPLECB                                                   03027000
RPLFDBWD EQU   RPLCOMN+12                                               03028000
RPLFDBK  EQU   RPLFDBWD+1                                               03029000
RPLRTNCD EQU   RPLFDBK                                                  03030000
RPLERREG EQU   RPLRTNCD                                                 03031000
RPLCNDCD EQU   RPLFDBK+1                                                03032000
RPLCMPON EQU   RPLCNDCD                                                 03033000
RPLFDB2  EQU   RPLCMPON                                                 03034000
RPLERRCD EQU   RPLCNDCD+1                                               03035000
RPLFDB3  EQU   RPLERRCD                                                 03036000
RPLKEYLE EQU   RPLCOMN+16                                               03037000
RPLDACB  EQU   RPLCOMN+24                                               03038000
RPLAREA  EQU   RPLCOMN+32                                               03039000
RPLARG   EQU   RPLCOMN+36                                               03040000
RPLOPTCD EQU   RPLCOMN+40                                               03041000
RPLOPT1  EQU   RPLOPTCD                                                 03042000
RPLLOC   EQU   RPLOPT1                                                  03043000
RPLASY   EQU   RPLOPT1                                                  03044000
RPLECBSW EQU   RPLOPT1                                                  03045000
RPLOPT2  EQU   RPLOPTCD+1                                               03046000
RPLADR   EQU   RPLOPT2                                                  03047000
RPLUPD   EQU   RPLOPT2                                                  03048000
RPLOPT3  EQU   RPLOPTCD+2                                               03049000
RPLNXTRP EQU   RPLCOMN+44                                               03050000
RPLRLEN  EQU   RPLCOMN+48                                               03051000
RPLBUFL  EQU   RPLCOMN+52                                               03052000
RPLOPTC2 EQU   RPLCOMN+56                                               03053000
RPLOPT5  EQU   RPLOPTC2                                                 03054000
RPLWRTYP EQU   RPLOPT5                                                  03055000
RPLOPT6  EQU   RPLOPTC2+1                                               03056000
RPLUNTYP EQU   RPLOPT6                                                  03057000
RPLOPT7  EQU   RPLOPTC2+2                                               03058000
RPLCNOPT EQU   RPLOPT7                                                  03059000
RPLOPT8  EQU   RPLOPTC2+3                                               03060000
RPLRBAR  EQU   RPLCOMN+60                                               03061000
RPLAIXID EQU   RPLRBAR+2                                                03062000
RPLDDDD  EQU   RPLRBAR+4                                                03063000
RPLEXTDS EQU   RPLCOMN+68                                               03064000
RPLEXTD1 EQU   RPLEXTDS                                                 03065000
IFGACB   EQU   0                                                        03066000
ACBCOMN  EQU   IFGACB                                                   03067000
ACBLENG  EQU   ACBCOMN+2                                                03068000
ACBLENG2 EQU   ACBLENG                                                  03069000
ACBAMBL  EQU   ACBCOMN+4                                                03070000
ACBJWA   EQU   ACBAMBL                                                  03071000
ACBMACRF EQU   ACBCOMN+12                                               03072000
ACBMACR1 EQU   ACBMACRF                                                 03073000
ACBADR   EQU   ACBMACR1                                                 03074000
ACBCNV   EQU   ACBMACR1                                                 03075000
ACBMACR2 EQU   ACBMACRF+1                                               03076000
ACBBUFPL EQU   ACBCOMN+20                                               03077000
ACBMACR3 EQU   ACBBUFPL                                                 03078000
ACBRECFM EQU   ACBCOMN+24                                               03079000
ACBCCTYP EQU   ACBCOMN+25                                               03080000
ACBOPT   EQU   ACBCOMN+26                                               03081000
ACBDSORG EQU   ACBOPT                                                   03082000
ACBCROPS EQU   ACBDSORG                                                 03083000
ACBEXLST EQU   ACBCOMN+36                                               03084000
ACBDDNM  EQU   ACBCOMN+40                                               03085000
ACBAMETH EQU   ACBDDNM+3                                                03086000
ACBOFLGS EQU   ACBCOMN+48                                               03087000
ACBEXFG  EQU   ACBOFLGS                                                 03088000
ACBIOSFG EQU   ACBOFLGS                                                 03089000
ACBINFLG EQU   ACBCOMN+50                                               03090000
ACBUJFCB EQU   ACBCOMN+52                                               03091000
ACBBLKSZ EQU   ACBCOMN+60                                               03092000
IFGEXLST EQU   0                                                        03093000
EXLCOMN  EQU   IFGEXLST                                                 03094000
EXLLEN   EQU   EXLCOMN+2                                                03095000
EXLEODF  EQU   EXLCOMN+5                                                03096000
EXLSYNF  EQU   EXLCOMN+10                                               03097000
EXLLERF  EQU   EXLCOMN+15                                               03098000
EXLSCIPF EQU   EXLCOMN+20                                               03099000
EXLUPADF EQU   EXLSCIPF                                                 03100000
EXLSCIPS EQU   EXLUPADF                                                 03101000
EXLSCIPA EQU   EXLUPADF                                                 03102000
EXLSCIPK EQU   EXLUPADF                                                 03103000
EXLSCIPP EQU   EXLCOMN+21                                               03104000
EXLLGNF  EQU   EXLCOMN+25                                               03105000
EXLJRNF  EQU   EXLCOMN+30                                               03106000
EXLOPNF  EQU   EXLCOMN+35                                               03107000
IFGEXLEF EQU   0                                                        03108000
EXLENTRY EQU   IFGEXLEF                                                 03109000
EXLFLAG  EQU   EXLENTRY                                                 03110000
EXLENFL  EQU   EXLFLAG                                                  03111000
EXLEXITP EQU   EXLENTRY+1                                               03112000
IDAAMBL  EQU   0                                                        03113000
AMBLEOV  EQU   IDAAMBL+12                                               03114000
AMBLEFLG EQU   AMBLEOV                                                  03115000
AMBLDDNM EQU   IDAAMBL+16                                               03116000
AMBLIDF  EQU   AMBLDDNM                                                 03117000
AMBLQ    EQU   AMBLIDF+7                                                03118000
AMBLVC   EQU   IDAAMBL+28                                               03119000
AMBLTYPE EQU   IDAAMBL+30                                               03120000
AMBLSHAR EQU   IDAAMBL+33                                               03121000
AMBLFLG1 EQU   IDAAMBL+35                                               03122000
AMBLFLG2 EQU   IDAAMBL+36                                               03123000
AMBLDTA  EQU   IDAAMBL+52                                               03124000
AMBLBIB  EQU   IDAAMBL+60                                               03125000
IDAAMB   EQU   0                                                        03126000
AMBPH    EQU   IDAAMB+12                                                03127000
AMBDSB   EQU   IDAAMB+20                                                03128000
AMBEOVR  EQU   IDAAMB+24                                                03129000
AMBFLG0  EQU   AMBEOVR                                                  03130000
AMBFLG1  EQU   IDAAMB+25                                                03131000
AMBDSORG EQU   IDAAMB+26                                                03132000
AMBIOBAD EQU   IDAAMB+28                                                03133000
AMBINFL  EQU   IDAAMB+42                                                03134000
AMBDEBPT EQU   IDAAMB+44                                                03135000
AMBOFLGS EQU   IDAAMB+48                                                03136000
AMBFLG2  EQU   IDAAMB+49                                                03137000
AMBEOVPT EQU   IDAAMB+56                                                03138000
AMBPAMBL EQU   IDAAMB+76                                                03139000
AMBUPLH  EQU   IDAAMB+80                                                03140000
AMBCSWD1 EQU   IDAAMB+84                                                03141000
AMBAFLG  EQU   AMBCSWD1                                                 03142000
AMBLSR   EQU   AMBAFLG                                                  03143000
AMBGSR   EQU   AMBAFLG                                                  03144000
AMBTRACE EQU   IDAAMB+120                                               03145000
IDAAMDSB EQU   0                                                        03146000
AMDATTR  EQU   IDAAMDSB+1                                               03147000
AMDDST   EQU   AMDATTR                                                  03148000
AMDNEST  EQU   IDAAMDSB+4                                               03149000
AMDRKP   EQU   IDAAMDSB+6                                               03150000
AMDKEYLN EQU   IDAAMDSB+8                                               03151000
AMDHLRBA EQU   IDAAMDSB+28                                              03152000
AMDSSRBA EQU   IDAAMDSB+32                                              03153000
AMDATTR3 EQU   IDAAMDSB+40                                              03154000
AMDSTAT  EQU   IDAAMDSB+48                                              03155000
IDAPLHDR EQU   0                                                        03156000
PLHDRMAX EQU   IDAPLHDR+8                                               03157000
PLHDRCUR EQU   IDAPLHDR+10                                              03158000
IDAPLH   EQU   0                                                        03159000
PLHAVL   EQU   IDAPLH                                                   03160000
PLHFLG1  EQU   IDAPLH+2                                                 03161000
PLHFLG2  EQU   IDAPLH+3                                                 03162000
PLHEFLGS EQU   IDAPLH+4                                                 03163000
PLHSRINV EQU   PLHEFLGS                                                 03164000
PLHINVAL EQU   PLHEFLGS                                                 03165000
PLHFLG3  EQU   IDAPLH+6                                                 03166000
PLHAFLGS EQU   IDAPLH+7                                                 03167000
PLHACB   EQU   IDAPLH+8                                                 03168000
PLHMRPL  EQU   IDAPLH+16                                                03169000
PLHCRPL  EQU   IDAPLH+20                                                03170000
PLHCRBA  EQU   IDAPLH+28                                                03171000
PLHJORBA EQU   PLHCRBA                                                  03172000
PLHJCODE EQU   IDAPLH+40                                                03173000
PLHRSCS  EQU   IDAPLH+43                                                03174000
PLHARDB  EQU   IDAPLH+44                                                03175000
PLHDIOB  EQU   IDAPLH+76                                                03176000
PLHAMB   EQU   IDAPLH+108                                               03177000
PLHCHAIN EQU   IDAPLH+112                                               03178000
PLHRETO  EQU   IDAPLH+116                                               03179000
PLHRETOS EQU   IDAPLH+118                                               03180000
PLHRET1  EQU   IDAPLH+120                                               03181000
PLHEOVPT EQU   IDAPLH+180                                               03182000
PLHIXSPL EQU   IDAPLH+200                                               03183000
PLHSSRBA EQU   PLHIXSPL                                                 03184000
PLHWAX   EQU   IDAPLH+232                                               03185000
PLHLLOR  EQU   IDAPLH+236                                               03186000
PLHKEYPT EQU   IDAPLH+248                                               03187000
PLHDRRSC EQU   IDAPLH+252                                               03188000
PLHDRMSK EQU   IDAPLH+264                                               03189000
PLHTMRPL EQU   IDAPLH+265                                               03190000
PLHASCB  EQU   IDAPLH+272                                               03191000
PLHEND   EQU   IDAPLH+280                                               03192000
IDABIB   EQU   0                                                        03193000
BIBHDR   EQU   IDABIB                                                   03194000
BIBFLG1  EQU   BIBHDR+1                                                 03195000
BIBUPT   EQU   IDABIB+8                                                 03196000
BIBRTNS  EQU   IDABIB+60                                                03197000
IDAUPT   EQU   0                                                        03198000
UPTHDR   EQU   IDAUPT                                                   03199000
UPTFLG0  EQU   UPTHDR+1                                                 03200000
UPTPWS   EQU   UPTFLG0                                                  03201000
UPTNEW   EQU   IDAUPT+4                                                 03202000
UPTOLD   EQU   IDAUPT+8                                                 03203000
UPTRSC   EQU   IDAUPT+12                                                03204000
UPTNOENT EQU   IDAUPT+13                                                03205000
UPTLLEN  EQU   IDAUPT+14                                                03206000
UPTSA    EQU   IDAUPT+16                                                03207000
UPTBRPL  EQU   UPTSA                                                    03208000
UPTLSA   EQU   UPTSA+4                                                  03209000
UPTBEREG EQU   UPTSA+8                                                  03210000
UPTBERCD EQU   UPTSA+9                                                  03211000
UPTSARES EQU   UPTSA+11                                                 03212000
UPTR14   EQU   UPTSA+12                                                 03213000
UPTR15   EQU   UPTSA+16                                                 03214000
UPTAXENT EQU   IDAUPT+88                                                03215000
UPTRPL   EQU   UPTAXENT                                                 03216000
UPTF1LOP EQU   UPTRPL                                                   03217000
UPTFLG1  EQU   UPTAXENT+4                                               03218000
UPTF1LST EQU   UPTFLG1                                                  03219000
UPTF1ATV EQU   UPTFLG1                                                  03220000
UPTF1NUK EQU   UPTFLG1                                                  03221000
UPTF1NOP EQU   UPTFLG1                                                  03222000
UPTF1NRF EQU   UPTFLG1                                                  03223000
UPTF1KEY EQU   UPTFLG1                                                  03224000
UPTF1RTY EQU   UPTFLG1                                                  03225000
UPTF1UPG EQU   UPTFLG1                                                  03226000
UPTF1BKO EQU   UPTFLG1+1                                                03227000
UPTF1LOG EQU   UPTFLG1+1                                                03228000
UPTF1PHY EQU   UPTFLG1+1                                                03229000
UPTF1ERA EQU   UPTFLG1+1                                                03230000
UPTF1PNU EQU   UPTFLG1+1                                                03231000
UPTF1PUD EQU   UPTFLG1+1                                                03232000
UPTRKP   EQU   UPTAXENT+6                                               03233000
UPTPASS  EQU   UPTAXENT+8                                               03234000
UPTLNCDE EQU   UPTAXENT+9                                               03235000
UPTBG    EQU   UPTAXENT+10                                              03236000
IDAWSHD  EQU   0                                                        03237000
WSHDACHN EQU   IDAWSHD+4                                                03238000
WSHDSLT  EQU   IDAWSHD+28                                               03239000
WSHDSAD  EQU   WSHDSLT                                                  03240000
@NM00057 EQU   WSHDSAD                                                  03241000
WSHDSGMW EQU   WSHDSLT+4                                                03242000
WSHDSFM  EQU   WSHDSGMW                                                 03243000
WSHDSFLG EQU   WSHDSGMW+10                                              03244000
IDABLPRM EQU   0                                                        03245000
BLPBUFLP EQU   IDABLPRM+4                                               03246000
BLPUACB  EQU   BLPBUFLP                                                 03247000
BLPFLAGS EQU   IDABLPRM+10                                              03248000
BLPFLAG1 EQU   BLPFLAGS                                                 03249000
BLPFSTAD EQU   BLPFLAG1                                                 03250000
BLPFLAG2 EQU   BLPFLAGS+1                                               03251000
BLPOCODE EQU   IDABLPRM+12                                              03252000
BLPCORE  EQU   IDABLPRM+16                                              03253000
BLPGFLG  EQU   BLPCORE                                                  03254000
BLPIOACB EQU   IDABLPRM+24                                              03255000
BLPBUFL  EQU   0                                                        03256000
BLPBRLFG EQU   BLPBUFL+4                                                03257000
IDAAIX   EQU   0                                                        03258000
AIXFG    EQU   IDAAIX                                                   03259000
AIXPKP   EQU   AIXFG                                                    03260000
AIXPL    EQU   IDAAIX+1                                                 03261000
AIXPC    EQU   IDAAIX+2                                                 03262000
AIXKL    EQU   IDAAIX+4                                                 03263000
AIXKY    EQU   IDAAIX+5                                                 03264000
SSA      EQU   0                                                        03265000
SSAR14   EQU   SSA+12                                                   03266000
RCDADDR  EQU   0                                                        03267000
AIXPTR   EQU   0                                                        03268000
UPGROUT  EQU   0                                                        03269000
PASS     EQU   0                                                        03270000
RECORD   EQU   0                                                        03271000
NEWKEY   EQU   0                                                        03272000
OLDKEY   EQU   0                                                        03273000
BR15ROUT EQU   0                                                        03274000
CORE     EQU   0                                                        03275000
ALTKEY   EQU   0                                                        03276000
PLHKEY   EQU   0                                                        03277000
PLHPDL   EQU   0                                                        03278000
PLHPDLE  EQU   0                                                        03279000
PLHRRN   EQU   0                                                        03280000
PLHEXTEN EQU   PLHEND                                                   03281000
PLHBMWRK EQU   PLHEXTEN+5                                               03282000
PSARSVTE EQU   PSARSVT                                                  03283000
FLC      EQU   PSA                                                      03284000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03285000
PSARSAV  EQU   PSARSVTE+60                                              03286000
PSARSTK  EQU   PSARSVTE+56                                              03287000
PSAESAV3 EQU   PSARSVTE+52                                              03288000
PSAESTK3 EQU   PSARSVTE+48                                              03289000
PSAESAV2 EQU   PSARSVTE+44                                              03290000
PSAESTK2 EQU   PSARSVTE+40                                              03291000
PSAESAV1 EQU   PSARSVTE+36                                              03292000
PSAESTK1 EQU   PSARSVTE+32                                              03293000
PSAPSAV  EQU   PSARSVTE+28                                              03294000
PSAPSTK  EQU   PSARSVTE+24                                              03295000
PSAMSAV  EQU   PSARSVTE+20                                              03296000
PSAMSTK  EQU   PSARSVTE+16                                              03297000
PSASSAV  EQU   PSARSVTE+12                                              03298000
PSASSTK  EQU   PSARSVTE+8                                               03299000
PSANSTK  EQU   PSARSVTE+4                                               03300000
PSACSTK  EQU   PSARSVTE                                                 03301000
PLHBMSV5 EQU   PLHEXTEN+24                                              03302000
PLHBMSV4 EQU   PLHEXTEN+20                                              03303000
PLHBMSV3 EQU   PLHEXTEN+16                                              03304000
PLHBMSV2 EQU   PLHEXTEN+12                                              03305000
PLHBMSV1 EQU   PLHEXTEN+8                                               03306000
PLHRDCNT EQU   PLHEXTEN+6                                               03307000
PLHBMSOV EQU   PLHBMWRK                                                 03308000
PLHBEUC  EQU   PLHBMWRK                                                 03309000
PLHBMRDF EQU   PLHBMWRK                                                 03310000
@NM00053 EQU   PLHEXTEN+4                                               03311000
PLHRESR1 EQU   PLHEXTEN                                                 03312000
SSANEXT  EQU   SSA+8                                                    03313000
SSALAST  EQU   SSA+4                                                    03314000
@NM00090 EQU   SSA                                                      03315000
@NM00065 EQU   AIXFG                                                    03316000
BLPBFLCT EQU   BLPBUFL+6                                                03317000
@NM00064 EQU   BLPBUFL+5                                                03318000
@NM00063 EQU   BLPBRLFG                                                 03319000
BLPBFLST EQU   BLPBRLFG                                                 03320000
BLPBUFSZ EQU   BLPBUFL                                                  03321000
BLPERFLG EQU   IDABLPRM+51                                              03322000
@NM00062 EQU   IDABLPRM+49                                              03323000
BLPOFLGS EQU   IDABLPRM+48                                              03324000
@NM00061 EQU   IDABLPRM+28                                              03325000
BLPDSORG EQU   BLPIOACB+3                                               03326000
@NM00060 EQU   BLPIOACB                                                 03327000
BLPGAD   EQU   BLPCORE+5                                                03328000
BLPGSP   EQU   BLPCORE+4                                                03329000
BLPGSZ   EQU   BLPCORE+1                                                03330000
BLPGPG   EQU   BLPGFLG                                                  03331000
BLPGREQ  EQU   BLPGFLG                                                  03332000
BLPOACB  EQU   IDABLPRM+13                                              03333000
BLPFRSTR EQU   BLPFLAG2                                                 03334000
BLPFIOSR EQU   BLPFLAG2                                                 03335000
BLPFINDX EQU   BLPFLAG2                                                 03336000
BLPFDATA EQU   BLPFLAG2                                                 03337000
BLPFPRIM EQU   BLPFLAG2                                                 03338000
BLPFPATH EQU   BLPFLAG2                                                 03339000
BLPFUPGR EQU   BLPFLAG2                                                 03340000
BLPFPART EQU   BLPFLAG2                                                 03341000
BLPFBFRF EQU   BLPFLAG1                                                 03342000
BLPFIOBF EQU   BLPFLAG1                                                 03343000
BLPFGSR  EQU   BLPFLAG1                                                 03344000
BLPFLSR  EQU   BLPFLAG1                                                 03345000
BLPFDEL  EQU   BLPFLAG1                                                 03346000
BLPFBLD  EQU   BLPFLAG1                                                 03347000
BLPFDBDC EQU   BLPFLAG1                                                 03348000
BLPSTRNO EQU   IDABLPRM+9                                               03349000
BLPKEYLN EQU   IDABLPRM+8                                               03350000
BLPIOPLH EQU   BLPUACB                                                  03351000
@NM00059 EQU   IDABLPRM+2                                               03352000
BLPACBST EQU   IDABLPRM+1                                               03353000
BLPACBID EQU   IDABLPRM                                                 03354000
WSHDSBM  EQU   WSHDSGMW+11                                              03355000
WSHDSFNO EQU   WSHDSFLG                                                 03356000
WSHDSBV  EQU   WSHDSGMW+8                                               03357000
WSHDSONX EQU   WSHDSGMW+4                                               03358000
WSHDSFLN EQU   WSHDSFM+1                                                03359000
WSHDSFSP EQU   WSHDSFM                                                  03360000
WSHDKEY7 EQU   @NM00057                                                 03361000
@NM00058 EQU   @NM00057                                                 03362000
WSHDOCHN EQU   IDAWSHD+24                                               03363000
WSHDGMRA EQU   IDAWSHD+20                                               03364000
WSHDNUS  EQU   IDAWSHD+18                                               03365000
WSHDGMWA EQU   IDAWSHD+8                                                03366000
WSHDNEXT EQU   WSHDACHN+1                                               03367000
WSHDGMTB EQU   WSHDACHN                                                 03368000
WSHDLEN  EQU   IDAWSHD+2                                                03369000
WSHDPOOL EQU   IDAWSHD+1                                                03370000
WSHDID   EQU   IDAWSHD                                                  03371000
@NM00056 EQU   UPTSA+10                                                 03372000
UPTLEN   EQU   UPTHDR+2                                                 03373000
UPTID    EQU   UPTHDR                                                   03374000
BIBVSRTP EQU   IDABIB+104                                               03375000
BIBASCB  EQU   IDABIB+100                                               03376000
BIBDDNM  EQU   IDABIB+92                                                03377000
BIBSTPNM EQU   IDABIB+84                                                03378000
BIBJOBNM EQU   IDABIB+76                                                03379000
BIBSIOAP EQU   BIBRTNS+12                                               03380000
BIBASYRT EQU   BIBRTNS+8                                                03381000
BIBCEAPP EQU   BIBRTNS+4                                                03382000
BIBINTRF EQU   BIBRTNS                                                  03383000
BIBVGTT  EQU   IDABIB+56                                                03384000
BIBPSAB  EQU   IDABIB+52                                                03385000
BIBCSL   EQU   IDABIB+48                                                03386000
BIBWSHD  EQU   IDABIB+44                                                03387000
BIBVCRT  EQU   IDABIB+40                                                03388000
BIBHEBFQ EQU   IDABIB+36                                                03389000
BIBHEBPT EQU   IDABIB+32                                                03390000
BIBPRSPH EQU   IDABIB+28                                                03391000
BIBSPHPT EQU   IDABIB+24                                                03392000
BIBPAMBL EQU   IDABIB+20                                                03393000
BIBDACB  EQU   IDABIB+16                                                03394000
BIBVMT   EQU   IDABIB+12                                                03395000
@NM00055 EQU   IDABIB+5                                                 03396000
BIBFLG2  EQU   IDABIB+4                                                 03397000
BIBLEN   EQU   BIBHDR+2                                                 03398000
@NM00054 EQU   BIBFLG1                                                  03399000
BIBCKPT  EQU   BIBFLG1                                                  03400000
BIBREST  EQU   BIBFLG1                                                  03401000
BIBVIRT  EQU   BIBFLG1                                                  03402000
BIBID    EQU   BIBHDR                                                   03403000
PLHERRET EQU   IDAPLH+276                                               03404000
PLHECB   EQU   IDAPLH+268                                               03405000
@NM00052 EQU   IDAPLH+266                                               03406000
@NM00051 EQU   PLHTMRPL                                                 03407000
PLHTMIOB EQU   PLHTMRPL                                                 03408000
PLHTMINX EQU   PLHTMRPL                                                 03409000
PLHTMDTA EQU   PLHTMRPL                                                 03410000
PLHTMDIW EQU   PLHTMRPL                                                 03411000
PLHTMBUF EQU   PLHTMRPL                                                 03412000
PLHTERM  EQU   PLHTMRPL                                                 03413000
PLHR13   EQU   IDAPLH+260                                               03414000
PLHPARM1 EQU   IDAPLH+256                                               03415000
PLHSLRBA EQU   IDAPLH+244                                               03416000
PLHSRCSG EQU   IDAPLH+242                                               03417000
PLHNOSEG EQU   IDAPLH+240                                               03418000
PLHXPLH  EQU   PLHWAX                                                   03419000
@NM00050 EQU   PLHIXSPL+8                                               03420000
PLHIXBFC EQU   PLHIXSPL+4                                               03421000
PLHHIREC EQU   PLHSSRBA                                                 03422000
PLHISPLP EQU   IDAPLH+196                                               03423000
PLHRBUFC EQU   IDAPLH+192                                               03424000
PLHIBUFC EQU   IDAPLH+188                                               03425000
PLHNRBA  EQU   IDAPLH+184                                               03426000
PLHDDDD  EQU   PLHEOVPT                                                 03427000
PLHAR14  EQU   IDAPLH+176                                               03428000
@NM00049 EQU   IDAPLH+172                                               03429000
@NM00048 EQU   IDAPLH+168                                               03430000
PLHASAVE EQU   IDAPLH+164                                               03431000
PLHSAVE6 EQU   IDAPLH+104                                               03432000
PLHSAVE5 EQU   IDAPLH+100                                               03433000
PLHSAVE4 EQU   IDAPLH+96                                                03434000
PLHSAVE3 EQU   IDAPLH+92                                                03435000
PLHSAVE2 EQU   IDAPLH+88                                                03436000
PLHSAVE1 EQU   IDAPLH+84                                                03437000
PLHARET  EQU   IDAPLH+80                                                03438000
PLHIIOB  EQU   PLHDIOB                                                  03439000
PLHSRSID EQU   IDAPLH+74                                                03440000
PLHRDFC  EQU   IDAPLH+72                                                03441000
PLHRDFP  EQU   IDAPLH+68                                                03442000
PLHFSP   EQU   IDAPLH+64                                                03443000
PLHRECP  EQU   IDAPLH+60                                                03444000
PLHNBUFC EQU   IDAPLH+56                                                03445000
PLHDBUFC EQU   IDAPLH+52                                                03446000
PLHLRECL EQU   IDAPLH+48                                                03447000
@NM00047 EQU   PLHRSCS                                                  03448000
PLHDBPER EQU   PLHRSCS                                                  03449000
PLHDSERR EQU   PLHRSCS                                                  03450000
PLHASYER EQU   PLHRSCS                                                  03451000
@NM00046 EQU   PLHRSCS                                                  03452000
PLHBUFHD EQU   PLHRSCS                                                  03453000
PLHINEOV EQU   PLHRSCS                                                  03454000
PLHEOVR  EQU   IDAPLH+42                                                03455000
PLHRCODE EQU   IDAPLH+41                                                03456000
PLHUCODE EQU   PLHJCODE                                                 03457000
PLHJNRBA EQU   IDAPLH+36                                                03458000
PLHJRNLL EQU   IDAPLH+32                                                03459000
PLHUPECB EQU   PLHJORBA                                                 03460000
PLHDSIDA EQU   IDAPLH+24                                                03461000
PLHBFRNO EQU   IDAPLH+15                                                03462000
PLHFRCNT EQU   IDAPLH+14                                                03463000
PLHRMIN  EQU   IDAPLH+13                                                03464000
PLHDSTYP EQU   IDAPLH+12                                                03465000
PLHRAE   EQU   PLHAFLGS                                                 03466000
PLHRABWD EQU   PLHAFLGS                                                 03467000
PLHIOSID EQU   PLHAFLGS                                                 03468000
PLHDBDC  EQU   PLHAFLGS                                                 03469000
PLHVAMB  EQU   PLHAFLGS                                                 03470000
PLHIOSRQ EQU   PLHAFLGS                                                 03471000
PLHDRLM  EQU   PLHAFLGS                                                 03472000
PLHEOVDF EQU   PLHFLG3                                                  03473000
PLHRVRS  EQU   PLHFLG3                                                  03474000
PLHBWD   EQU   PLHFLG3                                                  03475000
PLHSLVLD EQU   PLHFLG3                                                  03476000
PLHRAHD  EQU   PLHFLG3                                                  03477000
PLHSRBSG EQU   PLHFLG3                                                  03478000
@NM00045 EQU   PLHEFLGS+1                                               03479000
PLHRSTRT EQU   PLHEFLGS+1                                               03480000
PLHDSCAN EQU   PLHEFLGS                                                 03481000
PLHEODX  EQU   PLHEFLGS                                                 03482000
PLHNOADV EQU   PLHEFLGS                                                 03483000
PLHSKPER EQU   PLHEFLGS                                                 03484000
PLH1ST   EQU   PLHEFLGS                                                 03485000
PLHNOSPC EQU   PLHEFLGS                                                 03486000
PLHIWAIT EQU   PLHFLG2                                                  03487000
PLHSVADV EQU   PLHFLG2                                                  03488000
PLHCIINS EQU   PLHFLG2                                                  03489000
PLHKRE   EQU   PLHFLG2                                                  03490000
PLHADDTE EQU   PLHFLG2                                                  03491000
PLHKEYMD EQU   PLHFLG2                                                  03492000
PLHSQINS EQU   PLHFLG2                                                  03493000
PLHUPD   EQU   PLHFLG2                                                  03494000
@NM00044 EQU   PLHFLG1                                                  03495000
PLHDRPND EQU   PLHFLG1                                                  03496000
PLHASYRQ EQU   PLHFLG1                                                  03497000
PLHRDEXC EQU   PLHFLG1                                                  03498000
PLHSSR   EQU   PLHFLG1                                                  03499000
PLHASKBF EQU   PLHFLG1                                                  03500000
PLHENDRQ EQU   PLHFLG1                                                  03501000
PLHEOVW  EQU   PLHFLG1                                                  03502000
PLHATV   EQU   IDAPLH+1                                                 03503000
PLHIOSDQ EQU   IDAPLHDR+12                                              03504000
PLHDRREQ EQU   IDAPLHDR+4                                               03505000
PLHELTH  EQU   IDAPLHDR+2                                               03506000
PLHCNT   EQU   IDAPLHDR+1                                               03507000
PLHID    EQU   IDAPLHDR                                                 03508000
AMDEXCP  EQU   AMDSTAT+44                                               03509000
AMDNCAS  EQU   AMDSTAT+40                                               03510000
AMDNCIS  EQU   AMDSTAT+36                                               03511000
AMDASPA  EQU   AMDSTAT+32                                               03512000
AMDRETR  EQU   AMDSTAT+28                                               03513000
AMDUPR   EQU   AMDSTAT+24                                               03514000
AMDIREC  EQU   AMDSTAT+20                                               03515000
AMDDELR  EQU   AMDSTAT+16                                               03516000
AMDNLR   EQU   AMDSTAT+12                                               03517000
AMDNEXT  EQU   AMDSTAT+10                                               03518000
AMDNIL   EQU   AMDSTAT+8                                                03519000
AMDSTSP  EQU   AMDSTAT                                                  03520000
@NM00043 EQU   IDAAMDSB+41                                              03521000
@NM00042 EQU   AMDATTR3                                                 03522000
AMDLM    EQU   AMDATTR3                                                 03523000
AMDWAIT  EQU   AMDATTR3                                                 03524000
AMDBIND  EQU   AMDATTR3                                                 03525000
AMDFAULT EQU   AMDATTR3                                                 03526000
AMDUNQ   EQU   AMDATTR3                                                 03527000
AMDPARDB EQU   IDAAMDSB+36                                              03528000
AMDMAXRR EQU   AMDSSRBA                                                 03529000
AMDNSLOT EQU   AMDHLRBA                                                 03530000
AMDLRECL EQU   IDAAMDSB+24                                              03531000
AMDCINV  EQU   IDAAMDSB+20                                              03532000
AMDFSCI  EQU   IDAAMDSB+16                                              03533000
AMDFSCA  EQU   IDAAMDSB+14                                              03534000
AMDCIPCA EQU   IDAAMDSB+12                                              03535000
AMDPCTCI EQU   IDAAMDSB+11                                              03536000
AMDPCTCA EQU   IDAAMDSB+10                                              03537000
AMDAXRKP EQU   AMDNEST                                                  03538000
AMDLEN   EQU   IDAAMDSB+2                                               03539000
AMDSPAN  EQU   AMDATTR                                                  03540000
AMDRRDS  EQU   AMDATTR                                                  03541000
AMDRANGE EQU   AMDATTR                                                  03542000
AMDORDER EQU   AMDATTR                                                  03543000
AMDREPL  EQU   AMDATTR                                                  03544000
AMDSDT   EQU   AMDATTR                                                  03545000
AMDWCK   EQU   AMDATTR                                                  03546000
AMDSBID  EQU   IDAAMDSB                                                 03547000
AMBVIOT  EQU   IDAAMB+116                                               03548000
AMBSZCP  EQU   IDAAMB+114                                               03549000
AMBSZFW  EQU   IDAAMB+112                                               03550000
AMBSZWR  EQU   IDAAMB+110                                               03551000
AMBSZRD  EQU   IDAAMB+108                                               03552000
AMBEXEX  EQU   IDAAMB+100                                               03553000
AMBWSHD  EQU   IDAAMB+96                                                03554000
AMBCPA   EQU   IDAAMB+92                                                03555000
AMBBM2SH EQU   IDAAMB+88                                                03556000
AMBRDCNT EQU   AMBCSWD1+2                                               03557000
@NM00041 EQU   AMBCSWD1+1                                               03558000
@NM00040 EQU   AMBAFLG                                                  03559000
AMBCFX   EQU   AMBAFLG                                                  03560000
AMBSIS   EQU   AMBAFLG                                                  03561000
AMBDFR   EQU   AMBAFLG                                                  03562000
AMBICI   EQU   AMBAFLG                                                  03563000
@NM00039 EQU   AMBAFLG                                                  03564000
AMBPIXP  EQU   IDAAMB+72                                                03565000
@NM00038 EQU   IDAAMB+68                                                03566000
AMBIWA   EQU   IDAAMB+64                                                03567000
AMBWKA   EQU   IDAAMB+60                                                03568000
AMBAMBXN EQU   AMBEOVPT                                                 03569000
AMBEDB   EQU   IDAAMB+52                                                03570000
AMBRPT   EQU   IDAAMB+50                                                03571000
AMBPUG   EQU   AMBFLG2                                                  03572000
AMBBUSY  EQU   AMBOFLGS                                                 03573000
AMBEXFG  EQU   AMBOFLGS                                                 03574000
@NM00037 EQU   AMBOFLGS                                                 03575000
AMBOPEN  EQU   AMBOFLGS                                                 03576000
@NM00036 EQU   AMBOFLGS                                                 03577000
AMBDEBAD EQU   AMBDEBPT+1                                               03578000
AMBIFLGS EQU   AMBDEBPT                                                 03579000
AMBAMETH EQU   IDAAMB+43                                                03580000
AMBUPX   EQU   AMBINFL                                                  03581000
AMBUCRA  EQU   AMBINFL                                                  03582000
AMBSCRA  EQU   AMBINFL                                                  03583000
AMBCAT   EQU   AMBINFL                                                  03584000
@NM00035 EQU   AMBINFL                                                  03585000
@NM00034 EQU   AMBINFL                                                  03586000
AMBTIOT  EQU   IDAAMB+40                                                03587000
@NM00033 EQU   IDAAMB+38                                                03588000
AMBDDSN  EQU   IDAAMB+35                                                03589000
AMBCDSN  EQU   IDAAMB+32                                                03590000
AMBIOMB  EQU   AMBIOBAD                                                 03591000
@NM00032 EQU   AMBDSORG+1                                               03592000
AMBDORGA EQU   AMBDSORG+1                                               03593000
@NM00031 EQU   AMBDSORG                                                 03594000
AMBINBUF EQU   AMBFLG1                                                  03595000
AMBJRN   EQU   AMBFLG1                                                  03596000
AMBUBF   EQU   AMBFLG1                                                  03597000
AMBSPEED EQU   AMBFLG1                                                  03598000
AMBPCAT  EQU   AMBFLG1                                                  03599000
AMBMCAT  EQU   AMBFLG1                                                  03600000
AMBTYPE  EQU   AMBFLG1                                                  03601000
AMBCREAT EQU   AMBFLG1                                                  03602000
@NM00030 EQU   AMBFLG0                                                  03603000
AMBPSDS  EQU   AMBFLG0                                                  03604000
AMBCACB  EQU   IDAAMB+16                                                03605000
AMBBUFC  EQU   IDAAMB+8                                                 03606000
AMBLINK  EQU   IDAAMB+4                                                 03607000
AMBLEN   EQU   IDAAMB+2                                                 03608000
AMBRSC   EQU   IDAAMB+1                                                 03609000
AMBID    EQU   IDAAMB                                                   03610000
AMBLCMB  EQU   IDAAMBL+64                                               03611000
AMBLIX   EQU   IDAAMBL+56                                               03612000
AMBLMIDS EQU   IDAAMBL+42                                               03613000
AMBLNIDS EQU   IDAAMBL+41                                               03614000
@NM00029 EQU   IDAAMBL+40                                               03615000
AMBLNUM  EQU   IDAAMBL+38                                               03616000
AMBLNST  EQU   IDAAMBL+37                                               03617000
@NM00028 EQU   AMBLFLG2                                                 03618000
AMBLSTAG EQU   AMBLFLG2                                                 03619000
@NM00027 EQU   AMBLFLG2                                                 03620000
AMBLDUMY EQU   AMBLFLG1                                                 03621000
AMBLCAT  EQU   AMBLFLG1                                                 03622000
AMBLUCRA EQU   AMBLFLG1                                                 03623000
AMBLSCRA EQU   AMBLFLG1                                                 03624000
AMBLVVIC EQU   AMBLFLG1                                                 03625000
AMBLUPD  EQU   AMBLFLG1                                                 03626000
AMBLCINV EQU   AMBLFLG1                                                 03627000
AMBLFULL EQU   AMBLFLG1                                                 03628000
AMBLLEN  EQU   IDAAMBL+34                                               03629000
@NM00026 EQU   AMBLSHAR                                                 03630000
AMBLWRIT EQU   AMBLSHAR                                                 03631000
AMBLCATO EQU   AMBLSHAR                                                 03632000
AMBLPRIM EQU   AMBLSHAR                                                 03633000
AMBLID   EQU   IDAAMBL+32                                               03634000
@NM00025 EQU   IDAAMBL+31                                               03635000
@NM00024 EQU   AMBLTYPE                                                 03636000
AMBLFIX  EQU   AMBLTYPE                                                 03637000
AMBLBASE EQU   AMBLTYPE                                                 03638000
AMBLAIX  EQU   AMBLTYPE                                                 03639000
AMBLUPGR EQU   AMBLTYPE                                                 03640000
AMBLPATH EQU   AMBLTYPE                                                 03641000
AMBLENO  EQU   AMBLVC+1                                                 03642000
AMBLVRT  EQU   AMBLVC                                                   03643000
AMBLXPT  EQU   IDAAMBL+24                                               03644000
AMBLDFR  EQU   AMBLQ                                                    03645000
AMBLESDS EQU   AMBLQ                                                    03646000
AMBLKSDS EQU   AMBLQ                                                    03647000
AMBLUBF  EQU   AMBLQ                                                    03648000
AMBLFSTP EQU   AMBLQ                                                    03649000
AMBLLSR  EQU   AMBLQ                                                    03650000
AMBLGSR  EQU   AMBLQ                                                    03651000
AMBLDDC  EQU   AMBLQ                                                    03652000
AMBLDCI  EQU   AMBLIDF+4                                                03653000
AMBLCACB EQU   AMBLIDF                                                  03654000
@NM00023 EQU   AMBLEOV+2                                                03655000
AMBLCOMP EQU   AMBLEOV+1                                                03656000
AMBLESET EQU   AMBLEFLG                                                 03657000
AMBLWAIT EQU   AMBLEFLG                                                 03658000
AMBLACB  EQU   IDAAMBL+8                                                03659000
AMBLSCHN EQU   IDAAMBL+4                                                03660000
AMBLPCHN EQU   IDAAMBL                                                  03661000
EXLEADDR EQU   EXLEXITP                                                 03662000
@NM00022 EQU   EXLENFL                                                  03663000
EXLLNK   EQU   EXLENFL                                                  03664000
EXLACTM  EQU   EXLENFL                                                  03665000
EXLSPEC  EQU   EXLENFL                                                  03666000
EXLOPNP  EQU   EXLCOMN+36                                               03667000
@NM00021 EQU   EXLOPNF                                                  03668000
EXLOPNK  EQU   EXLOPNF                                                  03669000
EXLOPNA  EQU   EXLOPNF                                                  03670000
EXLOPNS  EQU   EXLOPNF                                                  03671000
EXLJRNP  EQU   EXLCOMN+31                                               03672000
@NM00020 EQU   EXLJRNF                                                  03673000
EXLJRNK  EQU   EXLJRNF                                                  03674000
EXLJRNA  EQU   EXLJRNF                                                  03675000
EXLJRNS  EQU   EXLJRNF                                                  03676000
EXLLGNP  EQU   EXLCOMN+26                                               03677000
@NM00019 EQU   EXLLGNF                                                  03678000
EXLLGNK  EQU   EXLLGNF                                                  03679000
EXLLGNA  EQU   EXLLGNF                                                  03680000
EXLLGNS  EQU   EXLLGNF                                                  03681000
EXLUPADP EQU   EXLSCIPP                                                 03682000
@NM00018 EQU   EXLUPADF                                                 03683000
EXLUPADK EQU   EXLSCIPK                                                 03684000
EXLUPADA EQU   EXLSCIPA                                                 03685000
EXLUPADS EQU   EXLSCIPS                                                 03686000
EXLLERP  EQU   EXLCOMN+16                                               03687000
@NM00017 EQU   EXLLERF                                                  03688000
EXLLERK  EQU   EXLLERF                                                  03689000
EXLLERA  EQU   EXLLERF                                                  03690000
EXLLERS  EQU   EXLLERF                                                  03691000
EXLSYNP  EQU   EXLCOMN+11                                               03692000
@NM00016 EQU   EXLSYNF                                                  03693000
EXLSYNK  EQU   EXLSYNF                                                  03694000
EXLSYNA  EQU   EXLSYNF                                                  03695000
EXLSYNS  EQU   EXLSYNF                                                  03696000
EXLEODP  EQU   EXLCOMN+6                                                03697000
@NM00015 EQU   EXLEODF                                                  03698000
EXLEODK  EQU   EXLEODF                                                  03699000
EXLEODA  EQU   EXLEODF                                                  03700000
EXLEODS  EQU   EXLEODF                                                  03701000
@NM00014 EQU   EXLCOMN+4                                                03702000
EXLLEN2  EQU   EXLLEN                                                   03703000
EXLSTYP  EQU   EXLCOMN+1                                                03704000
EXLID    EQU   EXLCOMN                                                  03705000
ACBAPID  EQU   ACBCOMN+72                                               03706000
ACBCBMWA EQU   ACBCOMN+68                                               03707000
ACBUAPTR EQU   ACBCOMN+64                                               03708000
ACBLRECL EQU   ACBCOMN+62                                               03709000
ACBMSGLN EQU   ACBBLKSZ                                                 03710000
ACBBUFSP EQU   ACBCOMN+56                                               03711000
@NM00013 EQU   ACBUJFCB+1                                               03712000
ACBOPTN  EQU   ACBUJFCB                                                 03713000
ACBVVIC  EQU   ACBINFLG                                                 03714000
ACBUCRA  EQU   ACBINFLG                                                 03715000
ACBSCRA  EQU   ACBINFLG                                                 03716000
ACBCAT   EQU   ACBINFLG                                                 03717000
ACBIJRQE EQU   ACBINFLG                                                 03718000
ACBJEPS  EQU   ACBINFLG                                                 03719000
@NM00012 EQU   ACBINFLG                                                 03720000
ACBERFLG EQU   ACBCOMN+49                                               03721000
ACBBUSY  EQU   ACBIOSFG                                                 03722000
ACBLOCK  EQU   ACBEXFG                                                  03723000
@NM00011 EQU   ACBOFLGS                                                 03724000
ACBDSERR EQU   ACBOFLGS                                                 03725000
ACBOPEN  EQU   ACBOFLGS                                                 03726000
ACBEOV   EQU   ACBOFLGS                                                 03727000
@NM00010 EQU   ACBOFLGS                                                 03728000
ACBDEB   EQU   ACBDDNM+5                                                03729000
ACBERFL  EQU   ACBDDNM+4                                                03730000
ACBAM    EQU   ACBAMETH                                                 03731000
ACBINFL  EQU   ACBDDNM+2                                                03732000
ACBTIOT  EQU   ACBDDNM                                                  03733000
ACBUEL   EQU   ACBEXLST                                                 03734000
ACBPASSW EQU   ACBCOMN+32                                               03735000
ACBMSGAR EQU   ACBCOMN+28                                               03736000
@NM00009 EQU   ACBDSORG+1                                               03737000
ACBDORGA EQU   ACBDSORG+1                                               03738000
@NM00008 EQU   ACBDSORG                                                 03739000
ACBCRNRE EQU   ACBCROPS                                                 03740000
ACBCRNCK EQU   ACBCROPS                                                 03741000
ACBASA   EQU   ACBCCTYP                                                 03742000
@NM00007 EQU   ACBCCTYP                                                 03743000
ACBRECAF EQU   ACBRECFM                                                 03744000
ACBJBUF  EQU   ACBBUFPL+2                                               03745000
ACBMACR4 EQU   ACBBUFPL+1                                               03746000
@NM00006 EQU   ACBMACR3                                                 03747000
ACBNCFX  EQU   ACBMACR3                                                 03748000
ACBSIS   EQU   ACBMACR3                                                 03749000
ACBDFR   EQU   ACBMACR3                                                 03750000
ACBICI   EQU   ACBMACR3                                                 03751000
ACBGSR   EQU   ACBMACR3                                                 03752000
ACBLSR   EQU   ACBMACR3                                                 03753000
@NM00005 EQU   ACBMACR3                                                 03754000
ACBBUFNI EQU   ACBCOMN+18                                               03755000
ACBBUFND EQU   ACBCOMN+16                                               03756000
ACBSTRNO EQU   ACBCOMN+15                                               03757000
ACBBSTNO EQU   ACBCOMN+14                                               03758000
ACBAIX   EQU   ACBMACR2                                                 03759000
ACBDSN   EQU   ACBMACR2                                                 03760000
ACBRST   EQU   ACBMACR2                                                 03761000
ACBLOGON EQU   ACBMACR2                                                 03762000
ACBSKP   EQU   ACBMACR2                                                 03763000
@NM00004 EQU   ACBMACR2                                                 03764000
ACBUBF   EQU   ACBMACR1                                                 03765000
ACBOUT   EQU   ACBMACR1                                                 03766000
ACBIN    EQU   ACBMACR1                                                 03767000
ACBDIR   EQU   ACBMACR1                                                 03768000
ACBSEQ   EQU   ACBMACR1                                                 03769000
ACBBLK   EQU   ACBCNV                                                   03770000
ACBADD   EQU   ACBADR                                                   03771000
ACBKEY   EQU   ACBMACR1                                                 03772000
ACBINRTN EQU   ACBCOMN+8                                                03773000
ACBIBCT  EQU   ACBJWA                                                   03774000
ACBLEN2  EQU   ACBLENG2                                                 03775000
ACBSTYP  EQU   ACBCOMN+1                                                03776000
ACBID    EQU   ACBCOMN                                                  03777000
RPLERMSA EQU   RPLCOMN+72                                               03778000
RPLEMLEN EQU   RPLCOMN+70                                               03779000
RPLACTIV EQU   RPLCOMN+69                                               03780000
RPLBRANC EQU   RPLEXTD1                                                 03781000
RPLNIB   EQU   RPLEXTD1                                                 03782000
@NM00003 EQU   RPLEXTD1                                                 03783000
RPLEXIT  EQU   RPLEXTD1                                                 03784000
RPLNEXIT EQU   RPLEXTD1                                                 03785000
RPLEXSCH EQU   RPLEXTD1                                                 03786000
@NM00002 EQU   RPLRBAR+3                                                03787000
@NM00001 EQU   RPLAIXID                                                 03788000
RPLAXPKP EQU   RPLAIXID                                                 03789000
RPLAIXPC EQU   RPLRBAR                                                  03790000
RPLRSV88 EQU   RPLOPT8                                                  03791000
RPLUNCON EQU   RPLOPT8                                                  03792000
RPLACTV  EQU   RPLOPT8                                                  03793000
RPLSESS  EQU   RPLOPT8                                                  03794000
RPLPEND  EQU   RPLOPT8                                                  03795000
RPLODPRM EQU   RPLOPT8                                                  03796000
RPLODACP EQU   RPLOPT8                                                  03797000
RPLODACQ EQU   RPLOPT8                                                  03798000
RPLRSV78 EQU   RPLOPT7                                                  03799000
RPLRSV77 EQU   RPLOPT7                                                  03800000
RPLRLSOP EQU   RPLOPT7                                                  03801000
RPLTPOST EQU   RPLOPT7                                                  03802000
RPLQOPT  EQU   RPLOPT7                                                  03803000
RPLCNIMM EQU   RPLCNOPT                                                 03804000
RPLCNANY EQU   RPLCNOPT                                                 03805000
RPLCNALL EQU   RPLCNOPT                                                 03806000
RPLRSV68 EQU   RPLOPT6                                                  03807000
RPLRSV67 EQU   RPLOPT6                                                  03808000
RPLLOCK  EQU   RPLOPT6                                                  03809000
RPLNCOND EQU   RPLOPT6                                                  03810000
RPLCOND  EQU   RPLOPT6                                                  03811000
RPLEOT   EQU   RPLUNTYP                                                 03812000
RPLEOM   EQU   RPLUNTYP                                                 03813000
RPLEOB   EQU   RPLUNTYP                                                 03814000
RPLWROPT EQU   RPLOPT5                                                  03815000
RPLNODE  EQU   RPLOPT5                                                  03816000
RPLERACE EQU   RPLWRTYP                                                 03817000
RPLEAU   EQU   RPLWRTYP                                                 03818000
RPLNERAS EQU   RPLWRTYP                                                 03819000
RPLPSOPT EQU   RPLOPT5                                                  03820000
RPLSSNIN EQU   RPLOPT5                                                  03821000
RPLDLGIN EQU   RPLOPT5                                                  03822000
RPLCHAIN EQU   RPLNXTRP                                                 03823000
RPLOPT4  EQU   RPLOPTCD+3                                               03824000
RPLALIGN EQU   RPLOPT3                                                  03825000
RPLFMT   EQU   RPLOPT3                                                  03826000
RPLFLD   EQU   RPLOPT3                                                  03827000
RPLVFY   EQU   RPLOPT3                                                  03828000
RPLBLK   EQU   RPLOPT3                                                  03829000
RPLSFORM EQU   RPLOPT3                                                  03830000
RPLEODS  EQU   RPLOPT3                                                  03831000
RPLNSP   EQU   RPLOPT2                                                  03832000
RPLWAITX EQU   RPLOPT2                                                  03833000
RPLLRD   EQU   RPLOPT2                                                  03834000
RPLBWD   EQU   RPLOPT2                                                  03835000
RPLCNV   EQU   RPLOPT2                                                  03836000
RPLADD   EQU   RPLADR                                                   03837000
RPLKEY   EQU   RPLOPT2                                                  03838000
RPLECBIN EQU   RPLECBSW                                                 03839000
RPLGEN   EQU   RPLOPT1                                                  03840000
RPLKGE   EQU   RPLOPT1                                                  03841000
RPLSKP   EQU   RPLOPT1                                                  03842000
RPLSEQ   EQU   RPLOPT1                                                  03843000
RPLDIR   EQU   RPLOPT1                                                  03844000
RPLDAF   EQU   RPLARG+2                                                 03845000
RPLSAF   EQU   RPLARG                                                   03846000
RPLTCBPT EQU   RPLCOMN+28                                               03847000
RPLCCHAR EQU   RPLCOMN+20                                               03848000
RPLSTRID EQU   RPLCOMN+18                                               03849000
RPLKEYL  EQU   RPLKEYLE                                                 03850000
RPLRDSOH EQU   RPLFDB3                                                  03851000
RPLRLG   EQU   RPLFDB3                                                  03852000
RPLLGFRC EQU   RPLFDB3                                                  03853000
RPLREOT  EQU   RPLFDB3                                                  03854000
RPLREOM  EQU   RPLFDB3                                                  03855000
RPLREOB  EQU   RPLFDB3                                                  03856000
RPLSV32  EQU   RPLFDB3                                                  03857000
RPLUINPT EQU   RPLFDB3                                                  03858000
RPLSTSAV EQU   RPLFDB2                                                  03859000
RPLCUERR EQU   RPLFDB2                                                  03860000
RPLDLGFL EQU   RPLFDB2                                                  03861000
RPLIOERR EQU   RPLFDB2                                                  03862000
RPLDVUNS EQU   RPLFDB2                                                  03863000
RPLATND  EQU   RPLFDB2                                                  03864000
RPLRVID  EQU   RPLFDB2                                                  03865000
RPLERLK  EQU   RPLFDB2                                                  03866000
RPLSTAT  EQU   RPLFDBWD                                                 03867000
RPLWAIT  EQU   RPLECB                                                   03868000
RPLLEN2  EQU   RPLLEN                                                   03869000
RPLSTYP  EQU   RPLIDWD+1                                                03870000
RPLID    EQU   RPLIDWD                                                  03871000
@NM00089 EQU   PSA+3668                                                 03872000
PSASTAK  EQU   PSA+3072                                                 03873000
@NM00088 EQU   PSA+1048                                                 03874000
PSAUSEND EQU   PSA+1048                                                 03875000
PSARV062 EQU   PSA+1044                                                 03876000
PSACDAL  EQU   PSA+1040                                                 03877000
PSAWTCOD EQU   PSA+1036                                                 03878000
PSAATCVT EQU   PSA+1032                                                 03879000
PSAPCPSW EQU   PSA+1024                                                 03880000
PSAPIR2  EQU   PSA+1020                                                 03881000
PSARV059 EQU   PSA+1018                                                 03882000
PSASVC13 EQU   PSA+1016                                                 03883000
PSALSFCC EQU   PSA+1012                                                 03884000
PSASFACC EQU   PSA+1008                                                 03885000
PSASTOP  EQU   PSA+992                                                  03886000
PSASTART EQU   PSA+976                                                  03887000
PSARSPSW EQU   PSA+968                                                  03888000
PSASRPSW EQU   PSA+960                                                  03889000
PSARV045 EQU   PSA+892                                                  03890000
PSARV044 EQU   PSA+888                                                  03891000
PSARV043 EQU   PSA+884                                                  03892000
PSARV042 EQU   PSA+880                                                  03893000
PSARV041 EQU   PSA+876                                                  03894000
PSARV040 EQU   PSA+872                                                  03895000
PSARV025 EQU   PSA+868                                                  03896000
PSADSSED EQU   PSA+868                                                  03897000
PSADSSPR EQU   PSA+864                                                  03898000
PSADSSFW EQU   PSA+860                                                  03899000
PSADSS14 EQU   PSA+856                                                  03900000
PSADSSPP EQU   PSA+848                                                  03901000
PSADSSRP EQU   PSA+840                                                  03902000
PSADSS05 EQU   PSADSSF4                                                 03903000
PSADSS10 EQU   PSADSSF4                                                 03904000
PSADSSVE EQU   PSADSSF4                                                 03905000
PSADSSDE EQU   PSADSSF4                                                 03906000
PSADSSC0 EQU   PSADSSF4                                                 03907000
PSADSSIE EQU   PSADSSF4                                                 03908000
PSADSS12 EQU   PSADSSF4                                                 03909000
PSADSSRC EQU   PSADSSF4                                                 03910000
PSARV057 EQU   PSADSSF3                                                 03911000
PSARV056 EQU   PSADSSF3                                                 03912000
PSARV055 EQU   PSADSSF3                                                 03913000
PSADSSMC EQU   PSADSSF3                                                 03914000
PSADSSRW EQU   PSADSSF3                                                 03915000
PSADSSNM EQU   PSADSSF3                                                 03916000
PSADSSES EQU   PSADSSF3                                                 03917000
PSADSSGP EQU   PSADSSF3                                                 03918000
PSADSSF2 EQU   PSADSSFL+1                                               03919000
PSADSSPI EQU   PSADSSF1                                                 03920000
PSADSSOI EQU   PSADSSF1                                                 03921000
PSADSSSP EQU   PSADSSF1                                                 03922000
PSADSSTP EQU   PSADSSF1                                                 03923000
PSADSSDW EQU   PSADSSF1                                                 03924000
PSADSSDD EQU   PSADSSF1                                                 03925000
PSADSSDM EQU   PSADSSF1                                                 03926000
PSADSSMV EQU   PSADSSF1                                                 03927000
PSADSSTS EQU   PSA+816                                                  03928000
PSADSSWK EQU   PSA+812                                                  03929000
PSADSSR3 EQU   PSA+808                                                  03930000
PSADSSR2 EQU   PSA+804                                                  03931000
PSADSSRS EQU   PSA+800                                                  03932000
PSASTOR  EQU   PSA+796                                                  03933000
PSACPUSA EQU   PSA+794                                                  03934000
PSAVSTAP EQU   PSA+792                                                  03935000
PSAWKVAP EQU   PSA+788                                                  03936000
PSAWKRAP EQU   PSA+784                                                  03937000
PSAMCHIC EQU   PSA+783                                                  03938000
PSARV061 EQU   PSA+782                                                  03939000
PSASYMSK EQU   PSA+781                                                  03940000
PSAMCHFL EQU   PSA+780                                                  03941000
PSACR0   EQU   PSA+776                                                  03942000
PSAPSWSV EQU   PSA+768                                                  03943000
PSALITA  EQU   PSA+764                                                  03944000
PSACLHS  EQU   PSAHLHI                                                  03945000
PSALKR15 EQU   PSALKSA+60                                               03946000
PSALKR14 EQU   PSALKSA+56                                               03947000
PSALKR13 EQU   PSALKSA+52                                               03948000
PSALKR12 EQU   PSALKSA+48                                               03949000
PSALKR11 EQU   PSALKSA+44                                               03950000
PSALKR10 EQU   PSALKSA+40                                               03951000
PSALKR9  EQU   PSALKSA+36                                               03952000
PSALKR8  EQU   PSALKSA+32                                               03953000
PSALKR7  EQU   PSALKSA+28                                               03954000
PSALKR6  EQU   PSALKSA+24                                               03955000
PSALKR5  EQU   PSALKSA+20                                               03956000
PSALKR4  EQU   PSALKSA+16                                               03957000
PSALKR3  EQU   PSALKSA+12                                               03958000
PSALKR2  EQU   PSALKSA+8                                                03959000
PSALKR1  EQU   PSALKSA+4                                                03960000
PSALKR0  EQU   PSALKSA                                                  03961000
PSARV023 EQU   PSACLHT+52                                               03962000
PSALOCAL EQU   PSACLHT+48                                               03963000
PSACMSL  EQU   PSACLHT+44                                               03964000
PSAOPTL  EQU   PSACLHT+40                                               03965000
PSATPACL EQU   PSACLHT+36                                               03966000
PSATPDNL EQU   PSACLHT+32                                               03967000
PSATPNCL EQU   PSACLHT+28                                               03968000
PSAIOSLL EQU   PSACLHT+24                                               03969000
PSAIOSUL EQU   PSACLHT+20                                               03970000
PSAIOSCL EQU   PSACLHT+16                                               03971000
PSAIOSSL EQU   PSACLHT+12                                               03972000
PSASALCL EQU   PSACLHT+8                                                03973000
PSAASML  EQU   PSACLHT+4                                                03974000
PSADISPL EQU   PSACLHT                                                  03975000
PSASRSA  EQU   PSA+636                                                  03976000
PSARV050 EQU   PSA+634                                                  03977000
PSADSSGO EQU   PSA+633                                                  03978000
PSARECUR EQU   PSA+632                                                  03979000
PSAHLHIS EQU   PSA+628                                                  03980000
PSAIPCSA EQU   PSA+624                                                  03981000
@NM00087 EQU   PSA+621                                                  03982000
PSAIPCDM EQU   PSA+620                                                  03983000
PSAIPCD  EQU   PSA+616                                                  03984000
@NM00086 EQU   PSA+613                                                  03985000
PSAIPCRM EQU   PSA+612                                                  03986000
PSAIPCR  EQU   PSA+608                                                  03987000
PSAMCHEX EQU   PSA+600                                                  03988000
PSAMPSW  EQU   PSA+592                                                  03989000
PSAEXPS2 EQU   PSA+584                                                  03990000
PSAEXPS1 EQU   PSA+576                                                  03991000
PSAPIREG EQU   PSA+572                                                  03992000
PSARSREG EQU   PSA+568                                                  03993000
PSAGPREG EQU   PSA+556                                                  03994000
PSARV022 EQU   PSASUP4                                                  03995000
PSARV021 EQU   PSASUP4                                                  03996000
PSARV020 EQU   PSASUP4                                                  03997000
PSARV019 EQU   PSASUP4                                                  03998000
PSARV018 EQU   PSASUP4                                                  03999000
PSARV017 EQU   PSASUP4                                                  04000000
PSARV016 EQU   PSASUP4                                                  04001000
PSARV015 EQU   PSASUP4                                                  04002000
PSARV014 EQU   PSASUP3                                                  04003000
PSAULCMS EQU   PSASUP3                                                  04004000
PSARV012 EQU   PSASUP3                                                  04005000
PSAESTA  EQU   PSASUP3                                                  04006000
PSASPR   EQU   PSASUP3                                                  04007000
PSAPSREG EQU   PSASUP3                                                  04008000
PSAPI2   EQU   PSASUP3                                                  04009000
PSAIOSUP EQU   PSASUP3                                                  04010000
PSALCR   EQU   PSASUP2                                                  04011000
PSARTM   EQU   PSASUP2                                                  04012000
PSAACR   EQU   PSASUP2                                                  04013000
PSAIPCE2 EQU   PSASUP2                                                  04014000
PSAIPCES EQU   PSASUP2                                                  04015000
PSAIPCEC EQU   PSASUP2                                                  04016000
PSAGTF   EQU   PSASUP2                                                  04017000
PSAIPCRI EQU   PSASUP2                                                  04018000
PSATYPE6 EQU   PSASUP1                                                  04019000
PSATCTL  EQU   PSASUP1                                                  04020000
PSADISP  EQU   PSASUP1                                                  04021000
PSALOCK  EQU   PSASUP1                                                  04022000
PSAPI    EQU   PSASUP1                                                  04023000
PSAEXT   EQU   PSASUP1                                                  04024000
PSASVC   EQU   PSASUP1                                                  04025000
PSAIO    EQU   PSASUP1                                                  04026000
PSAANEW  EQU   PSA+544                                                  04027000
PSATOLD  EQU   PSA+540                                                  04028000
PSATNEW  EQU   PSA+536                                                  04029000
PSALCCAR EQU   PSA+532                                                  04030000
PSALCCAV EQU   PSA+528                                                  04031000
PSAPCCAR EQU   PSA+524                                                  04032000
PSAPCCAV EQU   PSA+520                                                  04033000
PSACPULA EQU   PSA+518                                                  04034000
PSACPUPA EQU   PSA+516                                                  04035000
PSAPSA   EQU   PSA+512                                                  04036000
FLCHDEND EQU   PSA+512                                                  04037000
FLCCRSAV EQU   FLCMCLA+280                                              04038000
FLCGRSAV EQU   FLCMCLA+216                                              04039000
FLCFPSAV EQU   FLCMCLA+184                                              04040000
FLCFLA   EQU   FLCMCLA+88                                               04041000
FLCRGNCD EQU   FLCMCLA+84                                               04042000
FLCFSAA  EQU   FLCFSA+1                                                 04043000
@NM00085 EQU   FLCFSA                                                   04044000
@NM00084 EQU   FLCMCLA+72                                               04045000
FLCMCIC  EQU   FLCMCLA+64                                               04046000
@NM00083 EQU   FLCMCLA+20                                               04047000
FLCIOAA  EQU   FLCIOA+1                                                 04048000
@NM00082 EQU   FLCIOA                                                   04049000
@NM00081 EQU   FLCMCLA+15                                               04050000
@NM00080 EQU   FLCMCLA+14                                               04051000
@NM00079 EQU   FLCMCLA+12                                               04052000
FLCLCL   EQU   FLCMCLA+8                                                04053000
FLCIOELA EQU   FLCIOEL+1                                                04054000
@NM00078 EQU   FLCIOEL                                                  04055000
FLCCHNID EQU   FLCMCLA                                                  04056000
@NM00077 EQU   PSA+160                                                  04057000
FLCMTRCD EQU   PSA+157                                                  04058000
@NM00076 EQU   PSA+156                                                  04059000
FLCPERA  EQU   FLCPER+1                                                 04060000
@NM00075 EQU   FLCPER                                                   04061000
@NM00074 EQU   PSA+151                                                  04062000
FLCPERCD EQU   PSA+150                                                  04063000
FLCMCNUM EQU   PSA+149                                                  04064000
@NM00073 EQU   PSA+148                                                  04065000
FLCTEAA  EQU   FLCTEA+1                                                 04066000
@NM00072 EQU   FLCTEA                                                   04067000
PSAPIPC  EQU   PSAPICOD                                                 04068000
PSAPIMC  EQU   PSAPICOD                                                 04069000
PSAPIPER EQU   PSAPICOD                                                 04070000
PSARV049 EQU   FLCPICOD                                                 04071000
FLCPILCB EQU   FLCPIILC                                                 04072000
@NM00071 EQU   FLCPIILC                                                 04073000
@NM00070 EQU   PSAEPPSW                                                 04074000
FLCSVCN  EQU   PSAESPSW+2                                               04075000
FLCSILCB EQU   FLCSVILC                                                 04076000
@NM00069 EQU   FLCSVILC                                                 04077000
@NM00068 EQU   PSAESPSW                                                 04078000
FLCEICOD EQU   PSAEEPSW+2                                               04079000
PSASPAD  EQU   PSAEEPSW                                                 04080000
@NM00067 EQU   PSA+128                                                  04081000
FLCINPSW EQU   PSA+120                                                  04082000
FLCMNPSW EQU   PSA+112                                                  04083000
FLCPNPSW EQU   PSA+104                                                  04084000
FLCSNPSW EQU   PSA+96                                                   04085000
FLCENPSW EQU   PSA+88                                                   04086000
FLCTRACE EQU   PSA+84                                                   04087000
FLCTIMER EQU   PSA+80                                                   04088000
FLCCVT2  EQU   PSA+76                                                   04089000
FLCCAW   EQU   PSA+72                                                   04090000
FLCCSW   EQU   PSA+64                                                   04091000
FLCIOPSW EQU   PSA+56                                                   04092000
FLCMOPSW EQU   PSA+48                                                   04093000
FLCPOPSW EQU   PSA+40                                                   04094000
FLCSOPSW EQU   PSA+32                                                   04095000
FLCEOPSW EQU   PSA+24                                                   04096000
@NM00066 EQU   FLCICCW2+4                                               04097000
FLCCVT   EQU   FLCICCW2                                                 04098000
FLCICCW1 EQU   FLCROPSW                                                 04099000
FLCIPPSW EQU   FLCRNPSW                                                 04100000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04101000
@RC00361 EQU   @RC00359                                                 04102000
@RC00367 EQU   @RC00365                                                 04103000
@RF00355 EQU   @RC00347                                                 04104000
@RC00524 EQU   @RC00522                                                 04105000
@RC00534 EQU   @RC00531                                                 04106000
@RC00541 EQU   @RC00539                                                 04107000
@RC00589 EQU   @RC00587                                                 04108000
@RC00613 EQU   @RC00611                                                 04109000
@RF00643 EQU   @RC00640                                                 04110000
@RC00653 EQU   @RC00648                                                 04111000
@RC00724 EQU   @EL00015                                                 04112000
@RC00811 EQU   @RC00809                                                 04113000
@RC00818 EQU   @RC00809                                                 04114000
@RT01134 EQU   FNDPLH                                                   04115000
@RF01101 EQU   @EL00001                                                 04116000
@RC01083 EQU   @EL00001                                                 04117000
@ENDDATA EQU   *                                                        04118000
         END   IDA019RU,(C'PLS1036',0701,78201)                         04119000
