         TITLE 'IDA019RV LOCATE PREVIOUS SEQUENCE SET                  *00001000
                        '                                               00002000
IDA019RV CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RV  78.172'                                 0001 00009000
IDAADVPH DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00331-IDAADVPH)                                   00013000
         ENTRY IDAADVPH                                                 00014000
IDARVRS1 DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00460-IDARVRS1)                                   00018000
         ENTRY IDARVRS1                                                 00019000
         DROP  @15                                                      00020000
@PROLOG  BALR  @11,0                                               0001 00021000
@PSTART  DS    0H                                                  0001 00022000
         USING @PSTART,@11                                         0001 00023000
         AH    @15,4(,@15)                                         0001 00024000
         BR    @15                                                 0001 00025000
@EP00001 DS    0H                                                  0002 00026000
         IDASVR14                                                       00027000
*   RAMB=AMBLIX;                    /* ASSURE INDEX BLOCKS ARE     0154 00028000
*                                      ADDRESSED                     */ 00029000
         L     @10,RPLDACB(,RRPL)                                  0154 00030000
         L     @10,ACBAMBL(,@10)                                   0154 00031000
         L     RAMB,AMBLIX(,@10)                                   0154 00032000
*   IF PLHSLVLD=ON THEN             /* DOES A VALID 2ND LEVEL INDEX     00033000
*                                      EXIST                         */ 00034000
         TM    PLHSLVLD(RPLH),B'00100000'                          0155 00035000
         BNO   @RF00155                                            0155 00036000
*     DO;                           /* YES                           */ 00037000
*       RPARM1=ADDR(PLHIXSPL);      /* POINT TO INDEX LIST           */ 00038000
         LA    RPARM1,PLHIXSPL(,RPLH)                              0157 00039000
*       RPARM1->IXSILN=TWO;         /* SET LEVEL TO 2                */ 00040000
         MVI   IXSILN(RPARM1),X'02'                                0158 00041000
*       RPARM1=PLHSLRBA;            /* GET ITS RBA                   */ 00042000
         L     RPARM1,PLHSLRBA(,RPLH)                              0159 00043000
*I01:                                                              0160 00044000
*       DO;                         /* IDACALL(IDAGRB)               */ 00045000
I01      DS    0H                                                  0161 00046000
*         CALL IDAGRB;              /* EXIT TO IDAGRB                */ 00047000
         L     @15,@CV00908                                        0161 00048000
         BALR  @14,@15                                             0161 00049000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00050000
         BALR @11,0                                                     00051000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00052000
         USING *,@11                                                    00053000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00054000
         L     @11,=A(@PSTART)                                          00055000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00056000
         USING @PSTART,@11                                              00057000
*       END I01;                    /* GO READ IT                    */ 00058000
*       IF RPLERREG^=ZERO THEN      /* I/O ERROR ENCOUNTERED         */ 00059000
         CLI   RPLERREG(RRPL),0                                    0167 00060000
         BE    @RF00167                                            0167 00061000
*         CALL EXIT;                /* YES, RETURN TO CALLER         */ 00062000
         BAL   @14,EXIT                                            0168 00063000
*       PLHSAVE6=RBUFC;             /* SAVE BUFC OF RECORD           */ 00064000
@RF00167 ST    RBUFC,PLHSAVE6(,RPLH)                               0169 00065000
*       RBUFC=BUFCBAD;              /* GET ADDRESS OF INDEX RECORD   */ 00066000
         L     RBUFC,BUFCBAD(,RBUFC)                               0170 00067000
*       RPARM1=ADDR(PLHKEY);        /* POINT TO ARGUMENT             */ 00068000
         L     RPARM1,PLHKEYPT(,RPLH)                              0171 00069000
*       RESPECIFY                                                  0172 00070000
*         RWORK3 RSTD;              /*                               */ 00071000
*       RWORK3=PLHISPLP;            /* POINT TO INDEX SEARCH       0173 00072000
*                                      PARAMETER LIST                */ 00073000
         L     RWORK3,PLHISPLP(,RPLH)                              0173 00074000
*I02:                                                              0174 00075000
*       DO;                         /* IDACALL(IDA019RC)             */ 00076000
I02      DS    0H                                                  0175 00077000
*         CALL IDA019RC;            /* EXIT TO IDA019RC              */ 00078000
         L     @15,@CV00911                                        0175 00079000
         BALR  @14,@15                                             0175 00080000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00081000
         BALR @11,0                                                     00082000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00083000
         USING *,@11                                                    00084000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00085000
         L     @11,=A(@PSTART)                                          00086000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00087000
         USING @PSTART,@11                                              00088000
*       END I02;                    /* SEARCH INDEX RECORD           */ 00089000
*       RESPECIFY                                                  0181 00090000
*         R15 RSTD;                 /*                               */ 00091000
*       IF R15=ZERO THEN            /* DID A HIT OCCUR               */ 00092000
         LTR   R15,R15                                             0182 00093000
         BNZ   @RF00182                                            0182 00094000
*         DO;                       /* YES                           */ 00095000
*           CALL BACKUP;            /* GO SEE IF AN ENTRY PRECEEDS 0184 00096000
*                                      HIT ENTRY                     */ 00097000
         BAL   @14,BACKUP                                          0184 00098000
*           IF R15=ZERO THEN        /* DOES ONE EXIST                */ 00099000
         LTR   R15,R15                                             0185 00100000
         BNZ   @RF00185                                            0185 00101000
*             DO;                   /* YES                           */ 00102000
*               RESPECIFY                                          0187 00103000
*                 R15 UNRSTD;       /*                               */ 00104000
*               PLHSAVE2=RPARM1;    /* SAVE RBA OF N-FIRST           */ 00105000
         ST    RPARM1,PLHSAVE2(,RPLH)                              0188 00106000
*               RBUFC=PLHSAVE6;     /* POINT TO CURRENT BUFC         */ 00107000
         L     RBUFC,PLHSAVE6(,RPLH)                               0189 00108000
*               CALL READSS;        /* READ SEQUENCE SET AND THEN  0190 00109000
*                                      EXIT                          */ 00110000
         BAL   @14,READSS                                          0190 00111000
*             END;                  /* END OF N-1 FOUND              */ 00112000
*         END;                      /* END OF HIT ON SCIB            */ 00113000
@RF00185 DS    0H                                                  0193 00114000
*       RESPECIFY                                                  0193 00115000
*         RWORK3 UNRSTD;            /*                               */ 00116000
@RF00182 DS    0H                                                  0194 00117000
*       PLHSLVLD=OFF;               /* SHOW 2ND LEVEL INVALID        */ 00118000
         NI    PLHSLVLD(RPLH),B'11011111'                          0194 00119000
*       RBUFC=PLHSAVE6;             /* REESTABLISH BUFC              */ 00120000
         L     RBUFC,PLHSAVE6(,RPLH)                               0195 00121000
*I03:                                                              0196 00122000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00123000
I03      DS    0H                                                  0197 00124000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00125000
         L     @15,@CV00906                                        0197 00126000
         BALR  @14,@15                                             0197 00127000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00128000
         BALR @11,0                                                     00129000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00130000
         USING *,@11                                                    00131000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00132000
         L     @11,=A(@PSTART)                                          00133000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00134000
         USING @PSTART,@11                                              00135000
*       END I03;                    /* FREE THE BUFFER               */ 00136000
*     END;                          /* END OF SEARCH OF EXISTING   0203 00137000
*                                      SECOND LEVEL                  */ 00138000
*   IF AMDNIL^>ONE THEN             /* IS THERE MORE THAN ONE INDEX     00139000
*                                      LEVEL                         */ 00140000
@RF00155 L     @10,AMBDSB(,RAMB)                                   0204 00141000
         LH    @10,AMDNIL(,@10)                                    0204 00142000
         C     @10,@CF00053                                        0204 00143000
         BH    @RF00204                                            0204 00144000
*     DO;                           /* NO                            */ 00145000
*       RESPECIFY                                                  0206 00146000
*         R15 RSTD;                 /*                               */ 00147000
*       R15=FOUR;                   /* SHOW NO PREVIOUS SEQ SET CAN     00148000
*                                      BE FOUND                      */ 00149000
         LA    R15,4                                               0207 00150000
*       CALL EXIT;                  /* RETURN TO CALLER              */ 00151000
         BAL   @14,EXIT                                            0208 00152000
*       RESPECIFY                                                  0209 00153000
*         R15 UNRSTD;               /*                               */ 00154000
*     END;                          /*                               */ 00155000
*   RPARM1=AMDHLRBA;                /* GET RBA OF HI LEVEL INDEX   0211 00156000
*                                      RECORD                        */ 00157000
@RF00204 L     @10,AMBDSB(,RAMB)                                   0211 00158000
         L     RPARM1,AMDHLRBA(,@10)                               0211 00159000
*   PLHSAVE4=RPARM1;                /* SAVE CURRENT RECORD RBA       */ 00160000
         ST    RPARM1,PLHSAVE4(,RPLH)                              0212 00161000
*   PLHSAVE1=ZERO;                  /* SHOW NO N-1 FOUND YET         */ 00162000
         SLR   @05,@05                                             0213 00163000
         ST    @05,PLHSAVE1(,RPLH)                                 0213 00164000
*   PLHSAVE5=ZERO;                  /* FORCE THROUGH FOLLOWING LOOP     00165000
*                                      AT LEAST ONCE                 */ 00166000
         ST    @05,PLHSAVE5(,RPLH)                                 0214 00167000
*   RFY                                                            0215 00168000
*     R14 RSTD;                     /*                               */ 00169000
*   R14=ADDR(PLHIXSPL);             /* POINT TO INX PARM LIST        */ 00170000
         LA    R14,PLHIXSPL(,RPLH)                                 0216 00171000
*   R14->IXSILN=AMDNIL;             /* SET HI LEVEL IN LIST          */ 00172000
         LH    @15,AMDNIL(,@10)                                    0217 00173000
         STC   @15,IXSILN(,R14)                                    0217 00174000
*   RFY                                                            0218 00175000
*     R14 UNRSTD;                   /*                               */ 00176000
*   DO WHILE PLHSAVE5^=TWO;         /* LOOP UNTIL LEVEL TWO HAS BEEN    00177000
*                                      PROCESSED                     */ 00178000
         B     @DE00219                                            0219 00179000
@DL00219 DS    0H                                                  0220 00180000
*     PLHSAVE3=PLHSAVE4;            /* REMEMBER RBA OF RECORD        */ 00181000
         L     @10,PLHSAVE4(,RPLH)                                 0220 00182000
         ST    @10,PLHSAVE3(,RPLH)                                 0220 00183000
*I04:                                                              0221 00184000
*     DO;                           /* IDACALL(IDAGRB)               */ 00185000
I04      DS    0H                                                  0222 00186000
*       CALL IDAGRB;                /* EXIT TO IDAGRB                */ 00187000
         L     @15,@CV00908                                        0222 00188000
         BALR  @14,@15                                             0222 00189000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00190000
         BALR @11,0                                                     00191000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00192000
         USING *,@11                                                    00193000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00194000
         L     @11,=A(@PSTART)                                          00195000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00196000
         USING @PSTART,@11                                              00197000
*     END I04;                      /* READ INDEX RECORD             */ 00198000
*     IF RPLERREG^=ZERO THEN        /* I/O ERROR ON READ             */ 00199000
         CLI   RPLERREG(RRPL),0                                    0228 00200000
         BE    @RF00228                                            0228 00201000
*       CALL EXIT;                  /* YES, RETURN TO CALLER         */ 00202000
         BAL   @14,EXIT                                            0229 00203000
*     PLHSAVE6=RBUFC;               /* SAVE BUFC ADDRESS             */ 00204000
@RF00228 ST    RBUFC,PLHSAVE6(,RPLH)                               0230 00205000
*     RBUFC=BUFCBAD;                /* POINT TO RECORD               */ 00206000
         L     RBUFC,BUFCBAD(,RBUFC)                               0231 00207000
*     RPARM1=ADDR(PLHKEY);          /* POINT TO ARGUMENT             */ 00208000
         L     RPARM1,PLHKEYPT(,RPLH)                              0232 00209000
*     RESPECIFY                                                    0233 00210000
*       RWORK3 RSTD;                /*                               */ 00211000
*     RWORK3=PLHISPLP;              /* SET ADDRESS OF INDEX SEARCH 0234 00212000
*                                      PARAMETER LIST                */ 00213000
         L     RWORK3,PLHISPLP(,RPLH)                              0234 00214000
*I05:                                                              0235 00215000
*     DO;                           /* IDACALL(IDA019RC)             */ 00216000
I05      DS    0H                                                  0236 00217000
*       CALL IDA019RC;              /* EXIT TO IDA019RC              */ 00218000
         L     @15,@CV00911                                        0236 00219000
         BALR  @14,@15                                             0236 00220000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00221000
         BALR @11,0                                                     00222000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00223000
         USING *,@11                                                    00224000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00225000
         L     @11,=A(@PSTART)                                          00226000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00227000
         USING @PSTART,@11                                              00228000
*     END I05;                      /* SEARCH INDEX RECORD           */ 00229000
*     RESPECIFY                                                    0242 00230000
*      (RWORK3,                                                    0242 00231000
*       R15) RSTD;                  /*                               */ 00232000
*     IF R15^=ZERO THEN             /* DID A HIT OCCUR               */ 00233000
         LTR   R15,R15                                             0243 00234000
         BZ    @RF00243                                            0243 00235000
*       DO;                         /* NO, SEARCH HORIZONTALLY       */ 00236000
*         PLHSAVE4=RBUFC->IXHHP;    /* SET RBA FROM HEADER           */ 00237000
         L     @14,IXHHP(,RBUFC)                                   0245 00238000
         ST    @14,PLHSAVE4(,RPLH)                                 0245 00239000
*       END;                        /*                               */ 00240000
*     ELSE                          /* HIT ON SEARCH                 */ 00241000
*       DO;                         /*                               */ 00242000
         B     @RC00243                                            0247 00243000
@RF00243 DS    0H                                                  0248 00244000
*         CALL BACKUP;              /* GO FIND IF A PREVIOUS ENTRY 0248 00245000
*                                      EXISTS PRIOR TO THE HIT ENTRY */ 00246000
         BAL   @14,BACKUP                                          0248 00247000
*         IF R15=ZERO THEN          /* DOES ONE EXIST                */ 00248000
         LTR   R15,R15                                             0249 00249000
         BNZ   @RF00249                                            0249 00250000
*           DO;                     /* YES                           */ 00251000
*             PLHSAVE1=RBUFC->IXHLV;/* INDICATE AN N-1 FOUND         */ 00252000
         SLR   @14,@14                                             0251 00253000
         IC    @14,IXHLV(,RBUFC)                                   0251 00254000
         ST    @14,PLHSAVE1(,RPLH)                                 0251 00255000
*             PLHSAVE2=RPARM1;      /* SAVE RBA OF N-1 ENTRY         */ 00256000
         ST    RPARM1,PLHSAVE2(,RPLH)                              0252 00257000
*           END;                    /*                               */ 00258000
*         RESPECIFY                                                0254 00259000
*           R15 UNRSTD;             /*                               */ 00260000
@RF00249 DS    0H                                                  0255 00261000
*         RESPECIFY                                                0255 00262000
*          (RWORK1,                                                0255 00263000
*           RWORK2,                                                0255 00264000
*           RWORK4) RSTD;           /*                               */ 00265000
*         RWORK1=ZERO;              /* CLEAR REGISTER FOR PTR.       */ 00266000
         SLR   RWORK1,RWORK1                                       0256 00267000
*         RWORK4=IXSHEP+LENGTH(IBFLPF)+/* GET ADDRESS OF POINTER     */ 00268000
*             LENGTH(IBFLPL);       /* FIELD                         */ 00269000
         LA    RWORK4,2                                            0257 00270000
         AL    RWORK4,IXSHEP(,RWORK3)                              0257 00271000
*         RWORK2=RBUFC->IXHPTLS;    /* GET MASK FROM HEADER          */ 00272000
         SLR   RWORK2,RWORK2                                       0258 00273000
         IC    RWORK2,IXHPTLS(,RBUFC)                              0258 00274000
*         GEN;                                                     0259 00275000
*                                          /*                        */ 00276000
     EX      RWORK2,INSERT                 /* PICK UP PTR. IN RWORK3 */ 00277000
*         PLHSAVE4=RWORK1*AMDCINV+  /* CONVERT POINTER TO AN         */ 00278000
*             RBUFC->IXHBRBA;       /* RBA AND SAVE IT               */ 00279000
         L     @10,AMBDSB(,RAMB)                                   0260 00280000
         LR    @15,RWORK1                                          0260 00281000
         M     @14,AMDCINV(,@10)                                   0260 00282000
         AL    @15,IXHBRBA(,RBUFC)                                 0260 00283000
         ST    @15,PLHSAVE4(,RPLH)                                 0260 00284000
*         RFY                                                      0261 00285000
*          (RWORK1,                                                0261 00286000
*           RWORK2,                                                0261 00287000
*           RWORK3,                                                0261 00288000
*           RWORK4) UNRSTD;         /*                               */ 00289000
*         PLHSAVE5=RBUFC->IXHLV;    /* OBTAIN LEVEL NO.              */ 00290000
         SLR   @10,@10                                             0262 00291000
         IC    @10,IXHLV(,RBUFC)                                   0262 00292000
         ST    @10,PLHSAVE5(,RPLH)                                 0262 00293000
*         RBUFC=ADDR(PLHIXSPL);     /* POINT TO INX PARM LIST        */ 00294000
         LA    RBUFC,PLHIXSPL(,RPLH)                               0263 00295000
*         RBUFC->IXSILN=PLHSAVE5-ONE;/* SET NEXT LEVEL NO.           */ 00296000
         BCTR  @10,0                                               0264 00297000
         STC   @10,IXSILN(,RBUFC)                                  0264 00298000
*       END;                        /*                               */ 00299000
*     RBUFC=PLHSAVE6;               /* REESTABLISH RBUFC             */ 00300000
@RC00243 L     RBUFC,PLHSAVE6(,RPLH)                               0266 00301000
*     IF PLHSAVE5^=TWO|PLHSAVE1>TWO THEN/* FREE BUFFER WHEN NOT 2ND     00302000
*                                      LEVEL INDEX OR WHEN PREVIOUS     00303000
*                                      ENTRY WAS FOUND               */ 00304000
         LA    @10,2                                               0267 00305000
         C     @10,PLHSAVE5(,RPLH)                                 0267 00306000
         BNE   @RT00267                                            0267 00307000
         C     @10,PLHSAVE1(,RPLH)                                 0267 00308000
         BNL   @RF00267                                            0267 00309000
@RT00267 DS    0H                                                  0268 00310000
*I06:                                                              0268 00311000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00312000
I06      DS    0H                                                  0269 00313000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00314000
         L     @15,@CV00906                                        0269 00315000
         BALR  @14,@15                                             0269 00316000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00317000
         BALR @11,0                                                     00318000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00319000
         USING *,@11                                                    00320000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00321000
         L     @11,=A(@PSTART)                                          00322000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00323000
         USING @PSTART,@11                                              00324000
*       END I06;                    /* FREE INDEX BUFFER             */ 00325000
*     RPARM1=PLHSAVE4;              /* PICK UP RBA OF RECORD TO BE 0275 00326000
*                                      READ                          */ 00327000
@RF00267 L     RPARM1,PLHSAVE4(,RPLH)                              0275 00328000
*   END;                            /*                               */ 00329000
@DE00219 CLC   PLHSAVE5(4,RPLH),@CF00155                           0276 00330000
         BNE   @DL00219                                            0276 00331000
*   PLHSLVLD=ON;                    /* SHOW 2ND LEVEL INDEX RECORD IS   00332000
*                                      VALID                         */ 00333000
         OI    PLHSLVLD(RPLH),B'00100000'                          0277 00334000
*   PLHSLRBA=PLHSAVE3;              /* SAVE RBA OF 2ND LEVEL         */ 00335000
         L     @10,PLHSAVE3(,RPLH)                                 0278 00336000
         ST    @10,PLHSLRBA(,RPLH)                                 0278 00337000
*   IF PLHSAVE1=ZERO THEN           /* HAS ANY N-1 ENTRY BEEN FOUND  */ 00338000
         L     @10,PLHSAVE1(,RPLH)                                 0279 00339000
         LTR   @10,@10                                             0279 00340000
         BNZ   @RF00279                                            0279 00341000
*     DO;                           /* NO                            */ 00342000
*       IF PLHSAVE4=PLHSSRBA THEN   /* DOES 2ND LVL POINT TO PREVIOUS   00343000
*                                      SEQ SET                       */ 00344000
         CLC   PLHSAVE4(4,RPLH),PLHSSRBA(RPLH)                     0281 00345000
         BNE   @RF00281                                            0281 00346000
*         DO;                       /* YES                           */ 00347000
*           RFY                                                    0283 00348000
*             R15 RSTD;             /*                               */ 00349000
*           R15=FOUR;               /* SHOW END OF DATA              */ 00350000
         LA    R15,4                                               0284 00351000
*           CALL EXIT;              /* RETURN TO CALLER              */ 00352000
         BAL   @14,EXIT                                            0285 00353000
*           RFY                                                    0286 00354000
*             R15 UNRSTD;           /*                               */ 00355000
*         END;                      /*                               */ 00356000
*       PLHSAVE2=PLHSAVE4;          /* SET RBA OF RECORD TO BE     0288 00357000
*                                      RETRIEVED                     */ 00358000
@RF00281 L     @10,PLHSAVE4(,RPLH)                                 0288 00359000
         ST    @10,PLHSAVE2(,RPLH)                                 0288 00360000
*       CALL READSS;                /* GO BRING IN SEQ SET           */ 00361000
         BAL   @14,READSS                                          0289 00362000
*     END;                          /*                               */ 00363000
*   RFY                                                            0291 00364000
*     R14 RSTD;                     /*                               */ 00365000
@RF00279 DS    0H                                                  0292 00366000
*   R14=ADDR(PLHIXSPL);             /* POINT TO INDEX LIST           */ 00367000
         LA    R14,PLHIXSPL(,RPLH)                                 0292 00368000
*   R14->IXSILN=PLHSAVE5;           /* SET LEVEL AT TOP              */ 00369000
         L     @15,PLHSAVE5(,RPLH)                                 0293 00370000
         STC   @15,IXSILN(,R14)                                    0293 00371000
*   RFY                                                            0294 00372000
*     R14 UNRSTD;                   /*                               */ 00373000
*   DO WHILE PLHSAVE1^=TWO;         /* LOOP UNTIL LEVEL TWO HAS BEEN    00374000
*                                      PROCESSED                     */ 00375000
         B     @DE00295                                            0295 00376000
@DL00295 DS    0H                                                  0296 00377000
*     RPARM1=PLHSAVE2;              /* PICK UP RBA OF RECORD TO BE 0296 00378000
*                                      READ                          */ 00379000
         L     RPARM1,PLHSAVE2(,RPLH)                              0296 00380000
*I07:                                                              0297 00381000
*     DO;                           /* IDACALL(IDAGRB)               */ 00382000
I07      DS    0H                                                  0298 00383000
*       CALL IDAGRB;                /* EXIT TO IDAGRB                */ 00384000
         L     @15,@CV00908                                        0298 00385000
         BALR  @14,@15                                             0298 00386000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 00387000
         BALR @11,0                                                     00388000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 00389000
         USING *,@11                                                    00390000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 00391000
         L     @11,=A(@PSTART)                                          00392000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 00393000
         USING @PSTART,@11                                              00394000
*     END I07;                      /* GO READ THE RECORD            */ 00395000
*     IF RPLERREG^=ZERO THEN        /* I/O ERROR                     */ 00396000
         CLI   RPLERREG(RRPL),0                                    0304 00397000
         BE    @RF00304                                            0304 00398000
*       CALL EXIT;                  /* YES, RETURN TO CALLER         */ 00399000
         BAL   @14,EXIT                                            0305 00400000
*     PLHSAVE3=PLHSAVE2;            /* SAVE RBA FOR PLHSLRBA         */ 00401000
@RF00304 L     @10,PLHSAVE2(,RPLH)                                 0306 00402000
         ST    @10,PLHSAVE3(,RPLH)                                 0306 00403000
*     RFY                                                          0307 00404000
*      (RWORK1,                                                    0307 00405000
*       RWORK2,                                                    0307 00406000
*       RWORK3,                                                    0307 00407000
*       RWORK4) RSTD;               /*                               */ 00408000
*     RWORK3=BUFCBAD;               /* POINT TO BUFFER               */ 00409000
         L     RWORK3,BUFCBAD(,RBUFC)                              0308 00410000
*     RWORK4=RWORK3+RWORK3->IXHLEO+ /* POINT TO PTR. FIELD OF        */ 00411000
*         LENGTH(IBFLPF)+LENGTH(IBFLPL);/* HIGHEST KEY IN RECORD     */ 00412000
         LR    RWORK4,RWORK3                                       0309 00413000
         AH    RWORK4,IXHLEO(,RWORK3)                              0309 00414000
         AL    RWORK4,@CF00155                                     0309 00415000
*     RWORK1=ZERO;                  /* CLEAR REGISTER FOR PTR        */ 00416000
         SLR   RWORK1,RWORK1                                       0310 00417000
*     RWORK2=RWORK3->IXHPTLS;       /* GET MASK FROM HEADER          */ 00418000
         SLR   RWORK2,RWORK2                                       0311 00419000
         IC    RWORK2,IXHPTLS(,RWORK3)                             0311 00420000
*     GEN;                                                         0312 00421000
*                                          /*                        */ 00422000
     EX      RWORK2,INSERT                 /* PICK UP PTR. IN RWORK1 */ 00423000
*     PLHSAVE2=RWORK1*AMDCINV+      /* CONVERT THE HIGH KEY          */ 00424000
*         RWORK3->IXHBRBA;          /* PTR. TO AN RBA                */ 00425000
         L     @10,AMBDSB(,RAMB)                                   0313 00426000
         LR    @15,RWORK1                                          0313 00427000
         M     @14,AMDCINV(,@10)                                   0313 00428000
         AL    @15,IXHBRBA(,RWORK3)                                0313 00429000
         ST    @15,PLHSAVE2(,RPLH)                                 0313 00430000
*     PLHSAVE1=RWORK3->IXHLV;       /* SAVE LEVEL NUMBER             */ 00431000
         SLR   @10,@10                                             0314 00432000
         IC    @10,IXHLV(,RWORK3)                                  0314 00433000
         ST    @10,PLHSAVE1(,RPLH)                                 0314 00434000
*     RFY                                                          0315 00435000
*       R14 RSTD;                   /*                               */ 00436000
*     R14=ADDR(PLHIXSPL);           /* POINT TO INDEX LIST           */ 00437000
         LA    R14,PLHIXSPL(,RPLH)                                 0316 00438000
*     R14->IXSILN=PLHSAVE5-ONE;     /* SET NEW LEVEL                 */ 00439000
         L     @15,PLHSAVE5(,RPLH)                                 0317 00440000
         BCTR  @15,0                                               0317 00441000
         STC   @15,IXSILN(,R14)                                    0317 00442000
*     RFY                                                          0318 00443000
*       R14 UNRSTD;                 /*                               */ 00444000
*     RFY                                                          0319 00445000
*      (RWORK1,                                                    0319 00446000
*       RWORK2,                                                    0319 00447000
*       RWORK3,                                                    0319 00448000
*       RWORK4) UNRSTD;             /*                               */ 00449000
*     IF PLHSAVE1^=TWO THEN         /* IF NOT LAST TIME              */ 00450000
         C     @10,@CF00155                                        0320 00451000
         BE    @RF00320                                            0320 00452000
*I08:                                                              0321 00453000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00454000
I08      DS    0H                                                  0322 00455000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00456000
         L     @15,@CV00906                                        0322 00457000
         BALR  @14,@15                                             0322 00458000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00459000
         BALR @11,0                                                     00460000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00461000
         USING *,@11                                                    00462000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00463000
         L     @11,=A(@PSTART)                                          00464000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00465000
         USING @PSTART,@11                                              00466000
*       END I08;                    /* FREE THE BUFFER               */ 00467000
*   END;                            /*                               */ 00468000
@RF00320 DS    0H                                                  0328 00469000
@DE00295 CLC   PLHSAVE1(4,RPLH),@CF00155                           0328 00470000
         BNE   @DL00295                                            0328 00471000
*   PLHSLRBA=PLHSAVE3;              /* STORE RBA OF 2ND LEVEL        */ 00472000
         L     @10,PLHSAVE3(,RPLH)                                 0329 00473000
         ST    @10,PLHSLRBA(,RPLH)                                 0329 00474000
*   CALL READSS;                    /* GO READ SEQUENCE SET AND    0330 00475000
*                                      RETURN TO CALLER              */ 00476000
         BAL   @14,READSS                                          0330 00477000
*                                                                  0331 00478000
*   /*****************************************************************/ 00479000
*   /*                                                               */ 00480000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00481000
*   /* IDAADVPH SUBROUTINE FOR ADVANCING PLACEHOLDER TO NEXT POSITION*/ 00482000
*   /* WHILE DOING BACKWARD PROCESSING * * * * * * * * * * * * * * * */ 00483000
*   /* * * * * * * * * * * * * * * * *                               */ 00484000
*   /*                                                               */ 00485000
*   /*****************************************************************/ 00486000
*                                                                  0331 00487000
*IDAADVPH:                                                         0331 00488000
*   ENTRY;                          /*                               */ 00489000
@EP00331 DS    0H                                                  0332 00490000
*   GEN(IDASVR14);                  /* SAVE REGISTER 14              */ 00491000
         IDASVR14                                                       00492000
*   RESPECIFY                                                      0333 00493000
*     R14 UNRSTD;                   /*                               */ 00494000
*   IF PLHASKBF=ON THEN             /* WERE BUFFERS REQUESTED        */ 00495000
         TM    PLHASKBF(RPLH),B'00100000'                          0334 00496000
         BNO   @RF00334                                            0334 00497000
*     DO;                           /* YES                           */ 00498000
*       RPARM1=ZERO;                /* ASK FOR LIMIT                 */ 00499000
         SLR   RPARM1,RPARM1                                       0336 00500000
*I09:                                                              0337 00501000
*       DO;                         /* IDACALL(IDAABF)               */ 00502000
I09      DS    0H                                                  0338 00503000
*         CALL IDAABF;              /* EXIT TO IDAABF                */ 00504000
         L     @15,@CV00905                                        0338 00505000
         BALR  @14,@15                                             0338 00506000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00507000
         BALR @11,0                                                     00508000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00509000
         USING *,@11                                                    00510000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00511000
         L     @11,=A(@PSTART)                                          00512000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00513000
         USING @PSTART,@11                                              00514000
*       END I09;                    /* GO ADD BUFFERS                */ 00515000
*     END;                          /*                               */ 00516000
*   IF PLHSKPER=ON|PLHRECP=PLHDBUFC->/* READ SKIP ON OR AT           */ 00517000
*       BUFCBAD THEN                /* BEGINNING OF BUFFER           */ 00518000
@RF00334 TM    PLHSKPER(RPLH),B'00100000'                          0345 00519000
         BO    @RT00345                                            0345 00520000
         L     @10,PLHDBUFC(,RPLH)                                 0345 00521000
         CLC   PLHRECP(4,RPLH),BUFCBAD(@10)                        0345 00522000
         BNE   @RF00345                                            0345 00523000
@RT00345 DS    0H                                                  0346 00524000
*     DO;                           /* YES                           */ 00525000
*       IF RPLUPD=ON THEN           /* UPDATE REQUEST                */ 00526000
         TM    RPLUPD(RRPL),B'00000010'                            0347 00527000
         BNO   @RF00347                                            0347 00528000
*         PLHRDEXC=ON;              /* YES, SET READ EXCLUSIVE FLAG     00529000
*                                      IN PLH                        */ 00530000
         OI    PLHRDEXC(RPLH),B'00001000'                          0348 00531000
*       ELSE                        /* NO                            */ 00532000
*         PLHRDEXC=OFF;             /* DONT NEED EXCL CTL            */ 00533000
         B     @RC00347                                            0349 00534000
@RF00347 NI    PLHRDEXC(RPLH),B'11110111'                          0349 00535000
*       PLHSKPER=OFF;               /* HOUSEKEEP SKIP FLAG           */ 00536000
@RC00347 NI    PLHSKPER(RPLH),B'11011111'                          0350 00537000
*GETNXBF:                                                          0351 00538000
*       IF AMBGSR=OFF&AMBLSR=OFF&   /* NOT DB/DC PROCESSING          */ 00539000
*           RPLKEY=ON&              /* AND KEYED MODE AND            */ 00540000
*           PLHIBUFC->BUFCRRD=ON THEN/* SEQUENCE SET IS INVALID      */ 00541000
GETNXBF  TM    AMBGSR(RAMB),B'01100000'                            0351 00542000
         BNZ   @RF00351                                            0351 00543000
         TM    RPLKEY(RRPL),B'10000000'                            0351 00544000
         BNO   @RF00351                                            0351 00545000
         L     @10,PLHIBUFC(,RPLH)                                 0351 00546000
         TM    BUFCRRD(@10),B'00100000'                            0351 00547000
         BNO   @RF00351                                            0351 00548000
*         DO;                       /* YES                           */ 00549000
*           PLHSAVE2=RPLOPTCD;      /* SAVE USERS OPTIONS            */ 00550000
         L     @10,RPLOPTCD(,RRPL)                                 0353 00551000
         ST    @10,PLHSAVE2(,RPLH)                                 0353 00552000
*           RPLDIR=ON;              /* FORCE DIRECT                  */ 00553000
*           RPLSEQ=OFF;             /* TURN OFF SEQUENTIAL           */ 00554000
         OI    RPLDIR(RRPL),B'01000000'                            0355 00555000
         NI    RPLSEQ(RRPL),B'11011111'                            0355 00556000
*           RPLLRD=OFF;             /* TURN OFF LAST RECORD          */ 00557000
         NI    RPLLRD(RRPL),B'11110111'                            0356 00558000
*           PLHRABWD=ON;            /* SET INTERNAL CALL BIT         */ 00559000
         OI    PLHRABWD(RPLH),B'00000100'                          0357 00560000
*           RPARM1=ADDR(PLHKEY);    /* SEARCH ON PLH KEY             */ 00561000
         L     RPARM1,PLHKEYPT(,RPLH)                              0358 00562000
*I10:                                                              0359 00563000
*           DO;                     /* IDACALL(IDA019RA)             */ 00564000
I10      DS    0H                                                  0360 00565000
*             CALL IDA019RA;        /* EXIT TO IDA019RA              */ 00566000
         L     @15,@CV00909                                        0360 00567000
         BALR  @14,@15                                             0360 00568000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00569000
         BALR @11,0                                                     00570000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00571000
         USING *,@11                                                    00572000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00573000
         L     @11,=A(@PSTART)                                          00574000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00575000
         USING @PSTART,@11                                              00576000
*           END I10;                /* CALL DIRECT RECORD LOC.       */ 00577000
*           PLHRABWD=OFF;           /* RESET INTERNAL BIT            */ 00578000
         NI    PLHRABWD(RPLH),B'11111011'                          0366 00579000
*           RPLOPTCD=PLHSAVE2;      /* RESTORE RPL OPTIONS           */ 00580000
         L     @10,PLHSAVE2(,RPLH)                                 0367 00581000
         ST    @10,RPLOPTCD(,RRPL)                                 0367 00582000
*           IF RPLERREG=ZERO THEN   /* ERROR ENCOUNTERED             */ 00583000
         CLI   RPLERREG(RRPL),0                                    0368 00584000
         BNE   @RF00368                                            0368 00585000
*             DO;                   /* NO                            */ 00586000
*               IF PLHRECP=PLHDBUFC->BUFCBAD THEN/* AT BEGINNING OF     00587000
*                                      THE BUFFER                    */ 00588000
         L     @10,PLHDBUFC(,RPLH)                                 0370 00589000
         CLC   PLHRECP(4,RPLH),BUFCBAD(@10)                        0370 00590000
         BE    @RT00370                                            0370 00591000
*                 GO TO GETNXBF;    /* YES, READ NEXT CI             */ 00592000
*               CALL MVBWD;         /* MOVE TO NEXT RECORD           */ 00593000
         BAL   @14,MVBWD                                           0372 00594000
*               CALL EXIT;          /* AND EXIT                      */ 00595000
         BAL   @14,EXIT                                            0373 00596000
*             END;                  /*                               */ 00597000
*           ELSE                    /* ERROR ENCOUNTERED SO          */ 00598000
*             GO TO IDAAPH01;       /* PROCESS IT                    */ 00599000
*         END;                      /*                               */ 00600000
*       RBUFC=PLHDBUFC;             /* POINT TO CURRENT BUFC         */ 00601000
@RF00351 L     RBUFC,PLHDBUFC(,RPLH)                               0377 00602000
*       PLHDDDD=BUFCDDDD;           /* SAVE RBA IN PLH.              */ 00603000
         L     @10,BUFCDDDD(,RBUFC)                                0378 00604000
         ST    @10,PLHDDDD(,RPLH)                                  0378 00605000
*I11:                                                              0379 00606000
*       DO;                         /* IDACALL(IDAFREEB)             */ 00607000
I11      DS    0H                                                  0380 00608000
*         CALL IDAFREEB;            /* EXIT TO IDAFREEB              */ 00609000
         L     @15,@CV00906                                        0380 00610000
         BALR  @14,@15                                             0380 00611000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00612000
         BALR @11,0                                                     00613000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00614000
         USING *,@11                                                    00615000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00616000
         L     @11,=A(@PSTART)                                          00617000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00618000
         USING @PSTART,@11                                              00619000
*       END I11;                    /* FREE THE BUFFER               */ 00620000
*I12:                                                              0386 00621000
*       DO;                         /* IDACALL(IDAGNXT)              */ 00622000
I12      DS    0H                                                  0387 00623000
*         CALL IDAGNXT;             /* EXIT TO IDAGNXT               */ 00624000
         L     @15,@CV00907                                        0387 00625000
         BALR  @14,@15                                             0387 00626000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00627000
         BALR @11,0                                                     00628000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00629000
         USING *,@11                                                    00630000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00631000
         L     @11,=A(@PSTART)                                          00632000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00633000
         USING @PSTART,@11                                              00634000
*       END I12;                    /* GET NEXT CONTROL INTRVL       */ 00635000
*       IF RPLERREG=ZERO THEN       /* BUFFER MGR ERROR              */ 00636000
         CLI   RPLERREG(RRPL),0                                    0393 00637000
         BNE   @RF00393                                            0393 00638000
*         DO;                       /* NO                            */ 00639000
*           RESPECIFY                                              0395 00640000
*            (RWORK1,                                              0395 00641000
*             RWORK2) RSTD;         /*                               */ 00642000
*           RPARM1=BUFCBAD;         /* POINT TO START OF BUFF        */ 00643000
         L     RPARM1,BUFCBAD(,RBUFC)                              0396 00644000
*           RWORK1=RPARM1+AMDCINV-  /* POINT TO CIDF IN              */ 00645000
*               LENGTH(IDACIDF);    /* BUFFER                        */ 00646000
*                                                                  0397 00647000
         L     @10,AMBDSB(,RAMB)                                   0397 00648000
         LR    RWORK1,RPARM1                                       0397 00649000
         AL    RWORK1,AMDCINV(,@10)                                0397 00650000
         SL    RWORK1,@CF00067                                     0397 00651000
*           /*********************************************************/ 00652000
*           /*                                                       */ 00653000
*           /* VALIDATE THE CIDF. IF INVALID TREAT LIKE DATA READ    */ 00654000
*           /* ERROR AS FAR AS POSITIONING IS CONCERNED.     @ZA31009*/ 00655000
*           /*                                                       */ 00656000
*           /*********************************************************/ 00657000
*                                                                  0398 00658000
*           IF RWORK1->IDACIDF=ZERO THEN/* CIDF = ZERO?      @ZA31009*/ 00659000
         ICM   @10,15,IDACIDF(RWORK1)                              0398 00660000
         BNZ   @RF00398                                            0398 00661000
*             DO;                   /* YES                   @ZA31009*/ 00662000
*               RPLDDDD=BUFCDDDD;   /* PASS RBA BACK         @ZA31009*/ 00663000
         L     @10,BUFCDDDD(,RBUFC)                                0400 00664000
         ST    @10,RPLDDDD(,RRPL)                                  0400 00665000
*               RPLERREG='08'X;     /* LOGICAL ERROR         @ZA31009*/ 00666000
         MVI   RPLERREG(RRPL),X'08'                                0401 00667000
*               RPLERRCD=RPLINCNV;  /* BAD CI                @ZA31009*/ 00668000
         MVI   RPLERRCD(RRPL),X'9C'                                0402 00669000
*               PLHSKPER=ON;        /* SKIP OVER CI          @ZA31009*/ 00670000
         OI    PLHSKPER(RPLH),B'00100000'                          0403 00671000
*               CALL EXIT;          /* EXIT MODULE           @ZA31009*/ 00672000
         BAL   @14,EXIT                                            0404 00673000
*             END;                  /* END ZERO CIDF         @ZA31009*/ 00674000
*                                                                  0405 00675000
*           /*********************************************************/ 00676000
*           /*                                                       */ 00677000
*           /* SEE IF A BUSY CI WAS READ IN. IF THE CI IS BUSY IT    */ 00678000
*           /* MEANS THAT CI SPLIT HAS BEEN INTERRUPTED AND CI       */ 00679000
*           /* REBUILD MUST BE CALLED IN ORDER TO EITHER CORRECT THE */ 00680000
*           /* CI OR SYNCHRONIZE ANY FURTHER PROCESSING.     @ZA31009*/ 00681000
*           /*                                                       */ 00682000
*           /*********************************************************/ 00683000
*                                                                  0406 00684000
*           IF RWORK1->CIDFBUSY=ON THEN/* IF INTRPT CI       @ZA31009*/ 00685000
@RF00398 TM    CIDFBUSY(RWORK1),B'10000000'                        0406 00686000
         BNO   @RF00406                                            0406 00687000
*             DO;                   /* SPLIT, FIX.           @ZA31009*/ 00688000
*I13:                                                              0408 00689000
*               DO;                 /* IDACALL(IDA019S6)             */ 00690000
I13      DS    0H                                                  0409 00691000
*                 CALL IDA019S6;    /* EXIT TO IDA019S6              */ 00692000
         L     @15,@CV00910                                        0409 00693000
         BALR  @14,@15                                             0409 00694000
*                 GEN(BALR @11,0);  /* LOAD ADDR OF REENTRY          */ 00695000
         BALR @11,0                                                     00696000
*                 GEN(USING *,@11); /* ESTABLISH ADDRESSING          */ 00697000
         USING *,@11                                                    00698000
*                 GEN(L     @11,=A(@PSTART));/* RELOAD BASE          */ 00699000
         L     @11,=A(@PSTART)                                          00700000
*                 GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING     */ 00701000
         USING @PSTART,@11                                              00702000
*               END I13;            /* CALL REBUILD          @ZA31009*/ 00703000
*               IF RPLERREG^=ZERO THEN/* IF ERROR,           @ZA31009*/ 00704000
         CLI   RPLERREG(RRPL),0                                    0415 00705000
         BE    @RF00415                                            0415 00706000
*                 CALL EXIT;        /* EXIT MODULE           @ZA31009*/ 00707000
         BAL   @14,EXIT                                            0416 00708000
*               RPARM1=PLHDBUFC->BUFCBAD;/* PTR TO BFR       @ZA31009*/ 00709000
@RF00415 L     @10,PLHDBUFC(,RPLH)                                 0417 00710000
         L     RPARM1,BUFCBAD(,@10)                                0417 00711000
*               RWORK1=RPARM1+AMDCINV-/* PTR TO CIDF IN      @ZA31009*/ 00712000
*                   LENGTH(IDACIDF);/* BUFFER                @ZA31009*/ 00713000
         L     @10,AMBDSB(,RAMB)                                   0418 00714000
         LR    RWORK1,RPARM1                                       0418 00715000
         AL    RWORK1,AMDCINV(,@10)                                0418 00716000
         SL    RWORK1,@CF00067                                     0418 00717000
*             END;                  /* END CI REBUILD        @ZA31009*/ 00718000
*           RWORK2=RWORK1-LENGTH(IDARDF);/* POINT TO 1ST RDF         */ 00719000
@RF00406 LR    RWORK2,RWORK1                                       0420 00720000
         SL    RWORK2,@CF00157                                     0420 00721000
*           RBUFC=RPARM1+RWORK1->CIDFOSET;/* POINT TO FREESPACE      */ 00722000
         LR    RBUFC,RPARM1                                        0421 00723000
         AH    RBUFC,CIDFOSET(,RWORK1)                             0421 00724000
*           IF RBUFC^>RPARM1|       /* IS BUFFER EMPTY OR            */ 00725000
*               (RWORK2->RDFNOT1=ON&/* NOT 1ST SPN RCD SEG           */ 00726000
*               RPLKEY=ON) THEN     /* AND KEYED MODE                */ 00727000
         CR    RBUFC,RPARM1                                        0422 00728000
         BNH   @RT00422                                            0422 00729000
         TM    RDFNOT1(RWORK2),B'00100000'                         0422 00730000
         BNO   @RF00422                                            0422 00731000
         TM    RPLKEY(RRPL),B'10000000'                            0422 00732000
         BO    @RT00422                                            0422 00733000
*             GO TO GETNXBF;        /* YES, GET ANOTHER              */ 00734000
*           IF RPLKEY=ON THEN       /* KEYED REQUEST                 */ 00735000
@RF00422 TM    RPLKEY(RRPL),B'10000000'                            0424 00736000
         BNO   @RF00424                                            0424 00737000
*             DO;                   /* YES                           */ 00738000
*               RWORK2=AMDRKP+RPARM1;/* POINT TO FIRST KEY           */ 00739000
         L     @10,AMBDSB(,RAMB)                                   0426 00740000
         LR    RWORK2,RPARM1                                       0426 00741000
         AH    RWORK2,AMDRKP(,@10)                                 0426 00742000
*               RBUFC=AMDKEYLN;     /* GET KEY LENGTH                */ 00743000
         LH    RBUFC,AMDKEYLN(,@10)                                0427 00744000
*               IF PLHKEY(1:RBUFC)^>/* IS PLH KEY LESS OR            */ 00745000
*                   RWORK2->KEY(1:RBUFC) THEN/* EQUAL TO RECORD KEY  */ 00746000
         L     @10,PLHKEYPT(,RPLH)                                 0428 00747000
         LR    @07,RBUFC                                           0428 00748000
         BCTR  @07,0                                               0428 00749000
         EX    @07,@SC01000                                        0428 00750000
         BNH   @RT00428                                            0428 00751000
*                 GO TO GETNXBF;    /* YES                           */ 00752000
*             END;                  /*                               */ 00753000
*           PLHRDFP=RWORK1;         /* POINT TO CIDF OF RECORD       */ 00754000
@RF00424 ST    RWORK1,PLHRDFP(,RPLH)                               0431 00755000
*           RESPECIFY                                              0432 00756000
*             RWORK1 UNRSTD;        /*                               */ 00757000
*           PLHFSP=RPARM1+PLHRDFP-> /* SET FREE SPACE POINTER        */ 00758000
*               CIDFOSET;           /* IN PLH                        */ 00759000
         L     @10,PLHRDFP(,RPLH)                                  0433 00760000
         LR    @07,RPARM1                                          0433 00761000
         AH    @07,CIDFOSET(,@10)                                  0433 00762000
         ST    @07,PLHFSP(,RPLH)                                   0433 00763000
*           PLHRECP=PLHFSP;         /* START LAST RECORD POINTER AT     00764000
*                                      EXTREME END                   */ 00765000
         ST    @07,PLHRECP(,RPLH)                                  0434 00766000
*           PLHRDFP=PLHFSP+PLHRDFP->CIDFLL-/* START RDF POINTER 1 RDF*/ 00767000
*               LENGTH(IDARDF);     /* TO THE LEFT OF THE LEFTMOST 0435 00768000
*                                      RDF                           */ 00769000
         AH    @07,CIDFLL(,@10)                                    0435 00770000
         SL    @07,@CF00157                                        0435 00771000
         ST    @07,PLHRDFP(,RPLH)                                  0435 00772000
*           PLHRDFC=ONE;            /* FAKE COUNT AT ONE             */ 00773000
         MVC   PLHRDFC(2,RPLH),@CH00053                            0436 00774000
*           CALL MVBWD;             /* GO SET PLH POINTERS           */ 00775000
         BAL   @14,MVBWD                                           0437 00776000
*           IF RPLKEY=ON THEN       /* KEYED REQUEST                 */ 00777000
         TM    RPLKEY(RRPL),B'10000000'                            0438 00778000
         BNO   @RF00438                                            0438 00779000
*             DO;                   /* YES                           */ 00780000
*               RWORK2=AMDRKP+PLHRECP;/* POINT AT LAST KEY           */ 00781000
         L     @10,AMBDSB(,RAMB)                                   0440 00782000
         LH    RWORK2,AMDRKP(,@10)                                 0440 00783000
         AL    RWORK2,PLHRECP(,RPLH)                               0440 00784000
*               DO WHILE PLHKEY(1:RBUFC)^>/* LOOP TO LOCATE KEY LESS */ 00785000
*                     RWORK2->KEY(1:RBUFC);/* THAN KEY IN PLH        */ 00786000
         B     @DE00441                                            0441 00787000
@DL00441 DS    0H                                                  0442 00788000
*                 CALL MVBWD;       /* MOVE TO THE NEXT RECORD AT THE   00789000
*                                      LEFT                          */ 00790000
         BAL   @14,MVBWD                                           0442 00791000
*                 RWORK2=PLHRECP+AMDRKP;/* GET ADDRESS OF KEY        */ 00792000
         L     @10,AMBDSB(,RAMB)                                   0443 00793000
         LH    RWORK2,AMDRKP(,@10)                                 0443 00794000
         AL    RWORK2,PLHRECP(,RPLH)                               0443 00795000
*               END;                /*                               */ 00796000
@DE00441 L     @10,PLHKEYPT(,RPLH)                                 0444 00797000
         LR    @07,RBUFC                                           0444 00798000
         BCTR  @07,0                                               0444 00799000
         EX    @07,@SC01000                                        0444 00800000
         BNH   @DL00441                                            0444 00801000
*             END;                  /*                               */ 00802000
*           CALL EXIT;              /* RETURN TO CALLER              */ 00803000
@RF00438 BAL   @14,EXIT                                            0446 00804000
*           RESPECIFY                                              0447 00805000
*             RWORK2 UNRSTD;        /*                               */ 00806000
*         END;                      /*                               */ 00807000
*       ELSE                        /* ERROR FROM BUFF. MGR.         */ 00808000
*IDAAPH01:                                                         0449 00809000
*         DO;                       /*                               */ 00810000
         B     @RC00393                                            0449 00811000
@RF00393 DS    0H                                                  0449 00812000
IDAAPH01 DS    0H                                                  0450 00813000
*           IF RPLERRCD=RPLEXCL THEN/* EXCLUSIVE CONTROL ERROR       */ 00814000
         CLI   RPLERRCD(RRPL),20                                   0450 00815000
         BNE   @RF00450                                            0450 00816000
*             DO;                   /* YES                           */ 00817000
*               PLHDSCAN=ON;        /* SET SCANDATA FLAG             */ 00818000
*               PLHNOADV=OFF;       /* ADVANCE ON RETRY              */ 00819000
         OI    PLHDSCAN(RPLH),B'00000001'                          0453 00820000
         NI    PLHNOADV(RPLH),B'11110111'                          0453 00821000
*             END;                  /*                               */ 00822000
*           CALL EXIT;              /* RETURN TO CALLER              */ 00823000
@RF00450 BAL   @14,EXIT                                            0455 00824000
*         END;                      /*                               */ 00825000
*     END;                          /*                               */ 00826000
@RC00393 DS    0H                                                  0458 00827000
*   CALL MVBWD;                     /* MOVE TO NEXT RECORD           */ 00828000
@RF00345 BAL   @14,MVBWD                                           0458 00829000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 00830000
         BAL   @14,EXIT                                            0459 00831000
*                                                                  0460 00832000
*   /*****************************************************************/ 00833000
*   /*                                                               */ 00834000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00835000
*   /* IDARVRS1 ROUTINE TO CHANGE THE CHAINING OF BUFFERS TO ORDERING*/ 00836000
*   /* BY INPUT RBA * * * * * * * * * * * * * * * * * * * * * * * * **/ 00837000
*   /* * * * * * *                                                   */ 00838000
*   /*                                                               */ 00839000
*   /*****************************************************************/ 00840000
*                                                                  0460 00841000
*IDARVRS1:                                                         0460 00842000
*   ENTRY;                          /*                               */ 00843000
@EP00460 DS    0H                                                  0461 00844000
*   RESPECIFY                                                      0461 00845000
*    (RWORK1,                                                      0461 00846000
*     RWORK2,                                                      0461 00847000
*     RWORK3,                                                      0461 00848000
*     RWORK4,                                                      0461 00849000
*     RWORK5,                                                      0461 00850000
*     R14) RSTD;                    /*                               */ 00851000
*   IF PLHBFRNO^>ONE THEN           /* MORE THAN 1 BUFFER            */ 00852000
         CLI   PLHBFRNO(RPLH),1                                    0462 00853000
         BH    @RF00462                                            0462 00854000
*     DO;                           /* NO                            */ 00855000
*       RBUFC=PLHDBUFC;             /* SET BUFFER PTR                */ 00856000
         L     RBUFC,PLHDBUFC(,RPLH)                               0464 00857000
*       PLHRVRS=OFF;                /* CLEAR REVERSE BIT             */ 00858000
         NI    PLHRVRS(RPLH),B'11110111'                           0465 00859000
*       RETURN;                     /* BACK TO CALLER                */ 00860000
@EL00001 DS    0H                                                  0466 00861000
@EF00001 DS    0H                                                  0466 00862000
@ER00001 BR    @14                                                 0466 00863000
*     END;                          /*                               */ 00864000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 00865000
*                                                                  0468 00866000
@RF00462 DS    0H                                                  0468 00867000
         IDASVR14                                                       00868000
*   /*****************************************************************/ 00869000
*   /*                                                               */ 00870000
*   /* FIND THE SMALLEST INPUT RBA IN THE CHAIN                      */ 00871000
*   /*                                                               */ 00872000
*   /*****************************************************************/ 00873000
*                                                                  0469 00874000
*   RWORK1=PLHDBUFC;                /* START AT 1ST BUFC             */ 00875000
         L     RWORK1,PLHDBUFC(,RPLH)                              0469 00876000
*   RWORK1->BUFCNXT1=ZERO;          /* CLEAR CHAIN                   */ 00877000
         SLR   @15,@15                                             0470 00878000
         ST    @15,BUFCNXT1(,RWORK1)                               0470 00879000
*   RWORK3=RWORK1->BUFCNXT2;        /* POINT TO NEXT BUFC IN THE   0471 00880000
*                                      CHAIN                         */ 00881000
         L     RWORK3,BUFCNXT2-1(,RWORK1)                          0471 00882000
         LA    RWORK3,0(,RWORK3)                                   0471 00883000
*   RESPECIFY                                                      0472 00884000
*     RWORK0 RSTD;                  /*                               */ 00885000
*   RWORK0=RWORK1->BUFCDDDD;        /* GET INPUT RBA FROM FIRST BUFC */ 00886000
         L     RWORK0,BUFCDDDD(,RWORK1)                            0473 00887000
*   DO RWORK5=TWO TO PLHBFRNO;      /* LOOP FROM THE 2ND TO THE LAST    00888000
*                                      BUFC IN CHAIN                 */ 00889000
         LA    RWORK5,2                                            0474 00890000
         B     @DE00474                                            0474 00891000
@DL00474 DS    0H                                                  0475 00892000
*     RWORK3->BUFCNXT1=ZERO;        /* CLEAR CHAIN FIELD             */ 00893000
         SLR   @15,@15                                             0475 00894000
         ST    @15,BUFCNXT1(,RWORK3)                               0475 00895000
*     RWORK2=RWORK3->BUFCDDDD;      /* PICK UP INPUT RBA             */ 00896000
         L     RWORK2,BUFCDDDD(,RWORK3)                            0476 00897000
*     IF RWORK2<RWORK0 THEN         /* IS THIS RBA LESS THAN THE   0477 00898000
*                                      SMALLEST FOUND SO FAR         */ 00899000
         CLR   RWORK2,RWORK0                                       0477 00900000
         BNL   @RF00477                                            0477 00901000
*       DO;                         /* YES                           */ 00902000
*         RWORK0=RWORK2;            /* MAKE IT NEW SMALLEST          */ 00903000
         LR    RWORK0,RWORK2                                       0479 00904000
*         RWORK1=RWORK3;            /* SAVE ADDRESS OF BUFC WITH   0480 00905000
*                                      SMALLEST RBA                  */ 00906000
         LR    RWORK1,RWORK3                                       0480 00907000
*       END;                        /*                               */ 00908000
*     RWORK3=RWORK3->BUFCNXT2;      /* MOVE TO NEXT BUFC             */ 00909000
@RF00477 L     @15,BUFCNXT2-1(,RWORK3)                             0482 00910000
         LA    @15,0(,@15)                                         0482 00911000
         LR    RWORK3,@15                                          0482 00912000
*   END;                            /* END LOOP TO FIND SMALLEST   0483 00913000
*                                      INPUT RBA                     */ 00914000
         AL    RWORK5,@CF00053                                     0483 00915000
@DE00474 SLR   @15,@15                                             0483 00916000
         IC    @15,PLHBFRNO(,RPLH)                                 0483 00917000
         CR    RWORK5,@15                                          0483 00918000
         BNH   @DL00474                                            0483 00919000
*   RBUFC=RWORK1;                   /* SAVE ADDRESS OF LOWEST RBA FOR   00920000
*                                      CALLER                        */ 00921000
*                                                                  0484 00922000
         LR    RBUFC,RWORK1                                        0484 00923000
*   /*****************************************************************/ 00924000
*   /*                                                               */ 00925000
*   /* RECHAIN BUFFERS IN ORDER OF INPUT RBA                         */ 00926000
*   /*                                                               */ 00927000
*   /*****************************************************************/ 00928000
*                                                                  0485 00929000
*   DO RWORK5=TWO TO PLHBFRNO;      /* RECHAIN ALL BUT LAST          */ 00930000
         LA    RWORK5,2                                            0485 00931000
         B     @DE00485                                            0485 00932000
@DL00485 DS    0H                                                  0486 00933000
*     R14=ZERO;                     /* SHOW NO LARGER RBA HAS BEEN 0486 00934000
*                                      FOUND                         */ 00935000
         SLR   R14,R14                                             0486 00936000
*     RWORK3=RWORK1->BUFCNXT2;      /* START OF SEARCH               */ 00937000
         L     RWORK3,BUFCNXT2-1(,RWORK1)                          0487 00938000
         LA    RWORK3,0(,RWORK3)                                   0487 00939000
*     DO RWORK2=TWO TO PLHBFRNO;    /* LOOP THRU ALL BUFCS IN CHAIN     00940000
*                                      EXCEPT CURRENT                */ 00941000
         LA    RWORK2,2                                            0488 00942000
         B     @DE00488                                            0488 00943000
@DL00488 DS    0H                                                  0489 00944000
*       IF RWORK3->BUFCDDDD^<RWORK0 THEN/* IS RBA GREATER THAN OR  0489 00945000
*                                      EQUAL LAST SAVED RBA          */ 00946000
         L     @15,BUFCDDDD(,RWORK3)                               0489 00947000
         CLR   @15,RWORK0                                          0489 00948000
         BL    @RF00489                                            0489 00949000
*         DO;                       /* YES                           */ 00950000
*           IF RWORK3->BUFCNXT1=ZERO&/* NO LARGER FOUND OR           */ 00951000
*               (RWORK3->BUFCDDDD-RWORK0<R14/* THIS ONE IS CLOSER    */ 00952000
*               |RWORK1->BUFCNXT1=ZERO) THEN/* THAN ANY SO FAR UNUSED*/ 00953000
         SLR   @10,@10                                             0491 00954000
         C     @10,BUFCNXT1(,RWORK3)                               0491 00955000
         BNE   @RF00491                                            0491 00956000
         SLR   @15,RWORK0                                          0491 00957000
         CLR   @15,R14                                             0491 00958000
         BL    @RT00491                                            0491 00959000
         C     @10,BUFCNXT1(,RWORK1)                               0491 00960000
         BNE   @RF00491                                            0491 00961000
@RT00491 DS    0H                                                  0492 00962000
*             DO;                   /* YES                           */ 00963000
*               R14=RWORK3->BUFCDDDD-RWORK0;/* SAVE DIFFERENCE       */ 00964000
         L     R14,BUFCDDDD(,RWORK3)                               0493 00965000
         SLR   R14,RWORK0                                          0493 00966000
*               RWORK1->BUFCNXT1=RWORK3;/* ENTER ALTERNATE CHAIN     */ 00967000
         ST    RWORK3,BUFCNXT1(,RWORK1)                            0494 00968000
*             END;                  /*                               */ 00969000
*         END;                      /*                               */ 00970000
@RF00491 DS    0H                                                  0497 00971000
*       RWORK3=RWORK3->BUFCNXT2;    /* MOVE TO NEXT BUFC             */ 00972000
@RF00489 L     @15,BUFCNXT2-1(,RWORK3)                             0497 00973000
         LA    @15,0(,@15)                                         0497 00974000
         LR    RWORK3,@15                                          0497 00975000
*     END;                          /*                               */ 00976000
         AL    RWORK2,@CF00053                                     0498 00977000
@DE00488 SLR   @15,@15                                             0498 00978000
         IC    @15,PLHBFRNO(,RPLH)                                 0498 00979000
         CLR   RWORK2,@15                                          0498 00980000
         BNH   @DL00488                                            0498 00981000
*     RWORK1=RWORK1->BUFCNXT1;      /* NEW BUFC TO GET CHAIN         */ 00982000
         L     RWORK1,BUFCNXT1(,RWORK1)                            0499 00983000
*     RWORK0=RWORK1->BUFCDDDD;      /* RBA IN THE BUFC FOR COMPARSION   00984000
*                                      PURPOSES                      */ 00985000
         L     RWORK0,BUFCDDDD(,RWORK1)                            0500 00986000
*   END;                            /*                               */ 00987000
         AL    RWORK5,@CF00053                                     0501 00988000
@DE00485 SLR   @15,@15                                             0501 00989000
         IC    @15,PLHBFRNO(,RPLH)                                 0501 00990000
         CR    RWORK5,@15                                          0501 00991000
         BNH   @DL00485                                            0501 00992000
*   RWORK1->BUFCNXT1=RBUFC;         /* POINT HIGHEST TO LOWEST       */ 00993000
         ST    RBUFC,BUFCNXT1(,RWORK1)                             0502 00994000
*   PLHRVRS=OFF;                    /* RESET REVERSE INDICATOR       */ 00995000
         NI    PLHRVRS(RPLH),B'11110111'                           0503 00996000
*   RFY                                                            0504 00997000
*    (RWORK0,                                                      0504 00998000
*     RWORK1,                                                      0504 00999000
*     RWORK2,                                                      0504 01000000
*     RWORK3,                                                      0504 01001000
*     RWORK4,                                                      0504 01002000
*     RWORK5,                                                      0504 01003000
*     R14) UNRSTD;                                                 0504 01004000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01005000
         BAL   @14,EXIT                                            0505 01006000
*                                                                  0506 01007000
*   /*****************************************************************/ 01008000
*   /*                                                               */ 01009000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01010000
*   /* BACKUP SUBROUTINE FUNCTION: GIVEN AN INDEX RECORD WHICH HAS   */ 01011000
*   /* PREVIOUSLY BEEN SEARCHED BY SCIB (IDA019RC), THIS ROUTINE     */ 01012000
*   /* LOCATES THE INDEX ENTRY JUST PREVIOUS TO (NEXT LOWER KEY) THE */ 01013000
*   /* ENTRY FOUND BY SCIB INPUT: RWORK3 = ADDRESS OF INDEX SEARCH   */ 01014000
*   /* PARAMETER LIST USED BY SCIB RBUFC = ADDRESS OF FIRST BYTE OF  */ 01015000
*   /* INDEX BUFFER OUTPUT: R15 = 0 INDICATES PREVIOUS ENTRY FOUND   */ 01016000
*   /* R15 = 4 INDICATES NO PREVIOUS ENTRY EXISTS RPARM1 = POINTER   */ 01017000
*   /* FIELD OF PREVIOUS ENTRY CONVERTED TO AN RBA * * * * * * * * * */ 01018000
*   /* * * * * * * * * * * * * * * * * * * * * * *                   */ 01019000
*   /*                                                               */ 01020000
*   /*****************************************************************/ 01021000
*                                                                  0506 01022000
*BACKUP:                                                           0506 01023000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01024000
         B     @PB00002                                            0506 01025000
BACKUP   DS    0H                                                  0507 01026000
*   RESPECIFY                                                      0507 01027000
*    (RWORK0,                                                      0507 01028000
*     RWORK1,                                                      0507 01029000
*     RWORK2,                                                      0507 01030000
*     RWORK3,                                                      0507 01031000
*     R14) RSTD;                    /*                               */ 01032000
*   RWORK1=RBUFC+RBUFC->IXHLL;      /* POINT TO END OF RECORD        */ 01033000
         LR    RWORK1,RBUFC                                        0508 01034000
         LH    @15,IXHLL(,RBUFC)                                   0508 01035000
         N     @15,@CF01002                                        0508 01036000
         ALR   RWORK1,@15                                          0508 01037000
*   RWORK0=RBUFC->IXHFLPLN;         /* PICK UP F+L+POINTER LL        */ 01038000
         SLR   RWORK0,RWORK0                                       0509 01039000
         IC    RWORK0,IXHFLPLN(,RBUFC)                             0509 01040000
*   RWORK1=RWORK1-RWORK0;           /* POINT TO F FIELD OF LAST    0510 01041000
*                                      RECORD                        */ 01042000
         SLR   RWORK1,RWORK0                                       0510 01043000
*   IF RWORK1=IXSHEP THEN           /* IS HIT ENTRY THE LAST ENTRY IN   01044000
*                                      RECORD                        */ 01045000
         C     RWORK1,IXSHEP(,RWORK3)                              0511 01046000
         BNE   @RF00511                                            0511 01047000
*     DO;                           /* YES                           */ 01048000
*       RESPECIFY                                                  0513 01049000
*         R15 RSTD;                 /*                               */ 01050000
*       R15=FOUR;                   /* SHOW NO N-1 ENTRY             */ 01051000
         LA    R15,4                                               0514 01052000
*       RETURN;                     /* RETURN TO CALLER              */ 01053000
@EL00002 DS    0H                                                  0515 01054000
@EF00002 DS    0H                                                  0515 01055000
@ER00002 BR    @14                                                 0515 01056000
*       RESPECIFY                                                  0516 01057000
*         R15 UNRSTD;               /*                               */ 01058000
*     END;                          /*                               */ 01059000
*   IF IXSHEP=IXSLEP THEN           /* IS PRECEEDING ENTRY A SECTION */ 01060000
@RF00511 CLC   IXSHEP(4,RWORK3),IXSLEP(RWORK3)                     0518 01061000
         BNE   @RF00518                                            0518 01062000
*     DO;                           /* YES                           */ 01063000
*       RWORK2=IXSSEP;              /* SET TARGET ADDRESS AT SECTION    01064000
*                                      ENTRY HIT                     */ 01065000
         L     RWORK2,IXSSEP(,RWORK3)                              0520 01066000
*       RWORK1=RBUFC+RBUFC->IXHSEO; /* SET STARTING ADDRESS AT FIRST    01067000
*                                      SECTION                       */ 01068000
         LR    RWORK1,RBUFC                                        0521 01069000
         AH    RWORK1,IXHSEO(,RBUFC)                               0521 01070000
*       RPARM1=RWORK1;              /* SAVE FOR N-1 ENTRY            */ 01071000
         LR    RPARM1,RWORK1                                       0522 01072000
*       DO WHILE RWORK1>RWORK2;     /* LOOP STOPS WHEN HIT ENTRY IS     01073000
*                                      ENCOUNTERED                   */ 01074000
         B     @DE00523                                            0523 01075000
@DL00523 DS    0H                                                  0524 01076000
*         RPARM1=RWORK1;            /* SAVE N-1                      */ 01077000
         LR    RPARM1,RWORK1                                       0524 01078000
*         RWORK1=RWORK1-RWORK1->IBFLPL;/* BACK POINTER ACROSS KEY    */ 01079000
         SLR   @15,@15                                             0525 01080000
         IC    @15,IBFLPL(,RWORK1)                                 0525 01081000
         SLR   RWORK1,@15                                          0525 01082000
*         RWORK1=RWORK1-LENGTH(IXSELL);/* BACK POINTER ACROSS LL     */ 01083000
         BCTR  RWORK1,0                                            0526 01084000
         BCTR  RWORK1,0                                            0526 01085000
*         RWORK1=RPARM1-RWORK1->IXSELL;/* MOVE TO NEXT SECTION       */ 01086000
         LR    @15,RPARM1                                          0527 01087000
         SLR   @10,@10                                             0527 01088000
         ICM   @10,3,IXSELL(RWORK1)                                0527 01089000
         SLR   @15,@10                                             0527 01090000
         LR    RWORK1,@15                                          0527 01091000
*       END;                        /*                               */ 01092000
@DE00523 CLR   RWORK1,RWORK2                                       0528 01093000
         BH    @DL00523                                            0528 01094000
*     END;                          /* END OF SECTION SEARCH         */ 01095000
*   ELSE                            /*                               */ 01096000
*     DO;                           /*                               */ 01097000
         B     @RC00518                                            0530 01098000
@RF00518 DS    0H                                                  0531 01099000
*       RWORK1=IXSLEP;              /* START SEARCH AT LOW ENTRY IN     01100000
*                                      SECTION                       */ 01101000
         L     RWORK1,IXSLEP(,RWORK3)                              0531 01102000
*       RWORK2=IXSHEP;              /* SET TARGET ADDRESS AT HIT   0532 01103000
*                                      ENTRY                         */ 01104000
         L     RWORK2,IXSHEP(,RWORK3)                              0532 01105000
*       RPARM1=RWORK1;              /* SAVE N-1 ENTRY ADDRESS        */ 01106000
         LR    RPARM1,RWORK1                                       0533 01107000
*       DO WHILE RWORK1>RWORK2;     /* LOOP STOPS WHEN HIT ENTRY IS     01108000
*                                      FOUND                         */ 01109000
         B     @DE00534                                            0534 01110000
@DL00534 DS    0H                                                  0535 01111000
*         RPARM1=RWORK1;            /* SAVE N-1                      */ 01112000
         LR    RPARM1,RWORK1                                       0535 01113000
*         RWORK1=RWORK1-RPARM1->IBFLPL-/* BACKUP OVER KEY FIELD      */ 01114000
*             RWORK0;               /* POINTER, AND L FIELD          */ 01115000
         LR    @15,RWORK1                                          0536 01116000
         SLR   @10,@10                                             0536 01117000
         IC    @10,IBFLPL(,RPARM1)                                 0536 01118000
         SLR   @15,@10                                             0536 01119000
         SLR   @15,RWORK0                                          0536 01120000
         LR    RWORK1,@15                                          0536 01121000
*       END;                        /*                               */ 01122000
@DE00534 CLR   RWORK1,RWORK2                                       0537 01123000
         BH    @DL00534                                            0537 01124000
*     END;                          /* END NON-SECTION SEARCH        */ 01125000
*   RESPECIFY                                                      0539 01126000
*     RWORK4 RSTD;                  /*                               */ 01127000
@RC00518 DS    0H                                                  0540 01128000
*   RESPECIFY                                                      0540 01129000
*     RWORK0 UNRSTD;                /*                               */ 01130000
*   RWORK1=ZERO;                    /* CLEAR REGISTER TO CONTAIN   0541 01131000
*                                      POINTER                       */ 01132000
         SLR   RWORK1,RWORK1                                       0541 01133000
*   RWORK4=RPARM1+LENGTH(IBFLPF)+   /* POINT TO POINTER FIELD        */ 01134000
*       LENGTH(IBFLPL);             /* OF N-1 ENTRY                  */ 01135000
         LA    RWORK4,2                                            0542 01136000
         ALR   RWORK4,RPARM1                                       0542 01137000
*   RWORK2=RBUFC->IXHPTLS;          /* GET MASK FROM HEADER          */ 01138000
         SLR   RWORK2,RWORK2                                       0543 01139000
         IC    RWORK2,IXHPTLS(,RBUFC)                              0543 01140000
*   GEN;                                                           0544 01141000
    EX     RWORK2,INSERT                   /* EXTRACT THE POINTER    */ 01142000
*   RESPECIFY                                                      0545 01143000
*    (RWORK2,                                                      0545 01144000
*     RWORK4) UNRSTD;               /*                               */ 01145000
*   RPARM1=RWORK1*AMDCINV+          /* CONVERT POINTER TO RBA        */ 01146000
*       RBUFC->IXHBRBA;             /* FOR RETURN TO CALLER          */ 01147000
         L     @15,AMBDSB(,RAMB)                                   0546 01148000
         LR    @09,RWORK1                                          0546 01149000
         M     @08,AMDCINV(,@15)                                   0546 01150000
         AL    @09,IXHBRBA(,RBUFC)                                 0546 01151000
         LR    RPARM1,@09                                          0546 01152000
*   RESPECIFY                                                      0547 01153000
*     RWORK1 UNRSTD;                /*                               */ 01154000
*   RESPECIFY                                                      0548 01155000
*     R15 RSTD;                     /*                               */ 01156000
*   R15=ZERO;                       /* SHOW N-1 FOUND                */ 01157000
         SLR   R15,R15                                             0549 01158000
*   RESPECIFY                                                      0550 01159000
*     R14 UNRSTD;                   /*                               */ 01160000
*   END BACKUP;                     /*                               */ 01161000
         B     @EL00002                                            0551 01162000
*   RESPECIFY                                                      0552 01163000
*     R15 UNRSTD;                   /*                               */ 01164000
*                                                                  0553 01165000
*   /*****************************************************************/ 01166000
*   /*                                                               */ 01167000
*   /* READSS SUBROUTINE FUNCTION- READS THE SEQUENCE SET WHICH HAS  */ 01168000
*   /* BEEN DETERMINED TO BE THE PREVIOUS SEQUENCE SET AND DECIDES IF*/ 01169000
*   /* IT ACTUALLY PRECEEDS THE CURRENT SEQUENCE SET. IF NOT, A      */ 01170000
*   /* HORIZONTAL SEARCH IS USED TO LOCATE THE PRECEEDING SEQUENCE   */ 01171000
*   /* SET                                                           */ 01172000
*   /*                                                               */ 01173000
*   /*****************************************************************/ 01174000
*                                                                  0553 01175000
*READSS:                            /* SUBROUTINE NAME               */ 01176000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01177000
READSS   DS    0H                                                  0554 01178000
*   RFY                                                            0554 01179000
*     R14 RSTD;                     /* PROTECT R14                   */ 01180000
*   R14=ADDR(PLHIXSPL);             /* POINT TO INDEX LIST           */ 01181000
         LA    R14,PLHIXSPL(,RPLH)                                 0555 01182000
*   R14->IXSILN=ONE;                /* SET LEVEL AT ONE              */ 01183000
         MVI   IXSILN(R14),X'01'                                   0556 01184000
*   RFY                                                            0557 01185000
*     R14 UNRSTD;                   /* FREE REG 14                   */ 01186000
*   PLHSAVE1=ZERO;                  /* CLEAR READ COUNT              */ 01187000
         SLR   @10,@10                                             0558 01188000
         ST    @10,PLHSAVE1(,RPLH)                                 0558 01189000
*   DO UNTIL PLHSAVE2=PLHSSRBA;     /* EXIT WHEN HORIZONTAL POINTER     01190000
*                                      EQUALS CURRENT SEQUENCE SET   */ 01191000
@DL00559 DS    0H                                                  0560 01192000
*I14:                                                              0560 01193000
*     DO;                           /* IDACALL(IDAFREEB)             */ 01194000
I14      DS    0H                                                  0561 01195000
*       CALL IDAFREEB;              /* EXIT TO IDAFREEB              */ 01196000
         L     @15,@CV00906                                        0561 01197000
         BALR  @14,@15                                             0561 01198000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01199000
         BALR @11,0                                                     01200000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01201000
         USING *,@11                                                    01202000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01203000
         L     @11,=A(@PSTART)                                          01204000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01205000
         USING @PSTART,@11                                              01206000
*     END I14;                      /* FREE BUFFER                   */ 01207000
*     PLHSSR=ON;                    /* INDICATE SEQ SET READ         */ 01208000
         OI    PLHSSR(RPLH),B'00010000'                            0567 01209000
*     RPARM1=PLHSAVE2;              /* GET RBA OF RECORD             */ 01210000
         L     @10,PLHSAVE2(,RPLH)                                 0568 01211000
         LR    RPARM1,@10                                          0568 01212000
*     PLHSAVE3=PLHSAVE2;            /* HOLD RBA OF RECORD            */ 01213000
         ST    @10,PLHSAVE3(,RPLH)                                 0569 01214000
*I15:                                                              0570 01215000
*     DO;                           /* IDACALL(IDAGRB)               */ 01216000
I15      DS    0H                                                  0571 01217000
*       CALL IDAGRB;                /* EXIT TO IDAGRB                */ 01218000
         L     @15,@CV00908                                        0571 01219000
         BALR  @14,@15                                             0571 01220000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01221000
         BALR @11,0                                                     01222000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01223000
         USING *,@11                                                    01224000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01225000
         L     @11,=A(@PSTART)                                          01226000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01227000
         USING @PSTART,@11                                              01228000
*     END I15;                      /* READ RECORD                   */ 01229000
*     IF RPLERREG^=ZERO THEN        /* IF I/O ERROR HAS HIT,         */ 01230000
         CLI   RPLERREG(RRPL),0                                    0577 01231000
         BE    @RF00577                                            0577 01232000
*       CALL EXIT;                  /* LEAVE IMMEDIATELY             */ 01233000
         BAL   @14,EXIT                                            0578 01234000
*     PLHSAVE2=BUFCBAD->IXHHP;      /* SAVE HORIZONTAL POINTER       */ 01235000
@RF00577 L     @10,BUFCBAD(,RBUFC)                                 0579 01236000
         L     @10,IXHHP(,@10)                                     0579 01237000
         ST    @10,PLHSAVE2(,RPLH)                                 0579 01238000
*     PLHSAVE1=PLHSAVE1+ONE;        /* INCREMENT READ COUNT          */ 01239000
         LA    @10,1                                               0580 01240000
         AL    @10,PLHSAVE1(,RPLH)                                 0580 01241000
         ST    @10,PLHSAVE1(,RPLH)                                 0580 01242000
*   END;                            /*                               */ 01243000
@DE00559 CLC   PLHSAVE2(4,RPLH),PLHSSRBA(RPLH)                     0581 01244000
         BNE   @DL00559                                            0581 01245000
*   PLHSSRBA=PLHSAVE3;              /* SAVE CURRENT RBA              */ 01246000
         L     @10,PLHSAVE3(,RPLH)                                 0582 01247000
         ST    @10,PLHSSRBA(,RPLH)                                 0582 01248000
*   IF PLHSAVE1>ONE THEN            /* IF MORE THAN ONE READ         */ 01249000
         CLC   PLHSAVE1(4,RPLH),@CF00053                           0583 01250000
         BNH   @RF00583                                            0583 01251000
*     PLHSLVLD=OFF;                 /* SET 2ND LEVEL INVALID         */ 01252000
         NI    PLHSLVLD(RPLH),B'11011111'                          0584 01253000
*   RFY                                                            0585 01254000
*     R15 RSTD;                     /*                               */ 01255000
@RF00583 DS    0H                                                  0586 01256000
*   R15=ZERO;                       /* SET OK CODE FOR CALLER        */ 01257000
         SLR   R15,R15                                             0586 01258000
*   CALL EXIT;                      /* RETURN TO CALLER              */ 01259000
         BAL   @14,EXIT                                            0587 01260000
*   RFY                                                            0588 01261000
*     R15 UNRSTD;                   /*                               */ 01262000
*   END READSS;                     /* END OF SUBROUTINE             */ 01263000
@EL00003 DS    0H                                                  0589 01264000
@EF00003 DS    0H                                                  0589 01265000
@ER00003 BR    @14                                                 0589 01266000
*                                                                  0590 01267000
*   /*****************************************************************/ 01268000
*   /*                                                               */ 01269000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01270000
*   /* MOVE TO PREVIOUS RECORD PROCEDURE * * * * * * * * * * * * * * */ 01271000
*   /* * * * * * * * * * * * * * * * * *                             */ 01272000
*   /*                                                               */ 01273000
*   /*****************************************************************/ 01274000
*                                                                  0590 01275000
*MVBWD:                                                            0590 01276000
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);/*                             */ 01277000
MVBWD    DS    0H                                                  0591 01278000
*   RESPECIFY                                                      0591 01279000
*     R14 RSTD;                     /*                               */ 01280000
*   IF PLHRDFC>ONE THEN             /* HAS THIS COLLECTION OF FIXED     01281000
*                                      LENGTH RECORDS BEEN PROCESSED */ 01282000
         LH    @15,PLHRDFC(,RPLH)                                  0592 01283000
         C     @15,@CF00053                                        0592 01284000
         BNH   @RF00592                                            0592 01285000
*     DO;                           /* NO                            */ 01286000
*       PLHRDFC=PLHRDFC-ONE;        /* REDUCE COUNT                  */ 01287000
         BCTR  @15,0                                               0594 01288000
         STH   @15,PLHRDFC(,RPLH)                                  0594 01289000
*       PLHRECP=PLHRECP-PLHLRECL;   /* MOVE RECORD POINTER TO NEXT 0595 01290000
*                                      RECORD                        */ 01291000
         L     @15,PLHRECP(,RPLH)                                  0595 01292000
         SL    @15,PLHLRECL(,RPLH)                                 0595 01293000
         ST    @15,PLHRECP(,RPLH)                                  0595 01294000
*       RETURN;                     /* RETURN TO CALLER              */ 01295000
@EL00004 DS    0H                                                  0596 01296000
@EF00004 DS    0H                                                  0596 01297000
@ER00004 BR    @14                                                 0596 01298000
*     END;                          /*                               */ 01299000
*   PLHRDFP=PLHRDFP+LENGTH(IDARDF); /* MOVE TO NEXT RDF              */ 01300000
@RF00592 LA    @15,3                                               0598 01301000
         L     @10,PLHRDFP(,RPLH)                                  0598 01302000
         ALR   @10,@15                                             0598 01303000
         ST    @10,PLHRDFP(,RPLH)                                  0598 01304000
*   IF PLHRDFP->RDFCTNU=ON THEN     /* IS THIS LL FOR OLD SET        */ 01305000
         TM    RDFCTNU(@10),B'01000000'                            0599 01306000
         BNO   @RF00599                                            0599 01307000
*     PLHRDFP=PLHRDFP+LENGTH(IDARDF);/* YES, MOVE OVER IT            */ 01308000
         ALR   @10,@15                                             0600 01309000
         ST    @10,PLHRDFP(,RPLH)                                  0600 01310000
*   IF PLHRDFP->RDFREPL=ON THEN     /* IS THIS A COUNT RDF           */ 01311000
@RF00599 L     @15,PLHRDFP(,RPLH)                                  0601 01312000
         TM    RDFREPL(@15),B'00001000'                            0601 01313000
         BNO   @RF00601                                            0601 01314000
*     DO;                           /* YES                           */ 01315000
*       RPARM1=PLHRDFP+LENGTH(IDARDF);/* POINT TO LL RDF             */ 01316000
         LA    RPARM1,3                                            0603 01317000
         ALR   RPARM1,@15                                          0603 01318000
*       PLHLRECL=RPARM1->RDFLL;     /* SET RECORD LENGTH             */ 01319000
         SLR   @10,@10                                             0604 01320000
         ICM   @10,3,RDFLL(RPARM1)                                 0604 01321000
         ST    @10,PLHLRECL(,RPLH)                                 0604 01322000
*       PLHRDFC=PLHRDFP->RDFLL;     /* SET RECORD COUNT              */ 01323000
         MVC   PLHRDFC(2,RPLH),RDFLL(@15)                          0605 01324000
*     END;                          /*                               */ 01325000
*   ELSE                            /*                               */ 01326000
*     DO;                           /*                               */ 01327000
         B     @RC00601                                            0607 01328000
@RF00601 DS    0H                                                  0608 01329000
*       PLHLRECL=PLHRDFP->RDFLL;    /* SET RECORD LENGTH             */ 01330000
         L     @15,PLHRDFP(,RPLH)                                  0608 01331000
         SLR   @10,@10                                             0608 01332000
         ICM   @10,3,RDFLL(@15)                                    0608 01333000
         ST    @10,PLHLRECL(,RPLH)                                 0608 01334000
*       PLHRDFC=ONE;                /* SET COUNT TO 1                */ 01335000
         MVC   PLHRDFC(2,RPLH),@CH00053                            0609 01336000
*     END;                          /*                               */ 01337000
*   PLHRECP=PLHRECP-PLHLRECL;       /* SET RECORD POINTER            */ 01338000
@RC00601 L     @15,PLHRECP(,RPLH)                                  0611 01339000
         SL    @15,PLHLRECL(,RPLH)                                 0611 01340000
         ST    @15,PLHRECP(,RPLH)                                  0611 01341000
*   RESPECIFY                                                      0612 01342000
*     R14 UNRSTD;                   /*                               */ 01343000
*   END MVBWD;                      /* RETURN TO CALLER              */ 01344000
         B     @EL00004                                            0613 01345000
*                                                                  0614 01346000
*   /*****************************************************************/ 01347000
*   /*                                                               */ 01348000
*   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01349000
*   /* EXIT SUBROUTINE FUNCTION: RESTORES REGISTER 14 FROM THE       */ 01350000
*   /* PLACEHOLDER PUSH DOWN LIST AND RETURNS * * * * * * * * * * * **/ 01351000
*   /* * * * * * * * * * * * * * * * * * * *                         */ 01352000
*   /*                                                               */ 01353000
*   /*****************************************************************/ 01354000
*                                                                  0614 01355000
*EXIT:                                                             0614 01356000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                               */ 01357000
EXIT     DS    0H                                                  0615 01358000
*   GEN(IDARST14);                  /* RESTORE REGISTER 14           */ 01359000
         IDARST14                                                       01360000
*   END EXIT;                       /* RETURN                        */ 01361000
@EL00005 DS    0H                                                  0616 01362000
@EF00005 DS    0H                                                  0616 01363000
@ER00005 BR    @14                                                 0616 01364000
@PB00005 DS    0H                                                  0617 01365000
*   GEN;                                                           0617 01366000
*                                          /*                        */ 01367000
INSERT   ICM   RWORK1,@00,@00(RWORK4)      /* USED TO PICK UP POINTER*/ 01368000
*   GEN(IDAPATCH);                  /* PATCH SPACE                   */ 01369000
         IDAPATCH                                                       01370000
*   END IDA019RV                    /* MODULE END                    */ 01371000
*                                                                  0619 01372000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01373000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01374000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 01375000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01376000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01377000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01378000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01379000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01380000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01381000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01382000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01383000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 01384000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01385000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01386000
*                                                                  0619 01387000
*       ;                                                          0619 01388000
         B     @EL00001                                            0619 01389000
@DATA    DS    0H                                                       01390000
@SC01000 CLC   PLHKEY(0,@10),KEY(RWORK2)                                01391000
@DATD    DSECT                                                          01392000
         DS    0F                                                       01393000
IDA019RV CSECT                                                          01394000
         DS    0F                                                       01395000
@CF00053 DC    F'1'                                                     01396000
@CH00053 EQU   @CF00053+2                                               01397000
@CF00155 DC    F'2'                                                     01398000
@CF00157 DC    F'3'                                                     01399000
@CF00067 DC    F'4'                                                     01400000
@CF01002 DC    XL4'0000FFFF'                                            01401000
@DATD    DSECT                                                          01402000
         DS    0D                                                       01403000
IDA019RV CSECT                                                          01404000
         DS    0F                                                       01405000
@SIZDATD DC    AL1(0)                                                   01406000
         DC    AL3(@ENDDATD-@DATD)                                      01407000
@CV00905 DC    V(IDAABF)                                                01408000
@CV00906 DC    V(IDAFREEB)                                              01409000
@CV00907 DC    V(IDAGNXT)                                               01410000
@CV00908 DC    V(IDAGRB)                                                01411000
@CV00909 DC    V(IDA019RA)                                              01412000
@CV00910 DC    V(IDA019S6)                                              01413000
@CV00911 DC    V(IDA019RC)                                              01414000
         DS    0D                                                       01415000
HWORD4   DC    H'4'                                                     01416000
@DATD    DSECT                                                          01417000
*                                                          /*@X04SVLC*/ 01418000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01419000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01420000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01421000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01422000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01423000
RDFLEN   EQU   3                        LENGTH OF RDF                   01424000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01425000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01426000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01427000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01428000
@DATD    DSECT                                                          01429000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01430000
@ENDDATD EQU   *                                                        01431000
IDA019RV CSECT                                                          01432000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01433000
@01      EQU   01                                                       01434000
@02      EQU   02                                                       01435000
@03      EQU   03                                                       01436000
@04      EQU   04                                                       01437000
@05      EQU   05                                                       01438000
@06      EQU   06                                                       01439000
@07      EQU   07                                                       01440000
@08      EQU   08                                                       01441000
@09      EQU   09                                                       01442000
@10      EQU   10                                                       01443000
@11      EQU   11                                                       01444000
@12      EQU   12                                                       01445000
@13      EQU   13                                                       01446000
@14      EQU   14                                                       01447000
@15      EQU   15                                                       01448000
RWORK0   EQU   @00                                                      01449000
RRPL     EQU   @01                                                      01450000
RPLH     EQU   @02                                                      01451000
RAMB     EQU   @03                                                      01452000
RBUFC    EQU   @04                                                      01453000
RWORK1   EQU   @05                                                      01454000
RWORK2   EQU   @06                                                      01455000
RWORK3   EQU   @07                                                      01456000
RWORK4   EQU   @08                                                      01457000
RWORK5   EQU   @09                                                      01458000
RPARM1   EQU   @12                                                      01459000
R14      EQU   @14                                                      01460000
R15      EQU   @15                                                      01461000
R1       EQU   @01                                                      01462000
R10      EQU   @10                                                      01463000
R11      EQU   @11                                                      01464000
R13      EQU   @13                                                      01465000
IFGRPL   EQU   0                                                        01466000
RPLCOMN  EQU   IFGRPL                                                   01467000
RPLIDWD  EQU   RPLCOMN                                                  01468000
RPLLEN   EQU   RPLIDWD+3                                                01469000
RPLECB   EQU   RPLCOMN+8                                                01470000
RPLFDBWD EQU   RPLCOMN+12                                               01471000
RPLFDBK  EQU   RPLFDBWD+1                                               01472000
RPLRTNCD EQU   RPLFDBK                                                  01473000
RPLERREG EQU   RPLRTNCD                                                 01474000
RPLCNDCD EQU   RPLFDBK+1                                                01475000
RPLCMPON EQU   RPLCNDCD                                                 01476000
RPLFDB2  EQU   RPLCMPON                                                 01477000
RPLERRCD EQU   RPLCNDCD+1                                               01478000
RPLFDB3  EQU   RPLERRCD                                                 01479000
RPLKEYLE EQU   RPLCOMN+16                                               01480000
RPLDACB  EQU   RPLCOMN+24                                               01481000
RPLARG   EQU   RPLCOMN+36                                               01482000
RPLOPTCD EQU   RPLCOMN+40                                               01483000
RPLOPT1  EQU   RPLOPTCD                                                 01484000
RPLDIR   EQU   RPLOPT1                                                  01485000
RPLSEQ   EQU   RPLOPT1                                                  01486000
RPLECBSW EQU   RPLOPT1                                                  01487000
RPLOPT2  EQU   RPLOPTCD+1                                               01488000
RPLKEY   EQU   RPLOPT2                                                  01489000
RPLADR   EQU   RPLOPT2                                                  01490000
RPLLRD   EQU   RPLOPT2                                                  01491000
RPLUPD   EQU   RPLOPT2                                                  01492000
RPLOPT3  EQU   RPLOPTCD+2                                               01493000
RPLNXTRP EQU   RPLCOMN+44                                               01494000
RPLOPTC2 EQU   RPLCOMN+56                                               01495000
RPLOPT5  EQU   RPLOPTC2                                                 01496000
RPLWRTYP EQU   RPLOPT5                                                  01497000
RPLOPT6  EQU   RPLOPTC2+1                                               01498000
RPLUNTYP EQU   RPLOPT6                                                  01499000
RPLOPT7  EQU   RPLOPTC2+2                                               01500000
RPLCNOPT EQU   RPLOPT7                                                  01501000
RPLOPT8  EQU   RPLOPTC2+3                                               01502000
RPLRBAR  EQU   RPLCOMN+60                                               01503000
RPLAIXID EQU   RPLRBAR+2                                                01504000
RPLDDDD  EQU   RPLRBAR+4                                                01505000
RPLEXTDS EQU   RPLCOMN+68                                               01506000
RPLEXTD1 EQU   RPLEXTDS                                                 01507000
IFGACB   EQU   0                                                        01508000
ACBCOMN  EQU   IFGACB                                                   01509000
ACBLENG  EQU   ACBCOMN+2                                                01510000
ACBLENG2 EQU   ACBLENG                                                  01511000
ACBAMBL  EQU   ACBCOMN+4                                                01512000
ACBJWA   EQU   ACBAMBL                                                  01513000
ACBMACRF EQU   ACBCOMN+12                                               01514000
ACBMACR1 EQU   ACBMACRF                                                 01515000
ACBADR   EQU   ACBMACR1                                                 01516000
ACBCNV   EQU   ACBMACR1                                                 01517000
ACBMACR2 EQU   ACBMACRF+1                                               01518000
ACBBUFPL EQU   ACBCOMN+20                                               01519000
ACBMACR3 EQU   ACBBUFPL                                                 01520000
ACBRECFM EQU   ACBCOMN+24                                               01521000
ACBCCTYP EQU   ACBCOMN+25                                               01522000
ACBOPT   EQU   ACBCOMN+26                                               01523000
ACBDSORG EQU   ACBOPT                                                   01524000
ACBCROPS EQU   ACBDSORG                                                 01525000
ACBEXLST EQU   ACBCOMN+36                                               01526000
ACBDDNM  EQU   ACBCOMN+40                                               01527000
ACBAMETH EQU   ACBDDNM+3                                                01528000
ACBOFLGS EQU   ACBCOMN+48                                               01529000
ACBEXFG  EQU   ACBOFLGS                                                 01530000
ACBIOSFG EQU   ACBOFLGS                                                 01531000
ACBINFLG EQU   ACBCOMN+50                                               01532000
ACBUJFCB EQU   ACBCOMN+52                                               01533000
ACBBLKSZ EQU   ACBCOMN+60                                               01534000
IDAAMBL  EQU   0                                                        01535000
AMBLEOV  EQU   IDAAMBL+12                                               01536000
AMBLEFLG EQU   AMBLEOV                                                  01537000
AMBLDDNM EQU   IDAAMBL+16                                               01538000
AMBLIDF  EQU   AMBLDDNM                                                 01539000
AMBLQ    EQU   AMBLIDF+7                                                01540000
AMBLVC   EQU   IDAAMBL+28                                               01541000
AMBLTYPE EQU   IDAAMBL+30                                               01542000
AMBLSHAR EQU   IDAAMBL+33                                               01543000
AMBLFLG1 EQU   IDAAMBL+35                                               01544000
AMBLFLG2 EQU   IDAAMBL+36                                               01545000
AMBLIX   EQU   IDAAMBL+56                                               01546000
IDAAMB   EQU   0                                                        01547000
AMBDSB   EQU   IDAAMB+20                                                01548000
AMBEOVR  EQU   IDAAMB+24                                                01549000
AMBFLG0  EQU   AMBEOVR                                                  01550000
AMBFLG1  EQU   IDAAMB+25                                                01551000
AMBDSORG EQU   IDAAMB+26                                                01552000
AMBIOBAD EQU   IDAAMB+28                                                01553000
AMBINFL  EQU   IDAAMB+42                                                01554000
AMBDEBPT EQU   IDAAMB+44                                                01555000
AMBOFLGS EQU   IDAAMB+48                                                01556000
AMBFLG2  EQU   IDAAMB+49                                                01557000
AMBEOVPT EQU   IDAAMB+56                                                01558000
AMBCSWD1 EQU   IDAAMB+84                                                01559000
AMBAFLG  EQU   AMBCSWD1                                                 01560000
AMBLSR   EQU   AMBAFLG                                                  01561000
AMBGSR   EQU   AMBAFLG                                                  01562000
IDAPLHDR EQU   0                                                        01563000
IDAPLH   EQU   0                                                        01564000
PLHFLG1  EQU   IDAPLH+2                                                 01565000
PLHASKBF EQU   PLHFLG1                                                  01566000
PLHSSR   EQU   PLHFLG1                                                  01567000
PLHRDEXC EQU   PLHFLG1                                                  01568000
PLHFLG2  EQU   IDAPLH+3                                                 01569000
PLHEFLGS EQU   IDAPLH+4                                                 01570000
PLHSKPER EQU   PLHEFLGS                                                 01571000
PLHNOADV EQU   PLHEFLGS                                                 01572000
PLHDSCAN EQU   PLHEFLGS                                                 01573000
PLHFLG3  EQU   IDAPLH+6                                                 01574000
PLHSLVLD EQU   PLHFLG3                                                  01575000
PLHRVRS  EQU   PLHFLG3                                                  01576000
PLHAFLGS EQU   IDAPLH+7                                                 01577000
PLHRABWD EQU   PLHAFLGS                                                 01578000
PLHBFRNO EQU   IDAPLH+15                                                01579000
PLHCRBA  EQU   IDAPLH+28                                                01580000
PLHJORBA EQU   PLHCRBA                                                  01581000
PLHJCODE EQU   IDAPLH+40                                                01582000
PLHLRECL EQU   IDAPLH+48                                                01583000
PLHDBUFC EQU   IDAPLH+52                                                01584000
PLHRECP  EQU   IDAPLH+60                                                01585000
PLHFSP   EQU   IDAPLH+64                                                01586000
PLHRDFP  EQU   IDAPLH+68                                                01587000
PLHRDFC  EQU   IDAPLH+72                                                01588000
PLHDIOB  EQU   IDAPLH+76                                                01589000
PLHSAVE1 EQU   IDAPLH+84                                                01590000
PLHSAVE2 EQU   IDAPLH+88                                                01591000
PLHSAVE3 EQU   IDAPLH+92                                                01592000
PLHSAVE4 EQU   IDAPLH+96                                                01593000
PLHSAVE5 EQU   IDAPLH+100                                               01594000
PLHSAVE6 EQU   IDAPLH+104                                               01595000
PLHRETO  EQU   IDAPLH+116                                               01596000
PLHRET1  EQU   IDAPLH+120                                               01597000
PLHEOVPT EQU   IDAPLH+180                                               01598000
PLHDDDD  EQU   PLHEOVPT                                                 01599000
PLHIBUFC EQU   IDAPLH+188                                               01600000
PLHISPLP EQU   IDAPLH+196                                               01601000
PLHIXSPL EQU   IDAPLH+200                                               01602000
PLHSSRBA EQU   PLHIXSPL                                                 01603000
PLHWAX   EQU   IDAPLH+232                                               01604000
PLHSLRBA EQU   IDAPLH+244                                               01605000
PLHKEYPT EQU   IDAPLH+248                                               01606000
PLHEND   EQU   IDAPLH+280                                               01607000
PLHKEY   EQU   0                                                        01608000
IDABUFDR EQU   0                                                        01609000
BUFDRCIX EQU   IDABUFDR+9                                               01610000
BUFDRFLG EQU   IDABUFDR+11                                              01611000
IDABUFC  EQU   0                                                        01612000
BUFCAVL  EQU   IDABUFC                                                  01613000
BUFCFLG1 EQU   IDABUFC+1                                                01614000
BUFCIOFL EQU   IDABUFC+2                                                01615000
BUFCRRD  EQU   BUFCIOFL                                                 01616000
BUFCFLG2 EQU   IDABUFC+3                                                01617000
BUFCPLH  EQU   IDABUFC+4                                                01618000
BUFCDDDD EQU   IDABUFC+8                                                01619000
BUFCBAD  EQU   IDABUFC+20                                               01620000
BUFCNXT1 EQU   IDABUFC+24                                               01621000
BUFCINV  EQU   IDABUFC+28                                               01622000
BUFCNXT2 EQU   IDABUFC+37                                               01623000
IDAAMDSB EQU   0                                                        01624000
AMDATTR  EQU   IDAAMDSB+1                                               01625000
AMDNEST  EQU   IDAAMDSB+4                                               01626000
AMDRKP   EQU   IDAAMDSB+6                                               01627000
AMDKEYLN EQU   IDAAMDSB+8                                               01628000
AMDCINV  EQU   IDAAMDSB+20                                              01629000
AMDHLRBA EQU   IDAAMDSB+28                                              01630000
AMDSSRBA EQU   IDAAMDSB+32                                              01631000
AMDATTR3 EQU   IDAAMDSB+40                                              01632000
AMDSTAT  EQU   IDAAMDSB+48                                              01633000
AMDNIL   EQU   AMDSTAT+8                                                01634000
IDAIXSPL EQU   0                                                        01635000
IXSILN   EQU   IDAIXSPL+13                                              01636000
IXSBFLG  EQU   IDAIXSPL+17                                              01637000
IXSHEP   EQU   IDAIXSPL+20                                              01638000
IXSSEP   EQU   IDAIXSPL+24                                              01639000
IXSLEP   EQU   IDAIXSPL+28                                              01640000
IDAIXH   EQU   0                                                        01641000
IXHLL    EQU   IDAIXH                                                   01642000
IXHFLPLN EQU   IDAIXH+2                                                 01643000
IXHPTLS  EQU   IDAIXH+3                                                 01644000
IXHBRBA  EQU   IDAIXH+4                                                 01645000
IXHHP    EQU   IDAIXH+8                                                 01646000
IXHLV    EQU   IDAIXH+16                                                01647000
IXHLEO   EQU   IDAIXH+20                                                01648000
IXHSEO   EQU   IDAIXH+22                                                01649000
IDAIBFLP EQU   0                                                        01650000
IBFLPF   EQU   IDAIBFLP                                                 01651000
IBFLPL   EQU   IDAIBFLP+1                                               01652000
IBFLP3   EQU   IDAIBFLP+2                                               01653000
IBFLP2   EQU   IBFLP3                                                   01654000
IDASELL  EQU   0                                                        01655000
IXSELL   EQU   IDASELL                                                  01656000
IDAIXK   EQU   0                                                        01657000
IDACIDF  EQU   0                                                        01658000
CIDFOSET EQU   IDACIDF                                                  01659000
CIDFLL   EQU   IDACIDF+2                                                01660000
CIDFBUSY EQU   CIDFLL                                                   01661000
IDARDF   EQU   0                                                        01662000
RDFRBYTE EQU   IDARDF                                                   01663000
RDFCTNU  EQU   RDFRBYTE                                                 01664000
RDFSEG   EQU   RDFRBYTE                                                 01665000
RDFNOT1  EQU   RDFSEG                                                   01666000
RDFREPL  EQU   RDFRBYTE                                                 01667000
RDFLL    EQU   IDARDF+1                                                 01668000
IDADATA  EQU   0                                                        01669000
IDAKEY   EQU   0                                                        01670000
KEY      EQU   IDAKEY                                                   01671000
PLHPDL   EQU   0                                                        01672000
PLHPDLE  EQU   0                                                        01673000
PLHRRN   EQU   0                                                        01674000
PLHEXTEN EQU   PLHEND                                                   01675000
PLHBMWRK EQU   PLHEXTEN+5                                               01676000
BUFCRSC1 EQU   BUFCAVL                                                  01677000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01678000
PLHBMSV5 EQU   PLHEXTEN+24                                              01679000
PLHBMSV4 EQU   PLHEXTEN+20                                              01680000
PLHBMSV3 EQU   PLHEXTEN+16                                              01681000
PLHBMSV2 EQU   PLHEXTEN+12                                              01682000
PLHBMSV1 EQU   PLHEXTEN+8                                               01683000
PLHRDCNT EQU   PLHEXTEN+6                                               01684000
PLHBMSOV EQU   PLHBMWRK                                                 01685000
PLHBEUC  EQU   PLHBMWRK                                                 01686000
PLHBMRDF EQU   PLHBMWRK                                                 01687000
@NM00040 EQU   PLHEXTEN+4                                               01688000
PLHRESR1 EQU   PLHEXTEN                                                 01689000
AMDATA   EQU   IDADATA                                                  01690000
RDFEMPTY EQU   RDFRBYTE                                                 01691000
RDF1ST   EQU   RDFSEG                                                   01692000
RDFTYPE  EQU   RDFRBYTE                                                 01693000
@NM00047 EQU   CIDFLL                                                   01694000
IXKEY    EQU   IDAIXK                                                   01695000
IBFLP1   EQU   IBFLP2                                                   01696000
IXHFSO   EQU   IDAIXH+18                                                01697000
IXHFLGS  EQU   IDAIXH+17                                                01698000
IXHXX    EQU   IDAIXH+12                                                01699000
IXSPEC   EQU   IDAIXSPL+19                                              01700000
IXSEKON  EQU   IDAIXSPL+18                                              01701000
@NM00046 EQU   IXSBFLG                                                  01702000
IXSLELV  EQU   IXSBFLG                                                  01703000
IXSSSRH  EQU   IXSBFLG                                                  01704000
IXSNOSR  EQU   IDAIXSPL+16                                              01705000
IXSKLEN  EQU   IDAIXSPL+14                                              01706000
IXSTLN   EQU   IDAIXSPL+12                                              01707000
IXSARG   EQU   IDAIXSPL+8                                               01708000
IXSBUFC  EQU   IDAIXSPL+4                                               01709000
IXSSTRBA EQU   IDAIXSPL                                                 01710000
AMDEXCP  EQU   AMDSTAT+44                                               01711000
AMDNCAS  EQU   AMDSTAT+40                                               01712000
AMDNCIS  EQU   AMDSTAT+36                                               01713000
AMDASPA  EQU   AMDSTAT+32                                               01714000
AMDRETR  EQU   AMDSTAT+28                                               01715000
AMDUPR   EQU   AMDSTAT+24                                               01716000
AMDIREC  EQU   AMDSTAT+20                                               01717000
AMDDELR  EQU   AMDSTAT+16                                               01718000
AMDNLR   EQU   AMDSTAT+12                                               01719000
AMDNEXT  EQU   AMDSTAT+10                                               01720000
AMDSTSP  EQU   AMDSTAT                                                  01721000
@NM00045 EQU   IDAAMDSB+41                                              01722000
@NM00044 EQU   AMDATTR3                                                 01723000
AMDLM    EQU   AMDATTR3                                                 01724000
AMDWAIT  EQU   AMDATTR3                                                 01725000
AMDBIND  EQU   AMDATTR3                                                 01726000
AMDFAULT EQU   AMDATTR3                                                 01727000
AMDUNQ   EQU   AMDATTR3                                                 01728000
AMDPARDB EQU   IDAAMDSB+36                                              01729000
AMDMAXRR EQU   AMDSSRBA                                                 01730000
AMDNSLOT EQU   AMDHLRBA                                                 01731000
AMDLRECL EQU   IDAAMDSB+24                                              01732000
AMDFSCI  EQU   IDAAMDSB+16                                              01733000
AMDFSCA  EQU   IDAAMDSB+14                                              01734000
AMDCIPCA EQU   IDAAMDSB+12                                              01735000
AMDPCTCI EQU   IDAAMDSB+11                                              01736000
AMDPCTCA EQU   IDAAMDSB+10                                              01737000
AMDAXRKP EQU   AMDNEST                                                  01738000
AMDLEN   EQU   IDAAMDSB+2                                               01739000
AMDSPAN  EQU   AMDATTR                                                  01740000
AMDRRDS  EQU   AMDATTR                                                  01741000
AMDRANGE EQU   AMDATTR                                                  01742000
AMDORDER EQU   AMDATTR                                                  01743000
AMDREPL  EQU   AMDATTR                                                  01744000
AMDSDT   EQU   AMDATTR                                                  01745000
AMDWCK   EQU   AMDATTR                                                  01746000
AMDDST   EQU   AMDATTR                                                  01747000
AMDSBID  EQU   IDAAMDSB                                                 01748000
BUFCEND  EQU   IDABUFC+64                                               01749000
BUFCUCDN EQU   IDABUFC+60                                               01750000
BUFCUCUP EQU   IDABUFC+56                                               01751000
BUFCMDBT EQU   IDABUFC+52                                               01752000
BUFCHAIN EQU   IDABUFC+48                                               01753000
BUFXORBA EQU   IDABUFC+44                                               01754000
BUFXIRBA EQU   IDABUFC+40                                               01755000
BUFCIDXL EQU   IDABUFC+36                                               01756000
BUFCDSPC EQU   IDABUFC+32                                               01757000
BUFCWLEN EQU   BUFCINV                                                  01758000
BUFCCPA  EQU   IDABUFC+16                                               01759000
BUFCORBA EQU   IDABUFC+12                                               01760000
BUFCAMB  EQU   BUFCPLH                                                  01761000
@NM00043 EQU   BUFCFLG2                                                 01762000
BUFCEOD  EQU   BUFCFLG2                                                 01763000
BUFCBSYW EQU   BUFCFLG2                                                 01764000
BUFCBSYR EQU   BUFCFLG2                                                 01765000
BUFCNLAS EQU   BUFCFLG2                                                 01766000
BUFCXDDR EQU   BUFCFLG2                                                 01767000
BUFCFIX  EQU   BUFCIOFL                                                 01768000
BUFCPFCP EQU   BUFCIOFL                                                 01769000
BUFCXEDB EQU   BUFCIOFL                                                 01770000
BUFCWC   EQU   BUFCIOFL                                                 01771000
BUFCREAL EQU   BUFCIOFL                                                 01772000
BUFCFMT  EQU   BUFCIOFL                                                 01773000
BUFCMW   EQU   BUFCIOFL                                                 01774000
BUFCEPT  EQU   BUFCFLG1                                                 01775000
BUFCEXC  EQU   BUFCFLG1                                                 01776000
BUFCVAL  EQU   BUFCFLG1                                                 01777000
BUFCER2  EQU   BUFCFLG1                                                 01778000
BUFCER1  EQU   BUFCFLG1                                                 01779000
BUFCINS  EQU   BUFCFLG1                                                 01780000
BUFCSEG  EQU   BUFCFLG1                                                 01781000
BUFCUPG  EQU   BUFCFLG1                                                 01782000
BUFCUCNT EQU   BUFCAVL                                                  01783000
@NM00042 EQU   IDABUFDR+16                                              01784000
BUFDBUFC EQU   IDABUFDR+12                                              01785000
@NM00041 EQU   BUFDRFLG                                                 01786000
BUFDRAVL EQU   BUFDRFLG                                                 01787000
BUFDRREL EQU   BUFDRFLG                                                 01788000
BUFDRTSB EQU   IDABUFDR+10                                              01789000
BUFDRMAX EQU   BUFDRCIX                                                 01790000
BUFDRPFN EQU   IDABUFDR+8                                               01791000
BUFDRPFB EQU   IDABUFDR+4                                               01792000
BUFDRLEN EQU   IDABUFDR+2                                               01793000
BUFDRNO  EQU   IDABUFDR+1                                               01794000
BUFDRID  EQU   IDABUFDR                                                 01795000
PLHERRET EQU   IDAPLH+276                                               01796000
PLHASCB  EQU   IDAPLH+272                                               01797000
PLHECB   EQU   IDAPLH+268                                               01798000
@NM00039 EQU   IDAPLH+265                                               01799000
PLHDRMSK EQU   IDAPLH+264                                               01800000
PLHR13   EQU   IDAPLH+260                                               01801000
PLHPARM1 EQU   IDAPLH+256                                               01802000
PLHDRRSC EQU   IDAPLH+252                                               01803000
PLHSRCSG EQU   IDAPLH+242                                               01804000
PLHNOSEG EQU   IDAPLH+240                                               01805000
PLHLLOR  EQU   IDAPLH+236                                               01806000
PLHXPLH  EQU   PLHWAX                                                   01807000
@NM00038 EQU   PLHIXSPL+8                                               01808000
PLHIXBFC EQU   PLHIXSPL+4                                               01809000
PLHHIREC EQU   PLHSSRBA                                                 01810000
PLHRBUFC EQU   IDAPLH+192                                               01811000
PLHNRBA  EQU   IDAPLH+184                                               01812000
PLHAR14  EQU   IDAPLH+176                                               01813000
@NM00037 EQU   IDAPLH+172                                               01814000
@NM00036 EQU   IDAPLH+168                                               01815000
PLHASAVE EQU   IDAPLH+164                                               01816000
PLHRETOS EQU   IDAPLH+118                                               01817000
PLHCHAIN EQU   IDAPLH+112                                               01818000
PLHAMB   EQU   IDAPLH+108                                               01819000
PLHARET  EQU   IDAPLH+80                                                01820000
PLHIIOB  EQU   PLHDIOB                                                  01821000
PLHSRSID EQU   IDAPLH+74                                                01822000
PLHNBUFC EQU   IDAPLH+56                                                01823000
PLHARDB  EQU   IDAPLH+44                                                01824000
@NM00035 EQU   IDAPLH+43                                                01825000
PLHEOVR  EQU   IDAPLH+42                                                01826000
PLHRCODE EQU   IDAPLH+41                                                01827000
PLHUCODE EQU   PLHJCODE                                                 01828000
PLHJNRBA EQU   IDAPLH+36                                                01829000
PLHJRNLL EQU   IDAPLH+32                                                01830000
PLHUPECB EQU   PLHJORBA                                                 01831000
PLHDSIDA EQU   IDAPLH+24                                                01832000
PLHCRPL  EQU   IDAPLH+20                                                01833000
PLHMRPL  EQU   IDAPLH+16                                                01834000
PLHFRCNT EQU   IDAPLH+14                                                01835000
PLHRMIN  EQU   IDAPLH+13                                                01836000
PLHDSTYP EQU   IDAPLH+12                                                01837000
PLHACB   EQU   IDAPLH+8                                                 01838000
PLHRAE   EQU   PLHAFLGS                                                 01839000
PLHIOSID EQU   PLHAFLGS                                                 01840000
PLHDBDC  EQU   PLHAFLGS                                                 01841000
PLHVAMB  EQU   PLHAFLGS                                                 01842000
PLHIOSRQ EQU   PLHAFLGS                                                 01843000
PLHDRLM  EQU   PLHAFLGS                                                 01844000
PLHEOVDF EQU   PLHFLG3                                                  01845000
PLHBWD   EQU   PLHFLG3                                                  01846000
PLHRAHD  EQU   PLHFLG3                                                  01847000
PLHSRBSG EQU   PLHFLG3                                                  01848000
@NM00034 EQU   PLHEFLGS+1                                               01849000
PLHRSTRT EQU   PLHEFLGS+1                                               01850000
PLHINVAL EQU   PLHEFLGS                                                 01851000
PLHEODX  EQU   PLHEFLGS                                                 01852000
PLHSRINV EQU   PLHEFLGS                                                 01853000
PLH1ST   EQU   PLHEFLGS                                                 01854000
PLHNOSPC EQU   PLHEFLGS                                                 01855000
PLHIWAIT EQU   PLHFLG2                                                  01856000
PLHSVADV EQU   PLHFLG2                                                  01857000
PLHCIINS EQU   PLHFLG2                                                  01858000
PLHKRE   EQU   PLHFLG2                                                  01859000
PLHADDTE EQU   PLHFLG2                                                  01860000
PLHKEYMD EQU   PLHFLG2                                                  01861000
PLHSQINS EQU   PLHFLG2                                                  01862000
PLHUPD   EQU   PLHFLG2                                                  01863000
@NM00033 EQU   PLHFLG1                                                  01864000
PLHDRPND EQU   PLHFLG1                                                  01865000
PLHASYRQ EQU   PLHFLG1                                                  01866000
PLHENDRQ EQU   PLHFLG1                                                  01867000
PLHEOVW  EQU   PLHFLG1                                                  01868000
PLHATV   EQU   IDAPLH+1                                                 01869000
PLHAVL   EQU   IDAPLH                                                   01870000
PLHIOSDQ EQU   IDAPLHDR+12                                              01871000
PLHDRCUR EQU   IDAPLHDR+10                                              01872000
PLHDRMAX EQU   IDAPLHDR+8                                               01873000
PLHDRREQ EQU   IDAPLHDR+4                                               01874000
PLHELTH  EQU   IDAPLHDR+2                                               01875000
PLHCNT   EQU   IDAPLHDR+1                                               01876000
PLHID    EQU   IDAPLHDR                                                 01877000
AMBTRACE EQU   IDAAMB+120                                               01878000
AMBVIOT  EQU   IDAAMB+116                                               01879000
AMBSZCP  EQU   IDAAMB+114                                               01880000
AMBSZFW  EQU   IDAAMB+112                                               01881000
AMBSZWR  EQU   IDAAMB+110                                               01882000
AMBSZRD  EQU   IDAAMB+108                                               01883000
AMBEXEX  EQU   IDAAMB+100                                               01884000
AMBWSHD  EQU   IDAAMB+96                                                01885000
AMBCPA   EQU   IDAAMB+92                                                01886000
AMBBM2SH EQU   IDAAMB+88                                                01887000
AMBRDCNT EQU   AMBCSWD1+2                                               01888000
@NM00032 EQU   AMBCSWD1+1                                               01889000
@NM00031 EQU   AMBAFLG                                                  01890000
AMBCFX   EQU   AMBAFLG                                                  01891000
AMBSIS   EQU   AMBAFLG                                                  01892000
AMBDFR   EQU   AMBAFLG                                                  01893000
AMBICI   EQU   AMBAFLG                                                  01894000
@NM00030 EQU   AMBAFLG                                                  01895000
AMBUPLH  EQU   IDAAMB+80                                                01896000
AMBPAMBL EQU   IDAAMB+76                                                01897000
AMBPIXP  EQU   IDAAMB+72                                                01898000
@NM00029 EQU   IDAAMB+68                                                01899000
AMBIWA   EQU   IDAAMB+64                                                01900000
AMBWKA   EQU   IDAAMB+60                                                01901000
AMBAMBXN EQU   AMBEOVPT                                                 01902000
AMBEDB   EQU   IDAAMB+52                                                01903000
AMBRPT   EQU   IDAAMB+50                                                01904000
AMBPUG   EQU   AMBFLG2                                                  01905000
AMBBUSY  EQU   AMBOFLGS                                                 01906000
AMBEXFG  EQU   AMBOFLGS                                                 01907000
@NM00028 EQU   AMBOFLGS                                                 01908000
AMBOPEN  EQU   AMBOFLGS                                                 01909000
@NM00027 EQU   AMBOFLGS                                                 01910000
AMBDEBAD EQU   AMBDEBPT+1                                               01911000
AMBIFLGS EQU   AMBDEBPT                                                 01912000
AMBAMETH EQU   IDAAMB+43                                                01913000
AMBUPX   EQU   AMBINFL                                                  01914000
AMBUCRA  EQU   AMBINFL                                                  01915000
AMBSCRA  EQU   AMBINFL                                                  01916000
AMBCAT   EQU   AMBINFL                                                  01917000
@NM00026 EQU   AMBINFL                                                  01918000
@NM00025 EQU   AMBINFL                                                  01919000
AMBTIOT  EQU   IDAAMB+40                                                01920000
@NM00024 EQU   IDAAMB+38                                                01921000
AMBDDSN  EQU   IDAAMB+35                                                01922000
AMBCDSN  EQU   IDAAMB+32                                                01923000
AMBIOMB  EQU   AMBIOBAD                                                 01924000
@NM00023 EQU   AMBDSORG+1                                               01925000
AMBDORGA EQU   AMBDSORG+1                                               01926000
@NM00022 EQU   AMBDSORG                                                 01927000
AMBINBUF EQU   AMBFLG1                                                  01928000
AMBJRN   EQU   AMBFLG1                                                  01929000
AMBUBF   EQU   AMBFLG1                                                  01930000
AMBSPEED EQU   AMBFLG1                                                  01931000
AMBPCAT  EQU   AMBFLG1                                                  01932000
AMBMCAT  EQU   AMBFLG1                                                  01933000
AMBTYPE  EQU   AMBFLG1                                                  01934000
AMBCREAT EQU   AMBFLG1                                                  01935000
@NM00021 EQU   AMBFLG0                                                  01936000
AMBPSDS  EQU   AMBFLG0                                                  01937000
AMBCACB  EQU   IDAAMB+16                                                01938000
AMBPH    EQU   IDAAMB+12                                                01939000
AMBBUFC  EQU   IDAAMB+8                                                 01940000
AMBLINK  EQU   IDAAMB+4                                                 01941000
AMBLEN   EQU   IDAAMB+2                                                 01942000
AMBRSC   EQU   IDAAMB+1                                                 01943000
AMBID    EQU   IDAAMB                                                   01944000
AMBLCMB  EQU   IDAAMBL+64                                               01945000
AMBLBIB  EQU   IDAAMBL+60                                               01946000
AMBLDTA  EQU   IDAAMBL+52                                               01947000
AMBLMIDS EQU   IDAAMBL+42                                               01948000
AMBLNIDS EQU   IDAAMBL+41                                               01949000
@NM00020 EQU   IDAAMBL+40                                               01950000
AMBLNUM  EQU   IDAAMBL+38                                               01951000
AMBLNST  EQU   IDAAMBL+37                                               01952000
@NM00019 EQU   AMBLFLG2                                                 01953000
AMBLSTAG EQU   AMBLFLG2                                                 01954000
@NM00018 EQU   AMBLFLG2                                                 01955000
AMBLDUMY EQU   AMBLFLG1                                                 01956000
AMBLCAT  EQU   AMBLFLG1                                                 01957000
AMBLUCRA EQU   AMBLFLG1                                                 01958000
AMBLSCRA EQU   AMBLFLG1                                                 01959000
AMBLVVIC EQU   AMBLFLG1                                                 01960000
AMBLUPD  EQU   AMBLFLG1                                                 01961000
AMBLCINV EQU   AMBLFLG1                                                 01962000
AMBLFULL EQU   AMBLFLG1                                                 01963000
AMBLLEN  EQU   IDAAMBL+34                                               01964000
@NM00017 EQU   AMBLSHAR                                                 01965000
AMBLWRIT EQU   AMBLSHAR                                                 01966000
AMBLCATO EQU   AMBLSHAR                                                 01967000
AMBLPRIM EQU   AMBLSHAR                                                 01968000
AMBLID   EQU   IDAAMBL+32                                               01969000
@NM00016 EQU   IDAAMBL+31                                               01970000
@NM00015 EQU   AMBLTYPE                                                 01971000
AMBLFIX  EQU   AMBLTYPE                                                 01972000
AMBLBASE EQU   AMBLTYPE                                                 01973000
AMBLAIX  EQU   AMBLTYPE                                                 01974000
AMBLUPGR EQU   AMBLTYPE                                                 01975000
AMBLPATH EQU   AMBLTYPE                                                 01976000
AMBLENO  EQU   AMBLVC+1                                                 01977000
AMBLVRT  EQU   AMBLVC                                                   01978000
AMBLXPT  EQU   IDAAMBL+24                                               01979000
AMBLDFR  EQU   AMBLQ                                                    01980000
AMBLESDS EQU   AMBLQ                                                    01981000
AMBLKSDS EQU   AMBLQ                                                    01982000
AMBLUBF  EQU   AMBLQ                                                    01983000
AMBLFSTP EQU   AMBLQ                                                    01984000
AMBLLSR  EQU   AMBLQ                                                    01985000
AMBLGSR  EQU   AMBLQ                                                    01986000
AMBLDDC  EQU   AMBLQ                                                    01987000
AMBLDCI  EQU   AMBLIDF+4                                                01988000
AMBLCACB EQU   AMBLIDF                                                  01989000
@NM00014 EQU   AMBLEOV+2                                                01990000
AMBLCOMP EQU   AMBLEOV+1                                                01991000
AMBLESET EQU   AMBLEFLG                                                 01992000
AMBLWAIT EQU   AMBLEFLG                                                 01993000
AMBLACB  EQU   IDAAMBL+8                                                01994000
AMBLSCHN EQU   IDAAMBL+4                                                01995000
AMBLPCHN EQU   IDAAMBL                                                  01996000
ACBAPID  EQU   ACBCOMN+72                                               01997000
ACBCBMWA EQU   ACBCOMN+68                                               01998000
ACBUAPTR EQU   ACBCOMN+64                                               01999000
ACBLRECL EQU   ACBCOMN+62                                               02000000
ACBMSGLN EQU   ACBBLKSZ                                                 02001000
ACBBUFSP EQU   ACBCOMN+56                                               02002000
@NM00013 EQU   ACBUJFCB+1                                               02003000
ACBOPTN  EQU   ACBUJFCB                                                 02004000
ACBVVIC  EQU   ACBINFLG                                                 02005000
ACBUCRA  EQU   ACBINFLG                                                 02006000
ACBSCRA  EQU   ACBINFLG                                                 02007000
ACBCAT   EQU   ACBINFLG                                                 02008000
ACBIJRQE EQU   ACBINFLG                                                 02009000
ACBJEPS  EQU   ACBINFLG                                                 02010000
@NM00012 EQU   ACBINFLG                                                 02011000
ACBERFLG EQU   ACBCOMN+49                                               02012000
ACBBUSY  EQU   ACBIOSFG                                                 02013000
ACBLOCK  EQU   ACBEXFG                                                  02014000
@NM00011 EQU   ACBOFLGS                                                 02015000
ACBDSERR EQU   ACBOFLGS                                                 02016000
ACBOPEN  EQU   ACBOFLGS                                                 02017000
ACBEOV   EQU   ACBOFLGS                                                 02018000
@NM00010 EQU   ACBOFLGS                                                 02019000
ACBDEB   EQU   ACBDDNM+5                                                02020000
ACBERFL  EQU   ACBDDNM+4                                                02021000
ACBAM    EQU   ACBAMETH                                                 02022000
ACBINFL  EQU   ACBDDNM+2                                                02023000
ACBTIOT  EQU   ACBDDNM                                                  02024000
ACBUEL   EQU   ACBEXLST                                                 02025000
ACBPASSW EQU   ACBCOMN+32                                               02026000
ACBMSGAR EQU   ACBCOMN+28                                               02027000
@NM00009 EQU   ACBDSORG+1                                               02028000
ACBDORGA EQU   ACBDSORG+1                                               02029000
@NM00008 EQU   ACBDSORG                                                 02030000
ACBCRNRE EQU   ACBCROPS                                                 02031000
ACBCRNCK EQU   ACBCROPS                                                 02032000
ACBASA   EQU   ACBCCTYP                                                 02033000
@NM00007 EQU   ACBCCTYP                                                 02034000
ACBRECAF EQU   ACBRECFM                                                 02035000
ACBJBUF  EQU   ACBBUFPL+2                                               02036000
ACBMACR4 EQU   ACBBUFPL+1                                               02037000
@NM00006 EQU   ACBMACR3                                                 02038000
ACBNCFX  EQU   ACBMACR3                                                 02039000
ACBSIS   EQU   ACBMACR3                                                 02040000
ACBDFR   EQU   ACBMACR3                                                 02041000
ACBICI   EQU   ACBMACR3                                                 02042000
ACBGSR   EQU   ACBMACR3                                                 02043000
ACBLSR   EQU   ACBMACR3                                                 02044000
@NM00005 EQU   ACBMACR3                                                 02045000
ACBBUFNI EQU   ACBCOMN+18                                               02046000
ACBBUFND EQU   ACBCOMN+16                                               02047000
ACBSTRNO EQU   ACBCOMN+15                                               02048000
ACBBSTNO EQU   ACBCOMN+14                                               02049000
ACBAIX   EQU   ACBMACR2                                                 02050000
ACBDSN   EQU   ACBMACR2                                                 02051000
ACBRST   EQU   ACBMACR2                                                 02052000
ACBLOGON EQU   ACBMACR2                                                 02053000
ACBSKP   EQU   ACBMACR2                                                 02054000
@NM00004 EQU   ACBMACR2                                                 02055000
ACBUBF   EQU   ACBMACR1                                                 02056000
ACBOUT   EQU   ACBMACR1                                                 02057000
ACBIN    EQU   ACBMACR1                                                 02058000
ACBDIR   EQU   ACBMACR1                                                 02059000
ACBSEQ   EQU   ACBMACR1                                                 02060000
ACBBLK   EQU   ACBCNV                                                   02061000
ACBADD   EQU   ACBADR                                                   02062000
ACBKEY   EQU   ACBMACR1                                                 02063000
ACBINRTN EQU   ACBCOMN+8                                                02064000
ACBIBCT  EQU   ACBJWA                                                   02065000
ACBLEN2  EQU   ACBLENG2                                                 02066000
ACBSTYP  EQU   ACBCOMN+1                                                02067000
ACBID    EQU   ACBCOMN                                                  02068000
RPLERMSA EQU   RPLCOMN+72                                               02069000
RPLEMLEN EQU   RPLCOMN+70                                               02070000
RPLACTIV EQU   RPLCOMN+69                                               02071000
RPLBRANC EQU   RPLEXTD1                                                 02072000
RPLNIB   EQU   RPLEXTD1                                                 02073000
@NM00003 EQU   RPLEXTD1                                                 02074000
RPLEXIT  EQU   RPLEXTD1                                                 02075000
RPLNEXIT EQU   RPLEXTD1                                                 02076000
RPLEXSCH EQU   RPLEXTD1                                                 02077000
@NM00002 EQU   RPLRBAR+3                                                02078000
@NM00001 EQU   RPLAIXID                                                 02079000
RPLAXPKP EQU   RPLAIXID                                                 02080000
RPLAIXPC EQU   RPLRBAR                                                  02081000
RPLRSV88 EQU   RPLOPT8                                                  02082000
RPLUNCON EQU   RPLOPT8                                                  02083000
RPLACTV  EQU   RPLOPT8                                                  02084000
RPLSESS  EQU   RPLOPT8                                                  02085000
RPLPEND  EQU   RPLOPT8                                                  02086000
RPLODPRM EQU   RPLOPT8                                                  02087000
RPLODACP EQU   RPLOPT8                                                  02088000
RPLODACQ EQU   RPLOPT8                                                  02089000
RPLRSV78 EQU   RPLOPT7                                                  02090000
RPLRSV77 EQU   RPLOPT7                                                  02091000
RPLRLSOP EQU   RPLOPT7                                                  02092000
RPLTPOST EQU   RPLOPT7                                                  02093000
RPLQOPT  EQU   RPLOPT7                                                  02094000
RPLCNIMM EQU   RPLCNOPT                                                 02095000
RPLCNANY EQU   RPLCNOPT                                                 02096000
RPLCNALL EQU   RPLCNOPT                                                 02097000
RPLRSV68 EQU   RPLOPT6                                                  02098000
RPLRSV67 EQU   RPLOPT6                                                  02099000
RPLLOCK  EQU   RPLOPT6                                                  02100000
RPLNCOND EQU   RPLOPT6                                                  02101000
RPLCOND  EQU   RPLOPT6                                                  02102000
RPLEOT   EQU   RPLUNTYP                                                 02103000
RPLEOM   EQU   RPLUNTYP                                                 02104000
RPLEOB   EQU   RPLUNTYP                                                 02105000
RPLWROPT EQU   RPLOPT5                                                  02106000
RPLNODE  EQU   RPLOPT5                                                  02107000
RPLERACE EQU   RPLWRTYP                                                 02108000
RPLEAU   EQU   RPLWRTYP                                                 02109000
RPLNERAS EQU   RPLWRTYP                                                 02110000
RPLPSOPT EQU   RPLOPT5                                                  02111000
RPLSSNIN EQU   RPLOPT5                                                  02112000
RPLDLGIN EQU   RPLOPT5                                                  02113000
RPLBUFL  EQU   RPLCOMN+52                                               02114000
RPLRLEN  EQU   RPLCOMN+48                                               02115000
RPLCHAIN EQU   RPLNXTRP                                                 02116000
RPLOPT4  EQU   RPLOPTCD+3                                               02117000
RPLALIGN EQU   RPLOPT3                                                  02118000
RPLFMT   EQU   RPLOPT3                                                  02119000
RPLFLD   EQU   RPLOPT3                                                  02120000
RPLVFY   EQU   RPLOPT3                                                  02121000
RPLBLK   EQU   RPLOPT3                                                  02122000
RPLSFORM EQU   RPLOPT3                                                  02123000
RPLEODS  EQU   RPLOPT3                                                  02124000
RPLNSP   EQU   RPLOPT2                                                  02125000
RPLWAITX EQU   RPLOPT2                                                  02126000
RPLBWD   EQU   RPLOPT2                                                  02127000
RPLCNV   EQU   RPLOPT2                                                  02128000
RPLADD   EQU   RPLADR                                                   02129000
RPLECBIN EQU   RPLECBSW                                                 02130000
RPLGEN   EQU   RPLOPT1                                                  02131000
RPLKGE   EQU   RPLOPT1                                                  02132000
RPLASY   EQU   RPLOPT1                                                  02133000
RPLSKP   EQU   RPLOPT1                                                  02134000
RPLLOC   EQU   RPLOPT1                                                  02135000
RPLDAF   EQU   RPLARG+2                                                 02136000
RPLSAF   EQU   RPLARG                                                   02137000
RPLAREA  EQU   RPLCOMN+32                                               02138000
RPLTCBPT EQU   RPLCOMN+28                                               02139000
RPLCCHAR EQU   RPLCOMN+20                                               02140000
RPLSTRID EQU   RPLCOMN+18                                               02141000
RPLKEYL  EQU   RPLKEYLE                                                 02142000
RPLRDSOH EQU   RPLFDB3                                                  02143000
RPLRLG   EQU   RPLFDB3                                                  02144000
RPLLGFRC EQU   RPLFDB3                                                  02145000
RPLREOT  EQU   RPLFDB3                                                  02146000
RPLREOM  EQU   RPLFDB3                                                  02147000
RPLREOB  EQU   RPLFDB3                                                  02148000
RPLSV32  EQU   RPLFDB3                                                  02149000
RPLUINPT EQU   RPLFDB3                                                  02150000
RPLSTSAV EQU   RPLFDB2                                                  02151000
RPLCUERR EQU   RPLFDB2                                                  02152000
RPLDLGFL EQU   RPLFDB2                                                  02153000
RPLIOERR EQU   RPLFDB2                                                  02154000
RPLDVUNS EQU   RPLFDB2                                                  02155000
RPLATND  EQU   RPLFDB2                                                  02156000
RPLRVID  EQU   RPLFDB2                                                  02157000
RPLERLK  EQU   RPLFDB2                                                  02158000
RPLSTAT  EQU   RPLFDBWD                                                 02159000
RPLPOST  EQU   RPLECB                                                   02160000
RPLWAIT  EQU   RPLECB                                                   02161000
RPLPLHPT EQU   RPLCOMN+4                                                02162000
RPLLEN2  EQU   RPLLEN                                                   02163000
RPLREQ   EQU   RPLIDWD+2                                                02164000
RPLSTYP  EQU   RPLIDWD+1                                                02165000
RPLID    EQU   RPLIDWD                                                  02166000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02167000
@RT00370 EQU   GETNXBF                                                  02168000
@RF00368 EQU   IDAAPH01                                                 02169000
@RT00422 EQU   GETNXBF                                                  02170000
@RT00428 EQU   GETNXBF                                                  02171000
@PB00004 EQU   @PB00005                                                 02172000
@PB00003 EQU   @PB00004                                                 02173000
@PB00002 EQU   @PB00003                                                 02174000
@ENDDATA EQU   *                                                        02175000
         END   IDA019RV,(C'PLS2139',0701,78172)                         02176000
