         TITLE 'IDA019RW--VSAM BUFFER MANAGER--PART TWO                *00001000
                        '                                               00002000
IDA019RW CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RW  78.192'                                 0001 00009000
IDAABF   DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00171-IDAABF)                                     00013000
         ENTRY IDAABF                                                   00014000
IDAAIBF  DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00242-IDAAIBF)                                    00018000
         ENTRY IDAAIBF                                                  00019000
IDAGWSGW DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00252-IDAGWSGW)                                   00023000
         ENTRY IDAGWSGW                                                 00024000
IDAFRBA  DS    0H                                                  0001 00025000
         USING *,@15                                               0001 00026000
         B     @PROLOG                                             0001 00027000
         DC    AL2(@EP00310-IDAFRBA)                                    00028000
         ENTRY IDAFRBA                                                  00029000
         DROP  @15                                                      00030000
@PROLOG  BALR  @11,0                                               0001 00031000
@PSTART  DS    0H                                                  0001 00032000
         USING @PSTART,@11                                         0001 00033000
         AH    @15,4(,@15)                                         0001 00034000
         BR    @15                                                 0001 00035000
@EP00001 DS    0H                                                  0002 00036000
*                                                                  0171 00037000
*   /*****************************************************************/ 00038000
*   /*                                                               */ 00039000
*   /* IDAABF - ADD BUFFER                                           */ 00040000
*   /*                                                               */ 00041000
*   /*****************************************************************/ 00042000
*                                                                  0171 00043000
*/* FUNCTION = TO ADD A BUFC TO A PLACEHOLDER CHAIN BY ACQUIRING USE */ 00044000
*/*            OF THE BUFC HEADER (IF POSSIBLE), LOCATING A FREE     */ 00045000
*/*            DATA BUFC, PUTTING THE BUFC IN THE PLACEHOLDER CHAIN, */ 00046000
*/*            AND RESETTING THE BUFC COUNTS.                        */ 00047000
*/* INPUT = STANDARD VSAM REGISTERS, RPARM1 = NUMBER OF BUFFERS      */ 00048000
*/*         DESIRED IN THE I/O CHAIN OR, IF ZERO, THE MAXIMUM        */ 00049000
*/*         IS DESIRED.                                              */ 00050000
*/* OUTPUT = STANDARD VSAM REGISTERS.                                */ 00051000
*                                                                  0171 00052000
*IDAABF:                                                           0171 00053000
*   ENTRY;                                                         0171 00054000
@EP00171 DS    0H                                                  0172 00055000
*   RESPECIFY                                                      0172 00056000
*    (RPARM1,                                                      0172 00057000
*     RWORK2,                                                      0172 00058000
*     R14) RESTRICTED;              /* SAVE REGS                     */ 00059000
*                                                                  0172 00060000
*   /*****************************************************************/ 00061000
*   /*                                                               */ 00062000
*   /* FOR DBDC, RESET PLHASKBF & EXIT                               */ 00063000
*   /*                                                               */ 00064000
*   /*****************************************************************/ 00065000
*                                                                  0173 00066000
*   IF AMBLSR=ON|                   /* LOCAL SHR -                   */ 00067000
*       AMBGSR=ON                   /* OR GLOBAL SHARE?              */ 00068000
*     THEN                                                         0173 00069000
         TM    AMBLSR(RAMB),B'01100000'                            0173 00070000
         BZ    @RF00173                                            0173 00071000
*     DO;                           /* YES                           */ 00072000
*       PLHASKBF=OFF;               /* RESET                         */ 00073000
         NI    PLHASKBF(RPLH),B'11011111'                          0175 00074000
*       RETURN;                     /* EXIT                          */ 00075000
@EL00001 DS    0H                                                  0176 00076000
@EF00001 DS    0H                                                  0176 00077000
@ER00001 BR    @14                                                 0176 00078000
*     END;                                                         0177 00079000
*                                                                  0177 00080000
*   /*****************************************************************/ 00081000
*   /*                                                               */ 00082000
*   /* IF BUFFER HEADER CAN BE ACQUIRED, LOOK FOR AN UNASSIGNED BUFC */ 00083000
*   /*                                                               */ 00084000
*   /*****************************************************************/ 00085000
*                                                                  0178 00086000
*   TS(BUFDRTSB);                   /* SEE IF HEADER AVAIL           */ 00087000
@RF00173 L     @15,AMBBUFC(,RAMB)                                  0178 00088000
         TS    BUFDRTSB(@15)                                       0178 00089000
*   GEN(BNZ   BUSYHDR);             /* IF BUSY, EXIT                 */ 00090000
         BNZ   BUSYHDR                                                  00091000
*   PLHBUFHD=ON;                    /* SET OWNERSHIP BIT IN PLH    0180 00092000
*                                                            @ZA32757*/ 00093000
         OI    PLHBUFHD(RPLH),B'01000000'                          0180 00094000
*   RWORK2=R14;                     /* SAVE RETURN                   */ 00095000
         LR    RWORK2,R14                                          0181 00096000
*   RFY                                                            0182 00097000
*     R14 UNRSTD;                   /* RELEASE RETURN REGISTER       */ 00098000
*                                                                  0182 00099000
*   /*****************************************************************/ 00100000
*   /*                                                               */ 00101000
*   /* DETERMINE THE NUMBER OF BUFFERS DESIRED                       */ 00102000
*   /*                                                               */ 00103000
*   /*****************************************************************/ 00104000
*                                                                  0183 00105000
*   IF RPARM1^=ZERO THEN            /* IF SPECIFIC NO                */ 00106000
         LTR   RPARM1,RPARM1                                       0183 00107000
         BZ    @RF00183                                            0183 00108000
*     RPARM1=MIN(RPARM1,BUFDRMAX);  /* LIMIT TO MAX                  */ 00109000
         L     @10,AMBBUFC(,RAMB)                                  0184 00110000
         SLR   @07,@07                                             0184 00111000
         IC    @07,BUFDRMAX(,@10)                                  0184 00112000
         CR    RPARM1,@07                                          0184 00113000
         BNH   *+6                                                      00114000
         LR    RPARM1,@07                                          0184 00115000
*   ELSE                                                           0185 00116000
*     RPARM1=BUFDRMAX;              /* ELSE ALLOW MAX                */ 00117000
*                                                                  0185 00118000
         B     @RC00183                                            0185 00119000
@RF00183 L     @10,AMBBUFC(,RAMB)                                  0185 00120000
         SLR   RPARM1,RPARM1                                       0185 00121000
         IC    RPARM1,BUFDRMAX(,@10)                               0185 00122000
*   /*****************************************************************/ 00123000
*   /*                                                               */ 00124000
*   /* GET NUMBER OF ADDITIONAL BUFFERS TO BE ADDED                  */ 00125000
*   /*                                                               */ 00126000
*   /*****************************************************************/ 00127000
*                                                                  0186 00128000
*   RPARM1=RPARM1-PLHBFRNO;                                        0186 00129000
*                                                                  0186 00130000
@RC00183 SLR   @10,@10                                             0186 00131000
         IC    @10,PLHBFRNO(,RPLH)                                 0186 00132000
         SLR   RPARM1,@10                                          0186 00133000
*   /*****************************************************************/ 00134000
*   /*                                                               */ 00135000
*   /* SEE IF THIS PLH ALREADY HAS ALL IT NEEDS.                     */ 00136000
*   /*                                                               */ 00137000
*   /*****************************************************************/ 00138000
*                                                                  0187 00139000
*   IF RPARM1>ZERO THEN             /* IF BUFFERS TO ADD,            */ 00140000
         LTR   RPARM1,RPARM1                                       0187 00141000
         BNP   @RF00187                                            0187 00142000
*     DO;                           /* TRY TO ADD SOME               */ 00143000
*/*  SEE IF AN UNASSIGNED BUFC MAY BE IN THE BUFC POOL.              */ 00144000
*                                                                  0189 00145000
*       IF BUFDRREL=ON              /* SEE IF A BFR RELEASED         */ 00146000
*         THEN                      /* IF SO COME HERE               */ 00147000
         L     @10,AMBBUFC(,RAMB)                                  0189 00148000
         TM    BUFDRREL(@10),B'10000000'                           0189 00149000
         BNO   @RF00189                                            0189 00150000
*         DO;                                                      0190 00151000
*           BUFDRREL=OFF;           /* TURN OFF RELEASE FLAG         */ 00152000
         NI    BUFDRREL(@10),B'01111111'                           0191 00153000
*           GO TO SCANBFRS;         /* GO SCAN POOL                  */ 00154000
         B     SCANBFRS                                            0192 00155000
*         END;                      /* END OF RELEASE CODE           */ 00156000
*       IF BUFDRAVL=ON              /* SEE IF A BFR AVAILABLE        */ 00157000
*         THEN                      /* IF SO, LOOK FOR IT            */ 00158000
@RF00189 L     @10,AMBBUFC(,RAMB)                                  0194 00159000
         TM    BUFDRAVL(@10),B'01000000'                           0194 00160000
         BNO   @RF00194                                            0194 00161000
*         DO;                                                      0195 00162000
*SCANBFRS:                          /* FIND AVAILABLE BFR            */ 00163000
*           RBUFC=BUFDBUFC->BUFCHAIN;/* 1ST NON-INS BFR              */ 00164000
SCANBFRS L     @10,AMBBUFC(,RAMB)                                  0196 00165000
         L     @10,BUFDBUFC(,@10)                                  0196 00166000
         L     RBUFC,BUFCHAIN(,@10)                                0196 00167000
*           RESPECIFY                                              0197 00168000
*             RWORK1 RESTRICTED;    /* GET REGISTER                  */ 00169000
*                                                                  0197 00170000
*           /*********************************************************/ 00171000
*           /*                                                       */ 00172000
*           /* ISSUE A TEST-AND-SET ON ALL BUT THE INSERT BUFC(UNLESS*/ 00173000
*           /* SPLIT) SEARCH UNTIL ALL NEEDED BUFFERS OBTAINED OR NO */ 00174000
*           /* MORE BUFFERS ARE IN THE POOL.                         */ 00175000
*           /*                                                       */ 00176000
*           /*********************************************************/ 00177000
*                                                                  0198 00178000
*           DO WHILE(RBUFC^=ZERO&RPARM1^=ZERO);                    0198 00179000
         B     @DE00198                                            0198 00180000
@DL00198 DS    0H                                                  0199 00181000
*             GEN SETS(BUFCAVL)(TS   BUFCAVL(RBUFC));/* SEE IF AVAIL */ 00182000
         TS   BUFCAVL(RBUFC)                                            00183000
*             GEN(BNZ   UNAVLBFR);  /* BRANCH IF NOT                 */ 00184000
         BNZ   UNAVLBFR                                                 00185000
*             CALL CHAINBFR;        /* CHAIN BUFC                    */ 00186000
         BAL   @14,CHAINBFR                                        0201 00187000
*             RPARM1=RPARM1-ONE;    /* ONE LESS TO DO                */ 00188000
         BCTR  RPARM1,0                                            0202 00189000
*UNAVLBFR:                          /* BUFFER IS UNAVAILABLE         */ 00190000
*             RBUFC=BUFCHAIN;       /* PTR TO NEXT                   */ 00191000
UNAVLBFR L     RBUFC,BUFCHAIN(,RBUFC)                              0203 00192000
*           END;                    /* END, POOL SEARCHED            */ 00193000
@DE00198 SLR   @10,@10                                             0204 00194000
         CR    RBUFC,@10                                           0204 00195000
         BE    @DC00198                                            0204 00196000
         CR    RPARM1,@10                                          0204 00197000
         BNE   @DL00198                                            0204 00198000
@DC00198 DS    0H                                                  0205 00199000
*/*  DETERMINE THE NUMBER OF BUFFERS TO SCHEDULE EACH I/O.           */ 00200000
*                                                                  0205 00201000
*           IF PLHBFRNO<=TWO THEN   /* IF LESS THAN 3 BFRS,          */ 00202000
         CLI   PLHBFRNO(RPLH),2                                    0205 00203000
         BH    @RF00205                                            0205 00204000
*             PLHRMIN=PLHBFRNO;     /* OVERLAP UNDESIRABLE.          */ 00205000
         IC    @10,PLHBFRNO(,RPLH)                                 0206 00206000
         STC   @10,PLHRMIN(,RPLH)                                  0206 00207000
*           ELSE                    /* SOME OVERLAP DESIRABLE        */ 00208000
*             DO;                                                  0207 00209000
*                                                                  0207 00210000
         B     @RC00205                                            0207 00211000
@RF00205 DS    0H                                                  0208 00212000
*               /*****************************************************/ 00213000
*               /*                                                   */ 00214000
*               /* FIRST CONSIDER THAT THE RATIO OF CPU PROCESSING   */ 00215000
*               /* TIME FOR A LOGICAL RECORD TO THE CPU TIME REQUIRED*/ 00216000
*               /* FOR READING A CONTROL INTERVAL IS ABOUT 1/9.      */ 00217000
*               /*                                                   */ 00218000
*               /*****************************************************/ 00219000
*                                                                  0208 00220000
*               RWORK1=((AMDCINV/AMDLRECL)+EIGHT)/NINE;/* ROUND UP   */ 00221000
         L     @10,AMBDSB(,RAMB)                                   0208 00222000
         L     @08,AMDCINV(,@10)                                   0208 00223000
         SRDA  @08,32                                              0208 00224000
         D     @08,AMDLRECL(,@10)                                  0208 00225000
         LR    @14,@09                                             0208 00226000
         AL    @14,@CF00049                                        0208 00227000
         SRDA  @14,32                                              0208 00228000
         D     @14,@CF00051                                        0208 00229000
         LR    RWORK1,@15                                          0208 00230000
*               RFY                                                0209 00231000
*                 RWORK3 RSTD;      /* GET WORK REGISTER             */ 00232000
*                                                                  0209 00233000
*               /*****************************************************/ 00234000
*               /*                                                   */ 00235000
*               /* REQUIRE A MINIMUM OF 1/2                          */ 00236000
*               /*                                                   */ 00237000
*               /*****************************************************/ 00238000
*                                                                  0210 00239000
*               RWORK3=(PLHBFRNO+ONE)/TWO;/* SET MINIMUM VALUE       */ 00240000
         SLR   @10,@10                                             0210 00241000
         IC    @10,PLHBFRNO(,RPLH)                                 0210 00242000
         LA    @08,1                                               0210 00243000
         ALR   @08,@10                                             0210 00244000
         SRDA  @08,32                                              0210 00245000
         D     @08,@CF00045                                        0210 00246000
         LR    RWORK3,@09                                          0210 00247000
*               IF RWORK1^=ZERO THEN/* IF NON-SPANNED RECORDS,       */ 00248000
*                                                                  0211 00249000
         LTR   RWORK1,RWORK1                                       0211 00250000
         BZ    @RF00211                                            0211 00251000
*                 /***************************************************/ 00252000
*                 /*                                                 */ 00253000
*                 /* MAKE THE MINIMUM NUMBER OF BUFFERS TO SCHEDULE  */ 00254000
*                 /* PROPORTIONAL TO THE NUMBER OF RECORDS IN A      */ 00255000
*                 /* CONTROL INTERVAL AND TO THE TOTAL NUMBER OF     */ 00256000
*                 /* BUFFERS.                                        */ 00257000
*                 /*                                                 */ 00258000
*                 /***************************************************/ 00259000
*                                                                  0212 00260000
*                 PLHRMIN=RWORK3+(((RWORK1-ONE)*(PLHBFRNO-RWORK3))/     00261000
*                     RWORK1);                                     0212 00262000
         LR    @09,RWORK1                                          0212 00263000
         BCTR  @09,0                                               0212 00264000
         SLR   @10,RWORK3                                          0212 00265000
         MR    @08,@10                                             0212 00266000
         DR    @08,RWORK1                                          0212 00267000
         ALR   @09,RWORK3                                          0212 00268000
         STC   @09,PLHRMIN(,RPLH)                                  0212 00269000
*               ELSE                /* SPANNED RECORDS               */ 00270000
*                 PLHRMIN=RWORK3;   /* USE 1/2 THE BUFFERS           */ 00271000
         B     @RC00211                                            0213 00272000
@RF00211 STC   RWORK3,PLHRMIN(,RPLH)                               0213 00273000
*               RFY                                                0214 00274000
*                 RWORK3 UNRSTD;    /* DROP WORK REGISTER            */ 00275000
*                                                                  0214 00276000
@RC00211 DS    0H                                                  0215 00277000
*               /*****************************************************/ 00278000
*               /*                                                   */ 00279000
*               /* IF SPEED CREATE TRY TO SCHEDULE AN INTEGRAL       */ 00280000
*               /* MULTIPLE OF TRACKS TO ELIMINATE TIME SPENT WAITING*/ 00281000
*               /* FOR REPOSITIONING.                                */ 00282000
*               /*                                                   */ 00283000
*               /*****************************************************/ 00284000
*                                                                  0215 00285000
*               IF AMBSPEED=ON THEN /* IN SPEED CREATE?              */ 00286000
         TM    AMBSPEED(RAMB),B'00001000'                          0215 00287000
         BNO   @RF00215                                            0215 00288000
*                 DO;               /* YES, ADJUST SCHED VAL         */ 00289000
*                   RWORK1=LPMBPTRK/AMDCINV;/* GET CIS PER TRK       */ 00290000
         L     @10,AMBEDB(,RAMB)                                   0217 00291000
         L     @10,EDBLPMBC(,@10)                                  0217 00292000
         L     @07,AMBDSB(,RAMB)                                   0217 00293000
         L     @08,LPMBPTRK(,@10)                                  0217 00294000
         SRDA  @08,32                                              0217 00295000
         D     @08,AMDCINV(,@07)                                   0217 00296000
         LR    RWORK1,@09                                          0217 00297000
*                   IF PLHBFRNO>=RWORK1 THEN/* NO. BFRS >= CIS/TRK?  */ 00298000
         SLR   @10,@10                                             0218 00299000
         IC    @10,PLHBFRNO(,RPLH)                                 0218 00300000
         CR    RWORK1,@10                                          0218 00301000
         BH    @RF00218                                            0218 00302000
*                     DO;           /* ADJUST IF BFRS > TRACK        */ 00303000
*                       IF PLHRMIN<RWORK1 THEN/* IF SCHED VAL < 1 TRK*/ 00304000
         SLR   @10,@10                                             0220 00305000
         IC    @10,PLHRMIN(,RPLH)                                  0220 00306000
         CR    RWORK1,@10                                          0220 00307000
         BNH   @RF00220                                            0220 00308000
*                         PLHRMIN=RWORK1;/* MAKE IT ONE TRACK.       */ 00309000
         STC   RWORK1,PLHRMIN(,RPLH)                               0221 00310000
*                       ELSE        /* >= 1 TRK, ROUND DOWN          */ 00311000
*                         IF RWORK1^=ZERO THEN/* ENSURE >1 CI ON TRK */ 00312000
         B     @RC00220                                            0222 00313000
@RF00220 LTR   RWORK1,RWORK1                                       0222 00314000
         BZ    @RF00222                                            0222 00315000
*                           PLHRMIN=(PLHRMIN/RWORK1)*RWORK1;/* TRK 0223 00316000
*                                      MULTIPLE.                     */ 00317000
         SLR   @09,@09                                             0223 00318000
         IC    @09,PLHRMIN(,RPLH)                                  0223 00319000
         SLR   @08,@08                                             0223 00320000
         DR    @08,RWORK1                                          0223 00321000
         MR    @08,RWORK1                                          0223 00322000
         STC   @09,PLHRMIN(,RPLH)                                  0223 00323000
*                     END;          /* END OF BFRS > CI/TRK          */ 00324000
*                   ELSE            /* NO. BFRS < CIS/TRK            */ 00325000
*                     IF PLHBFRNO>=(RWORK1+ONE)/TWO THEN/* IF MORE 0225 00326000
*                                      THAN 1/2 TRK                  */ 00327000
         B     @RC00218                                            0225 00328000
@RF00218 LA    @10,2                                               0225 00329000
         LA    @07,1                                               0225 00330000
         ALR   @07,RWORK1                                          0225 00331000
         LR    @08,@07                                             0225 00332000
         SRDA  @08,32                                              0225 00333000
         DR    @08,@10                                             0225 00334000
         SLR   @14,@14                                             0225 00335000
         IC    @14,PLHBFRNO(,RPLH)                                 0225 00336000
         CR    @09,@14                                             0225 00337000
         BH    @RF00225                                            0225 00338000
*                       PLHRMIN=(RWORK1+ONE)/TWO;/* USE 1/2 TRK OF 0226 00339000
*                                      BUFFERS                       */ 00340000
         LR    @08,@07                                             0226 00341000
         SRDA  @08,32                                              0226 00342000
         DR    @08,@10                                             0226 00343000
         STC   @09,PLHRMIN(,RPLH)                                  0226 00344000
*                 END;              /* END OF SPEED CREATE           */ 00345000
@RF00225 DS    0H                                                  0227 00346000
@RC00218 DS    0H                                                  0228 00347000
*             END;                  /* END OF CALCULATION            */ 00348000
@RF00215 DS    0H                                                  0229 00349000
*           RESPECIFY                                              0229 00350000
*             RWORK1 UNRESTRICTED;  /* DROP REGISTER                 */ 00351000
@RC00205 DS    0H                                                  0230 00352000
*           IF RPARM1^=ZERO THEN    /* IF NOT GOTTEN                 */ 00353000
         LTR   RPARM1,RPARM1                                       0230 00354000
         BZ    @RF00230                                            0230 00355000
*             BUFDRAVL=OFF;         /* INDICATE NONE AVAILABLE       */ 00356000
         L     @10,AMBBUFC(,RAMB)                                  0231 00357000
         NI    BUFDRAVL(@10),B'10111111'                           0231 00358000
*           ELSE                                                   0232 00359000
*             BUFDRAVL=ON;          /* BFR MAY BE AVAILABLE          */ 00360000
         B     @RC00230                                            0232 00361000
@RF00230 L     @10,AMBBUFC(,RAMB)                                  0232 00362000
         OI    BUFDRAVL(@10),B'01000000'                           0232 00363000
*         END;                      /* END, BFR AVAILABLE CODE       */ 00364000
@RC00230 DS    0H                                                  0234 00365000
*     END;                          /* END, BUFFERS TO ADD           */ 00366000
@RF00194 DS    0H                                                  0235 00367000
*   PLHASKBF=OFF;                   /* STOP ASKING                   */ 00368000
@RF00187 NI    PLHASKBF(RPLH),B'11011111'                          0235 00369000
*   RFY                                                            0236 00370000
*     R14 RSTD;                     /* GET RETURN REGISTER           */ 00371000
*   R14=RWORK2;                     /* RESTORE R14                   */ 00372000
         LR    R14,RWORK2                                          0237 00373000
*   RFY                                                            0238 00374000
*     RWORK2 UNRSTD;                /* DROP REG                      */ 00375000
*                                                                  0238 00376000
*   /*****************************************************************/ 00377000
*   /*                                                               */ 00378000
*   /* RELEASE THE BUFFER HEADER                                     */ 00379000
*   /*                                                               */ 00380000
*   /*****************************************************************/ 00381000
*                                                                  0239 00382000
*   BUFDRTSB=CZERO;                 /* RELEASE BUFC HEADER           */ 00383000
         L     @10,AMBBUFC(,RAMB)                                  0239 00384000
         MVI   BUFDRTSB(@10),B'00000000'                           0239 00385000
*   PLHBUFHD=OFF;                   /* CLEAR OWNERSHIP BIT IN PLH  0240 00386000
*                                                            @ZA32757*/ 00387000
         NI    PLHBUFHD(RPLH),B'10111111'                          0240 00388000
*BUSYHDR:                                                          0241 00389000
*   RETURN;                         /* END OF ADD BUFFER CODE        */ 00390000
         B     @EL00001                                            0241 00391000
*                                                                  0242 00392000
*   /*****************************************************************/ 00393000
*   /*                                                               */ 00394000
*   /* IDAAIBF - ADD INSERT BUFFER                                   */ 00395000
*   /*                                                               */ 00396000
*   /*****************************************************************/ 00397000
*                                                                  0242 00398000
*/* FUNCTION = ADD THE DATA INSERT BUFC TO THE PLH I/O CHAIN         */ 00399000
*/* INPUT = STANDARD VSAM REGISTERS                                  */ 00400000
*/* OUTPUT = RBUFC CONTAINS INSERT BUFC, STANDARD REGS               */ 00401000
*                                                                  0242 00402000
*IDAAIBF:                                                          0242 00403000
*   ENTRY;                                                         0242 00404000
@EP00242 DS    0H                                                  0243 00405000
*   RFY                                                            0243 00406000
*    (R14,                                                         0243 00407000
*     RWORK1,                                                      0243 00408000
*     RWORK2) RSTD;                 /* GET REGS                      */ 00409000
*   RWORK2=R14;                     /* SAVE R14                      */ 00410000
         LR    RWORK2,R14                                          0244 00411000
*   RBUFC=DIWBUFC;                  /* POINT TO INS                  */ 00412000
         L     @10,AMBIWA(,RAMB)                                   0245 00413000
         L     RBUFC,DIWBUFC(,@10)                                 0245 00414000
*   CALL CHAINBFR;                  /* PUT ON CHAIN                  */ 00415000
         BAL   @14,CHAINBFR                                        0246 00416000
*   PLHRMIN=PLHRMIN+ONE;            /* INCREMENT SCHEDULE COUNT      */ 00417000
         LA    @10,1                                               0247 00418000
         SLR   @07,@07                                             0247 00419000
         IC    @07,PLHRMIN(,RPLH)                                  0247 00420000
         ALR   @10,@07                                             0247 00421000
         STC   @10,PLHRMIN(,RPLH)                                  0247 00422000
*   BUFCINS=OFF;                    /* NO LONGER INS BFR             */ 00423000
         NI    BUFCINS(RBUFC),B'11011111'                          0248 00424000
*   R14=RWORK2;                     /* RESTORE R14                   */ 00425000
         LR    R14,RWORK2                                          0249 00426000
*   RFY                                                            0250 00427000
*    (RWORK1,                                                      0250 00428000
*     RWORK2) UNRSTD;               /* DROP REGS                     */ 00429000
*   RETURN;                         /* EXIT                          */ 00430000
         B     @EL00001                                            0251 00431000
*                                                                  0252 00432000
*   /*****************************************************************/ 00433000
*   /*                                                               */ 00434000
*   /* IDAGWSGW - GET WORK BUFFER FOR SPANNED RECORD                 */ 00435000
*   /*                                                               */ 00436000
*   /*****************************************************************/ 00437000
*                                                                  0252 00438000
*/* FUNCTION = LOCATE AN EMPTY BUFFER IN THE PLH CHAIN (MAY BE THE   */ 00439000
*/*            CURRENT BUFC).                                        */ 00440000
*/* INPUT = STANDARD VSAM REGISTERS.                                 */ 00441000
*/* OUTPUT = RBUFC POINTS TO THE EMPTY BUFFER.  OTHER REGISTERS ARE  */ 00442000
*/*          STANDARD.                                               */ 00443000
*                                                                  0252 00444000
*IDAGWSGW:                                                         0252 00445000
*   ENTRY;                                                         0252 00446000
@EP00252 DS    0H                                                  0253 00447000
*   RFY                                                            0253 00448000
*    (R14,                                                         0253 00449000
*     RWORK1) RSTD;                 /* GET REGISTERS                 */ 00450000
*   RBUFC=PLHNBUFC;                 /* POINT TO THE 1ST EMPTY        */ 00451000
         L     RBUFC,PLHNBUFC(,RPLH)                               0254 00452000
*   RWORK1=ZERO;                    /* NO EMPTY NON-MW YET           */ 00453000
*                                                                  0255 00454000
         SLR   RWORK1,RWORK1                                       0255 00455000
*   /*****************************************************************/ 00456000
*   /*                                                               */ 00457000
*   /* ATTEMPT TO LOCATE AN EMPTY NON-MW BUFC                        */ 00458000
*   /*                                                               */ 00459000
*   /*****************************************************************/ 00460000
*                                                                  0256 00461000
*   DO WHILE RBUFC^=PLHDBUFC&RWORK1=ZERO;                          0256 00462000
         B     @DE00256                                            0256 00463000
@DL00256 DS    0H                                                  0257 00464000
*     IF BUFCMW=OFF THEN            /* IF NON-MW, REMEMBER           */ 00465000
         TM    BUFCMW(RBUFC),B'10000000'                           0257 00466000
         BNZ   @RF00257                                            0257 00467000
*       RWORK1=RBUFC;               /* ADDR AND CAUSE EXIT           */ 00468000
         LR    RWORK1,RBUFC                                        0258 00469000
*     ELSE                          /* ELSE NEXT IN I/O CHAIN        */ 00470000
*       RBUFC=BUFCNXT2;             /* ELSE NEXT IN I/O CHAIN        */ 00471000
         B     @RC00257                                            0259 00472000
@RF00257 L     @10,BUFCNXT2-1(,RBUFC)                              0259 00473000
         LA    @10,0(,@10)                                         0259 00474000
         LR    RBUFC,@10                                           0259 00475000
*   END;                            /* END OF BUFC SEARCH            */ 00476000
@RC00257 DS    0H                                                  0260 00477000
@DE00256 C     RBUFC,PLHDBUFC(,RPLH)                               0260 00478000
         BE    @DC00256                                            0260 00479000
         LTR   RWORK1,RWORK1                                       0260 00480000
         BZ    @DL00256                                            0260 00481000
@DC00256 DS    0H                                                  0261 00482000
*   IF RWORK1^=ZERO THEN            /* IF NON-MW FOUND,              */ 00483000
         LTR   RWORK1,RWORK1                                       0261 00484000
         BZ    @RF00261                                            0261 00485000
*     RBUFC=RWORK1;                 /* USE IT.                       */ 00486000
         LR    RBUFC,RWORK1                                        0262 00487000
*   ELSE                            /* ELSE, USE OTHER.              */ 00488000
*     IF BUFCMW=ON THEN             /* WRITE 1ST IF MW ON            */ 00489000
         B     @RC00261                                            0263 00490000
@RF00261 TM    BUFCMW(RBUFC),B'10000000'                           0263 00491000
         BNO   @RF00263                                            0263 00492000
*       DO;                                                        0264 00493000
*         GEN(IDASVR14);            /* SAVE RETURN REGISTER          */ 00494000
         IDASVR14                                                       00495000
*I01:                                                              0266 00496000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 00497000
I01      DS    0H                                                  0267 00498000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 00499000
         L     @10,@CV00042                                        0267 00500000
         LR    @15,@10                                             0267 00501000
         BALR  @14,@15                                             0267 00502000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00503000
         BALR @11,0                                                     00504000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00505000
         USING *,@11                                                    00506000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00507000
         L     @11,=A(@PSTART)                                          00508000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00509000
         USING @PSTART,@11                                              00510000
*         END I01;                  /* WRITE OUT BUFFER              */ 00511000
*         GEN(IDARST14);            /* RESTORE RETURN REG            */ 00512000
         IDARST14                                                       00513000
*       END;                        /* END OF WRITE CODE             */ 00514000
*   RFY                                                            0275 00515000
*     RWORK1 UNRSTD;                /* DROP WORK REGISTER            */ 00516000
*   RETURN;                         /* RETURN TO CALLER              */ 00517000
         B     @EL00001                                            0276 00518000
*                                                                  0277 00519000
*   /*****************************************************************/ 00520000
*   /*                                                               */ 00521000
*   /* READBFR - READ A CONTROL INTERVAL                             */ 00522000
*   /*                                                               */ 00523000
*   /*****************************************************************/ 00524000
*                                                                  0277 00525000
*/*                                                                0277 00526000
*01 FUNCTION = CALL I/O MANAGER, CALL IDAWAIT, AND CHECK FOR READ ERROR 00527000
*01 INPUT = RBUFC IS THE BUFC TO READ, RPARM1 IS THE IOB POINTER, AND   00528000
*           THE OTHER REGISTERS HAVE THEIR STANDARD CONTENTS.      0277 00529000
*01 OUTPUT = REGISTERS UNCHANGED, ERROR CODE SET IN RPL.             */ 00530000
*                                                                  0277 00531000
*READBFR:                                                          0277 00532000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0277 00533000
READBFR  DS    0H                                                  0278 00534000
*   GEN SETS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE RETURN REGISTER      */ 00535000
         IDASVR14                                                       00536000
*   RFY                                                            0279 00537000
*     R14 UNRSTD;                   /* RELEASE REGISTER              */ 00538000
*   IF RPLASY=OFF THEN              /* SYNCHRONOUS REQUEST?  @Z40GSDT*/ 00539000
         TM    RPLASY(RRPL),B'00001000'                            0280 00540000
         BNZ   @RF00280                                            0280 00541000
*     PLHSR=ON;                     /* YES, SUSPEND/RESUME   @Z40GSDT*/ 00542000
         OI    PLHSR(RPLH),B'00000001'                             0281 00543000
*I02:                                                              0282 00544000
*   DO;                             /* IDACALL(IDA019R3)             */ 00545000
@RF00280 DS    0H                                                  0282 00546000
I02      DS    0H                                                  0283 00547000
*     CALL IDA019R3;                /* EXIT TO IDA019R3              */ 00548000
         L     @15,@CV00037                                        0283 00549000
         BALR  @14,@15                                             0283 00550000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00551000
         BALR @11,0                                                     00552000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00553000
         USING *,@11                                                    00554000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00555000
         L     @11,=A(@PSTART)                                          00556000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00557000
         USING @PSTART,@11                                              00558000
*   END I02;                        /* CALL I/O MGR FOR READ         */ 00559000
*I03:                                                              0289 00560000
*   DO;                             /* IDACALL(IDAWAIT)              */ 00561000
I03      DS    0H                                                  0290 00562000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 00563000
         L     @15,@CV00040                                        0290 00564000
         BALR  @14,@15                                             0290 00565000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00566000
         BALR @11,0                                                     00567000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00568000
         USING *,@11                                                    00569000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00570000
         L     @11,=A(@PSTART)                                          00571000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00572000
         USING @PSTART,@11                                              00573000
*   END I03;                        /* WAIT FOR I/O COMPLETION       */ 00574000
*   CALL ERRORCHK;                  /* CHECK FOR READ ERROR          */ 00575000
         BAL   @14,ERRORCHK                                        0296 00576000
*   GEN(IDARST14);                  /* RESTORE RETURN                */ 00577000
         IDARST14                                                       00578000
*   END READBFR;                    /* END OF READ BUFFER            */ 00579000
@EL00002 DS    0H                                                  0298 00580000
@EF00002 DS    0H                                                  0298 00581000
@ER00002 BR    @14                                                 0298 00582000
*                                                                  0299 00583000
*   /*****************************************************************/ 00584000
*   /*                                                               */ 00585000
*   /* ERRORCHK -- CHECK FOR READ ERROR                              */ 00586000
*   /*                                                               */ 00587000
*   /*****************************************************************/ 00588000
*                                                                  0299 00589000
*/*                                                                0299 00590000
*01 FUNCTION = TEST BUFC FOR SUCCESS OF READ.                      0299 00591000
*01 INPUT = RBUFC IS ADDRESS OF BUFC FOR READ.                     0299 00592000
*01 OUTPUT = RETURN CODE IS SET IN THE RPL.                          */ 00593000
*                                                                  0299 00594000
*ERRORCHK:                          /* CHECK FOR ERRORS              */ 00595000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0299 00596000
ERRORCHK DS    0H                                                  0300 00597000
*   RFY                                                            0300 00598000
*     R14 RSTD;                     /* GUARD RETURN REGISTER         */ 00599000
*   IF BUFCER1=ON|                  /* CHECK FOR INPUT ERRIR,        */ 00600000
*       BUFCER2=ON|                 /* OUTPUT ERROR, OR READ         */ 00601000
*       BUFCRRD=ON THEN             /* UNDONE BECAUSE OF ERROR       */ 00602000
         TM    BUFCER1(RBUFC),B'00011000'                          0301 00603000
         BNZ   @RT00301                                            0301 00604000
         TM    BUFCRRD(RBUFC),B'00100000'                          0301 00605000
         BNO   @RF00301                                            0301 00606000
@RT00301 DS    0H                                                  0302 00607000
*     RPLERREG='0C'X;               /* ELSEWHERE IN BUFC CHAIN       */ 00608000
         MVI   RPLERREG(RRPL),X'0C'                                0302 00609000
*   IF BUFCXEDB=ON                  /* IF VOLUME NOT MOUNTED,        */ 00610000
*     THEN                          /* SET ERROR.                    */ 00611000
@RF00301 TM    BUFCXEDB(RBUFC),B'00000100'                         0303 00612000
         BNO   @RF00303                                            0303 00613000
*     DO;                                                          0304 00614000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 00615000
         MVI   RPLERREG(RRPL),X'08'                                0305 00616000
*       RPLERRCD=RPLNOMNT;          /* SET MOUNT ERROR               */ 00617000
         MVI   RPLERRCD(RRPL),X'18'                                0306 00618000
*     END;                          /* END OF MOUNT ERROR            */ 00619000
*   RFY                                                            0308 00620000
*     R14 UNRSTD;                   /* RELEASE RETURN REG            */ 00621000
*   END ERRORCHK;                   /* END OF READ ERROR CHECK       */ 00622000
@EL00003 DS    0H                                                  0309 00623000
@EF00003 DS    0H                                                  0309 00624000
@ER00003 BR    @14                                                 0309 00625000
*                                                                  0310 00626000
*   /*****************************************************************/ 00627000
*   /*                                                               */ 00628000
*   /* IDAFRBA - FIND RBA                                            */ 00629000
*   /*                                                               */ 00630000
*   /*****************************************************************/ 00631000
*                                                                  0310 00632000
*/* FUNCTION = FIND THE RBA OF THE NEXT CONTROL INTERVAL IN LOGICAL  */ 00633000
*/*            OR PHYSICAL SEQUENCE.                                 */ 00634000
*/* INPUT = PLHNRBA IS THE LAST RBA RETRIEVED (SET BY IDAFRBA AND    */ 00635000
*/*         BY IDAGRB). FOR KEYED RETRIEVAL, THE SEQUENCE SET        */ 00636000
*/*         POINTERS IN THE PLACEHOLDER REFLECT THE LAST CONTROL     */ 00637000
*/*         INTERVAL ACCESSED, RAMB = DATA AMB.                      */ 00638000
*/* OUTPUT = RPARM1 IS SET TO THE NEXT RBA AND PLHNRBA OR THE SEQ    */ 00639000
*/*          SET POINTERS ARE UPDATED, RAMB = DATA AMB ( INDEX AMB   */ 00640000
*/*          IF I/O ERROR IN THE INDEX).                             */ 00641000
*/*          R15 = 0 IF NEXT CI RBA PRESENTED WITH NO EXCEPTIONAL    */ 00642000
*/*          CONDITION, R15 = 2 IF READ AHEAD SHOULD BE STOPPED      */ 00643000
*/*          IMMEDIATELY (NO NEXT CI RETURNED), R15 = 4 IF END OF    */ 00644000
*/*          DATA, R15 = 6 IF READ AHEAD SHOULD BE STOPPED AFTER THE */ 00645000
*/*          CURRENT CI RBA THAT IS RETURNED HAS BEEN PROCESSED.     */ 00646000
*                                                                  0310 00647000
*IDAFRBA:                                                          0310 00648000
*   ENTRY;                          /* GET NEXT SEQUENTIAL RBA       */ 00649000
@EP00310 DS    0H                                                  0311 00650000
*   RESPECIFY                                                      0311 00651000
*     R14 RESTRICTED;               /* SAVE RETURN REG               */ 00652000
*   RFY                                                            0312 00653000
*     RWORK3 RSTD;                  /* GET WORK REGISTER             */ 00654000
*                                                                  0312 00655000
*   /*****************************************************************/ 00656000
*   /*                                                               */ 00657000
*   /* IF THE RPL DOES NOT SPECIFY KEYED ACCESS, GET THE NEXT RBA IN */ 00658000
*   /* PHYSICAL SEQUENCE.                                            */ 00659000
*   /*                                                               */ 00660000
*   /*****************************************************************/ 00661000
*                                                                  0313 00662000
*   IF RPLKEY=OFF|                  /* IF NOT KEYED ACCESS           */ 00663000
*       AMDRRDS=ON                  /* OR IF AN RRDS,                */ 00664000
*     THEN                          /* GET NEXT RBA IN               */ 00665000
         TM    RPLKEY(RRPL),B'10000000'                            0313 00666000
         BZ    @RT00313                                            0313 00667000
         L     @15,AMBDSB(,RAMB)                                   0313 00668000
         TM    AMDRRDS(@15),B'00000010'                            0313 00669000
         BNO   @RF00313                                            0313 00670000
@RT00313 DS    0H                                                  0314 00671000
*     DO;                           /* PHYSICAL SEQUENCE             */ 00672000
*                                                                  0314 00673000
*       /*************************************************************/ 00674000
*       /*                                                           */ 00675000
*       /* ADVANCE TO NEXT CONTROL INTERVAL AND CHECK IT FOR         */ 00676000
*       /* END-OF-DATA AND FOR A GAP AT THE END OF A KEY RANGE.      */ 00677000
*       /* FWD/BWD                                                   */ 00678000
*       /*                                                           */ 00679000
*       /*************************************************************/ 00680000
*                                                                  0315 00681000
*       RFY                                                        0315 00682000
*         IDAARDB BASED(RWORK3);    /* SET ARDB BASE                 */ 00683000
*       RWORK3=AMDPARDB;            /* POINT TO FIRST ARDB           */ 00684000
*                                                                  0316 00685000
         L     @15,AMBDSB(,RAMB)                                   0316 00686000
         L     RWORK3,AMDPARDB(,@15)                               0316 00687000
*       /*************************************************************/ 00688000
*       /*                                                           */ 00689000
*       /* SEE WHAT DIRECTION THE ADVANCEMENT IS TO TAKE PLACE.      */ 00690000
*       /*                                                           */ 00691000
*       /*************************************************************/ 00692000
*                                                                  0317 00693000
*       IF RPLBWD=ON THEN           /* SEE IF BWD                    */ 00694000
         TM    RPLBWD(RRPL),B'00010000'                            0317 00695000
         BNO   @RF00317                                            0317 00696000
*         DO;                                                      0318 00697000
*                                                                  0318 00698000
*           /*********************************************************/ 00699000
*           /*                                                       */ 00700000
*           /* DECREMENT TO THE PRECEDING CONTROL INTERVAL.          */ 00701000
*           /*                                                       */ 00702000
*           /*********************************************************/ 00703000
*                                                                  0319 00704000
*           IF PLHNRBA=ZERO THEN    /* SEE IF EOD                    */ 00705000
         L     @15,PLHNRBA(,RPLH)                                  0319 00706000
         LTR   @15,@15                                             0319 00707000
         BNZ   @RF00319                                            0319 00708000
*             DO;                                                  0320 00709000
*               R15=RPLEODER;       /* SET RETURN CODE       @ZA27875*/ 00710000
         LA    R15,4                                               0321 00711000
*               GOTO FRBAEXIT;      /* EXIT FRBA             @ZA27875*/ 00712000
         B     FRBAEXIT                                            0322 00713000
*             END;                                                 0323 00714000
*           RPARM1=PLHNRBA-AMDCINV; /* PRIOR CI                      */ 00715000
@RF00319 L     @15,AMBDSB(,RAMB)                                   0324 00716000
         L     RPARM1,PLHNRBA(,RPLH)                               0324 00717000
         SL    RPARM1,AMDCINV(,@15)                                0324 00718000
*           DO WHILE RWORK3^=ZERO;  /* CHK ALL ARDBS                 */ 00719000
         B     @DE00325                                            0325 00720000
@DL00325 DS    0H                                                  0326 00721000
*             IF PLHNRBA=ARDERBA THEN/* AT KEY RANGE                 */ 00722000
         CLC   PLHNRBA(4,RPLH),ARDERBA(RWORK3)                     0326 00723000
         BNE   @RF00326                                            0326 00724000
*               DO;                 /* GAP--SKIP OVER                */ 00725000
*                 RPARM1=ARDHRBA-AMDCINV;/* LAST IN ARDB             */ 00726000
         L     @15,AMBDSB(,RAMB)                                   0328 00727000
         L     RPARM1,ARDHRBA(,RWORK3)                             0328 00728000
         SL    RPARM1,AMDCINV(,@15)                                0328 00729000
*                 RWORK3=ZERO;      /* RBA FOUND                     */ 00730000
         SLR   RWORK3,RWORK3                                       0329 00731000
*               END;                /* END OF GAP TEST               */ 00732000
*             ELSE                  /* NEXT ARDB                     */ 00733000
*               RWORK3=ARDNPTR;     /* NEXT ARDB                     */ 00734000
         B     @RC00326                                            0331 00735000
@RF00326 L     RWORK3,ARDNPTR(,RWORK3)                             0331 00736000
*           END;                    /* END OF SEARCH                 */ 00737000
@RC00326 DS    0H                                                  0332 00738000
@DE00325 LTR   RWORK3,RWORK3                                       0332 00739000
         BNZ   @DL00325                                            0332 00740000
*           RWORK3=PLHNRBA;         /* SET CA BDY TEST               */ 00741000
         L     RWORK3,PLHNRBA(,RPLH)                               0333 00742000
*           PLHRVRS=ON;             /* CAUSE BUFFER REORDER          */ 00743000
         OI    PLHRVRS(RPLH),B'00001000'                           0334 00744000
*         END;                      /* END OF BWD CODE               */ 00745000
*                                                                  0335 00746000
*       /*************************************************************/ 00747000
*       /*                                                           */ 00748000
*       /* HERE FOR FORWARD PROCESSING                               */ 00749000
*       /*                                                           */ 00750000
*       /*************************************************************/ 00751000
*                                                                  0336 00752000
*       ELSE                        /* FWD                           */ 00753000
*         DO;                                                      0336 00754000
         B     @RC00317                                            0336 00755000
@RF00317 DS    0H                                                  0337 00756000
*           RPARM1=PLHNRBA+AMDCINV; /* GO TO NEXT CNTL INTVL         */ 00757000
         L     @15,AMBDSB(,RAMB)                                   0337 00758000
         L     RPARM1,PLHNRBA(,RPLH)                               0337 00759000
         AL    RPARM1,AMDCINV(,@15)                                0337 00760000
*           DO WHILE RWORK3^=ZERO;  /* SEARCH ALL ARDBS              */ 00761000
         B     @DE00338                                            0338 00762000
@DL00338 DS    0H                                                  0339 00763000
*             IF RPARM1=ARDHRBA     /* IF END OF KEY RANGE           */ 00764000
*               THEN                /* SEE IF END OF DATA            */ 00765000
         CL    RPARM1,ARDHRBA(,RWORK3)                             0339 00766000
         BNE   @RF00339                                            0339 00767000
*               DO;                                                0340 00768000
*                 IF ARDEOD=ON THEN /* SEE IF EOD IN THIS ARDB       */ 00769000
         TM    ARDEOD(RWORK3),B'00001000'                          0341 00770000
         BNO   @RF00341                                            0341 00771000
*                   DO;                                            0342 00772000
*                     R15=RPLEODER; /* SET RETURN CODE       @ZA27875*/ 00773000
         LA    R15,4                                               0343 00774000
*                     GOTO FRBAEXIT;/* EXIT FRBA             @ZA27875*/ 00775000
         B     FRBAEXIT                                            0344 00776000
*                   END;                                           0345 00777000
*                 RPARM1=ARDERBA;   /* POINT TO RBA AFTER THIS       */ 00778000
@RF00341 L     RPARM1,ARDERBA(,RWORK3)                             0346 00779000
*                 RWORK3=ZERO;      /* INDICATE RBA FOUND            */ 00780000
         SLR   RWORK3,RWORK3                                       0347 00781000
*               END;                /* END OF EOKR CODE              */ 00782000
*             ELSE                  /* GO TO NEXT ARDB               */ 00783000
*               RWORK3=ARDNPTR;     /* GO TO NEXT ARDB               */ 00784000
         B     @RC00339                                            0349 00785000
@RF00339 L     RWORK3,ARDNPTR(,RWORK3)                             0349 00786000
*           END;                    /* END OF ARDB SEARCH            */ 00787000
@RC00339 DS    0H                                                  0350 00788000
@DE00338 LTR   RWORK3,RWORK3                                       0350 00789000
         BNZ   @DL00338                                            0350 00790000
*           RWORK3=RPARM1;          /* CA BDY TEST                   */ 00791000
         LR    RWORK3,RPARM1                                       0351 00792000
*         END;                      /* END OF FWD CODE               */ 00793000
*                                                                  0352 00794000
*       /*************************************************************/ 00795000
*       /*                                                           */ 00796000
*       /* RETURN WITH CODE IN REGISTER 15 IF THE NEXT RBA IS ON A   */ 00797000
*       /* NEW CONTROL AREA AND THERE ARE STILL BUFFERS TO PROCESS IN*/ 00798000
*       /* THE OLD CONTROL AREA. IF NO PROCESS BUFFERS, FORCE WRITES.*/ 00799000
*       /*                                                           */ 00800000
*       /*************************************************************/ 00801000
*                                                                  0353 00802000
*       RFY                                                        0353 00803000
*         IDAARDB BASED(PLHARDB);   /* RESET ARDB BASE               */ 00804000
@RC00317 DS    0H                                                  0354 00805000
*       IF RWORK3X//(AMDCINV*AMDCIPCA)=ZERO/* IF RBA IS BDY  @ZA10887*/ 00806000
*         THEN                      /* OF CA SEE IF PROCESSING       */ 00807000
         L     @15,AMBDSB(,RAMB)                                   0354 00808000
         L     @10,AMDCINV(,@15)                                   0354 00809000
         MH    @10,AMDCIPCA(,@15)                                  0354 00810000
         LR    @09,RWORK3X                                         0354 00811000
         SLR   @08,@08                                             0354 00812000
         DR    @08,@10                                             0354 00813000
         LTR   @08,@08                                             0354 00814000
         BNZ   @RF00354                                            0354 00815000
*         DO;                       /* THROUGH IN OLD CA.            */ 00816000
*           IF PLHFRCNT^=PLHBFRNO THEN/* IS PROCESSING THROUGH?      */ 00817000
         CLC   PLHFRCNT(1,RPLH),PLHBFRNO(RPLH)                     0356 00818000
         BE    @RF00356                                            0356 00819000
*             DO;                                                  0357 00820000
*               R15=TWO;            /* SET RETURN CODE       @ZA27875*/ 00821000
         LA    R15,2                                               0358 00822000
*               GOTO FRBAEXIT;      /* EXIT FRBA             @ZA27875*/ 00823000
         B     FRBAEXIT                                            0359 00824000
*             END;                                                 0360 00825000
*           ELSE                    /* IF PROCESSING DONE,           */ 00826000
*             DO;                   /* FORCE WRITE.          @ZA07571*/ 00827000
@RF00356 DS    0H                                                  0362 00828000
*               PLHNRBA=RPARM1;     /* SAVE CURR RBA         @ZA07571*/ 00829000
         ST    RPARM1,PLHNRBA(,RPLH)                               0362 00830000
*               IF AMBLSR=OFF&      /* NOT LSR, AND                  */ 00831000
*                   AMBGSR=OFF THEN /* NOT GSR THEN                  */ 00832000
         TM    AMBLSR(RAMB),B'01100000'                            0363 00833000
         BNZ   @RF00363                                            0363 00834000
*                 DO;               /* FORCE WRITES OUT TOO.         */ 00835000
*                   GEN(IDASVR14);  /* SAVE REGISTER 14              */ 00836000
         IDASVR14                                                       00837000
*                   RBUFC=PLHNBUFC; /* PTR TO BUFC FOR WRITE         */ 00838000
         L     RBUFC,PLHNBUFC(,RPLH)                               0366 00839000
*I04:                                                              0367 00840000
*                   DO;             /* IDACALL(IDAWRBFR)             */ 00841000
I04      DS    0H                                                  0368 00842000
*                     CALL IDAWRBFR;/* EXIT TO IDAWRBFR              */ 00843000
         L     @15,@CV00042                                        0368 00844000
         BALR  @14,@15                                             0368 00845000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 00846000
         BALR @11,0                                                     00847000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 00848000
         USING *,@11                                                    00849000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 00850000
         L     @11,=A(@PSTART)                                          00851000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 00852000
         USING @PSTART,@11                                              00853000
*                   END I04;        /* FORCE WRITES                  */ 00854000
*                   RPARM1=PLHNRBA; /* RESTORE RBA REGISTER          */ 00855000
         L     RPARM1,PLHNRBA(,RPLH)                               0374 00856000
*                   GEN(IDARST14);  /* RESTORE REG 14                */ 00857000
         IDARST14                                                       00858000
*                 END;              /* END SHARED            @ZA07571*/ 00859000
*             END;                  /* END OF FORCE WRITES           */ 00860000
@RF00363 DS    0H                                                  0378 00861000
*         END;                      /* END OF NEW CA CODE            */ 00862000
*       ELSE                        /* SET NEXT RBA TO READ          */ 00863000
*         PLHNRBA=RPARM1;           /* SET NEXT RBA TO READ          */ 00864000
         B     @RC00354                                            0379 00865000
@RF00354 ST    RPARM1,PLHNRBA(,RPLH)                               0379 00866000
*       R15=ZERO;                   /* SET RETURN CODE       @ZA27875*/ 00867000
@RC00354 SLR   R15,R15                                             0380 00868000
*       GOTO FRBAEXIT;              /* EXIT FRBA             @ZA27875*/ 00869000
         B     FRBAEXIT                                            0381 00870000
*     END;                          /* END, NON-KEYED ACCESS         */ 00871000
*   ELSE                            /* HERE FOR KEYED ACCESS         */ 00872000
*     DO;                                                          0383 00873000
*                                                                  0383 00874000
@RF00313 DS    0H                                                  0384 00875000
*       /*************************************************************/ 00876000
*       /*                                                           */ 00877000
*       /* FIND NEXT CONTROL INTERVAL FOR KEYED SEQUENTIAL RETRIEVAL */ 00878000
*       /*                                                           */ 00879000
*       /*************************************************************/ 00880000
*                                                                  0384 00881000
*       RESPECIFY                                                  0384 00882000
*         RWORK3 RESTRICTED;        /* RESTRICT REGISTER             */ 00883000
*       RESPECIFY                                                  0385 00884000
*         IDAIXH BASED(BUFCBAD);    /* IX HDR IS AT BFR START        */ 00885000
*       RBUFC=PLHIBUFC;             /* POINT TO INDEX BUFC           */ 00886000
*                                                                  0386 00887000
         L     RBUFC,PLHIBUFC(,RPLH)                               0386 00888000
*       /*************************************************************/ 00889000
*       /*                                                           */ 00890000
*       /* IF DBDC, THE SEQUENCE SET MUST BE READ                    */ 00891000
*       /*                                                           */ 00892000
*       /*************************************************************/ 00893000
*                                                                  0387 00894000
*       IF RBUFC=ZERO THEN          /* DBDC & NO BUFC?               */ 00895000
         LTR   RBUFC,RBUFC                                         0387 00896000
         BNZ   @RF00387                                            0387 00897000
*         DO;                       /* YES, SET TO READ SEQ SET      */ 00898000
*           GEN(IDASVR14);          /* SAVE RTRN REG                 */ 00899000
         IDASVR14                                                       00900000
*VALDBDC:                                                          0390 00901000
*           PLHRDEXC=OFF;           /* GET INDEX FOR SHARE           */ 00902000
VALDBDC  NI    PLHRDEXC(RPLH),B'11110111'                          0390 00903000
*           RPARM1=PLHSSRBA;        /* SEQ SET RBA                   */ 00904000
         L     RPARM1,PLHSSRBA(,RPLH)                              0391 00905000
*           RAMB=AMBLIX;            /* INDEX AMB                     */ 00906000
         L     @15,RPLDACB(,RRPL)                                  0392 00907000
         L     @15,ACBAMBL(,@15)                                   0392 00908000
         L     RAMB,AMBLIX(,@15)                                   0392 00909000
*I05:                                                              0393 00910000
*           DO;                     /* IDACALL(IDAGRB)               */ 00911000
I05      DS    0H                                                  0394 00912000
*             CALL IDAGRB;          /* EXIT TO IDAGRB                */ 00913000
         L     @15,@CV00041                                        0394 00914000
         BALR  @14,@15                                             0394 00915000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00916000
         BALR @11,0                                                     00917000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00918000
         USING *,@11                                                    00919000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00920000
         L     @11,=A(@PSTART)                                          00921000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00922000
         USING @PSTART,@11                                              00923000
*           END I05;                /* GET RBA                       */ 00924000
*           IF RPLREQ=RPLPUT|       /* IF PUT OR GET UPDATE          */ 00925000
*               RPLUPD=ON THEN      /* MUST HAVE EXCL CNTL           */ 00926000
         CLI   RPLREQ(RRPL),1                                      0400 00927000
         BE    @RT00400                                            0400 00928000
         TM    RPLUPD(RRPL),B'00000010'                            0400 00929000
         BNO   @RF00400                                            0400 00930000
@RT00400 DS    0H                                                  0401 00931000
*             PLHRDEXC=ON;          /* OF THE DATA.                  */ 00932000
         OI    PLHRDEXC(RPLH),B'00001000'                          0401 00933000
*           IF RPLRTNCD^=ZERO THEN  /* ERROR?                        */ 00934000
@RF00400 CLI   RPLRTNCD(RRPL),0                                    0402 00935000
         BNE   @RT00402                                            0402 00936000
*             GOTO FINDX;           /* YES, EXIT                     */ 00937000
*                                                                  0403 00938000
*           /*********************************************************/ 00939000
*           /*                                                       */ 00940000
*           /* SET TO CALL SCIB RTN                                  */ 00941000
*           /*                                                       */ 00942000
*           /*********************************************************/ 00943000
*                                                                  0404 00944000
*           RPARM1=ADDR(PLHKEY);    /* SEARCH ARG                    */ 00945000
         L     RPARM1,PLHKEYPT(,RPLH)                              0404 00946000
*           RBUFC=BUFCBAD;          /* BUFFER ADDR                   */ 00947000
         L     RBUFC,BUFCBAD(,RBUFC)                               0405 00948000
*           RFY                                                    0406 00949000
*             RWORK3 RSTD;          /* LOCK                          */ 00950000
*           RWORK3=ADDR(PLHIXSPL);  /* IX SCH LIST BASE              */ 00951000
         LA    RWORK3,PLHIXSPL(,RPLH)                              0407 00952000
*I06:                                                              0408 00953000
*           DO;                     /* IDACALL(IDA019RC)             */ 00954000
I06      DS    0H                                                  0409 00955000
*             CALL IDA019RC;        /* EXIT TO IDA019RC              */ 00956000
         L     @15,@CV00038                                        0409 00957000
         BALR  @14,@15                                             0409 00958000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00959000
         BALR @11,0                                                     00960000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00961000
         USING *,@11                                                    00962000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00963000
         L     @11,=A(@PSTART)                                          00964000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00965000
         USING @PSTART,@11                                              00966000
*           END I06;                /* SCIB                          */ 00967000
*           RFY                                                    0415 00968000
*             R15 RSTD;             /* GET RETURN CODE               */ 00969000
*           RFY                                                    0416 00970000
*             RWORK3 UNRSTD;        /* UNLOCK                        */ 00971000
*           RBUFC=PLHIBUFC;         /* RESTORE RBUFC                 */ 00972000
         L     RBUFC,PLHIBUFC(,RPLH)                               0417 00973000
*           IF R15=ZERO THEN        /* KEY IN SEQ SET?               */ 00974000
         LTR   R15,R15                                             0418 00975000
         BZ    @RT00418                                            0418 00976000
*             GOTO ADVNXT;          /* YES, GO ADV TO NXT            */ 00977000
*           RFY                                                    0420 00978000
*             R15 UNRSTD;           /* RELEASE RETURN CODE REG       */ 00979000
*                                                                  0420 00980000
*           /*********************************************************/ 00981000
*           /*                                                       */ 00982000
*           /* SET TO READ NEXT SEQ SET                              */ 00983000
*           /*                                                       */ 00984000
*           /*********************************************************/ 00985000
*                                                                  0421 00986000
*           PLHSSRBA=IXHHP;         /* RESET RBA IN PLH              */ 00987000
         L     @15,BUFCBAD(,RBUFC)                                 0421 00988000
         L     @15,IXHHP(,@15)                                     0421 00989000
         ST    @15,PLHSSRBA(,RPLH)                                 0421 00990000
*           GO TO VALDBDC;          /* TRY NEXT SEQ SET IF NEED      */ 00991000
         B     VALDBDC                                             0422 00992000
*         END;                      /* END RBUFC = ZERO              */ 00993000
*                                                                  0423 00994000
*       /*************************************************************/ 00995000
*       /*                                                           */ 00996000
*       /* VALIDATE THE SEQUENCE SET--REREAD IT IF ANOTHER PLH HAS   */ 00997000
*       /* DONE A CONTROL INTERVAL OR CONTROL AREA SPLIT WHILE THIS  */ 00998000
*       /* PLACEHOLDER WAS DOING SEQUENTIAL RETRIEVAL IN             */ 00999000
*       /* NON-EXCLUSIVE MODE TEST FOR SPANNED RECORD. IF A SPANNED  */ 01000000
*       /* RECORD ADVANCE PTR AND THEN EXTRACT THE RBA. (SPANNED     */ 01001000
*       /* RECORDS ARE ALWAYS RETRIEVED IN A FORWARD DIRECTION FOR A */ 01002000
*       /* KSDS AND NEVER HAVE SECTION ENTRIES IN THE MIDDLE OF      */ 01003000
*       /* THEM.)                                                    */ 01004000
*       /*                                                           */ 01005000
*       /*************************************************************/ 01006000
*                                                                  0424 01007000
*       IF IXSHEP->IBFLPF=AMDKEYLN& /* IF IN MIDDLE OF SPANNED       */ 01008000
*           IXSHEP^=BUFCBAD+IXHLL THEN/* RECORD AND NOT END OF SEQ   */ 01009000
@RF00387 L     @15,IXSHEP(,RPLH)                                   0424 01010000
         L     @10,AMBDSB(,RAMB)                                   0424 01011000
         SLR   @05,@05                                             0424 01012000
         IC    @05,IBFLPF(,@15)                                    0424 01013000
         CH    @05,AMDKEYLN(,@10)                                  0424 01014000
         BNE   @RF00424                                            0424 01015000
         L     @10,BUFCBAD(,RBUFC)                                 0424 01016000
         LH    @05,IXHLL(,@10)                                     0424 01017000
         N     @05,@CF01170                                        0424 01018000
         ALR   @05,@10                                             0424 01019000
         CR    @15,@05                                             0424 01020000
         BE    @RF00424                                            0424 01021000
*         DO;                       /* SET JUST ADVANCE PTR          */ 01022000
*           IXSHEP=IXSHEP-IXHFLPLN; /* PTR TO NEXT RCD               */ 01023000
         SLR   @05,@05                                             0426 01024000
         IC    @05,IXHFLPLN(,@10)                                  0426 01025000
         SLR   @15,@05                                             0426 01026000
         ST    @15,IXSHEP(,RPLH)                                   0426 01027000
*           RFY                                                    0427 01028000
*             R15 RSTD;             /* GET RETURN REGISTER           */ 01029000
*           R15=ZERO;               /* SET RETURN CODE               */ 01030000
         SLR   R15,R15                                             0428 01031000
*         END;                      /* END OF SPANNED RCD ADVANCE    */ 01032000
*       ELSE                        /* NOT IN MIDDLE OF S.R.         */ 01033000
*         DO;                                                      0430 01034000
         B     @RC00424                                            0430 01035000
@RF00424 DS    0H                                                  0431 01036000
*           RFY                                                    0431 01037000
*             R15 UNRSTD;           /* DROP R15                      */ 01038000
*           IF BUFCRRD=ON           /* SEE IF INVALID SEQ SET        */ 01039000
*             THEN                  /* IS INDICATED                  */ 01040000
         TM    BUFCRRD(RBUFC),B'00100000'                          0432 01041000
         BNO   @RF00432                                            0432 01042000
*             DO;                                                  0433 01043000
*               IF PLHFRCNT^=PLHBFRNO THEN/* ALLOW PLHKEY VALUE      */ 01044000
         CLC   PLHFRCNT(1,RPLH),PLHBFRNO(RPLH)                     0434 01045000
         BE    @RF00434                                            0434 01046000
*                 DO;                                              0435 01047000
*                   R15=TWO;        /* SET RETURN CODE       @ZA27875*/ 01048000
         LA    R15,2                                               0436 01049000
*                   GOTO FRBAEXIT;  /* EXIT FRBA             @ZA27875*/ 01050000
         B     FRBAEXIT                                            0437 01051000
*                 END;                                             0438 01052000
*               RESPECIFY                                          0439 01053000
*                 RWORK3 RESTRICTED;/* RESTRICT REGISTER             */ 01054000
@RF00434 DS    0H                                                  0440 01055000
*               DO WHILE BUFCRRD=ON;/* MUST SEQ SET BE REREAD        */ 01056000
         B     @DE00440                                            0440 01057000
@DL00440 DS    0H                                                  0441 01058000
*                 RAMB=AMBLIX;      /* I/O IS FOR INDEX AMB          */ 01059000
         L     @15,RPLDACB(,RRPL)                                  0441 01060000
         L     @15,ACBAMBL(,@15)                                   0441 01061000
         L     RAMB,AMBLIX(,@15)                                   0441 01062000
*                 GEN(IDASVR14);    /* SAVE RETURN REGISTER          */ 01063000
         IDASVR14                                                       01064000
*                 RFY                                              0443 01065000
*                   R14 UNRSTD;     /* RELEASE RETURN REG            */ 01066000
*                 RPARM1=PLHIIOB;   /* POINT TO INDEX IOB            */ 01067000
         L     RPARM1,PLHIIOB(,RPLH)                               0444 01068000
*                 CALL READBFR;     /* PERFORM SEQ SET READ          */ 01069000
         BAL   @14,READBFR                                         0445 01070000
*                 IF RPLERREG^='00'X/* IF AN ERROR ON READ,          */ 01071000
*                   THEN            /* RETURN TO CALLER              */ 01072000
         CLI   RPLERREG(RRPL),0                                    0446 01073000
         BE    @RF00446                                            0446 01074000
*                   DO;                                            0447 01075000
*FINDX:                                                            0448 01076000
*                     GEN(IDARST14);/* RESTORE RETURN                */ 01077000
FINDX    IDARST14                                                       01078000
*                     GOTO FRBAEXIT;/* EXIT FRBA             @ZA27875*/ 01079000
         B     FRBAEXIT                                            0449 01080000
*                   END;            /* END OF READ ERROR             */ 01081000
*                 RPARM1=ADDR(PLHKEY);/* POINT TO SEARCH ARG         */ 01082000
@RF00446 L     RPARM1,PLHKEYPT(,RPLH)                              0451 01083000
*                 RBUFC=BUFCBAD;    /* POINT TO INDEX BUFFER         */ 01084000
         L     RBUFC,BUFCBAD(,RBUFC)                               0452 01085000
*                 RWORK3=ADDR(PLHIXSPL);/* POINT TO INDEX SCH LIST   */ 01086000
*                                                                  0453 01087000
         LA    RWORK3,PLHIXSPL(,RPLH)                              0453 01088000
*                 /***************************************************/ 01089000
*                 /*                                                 */ 01090000
*                 /* NOW CALL THE SCIB ROUTINE                       */ 01091000
*                 /*                                                 */ 01092000
*                 /***************************************************/ 01093000
*                                                                  0454 01094000
*I07:                                                              0454 01095000
*                 DO;               /* IDACALL(IDA019RC)             */ 01096000
I07      DS    0H                                                  0455 01097000
*                   CALL IDA019RC;  /* EXIT TO IDA019RC              */ 01098000
         L     @15,@CV00038                                        0455 01099000
         BALR  @14,@15                                             0455 01100000
*                   GEN(BALR @11,0);/* LOAD ADDR OF REENTRY          */ 01101000
         BALR @11,0                                                     01102000
*                   GEN(USING *,@11);/* ESTABLISH ADDRESSING         */ 01103000
         USING *,@11                                                    01104000
*                   GEN(L     @11,=A(@PSTART));/* RELOAD BASE        */ 01105000
         L     @11,=A(@PSTART)                                          01106000
*                   GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING   */ 01107000
         USING @PSTART,@11                                              01108000
*                 END I07;                                         0460 01109000
*                 RBUFC=PLHIBUFC;   /* POINT TO INDEX BUFC           */ 01110000
         L     RBUFC,PLHIBUFC(,RPLH)                               0461 01111000
*                 RESPECIFY                                        0462 01112000
*                   R15 RESTRICTED; /* GET RETURN CODE REG           */ 01113000
*                 IF R15^=ZERO      /* SEE IF KEY IS IN BFR.         */ 01114000
*                   THEN            /* IF NOT, TRY NEXT ONE          */ 01115000
         LTR   R15,R15                                             0463 01116000
         BZ    @RF00463                                            0463 01117000
*                   DO;                                            0464 01118000
*                     BUFCRRD=ON;   /* INDICATE READ REQUIRED        */ 01119000
         OI    BUFCRRD(RBUFC),B'00100000'                          0465 01120000
*                     PLHSSRBA=IXHHP;/* RESET RBA IN PLH AND         */ 01121000
         L     @14,BUFCBAD(,RBUFC)                                 0466 01122000
         L     @14,IXHHP(,@14)                                     0466 01123000
         ST    @14,PLHSSRBA(,RPLH)                                 0466 01124000
*                     BUFCDDDD=IXHHP;/* IN THE BUFC                  */ 01125000
         ST    @14,BUFCDDDD(,RBUFC)                                0467 01126000
*                   END;            /* END OF SCIB ERROR CODE        */ 01127000
*                 RESPECIFY                                        0469 01128000
*                   R15 UNRESTRICTED;/* DROP REGISTER 15             */ 01129000
@RF00463 DS    0H                                                  0470 01130000
*                 RFY                                              0470 01131000
*                   RWORK1 RSTD;    /* GET WORK REGISTER             */ 01132000
*                                                                  0470 01133000
*                 /***************************************************/ 01134000
*                 /*                                                 */ 01135000
*                 /* SKIP TO END OF SPANNED RECORD                   */ 01136000
*                 /*                                                 */ 01137000
*                 /***************************************************/ 01138000
*                                                                  0471 01139000
*ADVNXT:                                                           0471 01140000
*                 DO WHILE IXSHEP->IBFLPF=AMDKEYLN;                0471 01141000
ADVNXT   B     @DE00471                                            0471 01142000
@DL00471 DS    0H                                                  0472 01143000
*                   CALL ADVSS;     /* ADVANCE SEQ SET ENTRY PTR     */ 01144000
         BAL   @14,ADVSS                                           0472 01145000
*                 END;              /* END OF COMPLEX ENTRY SKIP     */ 01146000
@DE00471 L     @10,IXSHEP(,RPLH)                                   0473 01147000
         L     @06,AMBDSB(,RAMB)                                   0473 01148000
         SLR   @00,@00                                             0473 01149000
         IC    @00,IBFLPF(,@10)                                    0473 01150000
         CH    @00,AMDKEYLN(,@06)                                  0473 01151000
         BE    @DL00471                                            0473 01152000
*                 RFY                                              0474 01153000
*                   RWORK1 UNRSTD;  /* DROP WORK REG                 */ 01154000
*                 GEN(IDARST14);    /* RESTORE RETURN                */ 01155000
         IDARST14                                                       01156000
*                 RFY                                              0476 01157000
*                   R14 RSTD;       /* RELEASE RETURN REG            */ 01158000
*               END;                /* END OF READ SEQ SET           */ 01159000
@DE00440 TM    BUFCRRD(RBUFC),B'00100000'                          0477 01160000
         BO    @DL00440                                            0477 01161000
*               RAMB=AMBLDTA;       /* PTR TO DATA                   */ 01162000
         L     @15,RPLDACB(,RRPL)                                  0478 01163000
         L     @15,ACBAMBL(,@15)                                   0478 01164000
         L     RAMB,AMBLDTA(,@15)                                  0478 01165000
*             END;                  /* END OF SEQ SET VALIDATE       */ 01166000
*                                                                  0479 01167000
*           /*********************************************************/ 01168000
*           /*                                                       */ 01169000
*           /* ADVANCE THE INDEX POINTERS IN THE PLACEHOLDER         */ 01170000
*           /*                                                       */ 01171000
*           /*********************************************************/ 01172000
*                                                                  0480 01173000
*           RFY                                                    0480 01174000
*            (RWORK1,                                              0480 01175000
*             RWORK2,                                              0480 01176000
*             RWORK3,                                              0480 01177000
*             RWORK4) RSTD;         /* GET WORK REGS                 */ 01178000
@RF00432 DS    0H                                                  0481 01179000
*           IF IXSHEP^=BUFCBAD+IXHLL THEN/* IF NOT SEQ SET END       */ 01180000
         L     @15,IXSHEP(,RPLH)                                   0481 01181000
         L     @10,BUFCBAD(,RBUFC)                                 0481 01182000
         LH    @09,IXHLL(,@10)                                     0481 01183000
         N     @09,@CF01170                                        0481 01184000
         ALR   @09,@10                                             0481 01185000
         CR    @15,@09                                             0481 01186000
         BE    @RF00481                                            0481 01187000
*             DO;                   /* GO TO NEXT SEQ SET PTR        */ 01188000
*               RPARM1=R14;         /* SAVE REG14                    */ 01189000
         LR    RPARM1,R14                                          0483 01190000
*               RWORK2=IXSLEP;      /* SAVE LAST ENTRY PTR   @ZA27875*/ 01191000
         L     RWORK2,IXSLEP(,RPLH)                                0484 01192000
*               RWORK3=IXSHEP;      /* SAVE LAST PTR                 */ 01193000
         LR    RWORK3,@15                                          0485 01194000
*               IF RPLBWD=OFF THEN  /* IF FWD MODE                   */ 01195000
         TM    RPLBWD(RRPL),B'00010000'                            0486 01196000
         BNZ   @RF00486                                            0486 01197000
*                 CALL ADVSS;       /* ADVANCE TO NEXT ENTRY         */ 01198000
*                                                                  0487 01199000
         BAL   @14,ADVSS                                           0487 01200000
*               /*****************************************************/ 01201000
*               /*                                                   */ 01202000
*               /* HERE IF IN BACKWARD MODE                          */ 01203000
*               /*                                                   */ 01204000
*               /*****************************************************/ 01205000
*                                                                  0488 01206000
*               ELSE                                               0488 01207000
*                 DO;               /* BACK UP.                      */ 01208000
         B     @RC00486                                            0488 01209000
@RF00486 DS    0H                                                  0489 01210000
*                   CALL BACKUP;    /* BACK UP ONE ENTRY             */ 01211000
*                                                                  0489 01212000
         BAL   @14,BACKUP                                          0489 01213000
*                   /*************************************************/ 01214000
*                   /*                                               */ 01215000
*                   /* SKIP ACROSS SPANNED RECORD SEGMENTS UNTIL THE */ 01216000
*                   /* FIRST SEGMENT IS LOCATED. (SPANNED RECORDS ARE*/ 01217000
*                   /* ALWAYS RETRIEVED IN A FORWARD DIRECTION FOR A */ 01218000
*                   /* KSDS.)                                        */ 01219000
*                   /*                                               */ 01220000
*                   /*************************************************/ 01221000
*                                                                  0490 01222000
*                   IF IXSHEP^=ZERO&IXSHEP->IBFLPF=AMDKEYLN THEN   0490 01223000
         L     @15,IXSHEP(,RPLH)                                   0490 01224000
         LTR   @15,@15                                             0490 01225000
         BZ    @RF00490                                            0490 01226000
         L     @10,AMBDSB(,RAMB)                                   0490 01227000
         SLR   @09,@09                                             0490 01228000
         IC    @09,IBFLPF(,@15)                                    0490 01229000
         CH    @09,AMDKEYLN(,@10)                                  0490 01230000
         BNE   @RF00490                                            0490 01231000
*                     DO;                                          0491 01232000
*                       CALL FIRSTSEG;/* POSITION TO FIRST SEGMENT   */ 01233000
         BAL   @14,FIRSTSEG                                        0492 01234000
*                       CALL BACKUP;/* GET DESIRED ENTRY             */ 01235000
         BAL   @14,BACKUP                                          0493 01236000
*                     END;          /* NOW AT PRIOR ENTRY            */ 01237000
*                   CALL FIRSTSEG;  /* POSITION TO FIRST SEGMENT     */ 01238000
@RF00490 BAL   @14,FIRSTSEG                                        0495 01239000
*                 END;              /* END OF BWD CODE               */ 01240000
*               R14=RPARM1;         /* RESTORE 14                    */ 01241000
@RC00486 LR    R14,RPARM1                                          0497 01242000
*             END;                  /* END OF NEXT SEQ SET PTR       */ 01243000
*           ELSE                    /* BWD SET SEQ SET END           */ 01244000
*             IXSHEP=ZERO;          /* CAUSE END OF SEQ SET          */ 01245000
         B     @RC00481                                            0499 01246000
@RF00481 SLR   @15,@15                                             0499 01247000
         ST    @15,IXSHEP(,RPLH)                                   0499 01248000
*           IF IXSHEP<IXHLEO+BUFCBAD/* TEST FOR SEQ SET END          */ 01249000
*             THEN                  /* IF SO, MUST TEST FOR          */ 01250000
@RC00481 L     @15,BUFCBAD(,RBUFC)                                 0500 01251000
         LH    @10,IXHLEO(,@15)                                    0500 01252000
         ALR   @10,@15                                             0500 01253000
         C     @10,IXSHEP(,RPLH)                                   0500 01254000
         BNH   @RF00500                                            0500 01255000
*             DO;                   /* END OF DATA, ETC.             */ 01256000
*                                                                  0501 01257000
*               /*****************************************************/ 01258000
*               /*                                                   */ 01259000
*               /* SKIP FORCE WRITE & CA SPLIT CHKS IF DBDC          */ 01260000
*               /*                                                   */ 01261000
*               /*****************************************************/ 01262000
*                                                                  0502 01263000
*               IF AMBLSR=OFF&      /* NOT LOCAL SHR AND -           */ 01264000
*                   AMBGSR=OFF      /* NOT GLOBAL SHR?               */ 01265000
*                 THEN                                             0502 01266000
         TM    AMBLSR(RAMB),B'01100000'                            0502 01267000
         BNZ   @RF00502                                            0502 01268000
*                 DO;               /* YES, CONTINUE                 */ 01269000
*                                                                  0503 01270000
*                   /*************************************************/ 01271000
*                   /*                                               */ 01272000
*                   /* IF END OF SEQUENCE SET, RETURN WITH END OF    */ 01273000
*                   /* CONTROL AREA CODE IN REGISTER 15 IF ACTIVITY  */ 01274000
*                   /* STILL GOING ON IN OLD CONTROL AREA OR IF A    */ 01275000
*                   /* CONTROL AREA SPLIT IS IN PROGRESS FOR THIS    */ 01276000
*                   /* PLACEHOLDER. OTHERWISE, GO TO THE SEQUENCE SET*/ 01277000
*                   /* OF THE NEXT CONTROL AREA OR SIGNAL AN         */ 01278000
*                   /* END-OF-DATA CONDITION.                        */ 01279000
*                   /*                                               */ 01280000
*                   /*************************************************/ 01281000
*                                                                  0504 01282000
*                   IF PLHFRCNT^=PLHBFRNO|/* IF ACTIVITY GOING ON    */ 01283000
*                       (DIWCAS=ON& /* OR IF CA                      */ 01284000
*                       DIWPLH=RPLH)/* SPLIT IS ON                   */ 01285000
*                     THEN          /* IN CONTROL AREA,              */ 01286000
         CLC   PLHFRCNT(1,RPLH),PLHBFRNO(RPLH)                     0504 01287000
         BNE   @RT00504                                            0504 01288000
         L     @15,AMBIWA(,RAMB)                                   0504 01289000
         TM    DIWCAS(@15),B'10000000'                             0504 01290000
         BNO   @RF00504                                            0504 01291000
         C     RPLH,DIWPLH(,@15)                                   0504 01292000
         BNE   @RF00504                                            0504 01293000
@RT00504 DS    0H                                                  0505 01294000
*                     DO;           /* ALLOW IT TO FINISH            */ 01295000
*                       IF RPLBWD=ON THEN/* SEE IF BWD               */ 01296000
         TM    RPLBWD(RRPL),B'00010000'                            0506 01297000
         BNO   @RF00506                                            0506 01298000
*                         IXSHEP=BUFCBAD+IXHLL;/* RESTORE FOR NEXT 0507 01299000
*                                      TIME                          */ 01300000
         L     @15,BUFCBAD(,RBUFC)                                 0507 01301000
         LH    @10,IXHLL(,@15)                                     0507 01302000
         N     @10,@CF01170                                        0507 01303000
         ALR   @10,@15                                             0507 01304000
         ST    @10,IXSHEP(,RPLH)                                   0507 01305000
*                       ELSE        /* IF FORWARD            @ZA27875*/ 01306000
*                         DO;       /*                       @ZA27875*/ 01307000
         B     @RC00506                                            0508 01308000
@RF00506 DS    0H                                                  0509 01309000
*                           IXSLEP=RWORK2;/* RESTORE LST ENTRY PTR 0509 01310000
*                                                            @ZA27875*/ 01311000
         ST    RWORK2,IXSLEP(,RPLH)                                0509 01312000
*                           IXSHEP=RWORK3;/* RESTORE ENTRY PTR     0510 01313000
*                                                            @ZA27875*/ 01314000
         ST    RWORK3,IXSHEP(,RPLH)                                0510 01315000
*                         END;      /*                       @ZA27875*/ 01316000
*                       R15=TWO;    /* SET RETURN CODE       @ZA27875*/ 01317000
@RC00506 LA    R15,2                                               0512 01318000
*                       GOTO FRBAEXIT;/* EXIT FRBA           @ZA27875*/ 01319000
         B     FRBAEXIT                                            0513 01320000
*                       GEN;                                       0514 01321000
ICMINS   ICM   RPARM1,@00,@00(RWORK1)   PICK UP 1,2, OR 3 BYTE RBA      01322000
FFKEY    MVC   PLHKEY+@01(0,RWORK2),PLHKEY(RWORK2) SET KEY TO ALL X'FF' 01323000
*                     END;          /* END OF FINISH CA              */ 01324000
*                   RFY                                            0516 01325000
*                    (RWORK1,                                      0516 01326000
*                     RWORK2) UNRSTD;/* DROP WORK REGISTERS  @ZA27875*/ 01327000
*                                                                  0516 01328000
@RF00504 DS    0H                                                  0517 01329000
*                   /*************************************************/ 01330000
*                   /*                                               */ 01331000
*                   /* FINISH WRITING IN OLD CA BEFORE GOING TO THE  */ 01332000
*                   /* NEW ONE                                       */ 01333000
*                   /*                                               */ 01334000
*                   /*************************************************/ 01335000
*                                                                  0517 01336000
*                   GEN(IDASVR14);  /* SAVE RETURN REGISTER          */ 01337000
         IDASVR14                                                       01338000
*                   RBUFC=PLHNBUFC; /* BUFC PTR FOR WRITE            */ 01339000
         L     RBUFC,PLHNBUFC(,RPLH)                               0518 01340000
*I08:                                                              0519 01341000
*                   DO;             /* IDACALL(IDAWRBFR)             */ 01342000
I08      DS    0H                                                  0520 01343000
*                     CALL IDAWRBFR;/* EXIT TO IDAWRBFR              */ 01344000
         L     @15,@CV00042                                        0520 01345000
         BALR  @14,@15                                             0520 01346000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01347000
         BALR @11,0                                                     01348000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01349000
         USING *,@11                                                    01350000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01351000
         L     @11,=A(@PSTART)                                          01352000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01353000
         USING @PSTART,@11                                              01354000
*                   END I08;        /* FORCE OUT WRITES              */ 01355000
*                   IF RPLERREG^='00'X THEN/* IF ANY ERROR,          */ 01356000
         CLI   RPLERREG(RRPL),0                                    0526 01357000
         BNE   @RT00526                                            0526 01358000
*                     GO TO FINDX;  /* TAKE EXIT.                    */ 01359000
*                   RBUFC=PLHIBUFC; /* RESET SEQ SET BUFC            */ 01360000
         L     RBUFC,PLHIBUFC(,RPLH)                               0528 01361000
*                 END;              /* END NOT DBDC                  */ 01362000
*               ELSE                /* HERE IF DBDC                  */ 01363000
*                 GEN(IDASVR14);                                   0530 01364000
*                                                                  0530 01365000
         B     @RC00502                                            0530 01366000
@RF00502 DS    0H                                                  0530 01367000
         IDASVR14                                                       01368000
*               /*****************************************************/ 01369000
*               /*                                                   */ 01370000
*               /* DETERMINE IN WHICH DIRECTION PROCESSING IS DONE   */ 01371000
*               /*                                                   */ 01372000
*               /*****************************************************/ 01373000
*                                                                  0531 01374000
*               IF RPLBWD=ON THEN   /* SEE IF BWD                    */ 01375000
@RC00502 TM    RPLBWD(RRPL),B'00010000'                            0531 01376000
         BNO   @RF00531                                            0531 01377000
*                 DO;                                              0532 01378000
*                   RFY                                            0533 01379000
*                    (RWORK1,                                      0533 01380000
*                     RWORK2,                                      0533 01381000
*                     RWORK3,                                      0533 01382000
*                     RWORK4) RSTD; /* GET REGS                      */ 01383000
*                                                                  0533 01384000
*                   /*************************************************/ 01385000
*                   /*                                               */ 01386000
*                   /* LOCATE THE KEY OF THE LOWEST RECORD IN THE SEQ*/ 01387000
*                   /* SET                                           */ 01388000
*                   /*                                               */ 01389000
*                   /*************************************************/ 01390000
*                                                                  0534 01391000
*                   IXSHEP=IXSLEP;  /* POINT TO 1ST PHY ENTRY        */ 01392000
*                                                                  0534 01393000
         L     @15,IXSLEP(,RPLH)                                   0534 01394000
         ST    @15,IXSHEP(,RPLH)                                   0534 01395000
*                   /*************************************************/ 01396000
*                   /*                                               */ 01397000
*                   /* SKIP ACROSS SPANNED RECORD ENTRIES UNTIL THE  */ 01398000
*                   /* ONE CONTAINING THE KEY IS FOUND.              */ 01399000
*                   /*                                               */ 01400000
*                   /*************************************************/ 01401000
*                                                                  0535 01402000
*                   DO WHILE IXSHEP->IBFLPF=AMDKEYLN;              0535 01403000
         B     @DE00535                                            0535 01404000
@DL00535 DS    0H                                                  0536 01405000
*                     CALL ADVSS;   /* NEXT ENTRY                    */ 01406000
         BAL   @14,ADVSS                                           0536 01407000
*                   END;            /* END OF S.R. SEG SKIP          */ 01408000
*                                                                  0537 01409000
@DE00535 L     @15,IXSHEP(,RPLH)                                   0537 01410000
         L     @10,AMBDSB(,RAMB)                                   0537 01411000
         LH    @10,AMDKEYLN(,@10)                                  0537 01412000
         SLR   @09,@09                                             0537 01413000
         IC    @09,IBFLPF(,@15)                                    0537 01414000
         CR    @10,@09                                             0537 01415000
         BE    @DL00535                                            0537 01416000
*                   /*************************************************/ 01417000
*                   /*                                               */ 01418000
*                   /* PAD KEY WITH HEXADECIMAL FF                   */ 01419000
*                   /*                                               */ 01420000
*                   /*************************************************/ 01421000
*                                                                  0538 01422000
*                   PLHKEY(ONE)='FF'X;                             0538 01423000
         L     @15,PLHKEYPT(,RPLH)                                 0538 01424000
         MVI   PLHKEY(@15),X'FF'                                   0538 01425000
*                   RWORK1=AMDKEYLN;/* GET KEYLENGTH                 */ 01426000
         LR    RWORK1,@10                                          0539 01427000
*                   IF RWORK1>1 THEN/* IF MORE BYTES                 */ 01428000
*                                                                  0540 01429000
         C     RWORK1,@CF00058                                     0540 01430000
         BNH   @RF00540                                            0540 01431000
*                     /***********************************************/ 01432000
*                     /*                                             */ 01433000
*                     /* MAKE REST OF KEY ALL X'FF'                  */ 01434000
*                     /*                                             */ 01435000
*                     /***********************************************/ 01436000
*                                                                  0541 01437000
*                     DO;                                          0541 01438000
*                       RWORK1=RWORK1-TWO;/* SET FOR EXECUTE         */ 01439000
         BCTR  RWORK1,0                                            0542 01440000
         BCTR  RWORK1,0                                            0542 01441000
*                       RWORK2=ADDR(PLHKEY);/* POINT TO PLHKEY       */ 01442000
         LR    RWORK2,@15                                          0543 01443000
*                       GEN SETS(PLHKEY)(EX    RWORK1,FFKEY);/* MAKE    01444000
*                                      KEY FF                        */ 01445000
         EX    RWORK1,FFKEY                                             01446000
*                     END;          /* END OF KEY SETTING            */ 01447000
*                   RWORK1=IXSHEP->IBFLPL;/* GET KEYLN               */ 01448000
@RF00540 L     @15,IXSHEP(,RPLH)                                   0546 01449000
         SLR   RWORK1,RWORK1                                       0546 01450000
         IC    RWORK1,IBFLPL(,@15)                                 0546 01451000
*                   RWORK2=IXSHEP-RWORK1;/* PTR TO KEY               */ 01452000
         SLR   @15,RWORK1                                          0547 01453000
         LR    RWORK2,@15                                          0547 01454000
*                   IF RWORK1^=ZERO THEN/* IF ANY KEY ,MOVE IT.      */ 01455000
*                                                                  0548 01456000
         LTR   RWORK1,RWORK1                                       0548 01457000
         BZ    @RF00548                                            0548 01458000
*                     /***********************************************/ 01459000
*                     /*                                             */ 01460000
*                     /* MOVE KEY INTO PLH                           */ 01461000
*                     /*                                             */ 01462000
*                     /***********************************************/ 01463000
*                                                                  0549 01464000
*                     PLHKEY(ONE:RWORK1)=RWORK2->KEY(ONE:RWORK1);  0549 01465000
         L     @15,PLHKEYPT(,RPLH)                                 0549 01466000
         LR    @10,RWORK1                                          0549 01467000
         BCTR  @10,0                                               0549 01468000
         EX    @10,@SM01171                                        0549 01469000
*                   PLHRDEXC=OFF;   /* GET INDEX FOR SHARE           */ 01470000
@RF00548 NI    PLHRDEXC(RPLH),B'11110111'                          0550 01471000
*I09:                                                              0551 01472000
*                   DO;             /* IDACALL(IDA019RV)             */ 01473000
I09      DS    0H                                                  0552 01474000
*                     CALL IDA019RV;/* EXIT TO IDA019RV              */ 01475000
         L     @15,@CV00039                                        0552 01476000
         BALR  @14,@15                                             0552 01477000
*                     GEN(BALR @11,0);/* LOAD ADDR OF REENTRY        */ 01478000
         BALR @11,0                                                     01479000
*                     GEN(USING *,@11);/* ESTABLISH ADDRESSING       */ 01480000
         USING *,@11                                                    01481000
*                     GEN(L     @11,=A(@PSTART));/* RELOAD BASE      */ 01482000
         L     @11,=A(@PSTART)                                          01483000
*                     GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING */ 01484000
         USING @PSTART,@11                                              01485000
*                   END I09;        /* BACK UP SS                    */ 01486000
*                   RFY                                            0558 01487000
*                     R15 RSTD;     /* GET RETURN CODE               */ 01488000
*                   IF RPLREQ=RPLPUT|/* IF PUT OR GET UPDATE         */ 01489000
*                       RPLUPD=ON THEN/* MUST HAVE EXCL CNTL         */ 01490000
         CLI   RPLREQ(RRPL),1                                      0559 01491000
         BE    @RT00559                                            0559 01492000
         TM    RPLUPD(RRPL),B'00000010'                            0559 01493000
         BNO   @RF00559                                            0559 01494000
@RT00559 DS    0H                                                  0560 01495000
*                     PLHRDEXC=ON;  /* OF THE DATA.                  */ 01496000
         OI    PLHRDEXC(RPLH),B'00001000'                          0560 01497000
*                   RAMB=AMBLDTA;   /* PTR TO DATA                   */ 01498000
*                                                                  0561 01499000
@RF00559 L     @10,RPLDACB(,RRPL)                                  0561 01500000
         L     @10,ACBAMBL(,@10)                                   0561 01501000
         L     RAMB,AMBLDTA(,@10)                                  0561 01502000
*                   /*************************************************/ 01503000
*                   /*                                               */ 01504000
*                   /* CHK FOR ERROR STATUS                          */ 01505000
*                   /*                                               */ 01506000
*                   /*************************************************/ 01507000
*                                                                  0562 01508000
*                   IF R15=RPLEODER|RPLERREG^='00'X THEN           0562 01509000
         C     R15,@CF00243                                        0562 01510000
         BE    @RT00562                                            0562 01511000
         CLI   RPLERREG(RRPL),0                                    0562 01512000
         BE    @RF00562                                            0562 01513000
@RT00562 DS    0H                                                  0563 01514000
*                     DO;                                          0563 01515000
*                       GEN(IDARST14);/* RESTORE 14                  */ 01516000
         IDARST14                                                       01517000
*                       R15=RPLEODER;/* SET RETURN CODE      @ZA27875*/ 01518000
         LA    R15,4                                               0565 01519000
*                       GOTO FRBAEXIT;/* EXIT FRBA           @ZA27875*/ 01520000
         B     FRBAEXIT                                            0566 01521000
*                     END;          /* END OF ERROR                  */ 01522000
*                   RFY                                            0568 01523000
*                     R15 UNRSTD;   /* DROP REGISTER 15              */ 01524000
@RF00562 DS    0H                                                  0569 01525000
*                   RBUFC=PLHIBUFC; /* RESET SEQ SET BUFC            */ 01526000
         L     RBUFC,PLHIBUFC(,RPLH)                               0569 01527000
*                 END;              /* END OF BWD                    */ 01528000
*                                                                  0570 01529000
*               /*****************************************************/ 01530000
*               /*                                                   */ 01531000
*               /* HERE IF FORWARD MODE                              */ 01532000
*               /*                                                   */ 01533000
*               /*****************************************************/ 01534000
*                                                                  0571 01535000
*               ELSE                                               0571 01536000
*                 DO;                                              0571 01537000
*                                                                  0571 01538000
         B     @RC00531                                            0571 01539000
@RF00531 DS    0H                                                  0572 01540000
*                   /*************************************************/ 01541000
*                   /*                                               */ 01542000
*                   /* IF THE LAST ENTRY IS A DUMMY, INDICATE        */ 01543000
*                   /* END-OF-DATA. OTHERWISE, GO TO THE NEXT        */ 01544000
*                   /* SEQUENCE SET.                                 */ 01545000
*                   /*                                               */ 01546000
*                   /*************************************************/ 01547000
*                                                                  0572 01548000
*                   RFY                                            0572 01549000
*                     R15 RSTD;     /*                               */ 01550000
*                   R15=RBUFC->BUFCBAD;/* POINT TO BUFFER            */ 01551000
         L     R15,BUFCBAD(,RBUFC)                                 0573 01552000
*                   R15=R15+R15->IXHLEO;/* THEN LAST ENTRY           */ 01553000
         AH    R15,IXHLEO(,R15)                                    0574 01554000
*                   IF R15->IBFLPF=ZERO&/* IF IT IS A                */ 01555000
*                       R15->IBFLPL=ZERO/* DUMMY THEN                */ 01556000
*                     THEN          /* SET EOD.                      */ 01557000
         CLI   IBFLPF(R15),0                                       0575 01558000
         BNE   @RF00575                                            0575 01559000
         CLI   IBFLPL(R15),0                                       0575 01560000
         BNE   @RF00575                                            0575 01561000
*                     DO;                                          0576 01562000
*                       GEN(IDARST14);/* RESTORE RETURN REGISTER     */ 01563000
         IDARST14                                                       01564000
*                       R15=RPLEODER;/* SET RETURN CODE      @ZA27875*/ 01565000
         LA    R15,4                                               0578 01566000
*                       GOTO FRBAEXIT;/* EXIT FRBA           @ZA27875*/ 01567000
         B     FRBAEXIT                                            0579 01568000
*                     END;          /* END OF EOD CODE               */ 01569000
*                   PLHSSRBA=IXHHP; /* SET NEW SS RBA                */ 01570000
@RF00575 L     @10,BUFCBAD(,RBUFC)                                 0581 01571000
         L     @10,IXHHP(,@10)                                     0581 01572000
         ST    @10,PLHSSRBA(,RPLH)                                 0581 01573000
*                   RFY                                            0582 01574000
*                     R15 UNRSTD;   /*                               */ 01575000
*                   RAMB=AMBLIX;    /* INDICATE INDEX READ           */ 01576000
*                                                                  0583 01577000
         L     @15,RPLDACB(,RRPL)                                  0583 01578000
         L     @15,ACBAMBL(,@15)                                   0583 01579000
         L     RAMB,AMBLIX(,@15)                                   0583 01580000
*                   /*************************************************/ 01581000
*                   /*                                               */ 01582000
*                   /* IF DBDC, CALL IDAGRB RATHER THAN READBFR TO   */ 01583000
*                   /* READ SEQ SET                                  */ 01584000
*                   /*                                               */ 01585000
*                   /*************************************************/ 01586000
*                                                                  0584 01587000
*                   IF AMBLSR=ON|   /* LOCAL SHR OR -                */ 01588000
*                       AMBGSR=ON THEN/* GLOBAL SHR?                 */ 01589000
         TM    AMBLSR(RAMB),B'01100000'                            0584 01590000
         BZ    @RF00584                                            0584 01591000
*                     DO;           /* YES, SET FOR GRB              */ 01592000
*                       PLHRDEXC=OFF;/* GET INDEX FOR SHARE          */ 01593000
         NI    PLHRDEXC(RPLH),B'11110111'                          0586 01594000
*                       RPARM1=PLHSSRBA;/* RBA                       */ 01595000
         LR    RPARM1,@10                                          0587 01596000
*I10:                                                              0588 01597000
*                       DO;         /* IDACALL(IDAGRB)               */ 01598000
I10      DS    0H                                                  0589 01599000
*                         CALL IDAGRB;/* EXIT TO IDAGRB              */ 01600000
         L     @15,@CV00041                                        0589 01601000
         BALR  @14,@15                                             0589 01602000
*                         GEN(BALR @11,0);/* LOAD ADDR OF REENTRY    */ 01603000
         BALR @11,0                                                     01604000
*                         GEN(USING *,@11);/* ESTABLISH ADDRESSING   */ 01605000
         USING *,@11                                                    01606000
*                         GEN(L     @11,=A(@PSTART));/* RELOAD BASE  */ 01607000
         L     @11,=A(@PSTART)                                          01608000
*                         GEN(USING @PSTART,@11);/* ESTABLISH      0593 01609000
*                                      ADDRESSING                    */ 01610000
         USING @PSTART,@11                                              01611000
*                       END I10;    /* GET RBA                       */ 01612000
*                       IF RPLREQ=RPLPUT|/* IF PUT OR GET UPDATE     */ 01613000
*                           RPLUPD=ON THEN/* MUST HAVE EXCL CNTL     */ 01614000
         CLI   RPLREQ(RRPL),1                                      0595 01615000
         BE    @RT00595                                            0595 01616000
         TM    RPLUPD(RRPL),B'00000010'                            0595 01617000
         BNO   @RF00595                                            0595 01618000
@RT00595 DS    0H                                                  0596 01619000
*                         PLHRDEXC=ON;/* OF THE DATA.                */ 01620000
         OI    PLHRDEXC(RPLH),B'00001000'                          0596 01621000
*                     END;          /* END DBDC SEQ SET RD           */ 01622000
*                   ELSE            /* NO, CALL READBFR              */ 01623000
*                     DO;                                          0598 01624000
*                                                                  0598 01625000
         B     @RC00584                                            0598 01626000
@RF00584 DS    0H                                                  0599 01627000
*                       /*********************************************/ 01628000
*                       /*                                           */ 01629000
*                       /* POINT TO THE NEXT SEQUENCE SET RBA, CALL  */ 01630000
*                       /* I/O MANAGER TO READ IT, AND CALL IDAWAIT  */ 01631000
*                       /* TO SYNCHRONIZE THE I/O.                   */ 01632000
*                       /*                                           */ 01633000
*                       /*********************************************/ 01634000
*                                                                  0599 01635000
*                       BUFCRRD=ON; /* SET READ REQUIRED             */ 01636000
         OI    BUFCRRD(RBUFC),B'00100000'                          0599 01637000
*                       BUFCDDDD=PLHSSRBA;/* SET NEW SEQ SET RBA     */ 01638000
         L     @15,PLHSSRBA(,RPLH)                                 0600 01639000
         ST    @15,BUFCDDDD(,RBUFC)                                0600 01640000
*                       RFY                                        0601 01641000
*                        (RWORK1,                                  0601 01642000
*                         RWORK2,                                  0601 01643000
*                         RWORK3) UNRSTD;/* DROP REGISTERS           */ 01644000
*                       RFY                                        0602 01645000
*                         R14 UNRSTD;/* RELEASE RETURN REG           */ 01646000
*                       RPARM1=PLHIIOB;/* POINT TO INDEX IOB         */ 01647000
         L     RPARM1,PLHIIOB(,RPLH)                               0603 01648000
*                       CALL READBFR;/* READ NEXT SEQUENCE SET       */ 01649000
         BAL   @14,READBFR                                         0604 01650000
*                     END;          /* END NON DBDC SEQ SET RD       */ 01651000
*                   IF RPLERREG^='00'X THEN/* IF AN ERROR OCCURRED,  */ 01652000
@RC00584 CLI   RPLERREG(RRPL),0                                    0606 01653000
         BNE   @RT00606                                            0606 01654000
*                     GO TO FINDX;  /* RETURN TO CALLER              */ 01655000
*                   RAMB=AMBLDTA;   /* PTR TO DATA                   */ 01656000
         L     @10,RPLDACB(,RRPL)                                  0608 01657000
         L     @10,ACBAMBL(,@10)                                   0608 01658000
         L     RAMB,AMBLDTA(,@10)                                  0608 01659000
*                 END;              /* END OF FWD                    */ 01660000
*                                                                  0609 01661000
*               /*****************************************************/ 01662000
*               /*                                                   */ 01663000
*               /* SET INDEX POINTERS IN THE PLACEHOLDER TO THE FIRST*/ 01664000
*               /* ENTRY                                             */ 01665000
*               /*                                                   */ 01666000
*               /*****************************************************/ 01667000
*                                                                  0610 01668000
*               IXSHEP=BUFCBAD+IXHLL-IXHFLPLN;/* PTR TO 1ST ENTRY    */ 01669000
@RC00531 L     @10,BUFCBAD(,RBUFC)                                 0610 01670000
         LH    @09,IXHLL(,@10)                                     0610 01671000
         N     @09,@CF01170                                        0610 01672000
         ALR   @09,@10                                             0610 01673000
         SLR   @05,@05                                             0610 01674000
         IC    @05,IXHFLPLN(,@10)                                  0610 01675000
         SLR   @09,@05                                             0610 01676000
         ST    @09,IXSHEP(,RPLH)                                   0610 01677000
*               IXSLEP=IXSHEP;      /* FIRST IS ALSO LOW             */ 01678000
         ST    @09,IXSLEP(,RPLH)                                   0611 01679000
*               IXSSEP=IXHSEO+BUFCBAD;/* 1ST SECTION ENTRY PTR       */ 01680000
         LH    @09,IXHSEO(,@10)                                    0612 01681000
         ALR   @09,@10                                             0612 01682000
         ST    @09,IXSSEP(,RPLH)                                   0612 01683000
*               IF RPLBWD=ON THEN   /* IF BWD,                       */ 01684000
*                                                                  0613 01685000
         TM    RPLBWD(RRPL),B'00010000'                            0613 01686000
         BNO   @RF00613                                            0613 01687000
*                 /***************************************************/ 01688000
*                 /*                                                 */ 01689000
*                 /* LOCATE THE LEFT-MOST ENTRY IN THE SEQUENCE SET. */ 01690000
*                 /* IF LAST ENTRY IS A COMPLEX ENTRY, POSITION TO   */ 01691000
*                 /* ITS RIGHT- MOST ELEMENT.                        */ 01692000
*                 /*                                                 */ 01693000
*                 /***************************************************/ 01694000
*                                                                  0614 01695000
*                 DO;                                              0614 01696000
*                   RFY                                            0615 01697000
*                    (RWORK1,                                      0615 01698000
*                     RWORK2,                                      0615 01699000
*                     RWORK3,                                      0615 01700000
*                     RWORK4) RSTD; /* GET REGS                      */ 01701000
*                                                                  0615 01702000
*                   /*************************************************/ 01703000
*                   /*                                               */ 01704000
*                   /* LOCATE LAST SECTION                           */ 01705000
*                   /*                                               */ 01706000
*                   /*************************************************/ 01707000
*                                                                  0616 01708000
*                   DO WHILE IXSSEP^=IXHLEO+BUFCBAD;               0616 01709000
         B     @DE00616                                            0616 01710000
@DL00616 DS    0H                                                  0617 01711000
*                     IXSHEP=IXSSEP;/* MAKE CURR ENTRY A SECTION     */ 01712000
         L     @10,IXSSEP(,RPLH)                                   0617 01713000
         ST    @10,IXSHEP(,RPLH)                                   0617 01714000
*                     CALL ADVSS;   /* ADVANCE TO NEW SECTION        */ 01715000
         BAL   @14,ADVSS                                           0618 01716000
*                   END;            /* LAST SECTION FOUND            */ 01717000
@DE00616 L     @10,IXSSEP(,RPLH)                                   0619 01718000
         L     @09,BUFCBAD(,RBUFC)                                 0619 01719000
         LH    @00,IXHLEO(,@09)                                    0619 01720000
         ALR   @00,@09                                             0619 01721000
         CR    @10,@00                                             0619 01722000
         BNE   @DL00616                                            0619 01723000
*                   IXSHEP=IXSSEP;  /* SET CURRENT ENTRY PTR         */ 01724000
         ST    @10,IXSHEP(,RPLH)                                   0620 01725000
*                   CALL FIRSTSEG;  /* POSITION TO 1ST SEGMENT       */ 01726000
         BAL   @14,FIRSTSEG                                        0621 01727000
*                   RFY                                            0622 01728000
*                    (RWORK2,                                      0622 01729000
*                     RWORK4) UNRSTD;/* DROP REGS                    */ 01730000
*                 END;              /* END OF BWD CODE               */ 01731000
*               GEN(IDARST14);      /* RESTORE RETURN                */ 01732000
@RF00613 DS    0H                                                  0624 01733000
         IDARST14                                                       01734000
*               RFY                                                0625 01735000
*                 R14 RSTD;         /* RESTRICT REGISTER             */ 01736000
*               RFY                                                0626 01737000
*                 R15 RSTD;         /* GET RETURN REGISTER           */ 01738000
*               R15=ZERO;           /* INDICATE NO EXCEPTION         */ 01739000
         SLR   R15,R15                                             0627 01740000
*             END;                  /* END OF CODE FOR SS END        */ 01741000
*                                                                  0628 01742000
*           /*********************************************************/ 01743000
*           /*                                                       */ 01744000
*           /* HERE IF NOT THE END OF THE SEQUENCE SET RECORD        */ 01745000
*           /*                                                       */ 01746000
*           /*********************************************************/ 01747000
*                                                                  0629 01748000
*           ELSE                                                   0629 01749000
*             IF PLHRAHD=ON&        /* IF READ AHEAD                 */ 01750000
*                 (DIWCAS=OFF|      /* FORCED BY                     */ 01751000
*                 DIWPLH^=RPLH)&    /* DIR RCD LOC                   */ 01752000
*                 RWORK3->IBFLPF=AMDKEYLN&/* AND IF                  */ 01753000
*                 IXSHEP->IBFLPF^=AMDKEYLN THEN/* LEAVING SPANNED    */ 01754000
         B     @RC00500                                            0629 01755000
@RF00500 TM    PLHRAHD(RPLH),B'01000000'                           0629 01756000
         BNO   @RF00629                                            0629 01757000
         L     @10,AMBIWA(,RAMB)                                   0629 01758000
         TM    DIWCAS(@10),B'10000000'                             0629 01759000
         BZ    @GL00015                                            0629 01760000
         C     RPLH,DIWPLH(,@10)                                   0629 01761000
         BE    @RF00629                                            0629 01762000
@GL00015 L     @10,AMBDSB(,RAMB)                                   0629 01763000
         LH    @10,AMDKEYLN(,@10)                                  0629 01764000
         SLR   @06,@06                                             0629 01765000
         IC    @06,IBFLPF(,RWORK3)                                 0629 01766000
         CR    @10,@06                                             0629 01767000
         BNE   @RF00629                                            0629 01768000
         L     @06,IXSHEP(,RPLH)                                   0629 01769000
         SLR   @00,@00                                             0629 01770000
         IC    @00,IBFLPF(,@06)                                    0629 01771000
         CR    @10,@00                                             0629 01772000
         BE    @RF00629                                            0629 01773000
*               R15=SIX;            /* RCD, STOP RD                  */ 01774000
         LA    R15,6                                               0630 01775000
*             ELSE                  /* SET NORMAL RETURN             */ 01776000
*               R15=ZERO;                                          0631 01777000
         B     @RC00629                                            0631 01778000
@RF00629 SLR   R15,R15                                             0631 01779000
*         END;                      /* END OF NOT WITHIN S.R.        */ 01780000
*                                                                  0632 01781000
@RC00629 DS    0H                                                  0632 01782000
@RC00500 DS    0H                                                  0633 01783000
*       /*************************************************************/ 01784000
*       /*                                                           */ 01785000
*       /* GET THE DATA RBA FROM THE CURRENT SEQUENCE SET ENTRY      */ 01786000
*       /*                                                           */ 01787000
*       /*************************************************************/ 01788000
*                                                                  0633 01789000
*       RPARM1=IXHPTLS;             /* PICK UP RBA PTR MASK          */ 01790000
@RC00424 L     @10,BUFCBAD(,RBUFC)                                 0633 01791000
         SLR   RPARM1,RPARM1                                       0633 01792000
         IC    RPARM1,IXHPTLS(,@10)                                0633 01793000
*       RFY                                                        0634 01794000
*         RWORK1 RSTD;              /* GET WORK REGISTER             */ 01795000
*       RESPECIFY                                                  0635 01796000
*         IDAIBFLP BASED(IXSHEP);   /* DEFINE ENTRY BASE             */ 01797000
*       RWORK1=ADDR(IBFLP3);        /* GET ADDR OF POINTER           */ 01798000
         L     RWORK1,IXSHEP(,RPLH)                                0636 01799000
         LA    RWORK1,IBFLP3(,RWORK1)                              0636 01800000
*       GEN(EX    RPARM1,ICMINS);   /* GET RBA INCREMENT             */ 01801000
         EX    RPARM1,ICMINS                                            01802000
*       RPARM1=AMDCINV*RPARM1+IXHBRBA;/* GET RBA OF DATA CINV        */ 01803000
         L     @10,AMBDSB(,RAMB)                                   0638 01804000
         LR    @09,RPARM1                                          0638 01805000
         M     @08,AMDCINV(,@10)                                   0638 01806000
         L     @10,BUFCBAD(,RBUFC)                                 0638 01807000
         AL    @09,IXHBRBA(,@10)                                   0638 01808000
         LR    RPARM1,@09                                          0638 01809000
*       RESPECIFY                                                  0639 01810000
*         RWORK3 UNRESTRICTED;      /* DROP WORK REGISTER            */ 01811000
*       IF RPARM1<PLHNRBA THEN      /* IF RBA OUT OF SEQUENCE        */ 01812000
         CL    RPARM1,PLHNRBA(,RPLH)                               0640 01813000
         BNL   @RF00640                                            0640 01814000
*         PLHRVRS=ON;               /* SET REORDER FLAG.             */ 01815000
         OI    PLHRVRS(RPLH),B'00001000'                           0641 01816000
*       PLHNRBA=RPARM1;             /* SAVE RBA FOR NEXT TEST.       */ 01817000
@RF00640 ST    RPARM1,PLHNRBA(,RPLH)                               0642 01818000
*FRBAEXIT:                          /* EXIT FROM FIND RBA    @ZA27875*/ 01819000
*       RETURN CODE(R15);           /* MAKE NORMAL RETURN            */ 01820000
FRBAEXIT BR    @14                                                 0643 01821000
*     END;                          /* END OF KEYED ACCESS           */ 01822000
*                                                                  0645 01823000
*   /*****************************************************************/ 01824000
*   /*                                                               */ 01825000
*   /* CHAINBFR - ADD A BUFFER TO PLH CHAIN                          */ 01826000
*   /*                                                               */ 01827000
*   /*****************************************************************/ 01828000
*                                                                  0645 01829000
*/* FUNCTION = ADD A BUFFER TO A PLH CHAIN OF BUFFERS                */ 01830000
*/* INPUT = RBUFC CONTAINS THE ADDRESS OF THE BUFC TO BE ADDED       */ 01831000
*/*         TO THE BUFC CHAIN.  OTHER REGISTERS ARE STANDARD.        */ 01832000
*/* OUTPUT = RBUFC AND STANDARD REGISTERS ARE UNCHANGED.  THE BUFC   */ 01833000
*/*          IS IN THE I/O CHAIN AS AN EMPTY BUFC.                   */ 01834000
*                                                                  0645 01835000
*CHAINBFR:                                                         0645 01836000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0645 01837000
CHAINBFR DS    0H                                                  0646 01838000
*   RFY                                                            0646 01839000
*    (R14,                                                         0646 01840000
*     RWORK1,                                                      0646 01841000
*     RWORK2) RSTD;                 /* GET REGS                      */ 01842000
*   BUFCPLH=RPLH;                   /* STORE PLH PTR                 */ 01843000
*                                                                  0647 01844000
         ST    RPLH,BUFCPLH(,RBUFC)                                0647 01845000
*   /*****************************************************************/ 01846000
*   /*                                                               */ 01847000
*   /* PUT BUFC IN THE PLACEHOLDER BUFC CHAIN AND RESET THE          */ 01848000
*   /* PLACEHOLDER BUFFER COUNTS.                                    */ 01849000
*   /*                                                               */ 01850000
*   /*****************************************************************/ 01851000
*                                                                  0648 01852000
*   RWORK1=PLHDBUFC;                /* GET ON BFR CH                 */ 01853000
*                                                                  0648 01854000
         L     RWORK1,PLHDBUFC(,RPLH)                              0648 01855000
*   /*****************************************************************/ 01856000
*   /*                                                               */ 01857000
*   /* FIND THE BUFC PRIOR TO PLHNBUFC                               */ 01858000
*   /*                                                               */ 01859000
*   /*****************************************************************/ 01860000
*                                                                  0649 01861000
*   DO WHILE RWORK1->BUFCNXT2^=PLHNBUFC;                           0649 01862000
         B     @DE00649                                            0649 01863000
@DL00649 DS    0H                                                  0650 01864000
*     RWORK1=RWORK1->BUFCNXT2;      /* GET NEXT BUFC                 */ 01865000
         L     @10,BUFCNXT2-1(,RWORK1)                             0650 01866000
         LA    @10,0(,@10)                                         0650 01867000
         LR    RWORK1,@10                                          0650 01868000
*   END;                            /* END OF SCH                    */ 01869000
*                                                                  0651 01870000
@DE00649 L     @10,PLHNBUFC(,RPLH)                                 0651 01871000
         L     @07,BUFCNXT2-1(,RWORK1)                             0651 01872000
         LA    @07,0(,@07)                                         0651 01873000
         CR    @10,@07                                             0651 01874000
         BNE   @DL00649                                            0651 01875000
*   /*****************************************************************/ 01876000
*   /*                                                               */ 01877000
*   /* POINT THE NEW BUFFER TO THE OLD FIRST EMPTY BUFFER.           */ 01878000
*   /*                                                               */ 01879000
*   /*****************************************************************/ 01880000
*                                                                  0652 01881000
*   BUFCNXT1=RWORK1->BUFCNXT1;      /*                       @ZA08319*/ 01882000
         L     @07,BUFCNXT1(,RWORK1)                               0652 01883000
         ST    @07,BUFCNXT1(,RBUFC)                                0652 01884000
*   BUFCNXT2=PLHNBUFC;                                             0653 01885000
*                                                                  0653 01886000
         STCM  @10,7,BUFCNXT2(RBUFC)                               0653 01887000
*   /*****************************************************************/ 01888000
*   /*                                                               */ 01889000
*   /* POINT THE PRIOR BUFC TO THE NEWLY ADDED BUFC.                 */ 01890000
*   /*                                                               */ 01891000
*   /*****************************************************************/ 01892000
*                                                                  0654 01893000
*   RWORK1->BUFCNXT1=RBUFC;                                        0654 01894000
         ST    RBUFC,BUFCNXT1(,RWORK1)                             0654 01895000
*   RWORK1->BUFCNXT2=RBUFC;                                        0655 01896000
*                                                                  0655 01897000
         STCM  RBUFC,7,BUFCNXT2(RWORK1)                            0655 01898000
*   /*****************************************************************/ 01899000
*   /*                                                               */ 01900000
*   /* SET A NEW FIRST EMPTY BUFC.                                   */ 01901000
*   /*                                                               */ 01902000
*   /*****************************************************************/ 01903000
*                                                                  0656 01904000
*   PLHNBUFC=RBUFC;                                                0656 01905000
         ST    RBUFC,PLHNBUFC(,RPLH)                               0656 01906000
*   PLHFRCNT=PLHFRCNT+ONE;          /* 1 MORE FREE BFR               */ 01907000
         LA    @10,1                                               0657 01908000
         SLR   @07,@07                                             0657 01909000
         IC    @07,PLHFRCNT(,RPLH)                                 0657 01910000
         ALR   @07,@10                                             0657 01911000
         STC   @07,PLHFRCNT(,RPLH)                                 0657 01912000
*   PLHBFRNO=PLHBFRNO+ONE;          /* 1 MORE PLH BFR                */ 01913000
         SLR   @07,@07                                             0658 01914000
         IC    @07,PLHBFRNO(,RPLH)                                 0658 01915000
         ALR   @10,@07                                             0658 01916000
         STC   @10,PLHBFRNO(,RPLH)                                 0658 01917000
*   END CHAINBFR;                   /* END OF CHAINING               */ 01918000
@EL00004 DS    0H                                                  0659 01919000
@EF00004 DS    0H                                                  0659 01920000
@ER00004 BR    @14                                                 0659 01921000
*                                                                  0660 01922000
*   /*****************************************************************/ 01923000
*   /*                                                               */ 01924000
*   /* ADVSS - ADVANCE SEQUENCE SET PTR                              */ 01925000
*   /*                                                               */ 01926000
*   /*****************************************************************/ 01927000
*                                                                  0660 01928000
*/* FUNCTION = ADVANCE TO NEXT SEQUENCE SET POINTER                  */ 01929000
*/* INPUT = IXSHEP POINTS TO CURRENT SEQ SET ENTRY.  IXSLEP AND      */ 01930000
*/*         IXSSEP REFLECT THE LOW AND HIGH ENTRIES OF THE SECTION.  */ 01931000
*/* OUTPUT = IXSHEP POINTS TO NEXT SEQ SET ENTRY.  RWORK2 AND RWORK3 */ 01932000
*/*          ARE UNCHANGED.  OTHER REGISTERS ARE STANDARD.   IXSSEP  */ 01933000
*/*          AND IXSLEP ARE UPDATED AS NECESSARY.                    */ 01934000
*                                                                  0660 01935000
*ADVSS:                                                            0660 01936000
*   PROCEDURE OPTIONS(DONTSAVE,NOSAVEAREA);                        0660 01937000
ADVSS    DS    0H                                                  0661 01938000
*   RFY                                                            0661 01939000
*    (RWORK1,                                                      0661 01940000
*     RWORK2,                                                      0661 01941000
*     RWORK3,                                                      0661 01942000
*     RWORK4,                                                      0661 01943000
*     R14) RSTD;                    /* GET REGS                      */ 01944000
*   RWORK1=IXSHEP->IBFLPL;          /* CURR ENTRY LEN                */ 01945000
         L     @10,IXSHEP(,RPLH)                                   0662 01946000
         SLR   RWORK1,RWORK1                                       0662 01947000
         IC    RWORK1,IBFLPL(,@10)                                 0662 01948000
*   IF IXSHEP=IXSSEP                /* SEE IF THIS ENTRY IS          */ 01949000
*     THEN                          /* SECTION ENTRY AND IF          */ 01950000
         L     @09,IXSSEP(,RPLH)                                   0663 01951000
         CR    @10,@09                                             0663 01952000
         BNE   @RF00663                                            0663 01953000
*     DO;                           /* SO, ACT ACCORDINGLY.          */ 01954000
*       IXSHEP=IXSHEP-IXHFLPLN-RWORK1/* NEXT ENTRY                   */ 01955000
*           -LENGTH(IXSELL);        /* POINTER SET UP                */ 01956000
         L     @09,BUFCBAD(,RBUFC)                                 0665 01957000
         SLR   @00,@00                                             0665 01958000
         IC    @00,IXHFLPLN(,@09)                                  0665 01959000
         SLR   @10,@00                                             0665 01960000
         SLR   @10,RWORK1                                          0665 01961000
         BCTR  @10,0                                               0665 01962000
         BCTR  @10,0                                               0665 01963000
         ST    @10,IXSHEP(,RPLH)                                   0665 01964000
*       RWORK4=IXSHEP+IXHFLPLN;     /* POINT TO SECTION ENTRY        */ 01965000
         ALR   @00,@10                                             0666 01966000
         LR    RWORK4,@00                                          0666 01967000
*       IXSSEP=IXSSEP-RWORK4->IXSELL;/* NEW SECTION ENTRY PTR        */ 01968000
         L     @09,IXSSEP(,RPLH)                                   0667 01969000
         SLR   @00,@00                                             0667 01970000
         ICM   @00,3,IXSELL(RWORK4)                                0667 01971000
         SLR   @09,@00                                             0667 01972000
         ST    @09,IXSSEP(,RPLH)                                   0667 01973000
*       IXSLEP=IXSHEP;              /* SET NEW LOW ENTRY PTR         */ 01974000
         ST    @10,IXSLEP(,RPLH)                                   0668 01975000
*     END;                          /* END OF SECTION ENTRY          */ 01976000
*   ELSE                            /* IF NOT SECTION ENTRY,         */ 01977000
*     IXSHEP=IXSHEP-IXHFLPLN-RWORK1;/* JUST RESET CURR.              */ 01978000
         B     @RC00663                                            0670 01979000
@RF00663 L     @10,BUFCBAD(,RBUFC)                                 0670 01980000
         L     @09,IXSHEP(,RPLH)                                   0670 01981000
         SLR   @00,@00                                             0670 01982000
         IC    @00,IXHFLPLN(,@10)                                  0670 01983000
         SLR   @09,@00                                             0670 01984000
         SLR   @09,RWORK1                                          0670 01985000
         ST    @09,IXSHEP(,RPLH)                                   0670 01986000
*   RFY                                                            0671 01987000
*     RWORK4 UNRSTD;                /* DROP REGISTER                 */ 01988000
*   END ADVSS;                      /* END OF SS ADV                 */ 01989000
@EL00005 DS    0H                                                  0672 01990000
@EF00005 DS    0H                                                  0672 01991000
@ER00005 BR    @14                                                 0672 01992000
*                                                                  0673 01993000
*   /*****************************************************************/ 01994000
*   /*                                                               */ 01995000
*   /* BACKUP - BACKUP ONE SEQUENCE SET ENTRY                        */ 01996000
*   /*                                                               */ 01997000
*   /*****************************************************************/ 01998000
*                                                                  0673 01999000
*/* FUNCTION = BACKUP ONE SEQUENCE SET ENTRY.                        */ 02000000
*/* INPUT = IXSHEP, IXSLEP, AND IXSSEP REFLECT THE CURRENT POSITION. */ 02001000
*/*         RBUFC POINTS TO THE SEQUENCE SET BUFC.                   */ 02002000
*/* OUTPUT = IXSHEP, IXSLEP AND IXSSEP ARE SET TO REFLECT THE BACKED */ 02003000
*/*         UP POSITION.  IXSHEP = ZERO IF END OF SEQUENCE SET IS    */ 02004000
*/*         REACHED.  RWORK3 IS UNCHANGED.                           */ 02005000
*                                                                  0673 02006000
*BACKUP:                                                           0673 02007000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0673 02008000
BACKUP   DS    0H                                                  0674 02009000
*   RFY                                                            0674 02010000
*    (RWORK1,                                                      0674 02011000
*     RWORK2,                                                      0674 02012000
*     RWORK3,                                                      0674 02013000
*     RWORK4,                                                      0674 02014000
*     RWORK5,                                                      0674 02015000
*     R14) RSTD;                    /* GET REGS                      */ 02016000
*   RWORK1=IXSHEP;                  /* SAVE CURRENT ENTRY            */ 02017000
         L     @10,IXSHEP(,RPLH)                                   0675 02018000
         LR    RWORK1,@10                                          0675 02019000
*   IF IXSHEP=IXSLEP THEN           /* IF CURRENT IS LAST IN         */ 02020000
         L     @00,IXSLEP(,RPLH)                                   0676 02021000
         CR    @10,@00                                             0676 02022000
         BNE   @RF00676                                            0676 02023000
*     DO;                           /* SECTION LOCATE N-1     SECTION*/ 02024000
*       RWORK4=IXHSEO+BUFCBAD;      /* 1ST SECTION ENTRY             */ 02025000
         L     @10,BUFCBAD(,RBUFC)                                 0678 02026000
         LH    RWORK4,IXHSEO(,@10)                                 0678 02027000
         ALR   RWORK4,@10                                          0678 02028000
*       RWORK5=BUFCBAD+IXHLL-IXHFLPLN;/* FIRST ENTRY                 */ 02029000
         LH    RWORK5,IXHLL(,@10)                                  0679 02030000
         N     RWORK5,@CF01170                                     0679 02031000
         ALR   RWORK5,@10                                          0679 02032000
         SLR   @00,@00                                             0679 02033000
         IC    @00,IXHFLPLN(,@10)                                  0679 02034000
         SLR   RWORK5,@00                                          0679 02035000
*       IF RWORK5=IXSLEP THEN       /* TEST FOR SEQ SET END          */ 02036000
         L     @10,IXSLEP(,RPLH)                                   0680 02037000
         CR    RWORK5,@10                                          0680 02038000
         BNE   @RF00680                                            0680 02039000
*         DO;                                                      0681 02040000
*           IXSHEP=ZERO;            /* SET NO POINTER                */ 02041000
         SLR   @10,@10                                             0682 02042000
         ST    @10,IXSHEP(,RPLH)                                   0682 02043000
*           RETURN;                 /* RETURN TO CALLER              */ 02044000
@EL00006 DS    0H                                                  0683 02045000
@EF00006 DS    0H                                                  0683 02046000
@ER00006 BR    @14                                                 0683 02047000
*         END;                      /* END OF SEQUENCE SET           */ 02048000
*       DO WHILE RWORK4>RWORK1;     /* LOCATE PRIOR SECTION          */ 02049000
@RF00680 B     @DE00685                                            0685 02050000
@DL00685 DS    0H                                                  0686 02051000
*         IXSHEP=RWORK4;            /* UPDATE CURRENT POINTER        */ 02052000
         ST    RWORK4,IXSHEP(,RPLH)                                0686 02053000
*         IXSLEP=RWORK5;            /* NEW LOW ENTRY IN SECTION      */ 02054000
         ST    RWORK5,IXSLEP(,RPLH)                                0687 02055000
*         RWORK2=IXSHEP->IBFLPL;    /* CURRENT ENTRY LENGTH          */ 02056000
         L     @10,IXSHEP(,RPLH)                                   0688 02057000
         SLR   RWORK2,RWORK2                                       0688 02058000
         IC    RWORK2,IBFLPL(,@10)                                 0688 02059000
*         RWORK2=IXSHEP-RWORK2-LENGTH(IXSELL);/* POINT TO LL         */ 02060000
         SLR   @10,RWORK2                                          0689 02061000
         BCTR  @10,0                                               0689 02062000
         BCTR  @10,0                                               0689 02063000
         LR    RWORK2,@10                                          0689 02064000
*         RWORK4=RWORK4-RWORK2->IXSELL;/* NEW SECTION ENTRY POINTER  */ 02065000
         SLR   @10,@10                                             0690 02066000
         ICM   @10,3,IXSELL(RWORK2)                                0690 02067000
         SLR   RWORK4,@10                                          0690 02068000
*         RWORK5=RWORK2-IXHFLPLN;   /* NEW LOW ENTRY POINTER         */ 02069000
         L     @10,BUFCBAD(,RBUFC)                                 0691 02070000
         LR    RWORK5,RWORK2                                       0691 02071000
         SLR   @00,@00                                             0691 02072000
         IC    @00,IXHFLPLN(,@10)                                  0691 02073000
         SLR   RWORK5,@00                                          0691 02074000
*       END;                        /* END OF LOCATING PRIOR SECT    */ 02075000
@DE00685 CR    RWORK4,RWORK1                                       0692 02076000
         BH    @DL00685                                            0692 02077000
*       IXSSEP=IXSHEP;              /* SET NEW SECTION ENTRY         */ 02078000
         L     @10,IXSHEP(,RPLH)                                   0693 02079000
         ST    @10,IXSSEP(,RPLH)                                   0693 02080000
*     END;                          /* END OF LAST IN SECTION        */ 02081000
*   ELSE                            /* MORE ENTRIES IN SECTION       */ 02082000
*     DO;                                                          0695 02083000
         B     @RC00676                                            0695 02084000
@RF00676 DS    0H                                                  0696 02085000
*       RFY                                                        0696 02086000
*        (RWORK4,                                                  0696 02087000
*         RWORK5) UNRSTD;           /* RELEASE REGISTERS             */ 02088000
*       RWORK2=IXSLEP;              /* POINT TO LOW ENTRY            */ 02089000
         L     RWORK2,IXSLEP(,RPLH)                                0697 02090000
*       DO WHILE RWORK2>RWORK1;     /* SEARCH UNTIL PRIOR FOUND      */ 02091000
         B     @DE00698                                            0698 02092000
@DL00698 DS    0H                                                  0699 02093000
*         IXSHEP=RWORK2;            /* SET NEW CURRENT ENTRY         */ 02094000
         ST    RWORK2,IXSHEP(,RPLH)                                0699 02095000
*         RWORK2=IXSHEP->IBFLPL;    /* GET LENGTH OF KEY             */ 02096000
         L     @10,IXSHEP(,RPLH)                                   0700 02097000
         SLR   RWORK2,RWORK2                                       0700 02098000
         IC    RWORK2,IBFLPL(,@10)                                 0700 02099000
*         RWORK2=IXSHEP-IXHFLPLN-RWORK2;/* SET POINTER TO NEXT       */ 02100000
         L     @09,BUFCBAD(,RBUFC)                                 0701 02101000
         SLR   @00,@00                                             0701 02102000
         IC    @00,IXHFLPLN(,@09)                                  0701 02103000
         SLR   @10,@00                                             0701 02104000
         SLR   @10,RWORK2                                          0701 02105000
         LR    RWORK2,@10                                          0701 02106000
*       END;                        /* END OF PRIOR ENTRY SEARCH     */ 02107000
@DE00698 CLR   RWORK2,RWORK1                                       0702 02108000
         BH    @DL00698                                            0702 02109000
*     END;                          /* END--MORE ENTRIES IN SECT     */ 02110000
*   END BACKUP;                     /* END OF BACKUP ROUTINE         */ 02111000
         B     @EL00006                                            0704 02112000
*                                                                  0705 02113000
*   /*****************************************************************/ 02114000
*   /*                                                               */ 02115000
*   /* FIRSTSEG - POSITION TO FIRST SEG IF SPANNED RECORD            */ 02116000
*   /*                                                               */ 02117000
*   /*****************************************************************/ 02118000
*                                                                  0705 02119000
*/* FUNCTION = POSITION TO THE FIRST SEGMENT IF THE RCD IS SPANNED   */ 02120000
*/* INPUT = IXSHEP, IXSSEP, AND IXSLEP ARE SET APPROPRIATELY.  RBUFC */ 02121000
*/*         POINTS TO THE SEQUENCE SET BUFC.                         */ 02122000
*/* OUTPUT = IXSLEP AND IXSSEP ARE UNCHANGED.  IXSHEP IS SET TO THE  */ 02123000
*/*          FIRST SEGMENT OF THE SPANNED RECORD OR LEFT AT ITS      */ 02124000
*/*          ORIGINAL VALUE IF THE RECORD WAS NOT SPANNED.           */ 02125000
*                                                                  0705 02126000
*FIRSTSEG:                                                         0705 02127000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0705 02128000
FIRSTSEG DS    0H                                                  0706 02129000
*   RFY                                                            0706 02130000
*    (RWORK1,                                                      0706 02131000
*     RWORK2,                                                      0706 02132000
*     RWORK3,                                                      0706 02133000
*     R14) RSTD;                    /* GET REGS                      */ 02134000
*   PLHRBUFC=R14;                   /* SAVE RETURN REGISTER          */ 02135000
         ST    R14,PLHRBUFC(,RPLH)                                 0707 02136000
*   IF IXSHEP^=ZERO THEN            /* IF AN ENTRY FOUND,            */ 02137000
         L     @10,IXSHEP(,RPLH)                                   0708 02138000
         LTR   @10,@10                                             0708 02139000
         BZ    @RF00708                                            0708 02140000
*     DO;                           /* RESET POSITION IF SPANNED     */ 02141000
*       CALL BACKUP;                /* POINT TO PRIOR ENTRY          */ 02142000
         BAL   @14,BACKUP                                          0710 02143000
*       IF IXSHEP^=ZERO THEN        /* IF PRIOR EXISTS AND IT IS     */ 02144000
*                                                                  0711 02145000
         L     @10,IXSHEP(,RPLH)                                   0711 02146000
         LTR   @10,@10                                             0711 02147000
         BZ    @RF00711                                            0711 02148000
*         /***********************************************************/ 02149000
*         /*                                                         */ 02150000
*         /* A SPANNED RECORD, SKIP TO THE FIRST SEGMENT.            */ 02151000
*         /*                                                         */ 02152000
*         /***********************************************************/ 02153000
*                                                                  0712 02154000
*         DO WHILE(IXSHEP^=ZERO&IXSHEP->IBFLPF=AMDKEYLN);          0712 02155000
         B     @DE00712                                            0712 02156000
@DL00712 DS    0H                                                  0713 02157000
*           CALL BACKUP;            /* BACK UP ENTRIES UNTIL         */ 02158000
         BAL   @14,BACKUP                                          0713 02159000
*         END;                      /* END OF SEQ SET OR NEXT RCD    */ 02160000
@DE00712 L     @10,IXSHEP(,RPLH)                                   0714 02161000
         LTR   @10,@10                                             0714 02162000
         BZ    @DC00712                                            0714 02163000
         L     @09,AMBDSB(,RAMB)                                   0714 02164000
         SLR   @00,@00                                             0714 02165000
         IC    @00,IBFLPF(,@10)                                    0714 02166000
         CH    @00,AMDKEYLN(,@09)                                  0714 02167000
         BE    @DL00712                                            0714 02168000
@DC00712 DS    0H                                                  0715 02169000
*       IF IXSHEP=ZERO THEN         /* IF END OF SEQ SET             */ 02170000
@RF00711 L     @10,IXSHEP(,RPLH)                                   0715 02171000
         LTR   @10,@10                                             0715 02172000
         BNZ   @RF00715                                            0715 02173000
*         IXSHEP=IXSLEP;            /* POINT TO 1ST ENTRY            */ 02174000
         L     @10,IXSLEP(,RPLH)                                   0716 02175000
         ST    @10,IXSHEP(,RPLH)                                   0716 02176000
*       ELSE                        /* ELSE---                       */ 02177000
*         CALL ADVSS;               /* ---- POINT BACK TO 1ST SEG    */ 02178000
         B     @RC00715                                            0717 02179000
@RF00715 BAL   @14,ADVSS                                           0717 02180000
*     END;                          /* END OF POSITION RESET         */ 02181000
@RC00715 DS    0H                                                  0719 02182000
*   R14=PLHRBUFC;                   /* RESTORE RETURN                */ 02183000
@RF00708 L     R14,PLHRBUFC(,RPLH)                                 0719 02184000
*   END FIRSTSEG;                   /* END OF FIRSTSEG               */ 02185000
@EL00007 DS    0H                                                  0720 02186000
@EF00007 DS    0H                                                  0720 02187000
@ER00007 BR    @14                                                 0720 02188000
*   GEN(IDAPATCH);                  /* DEFINE A PATCH AREA           */ 02189000
         IDAPATCH                                                       02190000
*   END IDA019RW                    /* END OF BUFFER MANAGER--2      */ 02191000
*                                                                  0722 02192000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02193000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 02194000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 02195000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 02196000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 02197000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 02198000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 02199000
*/*%INCLUDE SYSLIB  (IDAEDB  )                                       */ 02200000
*/*%INCLUDE SYSLIB  (IDALPMB )                                       */ 02201000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02202000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02203000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02204000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02205000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02206000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02207000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02208000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02209000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02210000
*                                                                  0722 02211000
*       ;                                                          0722 02212000
         B     @EL00001                                            0722 02213000
@DATA    DS    0H                                                       02214000
@SM01171 MVC   PLHKEY(0,@15),KEY(RWORK2)                                02215000
@DATD    DSECT                                                          02216000
         DS    0F                                                       02217000
IDA019RW CSECT                                                          02218000
         DS    0F                                                       02219000
@CF00058 DC    F'1'                                                     02220000
@CF00045 DC    F'2'                                                     02221000
@CF00243 DC    F'4'                                                     02222000
@CF00049 DC    F'8'                                                     02223000
@CF00051 DC    F'9'                                                     02224000
@CF01170 DC    XL4'0000FFFF'                                            02225000
@DATD    DSECT                                                          02226000
         DS    0D                                                       02227000
IDA019RW CSECT                                                          02228000
         DS    0F                                                       02229000
@SIZDATD DC    AL1(0)                                                   02230000
         DC    AL3(@ENDDATD-@DATD)                                      02231000
@CV00037 DC    V(IDA019R3)                                              02232000
@CV00038 DC    V(IDA019RC)                                              02233000
@CV00039 DC    V(IDA019RV)                                              02234000
@CV00040 DC    V(IDAWAIT)                                               02235000
@CV00041 DC    V(IDAGRB)                                                02236000
@CV00042 DC    V(IDAWRBFR)                                              02237000
         DS    0D                                                       02238000
HWORD4   DC    H'4'                                                     02239000
@DATD    DSECT                                                          02240000
TWELVE   EQU   12                       OFFSET TO REGS                  02241000
@DATD    DSECT                                                          02242000
*                                                          /*@X04SVLC*/ 02243000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           02244000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              02245000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             02246000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                02247000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 02248000
RDFLEN   EQU   3                        LENGTH OF RDF                   02249000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         02250000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       02251000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  02252000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              02253000
@DATD    DSECT                                                          02254000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02255000
@ENDDATD EQU   *                                                        02256000
IDA019RW CSECT                                                          02257000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02258000
@01      EQU   01                                                       02259000
@02      EQU   02                                                       02260000
@03      EQU   03                                                       02261000
@04      EQU   04                                                       02262000
@05      EQU   05                                                       02263000
@06      EQU   06                                                       02264000
@07      EQU   07                                                       02265000
@08      EQU   08                                                       02266000
@09      EQU   09                                                       02267000
@10      EQU   10                                                       02268000
@11      EQU   11                                                       02269000
@12      EQU   12                                                       02270000
@13      EQU   13                                                       02271000
@14      EQU   14                                                       02272000
@15      EQU   15                                                       02273000
RWORK3X  EQU   @07                                                      02274000
RRPL     EQU   @01                                                      02275000
RPLH     EQU   @02                                                      02276000
RAMB     EQU   @03                                                      02277000
RBUFC    EQU   @04                                                      02278000
RWORK1   EQU   @05                                                      02279000
RWORK2   EQU   @06                                                      02280000
RWORK3   EQU   @07                                                      02281000
RWORK4   EQU   @08                                                      02282000
RWORK5   EQU   @09                                                      02283000
RPARM1   EQU   @12                                                      02284000
R14      EQU   @14                                                      02285000
R15      EQU   @15                                                      02286000
RWORK0   EQU   @00                                                      02287000
R1       EQU   @01                                                      02288000
R10      EQU   @10                                                      02289000
R11      EQU   @11                                                      02290000
R13      EQU   @13                                                      02291000
IDACIDF  EQU   0                                                        02292000
CIDFLL   EQU   IDACIDF+2                                                02293000
IDARDF   EQU   0                                                        02294000
RDFRBYTE EQU   IDARDF                                                   02295000
RDFSEG   EQU   RDFRBYTE                                                 02296000
IDADATA  EQU   0                                                        02297000
IDAKEY   EQU   0                                                        02298000
KEY      EQU   IDAKEY                                                   02299000
IDAIXH   EQU   0                                                        02300000
IXHLL    EQU   IDAIXH                                                   02301000
IXHFLPLN EQU   IDAIXH+2                                                 02302000
IXHPTLS  EQU   IDAIXH+3                                                 02303000
IXHBRBA  EQU   IDAIXH+4                                                 02304000
IXHHP    EQU   IDAIXH+8                                                 02305000
IXHLEO   EQU   IDAIXH+20                                                02306000
IXHSEO   EQU   IDAIXH+22                                                02307000
IDAIBFLP EQU   0                                                        02308000
IBFLPF   EQU   IDAIBFLP                                                 02309000
IBFLPL   EQU   IDAIBFLP+1                                               02310000
IBFLP3   EQU   IDAIBFLP+2                                               02311000
IBFLP2   EQU   IBFLP3                                                   02312000
IDASELL  EQU   0                                                        02313000
IXSELL   EQU   IDASELL                                                  02314000
IDAIXK   EQU   0                                                        02315000
IDAARDB  EQU   0                                                        02316000
ARDTYPE  EQU   IDAARDB+1                                                02317000
ARDEOD   EQU   ARDTYPE                                                  02318000
ARDNPTR  EQU   IDAARDB+4                                                02319000
ARDHRBA  EQU   IDAARDB+12                                               02320000
ARDERBA  EQU   IDAARDB+16                                               02321000
ARDPRF   EQU   IDAARDB+28                                               02322000
IDADIWA  EQU   0                                                        02323000
DIWFLG1  EQU   IDADIWA+4                                                02324000
DIWCAS   EQU   DIWFLG1                                                  02325000
DIWFLG2  EQU   IDADIWA+5                                                02326000
DIWPLH   EQU   IDADIWA+16                                               02327000
DIWBUFC  EQU   IDADIWA+20                                               02328000
DIWSAVE  EQU   IDADIWA+28                                               02329000
IDAEDBHD EQU   0                                                        02330000
EDBLPMBC EQU   IDAEDBHD+4                                               02331000
IDAEDB   EQU   0                                                        02332000
EDBFLG1  EQU   IDAEDB+2                                                 02333000
IDALPMB  EQU   0                                                        02334000
LPMBFLGS EQU   IDALPMB+1                                                02335000
LPMBPTRK EQU   IDALPMB+8                                                02336000
IFGRPL   EQU   0                                                        02337000
RPLCOMN  EQU   IFGRPL                                                   02338000
RPLIDWD  EQU   RPLCOMN                                                  02339000
RPLREQ   EQU   RPLIDWD+2                                                02340000
RPLLEN   EQU   RPLIDWD+3                                                02341000
RPLECB   EQU   RPLCOMN+8                                                02342000
RPLFDBWD EQU   RPLCOMN+12                                               02343000
RPLFDBK  EQU   RPLFDBWD+1                                               02344000
RPLRTNCD EQU   RPLFDBK                                                  02345000
RPLERREG EQU   RPLRTNCD                                                 02346000
RPLCNDCD EQU   RPLFDBK+1                                                02347000
RPLCMPON EQU   RPLCNDCD                                                 02348000
RPLFDB2  EQU   RPLCMPON                                                 02349000
RPLERRCD EQU   RPLCNDCD+1                                               02350000
RPLFDB3  EQU   RPLERRCD                                                 02351000
RPLKEYLE EQU   RPLCOMN+16                                               02352000
RPLDACB  EQU   RPLCOMN+24                                               02353000
RPLARG   EQU   RPLCOMN+36                                               02354000
RPLOPTCD EQU   RPLCOMN+40                                               02355000
RPLOPT1  EQU   RPLOPTCD                                                 02356000
RPLASY   EQU   RPLOPT1                                                  02357000
RPLECBSW EQU   RPLOPT1                                                  02358000
RPLOPT2  EQU   RPLOPTCD+1                                               02359000
RPLKEY   EQU   RPLOPT2                                                  02360000
RPLADR   EQU   RPLOPT2                                                  02361000
RPLBWD   EQU   RPLOPT2                                                  02362000
RPLUPD   EQU   RPLOPT2                                                  02363000
RPLOPT3  EQU   RPLOPTCD+2                                               02364000
RPLOPT4  EQU   RPLOPTCD+3                                               02365000
RPLNXTRP EQU   RPLCOMN+44                                               02366000
RPLOPTC2 EQU   RPLCOMN+56                                               02367000
RPLOPT5  EQU   RPLOPTC2                                                 02368000
RPLWRTYP EQU   RPLOPT5                                                  02369000
RPLOPT6  EQU   RPLOPTC2+1                                               02370000
RPLUNTYP EQU   RPLOPT6                                                  02371000
RPLOPT7  EQU   RPLOPTC2+2                                               02372000
RPLCNOPT EQU   RPLOPT7                                                  02373000
RPLOPT8  EQU   RPLOPTC2+3                                               02374000
RPLRBAR  EQU   RPLCOMN+60                                               02375000
RPLAIXID EQU   RPLRBAR+2                                                02376000
RPLEXTDS EQU   RPLCOMN+68                                               02377000
RPLEXTD1 EQU   RPLEXTDS                                                 02378000
IDABUFDR EQU   0                                                        02379000
BUFDRCIX EQU   IDABUFDR+9                                               02380000
BUFDRMAX EQU   BUFDRCIX                                                 02381000
BUFDRTSB EQU   IDABUFDR+10                                              02382000
BUFDRFLG EQU   IDABUFDR+11                                              02383000
BUFDRREL EQU   BUFDRFLG                                                 02384000
BUFDRAVL EQU   BUFDRFLG                                                 02385000
BUFDBUFC EQU   IDABUFDR+12                                              02386000
IDABUFC  EQU   0                                                        02387000
BUFCAVL  EQU   IDABUFC                                                  02388000
BUFCFLG1 EQU   IDABUFC+1                                                02389000
BUFCINS  EQU   BUFCFLG1                                                 02390000
BUFCER1  EQU   BUFCFLG1                                                 02391000
BUFCER2  EQU   BUFCFLG1                                                 02392000
BUFCIOFL EQU   IDABUFC+2                                                02393000
BUFCMW   EQU   BUFCIOFL                                                 02394000
BUFCRRD  EQU   BUFCIOFL                                                 02395000
BUFCXEDB EQU   BUFCIOFL                                                 02396000
BUFCFLG2 EQU   IDABUFC+3                                                02397000
BUFCPLH  EQU   IDABUFC+4                                                02398000
BUFCDDDD EQU   IDABUFC+8                                                02399000
BUFCBAD  EQU   IDABUFC+20                                               02400000
BUFCNXT1 EQU   IDABUFC+24                                               02401000
BUFCINV  EQU   IDABUFC+28                                               02402000
BUFCNXT2 EQU   IDABUFC+37                                               02403000
BUFCHAIN EQU   IDABUFC+48                                               02404000
IFGACB   EQU   0                                                        02405000
ACBCOMN  EQU   IFGACB                                                   02406000
ACBLENG  EQU   ACBCOMN+2                                                02407000
ACBLENG2 EQU   ACBLENG                                                  02408000
ACBAMBL  EQU   ACBCOMN+4                                                02409000
ACBJWA   EQU   ACBAMBL                                                  02410000
ACBMACRF EQU   ACBCOMN+12                                               02411000
ACBMACR1 EQU   ACBMACRF                                                 02412000
ACBADR   EQU   ACBMACR1                                                 02413000
ACBCNV   EQU   ACBMACR1                                                 02414000
ACBMACR2 EQU   ACBMACRF+1                                               02415000
ACBBUFPL EQU   ACBCOMN+20                                               02416000
ACBMACR3 EQU   ACBBUFPL                                                 02417000
ACBRECFM EQU   ACBCOMN+24                                               02418000
ACBCCTYP EQU   ACBCOMN+25                                               02419000
ACBOPT   EQU   ACBCOMN+26                                               02420000
ACBDSORG EQU   ACBOPT                                                   02421000
ACBCROPS EQU   ACBDSORG                                                 02422000
ACBDVIND EQU   ACBDSORG                                                 02423000
ACBEXLST EQU   ACBCOMN+36                                               02424000
ACBDDNM  EQU   ACBCOMN+40                                               02425000
ACBAMETH EQU   ACBDDNM+3                                                02426000
ACBOFLGS EQU   ACBCOMN+48                                               02427000
ACBEXFG  EQU   ACBOFLGS                                                 02428000
ACBIOSFG EQU   ACBOFLGS                                                 02429000
ACBINFLG EQU   ACBCOMN+50                                               02430000
ACBINFL1 EQU   ACBINFLG                                                 02431000
ACBVVIC  EQU   ACBINFL1                                                 02432000
ACBINFL2 EQU   ACBINFLG+1                                               02433000
ACBUJFCB EQU   ACBCOMN+52                                               02434000
ACBBLKSZ EQU   ACBCOMN+60                                               02435000
IDAAMB   EQU   0                                                        02436000
AMBBUFC  EQU   IDAAMB+8                                                 02437000
AMBDSB   EQU   IDAAMB+20                                                02438000
AMBEOVR  EQU   IDAAMB+24                                                02439000
AMBFLG0  EQU   AMBEOVR                                                  02440000
AMBFLG1  EQU   IDAAMB+25                                                02441000
AMBSPEED EQU   AMBFLG1                                                  02442000
AMBDSORG EQU   IDAAMB+26                                                02443000
AMBIOBAD EQU   IDAAMB+28                                                02444000
AMBINFL  EQU   IDAAMB+42                                                02445000
AMBDEBPT EQU   IDAAMB+44                                                02446000
AMBOFLGS EQU   IDAAMB+48                                                02447000
AMBFLG2  EQU   IDAAMB+49                                                02448000
AMBEDB   EQU   IDAAMB+52                                                02449000
AMBEOVPT EQU   IDAAMB+56                                                02450000
AMBIWA   EQU   IDAAMB+64                                                02451000
AMBCSWD1 EQU   IDAAMB+84                                                02452000
AMBAFLG  EQU   AMBCSWD1                                                 02453000
AMBLSR   EQU   AMBAFLG                                                  02454000
AMBGSR   EQU   AMBAFLG                                                  02455000
IDAAMBL  EQU   0                                                        02456000
AMBLEOV  EQU   IDAAMBL+12                                               02457000
AMBLEFLG EQU   AMBLEOV                                                  02458000
AMBLDDNM EQU   IDAAMBL+16                                               02459000
AMBLIDF  EQU   AMBLDDNM                                                 02460000
AMBLQ    EQU   AMBLIDF+7                                                02461000
AMBLVC   EQU   IDAAMBL+28                                               02462000
AMBLTYPE EQU   IDAAMBL+30                                               02463000
AMBLQ2   EQU   IDAAMBL+31                                               02464000
AMBLSHAR EQU   IDAAMBL+33                                               02465000
AMBLFLG1 EQU   IDAAMBL+35                                               02466000
AMBLVVIC EQU   AMBLFLG1                                                 02467000
AMBLFLG2 EQU   IDAAMBL+36                                               02468000
AMBLDTA  EQU   IDAAMBL+52                                               02469000
AMBLIX   EQU   IDAAMBL+56                                               02470000
IDAAMDSB EQU   0                                                        02471000
AMDATTR  EQU   IDAAMDSB+1                                               02472000
AMDRRDS  EQU   AMDATTR                                                  02473000
AMDNEST  EQU   IDAAMDSB+4                                               02474000
AMDKEYLN EQU   IDAAMDSB+8                                               02475000
AMDCIPCA EQU   IDAAMDSB+12                                              02476000
AMDCINV  EQU   IDAAMDSB+20                                              02477000
AMDLRECL EQU   IDAAMDSB+24                                              02478000
AMDHLRBA EQU   IDAAMDSB+28                                              02479000
AMDSSRBA EQU   IDAAMDSB+32                                              02480000
AMDPARDB EQU   IDAAMDSB+36                                              02481000
AMDATTR3 EQU   IDAAMDSB+40                                              02482000
AMDSTAT  EQU   IDAAMDSB+48                                              02483000
IDAPLHDR EQU   0                                                        02484000
IDAPLH   EQU   0                                                        02485000
PLHFLG1  EQU   IDAPLH+2                                                 02486000
PLHASKBF EQU   PLHFLG1                                                  02487000
PLHRDEXC EQU   PLHFLG1                                                  02488000
PLHSR    EQU   PLHFLG1                                                  02489000
PLHFLG2  EQU   IDAPLH+3                                                 02490000
PLHEFLGS EQU   IDAPLH+4                                                 02491000
PLHFLG3  EQU   IDAPLH+6                                                 02492000
PLHRAHD  EQU   PLHFLG3                                                  02493000
PLHRVRS  EQU   PLHFLG3                                                  02494000
PLHAFLGS EQU   IDAPLH+7                                                 02495000
PLHRMIN  EQU   IDAPLH+13                                                02496000
PLHFRCNT EQU   IDAPLH+14                                                02497000
PLHBFRNO EQU   IDAPLH+15                                                02498000
PLHCRBA  EQU   IDAPLH+28                                                02499000
PLHJORBA EQU   PLHCRBA                                                  02500000
PLHJCODE EQU   IDAPLH+40                                                02501000
PLHRSCS  EQU   IDAPLH+43                                                02502000
PLHBUFHD EQU   PLHRSCS                                                  02503000
PLHARDB  EQU   IDAPLH+44                                                02504000
PLHDBUFC EQU   IDAPLH+52                                                02505000
PLHNBUFC EQU   IDAPLH+56                                                02506000
PLHDIOB  EQU   IDAPLH+76                                                02507000
PLHIIOB  EQU   PLHDIOB                                                  02508000
PLHRETO  EQU   IDAPLH+116                                               02509000
PLHRET1  EQU   IDAPLH+120                                               02510000
PLHEOVPT EQU   IDAPLH+180                                               02511000
PLHNRBA  EQU   IDAPLH+184                                               02512000
PLHIBUFC EQU   IDAPLH+188                                               02513000
PLHRBUFC EQU   IDAPLH+192                                               02514000
PLHIXSPL EQU   IDAPLH+200                                               02515000
PLHSSRBA EQU   PLHIXSPL                                                 02516000
PLHWAX   EQU   IDAPLH+232                                               02517000
PLHKEYPT EQU   IDAPLH+248                                               02518000
PLHTMRPL EQU   IDAPLH+265                                               02519000
PLHEND   EQU   IDAPLH+280                                               02520000
PLHKEY   EQU   0                                                        02521000
PLHPDL   EQU   0                                                        02522000
PLHPDLE  EQU   0                                                        02523000
PLHRRN   EQU   0                                                        02524000
IDAIXSPL EQU   PLHIXSPL                                                 02525000
IXSBFLG  EQU   IDAIXSPL+17                                              02526000
IXSHEP   EQU   IDAIXSPL+20                                              02527000
IXSSEP   EQU   IDAIXSPL+24                                              02528000
IXSLEP   EQU   IDAIXSPL+28                                              02529000
PLHEXTEN EQU   PLHEND                                                   02530000
PLHBMWRK EQU   PLHEXTEN+5                                               02531000
BUFCRSC1 EQU   BUFCAVL                                                  02532000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02533000
PLHBMSV5 EQU   PLHEXTEN+24                                              02534000
PLHBMSV4 EQU   PLHEXTEN+20                                              02535000
PLHBMSV3 EQU   PLHEXTEN+16                                              02536000
PLHBMSV2 EQU   PLHEXTEN+12                                              02537000
PLHBMSV1 EQU   PLHEXTEN+8                                               02538000
PLHRDCNT EQU   PLHEXTEN+6                                               02539000
PLHBMSOV EQU   PLHBMWRK                                                 02540000
PLHBEUC  EQU   PLHBMWRK                                                 02541000
PLHBMRDF EQU   PLHBMWRK                                                 02542000
@NM00069 EQU   PLHEXTEN+4                                               02543000
PLHRESR1 EQU   PLHEXTEN                                                 02544000
IXSPEC   EQU   IDAIXSPL+19                                              02545000
IXSEKON  EQU   IDAIXSPL+18                                              02546000
@NM00002 EQU   IXSBFLG                                                  02547000
IXSLELV  EQU   IXSBFLG                                                  02548000
IXSSSRH  EQU   IXSBFLG                                                  02549000
IXSNOSR  EQU   IDAIXSPL+16                                              02550000
IXSKLEN  EQU   IDAIXSPL+14                                              02551000
IXSILN   EQU   IDAIXSPL+13                                              02552000
IXSTLN   EQU   IDAIXSPL+12                                              02553000
IXSARG   EQU   IDAIXSPL+8                                               02554000
IXSBUFC  EQU   IDAIXSPL+4                                               02555000
IXSSTRBA EQU   IDAIXSPL                                                 02556000
PLHERRET EQU   IDAPLH+276                                               02557000
PLHASCB  EQU   IDAPLH+272                                               02558000
PLHECB   EQU   IDAPLH+268                                               02559000
@NM00068 EQU   IDAPLH+266                                               02560000
@NM00067 EQU   PLHTMRPL                                                 02561000
PLHTMIOB EQU   PLHTMRPL                                                 02562000
PLHTMINX EQU   PLHTMRPL                                                 02563000
PLHTMDTA EQU   PLHTMRPL                                                 02564000
PLHTMDIW EQU   PLHTMRPL                                                 02565000
PLHTMBUF EQU   PLHTMRPL                                                 02566000
PLHTERM  EQU   PLHTMRPL                                                 02567000
PLHDRMSK EQU   IDAPLH+264                                               02568000
PLHR13   EQU   IDAPLH+260                                               02569000
PLHPARM1 EQU   IDAPLH+256                                               02570000
PLHDRRSC EQU   IDAPLH+252                                               02571000
PLHSLRBA EQU   IDAPLH+244                                               02572000
PLHSRCSG EQU   IDAPLH+242                                               02573000
PLHNOSEG EQU   IDAPLH+240                                               02574000
PLHLLOR  EQU   IDAPLH+236                                               02575000
PLHXPLH  EQU   PLHWAX                                                   02576000
@NM00066 EQU   PLHIXSPL+8                                               02577000
PLHIXBFC EQU   PLHIXSPL+4                                               02578000
PLHHIREC EQU   PLHSSRBA                                                 02579000
PLHISPLP EQU   IDAPLH+196                                               02580000
PLHDDDD  EQU   PLHEOVPT                                                 02581000
PLHAR14  EQU   IDAPLH+176                                               02582000
@NM00065 EQU   IDAPLH+172                                               02583000
@NM00064 EQU   IDAPLH+168                                               02584000
PLHASAVE EQU   IDAPLH+164                                               02585000
PLHRETOS EQU   IDAPLH+118                                               02586000
PLHCHAIN EQU   IDAPLH+112                                               02587000
PLHAMB   EQU   IDAPLH+108                                               02588000
PLHSAVE6 EQU   IDAPLH+104                                               02589000
PLHSAVE5 EQU   IDAPLH+100                                               02590000
PLHSAVE4 EQU   IDAPLH+96                                                02591000
PLHSAVE3 EQU   IDAPLH+92                                                02592000
PLHSAVE2 EQU   IDAPLH+88                                                02593000
PLHSAVE1 EQU   IDAPLH+84                                                02594000
PLHARET  EQU   IDAPLH+80                                                02595000
PLHSRSID EQU   IDAPLH+74                                                02596000
PLHRDFC  EQU   IDAPLH+72                                                02597000
PLHRDFP  EQU   IDAPLH+68                                                02598000
PLHFSP   EQU   IDAPLH+64                                                02599000
PLHRECP  EQU   IDAPLH+60                                                02600000
PLHLRECL EQU   IDAPLH+48                                                02601000
@NM00063 EQU   PLHRSCS                                                  02602000
PLHDBPER EQU   PLHRSCS                                                  02603000
PLHDSERR EQU   PLHRSCS                                                  02604000
PLHASYER EQU   PLHRSCS                                                  02605000
@NM00062 EQU   PLHRSCS                                                  02606000
PLHINEOV EQU   PLHRSCS                                                  02607000
PLHEOVR  EQU   IDAPLH+42                                                02608000
PLHRCODE EQU   IDAPLH+41                                                02609000
PLHUCODE EQU   PLHJCODE                                                 02610000
PLHJNRBA EQU   IDAPLH+36                                                02611000
PLHJRNLL EQU   IDAPLH+32                                                02612000
PLHUPECB EQU   PLHJORBA                                                 02613000
PLHDSIDA EQU   IDAPLH+24                                                02614000
PLHCRPL  EQU   IDAPLH+20                                                02615000
PLHMRPL  EQU   IDAPLH+16                                                02616000
PLHDSTYP EQU   IDAPLH+12                                                02617000
PLHACB   EQU   IDAPLH+8                                                 02618000
PLHRAE   EQU   PLHAFLGS                                                 02619000
PLHRABWD EQU   PLHAFLGS                                                 02620000
PLHIOSID EQU   PLHAFLGS                                                 02621000
PLHDBDC  EQU   PLHAFLGS                                                 02622000
PLHVAMB  EQU   PLHAFLGS                                                 02623000
PLHIOSRQ EQU   PLHAFLGS                                                 02624000
PLHDRLM  EQU   PLHAFLGS                                                 02625000
PLHEOVDF EQU   PLHFLG3                                                  02626000
PLHBWD   EQU   PLHFLG3                                                  02627000
PLHSLVLD EQU   PLHFLG3                                                  02628000
PLHSRBSG EQU   PLHFLG3                                                  02629000
@NM00061 EQU   PLHEFLGS+1                                               02630000
PLHRSTRT EQU   PLHEFLGS+1                                               02631000
PLHDSCAN EQU   PLHEFLGS                                                 02632000
PLHINVAL EQU   PLHEFLGS                                                 02633000
PLHEODX  EQU   PLHEFLGS                                                 02634000
PLHNOADV EQU   PLHEFLGS                                                 02635000
PLHSRINV EQU   PLHEFLGS                                                 02636000
PLHSKPER EQU   PLHEFLGS                                                 02637000
PLH1ST   EQU   PLHEFLGS                                                 02638000
PLHNOSPC EQU   PLHEFLGS                                                 02639000
PLHIWAIT EQU   PLHFLG2                                                  02640000
PLHSVADV EQU   PLHFLG2                                                  02641000
PLHCIINS EQU   PLHFLG2                                                  02642000
PLHKRE   EQU   PLHFLG2                                                  02643000
PLHADDTE EQU   PLHFLG2                                                  02644000
PLHKEYMD EQU   PLHFLG2                                                  02645000
PLHSQINS EQU   PLHFLG2                                                  02646000
PLHUPD   EQU   PLHFLG2                                                  02647000
PLHDRPND EQU   PLHFLG1                                                  02648000
PLHASYRQ EQU   PLHFLG1                                                  02649000
PLHSSR   EQU   PLHFLG1                                                  02650000
PLHENDRQ EQU   PLHFLG1                                                  02651000
PLHEOVW  EQU   PLHFLG1                                                  02652000
PLHATV   EQU   IDAPLH+1                                                 02653000
PLHAVL   EQU   IDAPLH                                                   02654000
PLHIOSDQ EQU   IDAPLHDR+12                                              02655000
PLHDRCUR EQU   IDAPLHDR+10                                              02656000
PLHDRMAX EQU   IDAPLHDR+8                                               02657000
PLHDRREQ EQU   IDAPLHDR+4                                               02658000
PLHELTH  EQU   IDAPLHDR+2                                               02659000
PLHCNT   EQU   IDAPLHDR+1                                               02660000
PLHID    EQU   IDAPLHDR                                                 02661000
AMDEXCP  EQU   AMDSTAT+44                                               02662000
AMDNCAS  EQU   AMDSTAT+40                                               02663000
AMDNCIS  EQU   AMDSTAT+36                                               02664000
AMDASPA  EQU   AMDSTAT+32                                               02665000
AMDRETR  EQU   AMDSTAT+28                                               02666000
AMDUPR   EQU   AMDSTAT+24                                               02667000
AMDIREC  EQU   AMDSTAT+20                                               02668000
AMDDELR  EQU   AMDSTAT+16                                               02669000
AMDNLR   EQU   AMDSTAT+12                                               02670000
AMDNEXT  EQU   AMDSTAT+10                                               02671000
AMDNIL   EQU   AMDSTAT+8                                                02672000
AMDSTSP  EQU   AMDSTAT                                                  02673000
@NM00060 EQU   IDAAMDSB+41                                              02674000
@NM00059 EQU   AMDATTR3                                                 02675000
AMDLM    EQU   AMDATTR3                                                 02676000
AMDWAIT  EQU   AMDATTR3                                                 02677000
AMDBIND  EQU   AMDATTR3                                                 02678000
AMDFAULT EQU   AMDATTR3                                                 02679000
AMDUNQ   EQU   AMDATTR3                                                 02680000
AMDMAXRR EQU   AMDSSRBA                                                 02681000
AMDNSLOT EQU   AMDHLRBA                                                 02682000
AMDFSCI  EQU   IDAAMDSB+16                                              02683000
AMDFSCA  EQU   IDAAMDSB+14                                              02684000
AMDPCTCI EQU   IDAAMDSB+11                                              02685000
AMDPCTCA EQU   IDAAMDSB+10                                              02686000
AMDRKP   EQU   IDAAMDSB+6                                               02687000
AMDAXRKP EQU   AMDNEST                                                  02688000
AMDLEN   EQU   IDAAMDSB+2                                               02689000
AMDSPAN  EQU   AMDATTR                                                  02690000
AMDRANGE EQU   AMDATTR                                                  02691000
AMDORDER EQU   AMDATTR                                                  02692000
AMDREPL  EQU   AMDATTR                                                  02693000
AMDSDT   EQU   AMDATTR                                                  02694000
AMDWCK   EQU   AMDATTR                                                  02695000
AMDDST   EQU   AMDATTR                                                  02696000
AMDSBID  EQU   IDAAMDSB                                                 02697000
AMBLCMB  EQU   IDAAMBL+64                                               02698000
AMBLBIB  EQU   IDAAMBL+60                                               02699000
AMBLMIDS EQU   IDAAMBL+42                                               02700000
AMBLNIDS EQU   IDAAMBL+41                                               02701000
@NM00058 EQU   IDAAMBL+40                                               02702000
AMBLNUM  EQU   IDAAMBL+38                                               02703000
AMBLNST  EQU   IDAAMBL+37                                               02704000
@NM00057 EQU   AMBLFLG2                                                 02705000
AMBLSTAG EQU   AMBLFLG2                                                 02706000
@NM00056 EQU   AMBLFLG2                                                 02707000
AMBLDUMY EQU   AMBLFLG1                                                 02708000
AMBLCAT  EQU   AMBLFLG1                                                 02709000
AMBLUCRA EQU   AMBLFLG1                                                 02710000
AMBLSCRA EQU   AMBLFLG1                                                 02711000
AMBLSDS  EQU   AMBLVVIC                                                 02712000
AMBLUPD  EQU   AMBLFLG1                                                 02713000
AMBLCINV EQU   AMBLFLG1                                                 02714000
AMBLFULL EQU   AMBLFLG1                                                 02715000
AMBLLEN  EQU   IDAAMBL+34                                               02716000
@NM00055 EQU   AMBLSHAR                                                 02717000
AMBLWRIT EQU   AMBLSHAR                                                 02718000
AMBLCATO EQU   AMBLSHAR                                                 02719000
AMBLPRIM EQU   AMBLSHAR                                                 02720000
AMBLID   EQU   IDAAMBL+32                                               02721000
@NM00054 EQU   AMBLQ2                                                   02722000
AMBLCBIC EQU   AMBLQ2                                                   02723000
@NM00053 EQU   AMBLTYPE                                                 02724000
AMBLFIX  EQU   AMBLTYPE                                                 02725000
AMBLBASE EQU   AMBLTYPE                                                 02726000
AMBLAIX  EQU   AMBLTYPE                                                 02727000
AMBLUPGR EQU   AMBLTYPE                                                 02728000
AMBLPATH EQU   AMBLTYPE                                                 02729000
AMBLENO  EQU   AMBLVC+1                                                 02730000
AMBLVRT  EQU   AMBLVC                                                   02731000
AMBLXPT  EQU   IDAAMBL+24                                               02732000
AMBLDFR  EQU   AMBLQ                                                    02733000
AMBLESDS EQU   AMBLQ                                                    02734000
AMBLKSDS EQU   AMBLQ                                                    02735000
AMBLUBF  EQU   AMBLQ                                                    02736000
AMBLFSTP EQU   AMBLQ                                                    02737000
AMBLLSR  EQU   AMBLQ                                                    02738000
AMBLGSR  EQU   AMBLQ                                                    02739000
AMBLDDC  EQU   AMBLQ                                                    02740000
AMBLDCI  EQU   AMBLIDF+4                                                02741000
AMBLCACB EQU   AMBLIDF                                                  02742000
@NM00052 EQU   AMBLEOV+2                                                02743000
AMBLCOMP EQU   AMBLEOV+1                                                02744000
AMBLESET EQU   AMBLEFLG                                                 02745000
AMBLWAIT EQU   AMBLEFLG                                                 02746000
AMBLACB  EQU   IDAAMBL+8                                                02747000
AMBLSCHN EQU   IDAAMBL+4                                                02748000
AMBLPCHN EQU   IDAAMBL                                                  02749000
AMBTRACE EQU   IDAAMB+120                                               02750000
AMBVIOT  EQU   IDAAMB+116                                               02751000
AMBSZCP  EQU   IDAAMB+114                                               02752000
AMBSZFW  EQU   IDAAMB+112                                               02753000
AMBSZWR  EQU   IDAAMB+110                                               02754000
AMBSZRD  EQU   IDAAMB+108                                               02755000
AMBEXEX  EQU   IDAAMB+100                                               02756000
AMBWSHD  EQU   IDAAMB+96                                                02757000
AMBCPA   EQU   IDAAMB+92                                                02758000
AMBBM2SH EQU   IDAAMB+88                                                02759000
AMBRDCNT EQU   AMBCSWD1+2                                               02760000
@NM00051 EQU   AMBCSWD1+1                                               02761000
@NM00050 EQU   AMBAFLG                                                  02762000
AMBCFX   EQU   AMBAFLG                                                  02763000
AMBSIS   EQU   AMBAFLG                                                  02764000
AMBDFR   EQU   AMBAFLG                                                  02765000
AMBICI   EQU   AMBAFLG                                                  02766000
@NM00049 EQU   AMBAFLG                                                  02767000
AMBUPLH  EQU   IDAAMB+80                                                02768000
AMBPAMBL EQU   IDAAMB+76                                                02769000
AMBPIXP  EQU   IDAAMB+72                                                02770000
@NM00048 EQU   IDAAMB+68                                                02771000
AMBWKA   EQU   IDAAMB+60                                                02772000
AMBAMBXN EQU   AMBEOVPT                                                 02773000
AMBRPT   EQU   IDAAMB+50                                                02774000
AMBPUG   EQU   AMBFLG2                                                  02775000
AMBBUSY  EQU   AMBOFLGS                                                 02776000
AMBEXFG  EQU   AMBOFLGS                                                 02777000
@NM00047 EQU   AMBOFLGS                                                 02778000
AMBOPEN  EQU   AMBOFLGS                                                 02779000
@NM00046 EQU   AMBOFLGS                                                 02780000
AMBDEBAD EQU   AMBDEBPT+1                                               02781000
AMBIFLGS EQU   AMBDEBPT                                                 02782000
AMBAMETH EQU   IDAAMB+43                                                02783000
AMBSDS   EQU   AMBINFL                                                  02784000
AMBUPX   EQU   AMBINFL                                                  02785000
AMBUCRA  EQU   AMBINFL                                                  02786000
AMBSCRA  EQU   AMBINFL                                                  02787000
AMBCAT   EQU   AMBINFL                                                  02788000
@NM00045 EQU   AMBINFL                                                  02789000
@NM00044 EQU   AMBINFL                                                  02790000
AMBTIOT  EQU   IDAAMB+40                                                02791000
@NM00043 EQU   IDAAMB+38                                                02792000
AMBDDSN  EQU   IDAAMB+35                                                02793000
AMBCDSN  EQU   IDAAMB+32                                                02794000
AMBIOMB  EQU   AMBIOBAD                                                 02795000
@NM00042 EQU   AMBDSORG+1                                               02796000
AMBDORGA EQU   AMBDSORG+1                                               02797000
@NM00041 EQU   AMBDSORG                                                 02798000
AMBINBUF EQU   AMBFLG1                                                  02799000
AMBJRN   EQU   AMBFLG1                                                  02800000
AMBUBF   EQU   AMBFLG1                                                  02801000
AMBPCAT  EQU   AMBFLG1                                                  02802000
AMBMCAT  EQU   AMBFLG1                                                  02803000
AMBTYPE  EQU   AMBFLG1                                                  02804000
AMBCREAT EQU   AMBFLG1                                                  02805000
@NM00040 EQU   AMBFLG0                                                  02806000
AMBSWSP  EQU   AMBFLG0                                                  02807000
AMBPSDS  EQU   AMBFLG0                                                  02808000
AMBCACB  EQU   IDAAMB+16                                                02809000
AMBPH    EQU   IDAAMB+12                                                02810000
AMBLINK  EQU   IDAAMB+4                                                 02811000
AMBLEN   EQU   IDAAMB+2                                                 02812000
AMBRSC   EQU   IDAAMB+1                                                 02813000
AMBID    EQU   IDAAMB                                                   02814000
ACBAPID  EQU   ACBCOMN+72                                               02815000
ACBCBMWA EQU   ACBCOMN+68                                               02816000
ACBUAPTR EQU   ACBCOMN+64                                               02817000
ACBLRECL EQU   ACBCOMN+62                                               02818000
ACBMSGLN EQU   ACBBLKSZ                                                 02819000
ACBBUFSP EQU   ACBCOMN+56                                               02820000
@NM00039 EQU   ACBUJFCB+1                                               02821000
ACBOPTN  EQU   ACBUJFCB                                                 02822000
@NM00038 EQU   ACBINFL2                                                 02823000
ACBCBIC  EQU   ACBINFL2                                                 02824000
@NM00037 EQU   ACBINFL2                                                 02825000
ACBBYPSS EQU   ACBINFL1                                                 02826000
ACBSDS   EQU   ACBVVIC                                                  02827000
ACBUCRA  EQU   ACBINFL1                                                 02828000
ACBSCRA  EQU   ACBINFL1                                                 02829000
ACBCAT   EQU   ACBINFL1                                                 02830000
ACBIJRQE EQU   ACBINFL1                                                 02831000
ACBJEPS  EQU   ACBINFL1                                                 02832000
@NM00036 EQU   ACBINFL1                                                 02833000
ACBERFLG EQU   ACBCOMN+49                                               02834000
ACBBUSY  EQU   ACBIOSFG                                                 02835000
ACBLOCK  EQU   ACBEXFG                                                  02836000
@NM00035 EQU   ACBOFLGS                                                 02837000
ACBDSERR EQU   ACBOFLGS                                                 02838000
ACBOPEN  EQU   ACBOFLGS                                                 02839000
ACBEOV   EQU   ACBOFLGS                                                 02840000
@NM00034 EQU   ACBOFLGS                                                 02841000
ACBDEB   EQU   ACBDDNM+5                                                02842000
ACBERFL  EQU   ACBDDNM+4                                                02843000
ACBAM    EQU   ACBAMETH                                                 02844000
ACBINFL  EQU   ACBDDNM+2                                                02845000
ACBTIOT  EQU   ACBDDNM                                                  02846000
ACBUEL   EQU   ACBEXLST                                                 02847000
ACBPASSW EQU   ACBCOMN+32                                               02848000
ACBMSGAR EQU   ACBCOMN+28                                               02849000
@NM00033 EQU   ACBDSORG+1                                               02850000
ACBDORGA EQU   ACBDSORG+1                                               02851000
@NM00032 EQU   ACBDSORG                                                 02852000
ACBOPTJ  EQU   ACBDVIND                                                 02853000
ACBCRNRE EQU   ACBCROPS                                                 02854000
ACBCRNCK EQU   ACBCROPS                                                 02855000
ACBASA   EQU   ACBCCTYP                                                 02856000
@NM00031 EQU   ACBCCTYP                                                 02857000
ACBTRCID EQU   ACBCCTYP                                                 02858000
@NM00030 EQU   ACBRECFM                                                 02859000
ACBRECAF EQU   ACBRECFM                                                 02860000
ACBJBUF  EQU   ACBBUFPL+2                                               02861000
ACBMACR4 EQU   ACBBUFPL+1                                               02862000
@NM00029 EQU   ACBMACR3                                                 02863000
ACBNCFX  EQU   ACBMACR3                                                 02864000
ACBSIS   EQU   ACBMACR3                                                 02865000
ACBDFR   EQU   ACBMACR3                                                 02866000
ACBICI   EQU   ACBMACR3                                                 02867000
ACBGSR   EQU   ACBMACR3                                                 02868000
ACBLSR   EQU   ACBMACR3                                                 02869000
@NM00028 EQU   ACBMACR3                                                 02870000
ACBBUFNI EQU   ACBCOMN+18                                               02871000
ACBBUFND EQU   ACBCOMN+16                                               02872000
ACBSTRNO EQU   ACBCOMN+15                                               02873000
ACBBSTNO EQU   ACBCOMN+14                                               02874000
ACBAIX   EQU   ACBMACR2                                                 02875000
ACBDSN   EQU   ACBMACR2                                                 02876000
ACBRST   EQU   ACBMACR2                                                 02877000
ACBLOGON EQU   ACBMACR2                                                 02878000
ACBSKP   EQU   ACBMACR2                                                 02879000
@NM00027 EQU   ACBMACR2                                                 02880000
ACBUBF   EQU   ACBMACR1                                                 02881000
ACBOUT   EQU   ACBMACR1                                                 02882000
ACBIN    EQU   ACBMACR1                                                 02883000
ACBDIR   EQU   ACBMACR1                                                 02884000
ACBSEQ   EQU   ACBMACR1                                                 02885000
ACBBLK   EQU   ACBCNV                                                   02886000
ACBADD   EQU   ACBADR                                                   02887000
ACBKEY   EQU   ACBMACR1                                                 02888000
ACBINRTN EQU   ACBCOMN+8                                                02889000
ACBIBCT  EQU   ACBJWA                                                   02890000
ACBLEN2  EQU   ACBLENG2                                                 02891000
ACBSTYP  EQU   ACBCOMN+1                                                02892000
ACBID    EQU   ACBCOMN                                                  02893000
BUFCEND  EQU   IDABUFC+64                                               02894000
BUFCUCDN EQU   IDABUFC+60                                               02895000
BUFCUCUP EQU   IDABUFC+56                                               02896000
BUFCMDBT EQU   IDABUFC+52                                               02897000
BUFXORBA EQU   IDABUFC+44                                               02898000
BUFXIRBA EQU   IDABUFC+40                                               02899000
BUFCIDXL EQU   IDABUFC+36                                               02900000
BUFCDSPC EQU   IDABUFC+32                                               02901000
BUFCWLEN EQU   BUFCINV                                                  02902000
BUFCCPA  EQU   IDABUFC+16                                               02903000
BUFCORBA EQU   IDABUFC+12                                               02904000
BUFCAMB  EQU   BUFCPLH                                                  02905000
@NM00026 EQU   BUFCFLG2                                                 02906000
BUFCEOD  EQU   BUFCFLG2                                                 02907000
BUFCBSYW EQU   BUFCFLG2                                                 02908000
BUFCBSYR EQU   BUFCFLG2                                                 02909000
BUFCNLAS EQU   BUFCFLG2                                                 02910000
BUFCXDDR EQU   BUFCFLG2                                                 02911000
BUFCFIX  EQU   BUFCIOFL                                                 02912000
BUFCPFCP EQU   BUFCIOFL                                                 02913000
BUFCWC   EQU   BUFCIOFL                                                 02914000
BUFCREAL EQU   BUFCIOFL                                                 02915000
BUFCFMT  EQU   BUFCIOFL                                                 02916000
BUFCEPT  EQU   BUFCFLG1                                                 02917000
BUFCEXC  EQU   BUFCFLG1                                                 02918000
BUFCVAL  EQU   BUFCFLG1                                                 02919000
BUFCSEG  EQU   BUFCFLG1                                                 02920000
BUFCUPG  EQU   BUFCFLG1                                                 02921000
BUFCUCNT EQU   BUFCAVL                                                  02922000
@NM00025 EQU   IDABUFDR+16                                              02923000
@NM00024 EQU   BUFDRFLG                                                 02924000
BUFDRPFN EQU   IDABUFDR+8                                               02925000
BUFDRPFB EQU   IDABUFDR+4                                               02926000
BUFDRLEN EQU   IDABUFDR+2                                               02927000
BUFDRNO  EQU   IDABUFDR+1                                               02928000
BUFDRID  EQU   IDABUFDR                                                 02929000
RPLERMSA EQU   RPLCOMN+72                                               02930000
RPLEMLEN EQU   RPLCOMN+70                                               02931000
RPLACTIV EQU   RPLCOMN+69                                               02932000
RPLBRANC EQU   RPLEXTD1                                                 02933000
RPLNIB   EQU   RPLEXTD1                                                 02934000
@NM00023 EQU   RPLEXTD1                                                 02935000
RPLEXIT  EQU   RPLEXTD1                                                 02936000
RPLNEXIT EQU   RPLEXTD1                                                 02937000
RPLEXSCH EQU   RPLEXTD1                                                 02938000
RPLDDDD  EQU   RPLRBAR+4                                                02939000
@NM00022 EQU   RPLRBAR+3                                                02940000
@NM00021 EQU   RPLAIXID                                                 02941000
RPLAXPKP EQU   RPLAIXID                                                 02942000
RPLAIXPC EQU   RPLRBAR                                                  02943000
RPLRSV88 EQU   RPLOPT8                                                  02944000
RPLUNCON EQU   RPLOPT8                                                  02945000
RPLACTV  EQU   RPLOPT8                                                  02946000
RPLSESS  EQU   RPLOPT8                                                  02947000
RPLPEND  EQU   RPLOPT8                                                  02948000
RPLODPRM EQU   RPLOPT8                                                  02949000
RPLODACP EQU   RPLOPT8                                                  02950000
RPLODACQ EQU   RPLOPT8                                                  02951000
RPLRSV78 EQU   RPLOPT7                                                  02952000
RPLTCRNO EQU   RPLOPT7                                                  02953000
RPLRLSOP EQU   RPLOPT7                                                  02954000
RPLTPOST EQU   RPLOPT7                                                  02955000
RPLQOPT  EQU   RPLOPT7                                                  02956000
RPLCNIMM EQU   RPLCNOPT                                                 02957000
RPLCNANY EQU   RPLCNOPT                                                 02958000
RPLCNALL EQU   RPLCNOPT                                                 02959000
RPLRSV68 EQU   RPLOPT6                                                  02960000
RPLRSV67 EQU   RPLOPT6                                                  02961000
RPLLOCK  EQU   RPLOPT6                                                  02962000
RPLNCOND EQU   RPLOPT6                                                  02963000
RPLCOND  EQU   RPLOPT6                                                  02964000
RPLEOT   EQU   RPLUNTYP                                                 02965000
RPLEOM   EQU   RPLUNTYP                                                 02966000
RPLEOB   EQU   RPLUNTYP                                                 02967000
RPLWROPT EQU   RPLOPT5                                                  02968000
RPLNODE  EQU   RPLOPT5                                                  02969000
RPLERACE EQU   RPLWRTYP                                                 02970000
RPLEAU   EQU   RPLWRTYP                                                 02971000
RPLNERAS EQU   RPLWRTYP                                                 02972000
RPLPSOPT EQU   RPLOPT5                                                  02973000
@NM00020 EQU   RPLOPT5                                                  02974000
RPLDLGIN EQU   RPLOPT5                                                  02975000
RPLBUFL  EQU   RPLCOMN+52                                               02976000
RPLRLEN  EQU   RPLCOMN+48                                               02977000
RPLCHAIN EQU   RPLNXTRP                                                 02978000
@NM00019 EQU   RPLOPT4                                                  02979000
RPLMKFRM EQU   RPLOPT4                                                  02980000
RPLENDTR EQU   RPLOPT4                                                  02981000
RPLALIGN EQU   RPLOPT3                                                  02982000
RPLFMT   EQU   RPLOPT3                                                  02983000
RPLFLD   EQU   RPLOPT3                                                  02984000
RPLVFY   EQU   RPLOPT3                                                  02985000
RPLBLK   EQU   RPLOPT3                                                  02986000
RPLSFORM EQU   RPLOPT3                                                  02987000
RPLEODS  EQU   RPLOPT3                                                  02988000
RPLNSP   EQU   RPLOPT2                                                  02989000
RPLWAITX EQU   RPLOPT2                                                  02990000
RPLLRD   EQU   RPLOPT2                                                  02991000
RPLCNV   EQU   RPLOPT2                                                  02992000
RPLADD   EQU   RPLADR                                                   02993000
RPLECBIN EQU   RPLECBSW                                                 02994000
RPLGEN   EQU   RPLOPT1                                                  02995000
RPLKGE   EQU   RPLOPT1                                                  02996000
RPLSKP   EQU   RPLOPT1                                                  02997000
RPLSEQ   EQU   RPLOPT1                                                  02998000
RPLDIR   EQU   RPLOPT1                                                  02999000
RPLLOC   EQU   RPLOPT1                                                  03000000
RPLDAF   EQU   RPLARG+2                                                 03001000
RPLSAF   EQU   RPLARG                                                   03002000
RPLAREA  EQU   RPLCOMN+32                                               03003000
RPLTCBPT EQU   RPLCOMN+28                                               03004000
RPLCCHAR EQU   RPLCOMN+20                                               03005000
RPLSTRID EQU   RPLCOMN+18                                               03006000
RPLKEYL  EQU   RPLKEYLE                                                 03007000
RPLRDSOH EQU   RPLFDB3                                                  03008000
RPLRLG   EQU   RPLFDB3                                                  03009000
RPLLGFRC EQU   RPLFDB3                                                  03010000
RPLREOT  EQU   RPLFDB3                                                  03011000
RPLREOM  EQU   RPLFDB3                                                  03012000
RPLREOB  EQU   RPLFDB3                                                  03013000
RPLSV32  EQU   RPLFDB3                                                  03014000
RPLUINPT EQU   RPLFDB3                                                  03015000
RPLSTSAV EQU   RPLFDB2                                                  03016000
RPLCUERR EQU   RPLFDB2                                                  03017000
RPLDLGFL EQU   RPLFDB2                                                  03018000
RPLIOERR EQU   RPLFDB2                                                  03019000
RPLDVUNS EQU   RPLFDB2                                                  03020000
RPLATND  EQU   RPLFDB2                                                  03021000
RPLRVID  EQU   RPLFDB2                                                  03022000
RPLERLK  EQU   RPLFDB2                                                  03023000
RPLSTAT  EQU   RPLFDBWD                                                 03024000
RPLPOST  EQU   RPLECB                                                   03025000
RPLWAIT  EQU   RPLECB                                                   03026000
RPLPLHPT EQU   RPLCOMN+4                                                03027000
RPLLEN2  EQU   RPLLEN                                                   03028000
RPLSTYP  EQU   RPLIDWD+1                                                03029000
RPLID    EQU   RPLIDWD                                                  03030000
LPMBSST  EQU   IDALPMB+28                                               03031000
LPMBEXT  EQU   IDALPMB+24                                               03032000
@NM00018 EQU   IDALPMB+22                                               03033000
LPMBLKTR EQU   IDALPMB+20                                               03034000
LPMTPC   EQU   IDALPMB+18                                               03035000
LPMTRKAU EQU   IDALPMB+16                                               03036000
LPMBLKSZ EQU   IDALPMB+12                                               03037000
LPMAUSZ  EQU   IDALPMB+4                                                03038000
LPMBLEN  EQU   IDALPMB+2                                                03039000
@NM00017 EQU   LPMBFLGS                                                 03040000
LPMBSSTH EQU   LPMBFLGS                                                 03041000
LPMBTOFL EQU   LPMBFLGS                                                 03042000
LPMSS    EQU   LPMBFLGS                                                 03043000
LPMREPL  EQU   LPMBFLGS                                                 03044000
LPMBRPS  EQU   LPMBFLGS                                                 03045000
LPMBID   EQU   IDALPMB                                                  03046000
EDBTKBAL EQU   IDAEDB+20                                                03047000
EDBHIRBA EQU   IDAEDB+16                                                03048000
EDBLORBA EQU   IDAEDB+12                                                03049000
EDBSTTRK EQU   IDAEDB+8                                                 03050000
EDBLPMBA EQU   IDAEDB+4                                                 03051000
EDBM     EQU   IDAEDB+3                                                 03052000
@NM00016 EQU   EDBFLG1                                                  03053000
EDBPSDS  EQU   EDBFLG1                                                  03054000
EDBTOFLW EQU   EDBFLG1                                                  03055000
EDBLKR   EQU   EDBFLG1                                                  03056000
@NM00015 EQU   IDAEDB                                                   03057000
EDBLEN   EQU   IDAEDBHD+2                                               03058000
EDBNO    EQU   IDAEDBHD+1                                               03059000
EDBID    EQU   IDAEDBHD                                                 03060000
@NM00014 EQU   IDADIWA+92                                               03061000
@NM00013 EQU   IDADIWA+88                                               03062000
@NM00012 EQU   IDADIWA+84                                               03063000
@NM00011 EQU   IDADIWA+80                                               03064000
@NM00010 EQU   IDADIWA+76                                               03065000
@NM00009 EQU   IDADIWA+72                                               03066000
@NM00008 EQU   IDADIWA+68                                               03067000
@NM00007 EQU   IDADIWA+64                                               03068000
@NM00006 EQU   IDADIWA+60                                               03069000
@NM00005 EQU   IDADIWA+56                                               03070000
DIWINRBA EQU   IDADIWA+52                                               03071000
DIWRKCT  EQU   IDADIWA+48                                               03072000
DIWSAVE5 EQU   DIWSAVE+16                                               03073000
DIWSAVE4 EQU   DIWSAVE+12                                               03074000
DIWSAVE3 EQU   DIWSAVE+8                                                03075000
DIWSAVE2 EQU   DIWSAVE+4                                                03076000
DIWSAVE1 EQU   DIWSAVE                                                  03077000
DIWSPLTP EQU   IDADIWA+24                                               03078000
DIWHRBA  EQU   IDADIWA+12                                               03079000
DIWLRBA  EQU   IDADIWA+8                                                03080000
@NM00004 EQU   IDADIWA+6                                                03081000
DIWFSPF  EQU   DIWFLG2                                                  03082000
DIW1ST   EQU   DIWFLG1                                                  03083000
DIWNOT1  EQU   DIWFLG1                                                  03084000
DIWSHIFT EQU   DIWFLG1                                                  03085000
DIWGSPC  EQU   DIWFLG1                                                  03086000
DIWEOKR  EQU   DIWFLG1                                                  03087000
DIWPFERR EQU   DIWFLG1                                                  03088000
DIWCISPL EQU   DIWFLG1                                                  03089000
DIWLEN   EQU   IDADIWA+2                                                03090000
DIWATV   EQU   IDADIWA+1                                                03091000
DIWID    EQU   IDADIWA                                                  03092000
ARDKEYS  EQU   IDAARDB+29                                               03093000
@NM00003 EQU   ARDPRF                                                   03094000
ARDPRFMT EQU   ARDPRF                                                   03095000
ARDPRSS  EQU   ARDPRF                                                   03096000
ARDRELNO EQU   IDAARDB+26                                               03097000
ARDVOLSR EQU   IDAARDB+20                                               03098000
ARDHKRBA EQU   IDAARDB+8                                                03099000
ARDLEN   EQU   IDAARDB+2                                                03100000
ARDUSED  EQU   ARDTYPE                                                  03101000
ARDUOVFL EQU   ARDTYPE                                                  03102000
ARDSS    EQU   ARDTYPE                                                  03103000
ARDHLI   EQU   ARDTYPE                                                  03104000
ARDKR    EQU   ARDTYPE                                                  03105000
ARDID    EQU   IDAARDB                                                  03106000
IXKEY    EQU   IDAIXK                                                   03107000
IBFLP1   EQU   IBFLP2                                                   03108000
IXHFSO   EQU   IDAIXH+18                                                03109000
IXHFLGS  EQU   IDAIXH+17                                                03110000
IXHLV    EQU   IDAIXH+16                                                03111000
IXHXX    EQU   IDAIXH+12                                                03112000
AMDATA   EQU   IDADATA                                                  03113000
RDFLL    EQU   IDARDF+1                                                 03114000
RDFEMPTY EQU   RDFRBYTE                                                 03115000
RDFREPL  EQU   RDFRBYTE                                                 03116000
RDF1ST   EQU   RDFSEG                                                   03117000
RDFNOT1  EQU   RDFSEG                                                   03118000
RDFCTNU  EQU   RDFRBYTE                                                 03119000
RDFTYPE  EQU   RDFRBYTE                                                 03120000
@NM00001 EQU   CIDFLL                                                   03121000
CIDFBUSY EQU   CIDFLL                                                   03122000
CIDFOSET EQU   IDACIDF                                                  03123000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03124000
@RF00222 EQU   @RC00218                                                 03125000
@RC00220 EQU   @RC00218                                                 03126000
BUSYHDR  EQU   @EL00001                                                 03127000
@RF00263 EQU   @EL00001                                                 03128000
@RC00261 EQU   @EL00001                                                 03129000
@RF00303 EQU   @EL00003                                                 03130000
@RT00402 EQU   FINDX                                                    03131000
@RT00418 EQU   ADVNXT                                                   03132000
@RT00526 EQU   FINDX                                                    03133000
@RF00595 EQU   @RC00584                                                 03134000
@RT00606 EQU   FINDX                                                    03135000
@RC00663 EQU   @EL00005                                                 03136000
@RC00676 EQU   @EL00006                                                 03137000
@ENDDATA EQU   *                                                        03138000
         END   IDA019RW,(C'PLS1801',0701,78192)                         03139000
