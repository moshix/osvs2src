         TITLE 'IDA019RX - PATH ACCESS DRIVER                          *00001000
                        '                                               00002000
IDA019RX CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'IDA019RX  78.180'                                 0001 00009000
IDARXBD  DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00816-IDARXBD)                                    00013000
         ENTRY IDARXBD                                                  00014000
IDAGETWS DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00835-IDAGETWS)                                   00018000
         ENTRY IDAGETWS                                                 00019000
IDARELWS DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP01137-IDARELWS)                                   00023000
         ENTRY IDARELWS                                                 00024000
         DROP  @15                                                      00025000
@PROLOG  BALR  @11,0                                               0001 00026000
@PSTART  LA    @10,4095(,@11)                                      0001 00027000
         USING @PSTART,@11                                         0001 00028000
         USING @PSTART+4095,@10                                    0001 00029000
         AH    @15,4(,@15)                                         0001 00030000
         BR    @15                                                 0001 00031000
@EP00001 DS    0H                                                  0002 00032000
*                                                                  0177 00033000
*/********************************************************************/ 00034000
*/* ENTER MODULE                                                     */ 00035000
*/********************************************************************/ 00036000
*                                                                  0178 00037000
*   IF RWORK0^=RPLENDRE&            /* IF NOT ENDREQ                 */ 00038000
*       ((RPLSEQ=OFF&RPLSKP=OFF&RPLDIR=OFF)|/* IF ALL OFF            */ 00039000
*       (RPLSEQ=ON&RPLSKP=ON)|      /* IF TWO ON                     */ 00040000
*       (RPLSKP=ON&RPLDIR=ON)|      /* IF TWO ON                     */ 00041000
*       (RPLDIR=ON&RPLSEQ=ON)) THEN /* IF TWO ON                     */ 00042000
         CL    RWORK0,@CF00068                                     0178 00043000
         BE    @RF00178                                            0178 00044000
         TM    RPLSEQ(RRPL),B'01110000'                            0178 00045000
         BZ    @RT00178                                            0178 00046000
         TM    RPLSEQ(RRPL),B'00110000'                            0178 00047000
         BO    @RT00178                                            0178 00048000
         TM    RPLSKP(RRPL),B'01010000'                            0178 00049000
         BO    @RT00178                                            0178 00050000
         TM    RPLDIR(RRPL),B'01100000'                            0178 00051000
         BNO   @RF00178                                            0178 00052000
@RT00178 DS    0H                                                  0179 00053000
*     DO;                                                          0179 00054000
*       RPLERREG='08'X;             /* LOGICAL ERROR                 */ 00055000
         LA    @08,8                                               0180 00056000
         STC   @08,RPLERREG(,RRPL)                                 0180 00057000
*       RPLCMPON=RPLAIXER;          /* DETECTED IN AIX PROC          */ 00058000
         MVI   RPLCMPON(RRPL),X'02'                                0181 00059000
*       RPLERRCD=RPLINVP;           /* INVALID PROCESS               */ 00060000
         MVI   RPLERRCD(RRPL),X'68'                                0182 00061000
*       RETURN CODE(RPLERREG);      /* EXIT MODULE                   */ 00062000
         LR    @15,@08                                             0183 00063000
@EL00001 DS    0H                                                  0183 00064000
@EF00001 DS    0H                                                  0183 00065000
@ER00001 BR    @14                                                 0183 00066000
*     END;                                                         0184 00067000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00068000
@RF00178 DS    0H                                                  0185 00069000
         IDASVR14                                                       00070000
*   IF(AMBLSR=ON|AMBGSR=ON)&        /* IF ANY SHARED RESOURCES       */ 00071000
*       PLHWAX=0 THEN               /* NEED TO BUILD WAX             */ 00072000
         TM    AMBLSR(RAMB),B'01100000'                            0186 00073000
         BZ    @RF00186                                            0186 00074000
         L     @08,PLHWAX(,RPLH)                                   0186 00075000
         LTR   @08,@08                                             0186 00076000
         BNZ   @RF00186                                            0186 00077000
*     DO;                                                          0187 00078000
*       IF RWORK0=RPLENDRE THEN     /* IF ENDREQ REQUEST             */ 00079000
         CL    RWORK0,@CF00068                                     0188 00080000
         BNE   @RF00188                                            0188 00081000
*         DO;                       /*                       @ZA19553*/ 00082000
*           GEN(IDARST14);          /* RESTORE RETURN ADDR   @ZA19553*/ 00083000
         IDARST14                                                       00084000
*           RETURN CODE(RPLERREG);  /* NOTHING TO BE DONE    @ZA19553*/ 00085000
         SLR   @15,@15                                             0191 00086000
         IC    @15,RPLERREG(,RRPL)                                 0191 00087000
         BR    @14                                                 0191 00088000
*         END;                      /*                       @ZA19553*/ 00089000
*                                                                  0192 00090000
*       /*************************************************************/ 00091000
*       /*                                                           */ 00092000
*       /* BUILD WAX AND INNER RPL FOR LSR OR GSR                    */ 00093000
*       /*                                                           */ 00094000
*       /*************************************************************/ 00095000
*                                                                  0193 00096000
*       RWORK5=LENGTH(IDAWAX)+LENGTH(IFGRPL);                      0193 00097000
@RF00188 LA    RWORK5,120                                          0193 00098000
*       RWORK1=RWORK5;              /* COPY LENGTH FOR IDAGETWS      */ 00099000
         LR    RWORK1,RWORK5                                       0194 00100000
*       RESPECIFY                                                  0195 00101000
*         R15 RESTRICTED;                                          0195 00102000
*       CALL GETWS;                 /* GET CORE FOR WAX & INNER RPL  */ 00103000
         BAL   @14,GETWS                                           0196 00104000
*       IF R15^=0 THEN              /* IF NO CORE                    */ 00105000
         LTR   R15,R15                                             0197 00106000
         BZ    @RF00197                                            0197 00107000
*         DO;                                                      0198 00108000
*           IF RPLERRCD=0 THEN      /* IF NO ERROR CODE              */ 00109000
         CLI   RPLERRCD(RRPL),0                                    0199 00110000
         BNE   @RF00199                                            0199 00111000
*             DO;                                                  0200 00112000
*               RPLERRCD=RPLNOVRT;  /* ERROR CODE FOR NO CORE        */ 00113000
         MVI   RPLERRCD(RRPL),X'28'                                0201 00114000
*               RPLERREG='08'X;     /* RETURN CODE FOR LOGICAL ERROR */ 00115000
         MVI   RPLERREG(RRPL),X'08'                                0202 00116000
*             END;                                                 0203 00117000
*           RPLCMPON=RPLAIXER;      /* ERROR WHILE PROCESSING AIX    */ 00118000
@RF00199 MVI   RPLCMPON(RRPL),X'02'                                0204 00119000
*           GEN(IDARST14);          /* RELOAD RETURN REGISTER        */ 00120000
         IDARST14                                                       00121000
*           RETURN CODE(RPLERREG);  /* TAKE EXIT WITH ERROR          */ 00122000
         SLR   @15,@15                                             0206 00123000
         IC    @15,RPLERREG(,RRPL)                                 0206 00124000
         BR    @14                                                 0206 00125000
*         END;                                                     0207 00126000
*       RESPECIFY                                                  0208 00127000
*         R15 UNRESTRICTED;                                        0208 00128000
@RF00197 DS    0H                                                  0209 00129000
*       CORE(1:RWORK5)=CORE(1:RWORK5)&&CORE(1:RWORK5);/* ZERO CORE   */ 00130000
         LR    @08,RWORK5                                          0209 00131000
         BCTR  @08,0                                               0209 00132000
         EX    @08,@SX01299                                        0209 00133000
*       RWORK5=RWORK1+LENGTH(IFGRPL);/* POINT TO IDAWAX              */ 00134000
         LA    RWORK5,76                                           0210 00135000
         ALR   RWORK5,RWORK1                                       0210 00136000
*       PLHWAX=RWORK5;              /* SET PTR TO WAX IN PLH         */ 00137000
         ST    RWORK5,PLHWAX(,RPLH)                                0211 00138000
*       WAXIRPL=RWORK1;             /* SET PTR TO INNER RPL IN WAX   */ 00139000
         ST    RWORK1,WAXIRPL(,RWORK5)                             0212 00140000
*       RWORK0=RPLREQ;              /* RESTORE REGISTER 0            */ 00141000
         SLR   RWORK0,RWORK0                                       0213 00142000
         IC    RWORK0,RPLREQ(,RRPL)                                0213 00143000
*     END;                                                         0214 00144000
*   ELSE                            /* IF NOT SHARED RESOURCES       */ 00145000
*     DO;                                                          0215 00146000
         B     @RC00186                                            0215 00147000
@RF00186 DS    0H                                                  0216 00148000
*       RWORK5=PLHWAX;              /* LOAD BASE FOR WAX             */ 00149000
         L     RWORK5,PLHWAX(,RPLH)                                0216 00150000
*       RWORK1=WAXIRPL;             /* LOAD PTR TO INNER RPL         */ 00151000
         L     RWORK1,WAXIRPL(,RWORK5)                             0217 00152000
*     END;                                                         0218 00153000
*   WAXURPL=ADDR(IFGRPL);           /* SAVE ADDR OF USER'S RPL       */ 00154000
@RC00186 ST    RRPL,WAXURPL(,RWORK5)                               0219 00155000
*   PLHCRPL=RWORK1;                 /* CURRENT RPL IS INNER RPL      */ 00156000
         ST    RWORK1,PLHCRPL(,RPLH)                               0220 00157000
*   IF RWORK0^=RPLENDRE THEN        /* IF NOT ENDREQ         @ZA29260*/ 00158000
         CL    RWORK0,@CF00068                                     0221 00159000
         BE    @RF00221                                            0221 00160000
*     DO;                           /*                       @ZA29260*/ 00161000
*       RWORK1->IFGRPL=RWORK1->IFGRPL&&RWORK1->IFGRPL;/* ZERO INNER     00162000
*                                      RPL                           */ 00163000
         XC    IFGRPL(76,RWORK1),IFGRPL(RWORK1)                    0223 00164000
*       RWORK1->RPLLEN=LENGTH(IFGRPL);/* SET RPL LENGTH              */ 00165000
         MVI   RPLLEN(RWORK1),X'4C'                                0224 00166000
*     END;                          /*                       @ZA29260*/ 00167000
*   IF RWORK0=RPLENDRE|             /* IF ENDREQ REQUEST, SKIP TEST  */ 00168000
*       (RPLKEY=ON&                 /* IF RPL IS FOR KEY PROCESSING  */ 00169000
*       RPLADR=OFF&                 /* IF ADR PROC NO ON             */ 00170000
*       RPLCNV=OFF) THEN            /* IF CNV BIT IS OFF             */ 00171000
@RF00221 CL    RWORK0,@CF00068                                     0226 00172000
         BE    @RT00226                                            0226 00173000
         TM    RPLKEY(RRPL),B'10000000'                            0226 00174000
         BNO   @RF00226                                            0226 00175000
         TM    RPLADR(RRPL),B'01100000'                            0226 00176000
         BNZ   @RF00226                                            0226 00177000
@RT00226 DS    0H                                                  0227 00178000
*     DO;                                                          0227 00179000
*                                                                  0227 00180000
*       /*************************************************************/ 00181000
*       /*                                                           */ 00182000
*       /* BRANCH VIA BRANCH TABLE                                   */ 00183000
*       /*                                                           */ 00184000
*       /*************************************************************/ 00185000
*                                                                  0228 00186000
*       CALL AIXROUT;               /* EXECUTE BRANCH TABLE          */ 00187000
         LR    @08,RWORK0                                          0228 00188000
         SLL   @08,2                                               0228 00189000
         L     @15,BRANCH(@08)                                     0228 00190000
         BALR  @14,@15                                             0228 00191000
*       RESPECIFY                                                  0229 00192000
*         RWORK0 RESTRICTED;                                       0229 00193000
         EJECT                                                          00194000
*AIXNOP:                                                           0230 00195000
*                                                                  0230 00196000
*       /*************************************************************/ 00197000
*       /*                                                           */ 00198000
*       /* DO EXIT PROCESSING                                        */ 00199000
*       /*                                                           */ 00200000
*       /*************************************************************/ 00201000
*                                                                  0230 00202000
*       IF RPLFDBWD=0&              /* IF NO FEEDBACK IN USER RPL    */ 00203000
*           RWORK1->RPLFDBWD^=0 THEN/* IF ANY FEEDBACK IN INNER RPL  */ 00204000
AIXNOP   SLR   @08,@08                                             0230 00205000
         C     @08,RPLFDBWD(,RRPL)                                 0230 00206000
         BNE   @RF00230                                            0230 00207000
         C     @08,RPLFDBWD(,RWORK1)                               0230 00208000
         BE    @RF00230                                            0230 00209000
*         DO;                                                      0231 00210000
*           RPLERRCD=RWORK1->RPLERRCD;/* COPY ERROR CODE FROM IRPL   */ 00211000
         IC    @08,RPLERRCD(,RWORK1)                               0232 00212000
         STC   @08,RPLERRCD(,RRPL)                                 0232 00213000
*           RPLERREG=RWORK1->RPLERREG;/* COPY RETURN CODE FROM IRPL  */ 00214000
         IC    @08,RPLERREG(,RWORK1)                               0233 00215000
         STC   @08,RPLERREG(,RRPL)                                 0233 00216000
*           RPLDDDD=RWORK1->RPLDDDD;/* RBA FROM IRPL         @ZA17187*/ 00217000
         L     @08,RPLDDDD(,RWORK1)                                0234 00218000
         ST    @08,RPLDDDD(,RRPL)                                  0234 00219000
*         END;                                                     0235 00220000
*       IF RPLFDBWD^=0&             /* IF ANY ERROR                  */ 00221000
*           RPLCMPON=0 THEN         /* IF NO CMPON SET AS YET        */ 00222000
@RF00230 L     @08,RPLFDBWD(,RRPL)                                 0236 00223000
         LTR   @08,@08                                             0236 00224000
         BZ    @RF00236                                            0236 00225000
         CLI   RPLCMPON(RRPL),0                                    0236 00226000
         BNE   @RF00236                                            0236 00227000
*         DO;                                                      0237 00228000
*           IF RWORK1->RPLCMPON^=0 THEN/* IF CMPON SET IN INNER RPL  */ 00229000
         CLI   RPLCMPON(RWORK1),0                                  0238 00230000
         BE    @RF00238                                            0238 00231000
*             RPLCMPON=RWORK1->RPLCMPON;/* COPY FROM INNER RPL       */ 00232000
         IC    @08,RPLCMPON(,RWORK1)                               0239 00233000
         STC   @08,RPLCMPON(,RRPL)                                 0239 00234000
*           ELSE                    /* IN CMPON NOT SET IN INNER RPL */ 00235000
*             IF(RPLERRCD=>RPLNOPLH&/* IF ERROR CODE => '40'X        */ 00236000
*                 RPLERRCD<=RPLINLRQ)|/* IF ERROR CODE <= '74'X      */ 00237000
*                 RWORK1->RPLDACB=ADDR(IFGACB) THEN/* IF IRPL PTS TO    00238000
*                                      AIX                           */ 00239000
         B     @RC00238                                            0240 00240000
@RF00238 CLI   RPLERRCD(RRPL),64                                   0240 00241000
         BL    @GL00009                                            0240 00242000
         CLI   RPLERRCD(RRPL),116                                  0240 00243000
         BNH   @RT00240                                            0240 00244000
@GL00009 CLC   RPLDACB(4,RWORK1),RPLDACB(RRPL)                     0240 00245000
         BNE   @RF00240                                            0240 00246000
@RT00240 DS    0H                                                  0241 00247000
*               RPLCMPON=RPLAIXER;  /* FAILURE WHEN PROCESSING AIX   */ 00248000
         MVI   RPLCMPON(RRPL),X'02'                                0241 00249000
*         END;                                                     0242 00250000
@RF00240 DS    0H                                                  0242 00251000
@RC00238 DS    0H                                                  0243 00252000
*       IF RPLERREG=0 THEN          /* IF NO ERRORS                  */ 00253000
@RF00236 CLI   RPLERREG(RRPL),0                                    0243 00254000
         BNE   @RF00243                                            0243 00255000
*         DO;                                                      0244 00256000
*           IF RWORK1->RPLRLEN^=0 THEN/* IF RCD LENGTH RETURNED      */ 00257000
         L     @08,RPLRLEN(,RWORK1)                                0245 00258000
         LTR   @08,@08                                             0245 00259000
         BZ    @RF00245                                            0245 00260000
*             RPLRLEN=RWORK1->RPLRLEN;/* COPY RCD LENGTH TO USER     */ 00261000
         ST    @08,RPLRLEN(,RRPL)                                  0246 00262000
*           IF RPLREQ=RPLGET&       /* IF GET REQUEST                */ 00263000
*               WAXXPTR+WAXPL<WAXEPTR THEN/* IF USER NOT GETTING LAST   00264000
*                                      BASE RCD FROM CURRENT AIX KEY */ 00265000
@RF00245 CLI   RPLREQ(RRPL),0                                      0247 00266000
         BNE   @RF00247                                            0247 00267000
         LH    @08,WAXPL(,RWORK5)                                  0247 00268000
         AL    @08,WAXXPTR(,RWORK5)                                0247 00269000
         C     @08,WAXEPTR(,RWORK5)                                0247 00270000
         BNL   @RF00247                                            0247 00271000
*             DO;                                                  0248 00272000
*               RPLERRCD=RPLMOKEY;  /* INDICATE MORE KEYS            */ 00273000
         MVI   RPLERRCD(RRPL),X'08'                                0249 00274000
*               RPLCMPON=RPLAIXER;  /* INDICATE PROCESSING AIX       */ 00275000
         MVI   RPLCMPON(RRPL),X'02'                                0250 00276000
*             END;                                                 0251 00277000
*           IF WAXRCDA^=0 THEN      /* IF RECORD PTR EXISTS          */ 00278000
@RF00247 L     @08,WAXRCDA(,RWORK5)                                0252 00279000
         LTR   @08,@08                                             0252 00280000
         BZ    @RF00252                                            0252 00281000
*             DO;                                                  0253 00282000
*               RPLAIXPC=WAXRCDA->AIXPC;/* COPY PTR COUNT            */ 00283000
         LH    @15,AIXPC(,@08)                                     0254 00284000
         STH   @15,RPLAIXPC(,RRPL)                                 0254 00285000
*               IF WAXRCDA->AIXPKP=ON THEN/* IF PRIME KEY PTRS       */ 00286000
         TM    AIXPKP(@08),B'00000001'                             0255 00287000
         BNO   @RF00255                                            0255 00288000
*                 RPLAXPKP=ON;      /* SET INDIC IN RPL              */ 00289000
         OI    RPLAXPKP(RRPL),B'10000000'                          0256 00290000
*               ELSE                /* IF NOT PRIME KEY PTRS         */ 00291000
*                 RPLAXPKP=OFF;     /* RESET INDIC IN RPL            */ 00292000
         B     @RC00255                                            0257 00293000
@RF00255 NI    RPLAXPKP(RRPL),B'01111111'                          0257 00294000
*             END;                                                 0258 00295000
@RC00255 DS    0H                                                  0259 00296000
*         END;                                                     0259 00297000
@RF00252 DS    0H                                                  0260 00298000
*       IF RPLERREG^=0&             /* IF ANY ERROR                  */ 00299000
*           PLHINVAL=OFF THEN       /* POSITION STILL VALID          */ 00300000
@RF00243 CLI   RPLERREG(RRPL),0                                    0260 00301000
         BE    @RF00260                                            0260 00302000
         TM    PLHINVAL(RPLH),B'00000010'                          0260 00303000
         BNZ   @RF00260                                            0260 00304000
*         CALL DISPOS;              /* CHECK FOR VALID POSITION      */ 00305000
         BAL   @14,DISPOS                                          0261 00306000
*       IF PLHINVAL=ON THEN         /* IF PLH POSITION IS INVALID    */ 00307000
@RF00260 TM    PLHINVAL(RPLH),B'00000010'                          0262 00308000
         BNO   @RF00262                                            0262 00309000
*         DO;                                                      0263 00310000
*           IF WAXSRAB=ON THEN      /* IF SRA EXISTS                 */ 00311000
         TM    WAXSRAB(RWORK5),B'10000000'                         0264 00312000
         BNO   @RF00264                                            0264 00313000
*             CALL RELSRA;          /* RELEASE SRA WORK AREA         */ 00314000
         BAL   @14,RELSRA                                          0265 00315000
*           CALL RELBASE;           /* RELEASE BASE PLH              */ 00316000
@RF00264 BAL   @14,RELBASE                                         0266 00317000
*           IF AMBLSR=ON|AMBGSR=ON THEN/* IF ANY RES SHRING          */ 00318000
         TM    AMBLSR(RAMB),B'01100000'                            0267 00319000
         BZ    @RF00267                                            0267 00320000
*             DO;                                                  0268 00321000
*               RESPECIFY                                          0269 00322000
*                 RWORK2 RESTRICTED;                               0269 00323000
*               RWORK2=LENGTH(IFGRPL)+LENGTH(IDAWAX);/* LOAD LENGTH     00324000
*                                      AREA TO RELEASE               */ 00325000
         LA    RWORK2,120                                          0270 00326000
*               CALL RELWS;         /* RELEASE INNER RPL AND WAX     */ 00327000
         BAL   @14,RELWS                                           0271 00328000
*               RESPECIFY                                          0272 00329000
*                 RWORK2 UNRESTRICTED;                             0272 00330000
*               PLHWAX=0;           /* ZERO WAX PTR                  */ 00331000
         SLR   @08,@08                                             0273 00332000
         ST    @08,PLHWAX(,RPLH)                                   0273 00333000
*             END;                                                 0274 00334000
*           ELSE                    /* IF NO SHRING                  */ 00335000
*             DO;                                                  0275 00336000
         B     @RC00267                                            0275 00337000
@RF00267 DS    0H                                                  0276 00338000
*               WAXXPTR=0;          /* ZERO RCD PTR TO FORCE READ    */ 00339000
         SLR   @08,@08                                             0276 00340000
         ST    @08,WAXXPTR(,RWORK5)                                0276 00341000
*               WAXPS=OFF;          /* MAKE PUT POSITION INVALID     */ 00342000
         NI    WAXPS(RWORK5),B'11011111'                           0277 00343000
*             END;                                                 0278 00344000
*         END;                                                     0279 00345000
*       ELSE                        /* IF PLHINVAL OFF       @ZA10591*/ 00346000
*         IF RPLERREG^=0 THEN       /* IF ERROR W/ NO INVAL  @ZA10591*/ 00347000
         B     @RC00262                                            0280 00348000
@RF00262 CLI   RPLERREG(RRPL),0                                    0280 00349000
         BE    @RF00280                                            0280 00350000
*           WAXNOADV=ON;            /* DONT ADVANCE WAX      @ZA10591*/ 00351000
         OI    WAXNOADV(RWORK5),B'00010000'                        0281 00352000
*     END;                                                         0282 00353000
*   ELSE                            /* USER HAS SPEC INVALID ACCESS  */ 00354000
*     DO;                                                          0283 00355000
         B     @RC00226                                            0283 00356000
@RF00226 DS    0H                                                  0284 00357000
*       RPLERRCD=RPLPAACI;          /* SET ERROR CODE FOR INVALID ACC*/ 00358000
         MVI   RPLERRCD(RRPL),X'C8'                                0284 00359000
*       RPLERREG='08'X;             /* SET ERROR REGISTER            */ 00360000
         MVI   RPLERREG(RRPL),X'08'                                0285 00361000
*       RPLCMPON=RPLAIXER;          /* SET ERROR PROCESSING AIX      */ 00362000
         MVI   RPLCMPON(RRPL),X'02'                                0286 00363000
*     END;                                                         0287 00364000
*   PLHCRPL=RRPL;                   /* CURRENT RPL IS USER RPL       */ 00365000
@RC00226 ST    RRPL,PLHCRPL(,RPLH)                                 0288 00366000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00367000
         IDARST14                                                       00368000
*   RETURN CODE(RPLERREG);          /* EXIT FROM IDA019RX            */ 00369000
         SLR   @15,@15                                             0290 00370000
         IC    @15,RPLERREG(,RRPL)                                 0290 00371000
         BR    @14                                                 0290 00372000
*/********************************************************************/ 00373000
*/* EXIT MODULE                                                      */ 00374000
*/********************************************************************/ 00375000
*                                                                  0291 00376000
         EJECT                                                          00377000
*DISPOS:                                                           0291 00378000
*                                                                  0291 00379000
*/********************************************************************/ 00380000
*/* THIS PROCEEDURE IS CALLED AFTER AN ERROR TO SEE IF THE PLH       */ 00381000
*/*         POSITION IS VALID                                        */ 00382000
*/********************************************************************/ 00383000
*                                                                  0291 00384000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0291 00385000
DISPOS   DS    0H                                                  0292 00386000
*   RESPECIFY                                                      0292 00387000
*     R14 RESTRICTED;                                              0292 00388000
*   IF(RPLERREG='08'X&              /* IF LOGICAL ERROR              */ 00389000
*       (RPLERRCD=RPLNOREC|         /* NO RECORD FOUND               */ 00390000
*       RPLERRCD=RPLNOMNT|          /* UNABLE TO MOUNT VOLUME        */ 00391000
*       RPLERRCD=RPLNOEXT|          /* UNABLE TO EXTEND DATA SET     */ 00392000
*       RPLERRCD=RPLNOVRT|          /* NOT ENOUGH CORE               */ 00393000
*       (RPLDIR=ON&                 /* IF DIRECT REQUEST AND         */ 00394000
*       (RPLERRCD=RPLEXCL|          /* EXCLUSIVE CONTROL ERROR       */ 00395000
*       RPLERRCD=RPLNOKR|           /* KEY RANGE PROBLEM             */ 00396000
*       RPLERRCD=RPLDUP|            /* DUPLICATE KEY                 */ 00397000
*       RPLERRCD=RPLINBUF))))|      /* BUFFER SIZE TOO SMALL         */ 00398000
*       (RPLERREG='0C'X&            /* IF PHYSICAL ERROR             */ 00399000
*       (RPLERRCD=RPLRDERI|         /* READ ERROR WITH INDEX         */ 00400000
*       (RPLREQ=RPLGET&             /* GET REQUEST                   */ 00401000
*       RPLSEQ=OFF))) THEN          /* NOT SEQUENTIAL                */ 00402000
         CLI   RPLERREG(RRPL),8                                    0293 00403000
         BNE   @GL00013                                            0293 00404000
         CLI   RPLERRCD(RRPL),16                                   0293 00405000
         BE    @RT00293                                            0293 00406000
         CLI   RPLERRCD(RRPL),24                                   0293 00407000
         BE    @RT00293                                            0293 00408000
         CLI   RPLERRCD(RRPL),28                                   0293 00409000
         BE    @RT00293                                            0293 00410000
         CLI   RPLERRCD(RRPL),40                                   0293 00411000
         BE    @RT00293                                            0293 00412000
         TM    RPLDIR(RRPL),B'01000000'                            0293 00413000
         BNO   @GL00013                                            0293 00414000
         CLI   RPLERRCD(RRPL),20                                   0293 00415000
         BE    @RT00293                                            0293 00416000
         CLI   RPLERRCD(RRPL),36                                   0293 00417000
         BE    @RT00293                                            0293 00418000
         CLI   RPLERRCD(RRPL),8                                    0293 00419000
         BE    @RT00293                                            0293 00420000
         CLI   RPLERRCD(RRPL),44                                   0293 00421000
         BE    @RT00293                                            0293 00422000
@GL00013 CLI   RPLERREG(RRPL),12                                   0293 00423000
         BNE   @RF00293                                            0293 00424000
         CLI   RPLERRCD(RRPL),8                                    0293 00425000
         BE    @RT00293                                            0293 00426000
         CLI   RPLREQ(RRPL),0                                      0293 00427000
         BNE   @RF00293                                            0293 00428000
         TM    RPLSEQ(RRPL),B'00100000'                            0293 00429000
         BNZ   @RF00293                                            0293 00430000
@RT00293 DS    0H                                                  0294 00431000
*     PLHINVAL=ON;                  /* POSITION IS INVALID           */ 00432000
         OI    PLHINVAL(RPLH),B'00000010'                          0294 00433000
*   RESPECIFY                                                      0295 00434000
*     R14 UNRESTRICTED;                                            0295 00435000
*   END DISPOS;                                                    0296 00436000
@EL00002 DS    0H                                                  0296 00437000
@EF00002 DS    0H                                                  0296 00438000
@ER00002 BR    @14                                                 0296 00439000
         EJECT                                                          00440000
*AIXGET:                                                           0297 00441000
*                                                                  0297 00442000
*/********************************************************************/ 00443000
*/* THIS ROUTINE PROCESSES AN PATH READ.  IF NO POSITIONING EXISTS   */ 00444000
*/* IN THE PLH, GETXRCD IS CALLED.  IDA019R4 IS CALLED TO READ THE   */ 00445000
*/* BASE RECORD WHICH IS POINTED TO BY WAXXPTR.                      */ 00446000
*/********************************************************************/ 00447000
*                                                                  0297 00448000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0297 00449000
AIXGET   DS    0H                                                  0298 00450000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00451000
         IDASVR14                                                       00452000
*   IF WAXPS=ON THEN                /* IF LAST OPERATION WAS PUT SEQ */ 00453000
         TM    WAXPS(RWORK5),B'00100000'                           0299 00454000
         BNO   @RF00299                                            0299 00455000
*     DO;                                                          0300 00456000
*       IF RPLSEQ=ON THEN           /* IF THIS GET IS SEQ            */ 00457000
         TM    RPLSEQ(RRPL),B'00100000'                            0301 00458000
         BNO   @RF00301                                            0301 00459000
*         CALL REPOSG;              /* REPOSITION FOR GET            */ 00460000
         BAL   @14,REPOSG                                          0302 00461000
*       ELSE                        /* IF NOT GET SEQ                */ 00462000
*         WAXPS=OFF;                /* RESET BIT                     */ 00463000
         B     @RC00301                                            0303 00464000
@RF00301 NI    WAXPS(RWORK5),B'11011111'                           0303 00465000
*     END;                                                         0304 00466000
@RC00301 DS    0H                                                  0305 00467000
*   IF WAXXPTR^=0&                  /* IF NOT FIRST REQUEST FOR PLH  */ 00468000
*       RPLSEQ=ON THEN              /* IF USER REQUESTED SEQ PROC    */ 00469000
@RF00299 L     @08,WAXXPTR(,RWORK5)                                0305 00470000
         LTR   @08,@08                                             0305 00471000
         BZ    @RF00305                                            0305 00472000
         TM    RPLSEQ(RRPL),B'00100000'                            0305 00473000
         BNO   @RF00305                                            0305 00474000
*     DO;                                                          0306 00475000
*       IF WAXNOADV=OFF THEN        /* IF NOADVANCE OFF      @ZA10591*/ 00476000
         TM    WAXNOADV(RWORK5),B'00010000'                        0307 00477000
         BNZ   @RF00307                                            0307 00478000
*         DO;                       /* ADVANCE WAX           @ZA10591*/ 00479000
*           WAXXPTR=WAXXPTR+WAXPL;  /* POINT TO NEXT POINTER         */ 00480000
         AH    @08,WAXPL(,RWORK5)                                  0309 00481000
         ST    @08,WAXXPTR(,RWORK5)                                0309 00482000
*           IF WAXXPTR=>WAXEPTR THEN/* IF POINTING OUT OF RECORD     */ 00483000
         C     @08,WAXEPTR(,RWORK5)                                0310 00484000
         BL    @RF00310                                            0310 00485000
*             CALL GETXRCD;         /* READ NEXT SEQ AIX RECORD      */ 00486000
         BAL   @14,GETXRCD                                         0311 00487000
*         END;                      /*                       @ZA10591*/ 00488000
*     END;                                                         0313 00489000
*   ELSE                            /* IF USER REQUESTED DIRECT      */ 00490000
*     CALL GETXRCD;                 /* GET AIX RECORD                */ 00491000
         B     @RC00305                                            0314 00492000
@RF00305 BAL   @14,GETXRCD                                         0314 00493000
*   WAXNOADV=OFF;                   /* RESET FOR NEXT TIME   @ZA10591*/ 00494000
@RC00305 NI    WAXNOADV(RWORK5),B'11101111'                        0315 00495000
*   IF RWORK1->RPLERREG=0 THEN      /* IF NO ERROR                   */ 00496000
         CLI   RPLERREG(RWORK1),0                                  0316 00497000
         BNE   @RF00316                                            0316 00498000
*     DO;                                                          0317 00499000
*       RWORK1->RPLDACB=AMBLXPT->AMBLACB;/* POINT TO BASE ACB        */ 00500000
         L     @08,AMBLXPT(,RPARM1)                                0318 00501000
         L     @08,AMBLACB(,@08)                                   0318 00502000
         ST    @08,RPLDACB(,RWORK1)                                0318 00503000
*       CALL LOADREGS;              /* LOAD REGISTERS FOR IDA019R4   */ 00504000
         BAL   @14,LOADREGS                                        0319 00505000
*       IF RWORK1->RPLERREG=0 THEN  /* IF NO ERROR                   */ 00506000
         CLI   RPLERREG(RWORK1),0                                  0320 00507000
         BNE   @RF00320                                            0320 00508000
*         DO;                                                      0321 00509000
*           CALL SETIRPL;           /* SET UP INNER RPL              */ 00510000
         BAL   @14,SETIRPL                                         0322 00511000
*           CALL CALLR4;            /* EXIT TO IDA019R4              */ 00512000
         BAL   @14,CALLR4                                          0323 00513000
*           RESPECIFY                                              0324 00514000
*             RWORK2 RESTRICTED;                                   0324 00515000
*           RESPECIFY                                              0325 00516000
*             ALTKEY BASED(RWORK2);                                0325 00517000
*           IF RWORK1->RPLLOC=ON THEN/* IF LOCATE MODE               */ 00518000
         TM    RPLLOC(RWORK1),B'10000000'                          0326 00519000
         BNO   @RF00326                                            0326 00520000
*             RWORK2=RWORK1->RPLAREA;/* POINT TO POINTER             */ 00521000
         L     RWORK2,RPLAREA(,RWORK1)                             0327 00522000
*           ELSE                    /* IF MOVE MODE                  */ 00523000
*             RWORK2=ADDR(RWORK1->RPLAREA);/* POINT TO POINTER       */ 00524000
         B     @RC00326                                            0328 00525000
@RF00326 LA    RWORK2,RPLAREA(,RWORK1)                             0328 00526000
*           RWORK2=RWORK2->PTR31+AMDAXRKP;/* POINT TO AIX KEY IN BASE*/ 00527000
@RC00326 L     @08,AMBDSB(,RAMB)                                   0329 00528000
         LH    @07,AMDAXRKP(,@08)                                  0329 00529000
         AL    @07,PTR31(,RWORK2)                                  0329 00530000
         LR    RWORK2,@07                                          0329 00531000
*           IF RWORK1->RPLERRCD=RPLNOREC|/* IF BASE RCD NOT FOUND    */ 00532000
*               (RWORK1->RPLERREG=0&/* IF NO ERROR                   */ 00533000
*               PLHKEY(1:AMDKEYLN)^=ALTKEY(1:AMDKEYLN)) THEN/* IF ALT   00534000
*                                      KEY CHANGED IN BASE           */ 00535000
         CLI   RPLERRCD(RWORK1),16                                 0330 00536000
         BE    @RT00330                                            0330 00537000
         CLI   RPLERREG(RWORK1),0                                  0330 00538000
         BNE   @RF00330                                            0330 00539000
         L     @07,PLHKEYPT(,RPLH)                                 0330 00540000
         LH    @08,AMDKEYLN(,@08)                                  0330 00541000
         BCTR  @08,0                                               0330 00542000
         EX    @08,@SC01305                                        0330 00543000
         BE    @RF00330                                            0330 00544000
@RT00330 DS    0H                                                  0331 00545000
*             DO;                                                  0331 00546000
*               RPLERRCD=RPLNBRCD;  /* NO BASE RECORD                */ 00547000
         MVI   RPLERRCD(RRPL),X'90'                                0332 00548000
*               RPLERREG='08'X;     /* SET LOGICAL ERROR             */ 00549000
         MVI   RPLERREG(RRPL),X'08'                                0333 00550000
*               RPLCMPON=RPLAIXER;  /* ERROR WITH AIX                */ 00551000
         MVI   RPLCMPON(RRPL),X'02'                                0334 00552000
*               IF RPLDIR=ON THEN   /* IF DRIECT REQUEST             */ 00553000
         TM    RPLDIR(RRPL),B'01000000'                            0335 00554000
         BNO   @RF00335                                            0335 00555000
*                 PLHINVAL=ON;      /* PLH POSITION INVALID          */ 00556000
         OI    PLHINVAL(RPLH),B'00000010'                          0336 00557000
*             END;                                                 0337 00558000
@RF00335 DS    0H                                                  0338 00559000
*           RESPECIFY                                              0338 00560000
*             RWORK2 UNRESTRICTED;                                 0338 00561000
@RF00330 DS    0H                                                  0339 00562000
*           IF RWORK1->RPLERREG=0&  /* IF NO ERROR                   */ 00563000
*               RPLDIR=ON&          /* IF USER REQUESTED DIR         */ 00564000
*               (RPLLOC=OFF&        /* USER DIDNT REQ LOCATE         */ 00565000
*               RPLNSP=OFF&         /* USER DIDNT REQ NSP            */ 00566000
*               RPLUPD=OFF) THEN    /* USER DIDNT REQ UPDATE         */ 00567000
         CLI   RPLERREG(RWORK1),0                                  0339 00568000
         BNE   @RF00339                                            0339 00569000
         TM    RPLDIR(RRPL),B'01000000'                            0339 00570000
         BNO   @RF00339                                            0339 00571000
         TM    RPLLOC(RRPL),B'10000000'                            0339 00572000
         BNZ   @RF00339                                            0339 00573000
         TM    RPLNSP(RRPL),B'00000011'                            0339 00574000
         BNZ   @RF00339                                            0339 00575000
*             PLHINVAL=ON;          /* MAKE PLH INVAL TO CAUSE ENDREQ*/ 00576000
         OI    PLHINVAL(RPLH),B'00000010'                          0340 00577000
*         END;                                                     0341 00578000
@RF00339 DS    0H                                                  0342 00579000
*     END;                                                         0342 00580000
@RF00320 DS    0H                                                  0343 00581000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00582000
@RF00316 DS    0H                                                  0343 00583000
         IDARST14                                                       00584000
*   END AIXGET;                                                    0344 00585000
@EL00003 DS    0H                                                  0344 00586000
@EF00003 DS    0H                                                  0344 00587000
@ER00003 BR    @14                                                 0344 00588000
         EJECT                                                          00589000
*AIXPUT:                                                           0345 00590000
*                                                                  0345 00591000
*/********************************************************************/ 00592000
*/* THIS ROUTINE PROCESSES PATH PUTS -                               */ 00593000
*/********************************************************************/ 00594000
*                                                                  0345 00595000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0345 00596000
AIXPUT   DS    0H                                                  0346 00597000
*   RESPECIFY                                                      0346 00598000
*     R14 RESTRICTED;                                              0346 00599000
*   RESPECIFY                                                      0347 00600000
*     ALTKEY BASED(RPLAREA+AMDAXRKP);                              0347 00601000
*   IF RPLUPD=ON&                   /* IF PUT UPDATE                 */ 00602000
*       (WAXBPLH=0|                 /* IF NO BASE PLH EXISTS         */ 00603000
*       PLHKEY(1:AMDKEYLN)^=ALTKEY(1:AMDKEYLN)) THEN/* IF USER     0348 00604000
*                                      CHANGED ALT KEY               */ 00605000
         TM    RPLUPD(RRPL),B'00000010'                            0348 00606000
         BNO   @RF00348                                            0348 00607000
         L     @15,WAXBPLH(,RWORK5)                                0348 00608000
         LTR   @15,@15                                             0348 00609000
         BZ    @RT00348                                            0348 00610000
         L     @15,PLHKEYPT(,RPLH)                                 0348 00611000
         L     @08,AMBDSB(,RAMB)                                   0348 00612000
         LH    @07,AMDAXRKP(,@08)                                  0348 00613000
         AL    @07,RPLAREA(,RRPL)                                  0348 00614000
         LH    @08,AMDKEYLN(,@08)                                  0348 00615000
         BCTR  @08,0                                               0348 00616000
         EX    @08,@SC01307                                        0348 00617000
         BE    @RF00348                                            0348 00618000
@RT00348 DS    0H                                                  0349 00619000
*     DO;                           /* USER HAS AN ERROR             */ 00620000
*       RPLERREG='08'X;             /* USER HAS A LOGICAL ERROR      */ 00621000
         MVI   RPLERREG(RRPL),X'08'                                0350 00622000
*       RPLCMPON=RPLAIXER;          /* TRYING TO PROCESS AIX         */ 00623000
         MVI   RPLCMPON(RRPL),X'02'                                0351 00624000
*       IF WAXBPLH=0 THEN           /* IF NO BASE PLH                */ 00625000
         L     @15,WAXBPLH(,RWORK5)                                0352 00626000
         LTR   @15,@15                                             0352 00627000
         BNZ   @RF00352                                            0352 00628000
*         RPLERRCD=RPLINUPD;        /* SPEC INVALID UPDATE           */ 00629000
         MVI   RPLERRCD(RRPL),X'5C'                                0353 00630000
*       ELSE                        /* IF PLH EXISTS                 */ 00631000
*         RPLERRCD=RPLKEYCH;        /* USER MUST OF TRIED KEY CHANGE */ 00632000
         B     @RC00352                                            0354 00633000
@RF00352 MVI   RPLERRCD(RRPL),X'60'                                0354 00634000
*       RETURN;                     /* EXIT AIXPUT PROC              */ 00635000
@EL00004 DS    0H                                                  0355 00636000
@EF00004 DS    0H                                                  0355 00637000
@ER00004 BR    @14                                                 0355 00638000
*     END;                                                         0356 00639000
*   IF RPLSEQ=ON&WAXPS=ON&          /* IF REQUEST SEQUENTIAL         */ 00640000
*       RPLUPD=OFF&                 /* IF NOT UPDATE                 */ 00641000
*       PLHKEY(1:AMDKEYLN)>ALTKEY(1:AMDKEYLN) THEN/* IF KEY OUT OF 0357 00642000
*                                      SEQ                           */ 00643000
@RF00348 TM    RPLSEQ(RRPL),B'00100000'                            0357 00644000
         BNO   @RF00357                                            0357 00645000
         TM    WAXPS(RWORK5),B'00100000'                           0357 00646000
         BNO   @RF00357                                            0357 00647000
         TM    RPLUPD(RRPL),B'00000010'                            0357 00648000
         BNZ   @RF00357                                            0357 00649000
         L     @15,PLHKEYPT(,RPLH)                                 0357 00650000
         L     @08,AMBDSB(,RAMB)                                   0357 00651000
         LH    @07,AMDAXRKP(,@08)                                  0357 00652000
         AL    @07,RPLAREA(,RRPL)                                  0357 00653000
         LH    @08,AMDKEYLN(,@08)                                  0357 00654000
         BCTR  @08,0                                               0357 00655000
         EX    @08,@SC01307                                        0357 00656000
         BNH   @RF00357                                            0357 00657000
*     DO;                           /* USER HAS AN ERROR             */ 00658000
*       RPLERREG='08'X;             /* USER HAS A LOGICAL ERROR      */ 00659000
         MVI   RPLERREG(RRPL),X'08'                                0359 00660000
*       RPLCMPON=RPLAIXER;          /* TRYING TO PROCESS AIX         */ 00661000
         MVI   RPLCMPON(RRPL),X'02'                                0360 00662000
*       RPLERRCD=RPLSEQCK;          /* USER HAD SEQ CHECK ERROR      */ 00663000
         MVI   RPLERRCD(RRPL),X'0C'                                0361 00664000
*       RETURN;                     /* EXIT AIXPUT PROC              */ 00665000
         B     @EL00004                                            0362 00666000
*     END;                                                         0363 00667000
*   RWORK1->RPLDACB=AMBLXPT->AMBLACB;/* POINT RPL TO BASE ACB        */ 00668000
@RF00357 L     @15,AMBLXPT(,RPARM1)                                0364 00669000
         L     @15,AMBLACB(,@15)                                   0364 00670000
         ST    @15,RPLDACB(,RWORK1)                                0364 00671000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00672000
         IDASVR14                                                       00673000
*   CALL LOADREGS;                  /* LOADREGS FOR BASE PROCESSING  */ 00674000
         BAL   @14,LOADREGS                                        0366 00675000
*   IF RWORK1->RPLERREG=0 THEN      /* IF NO ERROR                   */ 00676000
         CLI   RPLERREG(RWORK1),0                                  0367 00677000
         BNE   @RF00367                                            0367 00678000
*     DO;                                                          0368 00679000
*       CALL SETIRPL;               /* SET UP INNER RPL              */ 00680000
         BAL   @14,SETIRPL                                         0369 00681000
*       CALL CALLR4;                /* CALL IDA019R4                 */ 00682000
         BAL   @14,CALLR4                                          0370 00683000
*       IF RWORK1->RPLERREG=0 THEN  /* IF NO ERROR                   */ 00684000
         CLI   RPLERREG(RWORK1),0                                  0371 00685000
         BNE   @RF00371                                            0371 00686000
*         DO;                                                      0372 00687000
*           PLHKEY(1:AMDKEYLN)=ALTKEY(1:AMDKEYLN);/* KEY INTO PLH    */ 00688000
         L     @15,PLHKEYPT(,RPLH)                                 0373 00689000
         L     @08,AMBDSB(,RAMB)                                   0373 00690000
         LH    @07,AMDKEYLN(,@08)                                  0373 00691000
         BCTR  @07,0                                               0373 00692000
         LH    @08,AMDAXRKP(,@08)                                  0373 00693000
         AL    @08,RPLAREA(,RRPL)                                  0373 00694000
         EX    @07,@SM01309                                        0373 00695000
*           IF RPLDIR=ON&           /* IF PUT DIRECT REQUEST         */ 00696000
*               RPLNSP=OFF THEN     /* IF NO NEED TO SAVE POSITION   */ 00697000
         TM    RPLDIR(RRPL),B'01000000'                            0374 00698000
         BNO   @RF00374                                            0374 00699000
         TM    RPLNSP(RRPL),B'00000001'                            0374 00700000
         BNZ   @RF00374                                            0374 00701000
*             PLHINVAL=ON;          /* DESTROY AIX RCD POSITION      */ 00702000
         OI    PLHINVAL(RPLH),B'00000010'                          0375 00703000
*           IF RPLSEQ=ON&RPLUPD=OFF THEN/* IF PUT NUP SEQ            */ 00704000
@RF00374 TM    RPLSEQ(RRPL),B'00100000'                            0376 00705000
         BNO   @RF00376                                            0376 00706000
         TM    RPLUPD(RRPL),B'00000010'                            0376 00707000
         BNZ   @RF00376                                            0376 00708000
*             WAXPS=ON;             /* RECORD PUT SEQ FOR NEXT GET 0377 00709000
*                                      SEQ                           */ 00710000
         OI    WAXPS(RWORK5),B'00100000'                           0377 00711000
*         END;                                                     0378 00712000
@RF00376 DS    0H                                                  0379 00713000
*     END;                                                         0379 00714000
@RF00371 DS    0H                                                  0380 00715000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00716000
@RF00367 DS    0H                                                  0380 00717000
         IDARST14                                                       00718000
*   RESPECIFY                                                      0381 00719000
*     R14 UNRESTRICTED;                                            0381 00720000
*   END AIXPUT;                                                    0382 00721000
         B     @EL00004                                            0382 00722000
         EJECT                                                          00723000
*AIXERASE:                                                         0383 00724000
*                                                                  0383 00725000
*/********************************************************************/ 00726000
*/* THIS ROUTINE PROCESSES PATH ERASES -                             */ 00727000
*/********************************************************************/ 00728000
*                                                                  0383 00729000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0383 00730000
AIXERASE DS    0H                                                  0384 00731000
*   RESPECIFY                                                      0384 00732000
*     R14 RESTRICTED;                                              0384 00733000
*   IF WAXBPLH=0 THEN               /* IF GET UPD WAS NOT LAST REQ   */ 00734000
         L     @15,WAXBPLH(,RWORK5)                                0385 00735000
         LTR   @15,@15                                             0385 00736000
         BNZ   @RF00385                                            0385 00737000
*     DO;                                                          0386 00738000
*       RPLERRCD=RPLINUPD;          /* ERROR CODE FOR INVALID ERASE  */ 00739000
         MVI   RPLERRCD(RRPL),X'5C'                                0387 00740000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 00741000
         MVI   RPLERREG(RRPL),X'08'                                0388 00742000
*       RPLCMPON=RPLAIXER;          /* ERROR DETECTED IN AIX         */ 00743000
         MVI   RPLCMPON(RRPL),X'02'                                0389 00744000
*     END;                                                         0390 00745000
*   ELSE                            /* IF LAST REQUEST WAS GET UPD   */ 00746000
*     DO;                                                          0391 00747000
         B     @RC00385                                            0391 00748000
@RF00385 DS    0H                                                  0392 00749000
*       IF AMBLXPT->AMBLNUM=ESDSNUM1 THEN/* IF BASE IS ESDS          */ 00750000
         L     @15,AMBLXPT(,RPARM1)                                0392 00751000
         CLC   AMBLNUM(2,@15),@CH00054                             0392 00752000
         BNE   @RF00392                                            0392 00753000
*         DO;                                                      0393 00754000
*           RPLERRCD=RPLERSER;      /* ERROR CODE FOR INVALID ERASE  */ 00755000
         MVI   RPLERRCD(RRPL),X'50'                                0394 00756000
*           RPLERREG='08'X;         /* SET LOGICAL ERROR             */ 00757000
         MVI   RPLERREG(RRPL),X'08'                                0395 00758000
*           RPLCMPON=RPLAIXER;      /* ERROR DETECTED IN A9X         */ 00759000
         MVI   RPLCMPON(RRPL),X'02'                                0396 00760000
*         END;                                                     0397 00761000
*       ELSE                        /* IF BASE IS KSDS               */ 00762000
*         DO;                                                      0398 00763000
         B     @RC00392                                            0398 00764000
@RF00392 DS    0H                                                  0399 00765000
*           GEN(IDASVR14);          /* SAVE RETURN REGISTER          */ 00766000
         IDASVR14                                                       00767000
*           RESPECIFY                                              0400 00768000
*             R14 UNRESTRICTED;                                    0400 00769000
*           RWORK1->RPLDACB=AMBLXPT->AMBLACB;/* POINT RPL TO BASE ACB*/ 00770000
         L     @08,AMBLXPT(,RPARM1)                                0401 00771000
         L     @08,AMBLACB(,@08)                                   0401 00772000
         ST    @08,RPLDACB(,RWORK1)                                0401 00773000
*           CALL LOADREGS;          /* LOAD REGS TO PROCESS BASE     */ 00774000
         BAL   @14,LOADREGS                                        0402 00775000
*           CALL SETIRPL;           /* SET UP INNER RPL              */ 00776000
         BAL   @14,SETIRPL                                         0403 00777000
*           CALL CALLR4;            /* EXIT TO IDA019R4              */ 00778000
         BAL   @14,CALLR4                                          0404 00779000
*           IF RPLDIR=ON&           /* IF ERASE DIRECT REQUEST       */ 00780000
*               RPLNSP=OFF THEN     /* IF NO NEED TO SAVE POSITION   */ 00781000
         TM    RPLDIR(RRPL),B'01000000'                            0405 00782000
         BNO   @RF00405                                            0405 00783000
         TM    RPLNSP(RRPL),B'00000001'                            0405 00784000
         BNZ   @RF00405                                            0405 00785000
*             PLHINVAL=ON;          /* DESTROY AIX RCD POSITION      */ 00786000
         OI    PLHINVAL(RPLH),B'00000010'                          0406 00787000
*           RESPECIFY                                              0407 00788000
*             R14 RESTRICTED;                                      0407 00789000
@RF00405 DS    0H                                                  0408 00790000
*           GEN(IDARST14);          /* RESTORE RETURN REGISTER       */ 00791000
         IDARST14                                                       00792000
*           RESPECIFY                                              0409 00793000
*             R14 UNRESTRICTED;                                    0409 00794000
*         END;                                                     0410 00795000
*     END;                                                         0411 00796000
*   END AIXERASE;                                                  0412 00797000
@EL00005 DS    0H                                                  0412 00798000
@EF00005 DS    0H                                                  0412 00799000
@ER00005 BR    @14                                                 0412 00800000
         EJECT                                                          00801000
*AIXPOINT:                                                         0413 00802000
*                                                                  0413 00803000
*/********************************************************************/ 00804000
*/* THIS ROUTINE PROCESSES PATH POINTS -                             */ 00805000
*/*   ISSUES GETXRCD AGAINST PATH                                    */ 00806000
*/********************************************************************/ 00807000
*                                                                  0413 00808000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0413 00809000
AIXPOINT DS    0H                                                  0414 00810000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00811000
         IDASVR14                                                       00812000
*   WAXPS=OFF;                      /* LAST OPERATION WAS PUT SEQ    */ 00813000
*   WAXNOADV=OFF;                   /* RESET NO ADVANCE      @ZA10860*/ 00814000
         NI    WAXPS(RWORK5),B'11001111'                           0416 00815000
*   CALL GETXRCD;                   /* GET AIX RECORD                */ 00816000
         BAL   @14,GETXRCD                                         0417 00817000
*   IF RWORK1->RPLERREG=0 THEN      /* IF NO ERROR           @ZA10853*/ 00818000
         CLI   RPLERREG(RWORK1),0                                  0418 00819000
         BNE   @RF00418                                            0418 00820000
*     DO;                           /*                       @ZA10853*/ 00821000
*       WAXXPTR=WAXXPTR-WAXPL;      /* BACK UP PTR FOR GET NEXT      */ 00822000
         L     @08,WAXXPTR(,RWORK5)                                0420 00823000
         SH    @08,WAXPL(,RWORK5)                                  0420 00824000
         ST    @08,WAXXPTR(,RWORK5)                                0420 00825000
*       RWORK1->RPLRLEN=0;          /* ZERO RCD LENGTH               */ 00826000
         SLR   @08,@08                                             0421 00827000
         ST    @08,RPLRLEN(,RWORK1)                                0421 00828000
*     END;                          /*                       @ZA10853*/ 00829000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00830000
@RF00418 DS    0H                                                  0423 00831000
         IDARST14                                                       00832000
*   END AIXPOINT;                                                  0424 00833000
@EL00006 DS    0H                                                  0424 00834000
@EF00006 DS    0H                                                  0424 00835000
@ER00006 BR    @14                                                 0424 00836000
         EJECT                                                          00837000
*AIXENREQ:                                                         0425 00838000
*                                                                  0425 00839000
*/********************************************************************/ 00840000
*/* THIS ROUTINE PROCESSES PATH ENDREQS -                            */ 00841000
*/*   IF BASE PLH EXISTS, ISSUES ENDREQ AGAINST BASE                 */ 00842000
*/********************************************************************/ 00843000
*                                                                  0425 00844000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0425 00845000
AIXENREQ DS    0H                                                  0426 00846000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00847000
         IDASVR14                                                       00848000
*   RPARM1=ACBAMBL;                 /* LOAD POINTER TO AMBL          */ 00849000
         L     @08,RPLDACB(,RRPL)                                  0427 00850000
         L     RPARM1,ACBAMBL(,@08)                                0427 00851000
*   IF WAXURPL^=0 THEN              /* IF PLH WAS EVER USED          */ 00852000
         L     @08,WAXURPL(,RWORK5)                                0428 00853000
         LTR   @08,@08                                             0428 00854000
         BZ    @RF00428                                            0428 00855000
*     DO;                                                          0429 00856000
*       IF AMBLACB->ACBBUSY=ON THEN /* IF ENDREQ FROM I/O SUPPORT    */ 00857000
         L     @08,AMBLACB(,RPARM1)                                0430 00858000
         TM    ACBBUSY(@08),B'00000001'                            0430 00859000
         BNO   @RF00430                                            0430 00860000
*         AMBLXPT->AMBLACB->ACBBUSY=ON;/* MAKE BASE BUSY             */ 00861000
         L     @08,AMBLXPT(,RPARM1)                                0431 00862000
         L     @08,AMBLACB(,@08)                                   0431 00863000
         OI    ACBBUSY(@08),B'00000001'                            0431 00864000
*       CALL RELBASE;               /* ENDREQ BASE PLH IF ANY        */ 00865000
@RF00430 BAL   @14,RELBASE                                         0432 00866000
*       IF AMBLACB->ACBBUSY=ON THEN /* IF ENDREQ FROM I/O SUPPORT    */ 00867000
         L     @08,AMBLACB(,RPARM1)                                0433 00868000
         TM    ACBBUSY(@08),B'00000001'                            0433 00869000
         BNO   @RF00433                                            0433 00870000
*         AMBLXPT->AMBLACB->ACBBUSY=OFF;/* MAKE BASE NOT BUSY        */ 00871000
         L     @08,AMBLXPT(,RPARM1)                                0434 00872000
         L     @08,AMBLACB(,@08)                                   0434 00873000
         NI    ACBBUSY(@08),B'11111110'                            0434 00874000
*       IF RWORK1->RPLERREG=0 THEN  /* IF NO ERROR AS YET            */ 00875000
@RF00433 CLI   RPLERREG(RWORK1),0                                  0435 00876000
         BNE   @RF00435                                            0435 00877000
*         DO;                                                      0436 00878000
*I01:                                                              0437 00879000
*           DO;                     /* IDACALL(IDAENDRQ)             */ 00880000
I01      DS    0H                                                  0438 00881000
*             CALL IDAENDRQ;        /* EXIT TO IDAENDRQ              */ 00882000
         L     @15,@CV01113                                        0438 00883000
         BALR  @14,@15                                             0438 00884000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00885000
         BALR @11,0                                                     00886000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00887000
         USING *,@11                                                    00888000
*             GEN(USING *+4095,R10);/* ESTABLISH SECOND BASE         */ 00889000
         USING *+4095,R10                                               00890000
*             GEN(LA    R10,4095(@11));/* LOAD SECOND BASE           */ 00891000
         LA    R10,4095(@11)                                            00892000
*             GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 00893000
         L     R10,=A(@PSTART+4095)                                     00894000
*             GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE   */ 00895000
         USING @PSTART+4095,R10                                         00896000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00897000
         L     @11,=A(@PSTART)                                          00898000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00899000
         USING @PSTART,@11                                              00900000
*           END I01;                /* ENDREQ AIX                    */ 00901000
*           RWORK5=PLHWAX;          /* RESTORE IDAWAX BASE           */ 00902000
         L     RWORK5,PLHWAX(,RPLH)                                0448 00903000
*           RWORK1=RRPL;            /* RESTORE POINTER TO INNER RPL  */ 00904000
         LR    RWORK1,RRPL                                         0449 00905000
*           RRPL=WAXURPL;           /* RESTROE POINTER TO USERS RPL  */ 00906000
         L     RRPL,WAXURPL(,RWORK5)                               0450 00907000
*           RPARM1=ACBAMBL;         /* RESTORE POINTER TO AMBL       */ 00908000
         L     @08,RPLDACB(,RRPL)                                  0451 00909000
         L     RPARM1,ACBAMBL(,@08)                                0451 00910000
*           RAMB=AMBLDTA;           /* RESTORE POINTER TO DATA AMB   */ 00911000
         L     RAMB,AMBLDTA(,RPARM1)                               0452 00912000
*           WAXXPTR=0;              /* RELEASE AIX PTR               */ 00913000
         SLR   @08,@08                                             0453 00914000
         ST    @08,WAXXPTR(,RWORK5)                                0453 00915000
*         END;                                                     0454 00916000
*     END;                                                         0455 00917000
@RF00435 DS    0H                                                  0456 00918000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00919000
@RF00428 DS    0H                                                  0456 00920000
         IDARST14                                                       00921000
*   END AIXENREQ;                                                  0457 00922000
@EL00007 DS    0H                                                  0457 00923000
@EF00007 DS    0H                                                  0457 00924000
@ER00007 BR    @14                                                 0457 00925000
         EJECT                                                          00926000
*AIXBAD:                                                           0458 00927000
*                                                                  0458 00928000
*/********************************************************************/ 00929000
*/* THIS ROUTINE PROCESS CALLS TO IDA019RX WITH BAD REQUEST CODES    */ 00930000
*/********************************************************************/ 00931000
*                                                                  0458 00932000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0458 00933000
AIXBAD   DS    0H                                                  0459 00934000
*   RESPECIFY                                                      0459 00935000
*     R14 RESTRICTED;                                              0459 00936000
*   RPLERRCD=RPLINVP;               /* INDICATE INVALID REQUEST      */ 00937000
         MVI   RPLERRCD(RRPL),X'68'                                0460 00938000
*   RPLERREG='08'X;                 /* INDICATE LOGICAL ERROR        */ 00939000
         MVI   RPLERREG(RRPL),X'08'                                0461 00940000
*   RPLCMPON=RPLAIXER;              /* INDICATE ERROR DURING AIX PROC*/ 00941000
         MVI   RPLCMPON(RRPL),X'02'                                0462 00942000
*   RESPECIFY                                                      0463 00943000
*     R14 UNRESTRICTED;                                            0463 00944000
*   END AIXBAD;                                                    0464 00945000
@EL00008 DS    0H                                                  0464 00946000
@EF00008 DS    0H                                                  0464 00947000
@ER00008 BR    @14                                                 0464 00948000
         EJECT                                                          00949000
*RELBASE:                                                          0465 00950000
*                                                                  0465 00951000
*/********************************************************************/ 00952000
*/* THIS ROUTINE ISSUES AN ENDREQ TO THE BASE DATA SET               */ 00953000
*/********************************************************************/ 00954000
*                                                                  0465 00955000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0465 00956000
RELBASE  DS    0H                                                  0466 00957000
*   RESPECIFY                                                      0466 00958000
*     R14 RESTRICTED;                                              0466 00959000
*   IF WAXBPLH^=0 THEN              /* IF BPLH CONNECTED             */ 00960000
         L     @15,WAXBPLH(,RWORK5)                                0467 00961000
         LTR   @15,@15                                             0467 00962000
         BZ    @RF00467                                            0467 00963000
*     DO;                                                          0468 00964000
*       GEN SETS(PLHRET1,PLHRETO)(IDASVR14);/* SAVE RETURN ADDRESS   */ 00965000
         IDASVR14                                                       00966000
*       RPARM1=AMBLXPT;             /* LOAD PTR TO BASE AMBL         */ 00967000
         L     RPARM1,AMBLXPT(,RPARM1)                             0470 00968000
*       RAMB=AMBLDTA;               /* LOAD AMB POINTER              */ 00969000
         L     RAMB,AMBLDTA(,RPARM1)                               0471 00970000
*       WAXIRPL->RPLTCBPT=RPLH;     /* SAVE PTR PATH PLH     @ZA14814*/ 00971000
         L     @15,WAXIRPL(,RWORK5)                                0472 00972000
         ST    RPLH,RPLTCBPT(,@15)                                 0472 00973000
*       RPLH=WAXBPLH;               /* LOAD BASE PLH POINTER         */ 00974000
         L     @08,WAXBPLH(,RWORK5)                                0473 00975000
         LR    RPLH,@08                                            0473 00976000
*       RRPL=WAXIRPL;               /* POINT TO INNER RPL            */ 00977000
         LR    RRPL,@15                                            0474 00978000
*       WAXBPLH->PLHXPLH=0;         /* RESET PLH PTR BACK    @ZA14814*/ 00979000
         SLR   @15,@15                                             0475 00980000
         ST    @15,PLHXPLH(,@08)                                   0475 00981000
*I02:                                                              0476 00982000
*       DO;                         /* IDACALL(IDAENDRQ)             */ 00983000
I02      DS    0H                                                  0477 00984000
*         CALL IDAENDRQ;            /* EXIT TO IDAENDRQ              */ 00985000
         L     @15,@CV01113                                        0477 00986000
         BALR  @14,@15                                             0477 00987000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00988000
         BALR @11,0                                                     00989000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00990000
         USING *,@11                                                    00991000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 00992000
         USING *+4095,R10                                               00993000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 00994000
         LA    R10,4095(@11)                                            00995000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 00996000
         L     R10,=A(@PSTART+4095)                                     00997000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 00998000
         USING @PSTART+4095,R10                                         00999000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01000000
         L     @11,=A(@PSTART)                                          01001000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01002000
         USING @PSTART,@11                                              01003000
*       END I02;                                                   0486 01004000
*       RPLH=RPLTCBPT;              /* RESTORE PLH PTR       @ZA14814*/ 01005000
         L     RPLH,RPLTCBPT(,RRPL)                                0487 01006000
*       RPLTCBPT=0;                 /* CLEANUP               @ZA14814*/ 01007000
         SLR   @15,@15                                             0488 01008000
         ST    @15,RPLTCBPT(,RRPL)                                 0488 01009000
*       RWORK5=PLHWAX;              /* RESTORE IDAWAX BASE           */ 01010000
         L     RWORK5,PLHWAX(,RPLH)                                0489 01011000
*       RWORK1=RRPL;                /* RESTORE POINTER TO INNER RPL  */ 01012000
         LR    RWORK1,RRPL                                         0490 01013000
*       RRPL=WAXURPL;               /* RESTROE POINTER TO USERS RPL  */ 01014000
         L     RRPL,WAXURPL(,RWORK5)                               0491 01015000
*       RPARM1=ACBAMBL;             /* RESTORE POINTER TO AMBL       */ 01016000
         L     @08,RPLDACB(,RRPL)                                  0492 01017000
         L     RPARM1,ACBAMBL(,@08)                                0492 01018000
*       RAMB=AMBLDTA;               /* RESTORE POINTER TO DATA AMB   */ 01019000
         L     RAMB,AMBLDTA(,RPARM1)                               0493 01020000
*       WAXBPLH=0;                  /* DISCONNECT BPLH FROM PLH      */ 01021000
         ST    @15,WAXBPLH(,RWORK5)                                0494 01022000
*       GEN(IDARST14);              /* RESTORE RETURN ADDRESS        */ 01023000
         IDARST14                                                       01024000
*     END;                                                         0496 01025000
*   RESPECIFY                                                      0497 01026000
*     R14 UNRESTRICTED;                                            0497 01027000
*   END RELBASE;                                                   0498 01028000
@EL00009 DS    0H                                                  0498 01029000
@EF00009 DS    0H                                                  0498 01030000
@ER00009 BR    @14                                                 0498 01031000
         EJECT                                                          01032000
*REPOSG:                                                           0499 01033000
*                                                                  0499 01034000
*/********************************************************************/ 01035000
*/* THIS ROUTINE POSITIONS THE PLH TO THE NEXT RECORD AFTER PLHKEY   */ 01036000
*/********************************************************************/ 01037000
*                                                                  0499 01038000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0499 01039000
REPOSG   DS    0H                                                  0500 01040000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01041000
*                                                                  0500 01042000
         IDASVR14                                                       01043000
*   /*****************************************************************/ 01044000
*   /*                                                               */ 01045000
*   /* BUMP THE PLH KEY BY ONE                                       */ 01046000
*   /*                                                               */ 01047000
*   /*****************************************************************/ 01048000
*                                                                  0501 01049000
*   RESPECIFY                                                      0501 01050000
*     RWORK2 RESTRICTED;                                           0501 01051000
*   RESPECIFY                                                      0502 01052000
*     ACHAR BASED(ADDR(PLHKEY(RWORK2)));                           0502 01053000
*   DO RWORK2=AMDKEYLN TO 1 BY-1;   /* LOOP BACK THRU PLHKEY         */ 01054000
         L     @08,AMBDSB(,RAMB)                                   0503 01055000
         LH    RWORK2,AMDKEYLN(,@08)                               0503 01056000
         B     @DE00503                                            0503 01057000
@DL00503 DS    0H                                                  0504 01058000
*     IF ACHAR=XFFX THEN            /* IF CHAR IS 'FF'X              */ 01059000
         L     @08,PLHKEYPT(,RPLH)                                 0504 01060000
         BCTR  @08,0                                               0504 01061000
         LA    @08,PLHKEY(RWORK2,@08)                              0504 01062000
         CLI   ACHAR(@08),255                                      0504 01063000
         BNE   @RF00504                                            0504 01064000
*       ACHAR=0;                    /* SET CHAR TO 0 & BACK UP       */ 01065000
         MVI   ACHAR(@08),X'00'                                    0505 01066000
*     ELSE                          /* IF CHAR IS NOT 'FF'X          */ 01067000
*       DO;                                                        0506 01068000
         B     @RC00504                                            0506 01069000
@RF00504 DS    0H                                                  0507 01070000
*         ACHAR=ACHAR+1;            /* BUMP CHAR                     */ 01071000
         L     @08,PLHKEYPT(,RPLH)                                 0507 01072000
         BCTR  @08,0                                               0507 01073000
         LA    @08,PLHKEY(RWORK2,@08)                              0507 01074000
         LA    @07,1                                               0507 01075000
         SLR   @15,@15                                             0507 01076000
         IC    @15,ACHAR(,@08)                                     0507 01077000
         ALR   @07,@15                                             0507 01078000
         STC   @07,ACHAR(,@08)                                     0507 01079000
*         GOTO BKEYE;               /* GET OUT OF LOOP               */ 01080000
         B     BKEYE                                               0508 01081000
*       END;                                                       0509 01082000
*   END;                            /* BACK UP TO NEXT CHAR IN PLHKEY*/ 01083000
@RC00504 BCTR  RWORK2,0                                            0510 01084000
@DE00503 CL    RWORK2,@CF00054                                     0510 01085000
         BNL   @DL00503                                            0510 01086000
*   RESPECIFY                                                      0511 01087000
*     RWORK2 UNRESTRICTED;                                         0511 01088000
*BKEYE:                                                            0512 01089000
*   CALL GETXRCD;                   /* GET RCD KEY GE                */ 01090000
BKEYE    BAL   @14,GETXRCD                                         0512 01091000
*   WAXXPTR=WAXXPTR-WAXPL;          /* BACK UP PTR                   */ 01092000
         L     @08,WAXXPTR(,RWORK5)                                0513 01093000
         SH    @08,WAXPL(,RWORK5)                                  0513 01094000
         ST    @08,WAXXPTR(,RWORK5)                                0513 01095000
*   WAXPS=OFF;                      /* PLH IS REPOSITIONED           */ 01096000
         NI    WAXPS(RWORK5),B'11011111'                           0514 01097000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01098000
         IDARST14                                                       01099000
*   END REPOSG;                                                    0516 01100000
@EL00010 DS    0H                                                  0516 01101000
@EF00010 DS    0H                                                  0516 01102000
@ER00010 BR    @14                                                 0516 01103000
         EJECT                                                          01104000
*GETXRCD:                                                          0517 01105000
*                                                                  0517 01106000
*/********************************************************************/ 01107000
*/* GET AN AIX RECORD                                                */ 01108000
*/********************************************************************/ 01109000
*                                                                  0517 01110000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0517 01111000
GETXRCD  DS    0H                                                  0518 01112000
*   RESPECIFY                                                      0518 01113000
*     R14 RESTRICTED;                                              0518 01114000
*   RESPECIFY                                                      0519 01115000
*     IFGRPL BASED(RWORK1);                                        0519 01116000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01117000
         IDASVR14                                                       01118000
*   IF AMBPUG=ON THEN               /* IF AIX IN UPGRADE SET         */ 01119000
         TM    AMBPUG(RAMB),B'10000000'                            0521 01120000
         BNO   @RF00521                                            0521 01121000
*     DO;                                                          0522 01122000
*       WAXPUG=ON;                  /* MAKE LOCAL COPY               */ 01123000
         OI    WAXPUG(RWORK5),B'01000000'                          0523 01124000
*       IF WAXSRAB=OFF THEN         /* IF SRA NOT BUILT              */ 01125000
         TM    WAXSRAB(RWORK5),B'10000000'                         0524 01126000
         BNZ   @RF00524                                            0524 01127000
*         WAXSRAL=LENGTH(IDAAIX);   /* SET SMALL NON-ZERO VALUE      */ 01128000
         MVC   WAXSRAL(4,RWORK5),@CF00224                          0525 01129000
*     END;                                                         0526 01130000
*   ELSE                            /* IF AIX NOT IN UPGRADE SET     */ 01131000
*     DO;                                                          0527 01132000
         B     @RC00521                                            0527 01133000
@RF00521 DS    0H                                                  0528 01134000
*       IF WAXSRAB=ON THEN          /* IF SRA BUILT THEN             */ 01135000
         TM    WAXSRAB(RWORK5),B'10000000'                         0528 01136000
         BNO   @RF00528                                            0528 01137000
*         CALL RELSRA;              /* RELEASE SRA                   */ 01138000
         BAL   @14,RELSRA                                          0529 01139000
*     END;                                                         0530 01140000
@RF00528 DS    0H                                                  0531 01141000
*   RPLDACB=RRPL->RPLDACB;          /* POINT TO AIX ACB              */ 01142000
@RC00521 L     @15,RPLDACB(,RRPL)                                  0531 01143000
         ST    @15,RPLDACB(,RWORK1)                                0531 01144000
*   CALL LOADREGS;                  /* LOAD REGS TO PROCESS AIX      */ 01145000
         BAL   @14,LOADREGS                                        0532 01146000
*   CALL SETIRPL;                   /* SET UP INNER RPL              */ 01147000
         BAL   @14,SETIRPL                                         0533 01148000
*   IF WAXPS=ON THEN                /* IF CALL FROM REPOSG           */ 01149000
         TM    WAXPS(RWORK5),B'00100000'                           0534 01150000
         BNO   @RF00534                                            0534 01151000
*     DO;                                                          0535 01152000
*       RPLKGE=ON;                  /* GET KEY GE                    */ 01153000
         OI    RPLKGE(RWORK1),B'00000100'                          0536 01154000
*       RPLARG=ADDR(PLHKEY);        /* SEARCH ARG IN PLH             */ 01155000
         L     @15,PLHKEYPT(,RPLH)                                 0537 01156000
         ST    @15,RPLARG(,RWORK1)                                 0537 01157000
*     END;                                                         0538 01158000
*   RESPECIFY                                                      0539 01159000
*     RWORK2 RESTRICTED;                                           0539 01160000
@RF00534 DS    0H                                                  0540 01161000
*   RWORK2=OFF;                     /* USE RWORK2 AS A SWITCH        */ 01162000
         SLR   RWORK2,RWORK2                                       0540 01163000
*   DO UNTIL RWORK2=ON;             /* LOOP UNTIL RCD READ OR ERROR  */ 01164000
@DL00541 DS    0H                                                  0542 01165000
*     CALL CALLR4;                  /* READ AIX RECORD               */ 01166000
         BAL   @14,CALLR4                                          0542 01167000
*     IF RPLERREG^=0 THEN           /* IF ANY ERROR                  */ 01168000
         CLI   RPLERREG(RWORK1),0                                  0543 01169000
         BE    @RF00543                                            0543 01170000
*       DO;                                                        0544 01171000
*         IF RPLERRCD^=RPLSRLOC THEN/* IF SPANNED RCD WASNT FOUND    */ 01172000
         CLI   RPLERRCD(RWORK1),132                                0545 01173000
         BE    @RF00545                                            0545 01174000
*           DO;                                                    0546 01175000
*             IF RPLERRCD=RPLINBUF THEN/* IF BUFFER TOO SMALL        */ 01176000
         CLI   RPLERRCD(RWORK1),44                                 0547 01177000
         BNE   @RF00547                                            0547 01178000
*               DO;                                                0548 01179000
*                 IF PLHSRINV=OFF THEN/* IF NOT FROM SPANNED RCD     */ 01180000
         TM    PLHSRINV(RPLH),B'00010000'                          0549 01181000
         BNZ   @RF00549                                            0549 01182000
*                   DO;                                            0550 01183000
*                     RPLERRCD=RPLNOVRT;/* NO VIRUAL CORE FOR BUFFER */ 01184000
         MVI   RPLERRCD(RWORK1),X'28'                              0551 01185000
*                     RPLCMPON=RPLAIXER;/* FAILED FOR AIX            */ 01186000
         MVI   RPLCMPON(RWORK1),X'02'                              0552 01187000
*                     GEN(IDARST14);/* RESOTRE RETURN REGISTER       */ 01188000
         IDARST14                                                       01189000
*                     RETURN;       /* EXIT PROCEEDURE               */ 01190000
@EL00011 DS    0H                                                  0554 01191000
@EF00011 DS    0H                                                  0554 01192000
@ER00011 BR    @14                                                 0554 01193000
*                   END;                                           0555 01194000
*                 ELSE              /* IF ERROR FR SPANNED RCD       */ 01195000
*                   DO;                                            0556 01196000
@RF00549 DS    0H                                                  0557 01197000
*                     CALL RELSRA;  /* FREE SRA                      */ 01198000
         BAL   @14,RELSRA                                          0557 01199000
*                     RPLFDBWD=0;   /* ZERO FEEDBACK WORD    @ZA10853*/ 01200000
         SLR   @15,@15                                             0558 01201000
         ST    @15,RPLFDBWD(,RWORK1)                               0558 01202000
*                     RWORK1=MAX(WAXSRAL*2,AMDCINV);/* GET NEW LEN   */ 01203000
         L     RWORK1,WAXSRAL(,RWORK5)                             0559 01204000
         ALR   RWORK1,RWORK1                                       0559 01205000
         L     @15,AMBDSB(,RAMB)                                   0559 01206000
         L     @15,AMDCINV(,@15)                                   0559 01207000
         CR    RWORK1,@15                                          0559 01208000
         BNL   *+6                                                      01209000
         LR    RWORK1,@15                                          0559 01210000
*                     CALL GETSRA;  /* BUILD NEW SRA                 */ 01211000
         BAL   @14,GETSRA                                          0560 01212000
*                     RWORK1=WAXIRPL;/* INNER RPL POINTER    @ZA10853*/ 01213000
         L     RWORK1,WAXIRPL(,RWORK5)                             0561 01214000
*                     IF RWORK1->RPLERREG^=0 THEN/* ERROR    @ZA10853*/ 01215000
         CLI   RPLERREG(RWORK1),0                                  0562 01216000
         BE    @RF00562                                            0562 01217000
*                       DO;         /*                       @ZA10853*/ 01218000
*                         GEN(IDARST14);/* RETURN REGISTER   @ZA10853*/ 01219000
         IDARST14                                                       01220000
*                         RETURN;   /* EXIT GETXRCD          @ZA10853*/ 01221000
         B     @EL00011                                            0565 01222000
*                       END;        /*                       @ZA10853*/ 01223000
*                     RPLLOC=OFF;   /* SET RPL TO MOVE MODE          */ 01224000
@RF00562 NI    RPLLOC(RWORK1),B'01111111'                          0567 01225000
*                     RWORK2=OFF;   /* SET SWITCH TO LOOP            */ 01226000
         SLR   RWORK2,RWORK2                                       0568 01227000
*                   END;                                           0569 01228000
*               END;                                               0570 01229000
*             ELSE                  /* IF ANY OTHER ERROR            */ 01230000
*               DO;                                                0571 01231000
         B     @RC00547                                            0571 01232000
@RF00547 DS    0H                                                  0572 01233000
*                 GEN(IDARST14);    /* RESTORE RETURN ADDRESS        */ 01234000
         IDARST14                                                       01235000
*                 RETURN;           /* EXIT GETXRCD                  */ 01236000
         B     @EL00011                                            0573 01237000
*               END;                                               0574 01238000
*           END;                                                   0575 01239000
*         ELSE                      /* IF SPANNED RECORD WAS FOUND   */ 01240000
*           DO;                                                    0576 01241000
         B     @RC00545                                            0576 01242000
@RF00545 DS    0H                                                  0577 01243000
*             RPLFDBWD=0;           /* ZERO FEEDBACK WORD    @ZA10853*/ 01244000
         SLR   @15,@15                                             0577 01245000
         ST    @15,RPLFDBWD(,RWORK1)                               0577 01246000
*             RWORK1=AMBLXPT->AMBLDTA->AMBDSB->AMDLRECL;/* GET     0578 01247000
*                                      LARGEST RECORD LENGTH         */ 01248000
         L     @15,AMBLXPT(,RPARM1)                                0578 01249000
         L     @15,AMBLDTA(,@15)                                   0578 01250000
         L     @15,AMBDSB(,@15)                                    0578 01251000
         L     RWORK1,AMDLRECL(,@15)                               0578 01252000
*             CALL GETSRA;          /* BUILD SRA                     */ 01253000
         BAL   @14,GETSRA                                          0579 01254000
*             RWORK1=WAXIRPL;       /* INNER RPL POINTER     @ZA10853*/ 01255000
         L     RWORK1,WAXIRPL(,RWORK5)                             0580 01256000
*             IF RWORK1->RPLERREG^=0 THEN/* ERROR            @ZA10853*/ 01257000
         CLI   RPLERREG(RWORK1),0                                  0581 01258000
         BE    @RF00581                                            0581 01259000
*               DO;                 /*                       @ZA10853*/ 01260000
*                 GEN(IDARST14);    /* RETURN REGISTER       @ZA10853*/ 01261000
         IDARST14                                                       01262000
*                 RETURN;           /* EXIT GETXRCD          @ZA10853*/ 01263000
         B     @EL00011                                            0584 01264000
*               END;                /*                       @ZA10853*/ 01265000
*             RPLLOC=OFF;           /* SET RPL TO MOVE MODE          */ 01266000
@RF00581 NI    RPLLOC(RWORK1),B'01111111'                          0586 01267000
*             RWORK2=OFF;           /* SET SWITCH TO LOOP            */ 01268000
         SLR   RWORK2,RWORK2                                       0587 01269000
*           END;                                                   0588 01270000
*       END;                                                       0589 01271000
*     ELSE                          /* NO ERROR FROM AIX READ        */ 01272000
*       RWORK2=ON;                  /* SET RWORK2 TO GET OUT OF LOOP */ 01273000
         B     @RC00543                                            0590 01274000
@RF00543 LA    RWORK2,1                                            0590 01275000
*   END;                                                           0591 01276000
@RC00543 DS    0H                                                  0591 01277000
@DE00541 CL    RWORK2,@CF00055                                     0591 01278000
         BNE   @DL00541                                            0591 01279000
*   RESPECIFY                                                      0592 01280000
*     RWORK2 UNRESTRICTED;                                         0592 01281000
*   RESPECIFY                                                      0593 01282000
*     IDAAIX BASED(WAXRCDA);                                       0593 01283000
*   WAXXPTR=ADDR(AIXKY)+AIXKL;      /* POINT TO FIRST AIX PTR        */ 01284000
         L     @15,WAXRCDA(,RWORK5)                                0594 01285000
         LA    @08,AIXKY(,@15)                                     0594 01286000
         SLR   @07,@07                                             0594 01287000
         IC    @07,AIXKL(,@15)                                     0594 01288000
         ALR   @08,@07                                             0594 01289000
         ST    @08,WAXXPTR(,RWORK5)                                0594 01290000
*   WAXEPTR=WAXRCDA+RPLRLEN;        /* PT TO NEXT BYTE AFTER RCD     */ 01291000
         LR    @08,@15                                             0595 01292000
         AL    @08,RPLRLEN(,RWORK1)                                0595 01293000
         ST    @08,WAXEPTR(,RWORK5)                                0595 01294000
*   WAXPL=AIXPL;                    /* COPY POINTER LENGTH           */ 01295000
         SLR   @08,@08                                             0596 01296000
         IC    @08,AIXPL(,@15)                                     0596 01297000
         STH   @08,WAXPL(,RWORK5)                                  0596 01298000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 01299000
         IDARST14                                                       01300000
*   RESPECIFY                                                      0598 01301000
*     R14 UNRESTRICTED;                                            0598 01302000
*   RESPECIFY                                                      0599 01303000
*     IFGRPL BASED(RRPL);                                          0599 01304000
*   END GETXRCD;                                                   0600 01305000
         B     @EL00011                                            0600 01306000
         EJECT                                                          01307000
*SETIRPL:                                                          0601 01308000
*                                                                  0601 01309000
*/********************************************************************/ 01310000
*/* SET UP INNER RPL TO PROCESS BASE OR AIX                          */ 01311000
*/********************************************************************/ 01312000
*                                                                  0601 01313000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0601 01314000
SETIRPL  DS    0H                                                  0602 01315000
*   RESPECIFY                                                      0602 01316000
*     R14 RESTRICTED;                                              0602 01317000
*   RESPECIFY                                                      0603 01318000
*     RWORK2 RESTRICTED;                                           0603 01319000
*   RPLFDBWD=0;                     /* ZERO FEEDBACK FIELD           */ 01320000
         SLR   @15,@15                                             0604 01321000
         ST    @15,RPLFDBWD(,RRPL)                                 0604 01322000
*   RWORK2=WAXURPL;                 /* LOAD PTR TO USERS RPL         */ 01323000
         L     RWORK2,WAXURPL(,RWORK5)                             0605 01324000
*   IF RPLDACB->ACBAMBL->AMBLBASE=OFF THEN/* IF PROC AIX             */ 01325000
         L     @15,RPLDACB(,RRPL)                                  0606 01326000
         L     @15,ACBAMBL(,@15)                                   0606 01327000
         TM    AMBLBASE(@15),B'00010000'                           0606 01328000
         BNZ   @RF00606                                            0606 01329000
*     DO;                                                          0607 01330000
*       RPLOPT1=RWORK2->RPLOPT1;    /* COPY USERS OPT1               */ 01331000
         MVC   RPLOPT1(1,RRPL),RPLOPT1(RWORK2)                     0608 01332000
*       RPLOPT2=RWORK2->RPLOPT2;    /* COPY USERS OPT2               */ 01333000
         MVC   RPLOPT2(1,RRPL),RPLOPT2(RWORK2)                     0609 01334000
*       RPLUPD=OFF;                 /* UPDATE MUST BE OFF            */ 01335000
         NI    RPLUPD(RRPL),B'11111101'                            0610 01336000
*       RPLECBSW=OFF;               /* USE INNER ECB                 */ 01337000
         NI    RPLECBSW(RRPL),B'11111110'                          0611 01338000
*       RPLECB=RPLECB&&RPLECB;      /* ZERO ECB                      */ 01339000
         L     @15,RPLECB(,RRPL)                                   0612 01340000
         LR    @08,@15                                             0612 01341000
         XR    @08,@15                                             0612 01342000
         ST    @08,RPLECB(,RRPL)                                   0612 01343000
*       RPLREQ=RPLGET;              /* FUNCTION IS GET FOR AIX       */ 01344000
         MVI   RPLREQ(RRPL),X'00'                                  0613 01345000
*       RPLWAITX=OFF;               /* NO UPAD FOR WAITX/AIX @ZA07549*/ 01346000
         NI    RPLWAITX(RRPL),B'11111011'                          0614 01347000
*       IF RWORK2->RPLREQ=RPLPOINT THEN/* IF USER REQUESTED POINT    */ 01348000
         CLI   RPLREQ(RWORK2),3                                    0615 01349000
         BNE   @RF00615                                            0615 01350000
*         DO;                                                      0616 01351000
*           RPLOPT1=OFF;            /* SET ALL OPT1 BITS OFF         */ 01352000
         MVI   RPLOPT1(RRPL),B'00000000'                           0617 01353000
*           RPLOPT2=OFF;            /* SET ALL OPT2 BITS OFF         */ 01354000
         MVI   RPLOPT2(RRPL),B'00000000'                           0618 01355000
*           RPLKEY=ON;              /* READ BY KEY                   */ 01356000
*           RPLNSP=ON;              /* NOTE STRING POSITION          */ 01357000
         OI    RPLKEY(RRPL),B'10000001'                            0620 01358000
*           RPLDIR=ON;              /* DO GET DIRECT                 */ 01359000
         OI    RPLDIR(RRPL),B'01000000'                            0621 01360000
*           RPLARG=RWORK2->RPLARG;  /* GET PTR TO SEARCH ARG         */ 01361000
         L     @15,RPLARG(,RWORK2)                                 0622 01362000
         ST    @15,RPLARG(,RRPL)                                   0622 01363000
*           IF RWORK2->RPLBWD=ON THEN/* IF WAS WANTS BACKWARD        */ 01364000
         TM    RPLBWD(RWORK2),B'00010000'                          0623 01365000
         BNO   @RF00623                                            0623 01366000
*             DO;                                                  0624 01367000
*               RPLBWD=ON;          /* SET BWD ON                    */ 01368000
         OI    RPLBWD(RRPL),B'00010000'                            0625 01369000
*               IF RWORK2->RPLLRD=ON THEN/* IF USER WANTS LAST RCD   */ 01370000
         TM    RPLLRD(RWORK2),B'00001000'                          0626 01371000
         BNO   @RF00626                                            0626 01372000
*                 RPLLRD=ON;        /* SET LRD ON                    */ 01373000
         OI    RPLLRD(RRPL),B'00001000'                            0627 01374000
*             END;                                                 0628 01375000
@RF00626 DS    0H                                                  0629 01376000
*           IF RWORK2->RPLGEN=ON THEN/* IF USER GEN KEY      @ZA07169*/ 01377000
@RF00623 TM    RPLGEN(RWORK2),B'00000010'                          0629 01378000
         BNO   @RF00629                                            0629 01379000
*             RPLGEN=ON;            /* SET GEN KEY INNER RPL @ZA07169*/ 01380000
         OI    RPLGEN(RRPL),B'00000010'                            0630 01381000
*           IF RWORK2->RPLKGE=ON THEN/* IF USER KGE          @ZA07169*/ 01382000
@RF00629 TM    RPLKGE(RWORK2),B'00000100'                          0631 01383000
         BNO   @RF00631                                            0631 01384000
*             RPLKGE=ON;            /* SET KGE INNER RPL     @ZA07169*/ 01385000
         OI    RPLKGE(RRPL),B'00000100'                            0632 01386000
*         END;                                                     0633 01387000
*       ELSE                        /* IF USER NOT REQUESTED POINT   */ 01388000
*         IF RWORK2->RPLDIR=ON|     /* IF USER WANTS DIRECT REQ      */ 01389000
*             RWORK2->RPLSKP=ON THEN/* IF USER WANTS SKP SEQ         */ 01390000
         B     @RC00615                                            0634 01391000
@RF00615 TM    RPLDIR(RWORK2),B'01010000'                          0634 01392000
         BZ    @RF00634                                            0634 01393000
*           RPLARG=RWORK2->RPLARG;  /* COPY PTR TO USERS ARG         */ 01394000
         L     @15,RPLARG(,RWORK2)                                 0635 01395000
         ST    @15,RPLARG(,RRPL)                                   0635 01396000
*       IF WAXPUG=ON THEN           /* IF AIX IN UPGRADE SET         */ 01397000
@RF00634 DS    0H                                                  0636 01398000
@RC00615 TM    WAXPUG(RWORK5),B'01000000'                          0636 01399000
         BNO   @RF00636                                            0636 01400000
*         DO;                                                      0637 01401000
*           RPLLOC=OFF;             /* USE MOVE MODE                 */ 01402000
         NI    RPLLOC(RRPL),B'01111111'                            0638 01403000
*           RPLNSP=ON;              /* BUT NOTE STRING POSITION      */ 01404000
         OI    RPLNSP(RRPL),B'00000001'                            0639 01405000
*           RPLAREA=WAXSRAA;        /* SET PTR TO RECORD AREA        */ 01406000
         L     @15,WAXSRAA(,RWORK5)                                0640 01407000
         ST    @15,RPLAREA(,RRPL)                                  0640 01408000
*           WAXRCDA=WAXSRAA;        /* SET PTR TO RECORD             */ 01409000
         ST    @15,WAXRCDA(,RWORK5)                                0641 01410000
*           RPLBUFL=WAXSRAL;        /* SET BUFFER LENGTH             */ 01411000
         L     @15,WAXSRAL(,RWORK5)                                0642 01412000
         ST    @15,RPLBUFL(,RRPL)                                  0642 01413000
*         END;                                                     0643 01414000
*       ELSE                        /* IF AIX NOT IN UPGRADE SET     */ 01415000
*         DO;                                                      0644 01416000
         B     @RC00636                                            0644 01417000
@RF00636 DS    0H                                                  0645 01418000
*           RPLLOC=ON;              /* USE LOCATE MODE               */ 01419000
         OI    RPLLOC(RRPL),B'10000000'                            0645 01420000
*           RPLAREA=ADDR(WAXRCDA);  /* SET BUFFER ADDR               */ 01421000
         LA    @15,WAXRCDA(,RWORK5)                                0646 01422000
         ST    @15,RPLAREA(,RRPL)                                  0646 01423000
*           RPLBUFL=LENGTH(WAXRCDA);/* SET BUFFER LENGTH             */ 01424000
         MVC   RPLBUFL(4,RRPL),@CF00068                            0647 01425000
*         END;                                                     0648 01426000
*       IF RPLGEN=ON THEN           /* IF GENERIC KEY                */ 01427000
@RC00636 TM    RPLGEN(RRPL),B'00000010'                            0649 01428000
         BNO   @RF00649                                            0649 01429000
*         RPLKEYL=RWORK2->RPLKEYL;  /* COPY GENERIC KEY LENGTH       */ 01430000
         LH    @15,RPLKEYL(,RWORK2)                                0650 01431000
         STH   @15,RPLKEYL(,RRPL)                                  0650 01432000
*     END;                                                         0651 01433000
*   ELSE                            /* IF PROCESSING BASE            */ 01434000
*     DO;                                                          0652 01435000
         B     @RC00606                                            0652 01436000
@RF00606 DS    0H                                                  0653 01437000
*       RPLOPT1=OFF;                /* ZERO OPT1                     */ 01438000
         MVI   RPLOPT1(RRPL),B'00000000'                           0653 01439000
*       RPLOPT2=OFF;                /* ZERO OPT2                     */ 01440000
         MVI   RPLOPT2(RRPL),B'00000000'                           0654 01441000
*       IF RWORK2->RPLLOC=ON THEN   /* IF USER WANTS LOC             */ 01442000
         TM    RPLLOC(RWORK2),B'10000000'                          0655 01443000
         BNO   @RF00655                                            0655 01444000
*         RPLLOC=ON;                /* SET LOC IN INNER RPL          */ 01445000
         OI    RPLLOC(RRPL),B'10000000'                            0656 01446000
*       IF RWORK2->RPLUPD=ON THEN   /* IF USER WANTS UPDATE          */ 01447000
@RF00655 TM    RPLUPD(RWORK2),B'00000010'                          0657 01448000
         BNO   @RF00657                                            0657 01449000
*         RPLUPD=ON;                /* SET UPDATE                    */ 01450000
         OI    RPLUPD(RRPL),B'00000010'                            0658 01451000
*       RPLREQ=RWORK2->RPLREQ;      /* COPY USERS REQUEST TYPE       */ 01452000
@RF00657 IC    @15,RPLREQ(,RWORK2)                                 0659 01453000
         STC   @15,RPLREQ(,RRPL)                                   0659 01454000
*       IF RPLREQ=RPLPUT&           /* IF USER REQUESTED PUT         */ 01455000
*           RWORK2->RPLDIR=OFF THEN /* IF NOT DIRECT, ALSO           */ 01456000
         CLI   RPLREQ(RRPL),1                                      0660 01457000
         BNE   @RF00660                                            0660 01458000
         TM    RPLDIR(RWORK2),B'01000000'                          0660 01459000
         BNZ   @RF00660                                            0660 01460000
*         DO;                                                      0661 01461000
*           IF RPLUPD=ON THEN       /* IF UPDATE, ALSO               */ 01462000
         TM    RPLUPD(RRPL),B'00000010'                            0662 01463000
         BNO   @RF00662                                            0662 01464000
*             RPLSEQ=ON;            /* DO NOT FORCE BUFFER WRITE     */ 01465000
         OI    RPLSEQ(RRPL),B'00100000'                            0663 01466000
*           ELSE                    /* IF NONE OF THE ABOVE          */ 01467000
*             DO;                                                  0664 01468000
         B     @RC00662                                            0664 01469000
@RF00662 DS    0H                                                  0665 01470000
*               RPLNSP=ON;          /* TRY NOT TO FORCE BUFFER WRITE */ 01471000
         OI    RPLNSP(RRPL),B'00000001'                            0665 01472000
*               RPLDIR=ON;          /* PROCESS BASE DIRECT           */ 01473000
         OI    RPLDIR(RRPL),B'01000000'                            0666 01474000
*             END;                                                 0667 01475000
*         END;                                                     0668 01476000
@RC00662 DS    0H                                                  0669 01477000
*       IF AMBLNUM=ESDSNUM1 THEN    /* IF ESDS                       */ 01478000
@RF00660 CLC   AMBLNUM(2,RPARM1),@CH00054                          0669 01479000
         BNE   @RF00669                                            0669 01480000
*         RPLADR=ON;                /* DO ADDRESSED PROCESSING       */ 01481000
         OI    RPLADR(RRPL),B'01000000'                            0670 01482000
*       ELSE                        /* ELSE KSDS                     */ 01483000
*         RPLKEY=ON;                /* BASE PROC IS BY KEY           */ 01484000
         B     @RC00669                                            0671 01485000
@RF00669 OI    RPLKEY(RRPL),B'10000000'                            0671 01486000
*       RPLECBSW=ON;                /* USE EXTERNAL ECB              */ 01487000
@RC00669 OI    RPLECBSW(RRPL),B'00000001'                          0672 01488000
*       IF RWORK2->RPLECBSW=ON THEN /* IF USER HAS EXTERNAL ECB      */ 01489000
         TM    RPLECBSW(RWORK2),B'00000001'                        0673 01490000
         BNO   @RF00673                                            0673 01491000
*         RPLECB=RWORK2->RPLECB;    /* POINT TO USERS EXTERNAL ECB   */ 01492000
         L     @15,RPLECB(,RWORK2)                                 0674 01493000
         ST    @15,RPLECB(,RRPL)                                   0674 01494000
*       ELSE                        /* IF USER HAS INTERNAL ECB      */ 01495000
*         RPLECB=ADDR(RWORK2->RPLECB);/* POINT TO INTERNAL ECB       */ 01496000
         B     @RC00673                                            0675 01497000
@RF00673 LA    @15,RPLECB(,RWORK2)                                 0675 01498000
         ST    @15,RPLECB(,RRPL)                                   0675 01499000
*       RPLAREA=RWORK2->RPLAREA;    /* COPY USERS AREA               */ 01500000
@RC00673 L     @15,RPLAREA(,RWORK2)                                0676 01501000
         ST    @15,RPLAREA(,RRPL)                                  0676 01502000
*       RPLBUFL=RWORK2->RPLBUFL;    /* COPY USERS BUFFER LENGTH      */ 01503000
         L     @15,RPLBUFL(,RWORK2)                                0677 01504000
         ST    @15,RPLBUFL(,RRPL)                                  0677 01505000
*       RPLRLEN=RWORK2->RPLRLEN;    /* COPY USERS BUFFER LENGTH      */ 01506000
         L     @15,RPLRLEN(,RWORK2)                                0678 01507000
         ST    @15,RPLRLEN(,RRPL)                                  0678 01508000
*       RPLARG=WAXXPTR;             /* POINT TO SEARCH ARG           */ 01509000
         L     @15,WAXXPTR(,RWORK5)                                0679 01510000
         ST    @15,RPLARG(,RRPL)                                   0679 01511000
*     END;                                                         0680 01512000
*   IF RWORK2->RPLASY=ON THEN       /* IF USERS RPLASY ON    @ZA29260*/ 01513000
@RC00606 TM    RPLASY(RWORK2),B'00001000'                          0681 01514000
         BNO   @RF00681                                            0681 01515000
*     RPLASY=ON;                    /* SET INNER RPLASY ON   @ZA29260*/ 01516000
         OI    RPLASY(RRPL),B'00001000'                            0682 01517000
*   RPLEMLEN=RWORK2->RPLEMLEN;      /* COPY USERS ERROR MSG AREA LEN */ 01518000
@RF00681 LH    @15,RPLEMLEN(,RWORK2)                               0683 01519000
         N     @15,@CF01315                                        0683 01520000
         STH   @15,RPLEMLEN(,RRPL)                                 0683 01521000
*   RPLERMSA=RWORK2->RPLERMSA;      /* COPY USER ERROR MSG AREA ADDR */ 01522000
         L     @15,RPLERMSA(,RWORK2)                               0684 01523000
         ST    @15,RPLERMSA(,RRPL)                                 0684 01524000
*   RESPECIFY                                                      0685 01525000
*     RWORK2 UNRESTRICTED;                                         0685 01526000
*   RESPECIFY                                                      0686 01527000
*     R14 UNRESTRICTED;                                            0686 01528000
*   END SETIRPL;                                                   0687 01529000
@EL00012 DS    0H                                                  0687 01530000
@EF00012 DS    0H                                                  0687 01531000
@ER00012 BR    @14                                                 0687 01532000
         EJECT                                                          01533000
*LOADREGS:                                                         0688 01534000
*                                                                  0688 01535000
*/********************************************************************/ 01536000
*/* LOAD REGISTERS FOR CALL TO IDA019R4                              */ 01537000
*/********************************************************************/ 01538000
*                                                                  0688 01539000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0688 01540000
LOADREGS DS    0H                                                  0689 01541000
*   RESPECIFY                                                      0689 01542000
*     R14 RESTRICTED;                                              0689 01543000
*   RRPL=RWORK1;                    /* POINT RPL REG TO INNER RPL    */ 01544000
         LR    RRPL,RWORK1                                         0690 01545000
*   RPARM1=ACBAMBL;                 /* LOAD POINTER TO AMBL          */ 01546000
         L     @15,RPLDACB(,RRPL)                                  0691 01547000
         L     RPARM1,ACBAMBL(,@15)                                0691 01548000
*   RESPECIFY                                                      0692 01549000
*     IDAAMBL BASED(RPARM1);                                       0692 01550000
*   RAMB=AMBLDTA;                   /* LOAD POINTER TO DATA AMB      */ 01551000
         L     RAMB,AMBLDTA(,RPARM1)                               0693 01552000
*   IF AMBLBASE=ON THEN             /* IF PROC BASE                  */ 01553000
         TM    AMBLBASE(RPARM1),B'00010000'                        0694 01554000
         BNO   @RF00694                                            0694 01555000
*     DO;                                                          0695 01556000
*       IF WAXBPLH=0 THEN           /* IF NO BASE PLH CONNECTED      */ 01557000
         SLR   @15,@15                                             0696 01558000
         C     @15,WAXBPLH(,RWORK5)                                0696 01559000
         BNE   @RF00696                                            0696 01560000
*         DO;                                                      0697 01561000
*           WAXXXXX3=RPLH;          /* SAVE PTR TO PATH PLH          */ 01562000
         ST    RPLH,WAXXXXX3(,RWORK5)                              0698 01563000
*           RPLPLHPT=0;             /* ZERO PLH PTR IN RPL           */ 01564000
         ST    @15,RPLPLHPT(,RRPL)                                 0699 01565000
*           GEN(IDASVR14);          /* SAVE RETURN ADDRESS           */ 01566000
         IDASVR14                                                       01567000
*I03:                                                              0701 01568000
*           DO;                     /* IDACALL(IDAXGPLH)             */ 01569000
I03      DS    0H                                                  0702 01570000
*             CALL IDAXGPLH;        /* EXIT TO IDAXGPLH              */ 01571000
         L     @15,@CV01117                                        0702 01572000
         BALR  @14,@15                                             0702 01573000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 01574000
         BALR @11,0                                                     01575000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 01576000
         USING *,@11                                                    01577000
*             GEN(USING *+4095,R10);/* ESTABLISH SECOND BASE         */ 01578000
         USING *+4095,R10                                               01579000
*             GEN(LA    R10,4095(@11));/* LOAD SECOND BASE           */ 01580000
         LA    R10,4095(@11)                                            01581000
*             GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE  */ 01582000
         L     R10,=A(@PSTART+4095)                                     01583000
*             GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE   */ 01584000
         USING @PSTART+4095,R10                                         01585000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 01586000
         L     @11,=A(@PSTART)                                          01587000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 01588000
         USING @PSTART,@11                                              01589000
*           END I03;                /* GET PLH FROM BASE             */ 01590000
*           RPARM1=ACBAMBL;         /* RESTORE AMBL POINTER          */ 01591000
         L     @15,RPLDACB(,RRPL)                                  0712 01592000
         L     RPARM1,ACBAMBL(,@15)                                0712 01593000
*           WAXBPLH=RPLH;           /* SAVE NEW BASE PLH ADDR        */ 01594000
         ST    RPLH,WAXBPLH(,RWORK5)                               0713 01595000
*           RPLH=WAXXXXX3;          /* RESTORE OLD PLH               */ 01596000
         L     RPLH,WAXXXXX3(,RWORK5)                              0714 01597000
*           GEN(IDARST14);          /* RESTORE RETURN ADDRESS        */ 01598000
         IDARST14                                                       01599000
*           RWORK1=WAXIRPL;         /* RESTORE INNER RPL POINTER     */ 01600000
         L     RWORK1,WAXIRPL(,RWORK5)                             0716 01601000
*           IF WAXBPLH=0 THEN       /* IF NO PLH WAS AVAILABLE       */ 01602000
         L     @15,WAXBPLH(,RWORK5)                                0717 01603000
         LTR   @15,@15                                             0717 01604000
         BNZ   @RF00717                                            0717 01605000
*             DO;                                                  0718 01606000
*               RRPL=WAXURPL;       /* RESTORE PTR TO USERS RPL      */ 01607000
         L     RRPL,WAXURPL(,RWORK5)                               0719 01608000
*               RPARM1=ACBAMBL->AMBLXPT;/* POINT TO USERS AMBL       */ 01609000
         L     @15,RPLDACB(,RRPL)                                  0720 01610000
         L     @15,ACBAMBL(,@15)                                   0720 01611000
         L     RPARM1,AMBLXPT(,@15)                                0720 01612000
*               RAMB=AMBLDTA;       /* RESTORE AMBL POINTER          */ 01613000
         L     RAMB,AMBLDTA(,RPARM1)                               0721 01614000
*               RWORK1->RPLERRCD=RPLNOPLH;/* SET ERROR CODE          */ 01615000
         MVI   RPLERRCD(RWORK1),X'40'                              0722 01616000
*               RWORK1->RPLERREG='08'X;/* SET ERROR REGISTER         */ 01617000
         MVI   RPLERREG(RWORK1),X'08'                              0723 01618000
*               RWORK1->RPLCMPON=RPLBASER;/* SET ERROR FROM BASE     */ 01619000
         MVI   RPLCMPON(RWORK1),X'00'                              0724 01620000
*               RETURN CODE(RPLERREG);/* PROCEED TO EXIT             */ 01621000
         SLR   @15,@15                                             0725 01622000
         IC    @15,RPLERREG(,RRPL)                                 0725 01623000
@EL00013 DS    0H                                                  0725 01624000
@EF00013 DS    0H                                                  0725 01625000
@ER00013 BR    @14                                                 0725 01626000
*             END;                                                 0726 01627000
*           RPLH=WAXBPLH;           /* LOAD BASE PLH                 */ 01628000
@RF00717 L     RPLH,WAXBPLH(,RWORK5)                               0727 01629000
*           PLHXPLH=WAXXXXX3;       /* SET BASE PLH PTR BACK         */ 01630000
         L     @15,WAXXXXX3(,RWORK5)                               0728 01631000
         ST    @15,PLHXPLH(,RPLH)                                  0728 01632000
*         END;                                                     0729 01633000
*       ELSE                        /* IF BASE PLH IS AVAILABLE      */ 01634000
*         RPLH=WAXBPLH;             /* LOAD POINTER TO PLH           */ 01635000
         B     @RC00696                                            0730 01636000
@RF00696 L     RPLH,WAXBPLH(,RWORK5)                               0730 01637000
*     END;                                                         0731 01638000
@RC00696 DS    0H                                                  0732 01639000
*   RESPECIFY                                                      0732 01640000
*     IFGRPL BASED(RRPL);                                          0732 01641000
@RF00694 DS    0H                                                  0733 01642000
*   RWORK1->RPLPLHPT=ADDR(IDAPLH);  /* SET POINTER TO PLH IN RPL     */ 01643000
         ST    RPLH,RPLPLHPT(,RWORK1)                              0733 01644000
*   RESPECIFY                                                      0734 01645000
*     IDAAMBL BASED(ACBAMBL);                                      0734 01646000
*   RESPECIFY                                                      0735 01647000
*     R14 UNRESTRICTED;                                            0735 01648000
*   END LOADREGS;                                                  0736 01649000
         B     @EL00013                                            0736 01650000
         EJECT                                                          01651000
*RELSRA:                                                           0737 01652000
*                                                                  0737 01653000
*/********************************************************************/ 01654000
*/* RELEASE SAVED AIX RECORD AREA                                    */ 01655000
*/********************************************************************/ 01656000
*                                                                  0737 01657000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0737 01658000
RELSRA   DS    0H                                                  0738 01659000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01660000
         IDASVR14                                                       01661000
*   RWORK1=WAXSRAA;                 /* POINT TO START OF SRA         */ 01662000
         L     RWORK1,WAXSRAA(,RWORK5)                             0739 01663000
*   RESPECIFY                                                      0740 01664000
*     RWORK2 RESTRICTED;                                           0740 01665000
*   RWORK2=WAXSRAL;                 /* SET LENGTH OF SRA             */ 01666000
         L     RWORK2,WAXSRAL(,RWORK5)                             0741 01667000
*   CALL RELWS;                     /* RELEASE THE WORK SPACE        */ 01668000
         BAL   @14,RELWS                                           0742 01669000
*   RESPECIFY                                                      0743 01670000
*     RWORK2 UNRESTRICTED;                                         0743 01671000
*   RWORK5=PLHWAX;                  /* RESTORE IDAWAX BASE           */ 01672000
         L     RWORK5,PLHWAX(,RPLH)                                0744 01673000
*   RWORK1=WAXIRPL;                 /* RESTORE INNER RPL BASE        */ 01674000
         L     RWORK1,WAXIRPL(,RWORK5)                             0745 01675000
*   WAXSRAB=OFF;                    /* RESET FLAG                    */ 01676000
         NI    WAXSRAB(RWORK5),B'01111111'                         0746 01677000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01678000
         IDARST14                                                       01679000
*   END RELSRA;                                                    0748 01680000
@EL00014 DS    0H                                                  0748 01681000
@EF00014 DS    0H                                                  0748 01682000
@ER00014 BR    @14                                                 0748 01683000
         EJECT                                                          01684000
*GETSRA:                                                           0749 01685000
*                                                                  0749 01686000
*/********************************************************************/ 01687000
*/* BUILD SAVED AIX RECORD AREA                                      */ 01688000
*/********************************************************************/ 01689000
*                                                                  0749 01690000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0749 01691000
GETSRA   DS    0H                                                  0750 01692000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01693000
         IDASVR14                                                       01694000
*   WAXSRAL=RWORK1;                 /* SAVE LENGTH OF SRA            */ 01695000
         ST    RWORK1,WAXSRAL(,RWORK5)                             0751 01696000
*   RESPECIFY                                                      0752 01697000
*     R15 RESTRICTED;                                              0752 01698000
*   CALL GETWS;                     /* GET CORE FOR LARGEST RECORD   */ 01699000
         BAL   @14,GETWS                                           0753 01700000
*   RWORK5=PLHWAX;                  /* RELOAD BASE FOR IDAWAX        */ 01701000
         L     RWORK5,PLHWAX(,RPLH)                                0754 01702000
*   WAXSRAA=RWORK1;                 /* SAVE ADDR OF SPANNED RCD AREA */ 01703000
         ST    RWORK1,WAXSRAA(,RWORK5)                             0755 01704000
*   WAXRCDA=RWORK1;                 /* SAVE RECORD ADDRESS           */ 01705000
         ST    RWORK1,WAXRCDA(,RWORK5)                             0756 01706000
*   RPLAREA=RWORK1;                 /* SET INPUT ADDRESS             */ 01707000
         ST    RWORK1,RPLAREA(,RRPL)                               0757 01708000
*   RPLBUFL=WAXSRAL;                /* SET INPUT AREA LENGTH         */ 01709000
         L     @14,WAXSRAL(,RWORK5)                                0758 01710000
         ST    @14,RPLBUFL(,RRPL)                                  0758 01711000
*   RWORK1=WAXIRPL;                 /* RESTORE RPL ADDRESS           */ 01712000
         L     RWORK1,WAXIRPL(,RWORK5)                             0759 01713000
*   RRPL=WAXURPL;                   /* RRPL PTS USER RPL     @ZA25153*/ 01714000
         L     RRPL,WAXURPL(,RWORK5)                               0760 01715000
*   IF R15^=0 THEN                  /* IF NO CORE                    */ 01716000
         LTR   R15,R15                                             0761 01717000
         BZ    @RF00761                                            0761 01718000
*     DO;                                                          0762 01719000
*       IF RWORK1->RPLERRCD=0 THEN  /* IF FIRST ERROR        @ZA10853*/ 01720000
         CLI   RPLERRCD(RWORK1),0                                  0763 01721000
         BNE   @RF00763                                            0763 01722000
*         DO;                                                      0764 01723000
*           RWORK1->RPLERRCD=RPLNOVRT;/* NO CORE             @ZA10853*/ 01724000
         MVI   RPLERRCD(RWORK1),X'28'                              0765 01725000
*           RWORK1->RPLERREG='08'X; /* LOGICAL ERROR         @ZA10853*/ 01726000
         MVI   RPLERREG(RWORK1),X'08'                              0766 01727000
*         END;                      /*                       @ZA10853*/ 01728000
*       RWORK1->RPLCMPON=RPLAIXER;  /* WHILE PROCESSING AIX  @ZA10853*/ 01729000
@RF00763 MVI   RPLCMPON(RWORK1),X'02'                              0768 01730000
*       GEN(IDARST14);              /* RETURN REGISTER       @ZA10853*/ 01731000
         IDARST14                                                       01732000
*       RETURN CODE(RWORK1->RPLERREG);/* EXIT WITH ERROR     @ZA10853*/ 01733000
         SLR   @15,@15                                             0770 01734000
         IC    @15,RPLERREG(,RWORK1)                               0770 01735000
@EL00015 DS    0H                                                  0770 01736000
@EF00015 DS    0H                                                  0770 01737000
@ER00015 BR    @14                                                 0770 01738000
*     END;                                                         0771 01739000
*   RESPECIFY                                                      0772 01740000
*     R15 UNRESTRICTED;                                            0772 01741000
@RF00761 DS    0H                                                  0773 01742000
*   WAXSRAB=ON;                     /* INDICATE SRA BUILT            */ 01743000
         OI    WAXSRAB(RWORK5),B'10000000'                         0773 01744000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01745000
         IDARST14                                                       01746000
*   END GETSRA;                                                    0775 01747000
         B     @EL00015                                            0775 01748000
         EJECT                                                          01749000
*CALLR4:                                                           0776 01750000
*                                                                  0776 01751000
*/********************************************************************/ 01752000
*/*  INTERFACE WITH IDA019R4                                         */ 01753000
*/********************************************************************/ 01754000
*                                                                  0776 01755000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0776 01756000
CALLR4   DS    0H                                                  0777 01757000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01758000
         IDASVR14                                                       01759000
*I04:                                                              0778 01760000
*   DO;                             /* IDACALL(IDA019R4)             */ 01761000
I04      DS    0H                                                  0779 01762000
*     CALL IDA019R4;                /* EXIT TO IDA019R4              */ 01763000
         L     @15,@CV01118                                        0779 01764000
         BALR  @14,@15                                             0779 01765000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01766000
         BALR @11,0                                                     01767000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01768000
         USING *,@11                                                    01769000
*     GEN(USING *+4095,R10);        /* ESTABLISH SECOND BASE         */ 01770000
         USING *+4095,R10                                               01771000
*     GEN(LA    R10,4095(@11));     /* LOAD SECOND BASE              */ 01772000
         LA    R10,4095(@11)                                            01773000
*     GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 01774000
         L     R10,=A(@PSTART+4095)                                     01775000
*     GEN(USING @PSTART+4095,R10);  /* ESTABLISH SECOND BASE         */ 01776000
         USING @PSTART+4095,R10                                         01777000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01778000
         L     @11,=A(@PSTART)                                          01779000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01780000
         USING @PSTART,@11                                              01781000
*   END I04;                        /* CALL IDA019R4                 */ 01782000
*                                                                  0788 01783000
*   /*****************************************************************/ 01784000
*   /*                                                               */ 01785000
*   /* RESTORE REGISTERS FOR FUTHER PROCESSING                       */ 01786000
*   /*                                                               */ 01787000
*   /*****************************************************************/ 01788000
*                                                                  0789 01789000
*   RESPECIFY                                                      0789 01790000
*     R14 RESTRICTED;                                              0789 01791000
*   IF RPLDACB->ACBAMBL->AMBLPATH=OFF THEN/* IF PROCESSING BASE ACB  */ 01792000
         L     @15,RPLDACB(,RRPL)                                  0790 01793000
         L     @15,ACBAMBL(,@15)                                   0790 01794000
         TM    AMBLPATH(@15),B'10000000'                           0790 01795000
         BNZ   @RF00790                                            0790 01796000
*     DO;                           /* START CODE UNIQUE TO BASE     */ 01797000
*                                                                  0791 01798000
*       /*************************************************************/ 01799000
*       /*                                                           */ 01800000
*       /* FORCE OUT WRITES TO BASE TO MINIMIZE SEEK TIME SINCE IT IS*/ 01801000
*       /* PROBABLE THAT THE NEXT REQUEST TO THE BASE WILL BE IN A   */ 01802000
*       /* DIFFERENT CONTROL AREA.                                   */ 01803000
*       /*                                                           */ 01804000
*       /*************************************************************/ 01805000
*                                                                  0792 01806000
*       RBUFC=PLHDBUFC;             /* POINT TO DATA BUFFER          */ 01807000
         L     RBUFC,PLHDBUFC(,RPLH)                               0792 01808000
*       IF RBUFC^=0&                /* IF BUFFER IS ASSIGNED AND     */ 01809000
*           BUFCMW=ON&              /* IF IT HAS BEEN CHANGED AND    */ 01810000
*           AMBDFR=OFF THEN         /* IF I/O IS NOT DEFERRED THEN   */ 01811000
         LTR   RBUFC,RBUFC                                         0793 01812000
         BZ    @RF00793                                            0793 01813000
         TM    BUFCMW(RBUFC),B'10000000'                           0793 01814000
         BNO   @RF00793                                            0793 01815000
         TM    AMBDFR(RAMB),B'00001000'                            0793 01816000
         BNZ   @RF00793                                            0793 01817000
*I05:                                                              0794 01818000
*         DO;                       /* IDACALL(IDAWRBFR)             */ 01819000
I05      DS    0H                                                  0795 01820000
*           CALL IDAWRBFR;          /* EXIT TO IDAWRBFR              */ 01821000
         L     @15,@CV01216                                        0795 01822000
         BALR  @14,@15                                             0795 01823000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01824000
         BALR @11,0                                                     01825000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01826000
         USING *,@11                                                    01827000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 01828000
         USING *+4095,R10                                               01829000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 01830000
         LA    R10,4095(@11)                                            01831000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 01832000
         L     R10,=A(@PSTART+4095)                                     01833000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 01834000
         USING @PSTART+4095,R10                                         01835000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01836000
         L     @11,=A(@PSTART)                                          01837000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01838000
         USING @PSTART,@11                                              01839000
*         END I05;                  /* WRITE BUFFER CONTENTS         */ 01840000
*       GEN(IDARST14);              /* RESTORE RETURN REGISTER       */ 01841000
@RF00793 DS    0H                                                  0805 01842000
         IDARST14                                                       01843000
*       RPLH=PLHXPLH;               /* RESTORE POINTER TO PATH PLH   */ 01844000
         L     RPLH,PLHXPLH(,RPLH)                                 0806 01845000
*     END;                          /* END CODE UNIQUE TO BASE       */ 01846000
*   ELSE                            /* NOT BASE ACCESS               */ 01847000
*     GEN(IDARST14);                /* RESTORE RETURN REGISTER       */ 01848000
         B     @RC00790                                            0808 01849000
@RF00790 DS    0H                                                  0808 01850000
         IDARST14                                                       01851000
*   RWORK5=PLHWAX;                  /* RESTORE IDAWAX BASE           */ 01852000
@RC00790 L     RWORK5,PLHWAX(,RPLH)                                0809 01853000
*   RWORK1=RRPL;                    /* RESTORE POINTER TO INNER RPL  */ 01854000
         LR    RWORK1,RRPL                                         0810 01855000
*   RRPL=WAXURPL;                   /* RESTROE POINTER TO USERS RPL  */ 01856000
         L     RRPL,WAXURPL(,RWORK5)                               0811 01857000
*   RPARM1=ACBAMBL;                 /* RESTORE POINTER TO AMBL       */ 01858000
         L     @15,RPLDACB(,RRPL)                                  0812 01859000
         L     @15,ACBAMBL(,@15)                                   0812 01860000
         LR    RPARM1,@15                                          0812 01861000
*   RAMB=AMBLDTA;                   /* RESTORE POINTER TO DATA AMB   */ 01862000
         L     RAMB,AMBLDTA(,@15)                                  0813 01863000
*   END CALLR4;                                                    0814 01864000
@EL00016 DS    0H                                                  0814 01865000
@EF00016 DS    0H                                                  0814 01866000
@ER00016 BR    @14                                                 0814 01867000
*   RESPECIFY                                                      0815 01868000
*     R14 UNRESTRICTED;                                            0815 01869000
         EJECT                                                          01870000
*IDARXBD:                                                          0816 01871000
*                                                                  0816 01872000
*/********************************************************************/ 01873000
*/* ENTRY POINT - FROM IDA019R4 TO EXPAND RPLBUFL                    */ 01874000
*/*   INPUT = NEW RECORD LENGTH IN RPLRLEN                           */ 01875000
*/*   OUTPUT = IF SUCCESSFUL, RWORK1 HAS NEW RPLBUFL                 */ 01876000
*/*            IF UNSUCCESSFUL, RWORK1 HAS ZERO                      */ 01877000
*/********************************************************************/ 01878000
*                                                                  0816 01879000
*   ENTRY;                          /* CALL FROM R4 - EXPAND RPLBUFL */ 01880000
@EP00816 DS    0H                                                  0817 01881000
*   GEN(IDASVR14);                  /* SAVE RETURN ADDRESS           */ 01882000
         IDASVR14                                                       01883000
*   RWORK5=PLHWAX;                  /* LOAD BASE FOR WAX             */ 01884000
         L     RWORK5,PLHWAX(,RPLH)                                0818 01885000
*   IF WAXSRAB=ON THEN              /* IF SRA ALREADY BUILD          */ 01886000
         TM    WAXSRAB(RWORK5),B'10000000'                         0819 01887000
         BNO   @RF00819                                            0819 01888000
*     CALL RELSRA;                  /* FREE CURRENT SRA              */ 01889000
         BAL   @14,RELSRA                                          0820 01890000
*   RWORK1=RPLRLEN;                 /* RELOAD NEW RECORD LENGTH      */ 01891000
@RF00819 L     RWORK1,RPLRLEN(,RRPL)                               0821 01892000
*   CALL GETSRA;                    /* BUILD NEW SRA                 */ 01893000
         BAL   @14,GETSRA                                          0822 01894000
*   IF WAXSRAB=OFF THEN             /* IF SRA WAS NOT BUILT          */ 01895000
         TM    WAXSRAB(RWORK5),B'10000000'                         0823 01896000
         BNZ   @RF00823                                            0823 01897000
*     RWORK1=0;                     /* SAY FAIL TO IDA019R4          */ 01898000
         SLR   RWORK1,RWORK1                                       0824 01899000
*   ELSE                            /* IF SRA WAS BUILT              */ 01900000
*     DO;                                                          0825 01901000
         B     @RC00823                                            0825 01902000
@RF00823 DS    0H                                                  0826 01903000
*       RRPL=WAXIRPL;               /* RESTORE INNER RPL POINTER     */ 01904000
         L     RRPL,WAXIRPL(,RWORK5)                               0826 01905000
*       RBUFC=WAXSRAA;              /* LOAD REGISTER FOR IDA019R4    */ 01906000
         L     RBUFC,WAXSRAA(,RWORK5)                              0827 01907000
*       RWORK1=WAXSRAL;             /* LOAD LEN OF SRA FOR IDA019R4  */ 01908000
         L     RWORK1,WAXSRAL(,RWORK5)                             0828 01909000
*     END;                                                         0829 01910000
*   RESPECIFY                                                      0830 01911000
*     RWORK2 RESTRICTED;                                           0830 01912000
@RC00823 DS    0H                                                  0831 01913000
*   RWORK2=PLHRECP;                 /* RELOAD RECORD PTR             */ 01914000
         L     RWORK2,PLHRECP(,RPLH)                               0831 01915000
*   RESPECIFY                                                      0832 01916000
*     RWORK2 UNRESTRICTED;                                         0832 01917000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 01918000
         IDARST14                                                       01919000
*   RETURN;                         /* RETURN TO IDA019R4            */ 01920000
         B     @EL00001                                            0834 01921000
         EJECT                                                          01922000
*IDAGETWS:                                                         0835 01923000
*                                                                  0835 01924000
*/********************************************************************/ 01925000
*/*  EXTERNAL ROUTINE TO GET WORK SPACE                              */ 01926000
*/*   INPUT = LENGTH OF SPACE REQUIRED IN RWORK1                     */ 01927000
*/*   OUTPUT = IF SUCCESSFUL, R15 IS ZERO                            */ 01928000
*/*                           RWORK1 HAS ADDRESS OF SPACE            */ 01929000
*/*            IF UNSUCCESSFUL, R15 IS NON-ZERO                      */ 01930000
*/********************************************************************/ 01931000
*                                                                  0835 01932000
*   ENTRY;                          /* EXTERNAL ENTRY                */ 01933000
@EP00835 DS    0H                                                  0836 01934000
*GETWS:                                                            0836 01935000
*   ;                               /* INTERNAL ENTRY                */ 01936000
GETWS    DS    0H                                                  0837 01937000
*   RESPECIFY                                                      0837 01938000
*    (RWORK1,                                                      0837 01939000
*     RWORK2,                                                      0837 01940000
*     RWORK3,                                                      0837 01941000
*     RWORK4) RESTRICTED;                                          0837 01942000
*   GEN REFS(PLHRETO,PLHRET1)(IDASVR14);/* SAVE RETURN ADDRESS       */ 01943000
         IDASVR14                                                       01944000
*   PLHAMB=RAMB;                    /* SAVE POINTER TO AMB           */ 01945000
         ST    RAMB,PLHAMB(,RPLH)                                  0839 01946000
*   RESPECIFY                                                      0840 01947000
*     IDAAMB BASED(PLHAMB);                                        0840 01948000
*   RAMB=(RWORK1+LENGTH(RFLD)+7)&(-8);/* ROUND UP STARTING LENGTH    */ 01949000
         LA    RAMB,11                                             0841 01950000
         ALR   RAMB,RWORK1                                         0841 01951000
         N     RAMB,@CF01227                                       0841 01952000
*   RWORK1=WSHDOCHN;                /* GET FIRST SLOT IN ORDERED CHN */ 01953000
         L     @15,PLHAMB(,RPLH)                                   0842 01954000
         L     @15,AMBWSHD(,@15)                                   0842 01955000
         L     RWORK1,WSHDOCHN(,@15)                               0842 01956000
*   RESPECIFY                                                      0843 01957000
*     IDAWSHD BASED(RWORK1);                                       0843 01958000
*   DO WHILE RWORK1^=0;             /* LOOP THRU ORDERED CHN         */ 01959000
         B     @DE00844                                            0844 01960000
@DL00844 DS    0H                                                  0845 01961000
*     IF WSHDSFNO=OFF THEN          /* IF ANY CORE IN SLOT           */ 01962000
         TM    WSHDSFNO(RWORK1),B'10000000'                        0845 01963000
         BNZ   @RF00845                                            0845 01964000
*       DO;                         /* YES, --                       */ 01965000
*         RESPECIFY                                                0847 01966000
*          (RWORK3,                                                0847 01967000
*           RWORK4) UNRESTRICTED;                                  0847 01968000
*         RWORK2=(RAMB+WSHDSBV-1)/WSHDSBV;/* BITS FOR CORE NEEDED    */ 01969000
         LH    @08,WSHDSBV(,RWORK1)                                0848 01970000
         LR    RWORK2,RAMB                                         0848 01971000
         ALR   RWORK2,@08                                          0848 01972000
         BCTR  RWORK2,0                                            0848 01973000
         SRDA  RWORK2,32                                           0848 01974000
         DR    RWORK2,@08                                          0848 01975000
         LR    RWORK2,@07                                          0848 01976000
*         RESPECIFY                                                0849 01977000
*          (RWORK3,                                                0849 01978000
*           RWORK4) RESTRICTED;                                    0849 01979000
*         IF RWORK2<='08'X THEN     /* CORE NEEDED FIT IN SLOT       */ 01980000
         CL    RWORK2,@CF01131                                     0850 01981000
         BH    @RF00850                                            0850 01982000
*           DO;                     /* YES, --                       */ 01983000
*             RWORK4=STMASK(RWORK2);/* LOAD STARTING MASK            */ 01984000
         SLR   RWORK4,RWORK4                                       0852 01985000
         IC    RWORK4,STMASK-1(RWORK2)                             0852 01986000
*             RWORK2=9-RWORK2;      /* LOAD LOOP COUNT               */ 01987000
         LA    @15,9                                               0853 01988000
         SLR   @15,RWORK2                                          0853 01989000
         LR    RWORK2,@15                                          0853 01990000
*             RWORK3=RWORK4;        /* COPY STARTING MASK            */ 01991000
*                                                                  0854 01992000
         LR    RWORK3,RWORK4                                       0854 01993000
*             /*******************************************************/ 01994000
*             /*                                                     */ 01995000
*             /* TRY TO FIND CONTIGUOUS BIT '0'B IN WSHDSBM          */ 01996000
*             /*                                                     */ 01997000
*             /*******************************************************/ 01998000
*                                                                  0855 01999000
*             DO RWORK2=RWORK2 TO 1 BY-1;                          0855 02000000
         B     @DE00855                                            0855 02001000
@DL00855 DS    0H                                                  0856 02002000
*               GEN;                                               0856 02003000
         L     R14,WSHDSBM-3(RWORK1)    WORD W/ BIT MASK     @ZA04712   02004000
         EX    RWORK3,TM                ISSUE TEST UNDER MASK           02005000
         BNZ   ARND1                    BR IF SOME ONES UNDER MASK      02006000
         LR    R15,R14                  COPY WORD                       02007000
         OR    R15,RWORK3               OR BITS REPRESENTING CORE       02008000
         CS    R14,R15,WSHDSBM-3(RWORK1) TRY TO SET BITS IN MASK        02009000
         BE    ALCORE                   BR OUT IF CORE ALLOCATED        02010000
ARND1    SRL   RWORK3,1                 SHIFT MASK                      02011000
*             END;                                                 0857 02012000
         BCTR  RWORK2,0                                            0857 02013000
@DE00855 CL    RWORK2,@CF00054                                     0857 02014000
         BNL   @DL00855                                            0857 02015000
*           END;                                                   0858 02016000
*       END;                                                       0859 02017000
@RF00850 DS    0H                                                  0860 02018000
*     RWORK1=WSHDSONX;              /* LOAD ADDR NEXT SLOT           */ 02019000
@RF00845 L     RWORK1,WSHDSONX(,RWORK1)                            0860 02020000
*   END;                                                           0861 02021000
*                                                                  0861 02022000
@DE00844 LTR   RWORK1,RWORK1                                       0861 02023000
         BNZ   @DL00844                                            0861 02024000
*   /*****************************************************************/ 02025000
*   /*                                                               */ 02026000
*   /* FIND UNUSED SLOT                                              */ 02027000
*   /*                                                               */ 02028000
*   /*****************************************************************/ 02029000
*                                                                  0862 02030000
*   RWORK1=AMBWSHD;                 /* LOAD PTR TO FIRST IDAWSHD     */ 02031000
         L     @15,PLHAMB(,RPLH)                                   0862 02032000
         L     RWORK1,AMBWSHD(,@15)                                0862 02033000
*   DO UNTIL RWORK1=0;              /* LOOP THRU WSHD CHAIN          */ 02034000
@DL00863 DS    0H                                                  0864 02035000
*     RWORK2=ADDR(IDAWSHD)+WSHDNUS*LENGTH(WSHDSLT);/* PT TO 1ST    0864 02036000
*                                      UNUSED SLOT                   */ 02037000
         LH    @15,WSHDNUS(,RWORK1)                                0864 02038000
         LR    RWORK2,@15                                          0864 02039000
         SLA   RWORK2,4                                            0864 02040000
         ALR   RWORK2,RWORK1                                       0864 02041000
*     DO RWORK3=WSHDNUS+1 TO DIM(WSHDSLT);/* LOOP THRU UNUSED SLOTS  */ 02042000
         AL    @15,@CF00054                                        0865 02043000
         LR    RWORK3,@15                                          0865 02044000
         B     @DE00865                                            0865 02045000
@DL00865 DS    0H                                                  0866 02046000
*       TS(RWORK2->WSHDSFLG);       /* TRY TO GET SLOT               */ 02047000
         TS    WSHDSFLG(RWORK2)                                    0866 02048000
*       BC(8,ARND5);                /* BRANCH OUT IF SUCCESSFUL      */ 02049000
         BC    8,ARND5                                             0867 02050000
*       RWORK2=RWORK2+LENGTH(WSHDSLT);/* POINT TO NEXT SLOT          */ 02051000
         AL    RWORK2,@CF00088                                     0868 02052000
*     END;                                                         0869 02053000
         AL    RWORK3,@CF00054                                     0869 02054000
@DE00865 C     RWORK3,@CF00068                                     0869 02055000
         BNH   @DL00865                                            0869 02056000
*     RWORK1=WSHDNEXT;              /* POINT TO NEXT IDAWSHD         */ 02057000
         L     @15,WSHDNEXT-1(,RWORK1)                             0870 02058000
         LA    @15,0(,@15)                                         0870 02059000
         LR    RWORK1,@15                                          0870 02060000
*   END;                                                           0871 02061000
@DE00863 LTR   RWORK1,RWORK1                                       0871 02062000
         BNZ   @DL00863                                            0871 02063000
*                                                                  0872 02064000
*   /*****************************************************************/ 02065000
*   /*                                                               */ 02066000
*   /* FIND WORK AREA TO DO GETMAIN FOR NEW IDAWSHD                  */ 02067000
*   /*                                                               */ 02068000
*   /*****************************************************************/ 02069000
*                                                                  0872 02070000
*   IF AMBGSR=ON|                   /* IF RUNNING UNDER GSR OR       */ 02071000
*       AMBSCRA=ON|AMBUCRA=ON|      /* IF A CATLG,                   */ 02072000
*       AMBCAT=ON THEN              /*                               */ 02073000
         L     @15,PLHAMB(,RPLH)                                   0872 02074000
         TM    AMBGSR(@15),B'00100000'                             0872 02075000
         BO    @RT00872                                            0872 02076000
         TM    AMBSCRA(@15),B'00011100'                            0872 02077000
         BZ    @RF00872                                            0872 02078000
@RT00872 DS    0H                                                  0873 02079000
*     R15=0;                        /* NO NEED TO TEST TCB           */ 02080000
         SLR   R15,R15                                             0873 02081000
*   ELSE                            /* IF NOT GSR                    */ 02082000
*     DO;                                                          0874 02083000
         B     @RC00872                                            0874 02084000
@RF00872 DS    0H                                                  0875 02085000
*       RWORK3=RAMB;                /* SAVE CONTENTS FOR OF RAMB     */ 02086000
         LR    RWORK3,RAMB                                         0875 02087000
*       RAMB=ADDR(IDAAMB);          /* LOAD PTR TO AMB               */ 02088000
         L     RAMB,PLHAMB(,RPLH)                                  0876 02089000
*       RESPECIFY                                                  0877 02090000
*         R15 RESTRICTED;                                          0877 02091000
*I06:                                                              0878 02092000
*       DO;                         /* IDACALL(IDAPTCBV)             */ 02093000
I06      DS    0H                                                  0879 02094000
*         CALL IDAPTCBV;            /* EXIT TO IDAPTCBV              */ 02095000
         L     @15,@CV01116                                        0879 02096000
         BALR  @14,@15                                             0879 02097000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02098000
         BALR @11,0                                                     02099000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02100000
         USING *,@11                                                    02101000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 02102000
         USING *+4095,R10                                               02103000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 02104000
         LA    R10,4095(@11)                                            02105000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 02106000
         L     R10,=A(@PSTART+4095)                                     02107000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 02108000
         USING @PSTART+4095,R10                                         02109000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02110000
         L     @11,=A(@PSTART)                                          02111000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02112000
         USING @PSTART,@11                                              02113000
*       END I06;                    /* ANY TCB PROBLEM?              */ 02114000
*       RAMB=RWORK3;                /* RESTORE CONTENTS OF RAMB      */ 02115000
         LR    RAMB,RWORK3                                         0889 02116000
*     END;                                                         0890 02117000
*   IF R15=0 THEN                   /* IF NO ERROR                   */ 02118000
@RC00872 LTR   R15,R15                                             0891 02119000
         BNZ   @RF00891                                            0891 02120000
*     DO;                                                          0892 02121000
*       RESPECIFY                                                  0893 02122000
*         R15 UNRESTRICTED;                                        0893 02123000
*FINDHWA:                                                          0894 02124000
*       RWORK1=AMBWSHD;             /* LOAD POINTER TO FIRST IDAWSHD */ 02125000
FINDHWA  L     @15,PLHAMB(,RPLH)                                   0894 02126000
         L     RWORK1,AMBWSHD(,@15)                                0894 02127000
*       DO UNTIL RWORK1=0;          /* LOOP THRU IDAWSHD CHAIN       */ 02128000
@DL00895 DS    0H                                                  0896 02129000
*         TS(WSHDGMTB);             /* TRY TO GET GETMAIN WORK AREA  */ 02130000
         TS    WSHDGMTB(RWORK1)                                    0896 02131000
*         BC(8,ARND3);              /* BRANCH OUT IF SUCCESSFUL      */ 02132000
         BC    8,ARND3                                             0897 02133000
*         RWORK1=WSHDNEXT;          /* POINT TO NEXT IDAWSHD         */ 02134000
         L     @15,WSHDNEXT-1(,RWORK1)                             0898 02135000
         LA    @15,0(,@15)                                         0898 02136000
         LR    RWORK1,@15                                          0898 02137000
*       END;                                                       0899 02138000
*                                                                  0899 02139000
@DE00895 LTR   RWORK1,RWORK1                                       0899 02140000
         BNZ   @DL00895                                            0899 02141000
*       /*************************************************************/ 02142000
*       /*                                                           */ 02143000
*       /* DEFER REQUEST                                             */ 02144000
*       /*                                                           */ 02145000
*       /*************************************************************/ 02146000
*                                                                  0900 02147000
*       RWORK1=AMBWSHD;             /* LOAD POINTER TO FIRST WSHD    */ 02148000
         L     @15,PLHAMB(,RPLH)                                   0900 02149000
         L     RWORK1,AMBWSHD(,@15)                                0900 02150000
*       PLHDRRSC=ADDR(WSHDGMTB);    /* POINT TO TEST BYTE            */ 02151000
         LA    @14,WSHDGMTB(,RWORK1)                               0901 02152000
         ST    @14,PLHDRRSC(,RPLH)                                 0901 02153000
*       PLHDRMSK='80'X;             /* SET DEFER REQUEST MASK        */ 02154000
         MVI   PLHDRMSK(RPLH),X'80'                                0902 02155000
*       RESPECIFY                                                  0903 02156000
*         RWORK0 RESTRICTED;                                       0903 02157000
*       RWORK0=GENRES;              /* SET CODE FOR GENERAL RESOURCE */ 02158000
         LA    RWORK0,16                                           0904 02159000
*       RWORK4=RAMB;                /* SAVE STARTING LENGTH          */ 02160000
         LR    RWORK4,RAMB                                         0905 02161000
*       RAMB=PLHAMB;                /* RESTORE POINTER TO AMB        */ 02162000
         LR    RAMB,@15                                            0906 02163000
*       RRPL=PLHCRPL;               /* RESTORE POINTER TO CURRENT RPL*/ 02164000
         L     RRPL,PLHCRPL(,RPLH)                                 0907 02165000
*I07:                                                              0908 02166000
*       DO;                         /* IDACALL(IDADRQ)               */ 02167000
I07      DS    0H                                                  0909 02168000
*         CALL IDADRQ;              /* EXIT TO IDADRQ                */ 02169000
         L     @15,@CV01112                                        0909 02170000
         BALR  @14,@15                                             0909 02171000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02172000
         BALR @11,0                                                     02173000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02174000
         USING *,@11                                                    02175000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 02176000
         USING *+4095,R10                                               02177000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 02178000
         LA    R10,4095(@11)                                            02179000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 02180000
         L     R10,=A(@PSTART+4095)                                     02181000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 02182000
         USING @PSTART+4095,R10                                         02183000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02184000
         L     @11,=A(@PSTART)                                          02185000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02186000
         USING @PSTART,@11                                              02187000
*       END I07;                    /* DEFER REQUEST                 */ 02188000
*       RAMB=RWORK4;                /* RESTORE STARTING LENGTH       */ 02189000
         LR    RAMB,RWORK4                                         0919 02190000
*       RESPECIFY                                                  0920 02191000
*         RWORK0 UNRESTRICTED;                                     0920 02192000
*       GOTO FINDHWA;               /* LOOP UNTIL WORK AREA IS FOUND */ 02193000
         B     FINDHWA                                             0921 02194000
*ARND3:                                                            0922 02195000
*       IF AMBGSR=ON THEN           /* IF RUNNING UNDER GSR          */ 02196000
ARND3    L     @15,PLHAMB(,RPLH)                                   0922 02197000
         TM    AMBGSR(@15),B'00100000'                             0922 02198000
         BNO   @RF00922                                            0922 02199000
*         RWORK4=GSRPOOL;           /* SET SUBPOOL FOR GSR           */ 02200000
         LA    RWORK4,241                                          0923 02201000
*       ELSE                        /* IF NOT GSR                    */ 02202000
*         RWORK4=USERPOOL;          /* LOAD SUBPOOL                  */ 02203000
         B     @RC00922                                            0924 02204000
@RF00922 SLR   RWORK4,RWORK4                                       0924 02205000
*       RWORK3=ADDR(WSHDGMRA);      /* POINT TO RESULT AREA          */ 02206000
@RC00922 LA    RWORK3,WSHDGMRA(,RWORK1)                            0925 02207000
*       RESPECIFY                                                  0926 02208000
*        (RWORK0,                                                  0926 02209000
*         R1,                                                      0926 02210000
*         R15) RESTRICTED;                                         0926 02211000
*       RWORK0=LENGTH(IDAWSHD);     /* LOAD LENGTH OF IDAWSHD        */ 02212000
         LA    RWORK0,92                                           0927 02213000
*       R1=ADDR(WSHDGMWA);          /* POINT TO GETMAIN WORK AREA    */ 02214000
         LA    R1,WSHDGMWA(,RWORK1)                                0928 02215000
*       GEN(GETMAIN EC,LV=(0),A=(RWORK3),SP=(RWORK4),MF=(E,(1)));  0929 02216000
         GETMAIN EC,LV=(0),A=(RWORK3),SP=(RWORK4),MF=(E,(1))            02217000
*       IF R15^=0 THEN              /* IF ANY ERROR                  */ 02218000
         LTR   R15,R15                                             0930 02219000
         BNZ   @RT00930                                            0930 02220000
*         GOTO WSEXIT;              /* EXIT IDAGETWS                 */ 02221000
*       RWORK2=WSHDGMRA;            /* LOAD RESULT ADDRESS           */ 02222000
         L     RWORK2,WSHDGMRA(,RWORK1)                            0932 02223000
*       WSHDGMTB=0;                 /* RELEASE WORK AREA             */ 02224000
         MVI   WSHDGMTB(RWORK1),X'00'                              0933 02225000
*       RWORK1=RWORK2;              /* LOAD BASE WITH RESULT ADDRESS */ 02226000
         LR    RWORK1,RWORK2                                       0934 02227000
*       RESPECIFY                                                  0935 02228000
*        (RWORK0,                                                  0935 02229000
*         R1,                                                      0935 02230000
*         R15) UNRESTRICTED;                                       0935 02231000
*     END;                                                         0936 02232000
         EJECT                                                          02233000
*   ELSE                            /* HERE FOR TCB PROBLEM          */ 02234000
*                                                                  0937 02235000
*     /***************************************************************/ 02236000
*     /*                                                             */ 02237000
*     /* THERE EXISTS A TCB CONFLICT                                 */ 02238000
*     /*                                                             */ 02239000
*     /***************************************************************/ 02240000
*                                                                  0937 02241000
*     IF R15='08'X THEN             /* IF UNABLE TO CONTINUE         */ 02242000
         B     @RC00891                                            0937 02243000
@RF00891 C     R15,@CF01131                                        0937 02244000
         BE    @RT00937                                            0937 02245000
*       GOTO WSEXIT;                /* EXIT IDAGETWS                 */ 02246000
*     ELSE                          /* MUST BE RUNNING UNDER SUBTASK */ 02247000
*       DO;                                                        0939 02248000
*         RPARM1=RRPL;              /* COPY PTR TO RPL               */ 02249000
         LR    RPARM1,RRPL                                         0940 02250000
*         RWORK3=RAMB;              /* SAVE CONTENTS OF RAMB         */ 02251000
         LR    RWORK3,RAMB                                         0941 02252000
*         RAMB=ADDR(IDAAMB);        /* LOAD PTR TO AMB               */ 02253000
         L     RAMB,PLHAMB(,RPLH)                                  0942 02254000
*I08:                                                              0943 02255000
*         DO;                       /* IDACALL(IDAPGETM)             */ 02256000
I08      DS    0H                                                  0944 02257000
*           CALL IDAPGETM;          /* EXIT TO IDAPGETM              */ 02258000
         L     @15,@CV01115                                        0944 02259000
         BALR  @14,@15                                             0944 02260000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02261000
         BALR @11,0                                                     02262000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02263000
         USING *,@11                                                    02264000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 02265000
         USING *+4095,R10                                               02266000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 02267000
         LA    R10,4095(@11)                                            02268000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 02269000
         L     R10,=A(@PSTART+4095)                                     02270000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 02271000
         USING @PSTART+4095,R10                                         02272000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02273000
         L     @11,=A(@PSTART)                                          02274000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02275000
         USING @PSTART,@11                                              02276000
*         END I08;                  /* GET BLP                       */ 02277000
*         RAMB=RWORK3;              /* RESTORE CONTENTS OF RAMB      */ 02278000
         LR    RAMB,RWORK3                                         0954 02279000
*         RESPECIFY                                                0955 02280000
*           IDABLPRM BASED(R1);                                    0955 02281000
*         IF R1=0 THEN              /* IF GETMAIN FAILED             */ 02282000
         LTR   R1,R1                                               0956 02283000
         BNZ   @RF00956                                            0956 02284000
*           RETURN CODE(4) TO WSEXIT;/* EXIT GETWS                   */ 02285000
         LA    @14,WSEXIT                                          0957 02286000
         LA    @15,4                                               0957 02287000
         BR    @14                                                 0957 02288000
*         BLPGREQ=ON;               /* INDICATE GETMAIN REQUEST      */ 02289000
@RF00956 OI    BLPGREQ(R1),B'10000000'                             0958 02290000
*         BLPGSZ=LENGTH(IDAWSHD);   /* INDICATE CORE NEEDED          */ 02291000
         MVC   BLPGSZ(3,R1),@CF00281+1                             0959 02292000
*         BLPGSP=SVC0POOL;          /* GET JOB STEP POOL             */ 02293000
         MVI   BLPGSP(R1),X'FA'                                    0960 02294000
*         RWORK2=ADDR(IDABLPRM);    /* SAVE POINTER TO WORK AREA     */ 02295000
         LR    RWORK2,R1                                           0961 02296000
*         R1=ADDR(BLPOCODE);        /* POINT TO DUMMY ACB            */ 02297000
         LA    @00,BLPOCODE(,R1)                                   0962 02298000
         LR    R1,@00                                              0962 02299000
*         RESPECIFY                                                0963 02300000
*           R15 RESTRICTED;                                        0963 02301000
*         SVC(19);                  /* GET JOB STEP CORE             */ 02302000
         SVC   19                                                  0964 02303000
*         RWORK3=R15;               /* SAVE RETURN CODE              */ 02304000
         LR    RWORK3,R15                                          0965 02305000
*         RESPECIFY                                                0966 02306000
*           R15 UNRESTRICTED;                                      0966 02307000
*         R1=RWORK2;                /* POINT TO WORK AREA            */ 02308000
         LR    R1,RWORK2                                           0967 02309000
*         RWORK1=BLPGAD;            /* SAVE RESULT ADDRESS           */ 02310000
         L     RWORK1,BLPGAD-1(,R1)                                0968 02311000
         LA    RWORK1,0(,RWORK1)                                   0968 02312000
*I09:                                                              0969 02313000
*         DO;                       /* IDACALL(IDAPFREE)             */ 02314000
I09      DS    0H                                                  0970 02315000
*           CALL IDAPFREE;          /* EXIT TO IDAPFREE              */ 02316000
         L     @15,@CV01114                                        0970 02317000
         BALR  @14,@15                                             0970 02318000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02319000
         BALR @11,0                                                     02320000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02321000
         USING *,@11                                                    02322000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 02323000
         USING *+4095,R10                                               02324000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 02325000
         LA    R10,4095(@11)                                            02326000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 02327000
         L     R10,=A(@PSTART+4095)                                     02328000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 02329000
         USING @PSTART+4095,R10                                         02330000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02331000
         L     @11,=A(@PSTART)                                          02332000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02333000
         USING @PSTART,@11                                              02334000
*         END I09;                  /* FREE WORK AREA                */ 02335000
*         IF RWORK3^=0 THEN         /* IF ANY ERROR                  */ 02336000
         LTR   RWORK3,RWORK3                                       0980 02337000
         BZ    @RF00980                                            0980 02338000
*           RETURN CODE(4) TO WSEXIT;/* EXIT GETWS                   */ 02339000
         LA    @14,WSEXIT                                          0981 02340000
         LA    @15,4                                               0981 02341000
         BR    @14                                                 0981 02342000
*       END;                                                       0982 02343000
@RF00980 DS    0H                                                  0983 02344000
         EJECT                                                          02345000
*                                                                  0983 02346000
*   /*****************************************************************/ 02347000
*   /*                                                               */ 02348000
*   /* INITIALIZE NEW IDAWSHD                                        */ 02349000
*   /*                                                               */ 02350000
*   /*****************************************************************/ 02351000
*                                                                  0983 02352000
*   IDAWSHD=IDAWSHD&&IDAWSHD;       /* ZERO OUT NEW CORE             */ 02353000
@RC00891 XC    IDAWSHD(92,RWORK1),IDAWSHD(RWORK1)                  0983 02354000
*   WSHDID='44'X;                   /* SET ID                        */ 02355000
         MVI   WSHDID(RWORK1),X'44'                                0984 02356000
*   WSHDLEN=LENGTH(IDAWSHD);        /* SET BLOCK LENGTH              */ 02357000
         MVC   WSHDLEN(2,RWORK1),@CH00281                          0985 02358000
*   IF AMBGSR=ON THEN               /* IF RUNNING UNDER GSR          */ 02359000
         L     @15,PLHAMB(,RPLH)                                   0986 02360000
         TM    AMBGSR(@15),B'00100000'                             0986 02361000
         BNO   @RF00986                                            0986 02362000
*     WSHDPOOL=GSRPOOL;             /* SET GSR SUBPOOL               */ 02363000
         MVI   WSHDPOOL(RWORK1),X'F1'                              0987 02364000
*   ELSE                            /* IF NOT GSR                    */ 02365000
*     WSHDPOOL=SVC0POOL;            /* SET SUBPOOL                   */ 02366000
         B     @RC00986                                            0988 02367000
@RF00986 MVI   WSHDPOOL(RWORK1),X'FA'                              0988 02368000
*   WSHDSFLG='FF'X;                 /* RESERVE FIRST SLOT            */ 02369000
*                                                                  0989 02370000
@RC00986 MVI   WSHDSFLG(RWORK1),X'FF'                              0989 02371000
*   /*****************************************************************/ 02372000
*   /*                                                               */ 02373000
*   /* ADD IDAWSHD TO END OF IDAWSHD CHAIN                           */ 02374000
*   /*                                                               */ 02375000
*   /*****************************************************************/ 02376000
*                                                                  0990 02377000
*   RWORK2=AMBWSHD;                 /* LOAD POINTER TO FIRST IDAWSHD */ 02378000
         L     @15,PLHAMB(,RPLH)                                   0990 02379000
         L     RWORK2,AMBWSHD(,@15)                                0990 02380000
*ARND4:                                                            0991 02381000
*   RWORK3=0;                       /* ZERO RWORK3 FOR MODEL         */ 02382000
ARND4    SLR   RWORK3,RWORK3                                       0991 02383000
*   DO WHILE RWORK2->WSHDNEXT^=RWORK3;/* LOOK FOR LAST WSHD          */ 02384000
         B     @DE00992                                            0992 02385000
@DL00992 DS    0H                                                  0993 02386000
*     RWORK2=RWORK2->WSHDNEXT;      /* LOAD POINTER TO NEXT IDAWSHD  */ 02387000
         L     @00,WSHDNEXT-1(,RWORK2)                             0993 02388000
         ICM   @00,8,@CB01316                                      0993 02389000
         LR    RWORK2,@00                                          0993 02390000
*   END;                                                           0994 02391000
@DE00992 L     @00,WSHDNEXT-1(,RWORK2)                             0994 02392000
         ICM   @00,8,@CB01316                                      0994 02393000
         CR    RWORK3,@00                                          0994 02394000
         BNE   @DL00992                                            0994 02395000
*   CS(RWORK3,RWORK1,RWORK2->WSHDACHN);/* TRY TO ADD TO CHAIN        */ 02396000
         CS    RWORK3,@05,WSHDACHN(RWORK2)                         0995 02397000
*   BC(4,ARND4);                    /* BRANCH IF FAIL                */ 02398000
         BC    4,ARND4                                             0996 02399000
*   RWORK2=RWORK1;                  /* RWORK2 MUST BE BASE FOR SLOT  */ 02400000
*                                                                  0997 02401000
         LR    RWORK2,RWORK1                                       0997 02402000
*   /*****************************************************************/ 02403000
*   /*                                                               */ 02404000
*   /* BUMP NUMBER OF USED SLOTS (WSHDNUS). RWORK1 POINTS TO IDAWSHD.*/ 02405000
*   /* RWORK2 POINTS TO SLOT.                                        */ 02406000
*   /*                                                               */ 02407000
*   /*****************************************************************/ 02408000
*                                                                  0998 02409000
*ARND5:                                                            0998 02410000
*   GEN;                                                           0998 02411000
ARND5    DS    0H                                                  0998 02412000
         L     RWORK3,WSHDNUS-2(RWORK1) LOAD WORD WITH WSHDNUS          02413000
         LA    RWORK4,1(RWORK3)        BUMP WSHDNUS                     02414000
         CS    RWORK3,RWORK4,WSHDNUS-2(RWORK1) SWAP IN NEW WSHDNUS      02415000
         BNE   ARND5                   BRANCH IF FAIL TO SWAP           02416000
         EJECT                                                          02417000
*   IF AMBGSR=ON|                   /* IF RUNNING UNDER GSR OR       */ 02418000
*       AMBSCRA=ON|AMBUCRA=ON|      /* IF A CATLG,                   */ 02419000
*       AMBCAT=ON THEN              /*                               */ 02420000
         L     @15,PLHAMB(,RPLH)                                   0999 02421000
         TM    AMBGSR(@15),B'00100000'                             0999 02422000
         BO    @RT00999                                            0999 02423000
         TM    AMBSCRA(@15),B'00011100'                            0999 02424000
         BZ    @RF00999                                            0999 02425000
@RT00999 DS    0H                                                  1000 02426000
*     R15=0;                        /* FORCE ZERO RETURN CODE        */ 02427000
         SLR   R15,R15                                             1000 02428000
*   ELSE                            /* IF NOT RUNNING UNDER GSR      */ 02429000
*     DO;                                                          1001 02430000
         B     @RC00999                                            1001 02431000
@RF00999 DS    0H                                                  1002 02432000
*       RESPECIFY                                                  1002 02433000
*         R15 RESTRICTED;                                          1002 02434000
*       RWORK3=RAMB;                /* SAVE CONTENTS OF RAMB         */ 02435000
         LR    RWORK3,RAMB                                         1003 02436000
*       RAMB=ADDR(IDAAMB);          /* POINT TO AMB                  */ 02437000
         L     RAMB,PLHAMB(,RPLH)                                  1004 02438000
*I10:                                                              1005 02439000
*       DO;                         /* IDACALL(IDAPTCBV)             */ 02440000
I10      DS    0H                                                  1006 02441000
*         CALL IDAPTCBV;            /* EXIT TO IDAPTCBV              */ 02442000
         L     @15,@CV01116                                        1006 02443000
         BALR  @14,@15                                             1006 02444000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 02445000
         BALR @11,0                                                     02446000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 02447000
         USING *,@11                                                    02448000
*         GEN(USING *+4095,R10);    /* ESTABLISH SECOND BASE         */ 02449000
         USING *+4095,R10                                               02450000
*         GEN(LA    R10,4095(@11)); /* LOAD SECOND BASE              */ 02451000
         LA    R10,4095(@11)                                            02452000
*         GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 02453000
         L     R10,=A(@PSTART+4095)                                     02454000
*         GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE       */ 02455000
         USING @PSTART+4095,R10                                         02456000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 02457000
         L     @11,=A(@PSTART)                                          02458000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 02459000
         USING @PSTART,@11                                              02460000
*       END I10;                    /* ANY TCB PROBLEM?              */ 02461000
*       RAMB=RWORK3;                /* RESTORE CONTENTS OF RAMB      */ 02462000
         LR    RAMB,RWORK3                                         1016 02463000
*     END;                                                         1017 02464000
*   IF R15=0 THEN                   /* IF NO ERROR                   */ 02465000
@RC00999 LTR   R15,R15                                             1018 02466000
         BNZ   @RF01018                                            1018 02467000
*     DO;                                                          1019 02468000
*       RESPECIFY                                                  1020 02469000
*         R15 UNRESTRICTED;                                        1020 02470000
*                                                                  1020 02471000
*       /*************************************************************/ 02472000
*       /*                                                           */ 02473000
*       /* ISSUE GETMAIN FOR SLOT CORE BLOCK                         */ 02474000
*       /*                                                           */ 02475000
*       /*************************************************************/ 02476000
*                                                                  1021 02477000
*       IF AMBGSR=ON THEN           /* IF RUNNING UNDER GSR          */ 02478000
         L     @15,PLHAMB(,RPLH)                                   1021 02479000
         TM    AMBGSR(@15),B'00100000'                             1021 02480000
         BNO   @RF01021                                            1021 02481000
*         RWORK3=GSRPOOL;           /* USE GSR POOL                  */ 02482000
         LA    RWORK3,241                                          1022 02483000
*       ELSE                        /* IF NOT RUNNING UNDER GSR      */ 02484000
*         RWORK3=USERPOOL;          /* LOAD SUBPOOL                  */ 02485000
         B     @RC01021                                            1023 02486000
@RF01021 SLR   RWORK3,RWORK3                                       1023 02487000
*       RWORK1=RWORK2;              /* LOAD SLOT BASE                */ 02488000
@RC01021 LR    RWORK1,RWORK2                                       1024 02489000
*       RWORK4=ADDR(WSHDSAD);       /* PT TO RESULT AREA             */ 02490000
         LA    RWORK4,WSHDSAD(,RWORK1)                             1025 02491000
*       RESPECIFY                                                  1026 02492000
*        (RWORK0,                                                  1026 02493000
*         R1,                                                      1026 02494000
*         R15) RESTRICTED;                                         1026 02495000
*       RWORK2=MAX((RAMB+MULT64-1)&-MULT64,PAGE);/* ROUND UP TO    1027 02496000
*                                      MULTIPLE OF EIGHT, BUT NO   1027 02497000
*                                      BIGGER THEN PAGE              */ 02498000
         LR    RWORK2,RAMB                                         1027 02499000
         SL    RWORK2,@CF01283                                     1027 02500000
         N     RWORK2,@CF01284                                     1027 02501000
         LA    @14,2048                                            1027 02502000
         CR    RWORK2,@14                                          1027 02503000
         BNL   *+6                                                      02504000
         LR    RWORK2,@14                                          1027 02505000
*       R1=ADDR(WSHDSGMW);          /* PT TO GETMAIN WORK AREA       */ 02506000
         LA    R1,WSHDSGMW(,RWORK1)                                1028 02507000
*       GEN(GETMAIN EC,LV=(RWORK2),A=(RWORK4),SP=(RWORK3),MF=(E,(1)));  02508000
         GETMAIN EC,LV=(RWORK2),A=(RWORK4),SP=(RWORK3),MF=(E,(1))       02509000
*       RESPECIFY                                                  1030 02510000
*         IDAWAX BASED(RWORK5);                                    1030 02511000
*       IF R15^=0 THEN              /* IF ANY ERROR                  */ 02512000
         LTR   R15,R15                                             1031 02513000
         BNZ   @RT01031                                            1031 02514000
*         GOTO WSEXIT;              /* EXIT IDAGETWS                 */ 02515000
*       RESPECIFY                                                  1033 02516000
*        (RWORK0,                                                  1033 02517000
*         R1,                                                      1033 02518000
*         R15) UNRESTRICTED;                                       1033 02519000
*     END;                                                         1034 02520000
*   ELSE                            /* HERE FOR TCB PROBLEM          */ 02521000
*                                                                  1035 02522000
*     /***************************************************************/ 02523000
*     /*                                                             */ 02524000
*     /* THERE EXISTS A TCB CONFLICT                                 */ 02525000
*     /*                                                             */ 02526000
*     /***************************************************************/ 02527000
*                                                                  1035 02528000
*     IF R15='08'X THEN             /* IF UNABLE TO CONTINUE         */ 02529000
         B     @RC01018                                            1035 02530000
@RF01018 C     R15,@CF01131                                        1035 02531000
         BE    @RT01035                                            1035 02532000
*       GOTO WSEXIT;                /* EXIT IDAGETWS                 */ 02533000
*     ELSE                          /* MUST BE RUNNING UNDER SUBTASK */ 02534000
*       DO;                                                        1037 02535000
*         RWORK1=RWORK2;            /* LOAD SLOT BASE                */ 02536000
         LR    RWORK1,RWORK2                                       1038 02537000
*         WSHDSONX=RAMB;            /* SAVE CONTENTS OF RAMB         */ 02538000
         ST    RAMB,WSHDSONX(,RWORK1)                              1039 02539000
*         RAMB=ADDR(IDAAMB);        /* LOAD PTR TO AMB               */ 02540000
         L     RAMB,PLHAMB(,RPLH)                                  1040 02541000
*         RWORK3=RWORK1;            /* SAVE SLOT BASE                */ 02542000
         LR    RWORK3,RWORK1                                       1041 02543000
*         RPARM1=RRPL;              /* COPY PTR TO RPL               */ 02544000
         LR    RPARM1,RRPL                                         1042 02545000
*I11:                                                              1043 02546000
*         DO;                       /* IDACALL(IDAPGETM)             */ 02547000
I11      DS    0H                                                  1044 02548000
*           CALL IDAPGETM;          /* EXIT TO IDAPGETM              */ 02549000
         L     @15,@CV01115                                        1044 02550000
         BALR  @14,@15                                             1044 02551000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02552000
         BALR @11,0                                                     02553000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02554000
         USING *,@11                                                    02555000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 02556000
         USING *+4095,R10                                               02557000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 02558000
         LA    R10,4095(@11)                                            02559000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 02560000
         L     R10,=A(@PSTART+4095)                                     02561000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 02562000
         USING @PSTART+4095,R10                                         02563000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02564000
         L     @11,=A(@PSTART)                                          02565000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02566000
         USING @PSTART,@11                                              02567000
*         END I11;                  /* GET BLP                       */ 02568000
*         RESPECIFY                                                1054 02569000
*           IDABLPRM BASED(R1);                                    1054 02570000
*         IF R1=0 THEN              /* IF GETMAIN FAILED             */ 02571000
         LTR   R1,R1                                               1055 02572000
         BNZ   @RF01055                                            1055 02573000
*           RETURN CODE(4) TO WSEXIT;/* EXIT GETWS                   */ 02574000
         LA    @14,WSEXIT                                          1056 02575000
         LA    @15,4                                               1056 02576000
         BR    @14                                                 1056 02577000
*         RWORK1=RWORK3;            /* RESTORE BASE FOR SLOT         */ 02578000
@RF01055 LR    RWORK1,RWORK3                                       1057 02579000
*         RAMB=WSHDSONX;            /* RESTORE CONTENTS OF RAMB      */ 02580000
         L     RAMB,WSHDSONX(,RWORK1)                              1058 02581000
*         BLPGREQ=ON;               /* INDICATE GETMAIN REQUEST      */ 02582000
         OI    BLPGREQ(R1),B'10000000'                             1059 02583000
*         BLPGSZ=MAX((RAMB+MULT64-1)&-MULT64,PAGE);/* ROUND UP TO  1060 02584000
*                                      MULTIPLE OF EIGHT, BUT NO   1060 02585000
*                                      BIGGER THEN PAGE              */ 02586000
         LR    @00,RAMB                                            1060 02587000
         SL    @00,@CF01283                                        1060 02588000
         N     @00,@CF01284                                        1060 02589000
         LA    @15,2048                                            1060 02590000
         CR    @00,@15                                             1060 02591000
         BNL   *+6                                                      02592000
         LR    @00,@15                                             1060 02593000
         STCM  @00,7,BLPGSZ(R1)                                    1060 02594000
*         BLPGSP=SVC0POOL;          /* GET JOB STEP POOL             */ 02595000
         MVI   BLPGSP(R1),X'FA'                                    1061 02596000
*         RWORK2=ADDR(IDABLPRM);    /* SAVE POINTER TO WORK AREA     */ 02597000
         LR    RWORK2,R1                                           1062 02598000
*         R1=ADDR(BLPOCODE);        /* POINT TO DUMMY ACB            */ 02599000
         LA    @00,BLPOCODE(,R1)                                   1063 02600000
         LR    R1,@00                                              1063 02601000
*         RESPECIFY                                                1064 02602000
*           R15 RESTRICTED;                                        1064 02603000
*         SVC(19);                  /* GET JOB STEP CORE             */ 02604000
         SVC   19                                                  1065 02605000
*         RWORK3=R15;               /* SAVE RETURN CODE              */ 02606000
         LR    RWORK3,R15                                          1066 02607000
*         RESPECIFY                                                1067 02608000
*           R15 UNRESTRICTED;                                      1067 02609000
*         R1=RWORK2;                /* POINT TO WORK AREA            */ 02610000
         LR    R1,RWORK2                                           1068 02611000
*         WSHDSAD=BLPGAD;           /* SAVE RESULT ADDRESS           */ 02612000
         L     @00,BLPGAD-1(,R1)                                   1069 02613000
         ICM   @00,8,@CB01316                                      1069 02614000
         ST    @00,WSHDSAD(,RWORK1)                                1069 02615000
*         RWORK2=BLPGSZ;            /* GET BLOCK SIZE                */ 02616000
         L     RWORK2,BLPGSZ-1(,R1)                                1070 02617000
         LA    RWORK2,0(,RWORK2)                                   1070 02618000
*I12:                                                              1071 02619000
*         DO;                       /* IDACALL(IDAPFREE)             */ 02620000
I12      DS    0H                                                  1072 02621000
*           CALL IDAPFREE;          /* EXIT TO IDAPFREE              */ 02622000
         L     @15,@CV01114                                        1072 02623000
         BALR  @14,@15                                             1072 02624000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02625000
         BALR @11,0                                                     02626000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02627000
         USING *,@11                                                    02628000
*           GEN(USING *+4095,R10);  /* ESTABLISH SECOND BASE         */ 02629000
         USING *+4095,R10                                               02630000
*           GEN(LA    R10,4095(@11));/* LOAD SECOND BASE             */ 02631000
         LA    R10,4095(@11)                                            02632000
*           GEN(L     R10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 02633000
         L     R10,=A(@PSTART+4095)                                     02634000
*           GEN(USING @PSTART+4095,R10);/* ESTABLISH SECOND BASE     */ 02635000
         USING @PSTART+4095,R10                                         02636000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02637000
         L     @11,=A(@PSTART)                                          02638000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02639000
         USING @PSTART,@11                                              02640000
*         END I12;                  /* FREE WORK AREA                */ 02641000
*         IF RWORK3^=0 THEN         /* IF ANY ERROR                  */ 02642000
         LTR   RWORK3,RWORK3                                       1082 02643000
         BZ    @RF01082                                            1082 02644000
*           DO;                                                    1083 02645000
*             GEN(IDARST14);        /* RESTORE RETURN ADDRESS        */ 02646000
         IDARST14                                                       02647000
*             RETURN;               /* EXIT                          */ 02648000
         B     @EL00001                                            1085 02649000
*           END;                                                   1086 02650000
*       END;                                                       1087 02651000
@RF01082 DS    0H                                                  1088 02652000
         EJECT                                                          02653000
*                                                                  1088 02654000
*   /*****************************************************************/ 02655000
*   /*                                                               */ 02656000
*   /* INITIALIZE SLOT                                               */ 02657000
*   /*                                                               */ 02658000
*   /*****************************************************************/ 02659000
*                                                                  1088 02660000
*   IF AMBGSR=ON THEN               /* IF RUNNING UNDER GSR          */ 02661000
@RC01018 L     @15,PLHAMB(,RPLH)                                   1088 02662000
         TM    AMBGSR(@15),B'00100000'                             1088 02663000
         BNO   @RF01088                                            1088 02664000
*     DO;                                                          1089 02665000
*       WSHDSFSP=GSRPOOL;           /* USER GSR SUBPOOL              */ 02666000
         MVI   WSHDSFSP(RWORK1),X'F1'                              1090 02667000
*       WSHDGSR=ON;                 /* ASSUME GSR KEY FOR DELVRP   1091 02668000
*                                                            @Z40ESSR*/ 02669000
         OI    WSHDGSR(RWORK1),B'00100000'                         1091 02670000
*     END;                                                         1092 02671000
*   ELSE                            /* IF NOT RUNNING UNDER GSR      */ 02672000
*     WSHDSFSP=SVC0POOL;            /* COPY SUBPOOL                  */ 02673000
         B     @RC01088                                            1093 02674000
@RF01088 MVI   WSHDSFSP(RWORK1),X'FA'                              1093 02675000
*   WSHDSFLN=RWORK2;                /* GET MINIMUM LENGTH            */ 02676000
@RC01088 STCM  RWORK2,7,WSHDSFLN(RWORK1)                           1094 02677000
*   WSHDSBV=WSHDSFLN/8;             /* SET BIT VALUE                 */ 02678000
         L     @15,WSHDSFLN-1(,RWORK1)                             1095 02679000
         LA    @15,0(,@15)                                         1095 02680000
         SRL   @15,3                                               1095 02681000
         STH   @15,WSHDSBV(,RWORK1)                                1095 02682000
*   RESPECIFY                                                      1096 02683000
*     RWORK3 UNRESTRICTED;                                         1096 02684000
*   RWORK2=(RAMB+WSHDSBV-1)/WSHDSBV;/* GET INDEX FOR STARTING MASK   */ 02685000
         LR    RWORK2,RAMB                                         1097 02686000
         ALR   RWORK2,@15                                          1097 02687000
         BCTR  RWORK2,0                                            1097 02688000
         SRDA  RWORK2,32                                           1097 02689000
         DR    RWORK2,@15                                          1097 02690000
         LR    RWORK2,@07                                          1097 02691000
*   WSHDSBM=STMASK(RWORK2);         /* SET BIT MASK                  */ 02692000
         LA    @07,STMASK-1(RWORK2)                                1098 02693000
         MVC   WSHDSBM(1,RWORK1),0(@07)                            1098 02694000
*   RESPECIFY                                                      1099 02695000
*     RWORK3 RESTRICTED;                                           1099 02696000
*                                                                  1099 02697000
*   /*****************************************************************/ 02698000
*   /*                                                               */ 02699000
*   /* ADD SLOT TO ORDERED SLOT CHAIN                                */ 02700000
*   /*                                                               */ 02701000
*   /*****************************************************************/ 02702000
*                                                                  1100 02703000
*ARND7:                                                            1100 02704000
*   RWORK2=0;                       /* SET LAST SLOT POINTER TO ZERO */ 02705000
ARND7    SLR   RWORK2,RWORK2                                       1100 02706000
*   RWORK3=AMBWSHD->WSHDOCHN;       /* POINT TO FIRST OREDERED SLOT  */ 02707000
         L     @15,PLHAMB(,RPLH)                                   1101 02708000
         L     @15,AMBWSHD(,@15)                                   1101 02709000
         L     RWORK3,WSHDOCHN(,@15)                               1101 02710000
*   DO WHILE(RWORK3^=0&             /* LOOP UNTIL NO ENTRY OR        */ 02711000
*         RWORK3->WSHDSBV<WSHDSBV); /* RWORK3 PTS TO BIGGER ENTRY    */ 02712000
         B     @DE01102                                            1102 02713000
@DL01102 DS    0H                                                  1103 02714000
*     RWORK2=RWORK3;                /* SAVE PTR TO LAST SLOT         */ 02715000
         LR    RWORK2,RWORK3                                       1103 02716000
*     RWORK3=RWORK2->WSHDSONX;      /* LOAD ADDR NEXT ORDERED SLOT   */ 02717000
         L     RWORK3,WSHDSONX(,RWORK2)                            1104 02718000
*   END;                                                           1105 02719000
@DE01102 LTR   RWORK3,RWORK3                                       1105 02720000
         BZ    @DC01102                                            1105 02721000
         LH    @00,WSHDSBV(,RWORK3)                                1105 02722000
         CH    @00,WSHDSBV(,RWORK1)                                1105 02723000
         BL    @DL01102                                            1105 02724000
@DC01102 DS    0H                                                  1106 02725000
*   IF RWORK2=0 THEN                /* IF NO ENTRIES OR SMALLEST     */ 02726000
         LTR   RWORK2,RWORK2                                       1106 02727000
         BNZ   @RF01106                                            1106 02728000
*     RWORK4=ADDR(AMBWSHD->WSHDOCHN);/* POINT TO CHAIN WORD          */ 02729000
         L     @15,PLHAMB(,RPLH)                                   1107 02730000
         L     RWORK4,AMBWSHD(,@15)                                1107 02731000
         LA    RWORK4,WSHDOCHN(,RWORK4)                            1107 02732000
*   ELSE                            /* IF NEXT ENTRY LARGER          */ 02733000
*     RWORK4=ADDR(RWORK2->WSHDSONX);/* POINT TO CHAIN WORD           */ 02734000
         B     @RC01106                                            1108 02735000
@RF01106 LA    RWORK4,WSHDSONX(,RWORK2)                            1108 02736000
*   WSHDSONX=RWORK3;                /* POINT TO NEXT ENTRY           */ 02737000
@RC01106 ST    RWORK3,WSHDSONX(,RWORK1)                            1109 02738000
*   GEN(CS     RWORK3,RWORK1,0(RWORK4));/* SWAP IN NEW SLOT          */ 02739000
         CS     RWORK3,RWORK1,0(RWORK4)                                 02740000
*   GEN(BNE    ARND7);              /* LOOP IF SWAP FAILED           */ 02741000
         BNE    ARND7                                                   02742000
*   WSHDSFLG=0;                     /* RELEASE SLOT FOR OTHER USERS  */ 02743000
         MVI   WSHDSFLG(RWORK1),X'00'                              1112 02744000
*   RWORK4=WSHDSAD;                 /* LOAD PTR TO ALLOCATED CORE    */ 02745000
         L     RWORK4,WSHDSAD(,RWORK1)                             1113 02746000
*   RWORK3=WSHDSBM;                 /* LOAD END MASK                 */ 02747000
         SLR   RWORK3,RWORK3                                       1114 02748000
         IC    RWORK3,WSHDSBM(,RWORK1)                             1114 02749000
*   GOTO ARND8;                     /* BRANCH BELOW                  */ 02750000
         B     ARND8                                               1115 02751000
*ALCORE:                            /* STARTING MASK IS IN RWORK4    */ 02752000
*   DO RWORK2=0 BY 1 WHILE RWORK3^=RWORK4;/* SHIFT START MASK        */ 02753000
ALCORE   SLR   RWORK2,RWORK2                                       1116 02754000
         B     @DE01116                                            1116 02755000
@DL01116 DS    0H                                                  1117 02756000
*     SRL(RWORK4,1);                /* SHIFT TO END MASK             */ 02757000
         SRL   RWORK4,1                                            1117 02758000
*   END;                                                           1118 02759000
         AL    RWORK2,@CF00054                                     1118 02760000
@DE01116 CR    RWORK3,RWORK4                                       1118 02761000
         BNE   @DL01116                                            1118 02762000
*   RWORK4=WSHDSAD+(RWORK2*WSHDSBV);/* POINT TO RESULT CORE          */ 02763000
         LR    RWORK4,RWORK2                                       1119 02764000
         MH    RWORK4,WSHDSBV(,RWORK1)                             1119 02765000
         AL    RWORK4,WSHDSAD(,RWORK1)                             1119 02766000
*ARND8:                                                            1120 02767000
*   IF WSHDSBM='FF'X THEN           /* IF NO CORE REMAINING          */ 02768000
ARND8    CLI   WSHDSBM(RWORK1),X'FF'                               1120 02769000
         BNE   @RF01120                                            1120 02770000
*     WSHDSFNO=ON;                  /* SET BIT TO SO INDICATE        */ 02771000
         OI    WSHDSFNO(RWORK1),B'10000000'                        1121 02772000
*   RAMB=RAMB-LENGTH(RFLD);         /* BACK LENGTH PAST RLFD         */ 02773000
@RF01120 SL    RAMB,@CF00068                                       1122 02774000
*   RESPECIFY                                                      1123 02775000
*     RFLD BASED(RWORK4+RAMB);                                     1123 02776000
*   RMASK=RWORK3&&'FF'X;            /* SET MASK TO RESTORE CORE      */ 02777000
         LR    @15,RWORK4                                          1124 02778000
         ALR   @15,RAMB                                            1124 02779000
         LA    @00,255                                             1124 02780000
         XR    @00,RWORK3                                          1124 02781000
         STC   @00,RMASK(,@15)                                     1124 02782000
*   RMAPA=RWORK1;                   /* SAVE ADDRESS OF SLOT          */ 02783000
         STCM  RWORK1,7,RMAPA(@15)                                 1125 02784000
*   RWORK1=RWORK4;                  /* SET POINTER TO CORE           */ 02785000
         LR    RWORK1,RWORK4                                       1126 02786000
*   GEN(LA RWORK1,0(RWORK1));       /* ZERO HIGH ORDER BYTE  @ZA16073*/ 02787000
         LA RWORK1,0(RWORK1)                                            02788000
*   RESPECIFY                                                      1128 02789000
*     R15 RESTRICTED;               /*                       @ZA18981*/ 02790000
*   R15=0;                          /* SET NO ERROR CODE             */ 02791000
         SLR   R15,R15                                             1129 02792000
*WSEXIT:                                                           1130 02793000
*   RAMB=ADDR(IDAAMB);              /* RESTORE AMB POINTER           */ 02794000
WSEXIT   L     RAMB,PLHAMB(,RPLH)                                  1130 02795000
*   RESPECIFY                                                      1131 02796000
*     R1 RESTRICTED;                                               1131 02797000
*   R1=PLHCRPL;                     /* RESTORE RPL POINTER           */ 02798000
         L     R1,PLHCRPL(,RPLH)                                   1132 02799000
*   RPARM1=ACBAMBL;                 /* RESTORE PTR TO AMBL   @ZA18981*/ 02800000
         L     @14,RPLDACB(,RRPL)                                  1133 02801000
         L     RPARM1,ACBAMBL(,@14)                                1133 02802000
*   GEN(IDARST14);                  /* RESTORE RETURN ADDRESS        */ 02803000
         IDARST14                                                       02804000
*   RETURN;                         /* EXIT WITH NO ERROR            */ 02805000
         B     @EL00001                                            1135 02806000
*TM:                                                               1136 02807000
*   GEN(TM WSHDSBM(RWORK1),0);      /* TEST UNDER MASK MODEL         */ 02808000
TM       TM WSHDSBM(RWORK1),0                                           02809000
         EJECT                                                          02810000
*IDARELWS:                                                         1137 02811000
*                                                                  1137 02812000
*/********************************************************************/ 02813000
*/* EXTERNAL ROUTINE TO RELEASE WORK SPACE                           */ 02814000
*/*   INPUT = RWORK1 CONTAINS ADDRESS OF SPACE                       */ 02815000
*/*           RWORK2 CONTAINS LENGTH OF SPACE                        */ 02816000
*/*   OUTPUT = R15 ZERO IF SUCCESSFUL                                */ 02817000
*/*            R15 IS 4 IF UNSUCCESSFUL                              */ 02818000
*/********************************************************************/ 02819000
*                                                                  1137 02820000
*   ENTRY;                          /* EXTERNAL ENTRY                */ 02821000
@EP01137 DS    0H                                                  1138 02822000
*RELWS:                                                            1138 02823000
*   ;                               /* INTERNAL ENTRY                */ 02824000
RELWS    DS    0H                                                  1139 02825000
*   RESPECIFY                                                      1139 02826000
*    (R14,                                                         1139 02827000
*     R15) RESTRICTED;                                             1139 02828000
*                                                                  1139 02829000
*   /*****************************************************************/ 02830000
*   /*                                                               */ 02831000
*   /* RWORK1 POINTS TO CORE TO RELEASE. RWORK2 HAS ORIGINAL LENGTH  */ 02832000
*   /* REQUESTED OF IDAGETWS. R15 IS ZERO IF SUCCESSFUL, NOT ZERO IF */ 02833000
*   /* FAILURE                                                       */ 02834000
*   /*                                                               */ 02835000
*   /*****************************************************************/ 02836000
*                                                                  1140 02837000
*   RESPECIFY                                                      1140 02838000
*    (RWORK3,                                                      1140 02839000
*     RWORK4) UNRESTRICTED;                                        1140 02840000
*   RESPECIFY                                                      1141 02841000
*     IDAAMB BASED(RAMB);                                          1141 02842000
*   RWORK2=((RWORK2+LENGTH(RFLD)+7)&(-8))-LENGTH(RFLD);            1142 02843000
         LA    @08,4                                               1142 02844000
         LA    @07,11                                              1142 02845000
         ALR   @07,RWORK2                                          1142 02846000
         N     @07,@CF01227                                        1142 02847000
         SLR   @07,@08                                             1142 02848000
         LR    RWORK2,@07                                          1142 02849000
*   RWORK2=RWORK2+RWORK1;           /* GET ADDRESS OF RFLD           */ 02850000
         ALR   RWORK2,RWORK1                                       1143 02851000
*   RESPECIFY                                                      1144 02852000
*     RFLD BASED(RWORK2);                                          1144 02853000
*   RWORK1=AMBWSHD;                 /* POINT TO FIRST IDAWSHD        */ 02854000
         L     RWORK1,AMBWSHD(,RAMB)                               1145 02855000
*   R15=NOTFREE;                    /* SET RETURN CODE NON-ZERO      */ 02856000
         LR    R15,@08                                             1146 02857000
*   DO UNTIL RWORK1=0;              /* LOOP THRU WSHD CHAIN          */ 02858000
@DL01147 DS    0H                                                  1148 02859000
*     IF RMAPA=>ADDR(IDAWSHD)&      /* IS ADDRESS WITHIN WSHD        */ 02860000
*         RMAPA<=ADDR(IDAWSHD)+LENGTH(IDAWSHD)-LENGTH(WSHDSLT)-1 THEN   02861000
         L     @08,RMAPA-1(,RWORK2)                                1148 02862000
         LA    @08,0(,@08)                                         1148 02863000
         CR    @08,RWORK1                                          1148 02864000
         BL    @RF01148                                            1148 02865000
         LR    @07,RWORK1                                          1148 02866000
         SL    @07,@CF01286                                        1148 02867000
         CR    @08,@07                                             1148 02868000
         BH    @RF01148                                            1148 02869000
*       DO;                                                        1149 02870000
*         RWORK1=RMAPA;             /* LOAD BASE FOR SLOT            */ 02871000
         LR    RWORK1,@08                                          1150 02872000
*         GEN;                                                     1151 02873000
         L     RWORK3,WSHDSBV(RWORK1)  LOAD SWAP WORD                   02874000
ARND10   L     RWORK4,SFNOOFF          LOAD MASK TO SET WSHDSFNO OFF    02875000
         IC    RWORK4,RMASK(RWORK2)    ADD MASK TO RESET BIT MAP BITS   02876000
         NR    RWORK4,RWORK3           SET BITS OFF                     02877000
         CS    RWORK3,RWORK4,WSHDSBV(RWORK1) TRY TO SWAP IN WORD        02878000
         BNE   ARND10                  BRANCH IF FAILURE                02879000
*         RWORK1=0;                 /* ZERO BASE TO GET OUT OF LOOP  */ 02880000
         SLR   RWORK1,RWORK1                                       1152 02881000
*         R15=0;                    /* SET RETURN CODE               */ 02882000
         SLR   R15,R15                                             1153 02883000
*       END;                                                       1154 02884000
*     ELSE                          /* IF RMAPA NOT WITHIN WSHD      */ 02885000
*       RWORK1=WSHDNEXT;            /* POINT TO NEXT WSHD            */ 02886000
         B     @RC01148                                            1155 02887000
@RF01148 L     @08,WSHDNEXT-1(,RWORK1)                             1155 02888000
         LA    @08,0(,@08)                                         1155 02889000
         LR    RWORK1,@08                                          1155 02890000
*   END;                                                           1156 02891000
@RC01148 DS    0H                                                  1156 02892000
@DE01147 LTR   RWORK1,RWORK1                                       1156 02893000
         BNZ   @DL01147                                            1156 02894000
*   RETURN CODE(R15);               /* EXIT WITH RETURN CODE         */ 02895000
         BR    @14                                                 1157 02896000
*   END IDA019RX                                                   1158 02897000
*                                                                  1158 02898000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02899000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 02900000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 02901000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 02902000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 02903000
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */ 02904000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 02905000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 02906000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 02907000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 02908000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 02909000
*/*%INCLUDE SYSLIB  (IDAWAX  )                                       */ 02910000
*/*%INCLUDE SYSLIB  (IDAWSHD )                                       */ 02911000
*/*%INCLUDE SYSLIB  (IDAAIR  )                                       */ 02912000
*/*%INCLUDE SYSLIB  (IDABLPRM)                                       */ 02913000
*                                                                  1158 02914000
*       ;                                                          1158 02915000
@DATA    DS    0H                                                       02916000
@SX01299 XC    CORE(0,RWORK1),CORE(RWORK1)                              02917000
@SC01305 CLC   PLHKEY(0,@07),ALTKEY(RWORK2)                             02918000
@SC01307 CLC   PLHKEY(0,@15),ALTKEY(@07)                                02919000
@SM01309 MVC   PLHKEY(0,@15),ALTKEY(@08)                                02920000
@DATD    DSECT                                                          02921000
         DS    0F                                                       02922000
IDA019RX CSECT                                                          02923000
         DS    0F                                                       02924000
@CF00054 DC    F'1'                                                     02925000
@CH00054 EQU   @CF00054+2                                               02926000
@CF00068 DC    F'4'                                                     02927000
@CF00224 DC    F'5'                                                     02928000
@CF00088 DC    F'16'                                                    02929000
@CF00281 DC    F'92'                                                    02930000
@CH00281 EQU   @CF00281+2                                               02931000
@CF01286 DC    F'-75'                                                   02932000
@CF01284 DC    F'-64'                                                   02933000
@CF01283 DC    F'-63'                                                   02934000
@CF01227 DC    F'-8'                                                    02935000
@CF01315 DC    XL4'0000FFFF'                                            02936000
@CF01131 DC    XL4'08'                                                  02937000
@CF00055 DC    BL4'1'                                                   02938000
@DATD    DSECT                                                          02939000
         DS    0D                                                       02940000
IDA019RX CSECT                                                          02941000
         DS    0F                                                       02942000
@SIZDATD DC    AL1(0)                                                   02943000
         DC    AL3(@ENDDATD-@DATD)                                      02944000
@CV01112 DC    V(IDADRQ)                                                02945000
@CV01113 DC    V(IDAENDRQ)                                              02946000
@CV01114 DC    V(IDAPFREE)                                              02947000
@CV01115 DC    V(IDAPGETM)                                              02948000
@CV01116 DC    V(IDAPTCBV)                                              02949000
@CV01117 DC    V(IDAXGPLH)                                              02950000
@CV01118 DC    V(IDA019R4)                                              02951000
@CV01216 DC    V(IDAWRBFR)                                              02952000
         DS    0D                                                       02953000
SFNOOFF  DC    XL4'FFFF7FFF'                                            02954000
HWORD4   DC    H'4'                                                     02955000
@CB01316 DC    X'00'                                                    02956000
STMASK   DC    X'80C0E0F0F8FCFEFF'                                      02957000
         DS    CL1                                                      02958000
BRANCH   DC    AL4(AIXGET)                                              02959000
         DC    AL4(AIXPUT)                                              02960000
         DC    AL4(AIXBAD)                                              02961000
         DC    AL4(AIXPOINT)                                            02962000
         DC    AL4(AIXENREQ)                                            02963000
         DC    AL4(AIXERASE)                                            02964000
         DC    AL4(AIXBAD)                                              02965000
         DC    AL4(AIXBAD)                                              02966000
         DC    AL4(AIXBAD)                                              02967000
         DC    AL4(AIXBAD)                                              02968000
         DC    AL4(AIXNOP)                                              02969000
IDA019RX CSECT                                                          02970000
    IDAPATCH                                                            02971000
@DATD    DSECT                                                          02972000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02973000
@ENDDATD EQU   *                                                        02974000
IDA019RX CSECT                                                          02975000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02976000
@01      EQU   01                                                       02977000
@02      EQU   02                                                       02978000
@03      EQU   03                                                       02979000
@04      EQU   04                                                       02980000
@05      EQU   05                                                       02981000
@06      EQU   06                                                       02982000
@07      EQU   07                                                       02983000
@08      EQU   08                                                       02984000
@09      EQU   09                                                       02985000
@10      EQU   10                                                       02986000
@11      EQU   11                                                       02987000
@12      EQU   12                                                       02988000
@13      EQU   13                                                       02989000
@14      EQU   14                                                       02990000
@15      EQU   15                                                       02991000
RWORK0   EQU   @00                                                      02992000
RRPL     EQU   @01                                                      02993000
R1       EQU   @01                                                      02994000
RPLH     EQU   @02                                                      02995000
RAMB     EQU   @03                                                      02996000
RBUFC    EQU   @04                                                      02997000
RWORK1   EQU   @05                                                      02998000
RWORK2   EQU   @06                                                      02999000
RWORK3   EQU   @07                                                      03000000
RWORK4   EQU   @08                                                      03001000
RWORK5   EQU   @09                                                      03002000
RPARM1   EQU   @12                                                      03003000
R14      EQU   @14                                                      03004000
R15      EQU   @15                                                      03005000
R10      EQU   @10                                                      03006000
R11      EQU   @11                                                      03007000
R13      EQU   @13                                                      03008000
IFGRPL   EQU   0                                                        03009000
RPLCOMN  EQU   IFGRPL                                                   03010000
RPLIDWD  EQU   RPLCOMN                                                  03011000
RPLREQ   EQU   RPLIDWD+2                                                03012000
RPLLEN   EQU   RPLIDWD+3                                                03013000
RPLPLHPT EQU   RPLCOMN+4                                                03014000
RPLECB   EQU   RPLCOMN+8                                                03015000
RPLFDBWD EQU   RPLCOMN+12                                               03016000
RPLFDBK  EQU   RPLFDBWD+1                                               03017000
RPLRTNCD EQU   RPLFDBK                                                  03018000
RPLERREG EQU   RPLRTNCD                                                 03019000
RPLCNDCD EQU   RPLFDBK+1                                                03020000
RPLCMPON EQU   RPLCNDCD                                                 03021000
RPLFDB2  EQU   RPLCMPON                                                 03022000
RPLERRCD EQU   RPLCNDCD+1                                               03023000
RPLFDB3  EQU   RPLERRCD                                                 03024000
RPLKEYLE EQU   RPLCOMN+16                                               03025000
RPLKEYL  EQU   RPLKEYLE                                                 03026000
RPLDACB  EQU   RPLCOMN+24                                               03027000
RPLTCBPT EQU   RPLCOMN+28                                               03028000
RPLAREA  EQU   RPLCOMN+32                                               03029000
RPLARG   EQU   RPLCOMN+36                                               03030000
RPLOPTCD EQU   RPLCOMN+40                                               03031000
RPLOPT1  EQU   RPLOPTCD                                                 03032000
RPLLOC   EQU   RPLOPT1                                                  03033000
RPLDIR   EQU   RPLOPT1                                                  03034000
RPLSEQ   EQU   RPLOPT1                                                  03035000
RPLSKP   EQU   RPLOPT1                                                  03036000
RPLASY   EQU   RPLOPT1                                                  03037000
RPLKGE   EQU   RPLOPT1                                                  03038000
RPLGEN   EQU   RPLOPT1                                                  03039000
RPLECBSW EQU   RPLOPT1                                                  03040000
RPLOPT2  EQU   RPLOPTCD+1                                               03041000
RPLKEY   EQU   RPLOPT2                                                  03042000
RPLADR   EQU   RPLOPT2                                                  03043000
RPLCNV   EQU   RPLOPT2                                                  03044000
RPLBWD   EQU   RPLOPT2                                                  03045000
RPLLRD   EQU   RPLOPT2                                                  03046000
RPLWAITX EQU   RPLOPT2                                                  03047000
RPLUPD   EQU   RPLOPT2                                                  03048000
RPLNSP   EQU   RPLOPT2                                                  03049000
RPLOPT3  EQU   RPLOPTCD+2                                               03050000
RPLOPT4  EQU   RPLOPTCD+3                                               03051000
RPLNXTRP EQU   RPLCOMN+44                                               03052000
RPLRLEN  EQU   RPLCOMN+48                                               03053000
RPLBUFL  EQU   RPLCOMN+52                                               03054000
RPLOPTC2 EQU   RPLCOMN+56                                               03055000
RPLOPT5  EQU   RPLOPTC2                                                 03056000
RPLWRTYP EQU   RPLOPT5                                                  03057000
RPLOPT6  EQU   RPLOPTC2+1                                               03058000
RPLUNTYP EQU   RPLOPT6                                                  03059000
RPLOPT7  EQU   RPLOPTC2+2                                               03060000
RPLCNOPT EQU   RPLOPT7                                                  03061000
RPLOPT8  EQU   RPLOPTC2+3                                               03062000
RPLRBAR  EQU   RPLCOMN+60                                               03063000
RPLAIXPC EQU   RPLRBAR                                                  03064000
RPLAIXID EQU   RPLRBAR+2                                                03065000
RPLAXPKP EQU   RPLAIXID                                                 03066000
RPLDDDD  EQU   RPLRBAR+4                                                03067000
RPLEXTDS EQU   RPLCOMN+68                                               03068000
RPLEXTD1 EQU   RPLEXTDS                                                 03069000
RPLEMLEN EQU   RPLCOMN+70                                               03070000
RPLERMSA EQU   RPLCOMN+72                                               03071000
IFGACB   EQU   0                                                        03072000
ACBCOMN  EQU   IFGACB                                                   03073000
ACBLENG  EQU   ACBCOMN+2                                                03074000
ACBLENG2 EQU   ACBLENG                                                  03075000
ACBAMBL  EQU   ACBCOMN+4                                                03076000
ACBJWA   EQU   ACBAMBL                                                  03077000
ACBMACRF EQU   ACBCOMN+12                                               03078000
ACBMACR1 EQU   ACBMACRF                                                 03079000
ACBADR   EQU   ACBMACR1                                                 03080000
ACBCNV   EQU   ACBMACR1                                                 03081000
ACBMACR2 EQU   ACBMACRF+1                                               03082000
ACBBUFPL EQU   ACBCOMN+20                                               03083000
ACBMACR3 EQU   ACBBUFPL                                                 03084000
ACBRECFM EQU   ACBCOMN+24                                               03085000
ACBCCTYP EQU   ACBCOMN+25                                               03086000
ACBOPT   EQU   ACBCOMN+26                                               03087000
ACBDSORG EQU   ACBOPT                                                   03088000
ACBCROPS EQU   ACBDSORG                                                 03089000
ACBDVIND EQU   ACBDSORG                                                 03090000
ACBEXLST EQU   ACBCOMN+36                                               03091000
ACBDDNM  EQU   ACBCOMN+40                                               03092000
ACBAMETH EQU   ACBDDNM+3                                                03093000
ACBOFLGS EQU   ACBCOMN+48                                               03094000
ACBEXFG  EQU   ACBOFLGS                                                 03095000
ACBIOSFG EQU   ACBOFLGS                                                 03096000
ACBBUSY  EQU   ACBIOSFG                                                 03097000
ACBINFLG EQU   ACBCOMN+50                                               03098000
ACBINFL1 EQU   ACBINFLG                                                 03099000
ACBVVIC  EQU   ACBINFL1                                                 03100000
ACBINFL2 EQU   ACBINFLG+1                                               03101000
ACBUJFCB EQU   ACBCOMN+52                                               03102000
ACBBLKSZ EQU   ACBCOMN+60                                               03103000
IFGEXLST EQU   0                                                        03104000
EXLCOMN  EQU   IFGEXLST                                                 03105000
EXLLEN   EQU   EXLCOMN+2                                                03106000
EXLEODF  EQU   EXLCOMN+5                                                03107000
EXLSYNF  EQU   EXLCOMN+10                                               03108000
EXLLERF  EQU   EXLCOMN+15                                               03109000
EXLSCIPF EQU   EXLCOMN+20                                               03110000
EXLUPADF EQU   EXLSCIPF                                                 03111000
EXLSCIPS EQU   EXLUPADF                                                 03112000
EXLSCIPA EQU   EXLUPADF                                                 03113000
EXLSCIPK EQU   EXLUPADF                                                 03114000
EXLSCIPP EQU   EXLCOMN+21                                               03115000
EXLLGNF  EQU   EXLCOMN+25                                               03116000
EXLJRNF  EQU   EXLCOMN+30                                               03117000
EXLOPNF  EQU   EXLCOMN+35                                               03118000
IFGEXLEF EQU   0                                                        03119000
EXLENTRY EQU   IFGEXLEF                                                 03120000
EXLFLAG  EQU   EXLENTRY                                                 03121000
EXLENFL  EQU   EXLFLAG                                                  03122000
EXLEXITP EQU   EXLENTRY+1                                               03123000
IDAAMBL  EQU   0                                                        03124000
AMBLACB  EQU   IDAAMBL+8                                                03125000
AMBLEOV  EQU   IDAAMBL+12                                               03126000
AMBLEFLG EQU   AMBLEOV                                                  03127000
AMBLDDNM EQU   IDAAMBL+16                                               03128000
AMBLIDF  EQU   AMBLDDNM                                                 03129000
AMBLQ    EQU   AMBLIDF+7                                                03130000
AMBLXPT  EQU   IDAAMBL+24                                               03131000
AMBLVC   EQU   IDAAMBL+28                                               03132000
AMBLTYPE EQU   IDAAMBL+30                                               03133000
AMBLPATH EQU   AMBLTYPE                                                 03134000
AMBLBASE EQU   AMBLTYPE                                                 03135000
AMBLQ2   EQU   IDAAMBL+31                                               03136000
AMBLSHAR EQU   IDAAMBL+33                                               03137000
AMBLFLG1 EQU   IDAAMBL+35                                               03138000
AMBLVVIC EQU   AMBLFLG1                                                 03139000
AMBLFLG2 EQU   IDAAMBL+36                                               03140000
AMBLNUM  EQU   IDAAMBL+38                                               03141000
AMBLDTA  EQU   IDAAMBL+52                                               03142000
IDAAMB   EQU   0                                                        03143000
AMBPH    EQU   IDAAMB+12                                                03144000
AMBDSB   EQU   IDAAMB+20                                                03145000
AMBEOVR  EQU   IDAAMB+24                                                03146000
AMBFLG0  EQU   AMBEOVR                                                  03147000
AMBFLG1  EQU   IDAAMB+25                                                03148000
AMBDSORG EQU   IDAAMB+26                                                03149000
AMBIOBAD EQU   IDAAMB+28                                                03150000
AMBINFL  EQU   IDAAMB+42                                                03151000
AMBCAT   EQU   AMBINFL                                                  03152000
AMBSCRA  EQU   AMBINFL                                                  03153000
AMBUCRA  EQU   AMBINFL                                                  03154000
AMBDEBPT EQU   IDAAMB+44                                                03155000
AMBOFLGS EQU   IDAAMB+48                                                03156000
AMBFLG2  EQU   IDAAMB+49                                                03157000
AMBPUG   EQU   AMBFLG2                                                  03158000
AMBEOVPT EQU   IDAAMB+56                                                03159000
AMBCSWD1 EQU   IDAAMB+84                                                03160000
AMBAFLG  EQU   AMBCSWD1                                                 03161000
AMBLSR   EQU   AMBAFLG                                                  03162000
AMBGSR   EQU   AMBAFLG                                                  03163000
AMBDFR   EQU   AMBAFLG                                                  03164000
AMBWSHD  EQU   IDAAMB+96                                                03165000
IDAAMDSB EQU   0                                                        03166000
AMDATTR  EQU   IDAAMDSB+1                                               03167000
AMDNEST  EQU   IDAAMDSB+4                                               03168000
AMDAXRKP EQU   AMDNEST                                                  03169000
AMDKEYLN EQU   IDAAMDSB+8                                               03170000
AMDCINV  EQU   IDAAMDSB+20                                              03171000
AMDLRECL EQU   IDAAMDSB+24                                              03172000
AMDHLRBA EQU   IDAAMDSB+28                                              03173000
AMDSSRBA EQU   IDAAMDSB+32                                              03174000
AMDATTR3 EQU   IDAAMDSB+40                                              03175000
AMDSTAT  EQU   IDAAMDSB+48                                              03176000
IDAPLHDR EQU   0                                                        03177000
IDAPLH   EQU   0                                                        03178000
PLHFLG1  EQU   IDAPLH+2                                                 03179000
PLHFLG2  EQU   IDAPLH+3                                                 03180000
PLHEFLGS EQU   IDAPLH+4                                                 03181000
PLHSRINV EQU   PLHEFLGS                                                 03182000
PLHINVAL EQU   PLHEFLGS                                                 03183000
PLHFLG3  EQU   IDAPLH+6                                                 03184000
PLHAFLGS EQU   IDAPLH+7                                                 03185000
PLHCRPL  EQU   IDAPLH+20                                                03186000
PLHCRBA  EQU   IDAPLH+28                                                03187000
PLHJORBA EQU   PLHCRBA                                                  03188000
PLHJCODE EQU   IDAPLH+40                                                03189000
PLHRSCS  EQU   IDAPLH+43                                                03190000
PLHDBUFC EQU   IDAPLH+52                                                03191000
PLHRECP  EQU   IDAPLH+60                                                03192000
PLHDIOB  EQU   IDAPLH+76                                                03193000
PLHAMB   EQU   IDAPLH+108                                               03194000
PLHRETO  EQU   IDAPLH+116                                               03195000
PLHRET1  EQU   IDAPLH+120                                               03196000
PLHEOVPT EQU   IDAPLH+180                                               03197000
PLHIXSPL EQU   IDAPLH+200                                               03198000
PLHSSRBA EQU   PLHIXSPL                                                 03199000
PLHWAX   EQU   IDAPLH+232                                               03200000
PLHXPLH  EQU   PLHWAX                                                   03201000
PLHKEYPT EQU   IDAPLH+248                                               03202000
PLHDRRSC EQU   IDAPLH+252                                               03203000
PLHDRMSK EQU   IDAPLH+264                                               03204000
PLHTMRPL EQU   IDAPLH+265                                               03205000
PLHEND   EQU   IDAPLH+280                                               03206000
PLHKEY   EQU   0                                                        03207000
IDABUFDR EQU   0                                                        03208000
BUFDRCIX EQU   IDABUFDR+9                                               03209000
BUFDRFLG EQU   IDABUFDR+11                                              03210000
IDABUFC  EQU   0                                                        03211000
BUFCAVL  EQU   IDABUFC                                                  03212000
BUFCFLG1 EQU   IDABUFC+1                                                03213000
BUFCIOFL EQU   IDABUFC+2                                                03214000
BUFCMW   EQU   BUFCIOFL                                                 03215000
BUFCFLG2 EQU   IDABUFC+3                                                03216000
BUFCPLH  EQU   IDABUFC+4                                                03217000
BUFCINV  EQU   IDABUFC+28                                               03218000
IDAWAX   EQU   0                                                        03219000
WAXFLG1  EQU   IDAWAX+1                                                 03220000
WAXSRAB  EQU   WAXFLG1                                                  03221000
WAXPUG   EQU   WAXFLG1                                                  03222000
WAXPS    EQU   WAXFLG1                                                  03223000
WAXNOADV EQU   WAXFLG1                                                  03224000
WAXPL    EQU   IDAWAX+4                                                 03225000
WAXIRPL  EQU   IDAWAX+8                                                 03226000
WAXURPL  EQU   IDAWAX+12                                                03227000
WAXRCDA  EQU   IDAWAX+16                                                03228000
WAXXPTR  EQU   IDAWAX+20                                                03229000
WAXEPTR  EQU   IDAWAX+24                                                03230000
WAXBPLH  EQU   IDAWAX+28                                                03231000
WAXSRAA  EQU   IDAWAX+32                                                03232000
WAXSRAL  EQU   IDAWAX+36                                                03233000
WAXXXXX3 EQU   IDAWAX+40                                                03234000
IDAWSHD  EQU   0                                                        03235000
WSHDID   EQU   IDAWSHD                                                  03236000
WSHDPOOL EQU   IDAWSHD+1                                                03237000
WSHDLEN  EQU   IDAWSHD+2                                                03238000
WSHDACHN EQU   IDAWSHD+4                                                03239000
WSHDGMTB EQU   WSHDACHN                                                 03240000
WSHDNEXT EQU   WSHDACHN+1                                               03241000
WSHDGMWA EQU   IDAWSHD+8                                                03242000
WSHDNUS  EQU   IDAWSHD+18                                               03243000
WSHDGMRA EQU   IDAWSHD+20                                               03244000
WSHDOCHN EQU   IDAWSHD+24                                               03245000
WSHDSLT  EQU   IDAWSHD+28                                               03246000
WSHDSAD  EQU   WSHDSLT                                                  03247000
@NM00061 EQU   WSHDSAD                                                  03248000
WSHDGSR  EQU   @NM00061                                                 03249000
WSHDSGMW EQU   WSHDSLT+4                                                03250000
WSHDSFM  EQU   WSHDSGMW                                                 03251000
WSHDSFSP EQU   WSHDSFM                                                  03252000
WSHDSFLN EQU   WSHDSFM+1                                                03253000
WSHDSONX EQU   WSHDSGMW+4                                               03254000
WSHDSBV  EQU   WSHDSGMW+8                                               03255000
WSHDSFLG EQU   WSHDSGMW+10                                              03256000
WSHDSFNO EQU   WSHDSFLG                                                 03257000
WSHDSBM  EQU   WSHDSGMW+11                                              03258000
IDAAIX   EQU   0                                                        03259000
AIXFG    EQU   IDAAIX                                                   03260000
AIXPKP   EQU   AIXFG                                                    03261000
AIXPL    EQU   IDAAIX+1                                                 03262000
AIXPC    EQU   IDAAIX+2                                                 03263000
AIXKL    EQU   IDAAIX+4                                                 03264000
AIXKY    EQU   IDAAIX+5                                                 03265000
IDABLPRM EQU   0                                                        03266000
BLPBUFLP EQU   IDABLPRM+4                                               03267000
BLPUACB  EQU   BLPBUFLP                                                 03268000
BLPFLAGS EQU   IDABLPRM+10                                              03269000
BLPFLAG1 EQU   BLPFLAGS                                                 03270000
BLPFLAG2 EQU   BLPFLAGS+1                                               03271000
BLPOCODE EQU   IDABLPRM+12                                              03272000
BLPCORE  EQU   IDABLPRM+16                                              03273000
BLPGFLG  EQU   BLPCORE                                                  03274000
BLPGREQ  EQU   BLPGFLG                                                  03275000
BLPGSZ   EQU   BLPCORE+1                                                03276000
BLPGSP   EQU   BLPCORE+4                                                03277000
BLPGAD   EQU   BLPCORE+5                                                03278000
BLPIOACB EQU   IDABLPRM+24                                              03279000
BLPBUFL  EQU   0                                                        03280000
BLPBRLFG EQU   BLPBUFL+4                                                03281000
PTR31    EQU   0                                                        03282000
AIXROUT  EQU   0                                                        03283000
ALTKEY   EQU   0                                                        03284000
RFLD     EQU   0                                                        03285000
RMASK    EQU   RFLD                                                     03286000
RMAPA    EQU   RFLD+1                                                   03287000
CORE     EQU   0                                                        03288000
ACHAR    EQU   0                                                        03289000
AIXPTR1  EQU   0                                                        03290000
PLHPDL   EQU   0                                                        03291000
PLHPDLE  EQU   0                                                        03292000
PLHRRN   EQU   0                                                        03293000
PLHEXTEN EQU   PLHEND                                                   03294000
PLHBMWRK EQU   PLHEXTEN+5                                               03295000
BUFCRSC1 EQU   BUFCAVL                                                  03296000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03297000
PLHBMSV5 EQU   PLHEXTEN+24                                              03298000
PLHBMSV4 EQU   PLHEXTEN+20                                              03299000
PLHBMSV3 EQU   PLHEXTEN+16                                              03300000
PLHBMSV2 EQU   PLHEXTEN+12                                              03301000
PLHBMSV1 EQU   PLHEXTEN+8                                               03302000
PLHRDCNT EQU   PLHEXTEN+6                                               03303000
PLHBMSOV EQU   PLHBMWRK                                                 03304000
PLHBEUC  EQU   PLHBMWRK                                                 03305000
PLHBMRDF EQU   PLHBMWRK                                                 03306000
@NM00057 EQU   PLHEXTEN+4                                               03307000
PLHRESR1 EQU   PLHEXTEN                                                 03308000
BLPBFLCT EQU   BLPBUFL+6                                                03309000
@NM00069 EQU   BLPBUFL+5                                                03310000
@NM00068 EQU   BLPBRLFG                                                 03311000
BLPBFLST EQU   BLPBRLFG                                                 03312000
BLPBUFSZ EQU   BLPBUFL                                                  03313000
BLPERFLG EQU   IDABLPRM+51                                              03314000
@NM00067 EQU   IDABLPRM+49                                              03315000
BLPOFLGS EQU   IDABLPRM+48                                              03316000
@NM00066 EQU   IDABLPRM+28                                              03317000
BLPDSORG EQU   BLPIOACB+3                                               03318000
@NM00065 EQU   BLPIOACB                                                 03319000
BLPGPG   EQU   BLPGFLG                                                  03320000
BLPOACB  EQU   IDABLPRM+13                                              03321000
BLPFRSTR EQU   BLPFLAG2                                                 03322000
BLPFIOSR EQU   BLPFLAG2                                                 03323000
BLPFINDX EQU   BLPFLAG2                                                 03324000
BLPFDATA EQU   BLPFLAG2                                                 03325000
BLPFPRIM EQU   BLPFLAG2                                                 03326000
BLPFPATH EQU   BLPFLAG2                                                 03327000
BLPFUPGR EQU   BLPFLAG2                                                 03328000
BLPFPART EQU   BLPFLAG2                                                 03329000
BLPFSTAD EQU   BLPFLAG1                                                 03330000
BLPFBFRF EQU   BLPFLAG1                                                 03331000
BLPFIOBF EQU   BLPFLAG1                                                 03332000
BLPFGSR  EQU   BLPFLAG1                                                 03333000
BLPFLSR  EQU   BLPFLAG1                                                 03334000
BLPFDEL  EQU   BLPFLAG1                                                 03335000
BLPFBLD  EQU   BLPFLAG1                                                 03336000
BLPFDBDC EQU   BLPFLAG1                                                 03337000
BLPSTRNO EQU   IDABLPRM+9                                               03338000
BLPKEYLN EQU   IDABLPRM+8                                               03339000
BLPIOPLH EQU   BLPUACB                                                  03340000
@NM00064 EQU   IDABLPRM+2                                               03341000
BLPACBST EQU   IDABLPRM+1                                               03342000
BLPACBID EQU   IDABLPRM                                                 03343000
@NM00063 EQU   AIXFG                                                    03344000
@NM00062 EQU   @NM00061                                                 03345000
WAXXXXX2 EQU   IDAWAX+6                                                 03346000
WAXLEN   EQU   IDAWAX+2                                                 03347000
WAXID    EQU   IDAWAX                                                   03348000
BUFCEND  EQU   IDABUFC+64                                               03349000
BUFCUCDN EQU   IDABUFC+60                                               03350000
BUFCUCUP EQU   IDABUFC+56                                               03351000
BUFCMDBT EQU   IDABUFC+52                                               03352000
BUFCHAIN EQU   IDABUFC+48                                               03353000
BUFXORBA EQU   IDABUFC+44                                               03354000
BUFXIRBA EQU   IDABUFC+40                                               03355000
BUFCNXT2 EQU   IDABUFC+37                                               03356000
BUFCIDXL EQU   IDABUFC+36                                               03357000
BUFCDSPC EQU   IDABUFC+32                                               03358000
BUFCWLEN EQU   BUFCINV                                                  03359000
BUFCNXT1 EQU   IDABUFC+24                                               03360000
BUFCBAD  EQU   IDABUFC+20                                               03361000
BUFCCPA  EQU   IDABUFC+16                                               03362000
BUFCORBA EQU   IDABUFC+12                                               03363000
BUFCDDDD EQU   IDABUFC+8                                                03364000
BUFCAMB  EQU   BUFCPLH                                                  03365000
@NM00060 EQU   BUFCFLG2                                                 03366000
BUFCEOD  EQU   BUFCFLG2                                                 03367000
BUFCBSYW EQU   BUFCFLG2                                                 03368000
BUFCBSYR EQU   BUFCFLG2                                                 03369000
BUFCNLAS EQU   BUFCFLG2                                                 03370000
BUFCXDDR EQU   BUFCFLG2                                                 03371000
BUFCFIX  EQU   BUFCIOFL                                                 03372000
BUFCPFCP EQU   BUFCIOFL                                                 03373000
BUFCXEDB EQU   BUFCIOFL                                                 03374000
BUFCWC   EQU   BUFCIOFL                                                 03375000
BUFCREAL EQU   BUFCIOFL                                                 03376000
BUFCRRD  EQU   BUFCIOFL                                                 03377000
BUFCFMT  EQU   BUFCIOFL                                                 03378000
BUFCEPT  EQU   BUFCFLG1                                                 03379000
BUFCEXC  EQU   BUFCFLG1                                                 03380000
BUFCVAL  EQU   BUFCFLG1                                                 03381000
BUFCER2  EQU   BUFCFLG1                                                 03382000
BUFCER1  EQU   BUFCFLG1                                                 03383000
BUFCINS  EQU   BUFCFLG1                                                 03384000
BUFCSEG  EQU   BUFCFLG1                                                 03385000
BUFCUPG  EQU   BUFCFLG1                                                 03386000
BUFCUCNT EQU   BUFCAVL                                                  03387000
@NM00059 EQU   IDABUFDR+16                                              03388000
BUFDBUFC EQU   IDABUFDR+12                                              03389000
@NM00058 EQU   BUFDRFLG                                                 03390000
BUFDRAVL EQU   BUFDRFLG                                                 03391000
BUFDRREL EQU   BUFDRFLG                                                 03392000
BUFDRTSB EQU   IDABUFDR+10                                              03393000
BUFDRMAX EQU   BUFDRCIX                                                 03394000
BUFDRPFN EQU   IDABUFDR+8                                               03395000
BUFDRPFB EQU   IDABUFDR+4                                               03396000
BUFDRLEN EQU   IDABUFDR+2                                               03397000
BUFDRNO  EQU   IDABUFDR+1                                               03398000
BUFDRID  EQU   IDABUFDR                                                 03399000
PLHERRET EQU   IDAPLH+276                                               03400000
PLHASCB  EQU   IDAPLH+272                                               03401000
PLHECB   EQU   IDAPLH+268                                               03402000
@NM00056 EQU   IDAPLH+266                                               03403000
@NM00055 EQU   PLHTMRPL                                                 03404000
PLHTMIOB EQU   PLHTMRPL                                                 03405000
PLHTMINX EQU   PLHTMRPL                                                 03406000
PLHTMDTA EQU   PLHTMRPL                                                 03407000
PLHTMDIW EQU   PLHTMRPL                                                 03408000
PLHTMBUF EQU   PLHTMRPL                                                 03409000
PLHTERM  EQU   PLHTMRPL                                                 03410000
PLHR13   EQU   IDAPLH+260                                               03411000
PLHPARM1 EQU   IDAPLH+256                                               03412000
PLHSLRBA EQU   IDAPLH+244                                               03413000
PLHSRCSG EQU   IDAPLH+242                                               03414000
PLHNOSEG EQU   IDAPLH+240                                               03415000
PLHLLOR  EQU   IDAPLH+236                                               03416000
@NM00054 EQU   PLHIXSPL+8                                               03417000
PLHIXBFC EQU   PLHIXSPL+4                                               03418000
PLHHIREC EQU   PLHSSRBA                                                 03419000
PLHISPLP EQU   IDAPLH+196                                               03420000
PLHRBUFC EQU   IDAPLH+192                                               03421000
PLHIBUFC EQU   IDAPLH+188                                               03422000
PLHNRBA  EQU   IDAPLH+184                                               03423000
PLHDDDD  EQU   PLHEOVPT                                                 03424000
PLHAR14  EQU   IDAPLH+176                                               03425000
@NM00053 EQU   IDAPLH+172                                               03426000
@NM00052 EQU   IDAPLH+168                                               03427000
PLHASAVE EQU   IDAPLH+164                                               03428000
PLHRETOS EQU   IDAPLH+118                                               03429000
PLHCHAIN EQU   IDAPLH+112                                               03430000
PLHSAVE6 EQU   IDAPLH+104                                               03431000
PLHSAVE5 EQU   IDAPLH+100                                               03432000
PLHSAVE4 EQU   IDAPLH+96                                                03433000
PLHSAVE3 EQU   IDAPLH+92                                                03434000
PLHSAVE2 EQU   IDAPLH+88                                                03435000
PLHSAVE1 EQU   IDAPLH+84                                                03436000
PLHARET  EQU   IDAPLH+80                                                03437000
PLHIIOB  EQU   PLHDIOB                                                  03438000
PLHSRSID EQU   IDAPLH+74                                                03439000
PLHRDFC  EQU   IDAPLH+72                                                03440000
PLHRDFP  EQU   IDAPLH+68                                                03441000
PLHFSP   EQU   IDAPLH+64                                                03442000
PLHNBUFC EQU   IDAPLH+56                                                03443000
PLHLRECL EQU   IDAPLH+48                                                03444000
PLHARDB  EQU   IDAPLH+44                                                03445000
@NM00051 EQU   PLHRSCS                                                  03446000
PLHDBPER EQU   PLHRSCS                                                  03447000
PLHDSERR EQU   PLHRSCS                                                  03448000
PLHASYER EQU   PLHRSCS                                                  03449000
@NM00050 EQU   PLHRSCS                                                  03450000
PLHBUFHD EQU   PLHRSCS                                                  03451000
PLHINEOV EQU   PLHRSCS                                                  03452000
PLHEOVR  EQU   IDAPLH+42                                                03453000
PLHRCODE EQU   IDAPLH+41                                                03454000
PLHUCODE EQU   PLHJCODE                                                 03455000
PLHJNRBA EQU   IDAPLH+36                                                03456000
PLHJRNLL EQU   IDAPLH+32                                                03457000
PLHUPECB EQU   PLHJORBA                                                 03458000
PLHDSIDA EQU   IDAPLH+24                                                03459000
PLHMRPL  EQU   IDAPLH+16                                                03460000
PLHBFRNO EQU   IDAPLH+15                                                03461000
PLHFRCNT EQU   IDAPLH+14                                                03462000
PLHRMIN  EQU   IDAPLH+13                                                03463000
PLHDSTYP EQU   IDAPLH+12                                                03464000
PLHACB   EQU   IDAPLH+8                                                 03465000
PLHRAE   EQU   PLHAFLGS                                                 03466000
PLHRABWD EQU   PLHAFLGS                                                 03467000
PLHIOSID EQU   PLHAFLGS                                                 03468000
PLHDBDC  EQU   PLHAFLGS                                                 03469000
PLHVAMB  EQU   PLHAFLGS                                                 03470000
PLHIOSRQ EQU   PLHAFLGS                                                 03471000
PLHDRLM  EQU   PLHAFLGS                                                 03472000
PLHEOVDF EQU   PLHFLG3                                                  03473000
PLHRVRS  EQU   PLHFLG3                                                  03474000
PLHBWD   EQU   PLHFLG3                                                  03475000
PLHSLVLD EQU   PLHFLG3                                                  03476000
PLHRAHD  EQU   PLHFLG3                                                  03477000
PLHSRBSG EQU   PLHFLG3                                                  03478000
@NM00049 EQU   PLHEFLGS+1                                               03479000
PLHRSTRT EQU   PLHEFLGS+1                                               03480000
PLHDSCAN EQU   PLHEFLGS                                                 03481000
PLHEODX  EQU   PLHEFLGS                                                 03482000
PLHNOADV EQU   PLHEFLGS                                                 03483000
PLHSKPER EQU   PLHEFLGS                                                 03484000
PLH1ST   EQU   PLHEFLGS                                                 03485000
PLHNOSPC EQU   PLHEFLGS                                                 03486000
PLHIWAIT EQU   PLHFLG2                                                  03487000
PLHSVADV EQU   PLHFLG2                                                  03488000
PLHCIINS EQU   PLHFLG2                                                  03489000
PLHKRE   EQU   PLHFLG2                                                  03490000
PLHADDTE EQU   PLHFLG2                                                  03491000
PLHKEYMD EQU   PLHFLG2                                                  03492000
PLHSQINS EQU   PLHFLG2                                                  03493000
PLHUPD   EQU   PLHFLG2                                                  03494000
PLHSR    EQU   PLHFLG1                                                  03495000
PLHDRPND EQU   PLHFLG1                                                  03496000
PLHASYRQ EQU   PLHFLG1                                                  03497000
PLHRDEXC EQU   PLHFLG1                                                  03498000
PLHSSR   EQU   PLHFLG1                                                  03499000
PLHASKBF EQU   PLHFLG1                                                  03500000
PLHENDRQ EQU   PLHFLG1                                                  03501000
PLHEOVW  EQU   PLHFLG1                                                  03502000
PLHATV   EQU   IDAPLH+1                                                 03503000
PLHAVL   EQU   IDAPLH                                                   03504000
PLHIOSDQ EQU   IDAPLHDR+12                                              03505000
PLHDRCUR EQU   IDAPLHDR+10                                              03506000
PLHDRMAX EQU   IDAPLHDR+8                                               03507000
PLHDRREQ EQU   IDAPLHDR+4                                               03508000
PLHELTH  EQU   IDAPLHDR+2                                               03509000
PLHCNT   EQU   IDAPLHDR+1                                               03510000
PLHID    EQU   IDAPLHDR                                                 03511000
AMDEXCP  EQU   AMDSTAT+44                                               03512000
AMDNCAS  EQU   AMDSTAT+40                                               03513000
AMDNCIS  EQU   AMDSTAT+36                                               03514000
AMDASPA  EQU   AMDSTAT+32                                               03515000
AMDRETR  EQU   AMDSTAT+28                                               03516000
AMDUPR   EQU   AMDSTAT+24                                               03517000
AMDIREC  EQU   AMDSTAT+20                                               03518000
AMDDELR  EQU   AMDSTAT+16                                               03519000
AMDNLR   EQU   AMDSTAT+12                                               03520000
AMDNEXT  EQU   AMDSTAT+10                                               03521000
AMDNIL   EQU   AMDSTAT+8                                                03522000
AMDSTSP  EQU   AMDSTAT                                                  03523000
@NM00048 EQU   IDAAMDSB+41                                              03524000
@NM00047 EQU   AMDATTR3                                                 03525000
AMDLM    EQU   AMDATTR3                                                 03526000
AMDWAIT  EQU   AMDATTR3                                                 03527000
AMDBIND  EQU   AMDATTR3                                                 03528000
AMDFAULT EQU   AMDATTR3                                                 03529000
AMDUNQ   EQU   AMDATTR3                                                 03530000
AMDPARDB EQU   IDAAMDSB+36                                              03531000
AMDMAXRR EQU   AMDSSRBA                                                 03532000
AMDNSLOT EQU   AMDHLRBA                                                 03533000
AMDFSCI  EQU   IDAAMDSB+16                                              03534000
AMDFSCA  EQU   IDAAMDSB+14                                              03535000
AMDCIPCA EQU   IDAAMDSB+12                                              03536000
AMDPCTCI EQU   IDAAMDSB+11                                              03537000
AMDPCTCA EQU   IDAAMDSB+10                                              03538000
AMDRKP   EQU   IDAAMDSB+6                                               03539000
AMDLEN   EQU   IDAAMDSB+2                                               03540000
AMDSPAN  EQU   AMDATTR                                                  03541000
AMDRRDS  EQU   AMDATTR                                                  03542000
AMDRANGE EQU   AMDATTR                                                  03543000
AMDORDER EQU   AMDATTR                                                  03544000
AMDREPL  EQU   AMDATTR                                                  03545000
AMDSDT   EQU   AMDATTR                                                  03546000
AMDWCK   EQU   AMDATTR                                                  03547000
AMDDST   EQU   AMDATTR                                                  03548000
AMDSBID  EQU   IDAAMDSB                                                 03549000
AMBTRACE EQU   IDAAMB+120                                               03550000
AMBVIOT  EQU   IDAAMB+116                                               03551000
AMBSZCP  EQU   IDAAMB+114                                               03552000
AMBSZFW  EQU   IDAAMB+112                                               03553000
AMBSZWR  EQU   IDAAMB+110                                               03554000
AMBSZRD  EQU   IDAAMB+108                                               03555000
AMBEXEX  EQU   IDAAMB+100                                               03556000
AMBCPA   EQU   IDAAMB+92                                                03557000
AMBBM2SH EQU   IDAAMB+88                                                03558000
AMBRDCNT EQU   AMBCSWD1+2                                               03559000
@NM00046 EQU   AMBCSWD1+1                                               03560000
@NM00045 EQU   AMBAFLG                                                  03561000
AMBCFX   EQU   AMBAFLG                                                  03562000
AMBSIS   EQU   AMBAFLG                                                  03563000
AMBICI   EQU   AMBAFLG                                                  03564000
@NM00044 EQU   AMBAFLG                                                  03565000
AMBUPLH  EQU   IDAAMB+80                                                03566000
AMBPAMBL EQU   IDAAMB+76                                                03567000
AMBPIXP  EQU   IDAAMB+72                                                03568000
@NM00043 EQU   IDAAMB+68                                                03569000
AMBIWA   EQU   IDAAMB+64                                                03570000
AMBWKA   EQU   IDAAMB+60                                                03571000
AMBAMBXN EQU   AMBEOVPT                                                 03572000
AMBEDB   EQU   IDAAMB+52                                                03573000
AMBRPT   EQU   IDAAMB+50                                                03574000
AMBBUSY  EQU   AMBOFLGS                                                 03575000
AMBEXFG  EQU   AMBOFLGS                                                 03576000
@NM00042 EQU   AMBOFLGS                                                 03577000
AMBOPEN  EQU   AMBOFLGS                                                 03578000
@NM00041 EQU   AMBOFLGS                                                 03579000
AMBDEBAD EQU   AMBDEBPT+1                                               03580000
AMBIFLGS EQU   AMBDEBPT                                                 03581000
AMBAMETH EQU   IDAAMB+43                                                03582000
AMBSDS   EQU   AMBINFL                                                  03583000
AMBUPX   EQU   AMBINFL                                                  03584000
@NM00040 EQU   AMBINFL                                                  03585000
@NM00039 EQU   AMBINFL                                                  03586000
AMBTIOT  EQU   IDAAMB+40                                                03587000
@NM00038 EQU   IDAAMB+38                                                03588000
AMBDDSN  EQU   IDAAMB+35                                                03589000
AMBCDSN  EQU   IDAAMB+32                                                03590000
AMBIOMB  EQU   AMBIOBAD                                                 03591000
@NM00037 EQU   AMBDSORG+1                                               03592000
AMBDORGA EQU   AMBDSORG+1                                               03593000
@NM00036 EQU   AMBDSORG                                                 03594000
AMBINBUF EQU   AMBFLG1                                                  03595000
AMBJRN   EQU   AMBFLG1                                                  03596000
AMBUBF   EQU   AMBFLG1                                                  03597000
AMBSPEED EQU   AMBFLG1                                                  03598000
AMBPCAT  EQU   AMBFLG1                                                  03599000
AMBMCAT  EQU   AMBFLG1                                                  03600000
AMBTYPE  EQU   AMBFLG1                                                  03601000
AMBCREAT EQU   AMBFLG1                                                  03602000
@NM00035 EQU   AMBFLG0                                                  03603000
AMBSWSP  EQU   AMBFLG0                                                  03604000
AMBPSDS  EQU   AMBFLG0                                                  03605000
AMBCACB  EQU   IDAAMB+16                                                03606000
AMBBUFC  EQU   IDAAMB+8                                                 03607000
AMBLINK  EQU   IDAAMB+4                                                 03608000
AMBLEN   EQU   IDAAMB+2                                                 03609000
AMBRSC   EQU   IDAAMB+1                                                 03610000
AMBID    EQU   IDAAMB                                                   03611000
AMBLCMB  EQU   IDAAMBL+64                                               03612000
AMBLBIB  EQU   IDAAMBL+60                                               03613000
AMBLIX   EQU   IDAAMBL+56                                               03614000
AMBLMIDS EQU   IDAAMBL+42                                               03615000
AMBLNIDS EQU   IDAAMBL+41                                               03616000
@NM00034 EQU   IDAAMBL+40                                               03617000
AMBLNST  EQU   IDAAMBL+37                                               03618000
@NM00033 EQU   AMBLFLG2                                                 03619000
AMBLSTAG EQU   AMBLFLG2                                                 03620000
@NM00032 EQU   AMBLFLG2                                                 03621000
AMBLDUMY EQU   AMBLFLG1                                                 03622000
AMBLCAT  EQU   AMBLFLG1                                                 03623000
AMBLUCRA EQU   AMBLFLG1                                                 03624000
AMBLSCRA EQU   AMBLFLG1                                                 03625000
AMBLSDS  EQU   AMBLVVIC                                                 03626000
AMBLUPD  EQU   AMBLFLG1                                                 03627000
AMBLCINV EQU   AMBLFLG1                                                 03628000
AMBLFULL EQU   AMBLFLG1                                                 03629000
AMBLLEN  EQU   IDAAMBL+34                                               03630000
@NM00031 EQU   AMBLSHAR                                                 03631000
AMBLWRIT EQU   AMBLSHAR                                                 03632000
AMBLCATO EQU   AMBLSHAR                                                 03633000
AMBLPRIM EQU   AMBLSHAR                                                 03634000
AMBLID   EQU   IDAAMBL+32                                               03635000
@NM00030 EQU   AMBLQ2                                                   03636000
AMBLCBIC EQU   AMBLQ2                                                   03637000
@NM00029 EQU   AMBLTYPE                                                 03638000
AMBLFIX  EQU   AMBLTYPE                                                 03639000
AMBLAIX  EQU   AMBLTYPE                                                 03640000
AMBLUPGR EQU   AMBLTYPE                                                 03641000
AMBLENO  EQU   AMBLVC+1                                                 03642000
AMBLVRT  EQU   AMBLVC                                                   03643000
AMBLDFR  EQU   AMBLQ                                                    03644000
AMBLESDS EQU   AMBLQ                                                    03645000
AMBLKSDS EQU   AMBLQ                                                    03646000
AMBLUBF  EQU   AMBLQ                                                    03647000
AMBLFSTP EQU   AMBLQ                                                    03648000
AMBLLSR  EQU   AMBLQ                                                    03649000
AMBLGSR  EQU   AMBLQ                                                    03650000
AMBLDDC  EQU   AMBLQ                                                    03651000
AMBLDCI  EQU   AMBLIDF+4                                                03652000
AMBLCACB EQU   AMBLIDF                                                  03653000
@NM00028 EQU   AMBLEOV+2                                                03654000
AMBLCOMP EQU   AMBLEOV+1                                                03655000
AMBLESET EQU   AMBLEFLG                                                 03656000
AMBLWAIT EQU   AMBLEFLG                                                 03657000
AMBLSCHN EQU   IDAAMBL+4                                                03658000
AMBLPCHN EQU   IDAAMBL                                                  03659000
EXLEADDR EQU   EXLEXITP                                                 03660000
@NM00027 EQU   EXLENFL                                                  03661000
EXLLNK   EQU   EXLENFL                                                  03662000
EXLACTM  EQU   EXLENFL                                                  03663000
EXLSPEC  EQU   EXLENFL                                                  03664000
EXLOPNP  EQU   EXLCOMN+36                                               03665000
@NM00026 EQU   EXLOPNF                                                  03666000
EXLOPNK  EQU   EXLOPNF                                                  03667000
EXLOPNA  EQU   EXLOPNF                                                  03668000
EXLOPNS  EQU   EXLOPNF                                                  03669000
EXLJRNP  EQU   EXLCOMN+31                                               03670000
@NM00025 EQU   EXLJRNF                                                  03671000
EXLJRNK  EQU   EXLJRNF                                                  03672000
EXLJRNA  EQU   EXLJRNF                                                  03673000
EXLJRNS  EQU   EXLJRNF                                                  03674000
EXLLGNP  EQU   EXLCOMN+26                                               03675000
@NM00024 EQU   EXLLGNF                                                  03676000
EXLLGNK  EQU   EXLLGNF                                                  03677000
EXLLGNA  EQU   EXLLGNF                                                  03678000
EXLLGNS  EQU   EXLLGNF                                                  03679000
EXLUPADP EQU   EXLSCIPP                                                 03680000
@NM00023 EQU   EXLUPADF                                                 03681000
EXLUPADK EQU   EXLSCIPK                                                 03682000
EXLUPADA EQU   EXLSCIPA                                                 03683000
EXLUPADS EQU   EXLSCIPS                                                 03684000
EXLLERP  EQU   EXLCOMN+16                                               03685000
@NM00022 EQU   EXLLERF                                                  03686000
EXLLERK  EQU   EXLLERF                                                  03687000
EXLLERA  EQU   EXLLERF                                                  03688000
EXLLERS  EQU   EXLLERF                                                  03689000
EXLSYNP  EQU   EXLCOMN+11                                               03690000
@NM00021 EQU   EXLSYNF                                                  03691000
EXLSYNK  EQU   EXLSYNF                                                  03692000
EXLSYNA  EQU   EXLSYNF                                                  03693000
EXLSYNS  EQU   EXLSYNF                                                  03694000
EXLEODP  EQU   EXLCOMN+6                                                03695000
@NM00020 EQU   EXLEODF                                                  03696000
EXLEODK  EQU   EXLEODF                                                  03697000
EXLEODA  EQU   EXLEODF                                                  03698000
EXLEODS  EQU   EXLEODF                                                  03699000
@NM00019 EQU   EXLCOMN+4                                                03700000
EXLLEN2  EQU   EXLLEN                                                   03701000
EXLSTYP  EQU   EXLCOMN+1                                                03702000
EXLID    EQU   EXLCOMN                                                  03703000
ACBAPID  EQU   ACBCOMN+72                                               03704000
ACBCBMWA EQU   ACBCOMN+68                                               03705000
ACBUAPTR EQU   ACBCOMN+64                                               03706000
ACBLRECL EQU   ACBCOMN+62                                               03707000
ACBMSGLN EQU   ACBBLKSZ                                                 03708000
ACBBUFSP EQU   ACBCOMN+56                                               03709000
@NM00018 EQU   ACBUJFCB+1                                               03710000
ACBOPTN  EQU   ACBUJFCB                                                 03711000
@NM00017 EQU   ACBINFL2                                                 03712000
ACBCBIC  EQU   ACBINFL2                                                 03713000
@NM00016 EQU   ACBINFL2                                                 03714000
ACBBYPSS EQU   ACBINFL1                                                 03715000
ACBSDS   EQU   ACBVVIC                                                  03716000
ACBUCRA  EQU   ACBINFL1                                                 03717000
ACBSCRA  EQU   ACBINFL1                                                 03718000
ACBCAT   EQU   ACBINFL1                                                 03719000
ACBIJRQE EQU   ACBINFL1                                                 03720000
ACBJEPS  EQU   ACBINFL1                                                 03721000
@NM00015 EQU   ACBINFL1                                                 03722000
ACBERFLG EQU   ACBCOMN+49                                               03723000
ACBLOCK  EQU   ACBEXFG                                                  03724000
@NM00014 EQU   ACBOFLGS                                                 03725000
ACBDSERR EQU   ACBOFLGS                                                 03726000
ACBOPEN  EQU   ACBOFLGS                                                 03727000
ACBEOV   EQU   ACBOFLGS                                                 03728000
@NM00013 EQU   ACBOFLGS                                                 03729000
ACBDEB   EQU   ACBDDNM+5                                                03730000
ACBERFL  EQU   ACBDDNM+4                                                03731000
ACBAM    EQU   ACBAMETH                                                 03732000
ACBINFL  EQU   ACBDDNM+2                                                03733000
ACBTIOT  EQU   ACBDDNM                                                  03734000
ACBUEL   EQU   ACBEXLST                                                 03735000
ACBPASSW EQU   ACBCOMN+32                                               03736000
ACBMSGAR EQU   ACBCOMN+28                                               03737000
@NM00012 EQU   ACBDSORG+1                                               03738000
ACBDORGA EQU   ACBDSORG+1                                               03739000
@NM00011 EQU   ACBDSORG                                                 03740000
ACBOPTJ  EQU   ACBDVIND                                                 03741000
ACBCRNRE EQU   ACBCROPS                                                 03742000
ACBCRNCK EQU   ACBCROPS                                                 03743000
ACBASA   EQU   ACBCCTYP                                                 03744000
@NM00010 EQU   ACBCCTYP                                                 03745000
ACBTRCID EQU   ACBCCTYP                                                 03746000
@NM00009 EQU   ACBRECFM                                                 03747000
ACBRECAF EQU   ACBRECFM                                                 03748000
ACBJBUF  EQU   ACBBUFPL+2                                               03749000
ACBMACR4 EQU   ACBBUFPL+1                                               03750000
@NM00008 EQU   ACBMACR3                                                 03751000
ACBNCFX  EQU   ACBMACR3                                                 03752000
ACBSIS   EQU   ACBMACR3                                                 03753000
ACBDFR   EQU   ACBMACR3                                                 03754000
ACBICI   EQU   ACBMACR3                                                 03755000
ACBGSR   EQU   ACBMACR3                                                 03756000
ACBLSR   EQU   ACBMACR3                                                 03757000
@NM00007 EQU   ACBMACR3                                                 03758000
ACBBUFNI EQU   ACBCOMN+18                                               03759000
ACBBUFND EQU   ACBCOMN+16                                               03760000
ACBSTRNO EQU   ACBCOMN+15                                               03761000
ACBBSTNO EQU   ACBCOMN+14                                               03762000
ACBAIX   EQU   ACBMACR2                                                 03763000
ACBDSN   EQU   ACBMACR2                                                 03764000
ACBRST   EQU   ACBMACR2                                                 03765000
ACBLOGON EQU   ACBMACR2                                                 03766000
ACBSKP   EQU   ACBMACR2                                                 03767000
@NM00006 EQU   ACBMACR2                                                 03768000
ACBUBF   EQU   ACBMACR1                                                 03769000
ACBOUT   EQU   ACBMACR1                                                 03770000
ACBIN    EQU   ACBMACR1                                                 03771000
ACBDIR   EQU   ACBMACR1                                                 03772000
ACBSEQ   EQU   ACBMACR1                                                 03773000
ACBBLK   EQU   ACBCNV                                                   03774000
ACBADD   EQU   ACBADR                                                   03775000
ACBKEY   EQU   ACBMACR1                                                 03776000
ACBINRTN EQU   ACBCOMN+8                                                03777000
ACBIBCT  EQU   ACBJWA                                                   03778000
ACBLEN2  EQU   ACBLENG2                                                 03779000
ACBSTYP  EQU   ACBCOMN+1                                                03780000
ACBID    EQU   ACBCOMN                                                  03781000
RPLACTIV EQU   RPLCOMN+69                                               03782000
RPLBRANC EQU   RPLEXTD1                                                 03783000
RPLNIB   EQU   RPLEXTD1                                                 03784000
@NM00005 EQU   RPLEXTD1                                                 03785000
RPLEXIT  EQU   RPLEXTD1                                                 03786000
RPLNEXIT EQU   RPLEXTD1                                                 03787000
RPLEXSCH EQU   RPLEXTD1                                                 03788000
@NM00004 EQU   RPLRBAR+3                                                03789000
@NM00003 EQU   RPLAIXID                                                 03790000
RPLRSV88 EQU   RPLOPT8                                                  03791000
RPLUNCON EQU   RPLOPT8                                                  03792000
RPLACTV  EQU   RPLOPT8                                                  03793000
RPLSESS  EQU   RPLOPT8                                                  03794000
RPLPEND  EQU   RPLOPT8                                                  03795000
RPLODPRM EQU   RPLOPT8                                                  03796000
RPLODACP EQU   RPLOPT8                                                  03797000
RPLODACQ EQU   RPLOPT8                                                  03798000
RPLRSV78 EQU   RPLOPT7                                                  03799000
RPLTCRNO EQU   RPLOPT7                                                  03800000
RPLRLSOP EQU   RPLOPT7                                                  03801000
RPLTPOST EQU   RPLOPT7                                                  03802000
RPLQOPT  EQU   RPLOPT7                                                  03803000
RPLCNIMM EQU   RPLCNOPT                                                 03804000
RPLCNANY EQU   RPLCNOPT                                                 03805000
RPLCNALL EQU   RPLCNOPT                                                 03806000
RPLRSV68 EQU   RPLOPT6                                                  03807000
RPLRSV67 EQU   RPLOPT6                                                  03808000
RPLLOCK  EQU   RPLOPT6                                                  03809000
RPLNCOND EQU   RPLOPT6                                                  03810000
RPLCOND  EQU   RPLOPT6                                                  03811000
RPLEOT   EQU   RPLUNTYP                                                 03812000
RPLEOM   EQU   RPLUNTYP                                                 03813000
RPLEOB   EQU   RPLUNTYP                                                 03814000
RPLWROPT EQU   RPLOPT5                                                  03815000
RPLNODE  EQU   RPLOPT5                                                  03816000
RPLERACE EQU   RPLWRTYP                                                 03817000
RPLEAU   EQU   RPLWRTYP                                                 03818000
RPLNERAS EQU   RPLWRTYP                                                 03819000
RPLPSOPT EQU   RPLOPT5                                                  03820000
@NM00002 EQU   RPLOPT5                                                  03821000
RPLDLGIN EQU   RPLOPT5                                                  03822000
RPLCHAIN EQU   RPLNXTRP                                                 03823000
@NM00001 EQU   RPLOPT4                                                  03824000
RPLMKFRM EQU   RPLOPT4                                                  03825000
RPLENDTR EQU   RPLOPT4                                                  03826000
RPLALIGN EQU   RPLOPT3                                                  03827000
RPLFMT   EQU   RPLOPT3                                                  03828000
RPLFLD   EQU   RPLOPT3                                                  03829000
RPLVFY   EQU   RPLOPT3                                                  03830000
RPLBLK   EQU   RPLOPT3                                                  03831000
RPLSFORM EQU   RPLOPT3                                                  03832000
RPLEODS  EQU   RPLOPT3                                                  03833000
RPLADD   EQU   RPLADR                                                   03834000
RPLECBIN EQU   RPLECBSW                                                 03835000
RPLDAF   EQU   RPLARG+2                                                 03836000
RPLSAF   EQU   RPLARG                                                   03837000
RPLCCHAR EQU   RPLCOMN+20                                               03838000
RPLSTRID EQU   RPLCOMN+18                                               03839000
RPLRDSOH EQU   RPLFDB3                                                  03840000
RPLRLG   EQU   RPLFDB3                                                  03841000
RPLLGFRC EQU   RPLFDB3                                                  03842000
RPLREOT  EQU   RPLFDB3                                                  03843000
RPLREOM  EQU   RPLFDB3                                                  03844000
RPLREOB  EQU   RPLFDB3                                                  03845000
RPLSV32  EQU   RPLFDB3                                                  03846000
RPLUINPT EQU   RPLFDB3                                                  03847000
RPLSTSAV EQU   RPLFDB2                                                  03848000
RPLCUERR EQU   RPLFDB2                                                  03849000
RPLDLGFL EQU   RPLFDB2                                                  03850000
RPLIOERR EQU   RPLFDB2                                                  03851000
RPLDVUNS EQU   RPLFDB2                                                  03852000
RPLATND  EQU   RPLFDB2                                                  03853000
RPLRVID  EQU   RPLFDB2                                                  03854000
RPLERLK  EQU   RPLFDB2                                                  03855000
RPLSTAT  EQU   RPLFDBWD                                                 03856000
RPLPOST  EQU   RPLECB                                                   03857000
RPLWAIT  EQU   RPLECB                                                   03858000
RPLLEN2  EQU   RPLLEN                                                   03859000
RPLSTYP  EQU   RPLIDWD+1                                                03860000
RPLID    EQU   RPLIDWD                                                  03861000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03862000
@RF00280 EQU   @RC00226                                                 03863000
@RC00262 EQU   @RC00226                                                 03864000
@RF00293 EQU   @EL00002                                                 03865000
@RF00307 EQU   @RC00305                                                 03866000
@RF00310 EQU   @RC00305                                                 03867000
@RC00352 EQU   @EL00004                                                 03868000
@RC00385 EQU   @EL00005                                                 03869000
@RC00392 EQU   @EL00005                                                 03870000
@RF00467 EQU   @EL00009                                                 03871000
@RF00524 EQU   @RC00521                                                 03872000
@RC00545 EQU   @RC00543                                                 03873000
@RF00631 EQU   @RC00615                                                 03874000
@RF00649 EQU   @RC00606                                                 03875000
@RT00930 EQU   WSEXIT                                                   03876000
@RT00937 EQU   WSEXIT                                                   03877000
@RT01031 EQU   WSEXIT                                                   03878000
@RT01035 EQU   WSEXIT                                                   03879000
@RC00267 EQU   @RC00262                                                 03880000
@RC00547 EQU   @RC00545                                                 03881000
@ENDDATA EQU   *                                                        03882000
         END   IDA019RX,(C'PLS0146',0701,78180)                         03883000
