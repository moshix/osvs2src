         TITLE 'IDA019RY--VSAM SHARED BUFFER MANAGER--PART ONE         *00001000
                        '                                               00002000
IDA019RY CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019RY  78.180'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  LA    @10,4095(,@11)                                      0001 00011000
         USING @PSTART,@11                                         0001 00012000
         USING @PSTART+4095,@10                                    0001 00013000
         LH    RWORK1,FUNCTLST(RWORK1)      PICK UP OFFSET              00014000
         B     @00(RWORK1,@11)              GO TO FUNCT EP              00015000
FUNCTLST DC    AL2(FREEB-@PSTART)           OFFSET                      00016000
         DC    AL2(WRBFR-@PSTART)           OFFSET                      00017000
         DC    AL2(SBF-@PSTART)             OFFSET                      00018000
         DC    AL2(GRB-@PSTART)             OFFSET                      00019000
         DC    AL2(GNFL-@PSTART)            OFFSET                      00020000
         DC    AL2(GNNFL-@PSTART)           OFFSET                      00021000
         DC    AL2(GNXT-@PSTART)            OFFSET                      00022000
         DC    AL2(WRTBF-@PSTART)           OFFSET                      00023000
         DC    AL2(SCHBF-@PSTART)           OFFSET                      00024000
         DC    AL2(MRKBF-@PSTART)           OFFSET                      00025000
         DC    AL2(GWSEG-@PSTART)           OFFSET                      00026000
*                                                                  0204 00027000
*   /*****************************************************************/ 00028000
*   /*                                                               */ 00029000
*   /* FREEB - FREE BUFFER                                           */ 00030000
*   /*                                                               */ 00031000
*   /*****************************************************************/ 00032000
*                                                                  0204 00033000
*/*                                                                0204 00034000
*01 FUNCTION = TO FREE AN INDEX OR DATA BUFFER FOR REUSE.          0204 00035000
*01 INPUT =    STANDARD VSAM REGISTERS.  ALSO, RBUFC POINTS TO THE 0204 00036000
*              BUFC TO BE FREED.                                   0204 00037000
*01 OUTPUT =   STANDARD VSAM REGISTERS.                              */ 00038000
*                                                                  0204 00039000
*FREEB:                             /* FREE BUFFER                   */ 00040000
*   IF RBUFC=ZERO THEN              /* IF NO BUFC PTR        @ZA17500*/ 00041000
FREEB    LTR   RBUFC,RBUFC                                         0204 00042000
         BZ    @RT00204                                            0204 00043000
*     RETURN;                       /* RTN TO CALLER         @ZA17500*/ 00044000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 00045000
         IDASVR14                                                       00046000
*   IF BUFCMW=ON THEN               /* MUST WRITE ?                  */ 00047000
         TM    BUFCMW(RBUFC),B'10000000'                           0207 00048000
         BNO   @RF00207                                            0207 00049000
*     DO;                           /* YES, SET MDBTS TO IND         */ 00050000
*       CALL SETMDBTS;              /* SET MOD MASK                  */ 00051000
         BAL   @14,SETMDBTS                                        0209 00052000
*       BUFCDDDD=BUFCORBA;          /* IND CORRECT RBA               */ 00053000
         L     @15,BUFCORBA(,RBUFC)                                0210 00054000
         ST    @15,BUFCDDDD(,RBUFC)                                0210 00055000
*     END;                                                         0211 00056000
*                                                                  0211 00057000
*/* IF PROCESSING SPANNED RECORD SEGMENTS IN A FORWARD DIRECTION,    */ 00058000
*/* RETAIN THE SAME BUFFER SO THAT BUFXIRBA WILL KEEP THE SAME VALUE */ 00059000
*/* FOR ALL SEGMENTS OF THE RECORD.  IF PROCESSING BACKWARDS,        */ 00060000
*/* INVALIDATE THE SEGMENTS UNTIL THE FIRST ONE IS REACHED SO THAT   */ 00061000
*/* DUPLICATE RBAS WILL NOT OCCUR (GWSEG LOGIC DURING UPDATE WOULD   */ 00062000
*/* OVERLAY THE CURRENT BUFFER) AND SO THAT EXCLUSIVE CONTROL CHECK- */ 00063000
*/* ING WILL BE DONE WHEN GRBA IS ISSUED FOR THE 1ST SEGMENT @ZA07544*/ 00064000
*                                                                  0212 00065000
*   IF BUFCSEG=ON THEN              /* SPANNED RCD?          @ZA07544*/ 00066000
@RF00207 TM    BUFCSEG(RBUFC),B'01000000'                          0212 00067000
         BNO   @RF00212                                            0212 00068000
*     DO;                           /*                       @ZA07544*/ 00069000
*       RFY                                                        0214 00070000
*         RWORK1 RSTD;              /* GET REG                       */ 00071000
*/*   POINT TO RDF IN RECORD.                                        */ 00072000
*                                                                  0215 00073000
*       RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);     0215 00074000
         L     @15,AMBDSB(,RAMB)                                   0215 00075000
         L     RWORK1,BUFCBAD(,RBUFC)                              0215 00076000
         AL    RWORK1,AMDCINV(,@15)                                0215 00077000
         SL    RWORK1,@CF00493                                     0215 00078000
*       IF(RPLBWD=OFF|RPLKEY=ON) THEN/* FORWARD MODE?        @ZA07544*/ 00079000
         TM    RPLKEY(RRPL),B'10000000'                            0216 00080000
         BNZ   @RT00216                                            0216 00081000
         TM    RPLBWD(RRPL),B'00010000'                            0216 00082000
         BO    @RF00216                                            0216 00083000
@RT00216 DS    0H                                                  0217 00084000
*         DO;                       /* YES IF HERE           @ZA07544*/ 00085000
*           IF RWORK1->RDF1ST=ON&   /* FIRST OR MIDDLE?      @ZA07544*/ 00086000
*               BUFCINS=OFF THEN    /* NOT INSERT BFR        @ZA07544*/ 00087000
         TM    RDF1ST(RWORK1),B'00010000'                          0218 00088000
         BNO   @RF00218                                            0218 00089000
         TM    BUFCINS(RBUFC),B'00100000'                          0218 00090000
         BNZ   @RF00218                                            0218 00091000
*             CALL BMEXIT;          /* YES, RETAIN BFR       @ZA07544*/ 00092000
         BAL   @14,BMEXIT                                          0219 00093000
*           ELSE                    /* NOT 1ST OR MID        @ZA07544*/ 00094000
*             CALL PURGEBFR;        /* REMOVE SEG            @ZA07544*/ 00095000
         B     @RC00218                                            0220 00096000
@RF00218 BAL   @14,PURGEBFR                                        0220 00097000
*         END;                      /* END FWD MODE          @ZA07544*/ 00098000
*       ELSE                        /* BWD PROCESSING        @ZA07544*/ 00099000
*         CALL PURGEBFR;            /* REMOVE SEGMENT        @ZA07544*/ 00100000
         B     @RC00216                                            0222 00101000
@RF00216 BAL   @14,PURGEBFR                                        0222 00102000
*     END;                          /* END SPANNED RCDS      @ZA07544*/ 00103000
@RC00216 DS    0H                                                  0224 00104000
*   BUFCEXC=OFF;                    /* RESET EXC CTRL                */ 00105000
@RF00212 DS    0H                                                  0225 00106000
*   BUFCINS=OFF;                    /* RESET INS IND                 */ 00107000
         NI    BUFCEXC(RBUFC),B'11011101'                          0225 00108000
*   CALL DECRUCNT;                  /* DECR CNT & MK EMPTY IF NEEDED.*/ 00109000
         BAL   @14,DECRUCNT                                        0226 00110000
*   IF RBUFC=PLHIBUFC THEN          /* INDEX BUFC ?                  */ 00111000
         C     RBUFC,PLHIBUFC(,RPLH)                               0227 00112000
         BNE   @RF00227                                            0227 00113000
*     PLHIBUFC=ZERO;                /* YES, ZERO INDEX PTR           */ 00114000
         SLR   @15,@15                                             0228 00115000
         ST    @15,PLHIBUFC(,RPLH)                                 0228 00116000
*   ELSE                            /* NO, IS DATA                   */ 00117000
*     IF RBUFC=PLHDBUFC THEN        /* MAKE SURE                     */ 00118000
         B     @RC00227                                            0229 00119000
@RF00227 C     RBUFC,PLHDBUFC(,RPLH)                               0229 00120000
         BNE   @RF00229                                            0229 00121000
*       PLHDBUFC=ZERO;              /* ZERO DATA PTR                 */ 00122000
         SLR   @15,@15                                             0230 00123000
         ST    @15,PLHDBUFC(,RPLH)                                 0230 00124000
*     ELSE                          /* INSERT -              @ZA07544*/ 00125000
*       IF RBUFC=DIWBUFC THEN       /* - BUFFER?             @ZA07544*/ 00126000
         B     @RC00229                                            0231 00127000
@RF00229 L     @15,AMBIWA(,RAMB)                                   0231 00128000
         C     RBUFC,DIWBUFC(,@15)                                 0231 00129000
         BNE   @RF00231                                            0231 00130000
*         DIWBUFC=ZERO;             /* YES, ZERO PTR         @ZA07544*/ 00131000
         SLR   @00,@00                                             0232 00132000
         ST    @00,DIWBUFC(,@15)                                   0232 00133000
*   CALL BMEXIT;                    /* EXIT TO CALLER                */ 00134000
@RF00231 DS    0H                                                  0233 00135000
@RC00229 DS    0H                                                  0233 00136000
@RC00227 BAL   @14,BMEXIT                                          0233 00137000
*                                                                  0234 00138000
*   /*****************************************************************/ 00139000
*   /*                                                               */ 00140000
*   /* WRBFR - WRITE BUFFER                                          */ 00141000
*   /*                                                               */ 00142000
*   /*****************************************************************/ 00143000
*                                                                  0234 00144000
*/*                                                                0234 00145000
*01 FUNCTION = TO WRITE OUT BUFFER AND CHECK FOR I/O ERRORS.       0234 00146000
*01 INPUT =    RBUFC POINTS TO A BUFC FOR WHICH I/O IS TO BE DONE. 0234 00147000
*01 OUTPUT =   THE STANDARD REGISTERS AND RBUFC ARE UNCHANGED.  A  0234 00148000
*              CODE IS SET IN THE RPL IF AN I/O ERROR OCCURS.        */ 00149000
*                                                                  0234 00150000
*WRBFR:                             /* WRITE BUFFER                  */ 00151000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0234 00152000
         B     @PB00002                                            0234 00153000
WRBFR    DS    0H                                                  0235 00154000
*   IF BUFCMW=OFF&BUFCRRD=OFF THEN  /* IF NO FUNCTION        @ZA07549*/ 00155000
         TM    BUFCMW(RBUFC),B'10100000'                           0235 00156000
         BNZ   @RF00235                                            0235 00157000
*     DO;                           /*                       @ZA16100*/ 00158000
*       BUFCMDBT=ZERO;              /* ZERO MOD BITS         @ZA16100*/ 00159000
         SLR   @15,@15                                             0237 00160000
         ST    @15,BUFCMDBT(,RBUFC)                                0237 00161000
*       RETURN;                     /* RETURN.               @ZA07549*/ 00162000
@EL00002 DS    0H                                                  0238 00163000
@EF00002 DS    0H                                                  0238 00164000
@ER00002 BR    @14                                                 0238 00165000
*     END;                          /*                       @ZA16100*/ 00166000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00167000
@RF00235 DS    0H                                                  0240 00168000
         IDASVR14                                                       00169000
*   IF AMDWCK=ON THEN               /* WRITE CHK OPTION?             */ 00170000
         L     @15,AMBDSB(,RAMB)                                   0241 00171000
         TM    AMDWCK(@15),B'01000000'                             0241 00172000
         BNO   @RF00241                                            0241 00173000
*     BUFCWC=ON;                    /* YES                           */ 00174000
         OI    BUFCWC(RBUFC),B'00001000'                           0242 00175000
*   ELSE                            /* NO                            */ 00176000
*     BUFCWC=OFF;                   /* NO WRT CHK                    */ 00177000
         B     @RC00241                                            0243 00178000
@RF00241 NI    BUFCWC(RBUFC),B'11110111'                           0243 00179000
*   PLHBMSV5=RPARM1;                /* SAVE RPARM1                   */ 00180000
@RC00241 ST    RPARM1,PLHBMSV5(,RPLH)                              0244 00181000
*   IF AMBJRN=ON&                   /* JRNAD REQD -                  */ 00182000
*       BUFCVAL=ON THEN             /* FOR VALID RBA?                */ 00183000
         TM    AMBJRN(RAMB),B'00000010'                            0245 00184000
         BNO   @RF00245                                            0245 00185000
         TM    BUFCVAL(RBUFC),B'00000100'                          0245 00186000
         BNO   @RF00245                                            0245 00187000
*     DO;                           /* YES                           */ 00188000
*       PLHJCODE=PLHJIXM;           /* IND IX MOD                    */ 00189000
         MVI   PLHJCODE(RPLH),B'00101100'                          0247 00190000
*       PLHJRNLL=AMDCINV;           /* CI SIZE                       */ 00191000
         L     @15,AMBDSB(,RAMB)                                   0248 00192000
         L     @15,AMDCINV(,@15)                                   0248 00193000
         ST    @15,PLHJRNLL(,RPLH)                                 0248 00194000
*       PLHJNRBA=BUFCORBA;          /* RBA                           */ 00195000
         L     @15,BUFCORBA(,RBUFC)                                0249 00196000
         ST    @15,PLHJNRBA(,RPLH)                                 0249 00197000
*       PLHCRBA=BUFCBAD;            /* BUFFER ADDR                   */ 00198000
         L     @15,BUFCBAD(,RBUFC)                                 0250 00199000
         ST    @15,PLHCRBA(,RPLH)                                  0250 00200000
*I01:                                                              0251 00201000
*       DO;                         /* IDACALL(IDATJXIT)             */ 00202000
I01      DS    0H                                                  0252 00203000
*         CALL IDATJXIT;            /* EXIT TO IDATJXIT              */ 00204000
         L     @15,@CV00153                                        0252 00205000
         BALR  @14,@15                                             0252 00206000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00207000
         BALR @11,0                                                     00208000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00209000
         USING *,@11                                                    00210000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 00211000
         USING *+4095,@10                                               00212000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 00213000
         LA    @10,4095(@11)                                            00214000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 00215000
         L     @10,=A(@PSTART+4095)                                     00216000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 00217000
         USING @PSTART+4095,@10                                         00218000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00219000
         L     @11,=A(@PSTART)                                          00220000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00221000
         USING @PSTART,@11                                              00222000
*       END I01;                    /* JRNAD EXIT                    */ 00223000
*     END;                                                         0262 00224000
*   RPARM1=PLHDIOB;                 /* POINT TO IOB                  */ 00225000
@RF00245 L     RPARM1,PLHDIOB(,RPLH)                               0263 00226000
*   IF BUFCER2=ON THEN              /* IF PRIOR WRITE ERROR          */ 00227000
         TM    BUFCER2(RBUFC),B'00001000'                          0264 00228000
         BNO   @RF00264                                            0264 00229000
*     DO;                           /* ADJUST ERROR COUNT.           */ 00230000
*       BUFCER2=OFF;                /* CLEAR ERROR FLAG.             */ 00231000
*                                                                  0266 00232000
         NI    BUFCER2(RBUFC),B'11110111'                          0266 00233000
*       /*************************************************************/ 00234000
*       /*                                                           */ 00235000
*       /* DECR BSPH ERR CNT                                         */ 00236000
*       /*                                                           */ 00237000
*       /*************************************************************/ 00238000
*                                                                  0267 00239000
*WRBDERCT:                                                         0267 00240000
*       RFY                                                        0267 00241000
*        (RWORK4,                                                  0267 00242000
*         RWORK5) RSTD;             /* LOCK REGS                     */ 00243000
WRBDERCT DS    0H                                                  0268 00244000
*       RWORK4=BSPHRSC2;            /* OLD CNT                       */ 00245000
         L     @15,AMBBUFC(,RAMB)                                  0268 00246000
         L     RWORK4,BSPHRSC2(,@15)                               0268 00247000
*       RWORK5=RWORK4-ONE;          /* NEW CNT                       */ 00248000
         LR    RWORK5,RWORK4                                       0269 00249000
         BCTR  RWORK5,0                                            0269 00250000
*       CS(RWORK4,RWORK5,BSPHRSC2); /* SWAP IF NO CHG                */ 00251000
         CS    RWORK4,@09,BSPHRSC2(@15)                            0270 00252000
*       GEN(BNZ WRBDERCT);          /* LOOP TILL SUCCESSFUL          */ 00253000
         BNZ WRBDERCT                                                   00254000
*       RFY                                                        0272 00255000
*        (RWORK4,                                                  0272 00256000
*         RWORK5) UNRSTD;           /* UNLOCK                        */ 00257000
*     END;                          /* END PREVIOUS WRITE ERR        */ 00258000
*   IF RPLASY=OFF THEN              /* SYNCHRONOUS REQUEST?  @Z40GSDT*/ 00259000
@RF00264 TM    RPLASY(RRPL),B'00001000'                            0274 00260000
         BNZ   @RF00274                                            0274 00261000
*     PLHSR=ON;                     /* SET SUSPEND/RESUME    @Z40GSDT*/ 00262000
         OI    PLHSR(RPLH),B'00000001'                             0275 00263000
*I02:                                                              0276 00264000
*   DO;                             /* IDACALL(IDA019R3)             */ 00265000
@RF00274 DS    0H                                                  0276 00266000
I02      DS    0H                                                  0277 00267000
*     CALL IDA019R3;                /* EXIT TO IDA019R3              */ 00268000
         L     @15,@CV00148                                        0277 00269000
         BALR  @14,@15                                             0277 00270000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00271000
         BALR @11,0                                                     00272000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00273000
         USING *,@11                                                    00274000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 00275000
         USING *+4095,@10                                               00276000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 00277000
         LA    @10,4095(@11)                                            00278000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 00279000
         L     @10,=A(@PSTART+4095)                                     00280000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 00281000
         USING @PSTART+4095,@10                                         00282000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00283000
         L     @11,=A(@PSTART)                                          00284000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00285000
         USING @PSTART,@11                                              00286000
*   END I02;                        /* CALL I/O MGR                  */ 00287000
*I03:                                                              0287 00288000
*   DO;                             /* IDACALL(IDAWAIT)              */ 00289000
I03      DS    0H                                                  0288 00290000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 00291000
         L     @15,@CV00150                                        0288 00292000
         BALR  @14,@15                                             0288 00293000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00294000
         BALR @11,0                                                     00295000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00296000
         USING *,@11                                                    00297000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 00298000
         USING *+4095,@10                                               00299000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 00300000
         LA    @10,4095(@11)                                            00301000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 00302000
         L     @10,=A(@PSTART+4095)                                     00303000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 00304000
         USING @PSTART+4095,@10                                         00305000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00306000
         L     @11,=A(@PSTART)                                          00307000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00308000
         USING @PSTART,@11                                              00309000
*   END I03;                        /* SYNCHRONIZE                   */ 00310000
*   CALL ERRORCHK;                  /* CHK FOR ERRORS                */ 00311000
         BAL   @14,ERRORCHK                                        0298 00312000
*   RPARM1=PLHBMSV5;                /* RESTORE RPARM1                */ 00313000
         L     RPARM1,PLHBMSV5(,RPLH)                              0299 00314000
*   IF RPLRTNCD=ZERO THEN           /* ERROR ?                       */ 00315000
         CLI   RPLRTNCD(RRPL),0                                    0300 00316000
         BNE   @RF00300                                            0300 00317000
*     BUFCMDBT=ZERO;                /* NO, SET TO RETURN             */ 00318000
         SLR   @15,@15                                             0301 00319000
         ST    @15,BUFCMDBT(,RBUFC)                                0301 00320000
*   ELSE                            /* YES, SET FOR MSG              */ 00321000
*     IF RPLRTNCD='0C'X THEN        /* PHYSICAL ERR?                 */ 00322000
         B     @RC00300                                            0302 00323000
@RF00300 CLI   RPLRTNCD(RRPL),12                                   0302 00324000
         BNE   @RF00302                                            0302 00325000
*       DO;                         /* YES                           */ 00326000
*         PLHJNRBA=RPLRTNCD;        /* RETURN CODE                   */ 00327000
         SLR   @15,@15                                             0304 00328000
         IC    @15,RPLRTNCD(,RRPL)                                 0304 00329000
         ST    @15,PLHJNRBA(,RPLH)                                 0304 00330000
*I04:                                                              0305 00331000
*         DO;                       /* IDACALL(IDA019R5)             */ 00332000
I04      DS    0H                                                  0306 00333000
*           CALL IDA019R5;          /* EXIT TO IDA019R5              */ 00334000
         L     @15,@CV00149                                        0306 00335000
         BALR  @14,@15                                             0306 00336000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 00337000
         BALR @11,0                                                     00338000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 00339000
         USING *,@11                                                    00340000
*           GEN(USING *+4095,@10);  /* ESTABLISH SECOND BASE         */ 00341000
         USING *+4095,@10                                               00342000
*           GEN(LA    @10,4095(@11));/* LOAD SECOND BASE             */ 00343000
         LA    @10,4095(@11)                                            00344000
*           GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 00345000
         L     @10,=A(@PSTART+4095)                                     00346000
*           GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE     */ 00347000
         USING @PSTART+4095,@10                                         00348000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 00349000
         L     @11,=A(@PSTART)                                          00350000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 00351000
         USING @PSTART,@11                                              00352000
*         END I04;                  /* MSG RTN                       */ 00353000
*         IF AMBEXEX(ONE:ONE)^=ZERO THEN/* YES                       */ 00354000
         CLI   AMBEXEX(RAMB),0                                     0316 00355000
         BE    @RF00316                                            0316 00356000
*           DO;                                                    0317 00357000
*I05:                                                              0318 00358000
*             DO;                   /* IDACALL(IDAEXEX)              */ 00359000
I05      DS    0H                                                  0319 00360000
*               CALL IDAEXEX;       /* EXIT TO IDAEXEX               */ 00361000
         L     @15,@CV00154                                        0319 00362000
         BALR  @14,@15                                             0319 00363000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00364000
         BALR @11,0                                                     00365000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00366000
         USING *,@11                                                    00367000
*               GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE       */ 00368000
         USING *+4095,@10                                               00369000
*               GEN(LA    @10,4095(@11));/* LOAD SECOND BASE         */ 00370000
         LA    @10,4095(@11)                                            00371000
*               GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE*/ 00372000
         L     @10,=A(@PSTART+4095)                                     00373000
*               GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE */ 00374000
         USING @PSTART+4095,@10                                         00375000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00376000
         L     @11,=A(@PSTART)                                          00377000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00378000
         USING @PSTART,@11                                              00379000
*             END I05;              /* EXCEPTION RTN                 */ 00380000
*           END;                    /* END EXCEPTION CODE            */ 00381000
*         IF AMBJRN=ON THEN         /* JRN EXIT ACTIVE?              */ 00382000
@RF00316 TM    AMBJRN(RAMB),B'00000010'                            0330 00383000
         BNO   @RF00330                                            0330 00384000
*           DO;                     /* YES                           */ 00385000
*             PLHJCODE=PLHJOER;     /* IND OUTPUT ERR                */ 00386000
         MVI   PLHJCODE(RPLH),B'00101000'                          0332 00387000
*             PLHJRNLL=BUFCMDBT;    /* MOD MASK                      */ 00388000
         L     @15,BUFCMDBT(,RBUFC)                                0333 00389000
         ST    @15,PLHJRNLL(,RPLH)                                 0333 00390000
*             PLHCRBA=BUFCBAD;      /* BUFFER ADDR                   */ 00391000
         L     @15,BUFCBAD(,RBUFC)                                 0334 00392000
         ST    @15,PLHCRBA(,RPLH)                                  0334 00393000
*I06:                                                              0335 00394000
*             DO;                   /* IDACALL(IDATJXIT)             */ 00395000
I06      DS    0H                                                  0336 00396000
*               CALL IDATJXIT;      /* EXIT TO IDATJXIT              */ 00397000
         L     @15,@CV00153                                        0336 00398000
         BALR  @14,@15                                             0336 00399000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 00400000
         BALR @11,0                                                     00401000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 00402000
         USING *,@11                                                    00403000
*               GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE       */ 00404000
         USING *+4095,@10                                               00405000
*               GEN(LA    @10,4095(@11));/* LOAD SECOND BASE         */ 00406000
         LA    @10,4095(@11)                                            00407000
*               GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE*/ 00408000
         L     @10,=A(@PSTART+4095)                                     00409000
*               GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE */ 00410000
         USING @PSTART+4095,@10                                         00411000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 00412000
         L     @11,=A(@PSTART)                                          00413000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 00414000
         USING @PSTART,@11                                              00415000
*             END I06;              /* JRNAD EXIT                    */ 00416000
*                                                                  0345 00417000
*             /*******************************************************/ 00418000
*             /*                                                     */ 00419000
*             /* USE MASK RETURNED.                                  */ 00420000
*             /*                                                     */ 00421000
*             /*******************************************************/ 00422000
*                                                                  0346 00423000
*             BUFCMDBT=BUFCMDBT|PLHJRNLL;                          0346 00424000
         L     @15,BUFCMDBT(,RBUFC)                                0346 00425000
         O     @15,PLHJRNLL(,RPLH)                                 0346 00426000
         ST    @15,BUFCMDBT(,RBUFC)                                0346 00427000
*             RFY                                                  0347 00428000
*              (RWORK1,                                            0347 00429000
*               RWORK2) RSTD;       /* LOCK                          */ 00430000
*WRBLOOP1:                                                         0348 00431000
*             RWORK1=BSPHMDBT;      /* OLD MASK                      */ 00432000
WRBLOOP1 L     @15,AMBBUFC(,RAMB)                                  0348 00433000
         L     RWORK1,BSPHMDBT(,@15)                               0348 00434000
*             RWORK2=RWORK1|PLHJRNLL;/* NEW MASK                     */ 00435000
         LR    RWORK2,RWORK1                                       0349 00436000
         O     RWORK2,PLHJRNLL(,RPLH)                              0349 00437000
*             CS(RWORK1,RWORK2,BSPHMDBT);/* MODIFY                   */ 00438000
         CS    RWORK1,@06,BSPHMDBT(@15)                            0350 00439000
*             GEN(BNZ   WRBLOOP1);  /* LOOP TILL SUCCESSFUL          */ 00440000
         BNZ   WRBLOOP1                                                 00441000
*           END;                    /* END JRNAD CODE                */ 00442000
*         IF RPLEMLEN>=LENGTH(ERBASE) THEN/* ANY MSG?                */ 00443000
@RF00330 CLC   RPLEMLEN(2,RRPL),@CH01401                           0353 00444000
         BL    @RF00353                                            0353 00445000
*           ERMBFRA=ZERO;           /* YES, ZERO BUFC PTR            */ 00446000
         L     @15,RPLERMSA(,RRPL)                                 0354 00447000
         SLR   @07,@07                                             0354 00448000
         STCM  @07,15,ERMBFRA(@15)                                 0354 00449000
*         IF PLHJNRBA=ZERO THEN     /* PROCESS OPTIONS ZERO?         */ 00450000
@RF00353 SLR   @15,@15                                             0355 00451000
         CL    @15,PLHJNRBA(,RPLH)                                 0355 00452000
         BNE   @RF00355                                            0355 00453000
*           RPLFDBWD=ZERO;          /* CLEAR RTN CODE        @ZA07544*/ 00454000
         ST    @15,RPLFDBWD(,RRPL)                                 0356 00455000
*         ELSE                      /* ERROR IS UNCLEARED            */ 00456000
*           DO;                     /* INCREMENT ERROR COUNT         */ 00457000
         B     @RC00355                                            0357 00458000
@RF00355 DS    0H                                                  0358 00459000
*             RWORK1=BSPHRSC2;      /* BSPHERCT                      */ 00460000
         L     @15,AMBBUFC(,RAMB)                                  0358 00461000
         L     RWORK1,BSPHRSC2(,@15)                               0358 00462000
*CSLOOP7:                                                          0359 00463000
*             RWORK2=RWORK1+ONE;    /* NEW CNT                       */ 00464000
CSLOOP7  LA    RWORK2,1                                            0359 00465000
         ALR   RWORK2,RWORK1                                       0359 00466000
*             CS(RWORK1,RWORK2,BSPHRSC2);/* SWAP IF NO CHNG          */ 00467000
         L     @07,AMBBUFC(,RAMB)                                  0360 00468000
         CS    RWORK1,@06,BSPHRSC2(@07)                            0360 00469000
*             BC(7,CSLOOP7);        /* LOOP TILL SUCCESSFUL  @Z40GSDT*/ 00470000
         BC    7,CSLOOP7                                           0361 00471000
*           END;                    /* END OF UNCLEARED ERROR        */ 00472000
*         RFY                                                      0363 00473000
*          (RWORK1,                                                0363 00474000
*           RWORK2) UNRSTD;         /* UNLOCK                @OZ05537*/ 00475000
@RC00355 DS    0H                                                  0364 00476000
*         RPARM1=PLHBMSV5;          /* RESTORE RPARM1                */ 00477000
         L     RPARM1,PLHBMSV5(,RPLH)                              0364 00478000
*       END;                        /* END ERROR CODE                */ 00479000
*   CALL BMEXIT;                    /* RETURN TO CALLER              */ 00480000
@RF00302 DS    0H                                                  0366 00481000
@RC00300 BAL   @14,BMEXIT                                          0366 00482000
*   END WRBFR;                      /* END OF FORCE WRITE            */ 00483000
         B     @EL00002                                            0367 00484000
@PB00002 DS    0H                                                  0368 00485000
*                                                                  0368 00486000
*   /*****************************************************************/ 00487000
*   /*                                                               */ 00488000
*   /* SBF - SUBTRACT BUFFER                                         */ 00489000
*   /*                                                               */ 00490000
*   /*****************************************************************/ 00491000
*                                                                  0368 00492000
*/*                                                                0368 00493000
*01 FUNCTION = REMOVAL OF CURRENT DATA AND INDEX BUFC FROM A CHAIN.     00494000
*01 INPUT =    RBUFC CONTAINS THE ADDRESS OF THE BUFC TO BE REMOVED .   00495000
*01 OUTPUT =   BUFC IS RELEASED. RPL CODES SET IF ERROR OCCURS.      */ 00496000
*                                                                  0368 00497000
*SBF:                               /* SUBTRACT BUFFER               */ 00498000
*   GEN(IDASVR14);                  /* SAVE                          */ 00499000
SBF      IDASVR14                                                       00500000
*   RBUFC=PLHDBUFC;                 /* SET FOR DATA BUFC             */ 00501000
         L     RBUFC,PLHDBUFC(,RPLH)                               0369 00502000
*   RAMB=AMBLDTA;                   /* POINT TO DATA AMB     @ZA27946*/ 00503000
         L     @15,RPLDACB(,RRPL)                                  0370 00504000
         L     @15,ACBAMBL(,@15)                                   0370 00505000
         L     RAMB,AMBLDTA(,@15)                                  0370 00506000
*SBFLP1:                                                           0371 00507000
*   IF RBUFC^=ZERO THEN             /* IS THERE A BUFC?              */ 00508000
SBFLP1   LTR   RBUFC,RBUFC                                         0371 00509000
         BZ    @RF00371                                            0371 00510000
*     DO;                           /* YES                           */ 00511000
*       IF BUFCMW=ON THEN           /* MUST WRITE?                   */ 00512000
         TM    BUFCMW(RBUFC),B'10000000'                           0373 00513000
         BNO   @RF00373                                            0373 00514000
*         DO;                       /* YES                           */ 00515000
*           CALL SETMDBTS;          /* SET MOD BITS                  */ 00516000
         BAL   @14,SETMDBTS                                        0375 00517000
*           BUFCDDDD=BUFCORBA;      /* IND CORRECT RBA               */ 00518000
         L     @15,BUFCORBA(,RBUFC)                                0376 00519000
         ST    @15,BUFCDDDD(,RBUFC)                                0376 00520000
*           IF AMBDFR=OFF&          /* NO DEFER &                    */ 00521000
*               BUFCUCNT=ONE THEN   /* SINGLE USER                   */ 00522000
         TM    AMBDFR(RAMB),B'00001000'                            0377 00523000
         BNZ   @RF00377                                            0377 00524000
         CLI   BUFCUCNT(RBUFC),1                                   0377 00525000
         BNE   @RF00377                                            0377 00526000
*             DO;                   /* YES WRITE IT                  */ 00527000
*               BUFCBSYW=ON;        /* IND BSY WRITE                 */ 00528000
         OI    BUFCBSYW(RBUFC),B'00010000'                         0379 00529000
*               CALL WRBFR;         /* WRITE IT                      */ 00530000
         BAL   @14,WRBFR                                           0380 00531000
*               BUFCBSYW=OFF;       /* RESET BSY WRITE               */ 00532000
         NI    BUFCBSYW(RBUFC),B'11101111'                         0381 00533000
*               RFY                                                0382 00534000
*                (RWORK1,                                          0382 00535000
*                 RWORK2) RSTD;     /* LOCK UP REGS                  */ 00536000
*SBFLP2:                                                           0383 00537000
*               RWORK1=BSPHUIW;     /* OLD CNT                       */ 00538000
SBFLP2   L     @15,AMBBUFC(,RAMB)                                  0383 00539000
         L     RWORK1,BSPHUIW(,@15)                                0383 00540000
*               RWORK2=RWORK1+ONE;  /* INCR                          */ 00541000
         LA    RWORK2,1                                            0384 00542000
         ALR   RWORK2,RWORK1                                       0384 00543000
*               CS(RWORK1,RWORK2,BSPHUIW);/* MODIFY                  */ 00544000
         CS    RWORK1,@06,BSPHUIW(@15)                             0385 00545000
*               GEN(BNZ   SBFLP2);  /* LOOP TILL SUCCESSFUL          */ 00546000
         BNZ   SBFLP2                                                   00547000
*               RFY                                                0387 00548000
*                (RWORK1,                                          0387 00549000
*                 RWORK2) UNRSTD;   /* FREE REGS                     */ 00550000
*             END;                                                 0388 00551000
*         END;                      /* END MUST WRITE ON             */ 00552000
@RF00377 DS    0H                                                  0390 00553000
*       IF BUFCSEG=ON THEN          /* IF SPANNED RCD        @ZA07544*/ 00554000
@RF00373 TM    BUFCSEG(RBUFC),B'01000000'                          0390 00555000
         BNO   @RF00390                                            0390 00556000
*         CALL PURGEBFR;            /* FORGET IT             @ZA07544*/ 00557000
         BAL   @14,PURGEBFR                                        0391 00558000
*       BUFCEXC=OFF;                /* RESET EXCL CTRL               */ 00559000
@RF00390 NI    BUFCEXC(RBUFC),B'11111101'                          0392 00560000
*       CALL DECRUCNT;              /* DECR CNT                      */ 00561000
         BAL   @14,DECRUCNT                                        0393 00562000
*       PLHDBUFC=ZERO;              /* FREE BUFC                     */ 00563000
         SLR   @15,@15                                             0394 00564000
         ST    @15,PLHDBUFC(,RPLH)                                 0394 00565000
*     END;                          /* END RBUFC NE ZERO             */ 00566000
*   IF AMBTYPE=AMBINDEX THEN        /* INDEX AMB?                    */ 00567000
@RF00371 TM    AMBTYPE(RAMB),B'01000000'                           0396 00568000
         BNO   @RF00396                                            0396 00569000
*     DO;                           /* YES                           */ 00570000
*       PLHIBUFC=ZERO;              /* FREE BUFC                     */ 00571000
         SLR   @15,@15                                             0398 00572000
         ST    @15,PLHIBUFC(,RPLH)                                 0398 00573000
*       RAMB=AMBLDTA;               /* PT TO DATA AMB                */ 00574000
         L     @15,RPLDACB(,RRPL)                                  0399 00575000
         L     @15,ACBAMBL(,@15)                                   0399 00576000
         L     RAMB,AMBLDTA(,@15)                                  0399 00577000
*     END;                                                         0400 00578000
*   ELSE                            /* NO CHK FOR IC BUFC            */ 00579000
*     DO;                                                          0401 00580000
         B     @RC00396                                            0401 00581000
@RF00396 DS    0H                                                  0402 00582000
*       IF PLHIBUFC^=ZERO THEN      /* IS THERE AN IX BUFC?          */ 00583000
         L     @15,PLHIBUFC(,RPLH)                                 0402 00584000
         LTR   @15,@15                                             0402 00585000
         BZ    @RF00402                                            0402 00586000
*         DO;                       /* YES                           */ 00587000
*           RBUFC=PLHIBUFC;         /* PT TO IX BUFC                 */ 00588000
         LR    RBUFC,@15                                           0404 00589000
*           RAMB=BUFCAMB;           /* PT TO IX AMB                  */ 00590000
         L     RAMB,BUFCAMB(,RBUFC)                                0405 00591000
*           GOTO SBFLP1;            /* LOOP TO FREE IX BUFC          */ 00592000
         B     SBFLP1                                              0406 00593000
*         END;                                                     0407 00594000
*     END;                                                         0408 00595000
@RF00402 DS    0H                                                  0409 00596000
*   CALL BMEXIT;                    /* END OF SUBTRACT BUFFER        */ 00597000
@RC00396 BAL   @14,BMEXIT                                          0409 00598000
*                                                                  0410 00599000
*   /*****************************************************************/ 00600000
*   /*                                                               */ 00601000
*   /* GRB - GET RBA                                                 */ 00602000
*   /*                                                               */ 00603000
*   /*****************************************************************/ 00604000
*                                                                  0410 00605000
*/*                                                                0410 00606000
*01 FUNCTION = GET A CI WITH THE SPECIFIED RBA.                    0410 00607000
*01 INPUT =    RRPL - RPL FOR REQUEST.                             0410 00608000
*              RPLH - PLH FOR REQUEST.                             0410 00609000
*              RPARM1 - RBA OF CI REQUESTED.                       0410 00610000
*              RAMB - AMB CONTAINING CI.                           0410 00611000
*01 OUTPUT =   RBUFC - BUFC OF BUFFER CONTAINING REQUESTED CI.     0410 00612000
*              EXCLUSIVE CTRL IS SET IF REQUIRED.                  0410 00613000
*              RPLERRCD & RPLRTNCD SET IF ANY ERRORS OCCUR.        0410 00614000
*              RPARM1 = CI RBA IF EXCLUSIVE CONTROL ERROR.   @ZA07544*/ 00615000
*                                                                  0410 00616000
*GRB:                               /* GET RBA                       */ 00617000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0410 00618000
         B     @PB00003                                            0410 00619000
GRB      DS    0H                                                  0411 00620000
*   GEN(IDASVR14);                  /* SAVE RTRN REG                 */ 00621000
         IDASVR14                                                       00622000
*   IF AMBTYPE=AMBDATA THEN         /* DATA AMB?                     */ 00623000
         TM    AMBTYPE(RAMB),B'01000000'                           0412 00624000
         BNZ   @RF00412                                            0412 00625000
*     DO;                                                          0413 00626000
*       RBUFC=PLHDBUFC;             /* PTR TO DBUFC          @ZA07544*/ 00627000
         L     RBUFC,PLHDBUFC(,RPLH)                               0414 00628000
*       IF RBUFC^=ZERO THEN         /* IF NECESSARY,         @ZA07544*/ 00629000
         LTR   RBUFC,RBUFC                                         0415 00630000
         BZ    @RF00415                                            0415 00631000
*         DO;                       /* FREE OLD BUFC         @ZA07544*/ 00632000
*           IF BUFCSEG=ON THEN      /* DOES BFR HAVE         @ZA07544*/ 00633000
         TM    BUFCSEG(RBUFC),B'01000000'                          0417 00634000
         BNO   @RF00417                                            0417 00635000
*             DO;                   /* SPANNED RCD?          @ZA07544*/ 00636000
*               BUFCSEG=OFF;        /* YES, FORCE            @ZA07544*/ 00637000
*               BUFCVAL=OFF;        /* FREEB TO GET          @ZA07544*/ 00638000
         NI    BUFCSEG(RBUFC),B'10111011'                          0420 00639000
*             END;                  /* RID OF IT.            @ZA07544*/ 00640000
*           CALL FREEB;             /* FREE OLD BFR.         @ZA07544*/ 00641000
@RF00417 BAL   @14,FREEB                                           0422 00642000
*         END;                      /* END OF SPANNED        @ZA07544*/ 00643000
*       PLHNRBA=RPARM1;             /* SAVE CURR RBA         @ZA07544*/ 00644000
@RF00415 ST    RPARM1,PLHNRBA(,RPLH)                               0424 00645000
*     END;                          /* END DATA AMB          @ZA07544*/ 00646000
*   ELSE                            /* INDEX AMB             @ZA07544*/ 00647000
*     DO;                           /*                       @ZA07544*/ 00648000
         B     @RC00412                                            0426 00649000
@RF00412 DS    0H                                                  0427 00650000
*       RBUFC=PLHIBUFC;             /* INDEX POINTER         @ZA07544*/ 00651000
         L     RBUFC,PLHIBUFC(,RPLH)                               0427 00652000
*       IF RBUFC^=ZERO THEN         /* IF NECESSARY,         @ZA07544*/ 00653000
         LTR   RBUFC,RBUFC                                         0428 00654000
         BZ    @RF00428                                            0428 00655000
*         CALL FREEB;               /* FREE OLD BFR.         @ZA07544*/ 00656000
         BAL   @14,FREEB                                           0429 00657000
*     END;                          /* END INDEX AMB         @ZA07544*/ 00658000
*                                                                  0430 00659000
@RF00428 DS    0H                                                  0431 00660000
*   /*****************************************************************/ 00661000
*   /*                                                               */ 00662000
*   /* SET EXCL CTRL ERR IF DESIRED RBA IS IN ACTIVE CI OR CA SPLIT  */ 00663000
*   /* BY ANOTHER PLH.                                               */ 00664000
*   /*                                                               */ 00665000
*   /*****************************************************************/ 00666000
*                                                                  0431 00667000
*GRSTRT1:                           /* RESTART POS. 1                */ 00668000
*   IF AMBTYPE=AMBDATA&             /* DATA AMB & -                  */ 00669000
*       ((DIWCAS=ON&                /* CA SPLIT &            @ZA25653*/ 00670000
*       RPLH^=DIWPLH&               /* ANOTHER PLH &         @ZA25653*/ 00671000
*       (RPARM1>=DIWLRBA&           /* IN RBA                @ZA25653*/ 00672000
*       RPARM1<=DIWHRBA))|          /* - RANGE OR            @ZA25653*/ 00673000
*       (DIWSHIFT=ON&               /* INSERT POINT          @ZA25653*/ 00674000
*       RPLH^=DIWPLH&               /* ANOTHER PLH &         @ZA25653*/ 00675000
*       RPARM1=DIWINRBA)) THEN      /* SHIFT?                @ZA25653*/ 00676000
@RC00412 DS    0H                                                  0431 00677000
GRSTRT1  TM    AMBTYPE(RAMB),B'01000000'                           0431 00678000
         BNZ   @RF00431                                            0431 00679000
         L     @15,AMBIWA(,RAMB)                                   0431 00680000
         TM    DIWCAS(@15),B'10000000'                             0431 00681000
         BNO   @GL00005                                            0431 00682000
         C     RPLH,DIWPLH(,@15)                                   0431 00683000
         BE    @GL00005                                            0431 00684000
         CL    RPARM1,DIWLRBA(,@15)                                0431 00685000
         BL    @GL00005                                            0431 00686000
         CL    RPARM1,DIWHRBA(,@15)                                0431 00687000
         BNH   @RT00431                                            0431 00688000
@GL00005 L     @15,AMBIWA(,RAMB)                                   0431 00689000
         TM    DIWSHIFT(@15),B'00000100'                           0431 00690000
         BNO   @RF00431                                            0431 00691000
         C     RPLH,DIWPLH(,@15)                                   0431 00692000
         BE    @RF00431                                            0431 00693000
         CL    RPARM1,DIWINRBA(,@15)                               0431 00694000
         BNE   @RF00431                                            0431 00695000
@RT00431 DS    0H                                                  0432 00696000
*     DO;                           /* YES, EXCL CTRL ERR            */ 00697000
*GREXCLER:                                                         0433 00698000
*       RPLERRCD=RPLEXCL;           /* IND EXCL CTL ERR              */ 00699000
GREXCLER MVI   RPLERRCD(RRPL),X'14'                                0433 00700000
*       RPLRTNCD='08'X;             /* IND LOGICAL ERR               */ 00701000
         MVI   RPLRTNCD(RRPL),X'08'                                0434 00702000
*       CALL BMEXIT;                /* EXIT                          */ 00703000
         BAL   @14,BMEXIT                                          0435 00704000
*     END;                                                         0436 00705000
*   CALL GUCHNSHR;                  /* GET SCH RIGHTS                */ 00706000
@RF00431 BAL   @14,GUCHNSHR                                        0437 00707000
*   PLHRDCNT=AMBXRDCT;              /* SAVE CNT                      */ 00708000
*                                                                  0438 00709000
         L     @15,AMBEOVPT(,RAMB)                                 0438 00710000
         LH    @15,AMBXRDCT(,@15)                                  0438 00711000
         STH   @15,PLHRDCNT(,RPLH)                                 0438 00712000
*   /*****************************************************************/ 00713000
*   /*                                                               */ 00714000
*   /* DO TILL END OF CHAIN OR ERROR.                                */ 00715000
*   /*                                                               */ 00716000
*   /*****************************************************************/ 00717000
*                                                                  0439 00718000
*   RBUFC=BSPHUTOP;                 /* SEARCH ENTIRE CHAIN           */ 00719000
*                                                                  0439 00720000
         L     @15,AMBBUFC(,RAMB)                                  0439 00721000
         L     RBUFC,BSPHUTOP(,@15)                                0439 00722000
*   /*****************************************************************/ 00723000
*   /*                                                               */ 00724000
*   /* SEARCH USE CHAIN FOR DESIRED RBA                              */ 00725000
*   /*                                                               */ 00726000
*   /*****************************************************************/ 00727000
*                                                                  0440 00728000
*   DO WHILE(RBUFC^=ZERO&(BUFCAMB^=RAMB|(RPARM1^=BUFCDDDD&RPARM1^= 0440 00729000
*         BUFXIRBA)|BUFCVAL=OFF));                                 0440 00730000
         B     @DE00440                                            0440 00731000
@DL00440 DS    0H                                                  0441 00732000
*GRSTRT4:                                                          0441 00733000
*     RBUFC=BUFCUCDN;               /* POINT TO NEXT                 */ 00734000
GRSTRT4  L     RBUFC,BUFCUCDN(,RBUFC)                              0441 00735000
*   END;                            /* END DO WHILE                  */ 00736000
@DE00440 LTR   RBUFC,RBUFC                                         0442 00737000
         BZ    @DC00440                                            0442 00738000
         C     RAMB,BUFCAMB(,RBUFC)                                0442 00739000
         BNE   @DL00440                                            0442 00740000
         CL    RPARM1,BUFCDDDD(,RBUFC)                             0442 00741000
         BE    @GL00012                                            0442 00742000
         CL    RPARM1,BUFXIRBA(,RBUFC)                             0442 00743000
         BNE   @DL00440                                            0442 00744000
@GL00012 TM    BUFCVAL(RBUFC),B'00000100'                          0442 00745000
         BZ    @DL00440                                            0442 00746000
@DC00440 DS    0H                                                  0443 00747000
*   IF RBUFC^=ZERO THEN             /* RBA MATCH?                    */ 00748000
         LTR   RBUFC,RBUFC                                         0443 00749000
         BZ    @RF00443                                            0443 00750000
*     DO;                           /* YES, CONT                     */ 00751000
*       IF BUFCBSYR=ON THEN         /* BUSY READ?                    */ 00752000
         TM    BUFCBSYR(RBUFC),B'00100000'                         0445 00753000
         BNO   @RF00445                                            0445 00754000
*         DO;                       /* YES, DEFER                    */ 00755000
*           CALL UCHNRLSE;          /* RELEASE USE CHAIN             */ 00756000
         BAL   @14,UCHNRLSE                                        0447 00757000
*GRBDFR1:                                                          0448 00758000
*           PLHDRMSK=BSYRWMSK;      /* MASK                          */ 00759000
GRBDFR1  MVI   PLHDRMSK(RPLH),X'30'                                0448 00760000
*           PLHDRRSC=ADDR(BUFCFLG2);/* TARGET                        */ 00761000
         LA    @15,BUFCFLG2(,RBUFC)                                0449 00762000
         ST    @15,PLHDRRSC(,RPLH)                                 0449 00763000
*GRBDFR2:                                                          0450 00764000
*           CALL BMDEFER;           /* DEFER RTN                     */ 00765000
GRBDFR2  BAL   @14,BMDEFER                                         0450 00766000
*           GOTO GRSTRT1;           /* RESTART                       */ 00767000
         B     GRSTRT1                                             0451 00768000
*         END;                                                     0452 00769000
*       CALL INCRUCNT;              /* LOCK UP BUFC                  */ 00770000
*                                                                  0453 00771000
@RF00445 BAL   @14,INCRUCNT                                        0453 00772000
*       /*************************************************************/ 00773000
*       /*                                                           */ 00774000
*       /* VERIFY THAT RBA MATCH STILL EXISTS ACROSS USE CNT INCR    */ 00775000
*       /*                                                           */ 00776000
*       /*************************************************************/ 00777000
*                                                                  0454 00778000
*       IF BUFCAMB=RAMB&            /* SAME AMB? &                   */ 00779000
*           BUFCVAL=ON&             /* VALID BUFC &                  */ 00780000
*           (RPARM1=BUFCDDDD|       /* CORRECT -                     */ 00781000
*           RPARM1=BUFXIRBA)        /* - RBA?                        */ 00782000
*         THEN                                                     0454 00783000
         C     RAMB,BUFCAMB(,RBUFC)                                0454 00784000
         BNE   @RF00454                                            0454 00785000
         TM    BUFCVAL(RBUFC),B'00000100'                          0454 00786000
         BNO   @RF00454                                            0454 00787000
         CL    RPARM1,BUFCDDDD(,RBUFC)                             0454 00788000
         BE    @RT00454                                            0454 00789000
         CL    RPARM1,BUFXIRBA(,RBUFC)                             0454 00790000
         BNE   @RF00454                                            0454 00791000
@RT00454 DS    0H                                                  0455 00792000
*         DO;                       /* YES, CONTINUE                 */ 00793000
*           CALL UCHNRLSE;          /* RELE SEARCH RIGHTS            */ 00794000
         BAL   @14,UCHNRLSE                                        0456 00795000
*           IF BUFCEXC=ON THEN      /* BUFC UNDER EXCL CTRL?         */ 00796000
         TM    BUFCEXC(RBUFC),B'00000010'                          0457 00797000
         BNO   @RF00457                                            0457 00798000
*             DO;                   /* YES,                          */ 00799000
*               CALL DECRUCNT;      /* DECR USE CNT                  */ 00800000
         BAL   @14,DECRUCNT                                        0459 00801000
*               IF AMBTYPE=AMBINDEX THEN/* INDEX?                    */ 00802000
         TM    AMBTYPE(RAMB),B'01000000'                           0460 00803000
         BNO   @RF00460                                            0460 00804000
*                 DO;               /* YES, DEFER TILL AVAIL         */ 00805000
*                   PLHDRMSK=ZROMSK;/* MASK                          */ 00806000
         MVC   PLHDRMSK(1,RPLH),ZROMSK                             0462 00807000
*                   PLHDRRSC=ADDR(BUFCUCNT);/* TARGET                */ 00808000
         ST    RBUFC,PLHDRRSC(,RPLH)                               0463 00809000
*                   GOTO GRBDFR2;   /* DEFER                         */ 00810000
         B     GRBDFR2                                             0464 00811000
*                 END;                                             0465 00812000
*               GOTO GREXCLER;      /* IND ERR                       */ 00813000
         B     GREXCLER                                            0466 00814000
*             END;                                                 0467 00815000
*                                                                  0467 00816000
*           /*********************************************************/ 00817000
*           /*                                                       */ 00818000
*           /* IF MATCH WAS ON A SPANNED RECORD SEGMENT, THEN        */ 00819000
*           /* CONTINUE THE SEARCH AT THE NEXT BUFC. (DO NOT SHARE   */ 00820000
*           /* BUFFER)                                       @ZA07544*/ 00821000
*           /*                                                       */ 00822000
*           /*********************************************************/ 00823000
*                                                                  0468 00824000
*           IF BUFCSEG=ON THEN      /* SPANNED RCD?          @ZA07544*/ 00825000
@RF00457 TM    BUFCSEG(RBUFC),B'01000000'                          0468 00826000
         BNO   @RF00468                                            0468 00827000
*             DO;                   /* YES                           */ 00828000
*               CALL DECRUCNT;      /* DECR USE CNT                  */ 00829000
         BAL   @14,DECRUCNT                                        0470 00830000
*               CALL GUCHNSHR;      /* GET SEARCH RIGHTS             */ 00831000
         BAL   @14,GUCHNSHR                                        0471 00832000
*               GOTO GRSTRT4;       /* CONTINUE SEARCH               */ 00833000
         B     GRSTRT4                                             0472 00834000
*             END;                                                 0473 00835000
*           IF PLHRDEXC=ON THEN     /* READ EXCL REQUEST?            */ 00836000
@RF00468 TM    PLHRDEXC(RPLH),B'00001000'                          0474 00837000
         BNO   @RF00474                                            0474 00838000
*             DO;                   /* YES                           */ 00839000
*               RFY                                                0476 00840000
*                (RWORK1,                                          0476 00841000
*                 RWORK2) RSTD;     /* LOCK REGS                     */ 00842000
*GRBCSLP1:                                                         0477 00843000
*               RWORK1=BUFCRSC2;    /* PICK UP CNT                   */ 00844000
GRBCSLP1 L     RWORK1,BUFCRSC2(,RBUFC)                             0477 00845000
*               IF BUFCUCNT=ONE THEN/* SINGLE USER?                  */ 00846000
         CLI   BUFCUCNT(RBUFC),1                                   0478 00847000
         BNE   @RF00478                                            0478 00848000
*                 IF BUFCBSYW=ON THEN/* & BUSY WRITE?                */ 00849000
         TM    BUFCBSYW(RBUFC),B'00010000'                         0479 00850000
         BNO   @RF00479                                            0479 00851000
*                   DO;             /* DEFER REQUEST                 */ 00852000
*                     CALL DECRUCNT;/* DECREMENT USE COUNT           */ 00853000
         BAL   @14,DECRUCNT                                        0481 00854000
*                     GOTO GRBDFR1; /* YES, DEFER                    */ 00855000
         B     GRBDFR1                                             0482 00856000
*                   END;            /* END OF BUSY WRITE CODE        */ 00857000
*                 ELSE              /* NO, SET BUFCEXC               */ 00858000
*                   DO;                                            0484 00859000
@RF00479 DS    0H                                                  0485 00860000
*                     RWORK2=RWORK1|EXCLMSK;/* SET BUFCEXC           */ 00861000
         LR    RWORK2,RWORK1                                       0485 00862000
         O     RWORK2,EXCLMSK                                      0485 00863000
*                     CS(RWORK1,RWORK2,BUFCRSC2);/* MODIFY           */ 00864000
         CS    RWORK1,@06,BUFCRSC2(RBUFC)                          0486 00865000
*                     GEN(BNZ GRBCSLP1);/* LOOP TILL SUCC.           */ 00866000
         BNZ GRBCSLP1                                                   00867000
*                   END;                                           0488 00868000
*               ELSE                /* NO, DFR TILL UCNT = 0         */ 00869000
*                 DO;                                              0489 00870000
         B     @RC00478                                            0489 00871000
@RF00478 DS    0H                                                  0490 00872000
*                   CALL DECRUCNT;  /* DECR USE CNT                  */ 00873000
*                                                                  0490 00874000
         BAL   @14,DECRUCNT                                        0490 00875000
*                   /*************************************************/ 00876000
*                   /*                                               */ 00877000
*                   /* INSURE NO OTHER EXCLUSIVE REQUEST IS DEFFERED */ 00878000
*                   /* FOR THE SAME RESOURCE.                @ZA17500*/ 00879000
*                   /*                                               */ 00880000
*                   /*************************************************/ 00881000
*                                                                  0491 00882000
*                   IF AMBPH->PLHDRREQ>ZERO THEN/* REQ. PENDING    0491 00883000
*                                                            @ZA17500*/ 00884000
         L     @15,AMBPH(,RAMB)                                    0491 00885000
         L     @07,PLHDRREQ(,@15)                                  0491 00886000
         LTR   @07,@07                                             0491 00887000
         BNP   @RF00491                                            0491 00888000
*                     DO;           /* YES                   @ZA17500*/ 00889000
*                       RWORK2=AMBPH+LENGTH(IDAPLHDR);/* POINT TO  0493 00890000
*                                      FIRST PLH             @ZA17500*/ 00891000
         AL    @15,@CF00063                                        0493 00892000
         LR    RWORK2,@15                                          0493 00893000
*                       DO WHILE RWORK2^=ZERO;/* SEARCH PLHS @ZA17500*/ 00894000
         B     @DE00494                                            0494 00895000
@DL00494 DS    0H                                                  0495 00896000
*                         IF RWORK2->PLHDRPND=ON&/* REQ PEND @ZA17500*/ 00897000
*                             RWORK2->PLHRDEXC=ON&/* AND EXC       0495 00898000
*                                      CTL@ZA17500                   */ 00899000
*                             RWORK2->PLHDRRSC=ADDR(BUFCUCNT) THEN/*    00900000
*                                      FOR SAME RESOURCE     @ZA17500*/ 00901000
         TM    PLHDRPND(RWORK2),B'00001010'                        0495 00902000
         BNO   @RF00495                                            0495 00903000
         C     RBUFC,PLHDRRSC(,RWORK2)                             0495 00904000
         BE    @RT00495                                            0495 00905000
*                           GOTO GREXCLER;/* GIVE ERROR      @ZA17500*/ 00906000
*                         RWORK2=RWORK2->PLHCHAIN;/* NEXT PLH      0497 00907000
*                                                            @ZA19628*/ 00908000
@RF00495 L     RWORK2,PLHCHAIN(,RWORK2)                            0497 00909000
*                       END;        /* END SEARCH            @ZA17500*/ 00910000
@DE00494 LTR   RWORK2,RWORK2                                       0498 00911000
         BNZ   @DL00494                                            0498 00912000
*                     END;          /* END PENDING           @ZA17500*/ 00913000
*                   PLHDRMSK=ZROMSK;/* MASK                          */ 00914000
@RF00491 MVC   PLHDRMSK(1,RPLH),ZROMSK                             0500 00915000
*                   PLHDRRSC=ADDR(BUFCUCNT);/* TARGET                */ 00916000
         ST    RBUFC,PLHDRRSC(,RPLH)                               0501 00917000
*                   GOTO GRBDFR2;   /* DEFER                         */ 00918000
         B     GRBDFR2                                             0502 00919000
*                 END;                                             0503 00920000
*               RFY                                                0504 00921000
*                (RWORK1,                                          0504 00922000
*                 RWORK2) UNRSTD;   /* UNLOCK                        */ 00923000
@RC00478 DS    0H                                                  0505 00924000
*             END;                                                 0505 00925000
*                                                                  0505 00926000
*           /*********************************************************/ 00927000
*           /*                                                       */ 00928000
*           /* INCR BSPHFND. ( NO. TIMES RBA FOUND)                  */ 00929000
*           /*                                                       */ 00930000
*           /*********************************************************/ 00931000
*                                                                  0506 00932000
*GRBCSLP2:                                                         0506 00933000
*           RFY                                                    0506 00934000
*            (RWORK1,                                              0506 00935000
*             RWORK2) RSTD;         /* LOCK REGS                     */ 00936000
@RF00474 DS    0H                                                  0506 00937000
GRBCSLP2 DS    0H                                                  0507 00938000
*           RWORK1=BSPHFND;         /* OLD CNT                       */ 00939000
         L     @15,AMBBUFC(,RAMB)                                  0507 00940000
         L     RWORK1,BSPHFND(,@15)                                0507 00941000
*           RWORK2=RWORK1+ONE;      /* NEW CNT                       */ 00942000
         LA    RWORK2,1                                            0508 00943000
         ALR   RWORK2,RWORK1                                       0508 00944000
*           CS(RWORK1,RWORK2,BSPHFND);/* MODIFY                      */ 00945000
         CS    RWORK1,@06,BSPHFND(@15)                             0509 00946000
*           GEN(BNZ GRBCSLP2);      /* LOOP TILL SUCCESSFUL          */ 00947000
         BNZ GRBCSLP2                                                   00948000
*           RFY                                                    0511 00949000
*            (RWORK1,                                              0511 00950000
*             RWORK2) UNRSTD;       /* UNLOCK                        */ 00951000
*                                                                  0511 00952000
*           /*********************************************************/ 00953000
*           /*                                                       */ 00954000
*           /* PLACE BUFC AT TOP OF CHAIN                            */ 00955000
*           /*                                                       */ 00956000
*           /*********************************************************/ 00957000
*                                                                  0512 00958000
*           CALL PUTBTOP;                                          0512 00959000
*                                                                  0512 00960000
         BAL   @14,PUTBTOP                                         0512 00961000
*           /*********************************************************/ 00962000
*           /*                                                       */ 00963000
*           /* NORMAL EXIT. CI HAS BEEN LOCATED IN CHAIN OR READ IN. */ 00964000
*           /*                                                       */ 00965000
*           /*********************************************************/ 00966000
*                                                                  0513 00967000
*GRBXIT1:                                                          0513 00968000
*           IF AMBTYPE=AMBDATA THEN /* DATA AMB?                     */ 00969000
GRBXIT1  TM    AMBTYPE(RAMB),B'01000000'                           0513 00970000
         BNZ   @RF00513                                            0513 00971000
*             DO;                   /* YES, IT IS DATA               */ 00972000
*               BUFCIDXL=ZERO;      /* INDICATE NO INDEX             */ 00973000
         MVI   BUFCIDXL(RBUFC),X'00'                               0515 00974000
*               PLHDBUFC=RBUFC;     /* SAVE BUFFER PTR               */ 00975000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0516 00976000
*             END;                  /* END OF DATA AMB CODE          */ 00977000
*           ELSE                    /* NO, IS INDEX                  */ 00978000
*             DO;                                                  0518 00979000
         B     @RC00513                                            0518 00980000
@RF00513 DS    0H                                                  0519 00981000
*               BUFCIDXL=IXSILN;    /* REMEMBER INDEX LEVEL          */ 00982000
         IC    @15,IXSILN+200(,RPLH)                               0519 00983000
         STC   @15,BUFCIDXL(,RBUFC)                                0519 00984000
*               PLHIBUFC=RBUFC;     /* SAVE BUFC PTR                 */ 00985000
         ST    RBUFC,PLHIBUFC(,RPLH)                               0520 00986000
*             END;                  /* END OF IX AMB CODE            */ 00987000
*           CALL BMEXIT;            /* RETURN TO CALLER              */ 00988000
@RC00513 BAL   @14,BMEXIT                                          0522 00989000
*         END;                      /* END RBA MATCH                 */ 00990000
*       ELSE                        /* NO -                          */ 00991000
*         DO;                                                      0524 00992000
         B     @RC00454                                            0524 00993000
@RF00454 DS    0H                                                  0525 00994000
*           CALL DECRUCNT;          /* DECR USE CNT                  */ 00995000
         BAL   @14,DECRUCNT                                        0525 00996000
*           GOTO GRSTRT4;           /* CONTINUE SEARCH               */ 00997000
         B     GRSTRT4                                             0526 00998000
*         END;                                                     0527 00999000
*     END;                          /* END RBUFC NE ZERO             */ 01000000
*                                                                  0528 01001000
*   /*****************************************************************/ 01002000
*   /*                                                               */ 01003000
*   /* END OF USE CHAIN. RBA NOT FOUND, MUST BE READ.                */ 01004000
*   /*                                                               */ 01005000
*   /*****************************************************************/ 01006000
*                                                                  0529 01007000
*   ELSE                            /* RBUFC EQ ZERO                 */ 01008000
*     DO;                                                          0529 01009000
         B     @RC00443                                            0529 01010000
@RF00443 DS    0H                                                  0530 01011000
*       CALL UCHNRLSE;              /* RELE SCH RIGHTS               */ 01012000
         BAL   @14,UCHNRLSE                                        0530 01013000
*       CALL GETSPACE;              /* GET WORK BUFC                 */ 01014000
         BAL   @14,GETSPACE                                        0531 01015000
*       IF RPLRTNCD^=ZERO THEN      /* BUFC OBTAINED?                */ 01016000
         CLI   RPLRTNCD(RRPL),0                                    0532 01017000
         BE    @RF00532                                            0532 01018000
*         CALL BMEXIT;              /* NO, EXIT                      */ 01019000
*                                                                  0533 01020000
         BAL   @14,BMEXIT                                          0533 01021000
*       /*************************************************************/ 01022000
*       /*                                                           */ 01023000
*       /* BUFC OBTAINED, INITIALIZE IT.                             */ 01024000
*       /*                                                           */ 01025000
*       /*************************************************************/ 01026000
*                                                                  0534 01027000
*       BUFCBSYR=ON;                /* BSY READ                      */ 01028000
@RF00532 OI    BUFCBSYR(RBUFC),B'00100000'                         0534 01029000
*       BUFCDDDD=RPARM1;            /* RBA                           */ 01030000
         ST    RPARM1,BUFCDDDD(,RBUFC)                             0535 01031000
*       BUFXIRBA=RPARM1;            /* RBA                           */ 01032000
         ST    RPARM1,BUFXIRBA(,RBUFC)                             0536 01033000
*       BUFCRRD=ON;                 /* READ REQ'D                    */ 01034000
         OI    BUFCRRD(RBUFC),B'00100000'                          0537 01035000
*       BUFCVAL=ON;                 /* VALID RBA                     */ 01036000
*                                                                  0538 01037000
         OI    BUFCVAL(RBUFC),B'00000100'                          0538 01038000
*       /*************************************************************/ 01039000
*       /*                                                           */ 01040000
*       /* CHECK TO SEE IF ANY READS DONE SINCE ENTRY                */ 01041000
*       /*                                                           */ 01042000
*       /*************************************************************/ 01043000
*                                                                  0539 01044000
*GRBCSLP3:                                                         0539 01045000
*       RFY                                                        0539 01046000
*        (RWORK1,                                                  0539 01047000
*         RWORK2) RSTD;             /* LOCK REGS                     */ 01048000
GRBCSLP3 DS    0H                                                  0540 01049000
*       RWORK1=AMBXCSWD;            /* OLD CNT                       */ 01050000
         L     @15,AMBEOVPT(,RAMB)                                 0540 01051000
         L     RWORK1,AMBXCSWD(,@15)                               0540 01052000
*       RWORK2=RWORK1+ONE;          /* NEW                           */ 01053000
         LA    RWORK2,1                                            0541 01054000
         ALR   RWORK2,RWORK1                                       0541 01055000
*       CS(RWORK1,RWORK2,AMBXCSWD); /* MODIFY                        */ 01056000
         CS    RWORK1,@06,AMBXCSWD(@15)                            0542 01057000
*       GEN(BNZ GRBCSLP3);          /* LOOP TILL SUCCESSFUL          */ 01058000
*                                                                  0543 01059000
         BNZ GRBCSLP3                                                   01060000
*       /*************************************************************/ 01061000
*       /*                                                           */ 01062000
*       /* IF ANY READS DONE, SEARCH CHAIN AGAIN IN BUFCHAIN         */ 01063000
*       /* SEQUENCE.                                                 */ 01064000
*       /*                                                           */ 01065000
*       /*************************************************************/ 01066000
*                                                                  0544 01067000
*       IF RWORK1=PLHRDCNT THEN     /* CNT CHANGE?                   */ 01068000
         CH    RWORK1,PLHRDCNT(,RPLH)                              0544 01069000
         BNE   @RF00544                                            0544 01070000
*         DO;                       /* NO, CONTINUE                  */ 01071000
*GRBRDBFR:                          /* READ BUFFER                   */ 01072000
*           CALL READBFR;           /* READ CI                       */ 01073000
GRBRDBFR BAL   @14,READBFR                                         0546 01074000
*           IF RPLRTNCD=ZERO THEN   /* ERROR?                        */ 01075000
         CLI   RPLRTNCD(RRPL),0                                    0547 01076000
         BNE   @RF00547                                            0547 01077000
*             DO;                   /* NO, SET TO EXIT               */ 01078000
*               IF PLHRDEXC=ON THEN /* READ EXCL?                    */ 01079000
         TM    PLHRDEXC(RPLH),B'00001000'                          0549 01080000
         BNO   @RF00549                                            0549 01081000
*                 BUFCEXC=ON;       /* YES, SET BUFC                 */ 01082000
         OI    BUFCEXC(RBUFC),B'00000010'                          0550 01083000
*               BUFCBSYR=OFF;       /* RESET BSY RD                  */ 01084000
@RF00549 NI    BUFCBSYR(RBUFC),B'11011111'                         0551 01085000
*               GOTO GRBXIT1;       /* EXIT                          */ 01086000
         B     GRBXIT1                                             0552 01087000
*             END;                                                 0553 01088000
*           ELSE                    /* READ ERROR, RLSE BUFC,        */ 01089000
*             DO;                                                  0554 01090000
@RF00547 DS    0H                                                  0555 01091000
*               BUFCVAL=OFF;        /* IND -                         */ 01092000
         NI    BUFCVAL(RBUFC),B'11111011'                          0555 01093000
*               BUFCRRD=OFF;        /* ERROR -                       */ 01094000
         NI    BUFCRRD(RBUFC),B'11011111'                          0556 01095000
*               BUFCEXC=OFF;        /* DECR -                        */ 01096000
         NI    BUFCEXC(RBUFC),B'11111101'                          0557 01097000
*               BUFCBSYR=OFF;       /* USE -                         */ 01098000
         NI    BUFCBSYR(RBUFC),B'11011111'                         0558 01099000
*               CALL DECRUCNT;      /* CNT AND                       */ 01100000
         BAL   @14,DECRUCNT                                        0559 01101000
*               CALL BMEXIT;        /* EXIT.                         */ 01102000
         BAL   @14,BMEXIT                                          0560 01103000
*             END;                                                 0561 01104000
*         END;                                                     0562 01105000
*                                                                  0562 01106000
*       /*************************************************************/ 01107000
*       /*                                                           */ 01108000
*       /* AMBRDCNT HAS CHANGED, GET 2ND SCH SERIAL RESOURCE AND SCH */ 01109000
*       /* CHAIN AGAIN IN BUFCHAIN SEQUENCE.                         */ 01110000
*       /*                                                           */ 01111000
*       /*************************************************************/ 01112000
*                                                                  0563 01113000
*GRBSCH2:                                                          0563 01114000
*       RWORK1=ZERO;                /* CLEAR                         */ 01115000
@RF00544 DS    0H                                                  0563 01116000
GRBSCH2  SLR   RWORK1,RWORK1                                       0563 01117000
*       CS(RWORK1,RPLH,AMBXBM2S);   /* GET RSC IF IT IS ZERO         */ 01118000
         L     @15,AMBEOVPT(,RAMB)                                 0564 01119000
         CS    RWORK1,@02,AMBXBM2S(@15)                            0564 01120000
*       BC(7,GRBDFR3);              /* DEFER IF NOT ZERO     @Z40GSDT*/ 01121000
         BC    7,GRBDFR3                                           0565 01122000
*       RFY                                                        0566 01123000
*         RWORK2 UNRSTD;            /* UNLOCK                        */ 01124000
*                                                                  0566 01125000
*       /*************************************************************/ 01126000
*       /*                                                           */ 01127000
*       /* 2ND SCH RESOURCE HAS BEEN OBTAINED, SCH CHAIN.            */ 01128000
*       /*                                                           */ 01129000
*       /*************************************************************/ 01130000
*                                                                  0567 01131000
*       RWORK1=RBUFC;               /* SAVE BUFC FRM GETSPACE        */ 01132000
         LR    RWORK1,RBUFC                                        0567 01133000
*       RBUFC=BSPHBUFC;             /* TOP OF BUFCHAIN               */ 01134000
*                                                                  0568 01135000
         L     @15,AMBBUFC(,RAMB)                                  0568 01136000
         L     RBUFC,BSPHBUFC(,@15)                                0568 01137000
*       /*************************************************************/ 01138000
*       /*                                                           */ 01139000
*       /* SCH CHAIN FOR RBA MATCH ON ANOTHER BUFC                   */ 01140000
*       /*                                                           */ 01141000
*       /*************************************************************/ 01142000
*                                                                  0569 01143000
*       DO UNTIL(RBUFC=ZERO);                                      0569 01144000
@DL00569 DS    0H                                                  0570 01145000
*         IF BUFCAMB=RAMB&          /* SAME AMB &                    */ 01146000
*             RBUFC^=RWORK1&        /* DIFF BUFC &                   */ 01147000
*             (RPARM1=BUFCDDDD|     /* RBA MATCH &           @ZA07544*/ 01148000
*             RPARM1=BUFXIRBA)&     /* RBA MATCH &           @ZA07544*/ 01149000
*             BUFCVAL=ON THEN       /* VALID BUFFER?                 */ 01150000
         C     RAMB,BUFCAMB(,RBUFC)                                0570 01151000
         BNE   @RF00570                                            0570 01152000
         CR    RBUFC,RWORK1                                        0570 01153000
         BE    @RF00570                                            0570 01154000
         CL    RPARM1,BUFCDDDD(,RBUFC)                             0570 01155000
         BE    @GL00019                                            0570 01156000
         CL    RPARM1,BUFXIRBA(,RBUFC)                             0570 01157000
         BNE   @RF00570                                            0570 01158000
@GL00019 TM    BUFCVAL(RBUFC),B'00000100'                          0570 01159000
         BNO   @RF00570                                            0570 01160000
*           DO;                     /* YES                           */ 01161000
*                                                                  0571 01162000
*             /*******************************************************/ 01163000
*             /*                                                     */ 01164000
*             /* A DUPE HAS BEEN FOUND, FREE BUFC GOTTEN BY GETSPACE */ 01165000
*             /* AND START OVER.                                     */ 01166000
*             /*                                                     */ 01167000
*             /*******************************************************/ 01168000
*                                                                  0572 01169000
*             RBUFC=RWORK1;         /* RESTORE BUFC PTR              */ 01170000
         LR    RBUFC,RWORK1                                        0572 01171000
*             AMBXBM2S=ZERO;        /* RELE RESOURCE                 */ 01172000
         L     @15,AMBEOVPT(,RAMB)                                 0573 01173000
         SLR   @00,@00                                             0573 01174000
         ST    @00,AMBXBM2S(,@15)                                  0573 01175000
*             BUFCRRD=OFF;          /* FREE BUFC AND SET -           */ 01176000
         NI    BUFCRRD(RBUFC),B'11011111'                          0574 01177000
*             BUFCVAL=OFF;          /* TO -                          */ 01178000
         NI    BUFCVAL(RBUFC),B'11111011'                          0575 01179000
*             BUFCBSYR=OFF;         /* START -                       */ 01180000
         NI    BUFCBSYR(RBUFC),B'11011111'                         0576 01181000
*             CALL DECRUCNT;        /* OVER.                         */ 01182000
         BAL   @14,DECRUCNT                                        0577 01183000
*             GOTO GRSTRT1;         /* START OVER PT                 */ 01184000
         B     GRSTRT1                                             0578 01185000
*           END;                                                   0579 01186000
*                                                                  0579 01187000
*         /***********************************************************/ 01188000
*         /*                                                         */ 01189000
*         /* NO MATCH, PT TO NEXT BUFC AND LOOP BACK.                */ 01190000
*         /*                                                         */ 01191000
*         /***********************************************************/ 01192000
*                                                                  0580 01193000
*         RBUFC=BUFCHAIN;                                          0580 01194000
@RF00570 L     RBUFC,BUFCHAIN(,RBUFC)                              0580 01195000
*       END;                        /* END BUFCHAIN SEARCH           */ 01196000
*                                                                  0581 01197000
@DE00569 SLR   @15,@15                                             0581 01198000
         CR    RBUFC,@15                                           0581 01199000
         BNE   @DL00569                                            0581 01200000
*       /*************************************************************/ 01201000
*       /*                                                           */ 01202000
*       /* END OF BUFCHAIN. NO DUPE FOUND, GO READ CI.               */ 01203000
*       /*                                                           */ 01204000
*       /*************************************************************/ 01205000
*                                                                  0582 01206000
*       RBUFC=RWORK1;               /* RESTORE BUFC PTR              */ 01207000
         LR    RBUFC,RWORK1                                        0582 01208000
*       AMBXBM2S=ZERO;              /* RELE RESOURCE                 */ 01209000
         L     @09,AMBEOVPT(,RAMB)                                 0583 01210000
         ST    @15,AMBXBM2S(,@09)                                  0583 01211000
*       GOTO GRBRDBFR;              /* GO READ CI                    */ 01212000
         B     GRBRDBFR                                            0584 01213000
*       RFY                                                        0585 01214000
*         RWORK1 UNRSTD;            /* UNLOCK                        */ 01215000
*                                                                  0585 01216000
*       /*************************************************************/ 01217000
*       /*                                                           */ 01218000
*       /* 2ND SCH RESOURCE NOT OBTAINED, DEFER UNTILL IT CAN BE.    */ 01219000
*       /*                                                           */ 01220000
*       /*************************************************************/ 01221000
*                                                                  0586 01222000
*GRBDFR3:                                                          0586 01223000
*       PLHDRMSK=ZROMSK;            /* MASK                          */ 01224000
GRBDFR3  MVC   PLHDRMSK(1,RPLH),ZROMSK                             0586 01225000
*       PLHDRRSC=ADDR(AMBXBM2S);    /* PROT AGAINST ALL ZRO'S        */ 01226000
         L     @15,AMBEOVPT(,RAMB)                                 0587 01227000
         LA    @15,AMBXBM2S(,@15)                                  0587 01228000
         ST    @15,PLHDRRSC(,RPLH)                                 0587 01229000
*       RFY                                                        0588 01230000
*         I RSTD;                   /* LOCK REG                      */ 01231000
*       DO I=ONE TO FOUR;           /* DET WHICH BYTE IS NON-        */ 01232000
         LA    I,1                                                 0589 01233000
@DL00589 DS    0H                                                  0590 01234000
*         IF GRBRSC1(I)^=ZERO THEN  /* ZERO.                         */ 01235000
         L     @15,AMBEOVPT(,RAMB)                                 0590 01236000
         SLR   @00,@00                                             0590 01237000
         IC    @00,GRBRSC1-1(I,@15)                                0590 01238000
         C     @00,@CF00158                                        0590 01239000
         BE    @RF00590                                            0590 01240000
*           PLHDRRSC=ADDR(GRBRSC1(I));/* TARGET                      */ 01241000
         LA    @15,GRBRSC1-1(I,@15)                                0591 01242000
         ST    @15,PLHDRRSC(,RPLH)                                 0591 01243000
*       END;                                                       0592 01244000
@RF00590 AL    I,@CF00047                                          0592 01245000
         C     I,@CF00156                                          0592 01246000
         BNH   @DL00589                                            0592 01247000
*       RFY                                                        0593 01248000
*         I UNRSTD;                 /* UNLOCK                        */ 01249000
*       CALL BMDEFER;               /* DEFER RTN                     */ 01250000
         BAL   @14,BMDEFER                                         0594 01251000
*       GOTO GRBSCH2;               /* LOOP TILL OBTAINED            */ 01252000
         B     GRBSCH2                                             0595 01253000
*     END;                          /* END RBUFC EQ ZERO             */ 01254000
*   END GRB;                                                       0597 01255000
@EL00003 DS    0H                                                  0597 01256000
@EF00003 DS    0H                                                  0597 01257000
@ER00003 BR    @14                                                 0597 01258000
@PB00003 DS    0H                                                  0598 01259000
*                                                                  0598 01260000
*   /*****************************************************************/ 01261000
*   /*                                                               */ 01262000
*   /* GNFL - GET A WORK BUFFER FOR OUTPUT                           */ 01263000
*   /*                                                               */ 01264000
*   /*****************************************************************/ 01265000
*                                                                  0598 01266000
*/*                                                                0598 01267000
*01 FUNCTION = PROVIDE A POINTER TO A WORK BUFC ASSOCIATED WITH THE AMB 01268000
*01 INPUT =    STANDARD VSAM REGISTERS.                            0598 01269000
*01 OUTPUT =   RBUFC POINTS TO THE BUFC.                           0598 01270000
*              RPLRTNCD & RPLERRCD SET IF NO BUFFERS AVAILABLE.      */ 01271000
*                                                                  0598 01272000
*GNFL:                              /* GET WK BUFFER                 */ 01273000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 01274000
GNFL     IDASVR14                                                       01275000
*   IF AMBTYPE=AMBINDEX THEN        /* INDEX AMB?                    */ 01276000
         TM    AMBTYPE(RAMB),B'01000000'                           0599 01277000
         BNO   @RF00599                                            0599 01278000
*     DO;                                                          0600 01279000
*                                                                  0600 01280000
*       /*************************************************************/ 01281000
*       /*                                                           */ 01282000
*       /* RELEASE ANY PREVIOUSLY ASSIGNED INDEX BUFFER IF NECESSARY */ 01283000
*       /*                                                           */ 01284000
*       /*************************************************************/ 01285000
*                                                                  0601 01286000
*       RBUFC=PLHIBUFC;             /* PTR TO IX BFR                 */ 01287000
         L     RBUFC,PLHIBUFC(,RPLH)                               0601 01288000
*       IF RBUFC^=ZERO THEN         /* BUFFER PRESENT?               */ 01289000
         LTR   RBUFC,RBUFC                                         0602 01290000
         BZ    @RF00602                                            0602 01291000
*         CALL FREEB;               /* YES, FREE IT.         @ZA07544*/ 01292000
         BAL   @14,FREEB                                           0603 01293000
*       CALL GETSPACE;              /* GET A BUFFER                  */ 01294000
@RF00602 BAL   @14,GETSPACE                                        0604 01295000
*       IF RPLERREG=ZERO THEN       /* GETSPACE ERR ?                */ 01296000
         CLI   RPLERREG(RRPL),0                                    0605 01297000
         BNE   @RF00605                                            0605 01298000
*         DO;                       /* NO,                           */ 01299000
*           PLHIBUFC=RBUFC;         /* SET BUFC PTR                  */ 01300000
         ST    RBUFC,PLHIBUFC(,RPLH)                               0607 01301000
*         END;                      /* END OF NO ERROR               */ 01302000
*     END;                          /* END OF INDEX AMB CODE         */ 01303000
*   ELSE                            /* NO, IS DATA                   */ 01304000
*     DO;                                                          0610 01305000
         B     @RC00599                                            0610 01306000
@RF00599 DS    0H                                                  0611 01307000
*       CALL GETSPACE;              /* GET A BUFFER                  */ 01308000
         BAL   @14,GETSPACE                                        0611 01309000
*       IF RPLERREG=ZERO THEN       /* GETSPACE ERR ?                */ 01310000
         CLI   RPLERREG(RRPL),0                                    0612 01311000
         BNE   @RF00612                                            0612 01312000
*         DO;                       /* NO,                           */ 01313000
*           DIWBUFC=RBUFC;          /* PT TO BUFC                    */ 01314000
         L     @15,AMBIWA(,RAMB)                                   0614 01315000
         ST    RBUFC,DIWBUFC(,@15)                                 0614 01316000
*           BUFCINS=ON;             /* MARK AS INSERT                */ 01317000
         OI    BUFCINS(RBUFC),B'00100000'                          0615 01318000
*         END;                      /* END NO ERROR                  */ 01319000
*     END;                          /* END NOT INDEX                 */ 01320000
@RF00612 DS    0H                                                  0618 01321000
*   CALL BMEXIT;                    /* END OF GNFL                   */ 01322000
@RC00599 BAL   @14,BMEXIT                                          0618 01323000
*                                                                  0619 01324000
*   /*****************************************************************/ 01325000
*   /*                                                               */ 01326000
*   /* GNNFL - GET A WORK BUFFER                                     */ 01327000
*   /*                                                               */ 01328000
*   /*****************************************************************/ 01329000
*                                                                  0619 01330000
*/*                                                                0619 01331000
*01 FUNCTION = PROVIDE A POINTER TO A WORK BUFC ASSOCIATED WITH THE AMB 01332000
*01 INPUT =    STANDARD VSAM REGISTERS.                            0619 01333000
*01 OUTPUT =   RBUFC POINTS TO THE BUFC.                           0619 01334000
*              RPLRTNCD & RPLERRCD SET IF NO BUFFERS AVAILABLE.      */ 01335000
*                                                                  0619 01336000
*GNNFL:                             /* GET NEXT PLH BUFFER           */ 01337000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 01338000
GNNFL    IDASVR14                                                       01339000
*   RBUFC=PLHDBUFC;                 /* BUFFER LEFT OVER?             */ 01340000
         L     RBUFC,PLHDBUFC(,RPLH)                               0620 01341000
*   IF RBUFC^=ZERO THEN             /* IF SO, REUSE IT.              */ 01342000
         LTR   RBUFC,RBUFC                                         0621 01343000
         BZ    @RF00621                                            0621 01344000
*     DO;                           /* NEED WRITTEN                  */ 01345000
*       IF BUFCMW=ON THEN           /* WRITE NEEDED                  */ 01346000
         TM    BUFCMW(RBUFC),B'10000000'                           0623 01347000
         BNO   @RF00623                                            0623 01348000
*         DO;                       /* YES WRITE IT                  */ 01349000
*           BUFCBSYW=ON;            /* IND BSY WRITE                 */ 01350000
         OI    BUFCBSYW(RBUFC),B'00010000'                         0625 01351000
*           CALL WRBFR;             /* WRITE IT                      */ 01352000
         BAL   @14,WRBFR                                           0626 01353000
*           BUFCBSYW=OFF;           /* RESET BSY WRITE               */ 01354000
         NI    BUFCBSYW(RBUFC),B'11101111'                         0627 01355000
*           RFY                                                    0628 01356000
*            (RWORK1,                                              0628 01357000
*             RWORK2) RSTD;         /* LOCK UP REGS                  */ 01358000
*GNNLP2:                                                           0629 01359000
*           RWORK1=BSPHUIW;         /* OLD CNT                       */ 01360000
GNNLP2   L     @15,AMBBUFC(,RAMB)                                  0629 01361000
         L     RWORK1,BSPHUIW(,@15)                                0629 01362000
*           RWORK2=RWORK1+ONE;      /* INCR                          */ 01363000
         LA    RWORK2,1                                            0630 01364000
         ALR   RWORK2,RWORK1                                       0630 01365000
*           CS(RWORK1,RWORK2,BSPHUIW);/* MODIFY                      */ 01366000
         CS    RWORK1,@06,BSPHUIW(@15)                             0631 01367000
*           GEN(BNZ   GNNLP2);      /* LOOP TILL SUCCESSFUL          */ 01368000
         BNZ   GNNLP2                                                   01369000
*           RFY                                                    0633 01370000
*            (RWORK1,                                              0633 01371000
*             RWORK2) UNRSTD;       /* FREE REGS                     */ 01372000
*         END;                                                     0634 01373000
*       CALL BMEXIT;                /* MUST BE SPANNED RCD           */ 01374000
@RF00623 BAL   @14,BMEXIT                                          0635 01375000
*     END;                                                         0636 01376000
*   CALL GETSPACE;                  /* GET A BUFFER                  */ 01377000
@RF00621 BAL   @14,GETSPACE                                        0637 01378000
*   IF RPLERREG=ZERO THEN           /* GETSPACE ERR ?                */ 01379000
         CLI   RPLERREG(RRPL),0                                    0638 01380000
         BNE   @RF00638                                            0638 01381000
*     DO;                           /* NO,                           */ 01382000
*       PLHDBUFC=RBUFC;             /* PT TP BUFC                    */ 01383000
         ST    RBUFC,PLHDBUFC(,RPLH)                               0640 01384000
*       BUFCINS=OFF;                /* RESET BUFCINS                 */ 01385000
         NI    BUFCINS(RBUFC),B'11011111'                          0641 01386000
*     END;                                                         0642 01387000
*   CALL BMEXIT;                    /* END OF GNNFL                  */ 01388000
@RF00638 BAL   @14,BMEXIT                                          0643 01389000
*                                                                  0644 01390000
*   /*****************************************************************/ 01391000
*   /*                                                               */ 01392000
*   /* GNXT - GET NEXT                                               */ 01393000
*   /*                                                               */ 01394000
*   /*****************************************************************/ 01395000
*                                                                  0644 01396000
*/*                                                                0644 01397000
*01 FUNCTION = GET THE NEXT CONTROL INTERVAL IN LOGICAL OR PHYSICAL     01398000
*              SEQUENCE.  FIRST, CHECK FOR END-OF-DATA AND THEN CHECK   01399000
*              FOR THE PROPER EXCLUSIVE CONTROL.                   0644 01400000
*01 INPUT =    STANDARD VSAM REGISTERS. (PLHDBUFC HAS BEEN ADVANCED TO  01401000
*              THE PROPER BUFC BY THE FREE BUFFER ROUTINE.)        0644 01402000
*01 OUTPUT =   RBUFC IS SET AND A RETURN CODE IS IN THE RPL.       0644 01403000
*              RPARM1 = THE RBA OF THE DESIRED CI IF AN EXCLUSIVE  0644 01404000
*              CONTROL ERROR OCCURS.                         @ZA07544*/ 01405000
*                                                                  0644 01406000
*GNXT:                              /* GET NEXT                      */ 01407000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 01408000
GNXT     IDASVR14                                                       01409000
*I07:                                                              0645 01410000
*   DO;                             /* IDACALL(IDAFRBA)              */ 01411000
I07      DS    0H                                                  0646 01412000
*     CALL IDAFRBA;                 /* EXIT TO IDAFRBA               */ 01413000
         L     @15,@CV00151                                        0646 01414000
         BALR  @14,@15                                             0646 01415000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01416000
         BALR @11,0                                                     01417000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01418000
         USING *,@11                                                    01419000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 01420000
         USING *+4095,@10                                               01421000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 01422000
         LA    @10,4095(@11)                                            01423000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 01424000
         L     @10,=A(@PSTART+4095)                                     01425000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 01426000
         USING @PSTART+4095,@10                                         01427000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01428000
         L     @11,=A(@PSTART)                                          01429000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01430000
         USING @PSTART,@11                                              01431000
*   END I07;                        /* FIND RBA                      */ 01432000
*   RFY                                                            0656 01433000
*     R15 RSTD;                     /* LOCK                          */ 01434000
*   RBUFC=PLHDBUFC;                 /* RESET BUFC PTR                */ 01435000
         L     RBUFC,PLHDBUFC(,RPLH)                               0657 01436000
*   IF RPLRTNCD^=ZERO THEN          /* ERROR?                        */ 01437000
         CLI   RPLRTNCD(RRPL),0                                    0658 01438000
         BE    @RF00658                                            0658 01439000
*     CALL BMEXIT;                  /* YES EXIT                      */ 01440000
         BAL   @14,BMEXIT                                          0659 01441000
*   IF R15=RPLEODER THEN            /* EOF?                          */ 01442000
@RF00658 C     R15,@CF00156                                        0660 01443000
         BNE   @RF00660                                            0660 01444000
*     DO;                           /* YES                           */ 01445000
*       RPLRTNCD='08'X;             /* SET ERR -                     */ 01446000
         MVI   RPLRTNCD(RRPL),X'08'                                0662 01447000
*       RPLERRCD=RPLEODER;          /* CODES                         */ 01448000
         MVI   RPLERRCD(RRPL),X'04'                                0663 01449000
*       CALL BMEXIT;                /* EXIT                          */ 01450000
         BAL   @14,BMEXIT                                          0664 01451000
*     END;                                                         0665 01452000
*   RFY                                                            0666 01453000
*     R15 UNRSTD;                   /* UNLOCK                        */ 01454000
@RF00660 DS    0H                                                  0667 01455000
*   IF RBUFC=ZERO THEN              /* BUFC OWNED?                   */ 01456000
         LTR   RBUFC,RBUFC                                         0667 01457000
         BNZ   @RF00667                                            0667 01458000
*     DO;                           /* NO,                           */ 01459000
*GRBCALL:                                                          0669 01460000
*       CALL GRB;                   /* GET RBA RTN                   */ 01461000
GRBCALL  BAL   @14,GRB                                             0669 01462000
*       CALL BMEXIT;                /* EXIT                          */ 01463000
         BAL   @14,BMEXIT                                          0670 01464000
*     END;                                                         0671 01465000
*                                                                  0671 01466000
*/* FIRST OR MIDDLE SEGMENT OF A SPANNED RECORD MUST BE IN THE       */ 01467000
*/* BUFFER.                                                  @ZA07544*/ 01468000
*                                                                  0672 01469000
*   BUFCDDDD=RPARM1;                /* SET DDDD                      */ 01470000
@RF00667 ST    RPARM1,BUFCDDDD(,RBUFC)                             0672 01471000
*   BUFCRRD=ON;                     /* IND READ REQD                 */ 01472000
         OI    BUFCRRD(RBUFC),B'00100000'                          0673 01473000
*   IF BUFCMW=ON&AMBJRN=ON THEN     /* JRNAD XIT NEEDED?             */ 01474000
         TM    BUFCMW(RBUFC),B'10000000'                           0674 01475000
         BNO   @RF00674                                            0674 01476000
         TM    AMBJRN(RAMB),B'00000010'                            0674 01477000
         BNO   @RF00674                                            0674 01478000
*     DO;                           /* YES                           */ 01479000
*       PLHJCODE=PLHJIXM;           /* IND IX MOD                    */ 01480000
         MVI   PLHJCODE(RPLH),B'00101100'                          0676 01481000
*       PLHJRNLL=AMDCINV;           /* CI SIZE                       */ 01482000
         L     @15,AMBDSB(,RAMB)                                   0677 01483000
         L     @15,AMDCINV(,@15)                                   0677 01484000
         ST    @15,PLHJRNLL(,RPLH)                                 0677 01485000
*       PLHJNRBA=BUFCORBA;          /* RBA                           */ 01486000
         L     @15,BUFCORBA(,RBUFC)                                0678 01487000
         ST    @15,PLHJNRBA(,RPLH)                                 0678 01488000
*       PLHCRBA=BUFCBAD;            /* BUFFER ADDR                   */ 01489000
         L     @15,BUFCBAD(,RBUFC)                                 0679 01490000
         ST    @15,PLHCRBA(,RPLH)                                  0679 01491000
*I08:                                                              0680 01492000
*       DO;                         /* IDACALL(IDATJXIT)             */ 01493000
I08      DS    0H                                                  0681 01494000
*         CALL IDATJXIT;            /* EXIT TO IDATJXIT              */ 01495000
         L     @15,@CV00153                                        0681 01496000
         BALR  @14,@15                                             0681 01497000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 01498000
         BALR @11,0                                                     01499000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 01500000
         USING *,@11                                                    01501000
*         GEN(USING *+4095,@10);    /* ESTABLISH SECOND BASE         */ 01502000
         USING *+4095,@10                                               01503000
*         GEN(LA    @10,4095(@11)); /* LOAD SECOND BASE              */ 01504000
         LA    @10,4095(@11)                                            01505000
*         GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE      */ 01506000
         L     @10,=A(@PSTART+4095)                                     01507000
*         GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE       */ 01508000
         USING @PSTART+4095,@10                                         01509000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 01510000
         L     @11,=A(@PSTART)                                          01511000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 01512000
         USING @PSTART,@11                                              01513000
*       END I08;                    /* JRNAD EXIT                    */ 01514000
*     END;                                                         0691 01515000
*   CALL READBFR;                   /* READ NEXT SEG                 */ 01516000
@RF00674 BAL   @14,READBFR                                         0692 01517000
*   IF RPLRTNCD=ZERO THEN           /* ANY ERROR                     */ 01518000
         CLI   RPLRTNCD(RRPL),0                                    0693 01519000
         BNE   @RF00693                                            0693 01520000
*     CALL BMEXIT;                  /* NO, EXIT                      */ 01521000
         BAL   @14,BMEXIT                                          0694 01522000
*   BUFCVAL=OFF;                    /* MRK BUFC INVALID              */ 01523000
@RF00693 NI    BUFCVAL(RBUFC),B'11111011'                          0695 01524000
*   CALL DECRUCNT;                  /* DECR & MRK EMPTY              */ 01525000
         BAL   @14,DECRUCNT                                        0696 01526000
*   PLHDBUFC=ZERO;                  /* FREE BUFC                     */ 01527000
         SLR   @15,@15                                             0697 01528000
         ST    @15,PLHDBUFC(,RPLH)                                 0697 01529000
*   CALL BMEXIT;                    /* END OF GET NEXT               */ 01530000
         BAL   @14,BMEXIT                                          0698 01531000
*                                                                  0699 01532000
*   /*****************************************************************/ 01533000
*   /*                                                               */ 01534000
*   /* WRTBF - WRITE BUFFER MACRO ROUTINE                            */ 01535000
*   /*                                                               */ 01536000
*   /*****************************************************************/ 01537000
*                                                                  0699 01538000
*/*                                                                0699 01539000
*01 FUNCTION = SERVICE THE WRITE BUFFER MACRO.                     0699 01540000
*01 INPUT =    RRPL - RPL                                          0699 01541000
*              RPLH - PLH                                          0699 01542000
*              RAMB - FOR TYPE DS, THE AMB TO PROCESS. FOR ALL OTHER    01543000
*                     TYPES, AN AMB USING THE BUFFER POOL.         0699 01544000
*              RPARM1 = 0 - TYPE DS                                0699 01545000
*                     = 4 - TYPE LRU                               0699 01546000
*                     = 8 - TYPE ALL                               0699 01547000
*                     = 12 - TYPE TRN                              0699 01548000
*                     = 16 - TYPE CHK                              0699 01549000
*              R0 - FOR TYPE LRU, N(BINARY) PERCENT OF BUFFERS     0699 01550000
*                   TO PROCESS.                                    0699 01551000
*01 OUTPUT =   REQUESTED BUFFERS ARE WRITTEN.                        */ 01552000
*                                                                  0699 01553000
*WRTBF:                             /* WRITE BUFFER                  */ 01554000
*   RFY                                                            0699 01555000
*     RWORK0 RSTD;                  /* LOCK PARM REG                 */ 01556000
WRTBF    DS    0H                                                  0700 01557000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 01558000
         IDASVR14                                                       01559000
*   RFY                                                            0701 01560000
*    (RWORK1,                                                      0701 01561000
*     RWORK2) RSTD;                 /* LOCK                          */ 01562000
*   RWORK2=RPLSTRID;                /* TRANSID                       */ 01563000
         LH    RWORK2,RPLSTRID(,RRPL)                              0702 01564000
*   RWORK1=SHIFTBIT;                /* HIGH BIT FOR SHIFT            */ 01565000
         L     RWORK1,SHIFTBIT                                     0703 01566000
*   GEN(SRL   RWORK1,0(RWORK2));    /* FORM MASK                     */ 01567000
         SRL   RWORK1,0(RWORK2)                                         01568000
*   DBMTRNID=RWORK1;                /* SAVE TRANSID MASK             */ 01569000
         ST    RWORK1,DBMTRNID(,RPLH)                              0705 01570000
*   DBMLRUCT=RWORK0;                /* SAVE R0 FOR LRU               */ 01571000
         STC   RWORK0,DBMLRUCT(,RPLH)                              0706 01572000
*   RFY                                                            0707 01573000
*    (RWORK0,                                                      0707 01574000
*     RWORK1,                                                      0707 01575000
*     RWORK2) UNRSTD;               /* UNLOCK                        */ 01576000
*   IF RPARM1=DSTYP THEN            /* TYPE DS?                      */ 01577000
         LTR   RPARM1,RPARM1                                       0708 01578000
         BNZ   @RF00708                                            0708 01579000
*     DO;                           /* YES                           */ 01580000
*       RBUFC=BSPHBUFC;             /* USE AMB                       */ 01581000
         L     @15,AMBBUFC(,RAMB)                                  0710 01582000
         L     RBUFC,BSPHBUFC(,@15)                                0710 01583000
*       DBMBSPH=AMBBUFC;            /* TO LOCATE BSPH                */ 01584000
         STCM  @15,7,DBMBSPH(RPLH)                                 0711 01585000
*     END;                                                         0712 01586000
*   ELSE                            /* NO,                           */ 01587000
*     DO;                                                          0713 01588000
         B     @RC00708                                            0713 01589000
@RF00708 DS    0H                                                  0714 01590000
*       RBUFC=BSPH1ST->BSPHBUFC;    /* USE BSPH1ST CHAIN             */ 01591000
         L     @15,AMBBUFC(,RAMB)                                  0714 01592000
         L     @15,BSPH1ST(,@15)                                   0714 01593000
         L     RBUFC,BSPHBUFC(,@15)                                0714 01594000
*       DBMBSPH=BSPH1ST;            /* TO LOCATE BSPH                */ 01595000
         STCM  @15,7,DBMBSPH(RPLH)                                 0715 01596000
*       IF RPARM1=CHKTYP|           /* TYPE CHK? OR                  */ 01597000
*           RPARM1=TRNTYP THEN      /* TYPE TRN?                     */ 01598000
         C     RPARM1,@CF00063                                     0716 01599000
         BE    @RT00716                                            0716 01600000
         C     RPARM1,@CF00065                                     0716 01601000
         BNE   @RF00716                                            0716 01602000
@RT00716 DS    0H                                                  0717 01603000
*         DO;                       /* YES                           */ 01604000
*           DBMMASK=DBMTRNID;       /* MASK = TRANSID                */ 01605000
         L     @15,DBMTRNID(,RPLH)                                 0718 01606000
         ST    @15,DBMMASK(,RPLH)                                  0718 01607000
*           GOTO WRTRST1;           /* START LOOP                    */ 01608000
         B     WRTRST1                                             0719 01609000
*         END;                                                     0720 01610000
*       IF RPARM1=LRUTYP THEN       /* TYPE LRU?                     */ 01611000
@RF00716 C     RPARM1,@CF00156                                     0721 01612000
         BE    @RT00721                                            0721 01613000
*         GOTO WRTLRU;              /* YES                           */ 01614000
*       IF RPARM1^=ALLTYP THEN      /* IF NOT ALLTYP, -              */ 01615000
         C     RPARM1,@CF00036                                     0723 01616000
         BE    @RF00723                                            0723 01617000
*         DO;                       /* INVALID REQUEST               */ 01618000
*           RPLRTNCD='08'X;         /* LOGIC ERR                     */ 01619000
         MVI   RPLRTNCD(RRPL),X'08'                                0725 01620000
*           RPLERRCD=RPLINVP;       /* INVALID PARM                  */ 01621000
         MVI   RPLERRCD(RRPL),X'68'                                0726 01622000
*           CALL BMEXIT;            /* EXIT                          */ 01623000
         BAL   @14,BMEXIT                                          0727 01624000
*         END;                                                     0728 01625000
*     END;                                                         0729 01626000
@RF00723 DS    0H                                                  0730 01627000
*   DBMMASK=ALLBITS;                /* ANY BIT MASK                  */ 01628000
@RC00708 L     @15,ALLBITS                                         0730 01629000
         ST    @15,DBMMASK(,RPLH)                                  0730 01630000
*WRTRST1:                           /* RESTART PT 1                  */ 01631000
*   RFY                                                            0731 01632000
*     IDABSPH BASED(DBMBSPH);       /* USE SAVED BSPH ADDR           */ 01633000
WRTRST1  DS    0H                                                  0732 01634000
*   DO WHILE(BSPHMDBT^=ZERO);       /* BUFFER POOL LOOP              */ 01635000
         B     @DE00732                                            0732 01636000
@DL00732 DS    0H                                                  0733 01637000
*/*  FOR WRTBFR TYPES ALL, CHK, AND TRN THE MODIFICATION BITS IN THE    01638000
*    BSPH ARE SET OFF PRIOR TO THE SUBPOOL SEARCH AND ARE SET BACK ON   01639000
*    IF AN ERROR OCCURES.                                            */ 01640000
*                                                                  0733 01641000
*     IF RPARM1=CHKTYP|             /* IF TYPE=CHK OR        @ZA07544*/ 01642000
*         RPARM1=TRNTYP THEN        /* TYPE=TRN THEN         @ZA07544*/ 01643000
         C     RPARM1,@CF00063                                     0733 01644000
         BE    @RT00733                                            0733 01645000
         C     RPARM1,@CF00065                                     0733 01646000
         BNE   @RF00733                                            0733 01647000
@RT00733 DS    0H                                                  0734 01648000
*       BSPHMDBT=BSPHMDBT&(DBMTRNID&&ALLBITS);/* SET TRN ID OFF    0734 01649000
*                                                            @ZA07544*/ 01650000
         L     @15,DBMBSPH-1(,RPLH)                                0734 01651000
         LA    @15,0(,@15)                                         0734 01652000
         L     @05,DBMTRNID(,RPLH)                                 0734 01653000
         X     @05,ALLBITS                                         0734 01654000
         N     @05,BSPHMDBT(,@15)                                  0734 01655000
         ST    @05,BSPHMDBT(,@15)                                  0734 01656000
*     ELSE                          /* NOT CHK OR TRN        @ZA07544*/ 01657000
*       IF RPARM1=ALLTYP THEN       /* TYPE=ALL ?            @ZA07544*/ 01658000
         B     @RC00733                                            0735 01659000
@RF00733 C     RPARM1,@CF00036                                     0735 01660000
         BNE   @RF00735                                            0735 01661000
*         DO;                       /* YES -                 @ZA07544*/ 01662000
*                                                                  0736 01663000
*           /*********************************************************/ 01664000
*           /*                                                       */ 01665000
*           /* PLHNRBA USED TO SAVE THE MODIFICATION BIT SETTING IN  */ 01666000
*           /* CASE OF ERROR WHILE WRITING BUFFERS. THE PLH IS       */ 01667000
*           /* INVALIDATED AFTER WRTBFR REQUEST COMPLETED SO THIS PLH*/ 01668000
*           /* FIELD IS NOT VALID.                                   */ 01669000
*           /*                                                       */ 01670000
*           /*********************************************************/ 01671000
*                                                                  0737 01672000
*           PLHNRBA=BSPHMDBT;       /* SAVE MOD BITS         @ZA07544*/ 01673000
         L     @15,DBMBSPH-1(,RPLH)                                0737 01674000
         LA    @15,0(,@15)                                         0737 01675000
         L     @05,BSPHMDBT(,@15)                                  0737 01676000
         ST    @05,PLHNRBA(,RPLH)                                  0737 01677000
*           BSPHMDBT=ZERO;          /* SET ALL BITS OFF      @ZA07544*/ 01678000
         SLR   @05,@05                                             0738 01679000
         ST    @05,BSPHMDBT(,@15)                                  0738 01680000
*         END;                      /* END TYPE=ALL          @ZA07544*/ 01681000
*     RFY                                                          0740 01682000
*      (RWORK2,                                                    0740 01683000
*       RWORK3) RSTD;               /* LOCK                          */ 01684000
@RF00735 DS    0H                                                  0740 01685000
@RC00733 DS    0H                                                  0741 01686000
*     DO UNTIL(RBUFC=ZERO);         /* BUFFER LOOP                   */ 01687000
@DL00741 DS    0H                                                  0742 01688000
*       LM(RWORK2,RWORK3,BUFCRSC1); /* SET CDS REGS                  */ 01689000
         LM    RWORK2,RWORK3,BUFCRSC1(RBUFC)                       0742 01690000
*       IF(DBMMASK&BUFCMDBT)^=ZERO THEN/* MOD BITS ON?               */ 01691000
         SLR   @15,@15                                             0743 01692000
         L     @05,DBMMASK(,RPLH)                                  0743 01693000
         N     @05,BUFCMDBT(,RBUFC)                                0743 01694000
         CLR   @05,@15                                             0743 01695000
         BE    @RF00743                                            0743 01696000
*         DO;                       /* YES, CONT                     */ 01697000
*           IF RPARM1^=ALLTYP       /* TYPE = ALL?                   */ 01698000
*             THEN                  /* NO                            */ 01699000
         C     RPARM1,@CF00036                                     0745 01700000
         BE    @RF00745                                            0745 01701000
*             IF RPARM1=DSTYP THEN  /* TYPE DS?                      */ 01702000
         CR    RPARM1,@15                                          0746 01703000
         BNE   @RF00746                                            0746 01704000
*               IF RAMB^=RWORK3 THEN/* YES, SAME AMB?                */ 01705000
         CR    RAMB,RWORK3                                         0747 01706000
         BNE   @RT00747                                            0747 01707000
*                 GOTO INCRBUFC;    /* NO, LOOP                      */ 01708000
*               ELSE                                               0749 01709000
*                 ;                 /* SAME AMB                      */ 01710000
*             ELSE                  /* NOT TYPE = DS OR ALL          */ 01711000
*               IF BUFCUCNT^=ZERO THEN/* ANY USERS?                  */ 01712000
         B     @RC00746                                            0750 01713000
@RF00746 CLI   BUFCUCNT(RBUFC),0                                   0750 01714000
         BE    @RF00750                                            0750 01715000
*                 DO;               /* YES, DEFER                    */ 01716000
*                   PLHDRMSK=ZROMSK;/* MASK                          */ 01717000
         MVC   PLHDRMSK(1,RPLH),ZROMSK                             0752 01718000
*                   PLHDRRSC=ADDR(BUFCUCNT);/* TARGET                */ 01719000
         ST    RBUFC,PLHDRRSC(,RPLH)                               0753 01720000
*WRTDFR:                                                           0754 01721000
*                   CALL BMDEFER;   /* DEFER RTN                     */ 01722000
WRTDFR   BAL   @14,BMDEFER                                         0754 01723000
*CHKTRNID:                                                         0755 01724000
*                   IF RPARM1=ALLTYP|/* TYPE=ALL OR          @ZA07544*/ 01725000
*                       RPARM1=CHKTYP|/* TYPE=CHK OR         @ZA07544*/ 01726000
*                       RPARM1=TRNTYP THEN/* TYPE=TRN ?      @ZA07544*/ 01727000
CHKTRNID C     RPARM1,@CF00036                                     0755 01728000
         BE    @RT00755                                            0755 01729000
         C     RPARM1,@CF00063                                     0755 01730000
         BE    @RT00755                                            0755 01731000
         C     RPARM1,@CF00065                                     0755 01732000
         BNE   @RF00755                                            0755 01733000
@RT00755 DS    0H                                                  0756 01734000
*                     CALL RSETMDBT;/* YES- SET MOD BITS BACK ON   0756 01735000
*                                                            @ZA07544*/ 01736000
         BAL   @14,RSETMDBT                                        0756 01737000
*                   GOTO WRTRST1;   /* RESTART                       */ 01738000
         B     WRTRST1                                             0757 01739000
*                 END;                                             0758 01740000
*               ELSE                                               0759 01741000
*                 ;                 /* USE CNT = 0                   */ 01742000
@RF00750 DS    0H                                                  0760 01743000
*           ELSE                                                   0760 01744000
*             ;                     /* TYPE = ALL                    */ 01745000
@RF00745 DS    0H                                                  0761 01746000
*           IF BUFCBSYW=ON&         /* BUSY WRITE?                   */ 01747000
*               ACBIOSFG=OFF THEN   /* AND NOT CLOSE?                */ 01748000
@RC00745 TM    BUFCBSYW(RBUFC),B'00010000'                         0761 01749000
         BNO   @RF00761                                            0761 01750000
         L     @15,RPLDACB(,RRPL)                                  0761 01751000
         TM    ACBIOSFG(@15),B'00000001'                           0761 01752000
         BNZ   @RF00761                                            0761 01753000
*             DO;                   /* YES, DEFER                    */ 01754000
*               PLHDRMSK=BSYRWMSK;  /* MASK                          */ 01755000
         MVI   PLHDRMSK(RPLH),X'30'                                0763 01756000
*               PLHDRRSC=ADDR(BUFCFLG2);/* TARGET                    */ 01757000
         LA    @15,BUFCFLG2(,RBUFC)                                0764 01758000
         ST    @15,PLHDRRSC(,RPLH)                                 0764 01759000
*               GOTO WRTDFR;        /* TO DEFER CODE                 */ 01760000
         B     WRTDFR                                              0765 01761000
*             END;                                                 0766 01762000
*           IF BUFCER2=OFF THEN     /* ERR BUFFER?                   */ 01763000
@RF00761 TM    BUFCER2(RBUFC),B'00001000'                          0767 01764000
         BNZ   @RF00767                                            0767 01765000
*             DO;                   /* NO                            */ 01766000
*                                                                  0768 01767000
*               /*****************************************************/ 01768000
*               /*                                                   */ 01769000
*               /* TURN BUSY WRITE ON AND CALL WRBFR TO WRITE BUFC   */ 01770000
*               /*                                                   */ 01771000
*               /*****************************************************/ 01772000
*                                                                  0769 01773000
*               RFY                                                0769 01774000
*                (RWORK4,                                          0769 01775000
*                 RWORK5) RSTD;     /* LOCK                          */ 01776000
*               RWORK5=RWORK3;      /* AMB                           */ 01777000
         LR    RWORK5,RWORK3                                       0770 01778000
*               RWORK4=RWORK2|BSYWMSK;/* BSYW ON                     */ 01779000
         LR    RWORK4,RWORK2                                       0771 01780000
         O     RWORK4,BSYWMSK                                      0771 01781000
*               CDS(RWORK2,RWORK4,BUFCRSC1);/* SWAP IF NO CHNG       */ 01782000
         CDS   RWORK2,RWORK4,BUFCRSC1(RBUFC)                       0772 01783000
*               GEN(BNZ CHKTRNID);  /* CHNG START OVER       @ZA07544*/ 01784000
         BNZ CHKTRNID                                                   01785000
*               DBMAMB=RAMB;        /* SAVE RAMB                     */ 01786000
         STCM  RAMB,7,DBMAMB(RPLH)                                 0774 01787000
*               RAMB=BUFCAMB;       /* PICK UP WRITE AMB             */ 01788000
         L     RAMB,BUFCAMB(,RBUFC)                                0775 01789000
*               CALL WRBFR;         /* GO WRITE BUFC                 */ 01790000
         BAL   @14,WRBFR                                           0776 01791000
*               RAMB=DBMAMB;        /* RESTORE RAMB                  */ 01792000
         L     RAMB,DBMAMB-1(,RPLH)                                0777 01793000
         LA    RAMB,0(,RAMB)                                       0777 01794000
*WRTCSLP2:                                                         0778 01795000
*               RWORK4=BSPHUIW;     /* OLD CNT                       */ 01796000
WRTCSLP2 L     @15,DBMBSPH-1(,RPLH)                                0778 01797000
         LA    @15,0(,@15)                                         0778 01798000
         L     RWORK4,BSPHUIW(,@15)                                0778 01799000
*               RWORK5=RWORK4+ONE;  /* NEW CNT                       */ 01800000
         LA    RWORK5,1                                            0779 01801000
         ALR   RWORK5,RWORK4                                       0779 01802000
*               CS(RWORK4,RWORK5,BSPHUIW);/* SWAP IF NO CHNG         */ 01803000
         CS    RWORK4,@09,BSPHUIW(@15)                             0780 01804000
*               GEN(BNZ WRTCSLP2);  /* LOOP TILL SUCCESSFUL          */ 01805000
         BNZ WRTCSLP2                                                   01806000
*               RFY                                                0782 01807000
*                (RWORK4,                                          0782 01808000
*                 RWORK5) UNRSTD;   /* UNLOCK                        */ 01809000
*               BUFCBSYW=OFF;       /* RESET BSY WRITE               */ 01810000
         NI    BUFCBSYW(RBUFC),B'11101111'                         0783 01811000
*               IF RPLRTNCD='08'X THEN/* IF LOGICAL ERROR,           */ 01812000
         CLI   RPLRTNCD(RRPL),8                                    0784 01813000
         BNE   @RF00784                                            0784 01814000
*                 DO;               /* THEN -                @ZA07544*/ 01815000
*                   IF RPARM1=ALLTYP|/* IF TYPE=ALL          @ZA07544*/ 01816000
*                       RPARM1=CHKTYP|/* OR TYPE=CHK         @ZA07544*/ 01817000
*                       RPARM1=TRNTYP THEN/* OR TYPE=TRN     @ZA07544*/ 01818000
         C     RPARM1,@CF00036                                     0786 01819000
         BE    @RT00786                                            0786 01820000
         C     RPARM1,@CF00063                                     0786 01821000
         BE    @RT00786                                            0786 01822000
         C     RPARM1,@CF00065                                     0786 01823000
         BNE   @RF00786                                            0786 01824000
@RT00786 DS    0H                                                  0787 01825000
*                     CALL RSETMDBT;/* THEN SET MOD BITS BACK ON   0787 01826000
*                                                            @ZA07544*/ 01827000
         BAL   @14,RSETMDBT                                        0787 01828000
*                   GO TO WRTEXIT;  /* RETURN TO CALLER.     @ZA07544*/ 01829000
         B     WRTEXIT                                             0788 01830000
*                 END;              /* END LOGICAL ERROR     @ZA07544*/ 01831000
*               IF BUFCER2=ON THEN  /* ANY ERR?              @ZA07544*/ 01832000
@RF00784 TM    BUFCER2(RBUFC),B'00001000'                          0790 01833000
         BNO   @RF00790                                            0790 01834000
*                 DO;               /* YES-                  @ZA07544*/ 01835000
*                                                                  0791 01836000
*                   /*************************************************/ 01837000
*                   /*                                               */ 01838000
*                   /* DECR BSPH ERR CNT                             */ 01839000
*                   /*                                               */ 01840000
*                   /*************************************************/ 01841000
*                                                                  0792 01842000
*WRTDERCT:                                                         0792 01843000
*                   RFY                                            0792 01844000
*                    (RWORK4,                                      0792 01845000
*                     RWORK5) RSTD; /* LOCK REGS                     */ 01846000
WRTDERCT DS    0H                                                  0793 01847000
*                   RWORK4=BSPHRSC2;/* OLD CNT                       */ 01848000
         L     @15,DBMBSPH-1(,RPLH)                                0793 01849000
         LA    @15,0(,@15)                                         0793 01850000
         L     RWORK4,BSPHRSC2(,@15)                               0793 01851000
*                   RWORK5=RWORK4-ONE;/* NEW CNT                     */ 01852000
         LR    RWORK5,RWORK4                                       0794 01853000
         BCTR  RWORK5,0                                            0794 01854000
*                   CS(RWORK4,RWORK5,BSPHRSC2);/* SWAP IF NO CHG     */ 01855000
         CS    RWORK4,@09,BSPHRSC2(@15)                            0795 01856000
*                   GEN(BNZ WRTDERCT);/* LOOP TILL SUCCESSFUL        */ 01857000
         BNZ WRTDERCT                                                   01858000
*                   RFY                                            0797 01859000
*                    (RWORK4,                                      0797 01860000
*                     RWORK5) UNRSTD;/* UNLOCK                       */ 01861000
*                   RPLFDBWD=ZERO;  /* CLEAR ERROR           @ZA07544*/ 01862000
         SLR   @15,@15                                             0798 01863000
         ST    @15,RPLFDBWD(,RRPL)                                 0798 01864000
*                   IF RPARM1=CHKTYP THEN/* CHK TYPE ?       @ZA07544*/ 01865000
         C     RPARM1,@CF00063                                     0799 01866000
         BNE   @RF00799                                            0799 01867000
*                     CALL RSETMDBT;/* RESET BSPH MOD BITS ON      0800 01868000
*                                                            @ZA07544*/ 01869000
         BAL   @14,RSETMDBT                                        0800 01870000
*                   ELSE            /* NOT CHK               @ZA07544*/ 01871000
*                     IF RPARM1=TRNTYP/* TYPE TRN?                   */ 01872000
*                       THEN        /* YES, SET -                    */ 01873000
         B     @RC00799                                            0801 01874000
@RF00799 C     RPARM1,@CF00065                                     0801 01875000
         BNE   @RF00801                                            0801 01876000
*                       BUFCMDBT=BUFCMDBT&(DBMTRNID&&ALLBITS);/*   0802 01877000
*                                      TRNID OFF                     */ 01878000
         L     @15,DBMTRNID(,RPLH)                                 0802 01879000
         X     @15,ALLBITS                                         0802 01880000
         N     @15,BUFCMDBT(,RBUFC)                                0802 01881000
         ST    @15,BUFCMDBT(,RBUFC)                                0802 01882000
*                     ELSE          /* NOT CHK OR TRN        @ZA07544*/ 01883000
*                       IF RPARM1=ALLTYP THEN/* TYPE ALL ?   @ZA07544*/ 01884000
         B     @RC00801                                            0803 01885000
@RF00801 C     RPARM1,@CF00036                                     0803 01886000
         BNE   @RF00803                                            0803 01887000
*                         BUFCMDBT=ZERO;/* CLEAR MOD BITS    @ZA07544*/ 01888000
         SLR   @15,@15                                             0804 01889000
         ST    @15,BUFCMDBT(,RBUFC)                                0804 01890000
*                   IF BUFCMDBT=ZERO THEN/* ANY MOD BITS?            */ 01891000
@RF00803 DS    0H                                                  0805 01892000
@RC00801 DS    0H                                                  0805 01893000
@RC00799 L     @15,BUFCMDBT(,RBUFC)                                0805 01894000
         LTR   @15,@15                                             0805 01895000
         BNZ   @RF00805                                            0805 01896000
*                     DO;           /* NO, SET TO EMPTY              */ 01897000
*                       RFY                                        0807 01898000
*                        (RWORK4,                                  0807 01899000
*                         RWORK5) RSTD;/* LOCK                       */ 01900000
*                       RWORK5=ZERO;/* AMB                           */ 01901000
         SLR   RWORK5,RWORK5                                       0808 01902000
*                       RWORK4=RWORK2&UCNTMSK1;/* EMPTY STATUS       */ 01903000
         LR    RWORK4,RWORK2                                       0809 01904000
         N     RWORK4,UCNTMSK1                                     0809 01905000
*                       CDS(RWORK2,RWORK4,BUFCRSC1);/* SWAP IF NO  0810 01906000
*                                      CHNG                          */ 01907000
         CDS   RWORK2,RWORK4,BUFCRSC1(RBUFC)                       0810 01908000
*                       RFY                                        0811 01909000
*                        (RWORK4,                                  0811 01910000
*                         RWORK5) UNRSTD;/* UNLOCK                   */ 01911000
*                     END;          /* END MDBT = ZERO               */ 01912000
*                 END;              /* END ERROR             @ZA07544*/ 01913000
@RF00805 DS    0H                                                  0814 01914000
*             END;                  /* END NOT ERR BUFC      @ZA07544*/ 01915000
@RF00790 DS    0H                                                  0815 01916000
*         END;                      /* END MDBT ^= ZERO              */ 01917000
@RF00767 DS    0H                                                  0816 01918000
*INCRBUFC:                          /* INCR RBUFC TO NXT ONE         */ 01919000
*       RBUFC=BUFCHAIN;             /* POINT TO NEXT                 */ 01920000
@RF00743 DS    0H                                                  0816 01921000
INCRBUFC L     RBUFC,BUFCHAIN(,RBUFC)                              0816 01922000
*     END;                          /* END OF DO UNTIL               */ 01923000
@DE00741 LTR   RBUFC,RBUFC                                         0817 01924000
         BNZ   @DL00741                                            0817 01925000
*     GOTO WRTENDCK;                /* CHK FOR END                   */ 01926000
         B     WRTENDCK                                            0818 01927000
*     RFY                                                          0819 01928000
*      (RWORK2,                                                    0819 01929000
*       RWORK3) UNRSTD;             /* UNLOCK                        */ 01930000
*   END;                            /* END OF DO WHILE               */ 01931000
*                                                                  0820 01932000
@DE00732 L     @15,DBMBSPH-1(,RPLH)                                0820 01933000
         L     @15,BSPHMDBT(,@15)                                  0820 01934000
         LTR   @15,@15                                             0820 01935000
         BNZ   @DL00732                                            0820 01936000
*   /*****************************************************************/ 01937000
*   /*                                                               */ 01938000
*   /* BSPHMDBT WAS ZERO OR THE SUBPOOL HAS BEEN PROCESSED.          */ 01939000
*   /*                                                               */ 01940000
*   /*****************************************************************/ 01941000
*                                                                  0821 01942000
*WRTENDCK:                                                         0821 01943000
*   IF RPARM1=DSTYP THEN            /* TYPE DS?                      */ 01944000
WRTENDCK LTR   RPARM1,RPARM1                                       0821 01945000
         BNZ   @RF00821                                            0821 01946000
*     DO;                           /* YES, CLR ALL BUFCS            */ 01947000
*       RBUFC=BSPHBUFC;             /* FIRST BUFC                    */ 01948000
         L     @15,DBMBSPH-1(,RPLH)                                0823 01949000
         L     RBUFC,BSPHBUFC(,@15)                                0823 01950000
*       DO WHILE RBUFC^=ZERO;       /* LOOP THRU BUFCS               */ 01951000
         B     @DE00824                                            0824 01952000
@DL00824 DS    0H                                                  0825 01953000
*         IF RAMB=BUFCAMB&          /* AMB MATCH?            @ZA26569*/ 01954000
*             BUFCRRD=OFF&          /* ANY READ?             @ZA26569*/ 01955000
*             BUFCMW=OFF THEN       /* ANY WRITE?            @ZA33208*/ 01956000
         C     RAMB,BUFCAMB(,RBUFC)                                0825 01957000
         BNE   @RF00825                                            0825 01958000
         TM    BUFCRRD(RBUFC),B'10100000'                          0825 01959000
         BNZ   @RF00825                                            0825 01960000
*           BUFCRSC2=BUFCRSC2&UCNTMSK1;/* SET EMPTY STATUS           */ 01961000
         L     @15,BUFCRSC2(,RBUFC)                                0826 01962000
         N     @15,UCNTMSK1                                        0826 01963000
         ST    @15,BUFCRSC2(,RBUFC)                                0826 01964000
*         RBUFC=BUFCHAIN;           /* NEXT BUFC                     */ 01965000
@RF00825 L     RBUFC,BUFCHAIN(,RBUFC)                              0827 01966000
*       END;                        /* END DO WHILE                  */ 01967000
@DE00824 LTR   RBUFC,RBUFC                                         0828 01968000
         BNZ   @DL00824                                            0828 01969000
*       GO TO WRTEXIT;              /* RETURN TO CALLER.     @ZA07544*/ 01970000
         B     WRTEXIT                                             0829 01971000
*     END;                          /* END TYPE DS                   */ 01972000
*   IF BSPHNBSP=ZERO THEN           /* NO MORE BSPH'S?               */ 01973000
@RF00821 L     @15,DBMBSPH-1(,RPLH)                                0831 01974000
         L     @15,BSPHNBSP(,@15)                                  0831 01975000
         LTR   @15,@15                                             0831 01976000
         BZ    @RT00831                                            0831 01977000
*     GO TO WRTEXIT;                /* RETURN TO CALLER.     @ZA07544*/ 01978000
*/* SET UP FOR NEXT SUBPOOL                                          */ 01979000
*                                                                  0833 01980000
*   DBMBSPH=BSPHNBSP;               /* BSPH BASE                     */ 01981000
         STCM  @15,7,DBMBSPH(RPLH)                                 0833 01982000
*   RBUFC=BSPHBUFC;                 /* FIRST BUFC                    */ 01983000
         L     RBUFC,BSPHBUFC(,@15)                                0834 01984000
*   GOTO WRTRST1;                   /* LOOP BACK                     */ 01985000
*                                                                  0835 01986000
         B     WRTRST1                                             0835 01987000
*   /*****************************************************************/ 01988000
*   /*                                                               */ 01989000
*   /* TYPE = LRU... PROCESS ONLY A SPECIFIED PERCENTAGE OF BUFFERS  */ 01990000
*   /* IN EACH SUBPOOL.                                              */ 01991000
*   /*                                                               */ 01992000
*   /*****************************************************************/ 01993000
*                                                                  0836 01994000
*WRTLRU:                                                           0836 01995000
*   IF DBMLRUCT>ALL THEN            /* TOO HIGH?                     */ 01996000
WRTLRU   CLI   DBMLRUCT(RPLH),100                                  0836 01997000
         BNH   @RF00836                                            0836 01998000
*     DBMLRUCT=ALL;                 /* YES, FORCE TO ALL             */ 01999000
         MVI   DBMLRUCT(RPLH),X'64'                                0837 02000000
*   DO WHILE(DBMBSPH^=ZERO);                                       0838 02001000
@RF00836 B     @DE00838                                            0838 02002000
@DL00838 DS    0H                                                  0839 02003000
*     DBMCNTR=ZERO;                 /* INIT CNT                      */ 02004000
         MVI   DBMCNTR(RPLH),X'00'                                 0839 02005000
*     RBUFC=BSPHUBTM;               /* BOTTOM BUFC                   */ 02006000
         L     @15,DBMBSPH-1(,RPLH)                                0840 02007000
         L     RBUFC,BSPHUBTM(,@15)                                0840 02008000
*LRUSPLP:                           /* SUBPOOL LOOP                  */ 02009000
*     IF BSPHMDBT^=ZERO             /* ANY MOD BITS ON?              */ 02010000
*       THEN                        /* YES                           */ 02011000
LRUSPLP  L     @15,DBMBSPH-1(,RPLH)                                0841 02012000
         L     @15,BSPHMDBT(,@15)                                  0841 02013000
         LTR   @15,@15                                             0841 02014000
         BZ    @RF00841                                            0841 02015000
*       DO WHILE((DBMCNTR<((DBMLRUCT*BSPHBFNO)/100))&RBUFC^=ZERO); 0842 02016000
         B     @DE00842                                            0842 02017000
@DL00842 DS    0H                                                  0843 02018000
*         RFY                                                      0843 02019000
*          (RWORK2,                                                0843 02020000
*           RWORK3) RSTD;           /* LOCK                          */ 02021000
*         RWORK2=BUFCRSC2;          /* SET CS REG                    */ 02022000
         L     RWORK2,BUFCRSC2(,RBUFC)                             0844 02023000
*         IF BUFCMDBT^=ZERO&        /* MOD BIT ON &                  */ 02024000
*             BUFCUCNT=ZERO&        /* NO USERS &                    */ 02025000
*             BUFCBSYW=OFF&         /* NOT BUSY WRITING &            */ 02026000
*             BUFCER2=OFF THEN      /* NOT AN ERR BUFFER?            */ 02027000
         L     @15,BUFCMDBT(,RBUFC)                                0845 02028000
         LTR   @15,@15                                             0845 02029000
         BZ    @RF00845                                            0845 02030000
         CLI   BUFCUCNT(RBUFC),0                                   0845 02031000
         BNE   @RF00845                                            0845 02032000
         TM    BUFCBSYW(RBUFC),B'00010000'                         0845 02033000
         BNZ   @RF00845                                            0845 02034000
         TM    BUFCER2(RBUFC),B'00001000'                          0845 02035000
         BNZ   @RF00845                                            0845 02036000
*           DO;                     /* YES, WRITE BUFFER             */ 02037000
*             RWORK3=RWORK2|BSYWMSK;/* BUSY WRITE ON                 */ 02038000
         LR    RWORK3,RWORK2                                       0847 02039000
         O     RWORK3,BSYWMSK                                      0847 02040000
*             CS(RWORK2,RWORK3,BUFCRSC2);/* SWAP IF NO CHNG          */ 02041000
         CS    RWORK2,@07,BUFCRSC2(RBUFC)                          0848 02042000
*             GEN(BNZ LRUSPLP);     /* CHNGD, TRY AGAIN              */ 02043000
         BNZ LRUSPLP                                                    02044000
*             DBMAMB=RAMB;          /* SAVE RAMB                     */ 02045000
         STCM  RAMB,7,DBMAMB(RPLH)                                 0850 02046000
*             RAMB=BUFCAMB;         /* PICK UP WRITE AMB             */ 02047000
         L     RAMB,BUFCAMB(,RBUFC)                                0851 02048000
*             CALL WRBFR;           /* WRITE IT                      */ 02049000
         BAL   @14,WRBFR                                           0852 02050000
*             RAMB=DBMAMB;          /* RESTORE RAMB                  */ 02051000
         L     RAMB,DBMAMB-1(,RPLH)                                0853 02052000
         LA    RAMB,0(,RAMB)                                       0853 02053000
*WRTCSLP4:                                                         0854 02054000
*             RWORK2=BSPHUIW;       /* OLD CNT                       */ 02055000
WRTCSLP4 L     @15,DBMBSPH-1(,RPLH)                                0854 02056000
         LA    @15,0(,@15)                                         0854 02057000
         L     RWORK2,BSPHUIW(,@15)                                0854 02058000
*             RWORK3=RWORK2+ONE;    /* NEW CNT                       */ 02059000
         LA    RWORK3,1                                            0855 02060000
         ALR   RWORK3,RWORK2                                       0855 02061000
*             CS(RWORK2,RWORK3,BSPHUIW);/* SWAP IF NO CHNG           */ 02062000
         CS    RWORK2,@07,BSPHUIW(@15)                             0856 02063000
*             GEN(BNZ WRTCSLP4);    /* LOOP TILL SUCCESSFUL          */ 02064000
         BNZ WRTCSLP4                                                   02065000
*             BUFCBSYW=OFF;         /* RESET BUSY WRITE              */ 02066000
         NI    BUFCBSYW(RBUFC),B'11101111'                         0858 02067000
*             IF RPLRTNCD^=ZERO THEN/* IF ANY ERROR,                 */ 02068000
         CLI   RPLRTNCD(RRPL),0                                    0859 02069000
         BNE   @RT00859                                            0859 02070000
*               GO TO WRTEXIT;      /* RETURN TO CALLER.     @ZA07544*/ 02071000
*             DBMCNTR=DBMCNTR+ONE;  /* INCR BUFC CNT                 */ 02072000
         LA    @15,1                                               0861 02073000
         SLR   @05,@05                                             0861 02074000
         IC    @05,DBMCNTR(,RPLH)                                  0861 02075000
         ALR   @15,@05                                             0861 02076000
         STC   @15,DBMCNTR(,RPLH)                                  0861 02077000
*             RFY                                                  0862 02078000
*              (RWORK2,                                            0862 02079000
*               RWORK3) UNRSTD;     /* UNLOCK                        */ 02080000
*           END;                                                   0863 02081000
*         RBUFC=BUFCUCUP;           /* NEXT BUFC                     */ 02082000
@RF00845 L     RBUFC,BUFCUCUP(,RBUFC)                              0864 02083000
*       END;                        /* END OF DO UNTIL               */ 02084000
*                                                                  0865 02085000
@DE00842 L     @15,DBMBSPH-1(,RPLH)                                0865 02086000
         LH    @07,BSPHBFNO(,@15)                                  0865 02087000
         SLR   @15,@15                                             0865 02088000
         IC    @15,DBMLRUCT(,RPLH)                                 0865 02089000
         MR    @06,@15                                             0865 02090000
         D     @06,@CF00172                                        0865 02091000
         SLR   @15,@15                                             0865 02092000
         IC    @15,DBMCNTR(,RPLH)                                  0865 02093000
         CR    @07,@15                                             0865 02094000
         BNH   @DC00842                                            0865 02095000
         LTR   RBUFC,RBUFC                                         0865 02096000
         BNZ   @DL00842                                            0865 02097000
@DC00842 DS    0H                                                  0866 02098000
*     /***************************************************************/ 02099000
*     /*                                                             */ 02100000
*     /* SUBPOOL HAS BEEN PROCESSED, SET UP FOR NEXT                 */ 02101000
*     /*                                                             */ 02102000
*     /***************************************************************/ 02103000
*                                                                  0866 02104000
*     DBMBSPH=BSPHNBSP;             /* BSPH BASE                     */ 02105000
@RF00841 L     @15,DBMBSPH-1(,RPLH)                                0866 02106000
         L     @15,BSPHNBSP(,@15)                                  0866 02107000
         STCM  @15,7,DBMBSPH(RPLH)                                 0866 02108000
*   END;                            /* END OF DO WHILE               */ 02109000
*                                                                  0867 02110000
@DE00838 L     @15,DBMBSPH-1(,RPLH)                                0867 02111000
         LA    @15,0(,@15)                                         0867 02112000
         LTR   @15,@15                                             0867 02113000
         BNZ   @DL00838                                            0867 02114000
*   /*****************************************************************/ 02115000
*   /*                                                               */ 02116000
*   /* ALL SUBPOOLS HAVE BEEN PROCESSED, RETURN TO USER              */ 02117000
*   /*                                                               */ 02118000
*   /*****************************************************************/ 02119000
*                                                                  0868 02120000
*WRTEXIT:                           /*                       @ZA07544*/ 02121000
*   PLHINVAL=ON;                    /* CAUSE PLH RELEASE     @ZA07544*/ 02122000
WRTEXIT  OI    PLHINVAL(RPLH),B'00000010'                          0868 02123000
*   CALL BMEXIT;                    /* RETURN TO CALLER              */ 02124000
         BAL   @14,BMEXIT                                          0869 02125000
*   RFY                                                            0870 02126000
*     IDABSPH BASED(AMBBUFC);       /* RESTORE NRM BSPH BASE         */ 02127000
*                                                                  0871 02128000
*   /*****************************************************************/ 02129000
*   /*                                                               */ 02130000
*   /* SCHBF - SEARCH BUFFER MACRO ROUTINE                           */ 02131000
*   /*                                                               */ 02132000
*   /*****************************************************************/ 02133000
*                                                                  0871 02134000
*/*                                                                0871 02135000
*01 FUNCTION = SEARCH BUFFER SUBPOOL STARTING AT RELATIVE BFR      0871 02136000
*              SPECIFIED FOR SPECIFIED RBA.                        0871 02137000
*01 INPUT =    RRPL - RPL                                          0871 02138000
*              RPLH - PLH                                          0871 02139000
*              RAMB - AMB                                          0871 02140000
*              RPARM1 - RELATIVE BFR NO.                           0871 02141000
*              RPLARG - PTR TO RBA RANGE                           0871 02142000
*01 OUTPUT =   RPLDDDD - RBA OF BFR RETURNED                       0871 02143000
*              RPLAREA - BFR ADDR                                  0871 02144000
*              RPARM1 - RELATIVE BFR NO. OF BUFC RETURNED.         0871 02145000
*              PLHDBUFC - PTR TO BUFC CONTAINING RBA.              0871 02146000
*              RBUFC - BUFC RETUTNED.                              0871 02147000
*              RPLRTNCD & RPLERRCD SET TO APPROPRIATE VALUES.        */ 02148000
*                                                                  0871 02149000
*SCHBF:                             /* SEARCH BUFFER                 */ 02150000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 02151000
SCHBF    IDASVR14                                                       02152000
*   RBUFC=PLHDBUFC;                 /* INIT RBUFC                    */ 02153000
         L     RBUFC,PLHDBUFC(,RPLH)                               0872 02154000
*   IF RBUFC^=ZERO THEN             /* PLH OWN A BUFC?               */ 02155000
         LTR   RBUFC,RBUFC                                         0873 02156000
         BZ    @RF00873                                            0873 02157000
*     DO;                           /* YES, FREE IT.         @ZA07544*/ 02158000
*       IF BUFCSEG=ON THEN          /* IF SPANNED RCD        @ZA07544*/ 02159000
         TM    BUFCSEG(RBUFC),B'01000000'                          0875 02160000
         BNO   @RF00875                                            0875 02161000
*         DO;                       /* THEN MUST             @ZA07544*/ 02162000
*           BUFCSEG=OFF;            /* ENSURE AGAINST        @ZA07544*/ 02163000
*           BUFCVAL=OFF;            /* NO-OPPED FREEB        @ZA07544*/ 02164000
         NI    BUFCSEG(RBUFC),B'10111011'                          0878 02165000
*         END;                      /* END SPANNED           @ZA07544*/ 02166000
*       CALL FREEB;                 /* YES, FREE IT          @ZA07544*/ 02167000
@RF00875 BAL   @14,FREEB                                           0880 02168000
*     END;                          /* END FREE BFR          @ZA07544*/ 02169000
*                                                                  0881 02170000
*   /*****************************************************************/ 02171000
*   /*                                                               */ 02172000
*   /* CHECK FOR INVALID PARAMETERS                                  */ 02173000
*   /*                                                               */ 02174000
*   /*****************************************************************/ 02175000
*                                                                  0882 02176000
*   IF RPARM1>BSPHBFNO|             /* BEYOND END?                   */ 02177000
*       RPARM1<ONE THEN             /* OR BEFORE START               */ 02178000
@RF00873 L     @15,AMBBUFC(,RAMB)                                  0882 02179000
         CH    RPARM1,BSPHBFNO(,@15)                               0882 02180000
         BH    @RT00882                                            0882 02181000
         LTR   RPARM1,RPARM1                                       0882 02182000
         BP    @RF00882                                            0882 02183000
@RT00882 DS    0H                                                  0883 02184000
*     DO;                           /* YES, SET ERR & EXIT           */ 02185000
*       RPLRTNCD='08'X;             /* LOGICAL ERR                   */ 02186000
         MVI   RPLRTNCD(RRPL),X'08'                                0884 02187000
*       RPLERRCD=RPLINVP;           /* INVALID REQUEST               */ 02188000
         MVI   RPLERRCD(RRPL),X'68'                                0885 02189000
*       CALL BMEXIT;                /* EXIT                          */ 02190000
         BAL   @14,BMEXIT                                          0886 02191000
*     END;                                                         0887 02192000
*                                                                  0887 02193000
*   /*****************************************************************/ 02194000
*   /*                                                               */ 02195000
*   /* SET TO POINT TO RELATIVE BUFC PER RPARM1                      */ 02196000
*   /*                                                               */ 02197000
*   /*****************************************************************/ 02198000
*                                                                  0888 02199000
*   RBUFC=BSPHBUFC;                 /* POINT TO FIRST                */ 02200000
@RF00882 L     @15,AMBBUFC(,RAMB)                                  0888 02201000
         L     RBUFC,BSPHBUFC(,@15)                                0888 02202000
*   RFY                                                            0889 02203000
*     I RSTD;                       /* LOCK REG                      */ 02204000
*   IF RPARM1>ONE THEN              /* WAS FIRST SPECIFIED?          */ 02205000
         LA    @15,1                                               0890 02206000
         CR    RPARM1,@15                                          0890 02207000
         BNH   @RF00890                                            0890 02208000
*     DO I=ONE TO(RPARM1-ONE);      /* NO, FIND SPECIFIED ONE        */ 02209000
         LR    I,@15                                               0891 02210000
         B     @DE00891                                            0891 02211000
@DL00891 DS    0H                                                  0892 02212000
*       RBUFC=BUFCHAIN;             /* POINT TO NEXT                 */ 02213000
         L     RBUFC,BUFCHAIN(,RBUFC)                              0892 02214000
*     END;                                                         0893 02215000
         AL    I,@CF00047                                          0893 02216000
@DE00891 LR    @15,RPARM1                                          0893 02217000
         BCTR  @15,0                                               0893 02218000
         CR    I,@15                                               0893 02219000
         BNH   @DL00891                                            0893 02220000
*   RFY                                                            0894 02221000
*     I UNRSTD;                     /* UNLOCK                        */ 02222000
*                                                                  0894 02223000
@RF00890 DS    0H                                                  0895 02224000
*   /*****************************************************************/ 02225000
*   /*                                                               */ 02226000
*   /* RBUFC NOW POINTS TO RELATIVE BUFC SPECIFIED BY RPARM1. SEARCH */ 02227000
*   /* BUFCHAIN FROM RBUFC TO END FOR AN RBA WITHIN THE RANGE        */ 02228000
*   /* SPECIFIED BY RPLARG.                                          */ 02229000
*   /*                                                               */ 02230000
*   /*****************************************************************/ 02231000
*                                                                  0895 02232000
*   DO UNTIL(RBUFC=ZERO);           /* SCH TILL END                  */ 02233000
@DL00895 DS    0H                                                  0896 02234000
*     IF RAMB=BUFCAMB&              /* SAME AMB? &                   */ 02235000
*         BUFCDDDD=>SCHLRBA&        /* RBA -                         */ 02236000
*         BUFCDDDD=<SCHHRBA&        /* IN LIMITS? &                  */ 02237000
*         BUFCVAL=ON&               /* RBA IS VALID &                */ 02238000
*         BUFCEXC=OFF THEN          /* BUFCEXC = OFF?                */ 02239000
         C     RAMB,BUFCAMB(,RBUFC)                                0896 02240000
         BNE   @RF00896                                            0896 02241000
         L     @15,BUFCDDDD(,RBUFC)                                0896 02242000
         L     @05,RPLARG(,RRPL)                                   0896 02243000
         ICM   @00,15,SCHLRBA(@05)                                 0896 02244000
         CLR   @15,@00                                             0896 02245000
         BL    @RF00896                                            0896 02246000
         ICM   @00,15,SCHHRBA(@05)                                 0896 02247000
         CLR   @15,@00                                             0896 02248000
         BH    @RF00896                                            0896 02249000
         TM    BUFCVAL(RBUFC),B'00000100'                          0896 02250000
         BNO   @RF00896                                            0896 02251000
         TM    BUFCEXC(RBUFC),B'00000010'                          0896 02252000
         BNZ   @RF00896                                            0896 02253000
*       DO;                         /* YES, RBA MATCH                */ 02254000
*         IF BUFCBSYR=OFF THEN      /* BUSY READ?                    */ 02255000
         TM    BUFCBSYR(RBUFC),B'00100000'                         0898 02256000
         BNZ   @RF00898                                            0898 02257000
*           DO;                     /* NO, CONTINUE                  */ 02258000
*             CALL INCRUCNT;        /* INCR USE CNT                  */ 02259000
*                                                                  0900 02260000
         BAL   @14,INCRUCNT                                        0900 02261000
*             /*******************************************************/ 02262000
*             /*                                                     */ 02263000
*             /* VERIFY THAT RBA MATCH STILL EXISTS ACROSS INCRUCNT  */ 02264000
*             /* CALL                                                */ 02265000
*             /*                                                     */ 02266000
*             /*******************************************************/ 02267000
*                                                                  0901 02268000
*             IF RAMB=BUFCAMB&      /* SAME AMB? &                   */ 02269000
*                 BUFCDDDD=>SCHLRBA&/* RBA -                         */ 02270000
*                 BUFCDDDD=<SCHHRBA&/* IN LIMITS? &                  */ 02271000
*                 BUFCVAL=ON&       /* RBA IS VALID &                */ 02272000
*                 BUFCEXC=OFF THEN  /* BUFCEXC = OFF?                */ 02273000
         C     RAMB,BUFCAMB(,RBUFC)                                0901 02274000
         BNE   @RF00901                                            0901 02275000
         L     @15,BUFCDDDD(,RBUFC)                                0901 02276000
         L     @05,RPLARG(,RRPL)                                   0901 02277000
         ICM   @00,15,SCHLRBA(@05)                                 0901 02278000
         CLR   @15,@00                                             0901 02279000
         BL    @RF00901                                            0901 02280000
         ICM   @00,15,SCHHRBA(@05)                                 0901 02281000
         CLR   @15,@00                                             0901 02282000
         BH    @RF00901                                            0901 02283000
         TM    BUFCVAL(RBUFC),B'00000100'                          0901 02284000
         BNO   @RF00901                                            0901 02285000
         TM    BUFCEXC(RBUFC),B'00000010'                          0901 02286000
         BNZ   @RF00901                                            0901 02287000
*               DO;                 /* YES, RBA MATCH                */ 02288000
*                 RPLDDDD=BUFCDDDD; /* RBA                           */ 02289000
         ST    @15,RPLDDDD(,RRPL)                                  0903 02290000
*                 IF RPLLOC=ON THEN /* LOCATE MODE?                  */ 02291000
         TM    RPLLOC(RRPL),B'10000000'                            0904 02292000
         BNO   @RF00904                                            0904 02293000
*                   USERPTR=BUFCBAD;/* YES, SET BFR ADDR             */ 02294000
         L     @15,RPLAREA(,RRPL)                                  0905 02295000
         L     @05,BUFCBAD(,RBUFC)                                 0905 02296000
         ST    @05,USERPTR(,@15)                                   0905 02297000
*                 ELSE              /* NO, MOVE CI                   */ 02298000
*                   DO;                                            0906 02299000
         B     @RC00904                                            0906 02300000
@RF00904 DS    0H                                                  0907 02301000
*                     IF RPLBUFL<AMDCINV THEN/* ENOUGH ROOM?         */ 02302000
         L     @15,AMBDSB(,RAMB)                                   0907 02303000
         L     @05,RPLBUFL(,RRPL)                                  0907 02304000
         C     @05,AMDCINV(,@15)                                   0907 02305000
         BNL   @RF00907                                            0907 02306000
*                       DO;         /* NO, SET ERROR                 */ 02307000
*                         RPLRTNCD='08'X;/* LOGICAL ERR              */ 02308000
         MVI   RPLRTNCD(RRPL),X'08'                                0909 02309000
*                         RPLERRCD=RPLINBUF;/* INVALID BUF           */ 02310000
         MVI   RPLERRCD(RRPL),X'2C'                                0910 02311000
*                         CALL BMEXIT;/* EXIT                        */ 02312000
         BAL   @14,BMEXIT                                          0911 02313000
*                       END;                                       0912 02314000
*                     RFY                                          0913 02315000
*                      (RWORK2,                                    0913 02316000
*                       RWORK3,                                    0913 02317000
*                       RWORK4,                                    0913 02318000
*                       RWORK5) RSTD;/* LOCK                         */ 02319000
@RF00907 DS    0H                                                  0914 02320000
*                     RWORK2=ADDR(USERAREA);/* TO LOC                */ 02321000
         L     RWORK2,RPLAREA(,RRPL)                               0914 02322000
*                     RWORK3=AMDCINV;/* LENGTH                       */ 02323000
         L     @15,AMBDSB(,RAMB)                                   0915 02324000
         L     RWORK3,AMDCINV(,@15)                                0915 02325000
*                     RWORK4=BUFCBAD;/* FROM LOC                     */ 02326000
         L     RWORK4,BUFCBAD(,RBUFC)                              0916 02327000
*                     RWORK5=RWORK3;/* LENGTH                        */ 02328000
         LR    RWORK5,RWORK3                                       0917 02329000
*                     MVCL(RWORK2,RWORK4);/* MOVE CI                 */ 02330000
         MVCL  RWORK2,RWORK4                                       0918 02331000
*                     RFY                                          0919 02332000
*                      (RWORK2,                                    0919 02333000
*                       RWORK3,                                    0919 02334000
*                       RWORK4,                                    0919 02335000
*                       RWORK5) UNRSTD;/* UNLOCK                     */ 02336000
*                   END;                                           0920 02337000
*                 PLHDBUFC=RBUFC;   /* BUFC PTR                      */ 02338000
@RC00904 ST    RBUFC,PLHDBUFC(,RPLH)                               0921 02339000
*                 RFY                                              0922 02340000
*                  (RWORK1,                                        0922 02341000
*                   RWORK2) RSTD;   /* LOCK REGS                     */ 02342000
*SCHCSLP1:                                                         0923 02343000
*                 RWORK1=BSPHFND;   /* OLD                           */ 02344000
SCHCSLP1 L     @15,AMBBUFC(,RAMB)                                  0923 02345000
         L     RWORK1,BSPHFND(,@15)                                0923 02346000
*                 RWORK2=RWORK1+ONE;/* NEW                           */ 02347000
         LA    RWORK2,1                                            0924 02348000
         ALR   RWORK2,RWORK1                                       0924 02349000
*                 CS(RWORK1,RWORK2,BSPHFND);/* MODIFY                */ 02350000
         CS    RWORK1,@06,BSPHFND(@15)                             0925 02351000
*                 GEN(BNZ SCHCSLP1);/* LOOP TILL SUCCESSFUL          */ 02352000
         BNZ SCHCSLP1                                                   02353000
*                 RFY                                              0927 02354000
*                  (RWORK1,                                        0927 02355000
*                   RWORK2) UNRSTD; /* UNLOCK                        */ 02356000
*                 CALL PUTBTOP;     /* PUT ON TOP OF UCHAIN          */ 02357000
         BAL   @14,PUTBTOP                                         0928 02358000
*                 CALL BMEXIT;      /* EXIT                          */ 02359000
         BAL   @14,BMEXIT                                          0929 02360000
*               END;                /* END RBA STILL MATCH           */ 02361000
*             ELSE                  /* NO MATCH                      */ 02362000
*               CALL DECRUCNT;      /* DOESN'T STILL MATCH           */ 02363000
         B     @RC00901                                            0931 02364000
@RF00901 BAL   @14,DECRUCNT                                        0931 02365000
*           END;                    /* END BUFCBSYR = OFF            */ 02366000
*         ELSE                      /* BSY READ, DFR TILL NOT        */ 02367000
*           DO;                                                    0933 02368000
         B     @RC00898                                            0933 02369000
@RF00898 DS    0H                                                  0934 02370000
*             PLHDRMSK=BSYRWMSK;    /* MASK                          */ 02371000
         MVI   PLHDRMSK(RPLH),X'30'                                0934 02372000
*             PLHDRRSC=ADDR(BUFCFLG2);/* TARGET                      */ 02373000
         LA    @15,BUFCFLG2(,RBUFC)                                0935 02374000
         ST    @15,PLHDRRSC(,RPLH)                                 0935 02375000
*             CALL BMDEFER;         /* DEFER RTN                     */ 02376000
         BAL   @14,BMDEFER                                         0936 02377000
*           END;                    /* END BUSY READ                 */ 02378000
*       END;                        /* END RBA MATCH                 */ 02379000
*     ELSE                          /* NO RBA MTCH, CHK NXT          */ 02380000
*       DO;                                                        0939 02381000
         B     @RC00896                                            0939 02382000
@RF00896 DS    0H                                                  0940 02383000
*         RPARM1=RPARM1+ONE;        /* INCR REL BFNO CNTR            */ 02384000
         AL    RPARM1,@CF00047                                     0940 02385000
*         RBUFC=BUFCHAIN;           /* POINT TO NEXT                 */ 02386000
         L     RBUFC,BUFCHAIN(,RBUFC)                              0941 02387000
*       END;                                                       0942 02388000
*   END;                            /* END OF DO UNTIL               */ 02389000
*                                                                  0943 02390000
@RC00896 DS    0H                                                  0943 02391000
@DE00895 LTR   RBUFC,RBUFC                                         0943 02392000
         BNZ   @DL00895                                            0943 02393000
*   /*****************************************************************/ 02394000
*   /*                                                               */ 02395000
*   /* END OF BUFCHAIN, SET 'NOT FOUND' & EXIT.                      */ 02396000
*   /*                                                               */ 02397000
*   /*****************************************************************/ 02398000
*                                                                  0944 02399000
*   RPLERRCD=RPLNOREC;              /* NOT FOUND                     */ 02400000
         MVI   RPLERRCD(RRPL),X'10'                                0944 02401000
*   RPLRTNCD='08'X;                 /* LOGICAL ERR                   */ 02402000
         MVI   RPLRTNCD(RRPL),X'08'                                0945 02403000
*   CALL BMEXIT;                    /* EXIT                          */ 02404000
         BAL   @14,BMEXIT                                          0946 02405000
*                                                                  0947 02406000
*   /*****************************************************************/ 02407000
*   /*                                                               */ 02408000
*   /* MRKBF - MARK BUFFER MACRO ROUTINE                             */ 02409000
*   /*                                                               */ 02410000
*   /*****************************************************************/ 02411000
*                                                                  0947 02412000
*/*                                                                0947 02413000
*01 FUNCTION = MARK OUT - MARK A BUFC FOR OUTPUT                   0947 02414000
*              MARK RLS - RELEASE A BUFC.                          0947 02415000
*01 INPUT =    RRPL - RPL                                          0947 02416000
*              RPLH - PLH                                          0947 02417000
*              RAMB - AMB                                          0947 02418000
*              RBUFC - BUFC TO BE MARKED.                          0947 02419000
*              RPARM1 = 0 - MARK OUT                               0947 02420000
*                     = 4 - MARK RLS                               0947 02421000
*01 OUTPUT =   BUFC MARKED AS SPECIFIED.                           0947 02422000
*              RPLRTNCD & RPLERRCD SET TO APPROPRIATE VALUES.        */ 02423000
*                                                                  0947 02424000
*MRKBF:                             /* MARK BUFFER                   */ 02425000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 02426000
MRKBF    IDASVR14                                                       02427000
*   IF RPARM1=ZERO THEN             /* MARK OUT?                     */ 02428000
         LTR   RPARM1,RPARM1                                       0948 02429000
         BNZ   @RF00948                                            0948 02430000
*     DO;                           /* YES, MARK FOR OUTPUT          */ 02431000
*MRKLP1:                                                           0950 02432000
*       IF BUFCBSYW=ON THEN         /* BUSY WRITE?                   */ 02433000
MRKLP1   TM    BUFCBSYW(RBUFC),B'00010000'                         0950 02434000
         BNO   @RF00950                                            0950 02435000
*         DO;                       /* YES, DEFER TILL OFF           */ 02436000
*           PLHDRMSK=BSYRWMSK;      /* MASK                          */ 02437000
         MVI   PLHDRMSK(RPLH),X'30'                                0952 02438000
*           PLHDRRSC=ADDR(BUFCFLG2);/* TARGET                        */ 02439000
         LA    @15,BUFCFLG2(,RBUFC)                                0953 02440000
         ST    @15,PLHDRRSC(,RPLH)                                 0953 02441000
*           CALL BMDEFER;           /* DEFER RTN                     */ 02442000
         BAL   @14,BMDEFER                                         0954 02443000
*           GOTO MRKLP1;            /* LOOP BACK                     */ 02444000
         B     MRKLP1                                              0955 02445000
*         END;                                                     0956 02446000
*       ELSE                        /* NOT BSY, MRK FOR OUT          */ 02447000
*         DO;                                                      0957 02448000
@RF00950 DS    0H                                                  0958 02449000
*           CALL SETMDBTS;          /* SET WRT MSK                   */ 02450000
         BAL   @14,SETMDBTS                                        0958 02451000
*           BUFCORBA=BUFCDDDD;      /* OUT RBA                       */ 02452000
         L     @15,BUFCDDDD(,RBUFC)                                0959 02453000
         ST    @15,BUFCORBA(,RBUFC)                                0959 02454000
*           BUFCMW=ON;              /* IND MUST WRITE                */ 02455000
         OI    BUFCMW(RBUFC),B'10000000'                           0960 02456000
*           CALL PUTBTOP;           /* PUT AT TOP OF CHAIN           */ 02457000
         BAL   @14,PUTBTOP                                         0961 02458000
*           CALL BMEXIT;            /* EXIT                          */ 02459000
         BAL   @14,BMEXIT                                          0962 02460000
*         END;                                                     0963 02461000
*     END;                                                         0964 02462000
*   ELSE                            /* NOT MARK OUT                  */ 02463000
*     IF RPARM1=FOUR THEN           /* MRK RLS?                      */ 02464000
         B     @RC00948                                            0965 02465000
@RF00948 C     RPARM1,@CF00156                                     0965 02466000
         BNE   @RF00965                                            0965 02467000
*       DO;                         /* YES, RELE BUFC                */ 02468000
*         IF BUFCMW=ON THEN         /* IF WRITE REQD         @ZA10886*/ 02469000
         TM    BUFCMW(RBUFC),B'10000000'                           0967 02470000
         BNO   @RF00967                                            0967 02471000
*           DO;                     /*                       @ZA10886*/ 02472000
*             CALL SETMDBTS;        /* SET MOD BITS          @ZA10886*/ 02473000
         BAL   @14,SETMDBTS                                        0969 02474000
*             BUFCDDDD=BUFCORBA;    /* COPY OUTPUT RBA       @ZA10886*/ 02475000
         L     @15,BUFCORBA(,RBUFC)                                0970 02476000
         ST    @15,BUFCDDDD(,RBUFC)                                0970 02477000
*           END;                    /*                       @ZA10886*/ 02478000
*         BUFCEXC=OFF;              /* RESET EXCL CTRL               */ 02479000
@RF00967 NI    BUFCEXC(RBUFC),B'11111101'                          0972 02480000
*         CALL DECRUCNT;            /* DECR USE CNT                  */ 02481000
         BAL   @14,DECRUCNT                                        0973 02482000
*         PLHDBUFC=ZERO;            /* CLR BUFC PTR                  */ 02483000
         SLR   @15,@15                                             0974 02484000
         ST    @15,PLHDBUFC(,RPLH)                                 0974 02485000
*         PLHINVAL=ON;              /* SET INVALID                   */ 02486000
         OI    PLHINVAL(RPLH),B'00000010'                          0975 02487000
*         CALL BMEXIT;              /* EXIT                          */ 02488000
         BAL   @14,BMEXIT                                          0976 02489000
*       END;                                                       0977 02490000
*                                                                  0977 02491000
*   /*****************************************************************/ 02492000
*   /*                                                               */ 02493000
*   /* INVALID REQUEST. RPARM1 WAS NOT ZERO OR FOUR.                 */ 02494000
*   /*                                                               */ 02495000
*   /*****************************************************************/ 02496000
*                                                                  0978 02497000
*     ELSE                          /* EXIT ERR                      */ 02498000
*       DO;                                                        0978 02499000
         B     @RC00965                                            0978 02500000
@RF00965 DS    0H                                                  0979 02501000
*         RPLRTNCD='08'X;           /* LOGICAL ERR                   */ 02502000
         MVI   RPLRTNCD(RRPL),X'08'                                0979 02503000
*         RPLERRCD=RPLINVP;         /* INVALID REQUEST               */ 02504000
         MVI   RPLERRCD(RRPL),X'68'                                0980 02505000
*         CALL BMEXIT;              /* EXIT                          */ 02506000
         BAL   @14,BMEXIT                                          0981 02507000
*       END;                                                       0982 02508000
*                                                                  0983 02509000
*   /*****************************************************************/ 02510000
*   /*                                                               */ 02511000
*   /* GWSEG - GET WORK BUFC FOR SPANNED RECORDS                     */ 02512000
*   /*                                                               */ 02513000
*   /*****************************************************************/ 02514000
*                                                                  0983 02515000
*/*                                                                0983 02516000
*01 FUNCTION = GET A WORK BUFFER FOR SPANNED RECORDS.              0983 02517000
*01 INPUT =    STD VSAM REGS.                                      0983 02518000
*01 OUTPUT =   THE CI WRITTEN IF REQUIRED.                         0983 02519000
*              RPLRTNCD & RPLERRCD SET IF A WRITE ERROR OCCURRED.  0983 02520000
*              RBUFC WORK BUFFER PROVIDED.                           */ 02521000
*                                                                  0983 02522000
*GWSEG:                             /* GET WORK SEGMENT.             */ 02523000
*   RBUFC=PLHDBUFC;                 /* BUFC PTR                      */ 02524000
@RC00965 DS    0H                                                  0983 02525000
@RC00948 DS    0H                                                  0983 02526000
GWSEG    L     RBUFC,PLHDBUFC(,RPLH)                               0983 02527000
*   IF BUFCMW=OFF THEN              /* MUST WRITE?                   */ 02528000
         TM    BUFCMW(RBUFC),B'10000000'                           0984 02529000
         BZ    @RT00984                                            0984 02530000
*     RETURN;                       /* NO, EXIT                      */ 02531000
*   BUFCBSYW=ON;                    /* IND BSY WRITE                 */ 02532000
         OI    BUFCBSYW(RBUFC),B'00010000'                         0986 02533000
*   GEN(IDASVR14);                  /* SAVE RTRN REG                 */ 02534000
         IDASVR14                                                       02535000
*   CALL WRBFR;                     /* WRITE CI                      */ 02536000
         BAL   @14,WRBFR                                           0988 02537000
*   RFY                                                            0989 02538000
*    (RWORK1,                                                      0989 02539000
*     RWORK2) RSTD;                 /* LOCK C & S REGS               */ 02540000
*CSLOOP4:                                                          0990 02541000
*   RWORK1=BSPHUIW;                 /* OLD CNT                       */ 02542000
CSLOOP4  L     @15,AMBBUFC(,RAMB)                                  0990 02543000
         L     RWORK1,BSPHUIW(,@15)                                0990 02544000
*   RWORK2=RWORK1+ONE;              /* NEW CNT                       */ 02545000
         LA    RWORK2,1                                            0991 02546000
         ALR   RWORK2,RWORK1                                       0991 02547000
*   CS(RWORK1,RWORK2,BSPHUIW);      /* SET IT                        */ 02548000
         CS    RWORK1,@06,BSPHUIW(@15)                             0992 02549000
*   GEN(BNZ    CSLOOP4);            /* LOOP TILL SUCCESSFUL          */ 02550000
         BNZ    CSLOOP4                                                 02551000
*   BUFCBSYW=OFF;                   /* RESET BSY WRITE               */ 02552000
         NI    BUFCBSYW(RBUFC),B'11101111'                         0994 02553000
*   IF BUFCER2=ON THEN              /* WRITE ERROR?          @ZA07544*/ 02554000
         TM    BUFCER2(RBUFC),B'00001000'                          0995 02555000
         BNO   @RF00995                                            0995 02556000
*     DO;                           /* YES.                  @ZA07544*/ 02557000
*       BUFCVAL=OFF;                /* IND INVALID RBA               */ 02558000
         NI    BUFCVAL(RBUFC),B'11111011'                          0997 02559000
*       BUFCUCNT=ZERO;              /* UCNT = ZERO                   */ 02560000
         MVI   BUFCUCNT(RBUFC),X'00'                               0998 02561000
*       RPLRTNCD='0C'X;             /* PHYSICAL ERR                  */ 02562000
         MVI   RPLRTNCD(RRPL),X'0C'                                0999 02563000
*       RPLERRCD=RPLWTERD;          /* WRITE ERR                     */ 02564000
         MVI   RPLERRCD(RRPL),X'10'                                1000 02565000
*     END;                                                         1001 02566000
*   RFY                                                            1002 02567000
*    (RWORK1,                                                      1002 02568000
*     RWORK2) UNRSTD;               /* FREE REGS                     */ 02569000
@RF00995 DS    0H                                                  1003 02570000
*   CALL BMEXIT;                    /* END OF GWSEG                  */ 02571000
         BAL   @14,BMEXIT                                          1003 02572000
*                                                                  1004 02573000
*   /*****************************************************************/ 02574000
*   /*                                                               */ 02575000
*   /* READBFR - READ A CONTROL INTERVAL                             */ 02576000
*   /*                                                               */ 02577000
*   /*****************************************************************/ 02578000
*                                                                  1004 02579000
*READBFR:                                                          1004 02580000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1004 02581000
*                                                                  1004 02582000
         B     @PB00004                                            1004 02583000
READBFR  DS    0H                                                  1005 02584000
*/*                                                                1005 02585000
*01 FUNCTION = CALL I/O MANAGER, CALL IDAWAIT, AND CHECK FOR READ ERROR 02586000
*01 INPUT =    RBUFC IS THE BUFC TO READ. THE OTHER REGISTERS HAVE 1005 02587000
*              THEIR STANDARD CONTENTS.                            1005 02588000
*01 OUTPUT =   REGISTERS UNCHANGED, ERROR CODE SET IN RPL.           */ 02589000
*                                                                  1005 02590000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 02591000
         IDASVR14                                                       02592000
*   RPARM1=PLHDIOB;                 /* SET IOB ADDR                  */ 02593000
         L     RPARM1,PLHDIOB(,RPLH)                               1006 02594000
*   IF RPLASY=OFF THEN              /* SYNCHRONOUS REQUEST?  @Z40GSDT*/ 02595000
         TM    RPLASY(RRPL),B'00001000'                            1007 02596000
         BNZ   @RF01007                                            1007 02597000
*     PLHSR=ON;                     /* SET SUSPEND/RESUME    @Z40GSDT*/ 02598000
         OI    PLHSR(RPLH),B'00000001'                             1008 02599000
*I09:                                                              1009 02600000
*   DO;                             /* IDACALL(IDA019R3)             */ 02601000
@RF01007 DS    0H                                                  1009 02602000
I09      DS    0H                                                  1010 02603000
*     CALL IDA019R3;                /* EXIT TO IDA019R3              */ 02604000
         L     @15,@CV00148                                        1010 02605000
         BALR  @14,@15                                             1010 02606000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02607000
         BALR @11,0                                                     02608000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02609000
         USING *,@11                                                    02610000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 02611000
         USING *+4095,@10                                               02612000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 02613000
         LA    @10,4095(@11)                                            02614000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 02615000
         L     @10,=A(@PSTART+4095)                                     02616000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 02617000
         USING @PSTART+4095,@10                                         02618000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02619000
         L     @11,=A(@PSTART)                                          02620000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02621000
         USING @PSTART,@11                                              02622000
*   END I09;                        /* CALL I/O MGR FOR READ         */ 02623000
*I10:                                                              1020 02624000
*   DO;                             /* IDACALL(IDAWAIT)              */ 02625000
I10      DS    0H                                                  1021 02626000
*     CALL IDAWAIT;                 /* EXIT TO IDAWAIT               */ 02627000
         L     @15,@CV00150                                        1021 02628000
         BALR  @14,@15                                             1021 02629000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 02630000
         BALR @11,0                                                     02631000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 02632000
         USING *,@11                                                    02633000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 02634000
         USING *+4095,@10                                               02635000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 02636000
         LA    @10,4095(@11)                                            02637000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 02638000
         L     @10,=A(@PSTART+4095)                                     02639000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 02640000
         USING @PSTART+4095,@10                                         02641000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 02642000
         L     @11,=A(@PSTART)                                          02643000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 02644000
         USING @PSTART,@11                                              02645000
*   END I10;                        /* WAIT FOR I/O CMPLETION        */ 02646000
*   CALL ERRORCHK;                  /* CHECK FOR READ ERROR          */ 02647000
         BAL   @14,ERRORCHK                                        1031 02648000
*   BUFCSEG=OFF;                    /* ASSUME NO SPAN        @ZA07544*/ 02649000
         NI    BUFCSEG(RBUFC),B'10111111'                          1032 02650000
*   IF RPLRTNCD=ZERO THEN           /* I/O ERROR?                    */ 02651000
         CLI   RPLRTNCD(RRPL),0                                    1033 02652000
         BNE   @RF01033                                            1033 02653000
*     DO;                           /* NO, INCR RD CNT & EXIT        */ 02654000
*       IF AMDSPAN=ON THEN          /* SPANNED RCD DS?       @ZA07544*/ 02655000
         L     @15,AMBDSB(,RAMB)                                   1035 02656000
         TM    AMDSPAN(@15),B'00000001'                            1035 02657000
         BNO   @RF01035                                            1035 02658000
*         DO;                       /* YES, CHK RDF          @ZA07544*/ 02659000
*           RFY                                                    1037 02660000
*             RWORK1 RSTD;          /* GET WORK REG          @ZA07544*/ 02661000
*           RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF)-LENGTH(IDARDF);/*    02662000
*                                      POINT TO RDF          @ZA07544*/ 02663000
         L     RWORK1,BUFCBAD(,RBUFC)                              1038 02664000
         AL    RWORK1,AMDCINV(,@15)                                1038 02665000
         SL    RWORK1,@CF00493                                     1038 02666000
*           IF RWORK1->RDF1ST=ON|   /* SPANNED RCD?          @ZA07544*/ 02667000
*               RWORK1->RDFNOT1=ON THEN/*                    @ZA07544*/ 02668000
         TM    RDF1ST(RWORK1),B'00110000'                          1039 02669000
         BZ    @RF01039                                            1039 02670000
*             BUFCSEG=ON;           /* YES, SET FLAG         @ZA07544*/ 02671000
         OI    BUFCSEG(RBUFC),B'01000000'                          1040 02672000
*           RFY                                                    1041 02673000
*             RWORK1 UNRSTD;        /* DROP WORK REG         @ZA07544*/ 02674000
@RF01039 DS    0H                                                  1042 02675000
*         END;                      /* END S.R. DS           @ZA07544*/ 02676000
*       RFY                                                        1043 02677000
*        (RWORK1,                                                  1043 02678000
*         RWORK2) RSTD;             /* LOCK REGS                     */ 02679000
@RF01035 DS    0H                                                  1044 02680000
*RDBFLP1:                                                          1044 02681000
*       RWORK1=BSPHRDS;             /* OLD CNT                       */ 02682000
RDBFLP1  L     @15,AMBBUFC(,RAMB)                                  1044 02683000
         L     RWORK1,BSPHRDS(,@15)                                1044 02684000
*       RWORK2=RWORK1+ONE;          /* NEW CNT                       */ 02685000
         LA    RWORK2,1                                            1045 02686000
         ALR   RWORK2,RWORK1                                       1045 02687000
*       CS(RWORK1,RWORK2,BSPHRDS);  /* SWAP IF NO CHNG               */ 02688000
         CS    RWORK1,@06,BSPHRDS(@15)                             1046 02689000
*       GEN(BNZ RDBFLP1);           /* LOOP TILL SUCCESSFUL          */ 02690000
         BNZ RDBFLP1                                                    02691000
*       RFY                                                        1048 02692000
*        (RWORK1,                                                  1048 02693000
*         RWORK2) UNRSTD;           /* UNLOCK                        */ 02694000
*       CALL BMEXIT;                /* RETURN TO CALLER              */ 02695000
         BAL   @14,BMEXIT                                          1049 02696000
*     END;                                                         1050 02697000
*   ELSE                            /* I/O ERR                       */ 02698000
*     IF RPLRTNCD='0C'X THEN        /* PHYSICAL ERR?                 */ 02699000
         B     @RC01033                                            1051 02700000
@RF01033 CLI   RPLRTNCD(RRPL),12                                   1051 02701000
         BNE   @RF01051                                            1051 02702000
*       DO;                         /* YES                           */ 02703000
*         PLHJNRBA='0C'X;           /* INDICATE ERROR                */ 02704000
         LA    @15,12                                              1053 02705000
         ST    @15,PLHJNRBA(,RPLH)                                 1053 02706000
*I11:                                                              1054 02707000
*         DO;                       /* IDACALL(IDA019R5)             */ 02708000
I11      DS    0H                                                  1055 02709000
*           CALL IDA019R5;          /* EXIT TO IDA019R5              */ 02710000
         L     @15,@CV00149                                        1055 02711000
         BALR  @14,@15                                             1055 02712000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 02713000
         BALR @11,0                                                     02714000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 02715000
         USING *,@11                                                    02716000
*           GEN(USING *+4095,@10);  /* ESTABLISH SECOND BASE         */ 02717000
         USING *+4095,@10                                               02718000
*           GEN(LA    @10,4095(@11));/* LOAD SECOND BASE             */ 02719000
         LA    @10,4095(@11)                                            02720000
*           GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE    */ 02721000
         L     @10,=A(@PSTART+4095)                                     02722000
*           GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE     */ 02723000
         USING @PSTART+4095,@10                                         02724000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 02725000
         L     @11,=A(@PSTART)                                          02726000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 02727000
         USING @PSTART,@11                                              02728000
*         END I11;                  /* ERR MSG RTN                   */ 02729000
*         IF AMBJRN=ON THEN         /* JRNAD EXIT ACTIVE?            */ 02730000
         TM    AMBJRN(RAMB),B'00000010'                            1065 02731000
         BNO   @RF01065                                            1065 02732000
*           DO;                     /* YES                           */ 02733000
*             PLHJCODE=PLHJIER;     /* IND INPUT ERR                 */ 02734000
         MVI   PLHJCODE(RPLH),B'00100100'                          1067 02735000
*             PLHCRBA=BUFCBAD;      /* BUFFER ADDR                   */ 02736000
         L     @15,BUFCBAD(,RBUFC)                                 1068 02737000
         ST    @15,PLHCRBA(,RPLH)                                  1068 02738000
*             PLHJNRBA=RPLRTNCD;    /* RETURN CODE                   */ 02739000
         SLR   @15,@15                                             1069 02740000
         IC    @15,RPLRTNCD(,RRPL)                                 1069 02741000
         ST    @15,PLHJNRBA(,RPLH)                                 1069 02742000
*I12:                                                              1070 02743000
*             DO;                   /* IDACALL(IDATJXIT)             */ 02744000
I12      DS    0H                                                  1071 02745000
*               CALL IDATJXIT;      /* EXIT TO IDATJXIT              */ 02746000
         L     @15,@CV00153                                        1071 02747000
         BALR  @14,@15                                             1071 02748000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 02749000
         BALR @11,0                                                     02750000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 02751000
         USING *,@11                                                    02752000
*               GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE       */ 02753000
         USING *+4095,@10                                               02754000
*               GEN(LA    @10,4095(@11));/* LOAD SECOND BASE         */ 02755000
         LA    @10,4095(@11)                                            02756000
*               GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE*/ 02757000
         L     @10,=A(@PSTART+4095)                                     02758000
*               GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE */ 02759000
         USING @PSTART+4095,@10                                         02760000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 02761000
         L     @11,=A(@PSTART)                                          02762000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 02763000
         USING @PSTART,@11                                              02764000
*             END I12;              /* JRNAD EXIT                    */ 02765000
*           END;                                                   1081 02766000
*         IF AMBEXEX(ONE:ONE)^=ZERO THEN/* EXCEPTION EXIT ACTIVE?    */ 02767000
@RF01065 CLI   AMBEXEX(RAMB),0                                     1082 02768000
         BE    @RF01082                                            1082 02769000
*           DO;                     /* YES                           */ 02770000
*I13:                                                              1084 02771000
*             DO;                   /* IDACALL(IDAEXEX)              */ 02772000
I13      DS    0H                                                  1085 02773000
*               CALL IDAEXEX;       /* EXIT TO IDAEXEX               */ 02774000
         L     @15,@CV00154                                        1085 02775000
         BALR  @14,@15                                             1085 02776000
*               GEN(BALR @11,0);    /* LOAD ADDR OF REENTRY          */ 02777000
         BALR @11,0                                                     02778000
*               GEN(USING *,@11);   /* ESTABLISH ADDRESSING          */ 02779000
         USING *,@11                                                    02780000
*               GEN(USING *+4095,@10);/* ESTABLISH SECOND BASE       */ 02781000
         USING *+4095,@10                                               02782000
*               GEN(LA    @10,4095(@11));/* LOAD SECOND BASE         */ 02783000
         LA    @10,4095(@11)                                            02784000
*               GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE*/ 02785000
         L     @10,=A(@PSTART+4095)                                     02786000
*               GEN(USING @PSTART+4095,@10);/* ESTABLISH SECOND BASE */ 02787000
         USING @PSTART+4095,@10                                         02788000
*               GEN(L     @11,=A(@PSTART));/* RELOAD BASE            */ 02789000
         L     @11,=A(@PSTART)                                          02790000
*               GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING       */ 02791000
         USING @PSTART,@11                                              02792000
*             END I13;              /* EXCEPTION RTN                 */ 02793000
*           END;                                                   1095 02794000
*         IF PLHJNRBA=ZERO THEN     /* PROCESS OPTIONS ZERO?         */ 02795000
@RF01082 L     @15,PLHJNRBA(,RPLH)                                 1096 02796000
         LTR   @15,@15                                             1096 02797000
         BNZ   @RF01096                                            1096 02798000
*           DO;                     /* YES                           */ 02799000
*             RPLRTNCD=ZERO;        /* CLEAR RTN CODE                */ 02800000
         MVI   RPLRTNCD(RRPL),X'00'                                1098 02801000
*             RPLERRCD=ZERO;        /* CLEAR                         */ 02802000
         MVI   RPLERRCD(RRPL),X'00'                                1099 02803000
*           END;                                                   1100 02804000
*         BUFCER1=OFF;              /* FORGET ABOUT ERROR            */ 02805000
@RF01096 NI    BUFCER1(RBUFC),B'11101111'                          1101 02806000
*       END;                        /* END PHY ERR                   */ 02807000
*   CALL BMEXIT;                    /* RETURN TO CALLER              */ 02808000
@RF01051 DS    0H                                                  1103 02809000
@RC01033 BAL   @14,BMEXIT                                          1103 02810000
*   END READBFR;                    /* END OF READ BUFFER            */ 02811000
@EL00004 DS    0H                                                  1104 02812000
@EF00004 DS    0H                                                  1104 02813000
@ER00004 BR    @14                                                 1104 02814000
*                                                                  1105 02815000
*   /*****************************************************************/ 02816000
*   /*                                                               */ 02817000
*   /* SETMDBTS - SET MDBT MASK BITS IN BUFC & BSPH                  */ 02818000
*   /*                                                               */ 02819000
*   /*****************************************************************/ 02820000
*                                                                  1105 02821000
*SETMDBTS:                                                         1105 02822000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1105 02823000
*                                                                  1105 02824000
SETMDBTS DS    0H                                                  1106 02825000
*/*                                                                1106 02826000
*01 FUNCTION = SET MDBTS FOR THIS TRANSID IN BSPH AND BUFC         1106 02827000
*01 INPUT =    STD VSAM REGS                                       1106 02828000
*01 OUTPUT =   MDBT BIT CORRESPONDING TO RPL TRANSID SET IN        1106 02829000
*              BSPH AND BUFC.                                        */ 02830000
*                                                                  1106 02831000
*   RFY                                                            1106 02832000
*    (RWORK1,                                                      1106 02833000
*     RWORK2,                                                      1106 02834000
*     RWORK3) RSTD;                 /* LOCK UP REGS                  */ 02835000
*   RWORK1=RPLSTRID;                /* PICK UP ID                    */ 02836000
         LH    RWORK1,RPLSTRID(,RRPL)                              1107 02837000
*   RWORK2=SHIFTBIT;                /* HI BIT FOR SHIFT              */ 02838000
         L     RWORK2,SHIFTBIT                                     1108 02839000
*   GEN( SRL   RWORK2,0(RWORK1));   /* SHIFT TO POS.                 */ 02840000
          SRL   RWORK2,0(RWORK1)                                        02841000
*CSLOOP1:                                                          1110 02842000
*   RWORK3=BUFCMDBT;                /* PRESENT MASK                  */ 02843000
CSLOOP1  L     RWORK3,BUFCMDBT(,RBUFC)                             1110 02844000
*   RWORK1=RWORK3|RWORK2;           /* NEW MASK                      */ 02845000
         LR    RWORK1,RWORK3                                       1111 02846000
         OR    RWORK1,RWORK2                                       1111 02847000
*   CS(RWORK3,RWORK1,BUFCMDBT);     /* C & S                         */ 02848000
         CS    RWORK3,@05,BUFCMDBT(RBUFC)                          1112 02849000
*   GEN( BNZ    CSLOOP1);           /* LOOP TILL SUCCESSFUL          */ 02850000
          BNZ    CSLOOP1                                                02851000
*CSLOOP2:                                                          1114 02852000
*   RWORK3=BSPHMDBT;                /* PRESENT MASK                  */ 02853000
CSLOOP2  L     @15,AMBBUFC(,RAMB)                                  1114 02854000
         L     RWORK3,BSPHMDBT(,@15)                               1114 02855000
*   RWORK1=RWORK3|RWORK2;           /* NEW MASK                      */ 02856000
         LR    RWORK1,RWORK3                                       1115 02857000
         OR    RWORK1,RWORK2                                       1115 02858000
*   CS(RWORK3,RWORK1,BSPHMDBT);     /* C & S                         */ 02859000
         CS    RWORK3,@05,BSPHMDBT(@15)                            1116 02860000
*   GEN( BNZ    CSLOOP2);           /* LOOP TILL SUCCESSFUL          */ 02861000
          BNZ    CSLOOP2                                                02862000
*   RFY                                                            1118 02863000
*    (RWORK1,                                                      1118 02864000
*     RWORK2,                                                      1118 02865000
*     RWORK3) UNRSTD;                                              1118 02866000
*   END SETMDBTS;                                                  1119 02867000
@EL00005 DS    0H                                                  1119 02868000
@EF00005 DS    0H                                                  1119 02869000
@ER00005 BR    @14                                                 1119 02870000
*                                                                  1120 02871000
*/* RESET MODIFICATION BITS ON IN THE BSPH                   @ZA07544*/ 02872000
*                                                                  1120 02873000
*RSETMDBT:                                                         1120 02874000
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             1120 02875000
*                                                                  1120 02876000
RSETMDBT DS    0H                                                  1121 02877000
*/*                                                                1121 02878000
*01 FUNCTION = RESET THE BSPH MODIFICATION BITS BACK ON FOR WRTBFR 1121 02879000
*              REQUEST TYPES ALL, CHK, AND TRN.                    1121 02880000
*01 INPUT    = PLH FIELDS DBMTRNID AND PLHNRBA CONTAINING THE MOD  1121 02881000
*              BITS TO BE TURNED BACK ON.                          1121 02882000
*01 OUTPUT   = MODIFICATION BITS TURNED BACK ON IN THE BSPH FOR A  1121 02883000
*              SPECIFIC SUBPOOL.                                   1121 02884000
*                                                            @ZA07544*/ 02885000
*                                                                  1121 02886000
*   GEN(IDASVR14);                  /* SAVE RETURN           @ZA07544*/ 02887000
         IDASVR14                                                       02888000
*   RFY                                                            1122 02889000
*    (RWORK4,                                                      1122 02890000
*     RWORK5) RSTD;                 /* LOCK WORK REGS        @ZA07544*/ 02891000
*RESETID:                                                          1123 02892000
*   RWORK4=DBMBSPH->BSPHMDBT;       /* SAVE CURRENT MOD BITS @ZA28344*/ 02893000
RESETID  L     @15,DBMBSPH-1(,RPLH)                                1123 02894000
         L     RWORK4,BSPHMDBT(,@15)                               1123 02895000
*   IF RPARM1=ALLTYP THEN           /* TYPE=ALL ?            @ZA07544*/ 02896000
         C     RPARM1,@CF00036                                     1124 02897000
         BNE   @RF01124                                            1124 02898000
*     RWORK5=RWORK4|PLHNRBA;        /* YES- ADD SAVED MOD BITS     1125 02899000
*                                                            @ZA07544*/ 02900000
         LR    RWORK5,RWORK4                                       1125 02901000
         O     RWORK5,PLHNRBA(,RPLH)                               1125 02902000
*   ELSE                            /* TYPE CHK OR TRN       @ZA07544*/ 02903000
*     RWORK5=RWORK4|DBMTRNID;       /* ADD TRN ID TO MOD BITS      1126 02904000
*                                                            @ZA07544*/ 02905000
         B     @RC01124                                            1126 02906000
@RF01124 LR    RWORK5,RWORK4                                       1126 02907000
         O     RWORK5,DBMTRNID(,RPLH)                              1126 02908000
*   CS(RWORK4,RWORK5,DBMBSPH->BSPHMDBT);/* SET NEW BSPHMDBT  @ZA28344*/ 02909000
@RC01124 L     @15,DBMBSPH-1(,RPLH)                                1127 02910000
         CS    RWORK4,@09,BSPHMDBT(@15)                            1127 02911000
*   GEN(BNZ  RESETID);              /* LOOP UNTILL SUCCESSFUL      1128 02912000
*                                                            @ZA07544*/ 02913000
         BNZ  RESETID                                                   02914000
*   RFY                                                            1129 02915000
*    (RWORK4,                                                      1129 02916000
*     RWORK5) UNRSTD;               /* UNLOCK WORK REGS      @ZA07544*/ 02917000
*   CALL BMEXIT;                    /* RETURN TO WRTBFR      @ZA07544*/ 02918000
         BAL   @14,BMEXIT                                          1130 02919000
*   END RSETMDBT;                   /* END PROC              @ZA07544*/ 02920000
@EL00006 DS    0H                                                  1131 02921000
@EF00006 DS    0H                                                  1131 02922000
@ER00006 BR    @14                                                 1131 02923000
*                                                                  1132 02924000
*   /*****************************************************************/ 02925000
*   /*                                                               */ 02926000
*   /* ERRORCHK - CHECK FOR ERRORS                                   */ 02927000
*   /*                                                               */ 02928000
*   /*****************************************************************/ 02929000
*                                                                  1132 02930000
*/*                                                                1132 02931000
*01 FUNCTION = TEST BUFC FOR SUCCESS OF READ.                      1132 02932000
*01 INPUT =    RBUFC IS ADDRESS OF BUFC FOR READ.                  1132 02933000
*01 OUTPUT =   RETURN CODE IS SET IN THE RPL.                        */ 02934000
*                                                                  1132 02935000
*ERRORCHK:                          /* CHECK FOR ERRORS              */ 02936000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1132 02937000
ERRORCHK DS    0H                                                  1133 02938000
*   IF RPLERREG=ZERO&               /* IF NO ERROR YET,              */ 02939000
*       (BUFCER1=ON|                /* CHECK FOR INPUT ERROR,        */ 02940000
*       BUFCER2=ON|                 /* OUTPUT ERROR, OR READ         */ 02941000
*       BUFCRRD=ON) THEN            /* UNDONE BECAUSE OF ERROR       */ 02942000
         CLI   RPLERREG(RRPL),0                                    1133 02943000
         BNE   @RF01133                                            1133 02944000
         TM    BUFCER1(RBUFC),B'00011000'                          1133 02945000
         BNZ   @RT01133                                            1133 02946000
         TM    BUFCRRD(RBUFC),B'00100000'                          1133 02947000
         BNO   @RF01133                                            1133 02948000
@RT01133 DS    0H                                                  1134 02949000
*     RPLERREG='0C'X;               /* ELSEWHERE IN BUFC CHAIN       */ 02950000
         MVI   RPLERREG(RRPL),X'0C'                                1134 02951000
*   IF BUFCXEDB=ON                  /* IF VOLUME NOT MOUNTED,        */ 02952000
*     THEN                          /* SET ERROR.                    */ 02953000
@RF01133 TM    BUFCXEDB(RBUFC),B'00000100'                         1135 02954000
         BNO   @RF01135                                            1135 02955000
*     DO;                                                          1136 02956000
*       RPLERREG='08'X;             /* SET LOGICAL ERROR             */ 02957000
         MVI   RPLERREG(RRPL),X'08'                                1137 02958000
*       RPLERRCD=RPLNOMNT;          /* SET MOUNT ERROR               */ 02959000
         MVI   RPLERRCD(RRPL),X'18'                                1138 02960000
*     END;                          /* END OF MOUNT ERROR            */ 02961000
*   END ERRORCHK;                   /* END OF READ ERROR CHECK       */ 02962000
@EL00007 DS    0H                                                  1140 02963000
@EF00007 DS    0H                                                  1140 02964000
@ER00007 BR    @14                                                 1140 02965000
*                                                                  1141 02966000
*   /*****************************************************************/ 02967000
*   /*                                                               */ 02968000
*   /* GETSPACE - GET A BUFC                                         */ 02969000
*   /*                                                               */ 02970000
*   /*****************************************************************/ 02971000
*                                                                  1141 02972000
*GETSPACE:                                                         1141 02973000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1141 02974000
*                                                                  1141 02975000
GETSPACE DS    0H                                                  1142 02976000
*/*                                                                1142 02977000
*01 FUNCTION = OBTAIN AN EMPTY BUFFER FROM THE SPECIFIED SUBPOOL.  1142 02978000
*01 INPUT =    STD VSAM REGS.                                      1142 02979000
*01 OUTPUT =   RBUFC = BUFC OF BUFFER SELECTED.                    1142 02980000
*              RPLERRCD & RPLRTNCD ARE SET IF NO BUFFER IS OBTAINED. */ 02981000
*                                                                  1142 02982000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 02983000
         IDASVR14                                                       02984000
*GSTOVER1:                          /* START OVER POS 1              */ 02985000
*   CALL GUCHNSHR;                  /* GET SEARCH RIGHTS             */ 02986000
GSTOVER1 BAL   @14,GUCHNSHR                                        1143 02987000
*GSTOVER2:                          /* START OVER POS 2              */ 02988000
*   RBUFC=BSPHUBTM;                 /* PT TO CHAIN END               */ 02989000
GSTOVER2 L     @15,AMBBUFC(,RAMB)                                  1144 02990000
         L     RBUFC,BSPHUBTM(,@15)                                1144 02991000
*   DO UNTIL(RBUFC=ZERO);           /* LOOP THRU CHAIN               */ 02992000
@DL01145 DS    0H                                                  1146 02993000
*     RFY                                                          1146 02994000
*       RWORK1 RSTD;                /* GET WORK REGISTER             */ 02995000
*     RWORK1=BUFCRSC2;              /* LOAD FLAG BYTES               */ 02996000
         L     RWORK1,BUFCRSC2(,RBUFC)                             1147 02997000
*     IF BUFCUCNT=ZERO&             /* NO USERS &                    */ 02998000
*         BUFCER1=OFF&              /* NO -                          */ 02999000
*         BUFCER2=OFF THEN          /* - ERRORS?                     */ 03000000
         CLI   BUFCUCNT(RBUFC),0                                   1148 03001000
         BNE   @RF01148                                            1148 03002000
         TM    BUFCER1(RBUFC),B'00011000'                          1148 03003000
         BNZ   @RF01148                                            1148 03004000
*       IF BUFCBSYR=ON|             /* BSY READ OR-                  */ 03005000
*           BUFCBSYW=ON THEN        /* BSY WRITE?                    */ 03006000
         TM    BUFCBSYR(RBUFC),B'00110000'                         1149 03007000
         BZ    @RF01149                                            1149 03008000
*         DO;                       /* YES DEFER                     */ 03009000
*           CALL UCHNRLSE;          /* RELE SCH RIGHTS               */ 03010000
         BAL   @14,UCHNRLSE                                        1151 03011000
*           PLHDRMSK=BSYRWMSK;      /* MASK                          */ 03012000
         MVI   PLHDRMSK(RPLH),X'30'                                1152 03013000
*           PLHDRRSC=ADDR(BUFCFLG2);/* TARGET                        */ 03014000
         LA    @15,BUFCFLG2(,RBUFC)                                1153 03015000
         ST    @15,PLHDRRSC(,RPLH)                                 1153 03016000
*           CALL BMDEFER;           /* DEFER RTN                     */ 03017000
         BAL   @14,BMDEFER                                         1154 03018000
*           GOTO GSTOVER1;          /* START OVER                    */ 03019000
         B     GSTOVER1                                            1155 03020000
*         END;                                                     1156 03021000
*       ELSE                        /* NO, CONTINUE                  */ 03022000
*         DO;                                                      1157 03023000
@RF01149 DS    0H                                                  1158 03024000
*           IF BUFCMDBT=ZERO THEN   /* NEED TO BE WRITTEN?           */ 03025000
         L     @15,BUFCMDBT(,RBUFC)                                1158 03026000
         LTR   @15,@15                                             1158 03027000
         BNZ   @RF01158                                            1158 03028000
*             DO;                   /* NO                            */ 03029000
*               RFY                                                1160 03030000
*                (RWORK2,                                          1160 03031000
*                 RWORK3,                                          1160 03032000
*                 RWORK4,                                          1160 03033000
*                 RWORK5) RSTD;     /* LOCK REGS                     */ 03034000
*               RWORK2=RWORK1&UCNTMSK2;/* FORCE UCNT = 0             */ 03035000
         LR    RWORK2,RWORK1                                       1161 03036000
         N     RWORK2,UCNTMSK2                                     1161 03037000
*               RWORK3=BUFCAMB;     /* AMB                           */ 03038000
         L     RWORK3,BUFCAMB(,RBUFC)                              1162 03039000
*               RWORK5=RAMB;        /* NEW AMB = RAMB                */ 03040000
         LR    RWORK5,RAMB                                         1163 03041000
*               RWORK4=(RWORK2&UCNTMSK1)|UCNTMSK;/* RESET FLGS, UCNT    03042000
*                                      = 1                           */ 03043000
         LR    RWORK4,RWORK2                                       1164 03044000
         N     RWORK4,UCNTMSK1                                     1164 03045000
         O     RWORK4,UCNTMSK                                      1164 03046000
*               CDS(RWORK2,RWORK4,BUFCRSC1);/* SWAP IF NO CHANGE     */ 03047000
         CDS   RWORK2,RWORK4,BUFCRSC1(RBUFC)                       1165 03048000
*               GEN(BNZ GSTOVER2);  /* START OVER IF CHANGE          */ 03049000
         BNZ GSTOVER2                                                   03050000
*               RFY                                                1167 03051000
*                (RWORK2,                                          1167 03052000
*                 RWORK3,                                          1167 03053000
*                 RWORK4,                                          1167 03054000
*                 RWORK5) UNRSTD;   /* FREE REGS                     */ 03055000
*               IF RPLERREG='00'X THEN/* IF NO ERROR         @ZA07549*/ 03056000
         CLI   RPLERREG(RRPL),0                                    1168 03057000
         BNE   @RF01168                                            1168 03058000
*                 DO;               /* SET FDBK INFO         @ZA07549*/ 03059000
*                   IF BUFCUCUP^=ZERO&/* NOT LAST BFR &              */ 03060000
*                       BUFCUCUP->BUFCMDBT^=ZERO THEN/* NEEDS WRITTEN*/ 03061000
         SLR   @15,@15                                             1170 03062000
         L     @09,BUFCUCUP(,RBUFC)                                1170 03063000
         CR    @09,@15                                             1170 03064000
         BE    @RF01170                                            1170 03065000
         CL    @15,BUFCMDBT(,@09)                                  1170 03066000
         BE    @RF01170                                            1170 03067000
*                     RPLERRCD=RPLWTBFR;/* YES, IND SO               */ 03068000
         MVI   RPLERRCD(RRPL),X'0C'                                1171 03069000
*                   ELSE            /* NO                            */ 03070000
*                     IF RPLERRCD=RPLWTBFR THEN/* CLR IF OLD WTBFR CD*/ 03071000
         B     @RC01170                                            1172 03072000
@RF01170 CLI   RPLERRCD(RRPL),12                                   1172 03073000
         BNE   @RF01172                                            1172 03074000
*                       RPLERRCD=ZERO;/* CLEAR                       */ 03075000
         MVI   RPLERRCD(RRPL),X'00'                                1173 03076000
*                 END;              /* END OF NON-ERR        @ZA07549*/ 03077000
@RF01172 DS    0H                                                  1174 03078000
@RC01170 DS    0H                                                  1175 03079000
*               CALL UCHNRLSE;      /* REL SCH RIGHTS                */ 03080000
@RF01168 BAL   @14,UCHNRLSE                                        1175 03081000
*               CALL PUTBTOP;       /* PLACE BUFC AT TOP             */ 03082000
         BAL   @14,PUTBTOP                                         1176 03083000
*               CALL BMEXIT;        /* EXIT                          */ 03084000
         BAL   @14,BMEXIT                                          1177 03085000
*             END;                                                 1178 03086000
*           ELSE                    /* YES, SET TO WRITE             */ 03087000
*             DO;                                                  1179 03088000
         B     @RC01158                                            1179 03089000
@RF01158 DS    0H                                                  1180 03090000
*               RFY                                                1180 03091000
*                (RWORK2) RSTD;     /* LOCK REGS                     */ 03092000
*               RWORK2=RWORK1|BSYWMSK;/* NEW. BSYW = ON              */ 03093000
         LR    RWORK2,RWORK1                                       1181 03094000
         O     RWORK2,BSYWMSK                                      1181 03095000
*               CS(RWORK1,RWORK2,BUFCRSC2);/* SWAP IF NO CHANGE      */ 03096000
         CS    RWORK1,@06,BUFCRSC2(RBUFC)                          1182 03097000
*               GEN(BNZ GSTOVER2);  /* START OVER IF INTERRUPT       */ 03098000
         BNZ GSTOVER2                                                   03099000
*               CALL UCHNRLSE;      /* RELE SCH RIGHTS               */ 03100000
         BAL   @14,UCHNRLSE                                        1184 03101000
*               DBMAMB=RAMB;        /* SAVE RAMB                     */ 03102000
         STCM  RAMB,7,DBMAMB(RPLH)                                 1185 03103000
*               RAMB=BUFCAMB;       /* PICK UP WRITE AMB             */ 03104000
         L     RAMB,BUFCAMB(,RBUFC)                                1186 03105000
*               CALL WRBFR;         /* WRITE IT                      */ 03106000
         BAL   @14,WRBFR                                           1187 03107000
*               RAMB=DBMAMB;        /* RESTORE RAMB                  */ 03108000
         L     RAMB,DBMAMB-1(,RPLH)                                1188 03109000
         LA    RAMB,0(,RAMB)                                       1188 03110000
*               BUFCBSYW=OFF;       /* RESET BSY WRITE               */ 03111000
         NI    BUFCBSYW(RBUFC),B'11101111'                         1189 03112000
*GSPLOOP2:                                                         1190 03113000
*               RWORK1=BSPHNUIW;    /* OLD CNT                       */ 03114000
GSPLOOP2 L     @15,AMBBUFC(,RAMB)                                  1190 03115000
         L     RWORK1,BSPHNUIW(,@15)                               1190 03116000
*               RWORK2=RWORK1+ONE;  /* INCR                          */ 03117000
         LA    RWORK2,1                                            1191 03118000
         ALR   RWORK2,RWORK1                                       1191 03119000
*               CS(RWORK1,RWORK2,BSPHNUIW);/* SWAP IF NO CHANGE      */ 03120000
         CS    RWORK1,@06,BSPHNUIW(@15)                            1192 03121000
*               GEN(BNZ GSPLOOP2);  /* LOOP TILL SUCCESSFUL          */ 03122000
         BNZ GSPLOOP2                                                   03123000
*               IF RPLRTNCD^=ZERO THEN/* IF ANY ERROR,               */ 03124000
         CLI   RPLRTNCD(RRPL),0                                    1194 03125000
         BE    @RF01194                                            1194 03126000
*                 CALL BMEXIT;      /* RETURN TO CALLER.             */ 03127000
         BAL   @14,BMEXIT                                          1195 03128000
*               GOTO GSTOVER1;      /* START OVER                    */ 03129000
         B     GSTOVER1                                            1196 03130000
*               RFY                                                1197 03131000
*                (RWORK1,                                          1197 03132000
*                 RWORK2) UNRSTD;   /* FREE REGS                     */ 03133000
*             END;                                                 1198 03134000
*         END;                                                     1199 03135000
*     ELSE                          /* NO, --                        */ 03136000
*       RBUFC=BUFCUCUP;             /* -- PT TO NXT                  */ 03137000
         B     @RC01148                                            1200 03138000
@RF01148 L     RBUFC,BUFCUCUP(,RBUFC)                              1200 03139000
*   END;                            /* END DO UNTIL                  */ 03140000
*                                                                  1201 03141000
@RC01148 DS    0H                                                  1201 03142000
@DE01145 LTR   RBUFC,RBUFC                                         1201 03143000
         BNZ   @DL01145                                            1201 03144000
*   /*****************************************************************/ 03145000
*   /*                                                               */ 03146000
*   /* NO BUFFER FOUND, SET ERR CODES & RETURN                       */ 03147000
*   /*                                                               */ 03148000
*   /*****************************************************************/ 03149000
*                                                                  1202 03150000
*   CALL UCHNRLSE;                  /* RELE SCH RIGHTS               */ 03151000
         BAL   @14,UCHNRLSE                                        1202 03152000
*   RPLERRCD=RPLNOBFR;              /* IND NO BFR                    */ 03153000
         MVI   RPLERRCD(RRPL),X'98'                                1203 03154000
*   RPLRTNCD='08'X;                 /* IND LOGICAL ERR               */ 03155000
         MVI   RPLRTNCD(RRPL),X'08'                                1204 03156000
*   CALL BMEXIT;                    /* RESTORE 14 & EXIT             */ 03157000
         BAL   @14,BMEXIT                                          1205 03158000
*   END GETSPACE;                                                  1206 03159000
@EL00008 DS    0H                                                  1206 03160000
@EF00008 DS    0H                                                  1206 03161000
@ER00008 BR    @14                                                 1206 03162000
*                                                                  1207 03163000
*   /*****************************************************************/ 03164000
*   /*                                                               */ 03165000
*   /* PUTBTOP - PLACE A BUFC ON TOP OF USE CHAIN                    */ 03166000
*   /*                                                               */ 03167000
*   /*****************************************************************/ 03168000
*                                                                  1207 03169000
*PUTBTOP:                                                          1207 03170000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* PUT AT TOP                    */ 03171000
PUTBTOP  DS    0H                                                  1208 03172000
*/*                                                                1208 03173000
*01 FUNCTION = PLACE BUFC POINTED TO BY RBUFC AT THE TOP OF        1208 03174000
*              THE USE CHAIN.                                      1208 03175000
*01 INPUT =    RBUFC -  THE BUFC TO BE PLACED AT THE TOP OF THE CHAIN.  03176000
*              RAMB - AMB FOR THE REQUESTING DATA SET.             1208 03177000
*              RPLH - PLH FOR THE REQUEST.                         1208 03178000
*01 OUTPUT =   THE BUFC IS PUT AT THE TOP OF THE CHAIN.              */ 03179000
*                                                                  1208 03180000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 03181000
         IDASVR14                                                       03182000
*PUTBGO:                                                           1209 03183000
*   IF RBUFC=BSPHUTOP THEN          /* ALREADY AT TOP ?              */ 03184000
PUTBGO   L     @15,AMBBUFC(,RAMB)                                  1209 03185000
         C     RBUFC,BSPHUTOP(,@15)                                1209 03186000
         BNE   @RF01209                                            1209 03187000
*     CALL BMEXIT;                  /* YES EXIT                      */ 03188000
         BAL   @14,BMEXIT                                          1210 03189000
*   RFY                                                            1211 03190000
*    (RWORK1,                                                      1211 03191000
*     RWORK2) RSTD;                 /* CS REGS                       */ 03192000
@RF01209 DS    0H                                                  1212 03193000
*   RWORK1=ZERO;                    /* BSPHPCUC & BSPHPSUC=0         */ 03194000
         SLR   RWORK1,RWORK1                                       1212 03195000
*   RWORK2=UCHNLOCK;                /* BSPHCUC ON                    */ 03196000
         L     RWORK2,UCHNLOCK                                     1213 03197000
*   CS(RWORK1,RWORK2,BSPHCSRC);     /* C & S                         */ 03198000
         L     @07,AMBBUFC(,RAMB)                                  1214 03199000
         CS    RWORK1,@06,BSPHCSRC(@07)                            1214 03200000
*   GEN(BNZ DEFER);                 /* DEFER IF UNSUCCESSFUL         */ 03201000
         BNZ DEFER                                                      03202000
*   IF BUFCUCUP^=ZERO THEN          /* RETEST TOP OF         @OZ05537*/ 03203000
         L     @15,BUFCUCUP(,RBUFC)                                1216 03204000
         LTR   @15,@15                                             1216 03205000
         BZ    @RF01216                                            1216 03206000
*     DO;                           /* USE CHAIN.            @OZ05537*/ 03207000
*                                                                  1217 03208000
*       /*************************************************************/ 03209000
*       /*                                                           */ 03210000
*       /* PLACE BUFC IN RBUFC ON TOP OF THE USE CHAIN               */ 03211000
*       /*                                                           */ 03212000
*       /*************************************************************/ 03213000
*                                                                  1218 03214000
*       BUFCUCUP->BUFCUCDN=BUFCUCDN;/* NEW DN CHN                    */ 03215000
         L     @07,BUFCUCDN(,RBUFC)                                1218 03216000
         ST    @07,BUFCUCDN(,@15)                                  1218 03217000
*       IF RBUFC=BSPHUBTM THEN      /* BOTTOM OF CHAIN ?             */ 03218000
         L     @07,AMBBUFC(,RAMB)                                  1219 03219000
         C     RBUFC,BSPHUBTM(,@07)                                1219 03220000
         BNE   @RF01219                                            1219 03221000
*         BSPHUBTM=BUFCUCUP;        /* YES, SET NEW BTM              */ 03222000
         ST    @15,BSPHUBTM(,@07)                                  1220 03223000
*       ELSE                        /* NO, --                        */ 03224000
*         BUFCUCDN->BUFCUCUP=BUFCUCUP;/* -- SET DN CHAIN             */ 03225000
         B     @RC01219                                            1221 03226000
@RF01219 L     @15,BUFCUCDN(,RBUFC)                                1221 03227000
         L     @07,BUFCUCUP(,RBUFC)                                1221 03228000
         ST    @07,BUFCUCUP(,@15)                                  1221 03229000
*       BUFCUCUP=ZERO;              /* END OF CHAIN                  */ 03230000
@RC01219 SLR   @15,@15                                             1222 03231000
         ST    @15,BUFCUCUP(,RBUFC)                                1222 03232000
*       BUFCUCDN=BSPHUTOP;          /* OLD TOP                       */ 03233000
         L     @15,AMBBUFC(,RAMB)                                  1223 03234000
         L     @07,BSPHUTOP(,@15)                                  1223 03235000
         ST    @07,BUFCUCDN(,RBUFC)                                1223 03236000
*       BSPHUTOP->BUFCUCUP=RBUFC;   /* UP CHAIN TO NEW TOP           */ 03237000
         ST    RBUFC,BUFCUCUP(,@07)                                1224 03238000
*       BSPHUTOP=RBUFC;             /* NEW TOP                       */ 03239000
         ST    RBUFC,BSPHUTOP(,@15)                                1225 03240000
*     END;                          /* END UC CHANGE         @OZ05537*/ 03241000
*   BSPHPCUC=OFF;                   /* RLSE CTRL OF USE CHN          */ 03242000
@RF01216 L     @15,AMBBUFC(,RAMB)                                  1227 03243000
         NI    BSPHPCUC(@15),B'10111111'                           1227 03244000
*   CALL BMEXIT;                    /* EXIT TO CALLER                */ 03245000
*                                                                  1228 03246000
         BAL   @14,BMEXIT                                          1228 03247000
*   /*****************************************************************/ 03248000
*   /*                                                               */ 03249000
*   /* REQUEST WILL BE DEFERRED AS EITHER THE USE CHAIN IS BEING     */ 03250000
*   /* MODIFIED OR THE NO. PLH'S SEARCHING THE CHAIN IS NOT ZERO.    */ 03251000
*   /* DETERMINE THE REASON AND DEFER FOR THE APPROPRIATE REASON.    */ 03252000
*   /*                                                               */ 03253000
*   /*****************************************************************/ 03254000
*                                                                  1229 03255000
*DEFER:                                                            1229 03256000
*   IF BSPHPSUC=ZERO THEN           /* SEARCH CNT = 0?               */ 03257000
DEFER    L     @15,AMBBUFC(,RAMB)                                  1229 03258000
         LH    @07,BSPHPSUC(,@15)                                  1229 03259000
         LTR   @07,@07                                             1229 03260000
         BNZ   @RF01229                                            1229 03261000
*     DO;                           /* YES, DEFER ON EXCL CTL        */ 03262000
*       PLHDRRSC=ADDR(BSPHFLG2);    /* TARGET                        */ 03263000
         LA    @15,BSPHFLG2(,@15)                                  1231 03264000
         ST    @15,PLHDRRSC(,RPLH)                                 1231 03265000
*       PLHDRMSK=PCUCMSK;           /* MASK                          */ 03266000
         MVI   PLHDRMSK(RPLH),X'40'                                1232 03267000
*     END;                                                         1233 03268000
*   ELSE                            /* DEFER ON SCH CNT              */ 03269000
*     DO;                                                          1234 03270000
         B     @RC01229                                            1234 03271000
@RF01229 DS    0H                                                  1235 03272000
*       PLHDRRSC=(ADDR(BSPHPSUC)+ONE);/* TARGET                      */ 03273000
         L     @15,AMBBUFC(,RAMB)                                  1235 03274000
         LA    @15,BSPHPSUC(,@15)                                  1235 03275000
         AL    @15,@CF00047                                        1235 03276000
         ST    @15,PLHDRRSC(,RPLH)                                 1235 03277000
*       PLHDRMSK=ZROMSK;            /* MASK                          */ 03278000
         MVC   PLHDRMSK(1,RPLH),ZROMSK                             1236 03279000
*     END;                                                         1237 03280000
*   CALL BMDEFER;                   /* DEFER RTN                     */ 03281000
@RC01229 BAL   @14,BMDEFER                                         1238 03282000
*   GOTO PUTBGO;                    /* START OVER                    */ 03283000
         B     PUTBGO                                              1239 03284000
*   END PUTBTOP;                    /* NO MORE                       */ 03285000
*                                                                  1241 03286000
*   /*****************************************************************/ 03287000
*   /*                                                               */ 03288000
*   /* GUCHNSHR - GET BSPH USE CHAIN SEARCH RIGHTS                   */ 03289000
*   /*                                                               */ 03290000
*   /*****************************************************************/ 03291000
*                                                                  1241 03292000
*GUCHNSHR:                                                         1241 03293000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1241 03294000
*                                                                  1241 03295000
GUCHNSHR DS    0H                                                  1242 03296000
*/*                                                                1242 03297000
*01 FUNCTION = GET SEARCH RIGHTS TO BSPH USE CHAIN.                1242 03298000
*01 INPUT =    STD VSAM REGS.                                      1242 03299000
*01 OUTPUT =   SEARCH RIGHTS ON USE CHAIN.                           */ 03300000
*                                                                  1242 03301000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 03302000
         IDASVR14                                                       03303000
*   RFY                                                            1243 03304000
*    (RWORK1,                                                      1243 03305000
*     RWORK2) RSTD;                 /* GET REGS                      */ 03306000
*GUCLP1:                                                           1244 03307000
*   RWORK1=BSPHCSRC;                /* LOAD CS REG                   */ 03308000
GUCLP1   L     @15,AMBBUFC(,RAMB)                                  1244 03309000
         L     RWORK1,BSPHCSRC(,@15)                               1244 03310000
*   IF BSPHPCUC=ON THEN             /* EXCL CTL?                     */ 03311000
         TM    BSPHPCUC(@15),B'01000000'                           1245 03312000
         BNO   @RF01245                                            1245 03313000
*     DO;                           /* YES, DEFER                    */ 03314000
*       PLHDRRSC=ADDR(BSPHFLG2);    /* TARGET                        */ 03315000
         LA    @15,BSPHFLG2(,@15)                                  1247 03316000
         ST    @15,PLHDRRSC(,RPLH)                                 1247 03317000
*       PLHDRMSK=PCUCMSK;           /* MASK                          */ 03318000
         MVI   PLHDRMSK(RPLH),X'40'                                1248 03319000
*       CALL BMDEFER;               /* DEFER RTN                     */ 03320000
         BAL   @14,BMDEFER                                         1249 03321000
*       GOTO GUCLP1;                /* TRY AGAIN                     */ 03322000
         B     GUCLP1                                              1250 03323000
*     END;                                                         1251 03324000
*   RWORK2=RWORK1+ONE;              /* NEW                           */ 03325000
@RF01245 LA    RWORK2,1                                            1252 03326000
         ALR   RWORK2,RWORK1                                       1252 03327000
*   CS(RWORK1,RWORK2,BSPHCSRC);     /* SWAP                          */ 03328000
         L     @07,AMBBUFC(,RAMB)                                  1253 03329000
         CS    RWORK1,@06,BSPHCSRC(@07)                            1253 03330000
*   GEN(BNZ GUCLP1);                /* SOMETHING CHANGED             */ 03331000
         BNZ GUCLP1                                                     03332000
*   PLHRESR1=ADDR(BSPHCSRC);        /* IND PLH SEARCHING CHN         */ 03333000
         L     @15,AMBBUFC(,RAMB)                                  1255 03334000
         LA    @15,BSPHCSRC(,@15)                                  1255 03335000
         ST    @15,PLHRESR1(,RPLH)                                 1255 03336000
*   CALL BMEXIT;                    /* EXIT TO CALLER                */ 03337000
         BAL   @14,BMEXIT                                          1256 03338000
*   END GUCHNSHR;                                                  1257 03339000
@EL00010 DS    0H                                                  1257 03340000
@EF00010 DS    0H                                                  1257 03341000
@ER00010 BR    @14                                                 1257 03342000
*                                                                  1258 03343000
*   /*****************************************************************/ 03344000
*   /*                                                               */ 03345000
*   /* BMDEFER - BUFFER MGR INTERFACE TO IDADRQ                      */ 03346000
*   /*                                                               */ 03347000
*   /*****************************************************************/ 03348000
*                                                                  1258 03349000
*BMDEFER:                                                          1258 03350000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1258 03351000
*                                                                  1258 03352000
BMDEFER  DS    0H                                                  1259 03353000
*/*                                                                1259 03354000
*01 FUNCTION = CALL IDADRQ TO DEFER REQUEST PER PLHDRRSC & PLHDRMSK.    03355000
*01 INPUT =    STD VSAM REGS.                                      1259 03356000
*              PLHDRRSC & PLHDRMSK ARS SET TO APPROPRIATE VALUES.  1259 03357000
*01 OUTPUT =   NONE.                                                 */ 03358000
*                                                                  1259 03359000
*   GEN(IDASVR14);                  /* SAVE RETURN REG               */ 03360000
         IDASVR14                                                       03361000
*   RFY                                                            1260 03362000
*     RWORK0 RSTD;                  /* LOCK REG                      */ 03363000
*   RWORK0=DFRMSK;                  /* IND DEFER VIA MASK            */ 03364000
         LA    RWORK0,16                                           1261 03365000
*I14:                                                              1262 03366000
*   DO;                             /* IDACALL(IDADRQ)               */ 03367000
I14      DS    0H                                                  1263 03368000
*     CALL IDADRQ;                  /* EXIT TO IDADRQ                */ 03369000
         L     @15,@CV00152                                        1263 03370000
         BALR  @14,@15                                             1263 03371000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 03372000
         BALR @11,0                                                     03373000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 03374000
         USING *,@11                                                    03375000
*     GEN(USING *+4095,@10);        /* ESTABLISH SECOND BASE         */ 03376000
         USING *+4095,@10                                               03377000
*     GEN(LA    @10,4095(@11));     /* LOAD SECOND BASE              */ 03378000
         LA    @10,4095(@11)                                            03379000
*     GEN(L     @10,=A(@PSTART+4095));/* RELOAD SECOND BASE          */ 03380000
         L     @10,=A(@PSTART+4095)                                     03381000
*     GEN(USING @PSTART+4095,@10);  /* ESTABLISH SECOND BASE         */ 03382000
         USING @PSTART+4095,@10                                         03383000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 03384000
         L     @11,=A(@PSTART)                                          03385000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 03386000
         USING @PSTART,@11                                              03387000
*   END I14;                        /* DEFER ENTRY PT                */ 03388000
*   CALL BMEXIT;                    /* RESTORE R14 & EXIT            */ 03389000
         BAL   @14,BMEXIT                                          1273 03390000
*   END BMDEFER;                                                   1274 03391000
@EL00011 DS    0H                                                  1274 03392000
@EF00011 DS    0H                                                  1274 03393000
@ER00011 BR    @14                                                 1274 03394000
*                                                                  1275 03395000
*   /*****************************************************************/ 03396000
*   /*                                                               */ 03397000
*   /* PURGEBFR--PURGE BUFFER FROM THE POOL                  @ZA07544*/ 03398000
*   /*                                                               */ 03399000
*   /*****************************************************************/ 03400000
*                                                                  1275 03401000
*PURGEBFR:                                                         1275 03402000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1275 03403000
*                                                                  1275 03404000
PURGEBFR DS    0H                                                  1276 03405000
*/*                                                                1276 03406000
*01 FUNCTION = REMOVE A BUFFER FROM THE POOL.                      1276 03407000
*01 INPUT =    STD VSAM REGS.                                      1276 03408000
*01 OUTPUT =   BUFFER INVALIDATED AND WRITTEN IF MODIFIED.   @ZA07544*/ 03409000
*                                                                  1276 03410000
*   RFY                                                            1276 03411000
*     R14 RSTD;                     /* SAVE REG 14           @ZA07544*/ 03412000
*   IF BUFCMW=ON THEN               /* MUST WRITE?           @ZA07544*/ 03413000
         TM    BUFCMW(RBUFC),B'10000000'                           1277 03414000
         BNO   @RF01277                                            1277 03415000
*     DO;                           /* YES, WRITE IT         @ZA07544*/ 03416000
*       GEN(IDASVR14);              /* SAVE REG 14           @ZA07544*/ 03417000
         IDASVR14                                                       03418000
*       BUFCBSYW=ON;                /* SET BUSY WRITE        @ZA07544*/ 03419000
         OI    BUFCBSYW(RBUFC),B'00010000'                         1280 03420000
*       CALL WRBFR;                 /* WRITE BFR             @ZA07544*/ 03421000
         BAL   @14,WRBFR                                           1281 03422000
*       BUFCBSYW=OFF;               /* BUSY WRITE OFF        @ZA07544*/ 03423000
         NI    BUFCBSYW(RBUFC),B'11101111'                         1282 03424000
*       RFY                                                        1283 03425000
*        (RWORK1,                                                  1283 03426000
*         RWORK2) RSTD;             /* GET WORK REGS         @ZA07544*/ 03427000
*FREELOOP:                          /*                       @ZA07544*/ 03428000
*       RWORK1=BSPHUIW;             /* OLD CNT               @ZA07544*/ 03429000
FREELOOP L     @15,AMBBUFC(,RAMB)                                  1284 03430000
         L     RWORK1,BSPHUIW(,@15)                                1284 03431000
*       RWORK2=RWORK1+ONE;          /* INCR                  @ZA07544*/ 03432000
         LA    RWORK2,1                                            1285 03433000
         ALR   RWORK2,RWORK1                                       1285 03434000
*       CS(RWORK1,RWORK2,BSPHUIW);  /* BUMP COUNT            @ZA07544*/ 03435000
         CS    RWORK1,@06,BSPHUIW(@15)                             1286 03436000
*       GEN(BNZ FREELOOP);          /* LOOP TILL OK          @ZA07544*/ 03437000
         BNZ FREELOOP                                                   03438000
*       RFY                                                        1288 03439000
*        (RWORK1,                                                  1288 03440000
*         RWORK2) UNRSTD;           /* FREE REGS             @ZA07544*/ 03441000
*       GEN(IDARST14);              /* RESTORE REG 14        @ZA07544*/ 03442000
         IDARST14                                                       03443000
*     END;                          /* END OF WRBFR          @ZA07544*/ 03444000
*   BUFCVAL=OFF;                    /* MAKE INVALID          @ZA07544*/ 03445000
@RF01277 DS    0H                                                  1292 03446000
*   BUFCSEG=OFF;                    /* NOT SPANNED           @ZA07544*/ 03447000
         NI    BUFCVAL(RBUFC),B'10111011'                          1292 03448000
*   RFY                                                            1293 03449000
*     R14 UNRSTD;                   /* RELEASE REG14         @ZA07544*/ 03450000
*   END PURGEBFR;                   /* END PURGEBFR          @ZA07544*/ 03451000
@EL00012 DS    0H                                                  1294 03452000
@EF00012 DS    0H                                                  1294 03453000
@ER00012 BR    @14                                                 1294 03454000
*                                                                  1295 03455000
*   /*****************************************************************/ 03456000
*   /*                                                               */ 03457000
*   /* BMEXIT - BUFFER MGR EXIT ROUTINE                              */ 03458000
*   /*                                                               */ 03459000
*   /*****************************************************************/ 03460000
*                                                                  1295 03461000
*BMEXIT:                                                           1295 03462000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1295 03463000
*                                                                  1295 03464000
BMEXIT   DS    0H                                                  1296 03465000
*/*                                                                1296 03466000
*01 FUNCTION = RESTORE R14 AND EXIT VIA IT.                        1296 03467000
*01 INPUT =    STD VSAM REGS.                                      1296 03468000
*01 OUTPUT =   R14 RESTORED FROM PLHRET1.                            */ 03469000
*                                                                  1296 03470000
*   GEN REFS(HWORD4)(IDARST14);     /* RESTORE RETURN REG            */ 03471000
         IDARST14                                                       03472000
*   END BMEXIT;                     /* RETURN VIA R14                */ 03473000
@EL00013 DS    0H                                                  1297 03474000
@EF00013 DS    0H                                                  1297 03475000
@ER00013 BR    @14                                                 1297 03476000
*                                                                  1298 03477000
*   /*****************************************************************/ 03478000
*   /*                                                               */ 03479000
*   /* INCRUCNT - INCREMENT BUFC USE COUNT                           */ 03480000
*   /*                                                               */ 03481000
*   /*****************************************************************/ 03482000
*                                                                  1298 03483000
*INCRUCNT:                                                         1298 03484000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1298 03485000
*                                                                  1298 03486000
INCRUCNT DS    0H                                                  1299 03487000
*/*                                                                1299 03488000
*01 FUNCTION = INCREMENT BUFC USE COUNT.                           1299 03489000
*01 INPUT = STD VSAM REGS                                          1299 03490000
*01 OUTPUT = BUFCUCNT IS INCREMENTED BY ONE.                         */ 03491000
*                                                                  1299 03492000
*   RFY                                                            1299 03493000
*    (RWORK1,                                                      1299 03494000
*     RWORK2) RSTD;                 /* LOCK REGS                     */ 03495000
*CSLOOP5:                                                          1300 03496000
*   RWORK1=BUFCRSC2;                /* PICK UP OLD                   */ 03497000
CSLOOP5  L     RWORK1,BUFCRSC2(,RBUFC)                             1300 03498000
*   RWORK2=RWORK1+UCNTMSK;          /* NEW                           */ 03499000
         LR    RWORK2,RWORK1                                       1301 03500000
         AL    RWORK2,UCNTMSK                                      1301 03501000
*   CS(RWORK1,RWORK2,BUFCRSC2);     /* MODIFY                        */ 03502000
         CS    RWORK1,@06,BUFCRSC2(RBUFC)                          1302 03503000
*   GEN(BNZ   CSLOOP5);             /* LOOP TILL SUCCESSFUL          */ 03504000
         BNZ   CSLOOP5                                                  03505000
*   END INCRUCNT;                                                  1304 03506000
@EL00014 DS    0H                                                  1304 03507000
@EF00014 DS    0H                                                  1304 03508000
@ER00014 BR    @14                                                 1304 03509000
*                                                                  1305 03510000
*   /*****************************************************************/ 03511000
*   /*                                                               */ 03512000
*   /* DECRUCNT - DECREMENT BUFC USE COUNT                           */ 03513000
*   /*                                                               */ 03514000
*   /*****************************************************************/ 03515000
*                                                                  1305 03516000
*DECRUCNT:                                                         1305 03517000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1305 03518000
*                                                                  1305 03519000
DECRUCNT DS    0H                                                  1306 03520000
*/*                                                                1306 03521000
*01 FUNCTION = DECREMENT BUFCUCNT BY ONE AND, IF SHR OPTION 4      1306 03522000
*              AND SINGLE USER, OR BUFCVAL IS OFF, SET THE         1306 03523000
*              BUFC TO EMPTY STATUS.                               1306 03524000
*01 INPUT =    STD VSAM REGS.                                      1306 03525000
*01 OUTPUT =   BUFCUCNT IS DECREMENTED BY ONE AND BUFC IS SET TO   1306 03526000
*              EMPTY STATUS IF NEEDED.                               */ 03527000
*                                                                  1306 03528000
*   RFY                                                            1306 03529000
*    (RWORK2,                                                      1306 03530000
*     RWORK3,                                                      1306 03531000
*     RWORK4,                                                      1306 03532000
*     RWORK5) RSTD;                 /* LOCK REGS                     */ 03533000
*CSLOOP6:                                                          1307 03534000
*   LM(RWORK2,RWORK3,BUFCRSC1);     /* OLD                           */ 03535000
CSLOOP6  LM    RWORK2,RWORK3,BUFCRSC1(RBUFC)                       1307 03536000
*   RWORK4=RWORK2-UCNTMSK;          /* NEW                           */ 03537000
         LR    RWORK4,RWORK2                                       1308 03538000
         SL    RWORK4,UCNTMSK                                      1308 03539000
*   CS(RWORK2,RWORK4,BUFCRSC2);     /* MODIFY                        */ 03540000
         CS    RWORK2,@08,BUFCRSC2(RBUFC)                          1309 03541000
*   GEN(BNZ   CSLOOP6);             /* LOOP TILL SUCCESSFUL          */ 03542000
         BNZ   CSLOOP6                                                  03543000
*   IF(AMBINBUF=ON&                 /* SHR 4 AND                     */ 03544000
*       (AMBTYPE^=AMBINDEX|         /* NON-INDEX OR                  */ 03545000
*       AMBSCRA=ON|                 /* A CATALOG                     */ 03546000
*       AMBUCRA=ON|                 /*                               */ 03547000
*       AMBCAT=ON|                  /*                               */ 03548000
*       BUFCIDXL<=ONE)&             /* SEQ SET LEVEL?                */ 03549000
*       BUFCUCNT=ZERO)|             /* & SINGLE USER?                */ 03550000
*       BUFCVAL=OFF THEN            /* OR INVALID RBA?               */ 03551000
         TM    AMBINBUF(RAMB),B'00000001'                          1311 03552000
         BNO   @GL00047                                            1311 03553000
         TM    AMBTYPE(RAMB),B'01000000'                           1311 03554000
         BNO   @GL00048                                            1311 03555000
         TM    AMBSCRA(RAMB),B'00011100'                           1311 03556000
         BNZ   @GL00048                                            1311 03557000
         CLI   BUFCIDXL(RBUFC),1                                   1311 03558000
         BH    @GL00047                                            1311 03559000
@GL00048 CLI   BUFCUCNT(RBUFC),0                                   1311 03560000
         BE    @RT01311                                            1311 03561000
@GL00047 TM    BUFCVAL(RBUFC),B'00000100'                          1311 03562000
         BNZ   @RF01311                                            1311 03563000
@RT01311 DS    0H                                                  1312 03564000
*     DO;                           /* YES, SET EMPTY                */ 03565000
*       RWORK5=RWORK3;              /* OLD AMB PTR                   */ 03566000
         LR    RWORK5,RWORK3                                       1313 03567000
*       RWORK2=RWORK4&VALMSK;       /* BUFCVAL = OFF                 */ 03568000
         LR    RWORK2,RWORK4                                       1314 03569000
         N     RWORK2,VALMSK                                       1314 03570000
*       CDS(RWORK4,RWORK2,BUFCRSC1);/* SWAP IF NOT CHANGED           */ 03571000
         CDS   RWORK4,RWORK2,BUFCRSC1(RBUFC)                       1315 03572000
*     END;                                                         1316 03573000
*   RFY                                                            1317 03574000
*    (RWORK2,                                                      1317 03575000
*     RWORK3,                                                      1317 03576000
*     RWORK4,                                                      1317 03577000
*     RWORK5) UNRSTD;               /* DROP REGS                     */ 03578000
*   END DECRUCNT;                                                  1318 03579000
@EL00015 DS    0H                                                  1318 03580000
@EF00015 DS    0H                                                  1318 03581000
@ER00015 BR    @14                                                 1318 03582000
*                                                                  1319 03583000
*   /*****************************************************************/ 03584000
*   /*                                                               */ 03585000
*   /* UCHNRLSE - REAEASE SEARCH RIGHTS ON BSPH USE CHAIN            */ 03586000
*   /*                                                               */ 03587000
*   /*****************************************************************/ 03588000
*                                                                  1319 03589000
*UCHNRLSE:                                                         1319 03590000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1319 03591000
*                                                                  1319 03592000
UCHNRLSE DS    0H                                                  1320 03593000
*/*                                                                1320 03594000
*01 FUNCTION = RELEASE SEARCH RIGHTS ON BUFFER USE CHAIN.          1320 03595000
*01 INPUT =    STD VSAM REGS.                                      1320 03596000
*01 OUTPUT =   SEARCH RIGHTS RELEASED.                               */ 03597000
*                                                                  1320 03598000
*   RFY                                                            1320 03599000
*    (RWORK1,                                                      1320 03600000
*     RWORK2) RSTD;                 /* LOCK REGS                     */ 03601000
*   RWORK1=BSPHCSRC;                /* OLD                           */ 03602000
         L     @07,AMBBUFC(,RAMB)                                  1321 03603000
         L     RWORK1,BSPHCSRC(,@07)                               1321 03604000
*   RWORK2=RWORK1-ONE;              /* NEW                           */ 03605000
         LR    RWORK2,RWORK1                                       1322 03606000
         BCTR  RWORK2,0                                            1322 03607000
*   CS(RWORK1,RWORK2,BSPHCSRC);     /* SWAP?                         */ 03608000
         CS    RWORK1,@06,BSPHCSRC(@07)                            1323 03609000
*   GEN(BNZ UCHNRLSE);              /* LOOP TILL SUCCESSFUL          */ 03610000
         BNZ UCHNRLSE                                                   03611000
*   PLHRESR1=ZERO;                  /* IND NOT USING RSC             */ 03612000
         SLR   @07,@07                                             1325 03613000
         ST    @07,PLHRESR1(,RPLH)                                 1325 03614000
*   RFY                                                            1326 03615000
*    (RWORK1,                                                      1326 03616000
*     RWORK2) UNRSTD;               /* DROP REGS                     */ 03617000
*   END UCHNRLSE;                                                  1327 03618000
@EL00016 DS    0H                                                  1327 03619000
@EF00016 DS    0H                                                  1327 03620000
@ER00016 BR    @14                                                 1327 03621000
@PB00016 DS    0H                                                  1328 03622000
*   GEN(IDAPATCH);                  /* DEFINE PATCH                  */ 03623000
         IDAPATCH                                                       03624000
*   END IDA019RY                    /* END BFR MGR                   */ 03625000
*                                                                  1329 03626000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 03627000
*/*%INCLUDE SYSLIB  (LCGPLSSW)                                       */ 03628000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 03629000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 03630000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 03631000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 03632000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 03633000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 03634000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 03635000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 03636000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 03637000
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */ 03638000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 03639000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 03640000
*/*%INCLUDE SYSLIB  (IDAAMBXN)                                       */ 03641000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 03642000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 03643000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 03644000
*/*%INCLUDE SYSLIB  (IDABSPH )                                       */ 03645000
*/*%INCLUDE SYSLIB  (IDAERMSG)                                       */ 03646000
*                                                                  1329 03647000
*       ;                                                          1329 03648000
@EL00001 DS    0H                                                  1329 03649000
@EF00001 DS    0H                                                  1329 03650000
@ER00001 BR    @14                                                 1329 03651000
@DATA    DS    0H                                                       03652000
@CH01401 DC    H'128'                                                   03653000
@DATD    DSECT                                                          03654000
         DS    0F                                                       03655000
IDA019RY CSECT                                                          03656000
         DS    0F                                                       03657000
@CF00158 DC    F'0'                                                     03658000
@CF00047 DC    F'1'                                                     03659000
@CF00156 DC    F'4'                                                     03660000
@CF00493 DC    F'7'                                                     03661000
@CF00036 DC    F'8'                                                     03662000
@CF00065 DC    F'12'                                                    03663000
@CF00063 DC    F'16'                                                    03664000
@CF00172 DC    F'100'                                                   03665000
@DATD    DSECT                                                          03666000
         DS    0D                                                       03667000
IDA019RY CSECT                                                          03668000
         DS    0F                                                       03669000
@SIZDATD DC    AL1(0)                                                   03670000
         DC    AL3(@ENDDATD-@DATD)                                      03671000
@CV00148 DC    V(IDA019R3)                                              03672000
@CV00149 DC    V(IDA019R5)                                              03673000
@CV00150 DC    V(IDAWAIT)                                               03674000
@CV00151 DC    V(IDAFRBA)                                               03675000
@CV00152 DC    V(IDADRQ)                                                03676000
@CV00153 DC    V(IDATJXIT)                                              03677000
@CV00154 DC    V(IDAEXEX)                                               03678000
         DS    0D                                                       03679000
SHIFTBIT DC    XL4'80000000'                                            03680000
ALLBITS  DC    XL4'FFFFFFFF'                                            03681000
         ORG   ALLBITS                                                  03682000
ZROMSK   DS    BL1                                                      03683000
         ORG   ALLBITS+4                                                03684000
UCHNLOCK DC    XL4'40000000'                                            03685000
UCNTMSK  DC    XL4'01000000'                                            03686000
VALMSK   DC    XL4'FFBBFFFF'                                            03687000
EXCLMSK  DC    XL4'00020000'                                            03688000
UCNTMSK1 DC    XL4'000011C0'                                            03689000
UCNTMSK2 DC    XL4'00FFFFFF'                                            03690000
BSYWMSK  DC    XL4'00000010'                                            03691000
HWORD4   DC    H'4'                                                     03692000
@DATD    DSECT                                                          03693000
TWELVE   EQU   12                       OFFSET TO REGS                  03694000
@DATD    DSECT                                                          03695000
*                                                          /*@X04SVLC*/ 03696000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           03697000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              03698000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             03699000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                03700000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 03701000
RDFLEN   EQU   3                        LENGTH OF RDF                   03702000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         03703000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       03704000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  03705000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              03706000
@DATD    DSECT                                                          03707000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                03708000
@ENDDATD EQU   *                                                        03709000
IDA019RY CSECT                                                          03710000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03711000
@01      EQU   01                                                       03712000
@02      EQU   02                                                       03713000
@03      EQU   03                                                       03714000
@04      EQU   04                                                       03715000
@05      EQU   05                                                       03716000
@06      EQU   06                                                       03717000
@07      EQU   07                                                       03718000
@08      EQU   08                                                       03719000
@09      EQU   09                                                       03720000
@10      EQU   10                                                       03721000
@11      EQU   11                                                       03722000
@12      EQU   12                                                       03723000
@13      EQU   13                                                       03724000
@14      EQU   14                                                       03725000
@15      EQU   15                                                       03726000
RRPL     EQU   @01                                                      03727000
I        EQU   @05                                                      03728000
RWORK0   EQU   @00                                                      03729000
RPLH     EQU   @02                                                      03730000
RAMB     EQU   @03                                                      03731000
RBUFC    EQU   @04                                                      03732000
RWORK1   EQU   @05                                                      03733000
RWORK2   EQU   @06                                                      03734000
RWORK3   EQU   @07                                                      03735000
RWORK4   EQU   @08                                                      03736000
RWORK5   EQU   @09                                                      03737000
RPARM1   EQU   @12                                                      03738000
R14      EQU   @14                                                      03739000
R15      EQU   @15                                                      03740000
R1       EQU   @01                                                      03741000
R10      EQU   @10                                                      03742000
R11      EQU   @11                                                      03743000
R13      EQU   @13                                                      03744000
IDAAMB   EQU   0                                                        03745000
AMBBUFC  EQU   IDAAMB+8                                                 03746000
AMBPH    EQU   IDAAMB+12                                                03747000
AMBDSB   EQU   IDAAMB+20                                                03748000
AMBEOVR  EQU   IDAAMB+24                                                03749000
AMBFLG0  EQU   AMBEOVR                                                  03750000
AMBFLG1  EQU   IDAAMB+25                                                03751000
AMBTYPE  EQU   AMBFLG1                                                  03752000
AMBJRN   EQU   AMBFLG1                                                  03753000
AMBINBUF EQU   AMBFLG1                                                  03754000
AMBDSORG EQU   IDAAMB+26                                                03755000
AMBIOBAD EQU   IDAAMB+28                                                03756000
AMBINFL  EQU   IDAAMB+42                                                03757000
AMBCAT   EQU   AMBINFL                                                  03758000
AMBSCRA  EQU   AMBINFL                                                  03759000
AMBUCRA  EQU   AMBINFL                                                  03760000
AMBDEBPT EQU   IDAAMB+44                                                03761000
AMBOFLGS EQU   IDAAMB+48                                                03762000
AMBFLG2  EQU   IDAAMB+49                                                03763000
AMBEOVPT EQU   IDAAMB+56                                                03764000
AMBIWA   EQU   IDAAMB+64                                                03765000
AMBCSWD1 EQU   IDAAMB+84                                                03766000
AMBAFLG  EQU   AMBCSWD1                                                 03767000
AMBDFR   EQU   AMBAFLG                                                  03768000
AMBEXEX  EQU   IDAAMB+100                                               03769000
IOECB    EQU   0                                                        03770000
IDABUFC  EQU   0                                                        03771000
BUFCAVL  EQU   IDABUFC                                                  03772000
BUFCUCNT EQU   BUFCAVL                                                  03773000
BUFCFLG1 EQU   IDABUFC+1                                                03774000
BUFCSEG  EQU   BUFCFLG1                                                 03775000
BUFCINS  EQU   BUFCFLG1                                                 03776000
BUFCER1  EQU   BUFCFLG1                                                 03777000
BUFCER2  EQU   BUFCFLG1                                                 03778000
BUFCVAL  EQU   BUFCFLG1                                                 03779000
BUFCEXC  EQU   BUFCFLG1                                                 03780000
BUFCIOFL EQU   IDABUFC+2                                                03781000
BUFCMW   EQU   BUFCIOFL                                                 03782000
BUFCRRD  EQU   BUFCIOFL                                                 03783000
BUFCWC   EQU   BUFCIOFL                                                 03784000
BUFCXEDB EQU   BUFCIOFL                                                 03785000
BUFCFLG2 EQU   IDABUFC+3                                                03786000
BUFCBSYR EQU   BUFCFLG2                                                 03787000
BUFCBSYW EQU   BUFCFLG2                                                 03788000
BUFCPLH  EQU   IDABUFC+4                                                03789000
BUFCAMB  EQU   BUFCPLH                                                  03790000
BUFCDDDD EQU   IDABUFC+8                                                03791000
BUFCORBA EQU   IDABUFC+12                                               03792000
BUFCBAD  EQU   IDABUFC+20                                               03793000
BUFCINV  EQU   IDABUFC+28                                               03794000
BUFCIDXL EQU   IDABUFC+36                                               03795000
BUFXIRBA EQU   IDABUFC+40                                               03796000
BUFCHAIN EQU   IDABUFC+48                                               03797000
BUFCMDBT EQU   IDABUFC+52                                               03798000
BUFCUCUP EQU   IDABUFC+56                                               03799000
BUFCUCDN EQU   IDABUFC+60                                               03800000
SCHRBA   EQU   0                                                        03801000
SCHLRBA  EQU   SCHRBA                                                   03802000
SCHHRBA  EQU   SCHRBA+4                                                 03803000
USERAREA EQU   0                                                        03804000
USERPTR  EQU   0                                                        03805000
IDACIDF  EQU   0                                                        03806000
CIDFLL   EQU   IDACIDF+2                                                03807000
IDARDF   EQU   0                                                        03808000
RDFRBYTE EQU   IDARDF                                                   03809000
RDFSEG   EQU   RDFRBYTE                                                 03810000
RDFNOT1  EQU   RDFSEG                                                   03811000
RDF1ST   EQU   RDFSEG                                                   03812000
IDADATA  EQU   0                                                        03813000
IDAKEY   EQU   0                                                        03814000
IDAIXH   EQU   0                                                        03815000
IDAIBFLP EQU   0                                                        03816000
IBFLP3   EQU   IDAIBFLP+2                                               03817000
IBFLP2   EQU   IBFLP3                                                   03818000
IDASELL  EQU   0                                                        03819000
IDAIXK   EQU   0                                                        03820000
IDAIXSPL EQU   0                                                        03821000
IXSILN   EQU   IDAIXSPL+13                                              03822000
IXSBFLG  EQU   IDAIXSPL+17                                              03823000
IDAARDB  EQU   0                                                        03824000
ARDTYPE  EQU   IDAARDB+1                                                03825000
ARDPRF   EQU   IDAARDB+28                                               03826000
IDADIWA  EQU   0                                                        03827000
DIWFLG1  EQU   IDADIWA+4                                                03828000
DIWCAS   EQU   DIWFLG1                                                  03829000
DIWSHIFT EQU   DIWFLG1                                                  03830000
DIWFLG2  EQU   IDADIWA+5                                                03831000
DIWLRBA  EQU   IDADIWA+8                                                03832000
DIWHRBA  EQU   IDADIWA+12                                               03833000
DIWPLH   EQU   IDADIWA+16                                               03834000
DIWBUFC  EQU   IDADIWA+20                                               03835000
DIWSAVE  EQU   IDADIWA+28                                               03836000
DIWINRBA EQU   IDADIWA+52                                               03837000
IFGRPL   EQU   0                                                        03838000
RPLCOMN  EQU   IFGRPL                                                   03839000
RPLIDWD  EQU   RPLCOMN                                                  03840000
RPLLEN   EQU   RPLIDWD+3                                                03841000
RPLECB   EQU   RPLCOMN+8                                                03842000
RPLFDBWD EQU   RPLCOMN+12                                               03843000
RPLFDBK  EQU   RPLFDBWD+1                                               03844000
RPLRTNCD EQU   RPLFDBK                                                  03845000
RPLERREG EQU   RPLRTNCD                                                 03846000
RPLCNDCD EQU   RPLFDBK+1                                                03847000
RPLCMPON EQU   RPLCNDCD                                                 03848000
RPLFDB2  EQU   RPLCMPON                                                 03849000
RPLERRCD EQU   RPLCNDCD+1                                               03850000
RPLFDB3  EQU   RPLERRCD                                                 03851000
RPLKEYLE EQU   RPLCOMN+16                                               03852000
RPLSTRID EQU   RPLCOMN+18                                               03853000
RPLDACB  EQU   RPLCOMN+24                                               03854000
RPLAREA  EQU   RPLCOMN+32                                               03855000
RPLARG   EQU   RPLCOMN+36                                               03856000
RPLOPTCD EQU   RPLCOMN+40                                               03857000
RPLOPT1  EQU   RPLOPTCD                                                 03858000
RPLLOC   EQU   RPLOPT1                                                  03859000
RPLASY   EQU   RPLOPT1                                                  03860000
RPLECBSW EQU   RPLOPT1                                                  03861000
RPLOPT2  EQU   RPLOPTCD+1                                               03862000
RPLKEY   EQU   RPLOPT2                                                  03863000
RPLADR   EQU   RPLOPT2                                                  03864000
RPLBWD   EQU   RPLOPT2                                                  03865000
RPLOPT3  EQU   RPLOPTCD+2                                               03866000
RPLOPT4  EQU   RPLOPTCD+3                                               03867000
RPLNXTRP EQU   RPLCOMN+44                                               03868000
RPLBUFL  EQU   RPLCOMN+52                                               03869000
RPLOPTC2 EQU   RPLCOMN+56                                               03870000
RPLOPT5  EQU   RPLOPTC2                                                 03871000
RPLWRTYP EQU   RPLOPT5                                                  03872000
RPLOPT6  EQU   RPLOPTC2+1                                               03873000
RPLUNTYP EQU   RPLOPT6                                                  03874000
RPLOPT7  EQU   RPLOPTC2+2                                               03875000
RPLCNOPT EQU   RPLOPT7                                                  03876000
RPLOPT8  EQU   RPLOPTC2+3                                               03877000
RPLRBAR  EQU   RPLCOMN+60                                               03878000
RPLAIXID EQU   RPLRBAR+2                                                03879000
RPLDDDD  EQU   RPLRBAR+4                                                03880000
RPLEXTDS EQU   RPLCOMN+68                                               03881000
RPLEXTD1 EQU   RPLEXTDS                                                 03882000
RPLEMLEN EQU   RPLCOMN+70                                               03883000
RPLERMSA EQU   RPLCOMN+72                                               03884000
IDABUFDR EQU   0                                                        03885000
BUFDRCIX EQU   IDABUFDR+9                                               03886000
BUFDRFLG EQU   IDABUFDR+11                                              03887000
IFGACB   EQU   0                                                        03888000
ACBCOMN  EQU   IFGACB                                                   03889000
ACBLENG  EQU   ACBCOMN+2                                                03890000
ACBLENG2 EQU   ACBLENG                                                  03891000
ACBAMBL  EQU   ACBCOMN+4                                                03892000
ACBJWA   EQU   ACBAMBL                                                  03893000
ACBMACRF EQU   ACBCOMN+12                                               03894000
ACBMACR1 EQU   ACBMACRF                                                 03895000
ACBADR   EQU   ACBMACR1                                                 03896000
ACBCNV   EQU   ACBMACR1                                                 03897000
ACBMACR2 EQU   ACBMACRF+1                                               03898000
ACBBUFPL EQU   ACBCOMN+20                                               03899000
ACBMACR3 EQU   ACBBUFPL                                                 03900000
ACBRECFM EQU   ACBCOMN+24                                               03901000
ACBCCTYP EQU   ACBCOMN+25                                               03902000
ACBOPT   EQU   ACBCOMN+26                                               03903000
ACBDSORG EQU   ACBOPT                                                   03904000
ACBCROPS EQU   ACBDSORG                                                 03905000
ACBDVIND EQU   ACBDSORG                                                 03906000
ACBEXLST EQU   ACBCOMN+36                                               03907000
ACBDDNM  EQU   ACBCOMN+40                                               03908000
ACBAMETH EQU   ACBDDNM+3                                                03909000
ACBOFLGS EQU   ACBCOMN+48                                               03910000
ACBEXFG  EQU   ACBOFLGS                                                 03911000
ACBIOSFG EQU   ACBOFLGS                                                 03912000
ACBINFLG EQU   ACBCOMN+50                                               03913000
ACBINFL1 EQU   ACBINFLG                                                 03914000
ACBVVIC  EQU   ACBINFL1                                                 03915000
ACBINFL2 EQU   ACBINFLG+1                                               03916000
ACBUJFCB EQU   ACBCOMN+52                                               03917000
ACBBLKSZ EQU   ACBCOMN+60                                               03918000
IDAAMBXN EQU   0                                                        03919000
AMBXEOV  EQU   IDAAMBXN                                                 03920000
AMBXCSWD EQU   IDAAMBXN+16                                              03921000
AMBXRDCT EQU   AMBXCSWD+2                                               03922000
AMBXBM2S EQU   IDAAMBXN+20                                              03923000
IDAIOMBX EQU   0                                                        03924000
IOMXFLGS EQU   IDAIOMBX+1                                               03925000
IOMXPDET EQU   IDAIOMBX+4                                               03926000
IOMXRECB EQU   IDAIOMBX+20                                              03927000
IOMXECB  EQU   IOMXRECB                                                 03928000
IOMXRSLT EQU   IOMXECB                                                  03929000
IDAAMBL  EQU   0                                                        03930000
AMBLEOV  EQU   IDAAMBL+12                                               03931000
AMBLEFLG EQU   AMBLEOV                                                  03932000
AMBLDDNM EQU   IDAAMBL+16                                               03933000
AMBLIDF  EQU   AMBLDDNM                                                 03934000
AMBLQ    EQU   AMBLIDF+7                                                03935000
AMBLVC   EQU   IDAAMBL+28                                               03936000
AMBLTYPE EQU   IDAAMBL+30                                               03937000
AMBLQ2   EQU   IDAAMBL+31                                               03938000
AMBLSHAR EQU   IDAAMBL+33                                               03939000
AMBLFLG1 EQU   IDAAMBL+35                                               03940000
AMBLVVIC EQU   AMBLFLG1                                                 03941000
AMBLFLG2 EQU   IDAAMBL+36                                               03942000
AMBLDTA  EQU   IDAAMBL+52                                               03943000
IDAAMDSB EQU   0                                                        03944000
AMDATTR  EQU   IDAAMDSB+1                                               03945000
AMDWCK   EQU   AMDATTR                                                  03946000
AMDSPAN  EQU   AMDATTR                                                  03947000
AMDNEST  EQU   IDAAMDSB+4                                               03948000
AMDCINV  EQU   IDAAMDSB+20                                              03949000
AMDHLRBA EQU   IDAAMDSB+28                                              03950000
AMDSSRBA EQU   IDAAMDSB+32                                              03951000
AMDATTR3 EQU   IDAAMDSB+40                                              03952000
AMDSTAT  EQU   IDAAMDSB+48                                              03953000
IDAPLHDR EQU   0                                                        03954000
PLHDRREQ EQU   IDAPLHDR+4                                               03955000
IDAPLH   EQU   0                                                        03956000
PLHFLG1  EQU   IDAPLH+2                                                 03957000
PLHRDEXC EQU   PLHFLG1                                                  03958000
PLHDRPND EQU   PLHFLG1                                                  03959000
PLHSR    EQU   PLHFLG1                                                  03960000
PLHFLG2  EQU   IDAPLH+3                                                 03961000
PLHEFLGS EQU   IDAPLH+4                                                 03962000
PLHINVAL EQU   PLHEFLGS                                                 03963000
PLHFLG3  EQU   IDAPLH+6                                                 03964000
PLHAFLGS EQU   IDAPLH+7                                                 03965000
PLHCRBA  EQU   IDAPLH+28                                                03966000
PLHJORBA EQU   PLHCRBA                                                  03967000
PLHJRNLL EQU   IDAPLH+32                                                03968000
PLHJNRBA EQU   IDAPLH+36                                                03969000
PLHJCODE EQU   IDAPLH+40                                                03970000
PLHRSCS  EQU   IDAPLH+43                                                03971000
PLHDBUFC EQU   IDAPLH+52                                                03972000
PLHDIOB  EQU   IDAPLH+76                                                03973000
PLHCHAIN EQU   IDAPLH+112                                               03974000
PLHRETO  EQU   IDAPLH+116                                               03975000
PLHRET1  EQU   IDAPLH+120                                               03976000
PLHEOVPT EQU   IDAPLH+180                                               03977000
PLHNRBA  EQU   IDAPLH+184                                               03978000
PLHIBUFC EQU   IDAPLH+188                                               03979000
PLHIXSPL EQU   IDAPLH+200                                               03980000
PLHSSRBA EQU   PLHIXSPL                                                 03981000
PLHWAX   EQU   IDAPLH+232                                               03982000
PLHKEYPT EQU   IDAPLH+248                                               03983000
PLHDRRSC EQU   IDAPLH+252                                               03984000
PLHDRMSK EQU   IDAPLH+264                                               03985000
PLHTMRPL EQU   IDAPLH+265                                               03986000
PLHEND   EQU   IDAPLH+280                                               03987000
IDABSPH  EQU   0                                                        03988000
BSPHFLG1 EQU   IDABSPH+1                                                03989000
BSPHNBSP EQU   IDABSPH+8                                                03990000
BSPHBFNO EQU   IDABSPH+12                                               03991000
BSPHBUFC EQU   IDABSPH+16                                               03992000
BSPHMDBT EQU   IDABSPH+20                                               03993000
BSPHCSRC EQU   IDABSPH+28                                               03994000
BSPHFLG2 EQU   BSPHCSRC                                                 03995000
BSPHPCUC EQU   BSPHFLG2                                                 03996000
BSPHPSUC EQU   BSPHCSRC+2                                               03997000
BSPHRDS  EQU   IDABSPH+36                                               03998000
BSPHFND  EQU   IDABSPH+40                                               03999000
BSPHUIW  EQU   IDABSPH+44                                               04000000
BSPHNUIW EQU   IDABSPH+48                                               04001000
BSPHUTOP EQU   IDABSPH+52                                               04002000
BSPHUBTM EQU   IDABSPH+56                                               04003000
BSPH1ST  EQU   IDABSPH+60                                               04004000
IDAERMSG EQU   0                                                        04005000
ERBASE   EQU   IDAERMSG                                                 04006000
ERLGTH   EQU   ERBASE                                                   04007000
ERMBFRA  EQU   ERBASE+8                                                 04008000
ERDEVD   EQU   ERBASE+107                                               04009000
PLHKEY   EQU   0                                                        04010000
PLHPDL   EQU   0                                                        04011000
PLHPDLE  EQU   0                                                        04012000
PLHRRN   EQU   0                                                        04013000
RPLADDR  EQU   0                                                        04014000
BUFCRSC2 EQU   IDABUFC                                                  04015000
BSPHRSC2 EQU   BSPHBFNO                                                 04016000
GRBRSC1  EQU   AMBXBM2S                                                 04017000
PLHEXTEN EQU   PLHEND                                                   04018000
PLHRESR1 EQU   PLHEXTEN                                                 04019000
PLHBMWRK EQU   PLHEXTEN+5                                               04020000
PLHRDCNT EQU   PLHEXTEN+6                                               04021000
PLHBMSV1 EQU   PLHEXTEN+8                                               04022000
PLHBMSV2 EQU   PLHEXTEN+12                                              04023000
PLHBMSV3 EQU   PLHEXTEN+16                                              04024000
PLHBMSV4 EQU   PLHEXTEN+20                                              04025000
PLHBMSV5 EQU   PLHEXTEN+24                                              04026000
BMSV1    EQU   PLHBMSV1                                                 04027000
DBMCNTR  EQU   BMSV1                                                    04028000
DBMAMB   EQU   BMSV1+1                                                  04029000
BMSV2    EQU   PLHBMSV2                                                 04030000
DBMLRUCT EQU   BMSV2                                                    04031000
DBMBSPH  EQU   BMSV2+1                                                  04032000
BMSV3    EQU   PLHBMSV3                                                 04033000
DBMTRNID EQU   BMSV3                                                    04034000
BMSV4    EQU   PLHBMSV4                                                 04035000
DBMMASK  EQU   BMSV4                                                    04036000
BUFCRSC1 EQU   BUFCAVL                                                  04037000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    04038000
PLHBMSOV EQU   PLHBMWRK                                                 04039000
PLHBEUC  EQU   PLHBMWRK                                                 04040000
PLHBMRDF EQU   PLHBMWRK                                                 04041000
@NM00070 EQU   PLHEXTEN+4                                               04042000
ERDAAM   EQU   ERDEVD+15                                                04043000
ERDACOM  EQU   ERDEVD+14                                                04044000
ERDASEEK EQU   ERDEVD                                                   04045000
COMMA8   EQU   ERBASE+106                                               04046000
ERDESC   EQU   ERBASE+91                                                04047000
COMMA7   EQU   ERBASE+90                                                04048000
EROPER   EQU   ERBASE+84                                                04049000
COMMA6   EQU   ERBASE+83                                                04050000
ERDDNM   EQU   ERBASE+75                                                04051000
COMMA5   EQU   ERBASE+74                                                04052000
ERUNTYPE EQU   ERBASE+72                                                04053000
COMMA4   EQU   ERBASE+71                                                04054000
ERUNIT   EQU   ERBASE+68                                                04055000
COMMA3   EQU   ERBASE+67                                                04056000
ERSTEPNM EQU   ERBASE+59                                                04057000
COMMA2   EQU   ERBASE+58                                                04058000
ERJOBNM  EQU   ERBASE+50                                                04059000
COMMA1   EQU   ERBASE+49                                                04060000
ERMVOL   EQU   ERBASE+43                                                04061000
COMMA9   EQU   ERBASE+42                                                04062000
ERMDSID  EQU   ERBASE+36                                                04063000
COMMA05  EQU   ERBASE+35                                                04064000
ERRBA    EQU   ERBASE+27                                                04065000
COMMA0   EQU   ERBASE+26                                                04066000
ERTIME   EQU   ERBASE+18                                                04067000
ERCOMMA  EQU   ERBASE+17                                                04068000
ERDATE   EQU   ERBASE+12                                                04069000
ERMZERO2 EQU   ERLGTH+6                                                 04070000
ERMLL2   EQU   ERLGTH+4                                                 04071000
ERMZERO1 EQU   ERLGTH+2                                                 04072000
ERMLL1   EQU   ERLGTH                                                   04073000
BSPHCPLH EQU   IDABSPH+32                                               04074000
@NM00071 EQU   BSPHCSRC+1                                               04075000
BSPHAPRT EQU   BSPHFLG2                                                 04076000
BSPHBSZ  EQU   IDABSPH+24                                               04077000
BSPHERCT EQU   IDABSPH+14                                               04078000
BSPHNM   EQU   IDABSPH+4                                                04079000
BSPHLEN  EQU   IDABSPH+2                                                04080000
BSPHBFRF EQU   BSPHFLG1                                                 04081000
BSPHIOBF EQU   BSPHFLG1                                                 04082000
BSPHID   EQU   IDABSPH                                                  04083000
PLHERRET EQU   IDAPLH+276                                               04084000
PLHASCB  EQU   IDAPLH+272                                               04085000
PLHECB   EQU   IDAPLH+268                                               04086000
@NM00069 EQU   IDAPLH+266                                               04087000
@NM00068 EQU   PLHTMRPL                                                 04088000
PLHTMIOB EQU   PLHTMRPL                                                 04089000
PLHTMINX EQU   PLHTMRPL                                                 04090000
PLHTMDTA EQU   PLHTMRPL                                                 04091000
PLHTMDIW EQU   PLHTMRPL                                                 04092000
PLHTMBUF EQU   PLHTMRPL                                                 04093000
PLHTERM  EQU   PLHTMRPL                                                 04094000
PLHR13   EQU   IDAPLH+260                                               04095000
PLHPARM1 EQU   IDAPLH+256                                               04096000
PLHSLRBA EQU   IDAPLH+244                                               04097000
PLHSRCSG EQU   IDAPLH+242                                               04098000
PLHNOSEG EQU   IDAPLH+240                                               04099000
PLHLLOR  EQU   IDAPLH+236                                               04100000
PLHXPLH  EQU   PLHWAX                                                   04101000
@NM00067 EQU   PLHIXSPL+8                                               04102000
PLHIXBFC EQU   PLHIXSPL+4                                               04103000
PLHHIREC EQU   PLHSSRBA                                                 04104000
PLHISPLP EQU   IDAPLH+196                                               04105000
PLHRBUFC EQU   IDAPLH+192                                               04106000
PLHDDDD  EQU   PLHEOVPT                                                 04107000
PLHAR14  EQU   IDAPLH+176                                               04108000
@NM00066 EQU   IDAPLH+172                                               04109000
@NM00065 EQU   IDAPLH+168                                               04110000
PLHASAVE EQU   IDAPLH+164                                               04111000
PLHRETOS EQU   IDAPLH+118                                               04112000
PLHAMB   EQU   IDAPLH+108                                               04113000
PLHSAVE6 EQU   IDAPLH+104                                               04114000
PLHSAVE5 EQU   IDAPLH+100                                               04115000
PLHSAVE4 EQU   IDAPLH+96                                                04116000
PLHSAVE3 EQU   IDAPLH+92                                                04117000
PLHSAVE2 EQU   IDAPLH+88                                                04118000
PLHSAVE1 EQU   IDAPLH+84                                                04119000
PLHARET  EQU   IDAPLH+80                                                04120000
PLHIIOB  EQU   PLHDIOB                                                  04121000
PLHSRSID EQU   IDAPLH+74                                                04122000
PLHRDFC  EQU   IDAPLH+72                                                04123000
PLHRDFP  EQU   IDAPLH+68                                                04124000
PLHFSP   EQU   IDAPLH+64                                                04125000
PLHRECP  EQU   IDAPLH+60                                                04126000
PLHNBUFC EQU   IDAPLH+56                                                04127000
PLHLRECL EQU   IDAPLH+48                                                04128000
PLHARDB  EQU   IDAPLH+44                                                04129000
@NM00064 EQU   PLHRSCS                                                  04130000
PLHDBPER EQU   PLHRSCS                                                  04131000
PLHDSERR EQU   PLHRSCS                                                  04132000
PLHASYER EQU   PLHRSCS                                                  04133000
@NM00063 EQU   PLHRSCS                                                  04134000
PLHBUFHD EQU   PLHRSCS                                                  04135000
PLHINEOV EQU   PLHRSCS                                                  04136000
PLHEOVR  EQU   IDAPLH+42                                                04137000
PLHRCODE EQU   IDAPLH+41                                                04138000
PLHUCODE EQU   PLHJCODE                                                 04139000
PLHUPECB EQU   PLHJORBA                                                 04140000
PLHDSIDA EQU   IDAPLH+24                                                04141000
PLHCRPL  EQU   IDAPLH+20                                                04142000
PLHMRPL  EQU   IDAPLH+16                                                04143000
PLHBFRNO EQU   IDAPLH+15                                                04144000
PLHFRCNT EQU   IDAPLH+14                                                04145000
PLHRMIN  EQU   IDAPLH+13                                                04146000
PLHDSTYP EQU   IDAPLH+12                                                04147000
PLHACB   EQU   IDAPLH+8                                                 04148000
PLHRAE   EQU   PLHAFLGS                                                 04149000
PLHRABWD EQU   PLHAFLGS                                                 04150000
PLHIOSID EQU   PLHAFLGS                                                 04151000
PLHDBDC  EQU   PLHAFLGS                                                 04152000
PLHVAMB  EQU   PLHAFLGS                                                 04153000
PLHIOSRQ EQU   PLHAFLGS                                                 04154000
PLHDRLM  EQU   PLHAFLGS                                                 04155000
PLHEOVDF EQU   PLHFLG3                                                  04156000
PLHRVRS  EQU   PLHFLG3                                                  04157000
PLHBWD   EQU   PLHFLG3                                                  04158000
PLHSLVLD EQU   PLHFLG3                                                  04159000
PLHRAHD  EQU   PLHFLG3                                                  04160000
PLHSRBSG EQU   PLHFLG3                                                  04161000
@NM00062 EQU   PLHEFLGS+1                                               04162000
PLHRSTRT EQU   PLHEFLGS+1                                               04163000
PLHDSCAN EQU   PLHEFLGS                                                 04164000
PLHEODX  EQU   PLHEFLGS                                                 04165000
PLHNOADV EQU   PLHEFLGS                                                 04166000
PLHSRINV EQU   PLHEFLGS                                                 04167000
PLHSKPER EQU   PLHEFLGS                                                 04168000
PLH1ST   EQU   PLHEFLGS                                                 04169000
PLHNOSPC EQU   PLHEFLGS                                                 04170000
PLHIWAIT EQU   PLHFLG2                                                  04171000
PLHSVADV EQU   PLHFLG2                                                  04172000
PLHCIINS EQU   PLHFLG2                                                  04173000
PLHKRE   EQU   PLHFLG2                                                  04174000
PLHADDTE EQU   PLHFLG2                                                  04175000
PLHKEYMD EQU   PLHFLG2                                                  04176000
PLHSQINS EQU   PLHFLG2                                                  04177000
PLHUPD   EQU   PLHFLG2                                                  04178000
PLHASYRQ EQU   PLHFLG1                                                  04179000
PLHSSR   EQU   PLHFLG1                                                  04180000
PLHASKBF EQU   PLHFLG1                                                  04181000
PLHENDRQ EQU   PLHFLG1                                                  04182000
PLHEOVW  EQU   PLHFLG1                                                  04183000
PLHATV   EQU   IDAPLH+1                                                 04184000
PLHAVL   EQU   IDAPLH                                                   04185000
PLHIOSDQ EQU   IDAPLHDR+12                                              04186000
PLHDRCUR EQU   IDAPLHDR+10                                              04187000
PLHDRMAX EQU   IDAPLHDR+8                                               04188000
PLHELTH  EQU   IDAPLHDR+2                                               04189000
PLHCNT   EQU   IDAPLHDR+1                                               04190000
PLHID    EQU   IDAPLHDR                                                 04191000
AMDEXCP  EQU   AMDSTAT+44                                               04192000
AMDNCAS  EQU   AMDSTAT+40                                               04193000
AMDNCIS  EQU   AMDSTAT+36                                               04194000
AMDASPA  EQU   AMDSTAT+32                                               04195000
AMDRETR  EQU   AMDSTAT+28                                               04196000
AMDUPR   EQU   AMDSTAT+24                                               04197000
AMDIREC  EQU   AMDSTAT+20                                               04198000
AMDDELR  EQU   AMDSTAT+16                                               04199000
AMDNLR   EQU   AMDSTAT+12                                               04200000
AMDNEXT  EQU   AMDSTAT+10                                               04201000
AMDNIL   EQU   AMDSTAT+8                                                04202000
AMDSTSP  EQU   AMDSTAT                                                  04203000
@NM00061 EQU   IDAAMDSB+41                                              04204000
@NM00060 EQU   AMDATTR3                                                 04205000
AMDLM    EQU   AMDATTR3                                                 04206000
AMDWAIT  EQU   AMDATTR3                                                 04207000
AMDBIND  EQU   AMDATTR3                                                 04208000
AMDFAULT EQU   AMDATTR3                                                 04209000
AMDUNQ   EQU   AMDATTR3                                                 04210000
AMDPARDB EQU   IDAAMDSB+36                                              04211000
AMDMAXRR EQU   AMDSSRBA                                                 04212000
AMDNSLOT EQU   AMDHLRBA                                                 04213000
AMDLRECL EQU   IDAAMDSB+24                                              04214000
AMDFSCI  EQU   IDAAMDSB+16                                              04215000
AMDFSCA  EQU   IDAAMDSB+14                                              04216000
AMDCIPCA EQU   IDAAMDSB+12                                              04217000
AMDPCTCI EQU   IDAAMDSB+11                                              04218000
AMDPCTCA EQU   IDAAMDSB+10                                              04219000
AMDKEYLN EQU   IDAAMDSB+8                                               04220000
AMDRKP   EQU   IDAAMDSB+6                                               04221000
AMDAXRKP EQU   AMDNEST                                                  04222000
AMDLEN   EQU   IDAAMDSB+2                                               04223000
AMDRRDS  EQU   AMDATTR                                                  04224000
AMDRANGE EQU   AMDATTR                                                  04225000
AMDORDER EQU   AMDATTR                                                  04226000
AMDREPL  EQU   AMDATTR                                                  04227000
AMDSDT   EQU   AMDATTR                                                  04228000
AMDDST   EQU   AMDATTR                                                  04229000
AMDSBID  EQU   IDAAMDSB                                                 04230000
AMBLCMB  EQU   IDAAMBL+64                                               04231000
AMBLBIB  EQU   IDAAMBL+60                                               04232000
AMBLIX   EQU   IDAAMBL+56                                               04233000
AMBLMIDS EQU   IDAAMBL+42                                               04234000
AMBLNIDS EQU   IDAAMBL+41                                               04235000
@NM00059 EQU   IDAAMBL+40                                               04236000
AMBLNUM  EQU   IDAAMBL+38                                               04237000
AMBLNST  EQU   IDAAMBL+37                                               04238000
@NM00058 EQU   AMBLFLG2                                                 04239000
AMBLSTAG EQU   AMBLFLG2                                                 04240000
@NM00057 EQU   AMBLFLG2                                                 04241000
AMBLDUMY EQU   AMBLFLG1                                                 04242000
AMBLCAT  EQU   AMBLFLG1                                                 04243000
AMBLUCRA EQU   AMBLFLG1                                                 04244000
AMBLSCRA EQU   AMBLFLG1                                                 04245000
AMBLSDS  EQU   AMBLVVIC                                                 04246000
AMBLUPD  EQU   AMBLFLG1                                                 04247000
AMBLCINV EQU   AMBLFLG1                                                 04248000
AMBLFULL EQU   AMBLFLG1                                                 04249000
AMBLLEN  EQU   IDAAMBL+34                                               04250000
@NM00056 EQU   AMBLSHAR                                                 04251000
AMBLWRIT EQU   AMBLSHAR                                                 04252000
AMBLCATO EQU   AMBLSHAR                                                 04253000
AMBLPRIM EQU   AMBLSHAR                                                 04254000
AMBLID   EQU   IDAAMBL+32                                               04255000
@NM00055 EQU   AMBLQ2                                                   04256000
AMBLCBIC EQU   AMBLQ2                                                   04257000
@NM00054 EQU   AMBLTYPE                                                 04258000
AMBLFIX  EQU   AMBLTYPE                                                 04259000
AMBLBASE EQU   AMBLTYPE                                                 04260000
AMBLAIX  EQU   AMBLTYPE                                                 04261000
AMBLUPGR EQU   AMBLTYPE                                                 04262000
AMBLPATH EQU   AMBLTYPE                                                 04263000
AMBLENO  EQU   AMBLVC+1                                                 04264000
AMBLVRT  EQU   AMBLVC                                                   04265000
AMBLXPT  EQU   IDAAMBL+24                                               04266000
AMBLDFR  EQU   AMBLQ                                                    04267000
AMBLESDS EQU   AMBLQ                                                    04268000
AMBLKSDS EQU   AMBLQ                                                    04269000
AMBLUBF  EQU   AMBLQ                                                    04270000
AMBLFSTP EQU   AMBLQ                                                    04271000
AMBLLSR  EQU   AMBLQ                                                    04272000
AMBLGSR  EQU   AMBLQ                                                    04273000
AMBLDDC  EQU   AMBLQ                                                    04274000
AMBLDCI  EQU   AMBLIDF+4                                                04275000
AMBLCACB EQU   AMBLIDF                                                  04276000
@NM00053 EQU   AMBLEOV+2                                                04277000
AMBLCOMP EQU   AMBLEOV+1                                                04278000
AMBLESET EQU   AMBLEFLG                                                 04279000
AMBLWAIT EQU   AMBLEFLG                                                 04280000
AMBLACB  EQU   IDAAMBL+8                                                04281000
AMBLSCHN EQU   IDAAMBL+4                                                04282000
AMBLPCHN EQU   IDAAMBL                                                  04283000
IOMXRBPT EQU   IOMXECB+1                                                04284000
IOMXIOCC EQU   IOMXRSLT                                                 04285000
IOMXPOST EQU   IOMXRSLT                                                 04286000
IOMXWAIT EQU   IOMXECB                                                  04287000
IOMXR14  EQU   IDAIOMBX+16                                              04288000
IOMXRPL  EQU   IOMXPDET+8                                               04289000
IOMXR13S EQU   IOMXPDET+4                                               04290000
@NM00052 EQU   IOMXPDET+2                                               04291000
IOMXBFLG EQU   IOMXPDET                                                 04292000
@NM00051 EQU   IDAIOMBX+2                                               04293000
@NM00050 EQU   IOMXFLGS                                                 04294000
IOMXSCAN EQU   IOMXFLGS                                                 04295000
IOMXEOVW EQU   IOMXFLGS                                                 04296000
IOMXUSE  EQU   IOMXFLGS                                                 04297000
IOMXLOCK EQU   IDAIOMBX                                                 04298000
@NM00049 EQU   AMBXCSWD                                                 04299000
AMBXECB  EQU   IDAAMBXN+12                                              04300000
AMBXASCB EQU   IDAAMBXN+8                                               04301000
@NM00048 EQU   AMBXEOV+7                                                04302000
AMBXEVRC EQU   AMBXEOV+6                                                04303000
AMBXEOVR EQU   AMBXEOV+5                                                04304000
AMBXRSC  EQU   AMBXEOV+4                                                04305000
AMBXEVPT EQU   AMBXEOV                                                  04306000
ACBAPID  EQU   ACBCOMN+72                                               04307000
ACBCBMWA EQU   ACBCOMN+68                                               04308000
ACBUAPTR EQU   ACBCOMN+64                                               04309000
ACBLRECL EQU   ACBCOMN+62                                               04310000
ACBMSGLN EQU   ACBBLKSZ                                                 04311000
ACBBUFSP EQU   ACBCOMN+56                                               04312000
@NM00047 EQU   ACBUJFCB+1                                               04313000
ACBOPTN  EQU   ACBUJFCB                                                 04314000
@NM00046 EQU   ACBINFL2                                                 04315000
ACBCBIC  EQU   ACBINFL2                                                 04316000
@NM00045 EQU   ACBINFL2                                                 04317000
ACBBYPSS EQU   ACBINFL1                                                 04318000
ACBSDS   EQU   ACBVVIC                                                  04319000
ACBUCRA  EQU   ACBINFL1                                                 04320000
ACBSCRA  EQU   ACBINFL1                                                 04321000
ACBCAT   EQU   ACBINFL1                                                 04322000
ACBIJRQE EQU   ACBINFL1                                                 04323000
ACBJEPS  EQU   ACBINFL1                                                 04324000
@NM00044 EQU   ACBINFL1                                                 04325000
ACBERFLG EQU   ACBCOMN+49                                               04326000
ACBBUSY  EQU   ACBIOSFG                                                 04327000
ACBLOCK  EQU   ACBEXFG                                                  04328000
@NM00043 EQU   ACBOFLGS                                                 04329000
ACBDSERR EQU   ACBOFLGS                                                 04330000
ACBOPEN  EQU   ACBOFLGS                                                 04331000
ACBEOV   EQU   ACBOFLGS                                                 04332000
@NM00042 EQU   ACBOFLGS                                                 04333000
ACBDEB   EQU   ACBDDNM+5                                                04334000
ACBERFL  EQU   ACBDDNM+4                                                04335000
ACBAM    EQU   ACBAMETH                                                 04336000
ACBINFL  EQU   ACBDDNM+2                                                04337000
ACBTIOT  EQU   ACBDDNM                                                  04338000
ACBUEL   EQU   ACBEXLST                                                 04339000
ACBPASSW EQU   ACBCOMN+32                                               04340000
ACBMSGAR EQU   ACBCOMN+28                                               04341000
@NM00041 EQU   ACBDSORG+1                                               04342000
ACBDORGA EQU   ACBDSORG+1                                               04343000
@NM00040 EQU   ACBDSORG                                                 04344000
ACBOPTJ  EQU   ACBDVIND                                                 04345000
ACBCRNRE EQU   ACBCROPS                                                 04346000
ACBCRNCK EQU   ACBCROPS                                                 04347000
ACBASA   EQU   ACBCCTYP                                                 04348000
@NM00039 EQU   ACBCCTYP                                                 04349000
ACBTRCID EQU   ACBCCTYP                                                 04350000
@NM00038 EQU   ACBRECFM                                                 04351000
ACBRECAF EQU   ACBRECFM                                                 04352000
ACBJBUF  EQU   ACBBUFPL+2                                               04353000
ACBMACR4 EQU   ACBBUFPL+1                                               04354000
@NM00037 EQU   ACBMACR3                                                 04355000
ACBNCFX  EQU   ACBMACR3                                                 04356000
ACBSIS   EQU   ACBMACR3                                                 04357000
ACBDFR   EQU   ACBMACR3                                                 04358000
ACBICI   EQU   ACBMACR3                                                 04359000
ACBGSR   EQU   ACBMACR3                                                 04360000
ACBLSR   EQU   ACBMACR3                                                 04361000
@NM00036 EQU   ACBMACR3                                                 04362000
ACBBUFNI EQU   ACBCOMN+18                                               04363000
ACBBUFND EQU   ACBCOMN+16                                               04364000
ACBSTRNO EQU   ACBCOMN+15                                               04365000
ACBBSTNO EQU   ACBCOMN+14                                               04366000
ACBAIX   EQU   ACBMACR2                                                 04367000
ACBDSN   EQU   ACBMACR2                                                 04368000
ACBRST   EQU   ACBMACR2                                                 04369000
ACBLOGON EQU   ACBMACR2                                                 04370000
ACBSKP   EQU   ACBMACR2                                                 04371000
@NM00035 EQU   ACBMACR2                                                 04372000
ACBUBF   EQU   ACBMACR1                                                 04373000
ACBOUT   EQU   ACBMACR1                                                 04374000
ACBIN    EQU   ACBMACR1                                                 04375000
ACBDIR   EQU   ACBMACR1                                                 04376000
ACBSEQ   EQU   ACBMACR1                                                 04377000
ACBBLK   EQU   ACBCNV                                                   04378000
ACBADD   EQU   ACBADR                                                   04379000
ACBKEY   EQU   ACBMACR1                                                 04380000
ACBINRTN EQU   ACBCOMN+8                                                04381000
ACBIBCT  EQU   ACBJWA                                                   04382000
ACBLEN2  EQU   ACBLENG2                                                 04383000
ACBSTYP  EQU   ACBCOMN+1                                                04384000
ACBID    EQU   ACBCOMN                                                  04385000
@NM00033 EQU   IDABUFDR+16                                              04386000
BUFDBUFC EQU   IDABUFDR+12                                              04387000
@NM00032 EQU   BUFDRFLG                                                 04388000
BUFDRAVL EQU   BUFDRFLG                                                 04389000
BUFDRREL EQU   BUFDRFLG                                                 04390000
BUFDRTSB EQU   IDABUFDR+10                                              04391000
BUFDRMAX EQU   BUFDRCIX                                                 04392000
BUFDRPFN EQU   IDABUFDR+8                                               04393000
BUFDRPFB EQU   IDABUFDR+4                                               04394000
BUFDRLEN EQU   IDABUFDR+2                                               04395000
BUFDRNO  EQU   IDABUFDR+1                                               04396000
BUFDRID  EQU   IDABUFDR                                                 04397000
RPLACTIV EQU   RPLCOMN+69                                               04398000
RPLBRANC EQU   RPLEXTD1                                                 04399000
RPLNIB   EQU   RPLEXTD1                                                 04400000
@NM00031 EQU   RPLEXTD1                                                 04401000
RPLEXIT  EQU   RPLEXTD1                                                 04402000
RPLNEXIT EQU   RPLEXTD1                                                 04403000
RPLEXSCH EQU   RPLEXTD1                                                 04404000
@NM00030 EQU   RPLRBAR+3                                                04405000
@NM00029 EQU   RPLAIXID                                                 04406000
RPLAXPKP EQU   RPLAIXID                                                 04407000
RPLAIXPC EQU   RPLRBAR                                                  04408000
RPLRSV88 EQU   RPLOPT8                                                  04409000
RPLUNCON EQU   RPLOPT8                                                  04410000
RPLACTV  EQU   RPLOPT8                                                  04411000
RPLSESS  EQU   RPLOPT8                                                  04412000
RPLPEND  EQU   RPLOPT8                                                  04413000
RPLODPRM EQU   RPLOPT8                                                  04414000
RPLODACP EQU   RPLOPT8                                                  04415000
RPLODACQ EQU   RPLOPT8                                                  04416000
RPLRSV78 EQU   RPLOPT7                                                  04417000
RPLTCRNO EQU   RPLOPT7                                                  04418000
RPLRLSOP EQU   RPLOPT7                                                  04419000
RPLTPOST EQU   RPLOPT7                                                  04420000
RPLQOPT  EQU   RPLOPT7                                                  04421000
RPLCNIMM EQU   RPLCNOPT                                                 04422000
RPLCNANY EQU   RPLCNOPT                                                 04423000
RPLCNALL EQU   RPLCNOPT                                                 04424000
RPLRSV68 EQU   RPLOPT6                                                  04425000
RPLRSV67 EQU   RPLOPT6                                                  04426000
RPLLOCK  EQU   RPLOPT6                                                  04427000
RPLNCOND EQU   RPLOPT6                                                  04428000
RPLCOND  EQU   RPLOPT6                                                  04429000
RPLEOT   EQU   RPLUNTYP                                                 04430000
RPLEOM   EQU   RPLUNTYP                                                 04431000
RPLEOB   EQU   RPLUNTYP                                                 04432000
RPLWROPT EQU   RPLOPT5                                                  04433000
RPLNODE  EQU   RPLOPT5                                                  04434000
RPLERACE EQU   RPLWRTYP                                                 04435000
RPLEAU   EQU   RPLWRTYP                                                 04436000
RPLNERAS EQU   RPLWRTYP                                                 04437000
RPLPSOPT EQU   RPLOPT5                                                  04438000
@NM00028 EQU   RPLOPT5                                                  04439000
RPLDLGIN EQU   RPLOPT5                                                  04440000
RPLRLEN  EQU   RPLCOMN+48                                               04441000
RPLCHAIN EQU   RPLNXTRP                                                 04442000
@NM00027 EQU   RPLOPT4                                                  04443000
RPLMKFRM EQU   RPLOPT4                                                  04444000
RPLENDTR EQU   RPLOPT4                                                  04445000
RPLALIGN EQU   RPLOPT3                                                  04446000
RPLFMT   EQU   RPLOPT3                                                  04447000
RPLFLD   EQU   RPLOPT3                                                  04448000
RPLVFY   EQU   RPLOPT3                                                  04449000
RPLBLK   EQU   RPLOPT3                                                  04450000
RPLSFORM EQU   RPLOPT3                                                  04451000
RPLEODS  EQU   RPLOPT3                                                  04452000
RPLNSP   EQU   RPLOPT2                                                  04453000
RPLUPD   EQU   RPLOPT2                                                  04454000
RPLWAITX EQU   RPLOPT2                                                  04455000
RPLLRD   EQU   RPLOPT2                                                  04456000
RPLCNV   EQU   RPLOPT2                                                  04457000
RPLADD   EQU   RPLADR                                                   04458000
RPLECBIN EQU   RPLECBSW                                                 04459000
RPLGEN   EQU   RPLOPT1                                                  04460000
RPLKGE   EQU   RPLOPT1                                                  04461000
RPLSKP   EQU   RPLOPT1                                                  04462000
RPLSEQ   EQU   RPLOPT1                                                  04463000
RPLDIR   EQU   RPLOPT1                                                  04464000
RPLDAF   EQU   RPLARG+2                                                 04465000
RPLSAF   EQU   RPLARG                                                   04466000
RPLTCBPT EQU   RPLCOMN+28                                               04467000
RPLCCHAR EQU   RPLCOMN+20                                               04468000
RPLKEYL  EQU   RPLKEYLE                                                 04469000
RPLRDSOH EQU   RPLFDB3                                                  04470000
RPLRLG   EQU   RPLFDB3                                                  04471000
RPLLGFRC EQU   RPLFDB3                                                  04472000
RPLREOT  EQU   RPLFDB3                                                  04473000
RPLREOM  EQU   RPLFDB3                                                  04474000
RPLREOB  EQU   RPLFDB3                                                  04475000
RPLSV32  EQU   RPLFDB3                                                  04476000
RPLUINPT EQU   RPLFDB3                                                  04477000
RPLSTSAV EQU   RPLFDB2                                                  04478000
RPLCUERR EQU   RPLFDB2                                                  04479000
RPLDLGFL EQU   RPLFDB2                                                  04480000
RPLIOERR EQU   RPLFDB2                                                  04481000
RPLDVUNS EQU   RPLFDB2                                                  04482000
RPLATND  EQU   RPLFDB2                                                  04483000
RPLRVID  EQU   RPLFDB2                                                  04484000
RPLERLK  EQU   RPLFDB2                                                  04485000
RPLSTAT  EQU   RPLFDBWD                                                 04486000
RPLPOST  EQU   RPLECB                                                   04487000
RPLWAIT  EQU   RPLECB                                                   04488000
RPLPLHPT EQU   RPLCOMN+4                                                04489000
RPLLEN2  EQU   RPLLEN                                                   04490000
RPLREQ   EQU   RPLIDWD+2                                                04491000
RPLSTYP  EQU   RPLIDWD+1                                                04492000
RPLID    EQU   RPLIDWD                                                  04493000
@NM00026 EQU   IDADIWA+92                                               04494000
@NM00025 EQU   IDADIWA+88                                               04495000
@NM00024 EQU   IDADIWA+84                                               04496000
@NM00023 EQU   IDADIWA+80                                               04497000
@NM00022 EQU   IDADIWA+76                                               04498000
@NM00021 EQU   IDADIWA+72                                               04499000
@NM00020 EQU   IDADIWA+68                                               04500000
@NM00019 EQU   IDADIWA+64                                               04501000
@NM00018 EQU   IDADIWA+60                                               04502000
@NM00017 EQU   IDADIWA+56                                               04503000
DIWRKCT  EQU   IDADIWA+48                                               04504000
DIWSAVE5 EQU   DIWSAVE+16                                               04505000
DIWSAVE4 EQU   DIWSAVE+12                                               04506000
DIWSAVE3 EQU   DIWSAVE+8                                                04507000
DIWSAVE2 EQU   DIWSAVE+4                                                04508000
DIWSAVE1 EQU   DIWSAVE                                                  04509000
DIWSPLTP EQU   IDADIWA+24                                               04510000
@NM00016 EQU   IDADIWA+6                                                04511000
DIWFSPF  EQU   DIWFLG2                                                  04512000
DIW1ST   EQU   DIWFLG1                                                  04513000
DIWNOT1  EQU   DIWFLG1                                                  04514000
DIWGSPC  EQU   DIWFLG1                                                  04515000
DIWEOKR  EQU   DIWFLG1                                                  04516000
DIWPFERR EQU   DIWFLG1                                                  04517000
DIWCISPL EQU   DIWFLG1                                                  04518000
DIWLEN   EQU   IDADIWA+2                                                04519000
DIWATV   EQU   IDADIWA+1                                                04520000
DIWID    EQU   IDADIWA                                                  04521000
ARDKEYS  EQU   IDAARDB+29                                               04522000
@NM00015 EQU   ARDPRF                                                   04523000
ARDPRFMT EQU   ARDPRF                                                   04524000
ARDPRSS  EQU   ARDPRF                                                   04525000
ARDRELNO EQU   IDAARDB+26                                               04526000
ARDVOLSR EQU   IDAARDB+20                                               04527000
ARDERBA  EQU   IDAARDB+16                                               04528000
ARDHRBA  EQU   IDAARDB+12                                               04529000
ARDHKRBA EQU   IDAARDB+8                                                04530000
ARDNPTR  EQU   IDAARDB+4                                                04531000
ARDLEN   EQU   IDAARDB+2                                                04532000
ARDUSED  EQU   ARDTYPE                                                  04533000
ARDEOD   EQU   ARDTYPE                                                  04534000
ARDUOVFL EQU   ARDTYPE                                                  04535000
ARDSS    EQU   ARDTYPE                                                  04536000
ARDHLI   EQU   ARDTYPE                                                  04537000
ARDKR    EQU   ARDTYPE                                                  04538000
ARDID    EQU   IDAARDB                                                  04539000
IXSLEP   EQU   IDAIXSPL+28                                              04540000
IXSSEP   EQU   IDAIXSPL+24                                              04541000
IXSHEP   EQU   IDAIXSPL+20                                              04542000
IXSPEC   EQU   IDAIXSPL+19                                              04543000
IXSEKON  EQU   IDAIXSPL+18                                              04544000
@NM00014 EQU   IXSBFLG                                                  04545000
IXSLELV  EQU   IXSBFLG                                                  04546000
IXSSSRH  EQU   IXSBFLG                                                  04547000
IXSNOSR  EQU   IDAIXSPL+16                                              04548000
IXSKLEN  EQU   IDAIXSPL+14                                              04549000
IXSTLN   EQU   IDAIXSPL+12                                              04550000
IXSARG   EQU   IDAIXSPL+8                                               04551000
IXSBUFC  EQU   IDAIXSPL+4                                               04552000
IXSSTRBA EQU   IDAIXSPL                                                 04553000
IXKEY    EQU   IDAIXK                                                   04554000
IXSELL   EQU   IDASELL                                                  04555000
IBFLP1   EQU   IBFLP2                                                   04556000
IBFLPL   EQU   IDAIBFLP+1                                               04557000
IBFLPF   EQU   IDAIBFLP                                                 04558000
IXHSEO   EQU   IDAIXH+22                                                04559000
IXHLEO   EQU   IDAIXH+20                                                04560000
IXHFSO   EQU   IDAIXH+18                                                04561000
IXHFLGS  EQU   IDAIXH+17                                                04562000
IXHLV    EQU   IDAIXH+16                                                04563000
IXHXX    EQU   IDAIXH+12                                                04564000
IXHHP    EQU   IDAIXH+8                                                 04565000
IXHBRBA  EQU   IDAIXH+4                                                 04566000
IXHPTLS  EQU   IDAIXH+3                                                 04567000
IXHFLPLN EQU   IDAIXH+2                                                 04568000
IXHLL    EQU   IDAIXH                                                   04569000
KEY      EQU   IDAKEY                                                   04570000
AMDATA   EQU   IDADATA                                                  04571000
RDFLL    EQU   IDARDF+1                                                 04572000
RDFEMPTY EQU   RDFRBYTE                                                 04573000
RDFREPL  EQU   RDFRBYTE                                                 04574000
RDFCTNU  EQU   RDFRBYTE                                                 04575000
RDFTYPE  EQU   RDFRBYTE                                                 04576000
@NM00013 EQU   CIDFLL                                                   04577000
CIDFBUSY EQU   CIDFLL                                                   04578000
CIDFOSET EQU   IDACIDF                                                  04579000
BUFCEND  EQU   IDABUFC+64                                               04580000
BUFXORBA EQU   IDABUFC+44                                               04581000
BUFCNXT2 EQU   IDABUFC+37                                               04582000
BUFCDSPC EQU   IDABUFC+32                                               04583000
BUFCWLEN EQU   BUFCINV                                                  04584000
BUFCNXT1 EQU   IDABUFC+24                                               04585000
BUFCCPA  EQU   IDABUFC+16                                               04586000
@NM00034 EQU   BUFCFLG2                                                 04587000
BUFCEOD  EQU   BUFCFLG2                                                 04588000
BUFCNLAS EQU   BUFCFLG2                                                 04589000
BUFCXDDR EQU   BUFCFLG2                                                 04590000
BUFCFIX  EQU   BUFCIOFL                                                 04591000
BUFCPFCP EQU   BUFCIOFL                                                 04592000
BUFCREAL EQU   BUFCIOFL                                                 04593000
BUFCFMT  EQU   BUFCIOFL                                                 04594000
BUFCEPT  EQU   BUFCFLG1                                                 04595000
BUFCUPG  EQU   BUFCFLG1                                                 04596000
IOECBPT  EQU   IOECB                                                    04597000
IOECBWT  EQU   IOECB                                                    04598000
AMBTRACE EQU   IDAAMB+120                                               04599000
AMBVIOT  EQU   IDAAMB+116                                               04600000
AMBSZCP  EQU   IDAAMB+114                                               04601000
AMBSZFW  EQU   IDAAMB+112                                               04602000
AMBSZWR  EQU   IDAAMB+110                                               04603000
AMBSZRD  EQU   IDAAMB+108                                               04604000
AMBWSHD  EQU   IDAAMB+96                                                04605000
AMBCPA   EQU   IDAAMB+92                                                04606000
AMBBM2SH EQU   IDAAMB+88                                                04607000
AMBRDCNT EQU   AMBCSWD1+2                                               04608000
@NM00012 EQU   AMBCSWD1+1                                               04609000
@NM00011 EQU   AMBAFLG                                                  04610000
AMBCFX   EQU   AMBAFLG                                                  04611000
AMBSIS   EQU   AMBAFLG                                                  04612000
AMBICI   EQU   AMBAFLG                                                  04613000
AMBGSR   EQU   AMBAFLG                                                  04614000
AMBLSR   EQU   AMBAFLG                                                  04615000
@NM00010 EQU   AMBAFLG                                                  04616000
AMBUPLH  EQU   IDAAMB+80                                                04617000
AMBPAMBL EQU   IDAAMB+76                                                04618000
AMBPIXP  EQU   IDAAMB+72                                                04619000
@NM00009 EQU   IDAAMB+68                                                04620000
AMBWKA   EQU   IDAAMB+60                                                04621000
AMBAMBXN EQU   AMBEOVPT                                                 04622000
AMBEDB   EQU   IDAAMB+52                                                04623000
AMBRPT   EQU   IDAAMB+50                                                04624000
AMBPUG   EQU   AMBFLG2                                                  04625000
AMBBUSY  EQU   AMBOFLGS                                                 04626000
AMBEXFG  EQU   AMBOFLGS                                                 04627000
@NM00008 EQU   AMBOFLGS                                                 04628000
AMBOPEN  EQU   AMBOFLGS                                                 04629000
@NM00007 EQU   AMBOFLGS                                                 04630000
AMBDEBAD EQU   AMBDEBPT+1                                               04631000
AMBIFLGS EQU   AMBDEBPT                                                 04632000
AMBAMETH EQU   IDAAMB+43                                                04633000
AMBSDS   EQU   AMBINFL                                                  04634000
AMBUPX   EQU   AMBINFL                                                  04635000
@NM00006 EQU   AMBINFL                                                  04636000
@NM00005 EQU   AMBINFL                                                  04637000
AMBTIOT  EQU   IDAAMB+40                                                04638000
@NM00004 EQU   IDAAMB+38                                                04639000
AMBDDSN  EQU   IDAAMB+35                                                04640000
AMBCDSN  EQU   IDAAMB+32                                                04641000
AMBIOMB  EQU   AMBIOBAD                                                 04642000
@NM00003 EQU   AMBDSORG+1                                               04643000
AMBDORGA EQU   AMBDSORG+1                                               04644000
@NM00002 EQU   AMBDSORG                                                 04645000
AMBUBF   EQU   AMBFLG1                                                  04646000
AMBSPEED EQU   AMBFLG1                                                  04647000
AMBPCAT  EQU   AMBFLG1                                                  04648000
AMBMCAT  EQU   AMBFLG1                                                  04649000
AMBCREAT EQU   AMBFLG1                                                  04650000
@NM00001 EQU   AMBFLG0                                                  04651000
AMBSWSP  EQU   AMBFLG0                                                  04652000
AMBPSDS  EQU   AMBFLG0                                                  04653000
AMBCACB  EQU   IDAAMB+16                                                04654000
AMBLINK  EQU   IDAAMB+4                                                 04655000
AMBLEN   EQU   IDAAMB+2                                                 04656000
AMBRSC   EQU   IDAAMB+1                                                 04657000
AMBID    EQU   IDAAMB                                                   04658000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04659000
@RT00204 EQU   @EL00001                                                 04660000
@RC00218 EQU   @RC00216                                                 04661000
@RF00460 EQU   GREXCLER                                                 04662000
@RT00495 EQU   GREXCLER                                                 04663000
@RC00443 EQU   @EL00003                                                 04664000
@RF00605 EQU   @RC00599                                                 04665000
@RT00721 EQU   WRTLRU                                                   04666000
@RT00747 EQU   INCRBUFC                                                 04667000
@RF00755 EQU   WRTRST1                                                  04668000
@RC00746 EQU   @RC00745                                                 04669000
@RF00786 EQU   WRTEXIT                                                  04670000
@RT00831 EQU   WRTEXIT                                                  04671000
@RT00859 EQU   WRTEXIT                                                  04672000
@RC00898 EQU   @RC00896                                                 04673000
@RT00984 EQU   @EL00001                                                 04674000
@RF01135 EQU   @EL00007                                                 04675000
@RF01194 EQU   GSTOVER1                                                 04676000
@RC01158 EQU   @RC01148                                                 04677000
@RF01311 EQU   @EL00015                                                 04678000
@PB00015 EQU   @PB00016                                                 04679000
@RC00454 EQU   @RC00443                                                 04680000
@RC00901 EQU   @RC00898                                                 04681000
@PB00014 EQU   @PB00015                                                 04682000
@PB00013 EQU   @PB00014                                                 04683000
@PB00012 EQU   @PB00013                                                 04684000
@PB00011 EQU   @PB00012                                                 04685000
@PB00010 EQU   @PB00011                                                 04686000
@PB00009 EQU   @PB00010                                                 04687000
@PB00008 EQU   @PB00009                                                 04688000
@PB00007 EQU   @PB00008                                                 04689000
@PB00006 EQU   @PB00007                                                 04690000
@PB00005 EQU   @PB00006                                                 04691000
@PB00004 EQU   @PB00005                                                 04692000
@ENDDATA EQU   *                                                        04693000
         END   IDA019RY,(C'PLS1750',0701,78180)                         04694000
