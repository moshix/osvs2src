         TITLE 'IDA019SA--CONTROL INTERVAL INITIALIZATION              *00001000
                        '                                               00002000
IDA019SA CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IDA019SA  78.172'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  BALR  @11,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@11                                         0001 00012000
         IDASVR14                                                       00013000
*   RBUFC=PLHDBUFC;                 /* POINT TO CURRENT BUFC         */ 00014000
         L     RBUFC,PLHDBUFC(,RPLH)                               0108 00015000
*   RPARM1=BUFCORBA;                /* GET RBA IN REG        @X04SVMR*/ 00016000
         L     RPARM1,BUFCORBA(,RBUFC)                             0109 00017000
*/*  DETERMINE HOW MANY FREE CONTROL INTERVALS ARE LEFT IN THE     0110 00018000
*    CONTROL AREA AND ALSO THE RBA OF THE NEXT CONTROL AREA.         */ 00019000
*                                                                  0110 00020000
*   DIWSAVE5=AMDCIPCA-(RPARM1X/AMDCINV)///* GET THE NUMBER   @X04SVMR*/ 00021000
*       AMDCIPCA-ONE;               /* OF FREE CINVS IN CA   @X04SVMR   00022000
*                                                            @ZA10887*/ 00023000
         L     @10,AMBIWA(,RAMB)                                   0110 00024000
         L     @05,AMBDSB(,RAMB)                                   0110 00025000
         LH    @15,AMDCIPCA(,@05)                                  0110 00026000
         L     @14,AMDCINV(,@05)                                   0110 00027000
         LR    @07,RPARM1X                                         0110 00028000
         SLR   @06,@06                                             0110 00029000
         DR    @06,@14                                             0110 00030000
         SLR   @06,@06                                             0110 00031000
         DR    @06,@15                                             0110 00032000
         SLR   @15,@06                                             0110 00033000
         BCTR  @15,0                                               0110 00034000
         ST    @15,DIWSAVE5(,@10)                                  0110 00035000
*   DIWSAVE3=RPARM1+(DIWSAVE5+ONE)*AMDCINV;/* NEXT CA RBA            */ 00036000
         LA    @07,1                                               0111 00037000
         ALR   @07,@15                                             0111 00038000
         MR    @06,@14                                             0111 00039000
         ALR   @07,RPARM1                                          0111 00040000
         ST    @07,DIWSAVE3(,@10)                                  0111 00041000
*   RFY                                                            0112 00042000
*     IDARDF BASED(PLHRDFP);        /* DEFINE RDF BASE       @X04SVMR*/ 00043000
*/*  ENSURE ENOUGH SPACE IS AVAILABLE FOR ANY NEW CONTROL AREA THAT     00044000
*    MAY BE NEEDED.                                                  */ 00045000
*                                                                  0113 00046000
*   IF PLHKRE=OFF&                  /* IF EOKR, SPACE HERE           */ 00047000
*       RDF1ST=OFF&                 /* OR WITHIN S.R.        @X04SVMR*/ 00048000
*       AMDFSCA>DIWSAVE5-ONE THEN   /* ELSE GET NEW CA               */ 00049000
         TM    PLHKRE(RPLH),B'00001000'                            0113 00050000
         BNZ   @RF00113                                            0113 00051000
         L     @10,PLHRDFP(,RPLH)                                  0113 00052000
         TM    RDF1ST(@10),B'00010000'                             0113 00053000
         BNZ   @RF00113                                            0113 00054000
         BCTR  @15,0                                               0113 00055000
         CH    @15,AMDFSCA(,@05)                                   0113 00056000
         BNL   @RF00113                                            0113 00057000
*     DO;                                                          0114 00058000
*       CALL GETSPACE;              /* GET NEXT CONTROL AREA         */ 00059000
         BAL   @14,GETSPACE                                        0115 00060000
*       DIWGSPC=ON;                 /* INDICATE NEW CA       @X04SVMR*/ 00061000
         L     @10,AMBIWA(,RAMB)                                   0116 00062000
         OI    DIWGSPC(@10),B'00001000'                            0116 00063000
*     END;                          /* END OF NON-EOKR CODE  @X04SVMR*/ 00064000
*   BUFCSEG=ON;                     /* ASSUME A SPANNED RCD  @X04SVMR*/ 00065000
@RF00113 OI    BUFCSEG(RBUFC),B'01000000'                          0118 00066000
*   DIW1ST=ON;                      /*                       @X04SVMR*/ 00067000
*   DIWNOT1=ON;                     /*                       @X04SVMR*/ 00068000
         L     @10,AMBIWA(,RAMB)                                   0120 00069000
         OI    DIW1ST(@10),B'00000011'                             0120 00070000
*   IF RDF1ST=OFF THEN              /* IF NOT S.R./LAST SEG  @X04SVMR*/ 00071000
         L     @05,PLHRDFP(,RPLH)                                  0121 00072000
         TM    RDF1ST(@05),B'00010000'                             0121 00073000
         BNZ   @RF00121                                            0121 00074000
*     DO;                           /* MAY NEED IX ENTRY     @X04SVMR*/ 00075000
*       DIW1ST=OFF;                 /* REMEMBER RDF1ST OFF   @X04SVMR*/ 00076000
         NI    DIW1ST(@10),B'11111110'                             0123 00077000
*       IF RDFNOT1=OFF THEN         /* IF NOT S.R. RESET FLG @X04SVMR*/ 00078000
         TM    RDFNOT1(@05),B'00100000'                            0124 00079000
         BNZ   @RF00124                                            0124 00080000
*         DO;                                                      0125 00081000
*           DIWNOT1=OFF;            /* REMEMBER RDFNOT1 OFF  @X04SVMR*/ 00082000
         NI    DIWNOT1(@10),B'11111101'                            0126 00083000
*           BUFCSEG=OFF;            /* RESET SPAN RCD FLAG   @X04SVMR*/ 00084000
         NI    BUFCSEG(RBUFC),B'10111111'                          0127 00085000
*         END;                      /* END OF NON S.R.       @X04SVMR*/ 00086000
*/*  IF THE DATA SET IS KEYED, CALL INDEX INSERT SO THAT AN ENTRY WILL  00087000
*    BE MADE IN THE INDEX TO REFLECT THE LAST CONTROL INTERVAL (THE ONE 00088000
*    JUST FILLED).  IF AN ENTRY WILL NOT FIT IN THE SEQUENCE SET,  0129 00089000
*    PREVENT THE CONTROL INTERVAL FROM BEING WRITTEN UNTIL A NEW   0129 00090000
*    CONTROL AREA HAS BEEN OBTAINED AND THE DATA RBA HAS BEEN RESET. */ 00091000
*                                                                  0129 00092000
*       IF AMDDST='1'B              /* IF DATA SET IS KEYED,         */ 00093000
*         THEN                      /* AN INDEX INSERT MUST          */ 00094000
@RF00124 L     @10,AMBDSB(,RAMB)                                   0129 00095000
         TM    AMDDST(@10),B'10000000'                             0129 00096000
         BNO   @RF00129                                            0129 00097000
*         DO;                       /* BE DONE                       */ 00098000
*           RPARM1=ZERO;            /* INDICATE INDEX INSERT         */ 00099000
         SLR   RPARM1,RPARM1                                       0131 00100000
*I01:                                                              0132 00101000
*           DO;                     /* IDACALL(IDA019RG)             */ 00102000
I01      DS    0H                                                  0133 00103000
*             CALL IDA019RG;        /* EXIT TO IDA019RG              */ 00104000
         L     @15,@CV00885                                        0133 00105000
         BALR  @14,@15                                             0133 00106000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00107000
         BALR @11,0                                                     00108000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00109000
         USING *,@11                                                    00110000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00111000
         L     @11,=A(@PSTART)                                          00112000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00113000
         USING @PSTART,@11                                              00114000
*           END I01;                /* INSERT INDEX ENTRY            */ 00115000
*           RBUFC=PLHDBUFC;         /* POINT TO DATA BUFC            */ 00116000
         L     RBUFC,PLHDBUFC(,RPLH)                               0139 00117000
*           RFY                                                    0140 00118000
*             R15 RSTD;             /* SAVE RETURN CODE              */ 00119000
*           IF R15^=ZERO            /* IF ENTRY WILL NOT FIT,        */ 00120000
*             THEN                  /* TRY NEW CONTROL AREA          */ 00121000
*                                                                  0141 00122000
         LTR   R15,R15                                             0141 00123000
         BZ    @RF00141                                            0141 00124000
*             /*******************************************************/ 00125000
*             /*                                                     */ 00126000
*             /* SEGMENT(IXNOFIT)REQUEST                             */ 00127000
*             /*                                                     */ 00128000
*             /*******************************************************/ 00129000
*                                                                  0142 00130000
*             DO;                                                  0142 00131000
*               GOTO IXNOFIT;                                      0143 00132000
         B     IXNOFIT                                             0143 00133000
*IXNOFIT#:                                                         0144 00134000
*             END;                                                 0144 00135000
IXNOFIT# DS    0H                                                  0145 00136000
*           RFY                                                    0145 00137000
*             R15 UNRSTD;           /* DROP RETURN REG       @X04SVMR*/ 00138000
@RF00141 DS    0H                                                  0146 00139000
*         END;                      /* END OF INDEX INSERT           */ 00140000
*     END;                          /* END--NON-S.R./LAST    @X04SVMR*/ 00141000
*                                                                  0147 00142000
*   /*****************************************************************/ 00143000
*   /*                                                               */ 00144000
*   /* HERE IF FIRST OR MIDDLE SPANNED RCD SEG IS IN BUFFER  @X04SVMR*/ 00145000
*   /*                                                               */ 00146000
*   /*****************************************************************/ 00147000
*                                                                  0148 00148000
*   ELSE                            /* RDF1ST IS ON          @X04SVMR*/ 00149000
*     DO;                                                          0148 00150000
         B     @RC00121                                            0148 00151000
@RF00121 DS    0H                                                  0149 00152000
*       IF RDFNOT1=OFF THEN         /* SEE IF 1ST SEG        @X04SVMR*/ 00153000
*                                                                  0149 00154000
         L     @10,PLHRDFP(,RPLH)                                  0149 00155000
         TM    RDFNOT1(@10),B'00100000'                            0149 00156000
         BNZ   @RF00149                                            0149 00157000
*         /***********************************************************/ 00158000
*         /*                                                         */ 00159000
*         /* SEGMENT(SEG1ST)REQUEST                                  */ 00160000
*         /*                                                         */ 00161000
*         /***********************************************************/ 00162000
*                                                                  0150 00163000
*         DO;                                                      0150 00164000
*           GOTO SEG1ST;                                           0151 00165000
         B     SEG1ST                                              0151 00166000
*SEG1ST#:                                                          0152 00167000
*         END;                                                     0152 00168000
SEG1ST#  DS    0H                                                  0153 00169000
*     END;                          /* END--1ST/MIDDLE SEG   @X04SVMR*/ 00170000
@RF00149 DS    0H                                                  0154 00171000
*   RFY                                                            0154 00172000
*    (RWORK1,                                                      0154 00173000
*     RWORK2) UNRSTD;               /* DROP WORK REGS        @X04SVMR*/ 00174000
*                                                                  0154 00175000
@RC00121 DS    0H                                                  0155 00176000
*   /*****************************************************************/ 00177000
*   /*                                                               */ 00178000
*   /* SEGMENT(GETCI)REQUEST                                         */ 00179000
*   /*                                                               */ 00180000
*   /*****************************************************************/ 00181000
*                                                                  0155 00182000
*   DO;                                                            0155 00183000
*     GOTO GETCI;                                                  0156 00184000
         B     GETCI                                               0156 00185000
*GETCI#:                                                           0157 00186000
*   END;                                                           0157 00187000
*                                                                  0157 00188000
GETCI#   DS    0H                                                  0158 00189000
*/*        UPDATE THE HIGH DATA AND KEY POINTERS                   0158 00190000
*    FOR SPEED OR CSDS POINT TO THE CONTROL INTERVAL PAST THE LAST 0158 00191000
*    ONE WHICH WILL HAVE DATA IN IT.  IF KSDS, UPDATE THE HIGH KEY 0158 00192000
*    CONTROL INTERVAL POINTER.                                       */ 00193000
*                                                                  0158 00194000
*UPDARDB:                                                          0158 00195000
*   IF AMBSPEED=ON|                 /* IF SPEED OPTION OR            */ 00196000
*       AMDDST='0'B THEN            /* IF A CSDS, SET                */ 00197000
UPDARDB  TM    AMBSPEED(RAMB),B'00001000'                          0158 00198000
         BO    @RT00158                                            0158 00199000
         L     @10,AMBDSB(,RAMB)                                   0158 00200000
         TM    AMDDST(@10),B'10000000'                             0158 00201000
         BNZ   @RF00158                                            0158 00202000
@RT00158 DS    0H                                                  0159 00203000
*     ARDHRBA=BUFCORBA+AMDCINV;     /* NEW HIGH RBA                  */ 00204000
         L     @10,PLHARDB(,RPLH)                                  0159 00205000
         L     @05,AMBDSB(,RAMB)                                   0159 00206000
         L     @00,BUFCORBA(,RBUFC)                                0159 00207000
         AL    @00,AMDCINV(,@05)                                   0159 00208000
         ST    @00,ARDHRBA(,@10)                                   0159 00209000
*   IF AMDDST='1'B THEN             /* IF KEYED DATA SET,    @X04SVMR*/ 00210000
@RF00158 L     @10,AMBDSB(,RAMB)                                   0160 00211000
         TM    AMDDST(@10),B'10000000'                             0160 00212000
         BNO   @RF00160                                            0160 00213000
*     ARDHKRBA=BUFXIRBA;            /* MAINTAIN HIGH KEY RBA @X04SVMR*/ 00214000
         L     @10,PLHARDB(,RPLH)                                  0161 00215000
         L     @05,BUFXIRBA(,RBUFC)                                0161 00216000
         ST    @05,ARDHKRBA(,@10)                                  0161 00217000
*   AMDASPA=AMDASPA-AMDCINV;        /* DECREMENT AVAILABLE SPACE     */ 00218000
@RF00160 L     @10,AMBDSB(,RAMB)                                   0162 00219000
         L     @05,AMDASPA(,@10)                                   0162 00220000
         SL    @05,AMDCINV(,@10)                                   0162 00221000
         ST    @05,AMDASPA(,@10)                                   0162 00222000
*CISPLITX:                                                         0163 00223000
*   GEN(IDARST14);                  /* RESTORE RETURN REG            */ 00224000
CISPLITX IDARST14                                                       00225000
*   RETURN;                         /* RETURN TO CALLER              */ 00226000
@EL00001 DS    0H                                                  0164 00227000
@EF00001 DS    0H                                                  0164 00228000
@ER00001 BR    @14                                                 0164 00229000
*                                                                  0165 00230000
*/*  EOCA -- FINISH A CONTROL AREA AND PREPARE THE NEXT CONTROL AREA */ 00231000
*/*          IN PHYSICAL SEQUENCE.                                   */ 00232000
*/* FUNCTION - (1)WRITE DATA, (2)WRITE INDEX, (3)IF SPEED, PAD OLD   */ 00233000
*/* CONTROL AREA, (4)GET NEXT CONTROL AREA RBA, (5)IF RECOVERY,      */ 00234000
*/* PREFORMAT NEW CNTL AREA, AND (6)SET WRITE CONDITION FOR NEW RBA. */ 00235000
*/* INPUT - BUFCORBA = LAST RBA USED FOR OUTPUT,                     */ 00236000
*/* DIWSAVE5 = NUMBER OF FREE CONTROL INTERVALS LEFT IN              */ 00237000
*/* OLD CONTROL AREA, DIWSAVE3 = RBA OF NEXT CONTROL AREA, AND       */ 00238000
*/* RBUFC = PLHDBUFC.                                                */ 00239000
*/* OUTPUT - BUFCORBA IS SET, AND PREFORMAT DONE.                    */ 00240000
*                                                                  0165 00241000
*EOCA:                                                             0165 00242000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* HERE TO GET NEW CA            */ 00243000
EOCA     DS    0H                                                  0166 00244000
*   GEN(IDASVR14);                  /* SAVE RETURN REGISTER          */ 00245000
*                                                                  0166 00246000
         IDASVR14                                                       00247000
*   /*****************************************************************/ 00248000
*   /*                                                               */ 00249000
*   /* WRITE OUT RECORDS REMAINING IN OLD CONTROL AREA               */ 00250000
*   /*                                                               */ 00251000
*   /*****************************************************************/ 00252000
*                                                                  0167 00253000
*I05:                                                              0167 00254000
*   DO;                             /* IDACALL(IDAWRBFR)             */ 00255000
I05      DS    0H                                                  0168 00256000
*     CALL IDAWRBFR;                /* EXIT TO IDAWRBFR              */ 00257000
         L     @15,@CV00884                                        0168 00258000
         BALR  @14,@15                                             0168 00259000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00260000
         BALR @11,0                                                     00261000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00262000
         USING *,@11                                                    00263000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00264000
         L     @11,=A(@PSTART)                                          00265000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00266000
         USING @PSTART,@11                                              00267000
*   END I05;                                                       0173 00268000
*   IF RPLERREG^='00'X THEN         /* IF AN ERROR OCCURRED,         */ 00269000
         CLI   RPLERREG(RRPL),0                                    0174 00270000
         BNE   @RT00174                                            0174 00271000
*     GO TO EOCAX;                  /* EXIT                          */ 00272000
*   PLHFRCNT=ZERO;                  /* INDICATE NO MW BUFFERS        */ 00273000
*                                                                  0176 00274000
         MVI   PLHFRCNT(RPLH),X'00'                                0176 00275000
*   /*****************************************************************/ 00276000
*   /*                                                               */ 00277000
*   /* BEFORE LEAVING THE OLD CONTROL AREA, IF IT IS THE SPEED OPTION*/ 00278000
*   /* AND IF THERE IS FREE SPACE LEFT IN THE CONTROL AREA, IT MUST  */ 00279000
*   /* BE PADDED WITH FREE SPACE CONTROL INTERVALS                   */ 00280000
*   /*                                                               */ 00281000
*   /*****************************************************************/ 00282000
*                                                                  0177 00283000
*   IF(AMBSPEED=ON|                 /* IF SPEED OPTION OR IF         */ 00284000
*       AMDDST='0'B)&               /* ESDS AND              @X04SVMR*/ 00285000
*       (DIWSAVE5^=ZERO|            /* FREE SPACE WILL BE LEFT       */ 00286000
*       (DIWEOKR=ON&                /* OR END OF KEY RANGE   @OZA7543*/ 00287000
*       ARDHRBA^=ARDERBA))          /* AND NOT END OF EXTENT @OZA7543*/ 00288000
*     THEN                          /* IN THE OLD CA, IT MUST        */ 00289000
         TM    AMBSPEED(RAMB),B'00001000'                          0177 00290000
         BO    @GL00004                                            0177 00291000
         L     @10,AMBDSB(,RAMB)                                   0177 00292000
         TM    AMDDST(@10),B'10000000'                             0177 00293000
         BNZ   @RF00177                                            0177 00294000
@GL00004 L     @10,AMBIWA(,RAMB)                                   0177 00295000
         L     @05,DIWSAVE5(,@10)                                  0177 00296000
         LTR   @05,@05                                             0177 00297000
         BNZ   @RT00177                                            0177 00298000
         TM    DIWEOKR(@10),B'00010000'                            0177 00299000
         BNO   @RF00177                                            0177 00300000
         L     @10,PLHARDB(,RPLH)                                  0177 00301000
         CLC   ARDHRBA(4,@10),ARDERBA(@10)                         0177 00302000
         BE    @RF00177                                            0177 00303000
@RT00177 DS    0H                                                  0178 00304000
*     DO;                           /* BE PADDED                     */ 00305000
*       RPARM1=BUFCORBA+AMDCINV;    /* GET THE RBA OF 1ST PAD        */ 00306000
         L     @10,AMBDSB(,RAMB)                                   0179 00307000
         L     RPARM1,BUFCORBA(,RBUFC)                             0179 00308000
         AL    RPARM1,AMDCINV(,@10)                                0179 00309000
*       DIWFSPF=ON;                 /* FORCE FS WRITE        @X04SVMR*/ 00310000
*                                                                  0180 00311000
         L     @10,AMBIWA(,RAMB)                                   0180 00312000
         OI    DIWFSPF(@10),B'10000000'                            0180 00313000
*       /*************************************************************/ 00314000
*       /*                                                           */ 00315000
*       /* CALL THE PREFORMAT ROUTINE TO PAD OUT THE OLD CA          */ 00316000
*       /*                                                           */ 00317000
*       /*************************************************************/ 00318000
*                                                                  0181 00319000
*I06:                                                              0181 00320000
*       DO;                         /* IDACALL(IDA019RK)             */ 00321000
I06      DS    0H                                                  0182 00322000
*         CALL IDA019RK;            /* EXIT TO IDA019RK              */ 00323000
         L     @15,@CV00886                                        0182 00324000
         BALR  @14,@15                                             0182 00325000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00326000
         BALR @11,0                                                     00327000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00328000
         USING *,@11                                                    00329000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00330000
         L     @11,=A(@PSTART)                                          00331000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00332000
         USING @PSTART,@11                                              00333000
*       END I06;                                                   0187 00334000
*       DIWFSPF=OFF;                /* RESET FLAG            @X04SVMR*/ 00335000
         L     @10,AMBIWA(,RAMB)                                   0188 00336000
         NI    DIWFSPF(@10),B'01111111'                            0188 00337000
*       IF RPLERREG^='00'X          /* SEE IF ANY ERRORS             */ 00338000
*         THEN                      /* EXIT IF SO                    */ 00339000
         CLI   RPLERREG(RRPL),0                                    0189 00340000
         BNE   @RT00189                                            0189 00341000
*         GO TO EOCAX;              /* EXIT FROM MODULE              */ 00342000
*     END;                          /* END OF PAD OLD CA             */ 00343000
*   RBUFC=PLHDBUFC;                 /* GET CURRENT BUFC              */ 00344000
@RF00177 L     RBUFC,PLHDBUFC(,RPLH)                               0192 00345000
*   BUFCORBA=DIWSAVE3;              /* SET NEW OUTPUT RBA            */ 00346000
         L     @10,AMBIWA(,RAMB)                                   0193 00347000
         L     @05,DIWSAVE3(,@10)                                  0193 00348000
         ST    @05,BUFCORBA(,RBUFC)                                0193 00349000
*   BUFXIRBA=BUFCORBA;              /* SET EXCL CNTL RBA     @X04SVMR*/ 00350000
         ST    @05,BUFXIRBA(,RBUFC)                                0194 00351000
*   BUFXORBA=BUFCORBA;              /* SET EXCL CNTL RBA     @ZA17187*/ 00352000
         ST    @05,BUFXORBA(,RBUFC)                                0195 00353000
*   BUFCDDDD=BUFCORBA;              /* SET FOR LOOK-ASIDE    @X04SVMR*/ 00354000
         ST    @05,BUFCDDDD(,RBUFC)                                0196 00355000
*   BUFCEXC=ON;                     /* GET EXCL CONTROL      @X04SVMR*/ 00356000
*   BUFCVAL=ON;                     /* RBA IS VALID          @X04SVMR*/ 00357000
         OI    BUFCEXC(RBUFC),B'00000110'                          0198 00358000
*   IF DIWEOKR=ON THEN              /* IF END OF KEY RANGE,          */ 00359000
         TM    DIWEOKR(@10),B'00010000'                            0199 00360000
         BNO   @RF00199                                            0199 00361000
*     PLHARDB=ARDNPTR;              /* GO TO NEW ARDB                */ 00362000
*                                                                  0200 00363000
         L     @10,PLHARDB(,RPLH)                                  0200 00364000
         L     @10,ARDNPTR(,@10)                                   0200 00365000
         ST    @10,PLHARDB(,RPLH)                                  0200 00366000
*   /*****************************************************************/ 00367000
*   /*                                                               */ 00368000
*   /* IF THE DATA SET IS KEYED, IT IS NECESSARY TO WRITE OUT THE    */ 00369000
*   /* INDEX FOR THE OLD CONTROL AREA AND TO INITIALIZE THE INDEX FOR*/ 00370000
*   /* THE NEW CONTROL AREA.                                         */ 00371000
*   /*                                                               */ 00372000
*   /*****************************************************************/ 00373000
*                                                                  0201 00374000
*   IF AMDDST='1'B                  /* IF DATA SET IS KEYED,         */ 00375000
*     THEN                          /* AN INDEX MUST BE WRIT-        */ 00376000
@RF00199 L     @10,AMBDSB(,RAMB)                                   0201 00377000
         TM    AMDDST(@10),B'10000000'                             0201 00378000
         BNO   @RF00201                                            0201 00379000
*     DO;                           /* TEN                           */ 00380000
*       RPARM1=IXWRITE;             /* INDICATE AN INDEX WRITE       */ 00381000
         LA    RPARM1,4                                            0203 00382000
*I07:                                                              0204 00383000
*       DO;                         /* IDACALL(IDA019RG)             */ 00384000
I07      DS    0H                                                  0205 00385000
*         CALL IDA019RG;            /* EXIT TO IDA019RG              */ 00386000
         L     @15,@CV00885                                        0205 00387000
         BALR  @14,@15                                             0205 00388000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00389000
         BALR @11,0                                                     00390000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00391000
         USING *,@11                                                    00392000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00393000
         L     @11,=A(@PSTART)                                          00394000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00395000
         USING @PSTART,@11                                              00396000
*       END I07;                                                   0210 00397000
*       RFY                                                        0211 00398000
*         R15 RSTD;                 /* GET RETURN REG        @X04SVMR*/ 00399000
*       IF R15^=ZERO                /* IF AN I/O ERROR OCCUR-        */ 00400000
*         THEN                      /* RED, EXIT FROM MODULE.        */ 00401000
         LTR   R15,R15                                             0212 00402000
         BZ    @RF00212                                            0212 00403000
*         DO;                                                      0213 00404000
*           RFY                                                    0214 00405000
*             R15 UNRSTD;           /* DROP RETURN REG       @X04SVMR*/ 00406000
*EOCAX:                                                            0215 00407000
*           GEN(IDARST14);          /* CAUSE DATA INSERT RETURN      */ 00408000
EOCAX    IDARST14                                                       00409000
*           DIWEOKR=OFF;            /* RESET BIT                     */ 00410000
         L     @10,AMBIWA(,RAMB)                                   0216 00411000
         NI    DIWEOKR(@10),B'11101111'                            0216 00412000
*           GO TO EOCAOUT;          /* EXIT                          */ 00413000
         B     EOCAOUT                                             0217 00414000
*         END;                      /* END OF ERROR CODE             */ 00415000
*     END;                          /* END OF INDEX WRITE            */ 00416000
@RF00212 DS    0H                                                  0220 00417000
*   RBUFC=PLHDBUFC;                 /* PTR TO CURRENT BUFC           */ 00418000
*                                                                  0220 00419000
@RF00201 L     RBUFC,PLHDBUFC(,RPLH)                               0220 00420000
*   /*****************************************************************/ 00421000
*   /*                                                               */ 00422000
*   /* IF IT IS NOT A SPEED CREATE (RECOVERY MODE) IT IS NECESSARY TO*/ 00423000
*   /* PREFORMAT A NEW CONTROL AREA BEFORE WRITING OVER THE END OF   */ 00424000
*   /* DATA CONTROL INTERVAL. THIS IS NECESSARY BECAUSE AN END OF    */ 00425000
*   /* DATA MUST ALWAYS BE PRESENT TO ENABLE VERIFICATION OF THE DATA*/ 00426000
*   /* SET IN THE EVENT IT IS NOT PROPERLY CLOSED.                   */ 00427000
*   /*                                                               */ 00428000
*   /*****************************************************************/ 00429000
*                                                                  0221 00430000
*   IF AMBSPEED=OFF|                /* IF RECOVERY WAS SET OR        */ 00431000
*       PLHENDRQ=ON                 /* CLOSE IS FORCING EOKR,        */ 00432000
*     THEN                          /* PREFORMAT OF ONE CA           */ 00433000
         TM    AMBSPEED(RAMB),B'00001000'                          0221 00434000
         BZ    @RT00221                                            0221 00435000
         TM    PLHENDRQ(RPLH),B'01000000'                          0221 00436000
         BNO   @RF00221                                            0221 00437000
@RT00221 DS    0H                                                  0222 00438000
*     DO;                                                          0222 00439000
*       RPARM1=BUFCORBA;            /* POINT TO NEXT CA RBA          */ 00440000
         L     RPARM1,BUFCORBA(,RBUFC)                             0223 00441000
*       IF ARDHRBA<=RPARM1          /* IF NOT YET PREFORMATTED       */ 00442000
*         THEN                      /* THEN PREFORMAT CA             */ 00443000
         L     @10,PLHARDB(,RPLH)                                  0224 00444000
         CL    RPARM1,ARDHRBA(,@10)                                0224 00445000
         BL    @RF00224                                            0224 00446000
*         DO;                                                      0225 00447000
*                                                                  0225 00448000
*           /*********************************************************/ 00449000
*           /*                                                       */ 00450000
*           /* PREFORMAT THE NEXT CONTROL AREA                       */ 00451000
*           /*                                                       */ 00452000
*           /*********************************************************/ 00453000
*                                                                  0226 00454000
*I08:                                                              0226 00455000
*           DO;                     /* IDACALL(IDA019RK)             */ 00456000
I08      DS    0H                                                  0227 00457000
*             CALL IDA019RK;        /* EXIT TO IDA019RK              */ 00458000
         L     @15,@CV00886                                        0227 00459000
         BALR  @14,@15                                             0227 00460000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00461000
         BALR @11,0                                                     00462000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00463000
         USING *,@11                                                    00464000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00465000
         L     @11,=A(@PSTART)                                          00466000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00467000
         USING @PSTART,@11                                              00468000
*           END I08;                                               0232 00469000
*           IF RPLERREG^='00'X THEN /* IF PREFORMAT ERROR,           */ 00470000
         CLI   RPLERREG(RRPL),0                                    0233 00471000
         BNE   @RT00233                                            0233 00472000
*             GO TO EOCAX;          /* MUST EXIT                     */ 00473000
*           RBUFC=PLHDBUFC;         /* RESET DATA BUFC PTR           */ 00474000
         L     RBUFC,PLHDBUFC(,RPLH)                               0235 00475000
*           ARDHRBA=RPARM1;         /* SET NEW HIGH RBA              */ 00476000
         L     @10,PLHARDB(,RPLH)                                  0236 00477000
         ST    RPARM1,ARDHRBA(,@10)                                0236 00478000
*         END;                      /* END OF PREFORMAT CODE         */ 00479000
*     END;                          /* END, NON SPEED/CREATE         */ 00480000
@RF00224 DS    0H                                                  0239 00481000
*/*  INDICATE THAT THE DATA BUFFER IS TO BE WRITTEN                  */ 00482000
*                                                                  0239 00483000
*   BUFCMW=ON;                      /* SET MUST WRITE ON AGAIN       */ 00484000
@RF00221 OI    BUFCMW(RBUFC),B'10000000'                           0239 00485000
*EOCAOUT:                                                          0240 00486000
*   GEN(IDARST14);                  /* RESTORE RETURN REGISTER       */ 00487000
EOCAOUT  IDARST14                                                       00488000
*   END EOCA;                       /* END OF EOCA CODE              */ 00489000
@EL00002 DS    0H                                                  0241 00490000
@EF00002 DS    0H                                                  0241 00491000
@ER00002 BR    @14                                                 0241 00492000
*                                                                  0242 00493000
*/*                            GETSPACE                              */ 00494000
*/*  FUNCTION = ENSURE ENOUGH SPACE FOR A NEW DATA CONTROL AREA.     */ 00495000
*/*  INPUT = DIWSAVE3 IS THE RBA OF NEXT CONTROL AREA TO BE NEEDED,  */ 00496000
*/*          RAMB IS THE DATA AMB.                                   */ 00497000
*/*  OUTPUT = DIWSAVE3 IS THE RBA OF THE NEXT AVAILABLE CONTROL AREA */ 00498000
*/*          AND ARDHRBA IS UPDATED FOR THE RECOVERY OPTION.         */ 00499000
*                                                                  0242 00500000
*GETSPACE:                                                         0242 00501000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0242 00502000
GETSPACE DS    0H                                                  0243 00503000
*   RFY                                                            0243 00504000
*     R14 RSTD;                     /* SAVE RETURN REGISTER          */ 00505000
*                                                                  0243 00506000
*   /*****************************************************************/ 00507000
*   /*                                                               */ 00508000
*   /* CHECK FOR AN END OF EXTENT CONDITION. IF THE NEW CONTROL AREA */ 00509000
*   /* MATCHES THE ENDING RBA OF THE EXTENT, IT IS NECESSARY TO CALL */ 00510000
*   /* END-OF-VOLUME IN ORDER TO ALLOCATE ANOTHER EXTENT. IF A NEW   */ 00511000
*   /* EXTENT CAN NOT BE ALLOCATED, A NO SPACE FOUND CONDITION IS SET*/ 00512000
*   /* IN THE RPL AND A RETURN IS MADE TO DATA INSERT.               */ 00513000
*   /*                                                               */ 00514000
*   /*****************************************************************/ 00515000
*                                                                  0244 00516000
*   IF DIWSAVE3>=ARDERBA            /* SEE IF END OF ALLOC SP        */ 00517000
*     THEN                          /* IF SO, COME HERE              */ 00518000
         L     @15,AMBIWA(,RAMB)                                   0244 00519000
         L     @10,PLHARDB(,RPLH)                                  0244 00520000
         CLC   DIWSAVE3(4,@15),ARDERBA(@10)                        0244 00521000
         BL    @RF00244                                            0244 00522000
*     DO;                                                          0245 00523000
*       GEN(IDASVR14);              /* SAVE RETURN REGISTER          */ 00524000
         IDASVR14                                                       00525000
*       PLHEOVR=AMBEOVAR;           /* SET ALLOC BY RBA              */ 00526000
         MVI   PLHEOVR(RPLH),B'10000010'                           0247 00527000
*       PLHEOVPT=ADDR(ARDERBA);     /* POINT TO CURR RBA             */ 00528000
         L     @15,PLHARDB(,RPLH)                                  0248 00529000
         LA    @15,ARDERBA(,@15)                                   0248 00530000
         ST    @15,PLHEOVPT(,RPLH)                                 0248 00531000
*I09:                                                              0249 00532000
*       DO;                         /* IDACALL(IDAEOVIF)             */ 00533000
I09      DS    0H                                                  0250 00534000
*         CALL IDAEOVIF;            /* EXIT TO IDAEOVIF              */ 00535000
         L     @15,@CV00880                                        0250 00536000
         BALR  @14,@15                                             0250 00537000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00538000
         BALR @11,0                                                     00539000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00540000
         USING *,@11                                                    00541000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00542000
         L     @11,=A(@PSTART)                                          00543000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00544000
         USING @PSTART,@11                                              00545000
*       END I09;                    /* TRY TO GET MORE SPACE         */ 00546000
*       GEN(IDARST14);              /* EXIT FROM MODULE              */ 00547000
         IDARST14                                                       00548000
*       IF RPLERREG^='00'X          /* IF SPACE COULD NOT BE         */ 00549000
*         THEN                      /* OBTAINED, EXIT.               */ 00550000
         CLI   RPLERREG(RRPL),0                                    0257 00551000
         BE    @RF00257                                            0257 00552000
*         DO;                                                      0258 00553000
*           PLHNOSPC=ON;            /* NO SPACE--CREATE MODE         */ 00554000
         OI    PLHNOSPC(RPLH),B'10000000'                          0259 00555000
*           GEN(IDARST14);          /* EXIT FROM MODULE              */ 00556000
         IDARST14                                                       00557000
*           RETURN;                 /* RETURN TO DATA INSERT         */ 00558000
@EL00003 DS    0H                                                  0261 00559000
@EF00003 DS    0H                                                  0261 00560000
@ER00003 BR    @14                                                 0261 00561000
*         END;                      /* END OF EOV ERROR CODE         */ 00562000
*       RBUFC=PLHDBUFC;             /* RESTORE BUFC PTR              */ 00563000
@RF00257 L     RBUFC,PLHDBUFC(,RPLH)                               0263 00564000
*       PLHNOSPC=OFF;               /* EOV WAS SUCCESSFUL            */ 00565000
         NI    PLHNOSPC(RPLH),B'01111111'                          0264 00566000
*       DIWSAVE3=ARDHRBA;           /* POINT TO NEXT RBA             */ 00567000
         L     @15,AMBIWA(,RAMB)                                   0265 00568000
         L     @10,PLHARDB(,RPLH)                                  0265 00569000
         L     @05,ARDHRBA(,@10)                                   0265 00570000
         ST    @05,DIWSAVE3(,@15)                                  0265 00571000
*       IF AMBSPEED=OFF THEN        /* FOR RECOVERY CREATE           */ 00572000
         TM    AMBSPEED(RAMB),B'00001000'                          0266 00573000
         BNZ   @RF00266                                            0266 00574000
*         ARDHRBA=ARDHRBA+AMDCINV*AMDCIPCA;/* SET SEOF PTR           */ 00575000
         L     @15,AMBDSB(,RAMB)                                   0267 00576000
         L     @00,AMDCINV(,@15)                                   0267 00577000
         MH    @00,AMDCIPCA(,@15)                                  0267 00578000
         ALR   @05,@00                                             0267 00579000
         ST    @05,ARDHRBA(,@10)                                   0267 00580000
*     END;                          /* END OF EOV CALL CODE          */ 00581000
*   END GETSPACE;                   /* END OF GET SPACE CODE         */ 00582000
         B     @EL00003                                            0269 00583000
*                                                                  0270 00584000
*/*   BUILDFS -- BUILD A FREE SPACE CONTROL INTERVAL                 */ 00585000
*/* FUNCTION - BUILD ONE CONTROL OF FREE SPACE IN A DATA BUFFER      */ 00586000
*/* INPUT - RBUFC POINTS TO A DATA BUFC                              */ 00587000
*/* OUTPUT - WORK REGISTERS ARE ALTERED AND  A FREE SPACE CINV IS    */ 00588000
*/*          CREATED IN THE DESIRED BUFFER.  RWORK1 = ADDR(CIDF).    */ 00589000
*                                                                  0270 00590000
*BUILDFS:                                                          0270 00591000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0270 00592000
BUILDFS  DS    0H                                                  0271 00593000
*   RFY                                                            0271 00594000
*    (RWORK1,                                                      0271 00595000
*     RWORK2,                                                      0271 00596000
*     RWORK3,                                                      0271 00597000
*     RWORK4,                                                      0271 00598000
*     RWORK5) RSTD;                 /* GET WORK REGS                 */ 00599000
*   RWORK2=BUFCBAD;                 /* POINT TO CINV                 */ 00600000
         L     RWORK2,BUFCBAD(,RBUFC)                              0272 00601000
*   RWORK3=AMDCINV;                 /* GET LENGTH                    */ 00602000
         L     @15,AMBDSB(,RAMB)                                   0273 00603000
         L     RWORK3,AMDCINV(,@15)                                0273 00604000
*   RWORK5=ZERO;                    /* GET PROPAGATION               */ 00605000
         SLR   RWORK5,RWORK5                                       0274 00606000
*   GEN SETS(RWORK2,RWORK3,RWORK4,RWORK5)(MVCL  RWORK2,RWORK4);/*  0275 00607000
*                                      ZERO                          */ 00608000
         MVCL  RWORK2,RWORK4                                            00609000
*   RWORK1=BUFCBAD+AMDCINV-LENGTH(IDACIDF);/* POINT TO CIDF          */ 00610000
         LA    @15,4                                               0276 00611000
         L     @10,AMBDSB(,RAMB)                                   0276 00612000
         L     @10,AMDCINV(,@10)                                   0276 00613000
         L     RWORK1,BUFCBAD(,RBUFC)                              0276 00614000
         ALR   RWORK1,@10                                          0276 00615000
         SLR   RWORK1,@15                                          0276 00616000
*   RWORK1->CIDFLL=AMDCINV-LENGTH(IDACIDF);/* SET FREE SPACE         */ 00617000
         SLR   @10,@15                                             0277 00618000
         STH   @10,CIDFLL(,RWORK1)                                 0277 00619000
*   RFY                                                            0278 00620000
*    (RWORK4,                                                      0278 00621000
*     RWORK5) UNRSTD;               /* RELEASE WORK REGISTERS        */ 00622000
*   END BUILDFS;                    /* FS CINV BUILT                 */ 00623000
@EL00004 DS    0H                                                  0279 00624000
@EF00004 DS    0H                                                  0279 00625000
@ER00004 BR    @14                                                 0279 00626000
*                                                                  0280 00627000
*/*  INDEX ENTRY DID NOT FIT.  MUST CHANGE RBA OF CI IF IT WAS NOT   */ 00628000
*/*  SPANNED OR IF IT WAS THE FIRST SEGMENT OF A SPANNED RECORD.  IF */ 00629000
*/*  THE LAST RECORD WAS SPANNED AND ITS ENTRY DOES NOT FIT SOME OF  */ 00630000
*/*  ITS CONTROL INTERVALS HAVE ALREADY BEEN WRITTEN PROBABLY.  IN   */ 00631000
*/*  THIS CASE ALLOW THE REMAINING SEGMENT TO BE WRITTEN AND THEN    */ 00632000
*/*  MOVE THE ENTIRE SPANNED RECORD TO THE NEW CONTROL AREA.         */ 00633000
*                                                                  0280 00634000
*   /*****************************************************************/ 00635000
*   /*                                                               */ 00636000
*   /* SEGMENT(IXNOFIT)START                                         */ 00637000
*   /*                                                               */ 00638000
*   /*****************************************************************/ 00639000
*                                                                  0280 00640000
*   DO;                                                            0280 00641000
*     GOTO IXNOFIT@;                                               0281 00642000
*IXNOFIT:                                                          0282 00643000
*   END;                            /* INDEX ENTRY DID NOT FIT       */ 00644000
IXNOFIT  DS    0H                                                  0283 00645000
*   RFY                                                            0283 00646000
*     R15 UNRSTD;                   /* DROP RETURN REG       @X04SVMR*/ 00647000
*   RFY                                                            0284 00648000
*     IDARDF BASED(PLHRDFP);        /* RESET RDF BASE        @X04SVMR*/ 00649000
*   DIWGSPC=OFF;                    /* INDICATE SPACE GOT    @X04SVMR*/ 00650000
         L     @15,AMBIWA(,RAMB)                                   0285 00651000
         NI    DIWGSPC(@15),B'11110111'                            0285 00652000
*   CALL GETSPACE;                  /* MAKE SURE CA AVAILABLE        */ 00653000
         BAL   @14,GETSPACE                                        0286 00654000
*   IF RDFNOT1=OFF THEN             /* IF NON-S.R. DO NOT    @X04SVMR*/ 00655000
         L     @15,PLHRDFP(,RPLH)                                  0287 00656000
         TM    RDFNOT1(@15),B'00100000'                            0287 00657000
         BNZ   @RF00287                                            0287 00658000
*     DO;                           /* WRITE IT IN OLD CA.   @X04SVMR*/ 00659000
*                                                                  0288 00660000
*       /*************************************************************/ 00661000
*       /*                                                           */ 00662000
*       /* INDICATE THAT THE LAST RECORD IN THE CONTROL AREA IS PRIOR*/ 00663000
*       /* TO THE ONE TO BE MOVED AND THAT SPACE IS LEFT IN THE      */ 00664000
*       /* CONTROL AREA SO THAT PADDING WILL OCCUR IF NECESSARY.     */ 00665000
*       /*                                                           */ 00666000
*       /*************************************************************/ 00667000
*                                                                  0289 00668000
*       IF AMBJRN=ON THEN           /* SAVE RBA TO BE SHIFTED        */ 00669000
         TM    AMBJRN(RAMB),B'00000010'                            0289 00670000
         BNO   @RF00289                                            0289 00671000
*         PLHJORBA=BUFCORBA;        /* FOR THE JOURNAL EXIT.         */ 00672000
         L     @15,BUFCORBA(,RBUFC)                                0290 00673000
         ST    @15,PLHJORBA(,RPLH)                                 0290 00674000
*       BUFCORBA=BUFCORBA-AMDCINV;  /* BACK UP ONE CINV              */ 00675000
@RF00289 L     @15,AMBDSB(,RAMB)                                   0291 00676000
         L     @10,BUFCORBA(,RBUFC)                                0291 00677000
         SL    @10,AMDCINV(,@15)                                   0291 00678000
         ST    @10,BUFCORBA(,RBUFC)                                0291 00679000
*       DIWSAVE5=ONE+DIWSAVE5;      /* ONE MORE CINV IN CA           */ 00680000
         L     @15,AMBIWA(,RAMB)                                   0292 00681000
         LA    @10,1                                               0292 00682000
         AL    @10,DIWSAVE5(,@15)                                  0292 00683000
         ST    @10,DIWSAVE5(,@15)                                  0292 00684000
*       BUFCVAL=OFF;                /* RBA NOT VALID         @X04SVMR*/ 00685000
         NI    BUFCVAL(RBUFC),B'11111011'                          0293 00686000
*       ARDHKRBA=DIWSAVE3;          /* SET HIGH KEY RBA AS RBA OF NEW   00687000
*                                      CA                    @ZA02289*/ 00688000
         L     @10,PLHARDB(,RPLH)                                  0294 00689000
         L     @15,DIWSAVE3(,@15)                                  0294 00690000
         ST    @15,ARDHKRBA(,@10)                                  0294 00691000
*       BUFCMW=OFF;                 /* DATA CINV WILL GO ELSE-       */ 00692000
         NI    BUFCMW(RBUFC),B'01111111'                           0295 00693000
*       CALL EOCA;                  /* WHERE--DONT WRITE IT          */ 00694000
*                                                                  0296 00695000
         BAL   @14,EOCA                                            0296 00696000
*       /*************************************************************/ 00697000
*       /*                                                           */ 00698000
*       /* IF JOURNALING IS BEING DONE, NOTIFY USER OF RBA CHANGE    */ 00699000
*       /*                                                           */ 00700000
*       /*************************************************************/ 00701000
*                                                                  0297 00702000
*       IF AMBJRN=ON                /* SEE IF A JOURNAL EXIT         */ 00703000
*         THEN                      /* WAS SPECIFIED.                */ 00704000
         TM    AMBJRN(RAMB),B'00000010'                            0297 00705000
         BNO   @RF00297                                            0297 00706000
*         DO;                                                      0298 00707000
*           PLHJCODE=PLHJRBAC;      /* RBA CHANGE CODE               */ 00708000
         MVI   PLHJCODE(RPLH),B'00001100'                          0299 00709000
*           PLHJNRBA=DIWSAVE3;      /* SET NEW RBA                   */ 00710000
         L     @15,AMBIWA(,RAMB)                                   0300 00711000
         L     @15,DIWSAVE3(,@15)                                  0300 00712000
         ST    @15,PLHJNRBA(,RPLH)                                 0300 00713000
*           PLHJRNLL=PLHRECP-BUFCBAD;/* SET LENGTH OF DATA           */ 00714000
         L     @15,PLHRECP(,RPLH)                                  0301 00715000
         SL    @15,BUFCBAD(,RBUFC)                                 0301 00716000
         ST    @15,PLHJRNLL(,RPLH)                                 0301 00717000
*I11:                                                              0302 00718000
*           DO;                     /* IDACALL(IDATJXIT)             */ 00719000
I11      DS    0H                                                  0303 00720000
*             CALL IDATJXIT;        /* EXIT TO IDATJXIT              */ 00721000
         L     @15,@CV00883                                        0303 00722000
         BALR  @14,@15                                             0303 00723000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00724000
         BALR @11,0                                                     00725000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00726000
         USING *,@11                                                    00727000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00728000
         L     @11,=A(@PSTART)                                          00729000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00730000
         USING @PSTART,@11                                              00731000
*           END I11;                /* TAKE JOURNAL EXIT             */ 00732000
*         END;                      /* END OF JOURNAL EXIT           */ 00733000
*       DIWSAVE5=AMDCIPCA-ONE;      /* RESET FREE CINV COUNT         */ 00734000
@RF00297 L     @15,AMBIWA(,RAMB)                                   0310 00735000
         L     @10,AMBDSB(,RAMB)                                   0310 00736000
         LH    @10,AMDCIPCA(,@10)                                  0310 00737000
         BCTR  @10,0                                               0310 00738000
         ST    @10,DIWSAVE5(,@15)                                  0310 00739000
*     END;                          /* END OF NON-SR CODE    @X04SVMR*/ 00740000
*   ELSE                            /* HERE TO MOVE S.R.     @X04SVMR*/ 00741000
*                                                                  0312 00742000
*     /***************************************************************/ 00743000
*     /*                                                             */ 00744000
*     /* SEGMENT(MOVESR)REQUEST                                      */ 00745000
*     /*                                                             */ 00746000
*     /***************************************************************/ 00747000
*                                                                  0312 00748000
*     DO;                                                          0312 00749000
         B     @RC00287                                            0312 00750000
@RF00287 DS    0H                                                  0313 00751000
*       GOTO MOVESR;                                               0313 00752000
         B     MOVESR                                              0313 00753000
*MOVESR#:                                                          0314 00754000
*     END;                                                         0314 00755000
MOVESR#  DS    0H                                                  0315 00756000
*   DIWSAVE3=DIWSAVE3+AMDCINV*AMDCIPCA;/* PT TO NEXT CA BDY          */ 00757000
@RC00287 L     @15,AMBIWA(,RAMB)                                   0315 00758000
         L     @10,AMBDSB(,RAMB)                                   0315 00759000
         L     @00,AMDCINV(,@10)                                   0315 00760000
         MH    @00,AMDCIPCA(,@10)                                  0315 00761000
         AL    @00,DIWSAVE3(,@15)                                  0315 00762000
         ST    @00,DIWSAVE3(,@15)                                  0315 00763000
*   RPARM1=ZERO;                    /* INDICATE INDEX INSERT         */ 00764000
         SLR   RPARM1,RPARM1                                       0316 00765000
*I13:                                                              0317 00766000
*   DO;                             /* IDACALL(IDA019RG)             */ 00767000
I13      DS    0H                                                  0318 00768000
*     CALL IDA019RG;                /* EXIT TO IDA019RG              */ 00769000
         L     @15,@CV00885                                        0318 00770000
         BALR  @14,@15                                             0318 00771000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 00772000
         BALR @11,0                                                     00773000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 00774000
         USING *,@11                                                    00775000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 00776000
         L     @11,=A(@PSTART)                                          00777000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 00778000
         USING @PSTART,@11                                              00779000
*   END I13;                        /* INSERT ENTRY IN INDEX         */ 00780000
*   RFY                                                            0324 00781000
*     R15 RSTD;                     /* GET RETURN CODE       @X04SVMR   00782000
*                                      IF ENTRY STILL NOT FITTING, 0324 00783000
*                                      INDEX CREATE IS WAITING TO BE    00784000
*                                      CALLED AGAIN FROM ENDREQ SO 0324 00785000
*                                      THAT IT CAN UPDATE THE DUMMY     00786000
*                                      ENTRY AND SET THE BASE RBA  0324 00787000
*                                      FROM BUFCORBA                 */ 00788000
*   RBUFC=PLHDBUFC;                 /* POINT TO CURRENT DBUFC        */ 00789000
         L     RBUFC,PLHDBUFC(,RPLH)                               0325 00790000
*   IF R15^=ZERO THEN               /* IF AN ERROR OCCURRED          */ 00791000
         LTR   R15,R15                                             0326 00792000
         BNZ   @RT00326                                            0326 00793000
*     GO TO UPDARDB;                /* ENDREQ WILL CALL AGAIN        */ 00794000
*                                                                  0327 00795000
*   /*****************************************************************/ 00796000
*   /*                                                               */ 00797000
*   /* SEGMENT(IXNOFIT)FINISH                                        */ 00798000
*   /*                                                               */ 00799000
*   /*****************************************************************/ 00800000
*                                                                  0328 00801000
*   DO;                                                            0328 00802000
*     GOTO IXNOFIT#;                                               0329 00803000
         B     IXNOFIT#                                            0329 00804000
*IXNOFIT@:                                                         0330 00805000
*   END;                                                           0330 00806000
IXNOFIT@ DS    0H                                                  0331 00807000
*                                                                  0331 00808000
*   /*****************************************************************/ 00809000
*   /*                                                               */ 00810000
*   /* HERE IF THE FIRST SEGMENT OF A SPANNED RECORD         @X04SVMR*/ 00811000
*   /* SEGMENT(SEG1ST)START                                          */ 00812000
*   /*                                                               */ 00813000
*   /*****************************************************************/ 00814000
*                                                                  0331 00815000
*   DO;                                                            0331 00816000
*     GOTO SEG1ST@;                                                0332 00817000
         B     SEG1ST@                                             0332 00818000
*SEG1ST:                                                           0333 00819000
*   END;                            /* FIRST SEGMENT                 */ 00820000
SEG1ST   DS    0H                                                  0334 00821000
*   RFY                                                            0334 00822000
*    (RWORK1,                                                      0334 00823000
*     RWORK2) RSTD;                 /* GET WORK REGISTERS    @X04SVMR*/ 00824000
*   DIWNOT1=OFF;                    /* INDICATE 1ST SEGMENT  @X04SVMR*/ 00825000
*                                                                  0335 00826000
         L     @10,AMBIWA(,RAMB)                                   0335 00827000
         NI    DIWNOT1(@10),B'11111101'                            0335 00828000
*   /*****************************************************************/ 00829000
*   /*                                                               */ 00830000
*   /* DETERMINE THE NUMBER OF CONTROL INTERVALS REQUIRED    @X04SVMR*/ 00831000
*   /*                                                               */ 00832000
*   /*****************************************************************/ 00833000
*                                                                  0336 00834000
*   RWORK1=PLHNOSEG-ONE;            /* SAVE SEGMENT COUNT    @X04SVMR*/ 00835000
         LH    RWORK1,PLHNOSEG(,RPLH)                              0336 00836000
         BCTR  RWORK1,0                                            0336 00837000
*   BUFXIRBA=BUFCORBA;              /* SET EXCL CNTL RBA     @X04SVMR*/ 00838000
         L     @00,BUFCORBA(,RBUFC)                                0337 00839000
         ST    @00,BUFXIRBA(,RBUFC)                                0337 00840000
*   RWORK2=DIWSAVE5-AMDFSCA;        /* GET NO OF CIS TIL FS  @X04SVMR*/ 00841000
*                                                                  0338 00842000
         L     @10,DIWSAVE5(,@10)                                  0338 00843000
         L     @09,AMBDSB(,RAMB)                                   0338 00844000
         LR    RWORK2,@10                                          0338 00845000
         SH    RWORK2,AMDFSCA(,@09)                                0338 00846000
*   /*****************************************************************/ 00847000
*   /*                                                               */ 00848000
*   /* IF THERE ARE NOT ENOUGH CIS LEFT IN THE CA OR IF USING THIS CA*/ 00849000
*   /* WOULD CAUSE A POORER USAGE OF THE FREE SPACE QUANTITY, GET A  */ 00850000
*   /* NEW CA UNLESS TO DO SO WOULD CAUSE A CONTROL AREA TO BE       */ 00851000
*   /* COMPLETELY EMPTY.                                     @X04SVMR*/ 00852000
*   /*                                                               */ 00853000
*   /*****************************************************************/ 00854000
*                                                                  0339 00855000
*   IF RWORK1>DIWSAVE5|(RWORK1>=TWO*RWORK2&AMDCIPCA^=DIWSAVE5) THEN/*   00856000
*                                      READY FOR NEW CA      @X04SVMR*/ 00857000
         CR    RWORK1,@10                                          0339 00858000
         BH    @RT00339                                            0339 00859000
         LR    @00,RWORK2                                          0339 00860000
         ALR   @00,@00                                             0339 00861000
         CLR   RWORK1,@00                                          0339 00862000
         BL    @RF00339                                            0339 00863000
         CH    @10,AMDCIPCA(,@09)                                  0339 00864000
         BE    @RF00339                                            0339 00865000
@RT00339 DS    0H                                                  0340 00866000
*     DO;                           /*                       @X04SVMR*/ 00867000
*       DIWGSPC=OFF;                /* INDICATE SPACE GOT    @X04SVMR*/ 00868000
         L     @10,AMBIWA(,RAMB)                                   0341 00869000
         NI    DIWGSPC(@10),B'11110111'                            0341 00870000
*       CALL GETSPACE;              /* GET NEW CA            @X04SVMR*/ 00871000
         BAL   @14,GETSPACE                                        0342 00872000
*       PLHJORBA=BUFCORBA;          /* SAVE ORIGINAL RBA     @X04SVMR*/ 00873000
         L     @10,BUFCORBA(,RBUFC)                                0343 00874000
         ST    @10,PLHJORBA(,RPLH)                                 0343 00875000
*       BUFCORBA=BUFCORBA-AMDCINV;  /* BACK UP ONE CINV      @X04SVMR*/ 00876000
         L     @09,AMBDSB(,RAMB)                                   0344 00877000
         L     @09,AMDCINV(,@09)                                   0344 00878000
         SLR   @10,@09                                             0344 00879000
         ST    @10,BUFCORBA(,RBUFC)                                0344 00880000
*       DIWSAVE5=ONE+DIWSAVE5;      /* ONE MORE CINV IN CA   @X04SVMR*/ 00881000
         L     @10,AMBIWA(,RAMB)                                   0345 00882000
         LA    @00,1                                               0345 00883000
         AL    @00,DIWSAVE5(,@10)                                  0345 00884000
         ST    @00,DIWSAVE5(,@10)                                  0345 00885000
*       BUFCVAL=OFF;                /* RBA NOT VALID         @X04SVMR*/ 00886000
         NI    BUFCVAL(RBUFC),B'11111011'                          0346 00887000
*       BUFCMW=OFF;                 /* DATA CI WILL MOVE     @X04SVMR*/ 00888000
         NI    BUFCMW(RBUFC),B'01111111'                           0347 00889000
*       IF AMBJRN=ON THEN           /* IF JRNAD PRESENT      @X04SVMR*/ 00890000
         TM    AMBJRN(RAMB),B'00000010'                            0348 00891000
         BNO   @RF00348                                            0348 00892000
*         DO;                       /* JOURNAL RBA CHANGE    @X04SVMR*/ 00893000
*           PLHJCODE=PLHJRBAC;      /* RBA CHANGE            @X04SVMR*/ 00894000
         MVI   PLHJCODE(RPLH),B'00001100'                          0350 00895000
*           PLHJNRBA=DIWSAVE3;      /* NEW RBA               @X04SVMR*/ 00896000
         L     @10,DIWSAVE3(,@10)                                  0351 00897000
         ST    @10,PLHJNRBA(,RPLH)                                 0351 00898000
*           PLHJRNLL=AMDCINV;       /* LENGTH OF DATA        @X04SVMR*/ 00899000
         ST    @09,PLHJRNLL(,RPLH)                                 0352 00900000
*I16:                                                              0353 00901000
*           DO;                     /* IDACALL(IDATJXIT)             */ 00902000
I16      DS    0H                                                  0354 00903000
*             CALL IDATJXIT;        /* EXIT TO IDATJXIT              */ 00904000
         L     @15,@CV00883                                        0354 00905000
         BALR  @14,@15                                             0354 00906000
*             GEN(BALR @11,0);      /* LOAD ADDR OF REENTRY          */ 00907000
         BALR @11,0                                                     00908000
*             GEN(USING *,@11);     /* ESTABLISH ADDRESSING          */ 00909000
         USING *,@11                                                    00910000
*             GEN(L     @11,=A(@PSTART));/* RELOAD BASE              */ 00911000
         L     @11,=A(@PSTART)                                          00912000
*             GEN(USING @PSTART,@11);/* ESTABLISH ADDRESSING         */ 00913000
         USING @PSTART,@11                                              00914000
*           END I16;                /* TAKE JRNAD EXIT       @X04SVMR*/ 00915000
*         END;                      /* END OF JRNAD CODE     @X04SVMR*/ 00916000
*       CALL EOCA;                  /* GET NEW CA            @X04SVMR*/ 00917000
@RF00348 BAL   @14,EOCA                                            0361 00918000
*       DIWSAVE5=AMDCIPCA-ONE;      /* RESET FREE CINV COUNT @X04SVMR*/ 00919000
         L     @10,AMBIWA(,RAMB)                                   0362 00920000
         L     @09,AMBDSB(,RAMB)                                   0362 00921000
         LH    @00,AMDCIPCA(,@09)                                  0362 00922000
         BCTR  @00,0                                               0362 00923000
         ST    @00,DIWSAVE5(,@10)                                  0362 00924000
*     END;                          /* END OF NEW CA NEEDED  @X04SVMR*/ 00925000
*                                                                  0363 00926000
*   /*****************************************************************/ 00927000
*   /*                                                               */ 00928000
*   /* IF ADDING TO ESDS WITH AN UPGRADE SET PRESENT, MUST DO THE    */ 00929000
*   /* UPGRADE FIRST.                                        @X04SVMR*/ 00930000
*   /*                                                               */ 00931000
*   /*****************************************************************/ 00932000
*                                                                  0364 00933000
*   IF AMBUPX=ON&                   /* UPGRADE SET HERE?     @X04SVMR*/ 00934000
*       AMDDST='0'B THEN            /* ESDS?                 @X04SVMR*/ 00935000
@RF00339 TM    AMBUPX(RAMB),B'00000010'                            0364 00936000
         BNO   @RF00364                                            0364 00937000
         L     @10,AMBDSB(,RAMB)                                   0364 00938000
         TM    AMDDST(@10),B'10000000'                             0364 00939000
         BNZ   @RF00364                                            0364 00940000
*     DO;                           /* YES, CALL UPGRADE.    @X04SVMR*/ 00941000
*       RPLDDDD=BUFXIRBA;           /* SET RBA IN RPL.       @X04SVMR*/ 00942000
         L     @10,BUFXIRBA(,RBUFC)                                0366 00943000
         ST    @10,RPLDDDD(,RRPL)                                  0366 00944000
*I17:                                                              0367 00945000
*       DO;                         /* IDACALL(IDA019RU)             */ 00946000
I17      DS    0H                                                  0368 00947000
*         CALL IDA019RU;            /* EXIT TO IDA019RU              */ 00948000
         L     @15,@CV00887                                        0368 00949000
         BALR  @14,@15                                             0368 00950000
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */ 00951000
         BALR @11,0                                                     00952000
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */ 00953000
         USING *,@11                                                    00954000
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */ 00955000
         L     @11,=A(@PSTART)                                          00956000
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */ 00957000
         USING @PSTART,@11                                              00958000
*       END I17;                    /* CALL AIX UPGRADE.     @X04SVMR*/ 00959000
*       RBUFC=PLHDBUFC;             /* RESTORE BUFC REG      @X04SVMR*/ 00960000
         L     RBUFC,PLHDBUFC(,RPLH)                               0374 00961000
*       IF RPLERREG^='00'X THEN     /* SEE IF UPGRADE OK.    @X04SVMR*/ 00962000
         CLI   RPLERREG(RRPL),0                                    0375 00963000
         BE    @RF00375                                            0375 00964000
*         DO;                       /* IF NOT, STOP INSERT.  @X04SVMR*/ 00965000
*           BUFCMW=OFF;             /* DO NOT WRITE BUFFER.  @X04SVMR*/ 00966000
         NI    BUFCMW(RBUFC),B'01111111'                           0377 00967000
*           BUFCVAL=OFF;            /* CONTENTS ARE INVALID  @X04SVMR*/ 00968000
*                                                                  0378 00969000
         NI    BUFCVAL(RBUFC),B'11111011'                          0378 00970000
*           /*********************************************************/ 00971000
*           /*                                                       */ 00972000
*           /* GO AHEAD AND LET AN EMPTY CI BE CREATED. BUT FIRST    */ 00973000
*           /* DECREMENT THE RBAS IN THE BUFC.               @X04SVMR*/ 00974000
*           /*                                                       */ 00975000
*           /*********************************************************/ 00976000
*                                                                  0379 00977000
*           BUFCORBA=BUFCORBA-AMDCINV;/* BACK UP 1 CINV      @X04SVMR*/ 00978000
         L     @10,AMBDSB(,RAMB)                                   0379 00979000
         L     @00,BUFCORBA(,RBUFC)                                0379 00980000
         SL    @00,AMDCINV(,@10)                                   0379 00981000
         ST    @00,BUFCORBA(,RBUFC)                                0379 00982000
*           BUFXIRBA=BUFCORBA;      /*                       @X04SVMR*/ 00983000
         ST    @00,BUFXIRBA(,RBUFC)                                0380 00984000
*         END;                      /* END OF UPGRADE ERROR  @X04SVMR*/ 00985000
*     END;                          /* END OF UPGRADE CALL.  @X04VSMR*/ 00986000
*                                                                  0382 00987000
@RF00375 DS    0H                                                  0383 00988000
*   /*****************************************************************/ 00989000
*   /*                                                               */ 00990000
*   /* SEGMENT(SEG1ST)FINISH                                         */ 00991000
*   /*                                                               */ 00992000
*   /*****************************************************************/ 00993000
*                                                                  0383 00994000
*   DO;                                                            0383 00995000
@RF00364 DS    0H                                                  0384 00996000
*     GOTO SEG1ST#;                                                0384 00997000
         B     SEG1ST#                                             0384 00998000
*SEG1ST@:                                                          0385 00999000
*   END;                                                           0385 01000000
SEG1ST@  DS    0H                                                  0386 01001000
*                                                                  0386 01002000
*/*  WRITE OUT REST OF SPANNED RECORD AND DO ANY PREFORMATTING       */ 01003000
*/*  THAT IS NECESSARY.  THEN MOVE THE SPANNED RECORD TO THE NEW     */ 01004000
*/*  CONTROL AREA.                                                   */ 01005000
*                                                                  0386 01006000
*   /*****************************************************************/ 01007000
*   /*                                                               */ 01008000
*   /* SEGMENT(MOVESR)START                                          */ 01009000
*   /*                                                               */ 01010000
*   /*****************************************************************/ 01011000
*                                                                  0386 01012000
*   DO;                                                            0386 01013000
*     GOTO MOVESR@;                                                0387 01014000
         B     MOVESR@                                             0387 01015000
*MOVESR:                                                           0388 01016000
*   END;                            /* MOVE SPANNED RECORD           */ 01017000
MOVESR   DS    0H                                                  0389 01018000
*   BUFXORBA=BUFXIRBA;              /* SAVE ORIGINAL RBA     @X04SVMR*/ 01019000
         L     @10,BUFXIRBA(,RBUFC)                                0389 01020000
         ST    @10,BUFXORBA(,RBUFC)                                0389 01021000
*   CALL EOCA;                      /* FINISH OLD CA         @X04SVMR*/ 01022000
*                                                                  0390 01023000
         BAL   @14,EOCA                                            0390 01024000
*   /*****************************************************************/ 01025000
*   /*                                                               */ 01026000
*   /* MOVE SPANNED RECORD TO NEW CONTROL AREA               @X04SVMR*/ 01027000
*   /*                                                               */ 01028000
*   /*****************************************************************/ 01029000
*                                                                  0391 01030000
*   DIWSAVE4=BUFXORBA;              /* SET FIRST RBA OF S.R. @X04SVMR*/ 01031000
         L     @10,AMBIWA(,RAMB)                                   0391 01032000
         L     @00,BUFXORBA(,RBUFC)                                0391 01033000
         ST    @00,DIWSAVE4(,@10)                                  0391 01034000
*   DIWSAVE5=DIWSAVE4;              /* SAVE FOR LATER        @X04SVMR*/ 01035000
         ST    @00,DIWSAVE5(,@10)                                  0392 01036000
*   DIWSAVE1=DIWSAVE3;              /* GET 1ST RBA IN NEW CA @X04SVMR*/ 01037000
         L     @00,DIWSAVE3(,@10)                                  0393 01038000
         ST    @00,DIWSAVE1(,@10)                                  0393 01039000
*I20:                                                              0394 01040000
*   DO;                             /* IDACALL(IDAFREEB)             */ 01041000
I20      DS    0H                                                  0395 01042000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 01043000
         L     @15,@CV00888                                        0395 01044000
         BALR  @14,@15                                             0395 01045000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01046000
         BALR @11,0                                                     01047000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01048000
         USING *,@11                                                    01049000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01050000
         L     @11,=A(@PSTART)                                          01051000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01052000
         USING @PSTART,@11                                              01053000
*   END I20;                        /* FREE OLD BUFFER       @X04SVLP*/ 01054000
*                                                                  0400 01055000
*   /*****************************************************************/ 01056000
*   /*                                                               */ 01057000
*   /* COPY THE SPANNED RECORD TO NEW CONTROL AREA           @X04SVMR*/ 01058000
*   /*                                                               */ 01059000
*   /*****************************************************************/ 01060000
*                                                                  0401 01061000
*   DO DIWSAVE2=ONE TO PLHNOSEG;                                   0401 01062000
         LA    @10,1                                               0401 01063000
         B     @DE00401                                            0401 01064000
@DL00401 DS    0H                                                  0402 01065000
*     RPARM1=DIWSAVE4;              /* GET RBA OF S.R. SEG   @X04SVMR*/ 01066000
         L     @10,AMBIWA(,RAMB)                                   0402 01067000
         L     RPARM1,DIWSAVE4(,@10)                               0402 01068000
*I21:                                                              0403 01069000
*     DO;                           /* IDACALL(IDAGRB)               */ 01070000
I21      DS    0H                                                  0404 01071000
*       CALL IDAGRB;                /* EXIT TO IDAGRB                */ 01072000
         L     @15,@CV00882                                        0404 01073000
         BALR  @14,@15                                             0404 01074000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01075000
         BALR @11,0                                                     01076000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01077000
         USING *,@11                                                    01078000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01079000
         L     @11,=A(@PSTART)                                          01080000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01081000
         USING @PSTART,@11                                              01082000
*     END I21;                      /* READ IN S.R. SEG      @X04SVMR*/ 01083000
*     IF RPLERREG^='00'X THEN       /* IF ERROR, EXIT.       @X04SVMR*/ 01084000
         CLI   RPLERREG(RRPL),0                                    0410 01085000
         BNE   @RT00410                                            0410 01086000
*       GO TO CISPLITX;             /* STOP CI SPLIT         @X04SVMR*/ 01087000
*     RPARM1=DIWSAVE1;              /* GET RBA IN NEW CA     @X04SVMR*/ 01088000
         L     @10,AMBIWA(,RAMB)                                   0412 01089000
         L     @09,DIWSAVE1(,@10)                                  0412 01090000
         LR    RPARM1,@09                                          0412 01091000
*     DO;                           /* SET OUTPUT RBA                */ 01092000
*       BUFCORBA=RPARM1;                                           0414 01093000
         ST    RPARM1,BUFCORBA(,RBUFC)                             0414 01094000
*       BUFCMW=ON;                  /* SET MUST WRITE                */ 01095000
         OI    BUFCMW(RBUFC),B'10000000'                           0415 01096000
*     END;                          /* SET MW AND OUTPUT RBA @X04SVMR*/ 01097000
*     IF AMBJRN=ON THEN             /* IF JRNAD SPECIFIED    @X04SVMR*/ 01098000
         TM    AMBJRN(RAMB),B'00000010'                            0417 01099000
         BNO   @RF00417                                            0417 01100000
*       DO;                                                        0418 01101000
*         PLHJCODE=PLHJRBAC;        /* INDICATE RBA CHANGE   @X04SVMR*/ 01102000
         MVI   PLHJCODE(RPLH),B'00001100'                          0419 01103000
*         PLHJORBA=DIWSAVE4;        /* SET OLD RBA           @X04SVMR*/ 01104000
         L     @10,DIWSAVE4(,@10)                                  0420 01105000
         ST    @10,PLHJORBA(,RPLH)                                 0420 01106000
*         PLHJNRBA=DIWSAVE1;        /* SET NEW RBA           @X04SVMR*/ 01107000
         ST    @09,PLHJNRBA(,RPLH)                                 0421 01108000
*         PLHJRNLL=AMDCINV;         /* SET LENGTH OF MOVE    @X04SVMR*/ 01109000
         L     @10,AMBDSB(,RAMB)                                   0422 01110000
         L     @10,AMDCINV(,@10)                                   0422 01111000
         ST    @10,PLHJRNLL(,RPLH)                                 0422 01112000
*I23:                                                              0423 01113000
*         DO;                       /* IDACALL(IDATJXIT)             */ 01114000
I23      DS    0H                                                  0424 01115000
*           CALL IDATJXIT;          /* EXIT TO IDATJXIT              */ 01116000
         L     @15,@CV00883                                        0424 01117000
         BALR  @14,@15                                             0424 01118000
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */ 01119000
         BALR @11,0                                                     01120000
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */ 01121000
         USING *,@11                                                    01122000
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */ 01123000
         L     @11,=A(@PSTART)                                          01124000
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */ 01125000
         USING @PSTART,@11                                              01126000
*         END I23;                  /* TAKE JRNAD EXIT       @X04SVMR*/ 01127000
*       END;                        /* END OF JRNAD CODE     @X04SVMR*/ 01128000
*     DIWSAVE1=DIWSAVE1+AMDCINV;    /* GET NEW OUT RBA       @X04SVMR*/ 01129000
@RF00417 L     @10,AMBIWA(,RAMB)                                   0431 01130000
         L     @09,AMBDSB(,RAMB)                                   0431 01131000
         L     @09,AMDCINV(,@09)                                   0431 01132000
         L     @00,DIWSAVE1(,@10)                                  0431 01133000
         ALR   @00,@09                                             0431 01134000
         ST    @00,DIWSAVE1(,@10)                                  0431 01135000
*     DIWSAVE4=DIWSAVE4+AMDCINV;    /* GET NEW IN RBA        @X04SVMR*/ 01136000
         AL    @09,DIWSAVE4(,@10)                                  0432 01137000
         ST    @09,DIWSAVE4(,@10)                                  0432 01138000
*I24:                                                              0433 01139000
*     DO;                           /* IDACALL(IDAFREEB)             */ 01140000
I24      DS    0H                                                  0434 01141000
*       CALL IDAFREEB;              /* EXIT TO IDAFREEB              */ 01142000
         L     @15,@CV00888                                        0434 01143000
         BALR  @14,@15                                             0434 01144000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01145000
         BALR @11,0                                                     01146000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01147000
         USING *,@11                                                    01148000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01149000
         L     @11,=A(@PSTART)                                          01150000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01151000
         USING @PSTART,@11                                              01152000
*     END I24;                      /* FREE THE BUFFER       @X04SVLP*/ 01153000
*   END;                            /* END OF S.R. COPY      @X04SVMR*/ 01154000
         L     @09,AMBIWA(,RAMB)                                   0440 01155000
         LA    @10,1                                               0440 01156000
         AL    @10,DIWSAVE2(,@09)                                  0440 01157000
@DE00401 L     @09,AMBIWA(,RAMB)                                   0440 01158000
         ST    @10,DIWSAVE2(,@09)                                  0440 01159000
         CH    @10,PLHNOSEG(,RPLH)                                 0440 01160000
         BNH   @DL00401                                            0440 01161000
*   ARDHKRBA=DIWSAVE3;              /* 1ST CI IN CA IS HIGH  @X04SVMR*/ 01162000
*                                                                  0441 01163000
         L     @10,PLHARDB(,RPLH)                                  0441 01164000
         L     @09,AMBIWA(,RAMB)                                   0441 01165000
         L     @00,DIWSAVE3(,@09)                                  0441 01166000
         ST    @00,ARDHKRBA(,@10)                                  0441 01167000
*   /*****************************************************************/ 01168000
*   /*                                                               */ 01169000
*   /* CONVERT SPANNED RCD IN OLD CA TO FREE SPACE           @X04SVMR*/ 01170000
*   /*                                                               */ 01171000
*   /*****************************************************************/ 01172000
*                                                                  0442 01173000
*   DO DIWSAVE2=ONE TO PLHNOSEG;                                   0442 01174000
         LA    @10,1                                               0442 01175000
         B     @DE00442                                            0442 01176000
@DL00442 DS    0H                                                  0443 01177000
*I25:                                                              0443 01178000
*     DO;                           /* IDACALL(IDAGNNFL)             */ 01179000
I25      DS    0H                                                  0444 01180000
*       CALL IDAGNNFL;              /* EXIT TO IDAGNNFL              */ 01181000
         L     @15,@CV00881                                        0444 01182000
         BALR  @14,@15                                             0444 01183000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01184000
         BALR @11,0                                                     01185000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01186000
         USING *,@11                                                    01187000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01188000
         L     @11,=A(@PSTART)                                          01189000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01190000
         USING @PSTART,@11                                              01191000
*     END I25;                      /* GET AN EMPTY BUFFER   @X04SVMR*/ 01192000
*     IF RPLERREG^='00'X THEN       /* IF ANY ERROR,         @X04SVMR*/ 01193000
         CLI   RPLERREG(RRPL),0                                    0450 01194000
         BNE   @RT00450                                            0450 01195000
*       GO TO CISPLITX;             /* THEN EXIT.            @X04SVMR*/ 01196000
*INITCI:                                                           0452 01197000
*     CALL BUILDFS;                 /* BUILD FS RECORD       @X04SVMR*/ 01198000
INITCI   BAL   @14,BUILDFS                                         0452 01199000
*     RPARM1=DIWSAVE5;              /* GET OLD S.R. RBA      @X04SVMR*/ 01200000
         L     @10,AMBIWA(,RAMB)                                   0453 01201000
         L     @09,DIWSAVE5(,@10)                                  0453 01202000
         LR    RPARM1,@09                                          0453 01203000
*     DO;                           /* SET OUTPUT RBA                */ 01204000
*       BUFCORBA=RPARM1;                                           0455 01205000
         ST    RPARM1,BUFCORBA(,RBUFC)                             0455 01206000
*       BUFCMW=ON;                  /* SET MUST WRITE                */ 01207000
         OI    BUFCMW(RBUFC),B'10000000'                           0456 01208000
*     END;                          /* SET MW AND OUTPUT RBA @X04SVMR*/ 01209000
*     DIWSAVE5=DIWSAVE5+AMDCINV;    /* NEXT SEGMENT          @X04SVMR*/ 01210000
         L     @08,AMBDSB(,RAMB)                                   0458 01211000
         AL    @09,AMDCINV(,@08)                                   0458 01212000
         ST    @09,DIWSAVE5(,@10)                                  0458 01213000
*I27:                                                              0459 01214000
*     DO;                           /* IDACALL(IDAFREEB)             */ 01215000
I27      DS    0H                                                  0460 01216000
*       CALL IDAFREEB;              /* EXIT TO IDAFREEB              */ 01217000
         L     @15,@CV00888                                        0460 01218000
         BALR  @14,@15                                             0460 01219000
*       GEN(BALR @11,0);            /* LOAD ADDR OF REENTRY          */ 01220000
         BALR @11,0                                                     01221000
*       GEN(USING *,@11);           /* ESTABLISH ADDRESSING          */ 01222000
         USING *,@11                                                    01223000
*       GEN(L     @11,=A(@PSTART)); /* RELOAD BASE                   */ 01224000
         L     @11,=A(@PSTART)                                          01225000
*       GEN(USING @PSTART,@11);     /* ESTABLISH ADDRESSING          */ 01226000
         USING @PSTART,@11                                              01227000
*     END I27;                      /* FREE WORK BUFFER      @X04SVLP*/ 01228000
*   END;                            /* END OF FS CONVERT     @X04SVMR*/ 01229000
         L     @09,AMBIWA(,RAMB)                                   0466 01230000
         LA    @10,1                                               0466 01231000
         AL    @10,DIWSAVE2(,@09)                                  0466 01232000
@DE00442 L     @09,AMBIWA(,RAMB)                                   0466 01233000
         ST    @10,DIWSAVE2(,@09)                                  0466 01234000
         CH    @10,PLHNOSEG(,RPLH)                                 0466 01235000
         BNH   @DL00442                                            0466 01236000
*   DIWSAVE5=AMDCIPCA-PLHNOSEG;     /* NEW FREE CI NO        @X04SVMR*/ 01237000
         L     @10,AMBIWA(,RAMB)                                   0467 01238000
         L     @09,AMBDSB(,RAMB)                                   0467 01239000
         LH    @00,AMDCIPCA(,@09)                                  0467 01240000
         SH    @00,PLHNOSEG(,RPLH)                                 0467 01241000
         ST    @00,DIWSAVE5(,@10)                                  0467 01242000
*I28:                                                              0468 01243000
*   DO;                             /* IDACALL(IDAGNNFL)             */ 01244000
I28      DS    0H                                                  0469 01245000
*     CALL IDAGNNFL;                /* EXIT TO IDAGNNFL              */ 01246000
         L     @15,@CV00881                                        0469 01247000
         BALR  @14,@15                                             0469 01248000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01249000
         BALR @11,0                                                     01250000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01251000
         USING *,@11                                                    01252000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01253000
         L     @11,=A(@PSTART)                                          01254000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01255000
         USING @PSTART,@11                                              01256000
*   END I28;                        /* SET FOR FREE BFR      @X04SVMR*/ 01257000
*   BUFCORBA=DIWSAVE1-AMDCINV;      /* LAST OUTPUT RBA       @X04SVMR*/ 01258000
         L     @10,AMBIWA(,RAMB)                                   0475 01259000
         L     @09,AMBDSB(,RAMB)                                   0475 01260000
         L     @00,DIWSAVE1(,@10)                                  0475 01261000
         SL    @00,AMDCINV(,@09)                                   0475 01262000
         ST    @00,BUFCORBA(,RBUFC)                                0475 01263000
*   BUFXIRBA=DIWSAVE3;              /* SET FOR IDA019RG      @X04SVMR*/ 01264000
         L     @10,DIWSAVE3(,@10)                                  0476 01265000
         ST    @10,BUFXIRBA(,RBUFC)                                0476 01266000
*   IF RPLERREG^='00'X THEN         /* IF ANY ERROR,         @X04SVMR*/ 01267000
         CLI   RPLERREG(RRPL),0                                    0477 01268000
         BNE   @RT00477                                            0477 01269000
*     GO TO CISPLITX;               /* THEN EXIT.            @X04SVMR*/ 01270000
*                                                                  0478 01271000
*   /*****************************************************************/ 01272000
*   /*                                                               */ 01273000
*   /* SEGMENT(MOVESR)FINISH                                         */ 01274000
*   /*                                                               */ 01275000
*   /*****************************************************************/ 01276000
*                                                                  0479 01277000
*   DO;                                                            0479 01278000
*     GOTO MOVESR#;                                                0480 01279000
         B     MOVESR#                                             0480 01280000
*MOVESR@:                                                          0481 01281000
*   END;                                                           0481 01282000
MOVESR@  DS    0H                                                  0482 01283000
*                                                                  0482 01284000
*/*  DETERMINE WHERE THE NEXT CI OF USABLE SPACE IS.  IF NECESSARY   */ 01285000
*/*  GET A NEW CONTROL AREA.   SET THE OUTPUT RBA AND THE MUST WRITE */ 01286000
*/*  FLAG ONCE THE CONTROL INTERVAL OF SPACE IS INITIALIZED AND ITS  */ 01287000
*/*  RBA IS DETERMINED.                                      @X04SVMR*/ 01288000
*/* SEGMENT(GETCI)START                                              */ 01289000
*                                                                  0482 01290000
*   DO;                                                            0482 01291000
*     GOTO GETCI@;                                                 0483 01292000
         B     GETCI@                                              0483 01293000
*GETCI:                                                            0484 01294000
*   END;                            /* GET NEXT BUFFER               */ 01295000
GETCI    DS    0H                                                  0485 01296000
*   DIWSAVE4=BUFCORBA;              /* SAVE LAST OUTPUT RBA          */ 01297000
         L     @10,AMBIWA(,RAMB)                                   0485 01298000
         L     @00,BUFCORBA(,RBUFC)                                0485 01299000
         ST    @00,DIWSAVE4(,@10)                                  0485 01300000
*   DIWSAVE2=BUFXIRBA;              /* SAVE EXCL CNTL RBA    @X04SVMR*/ 01301000
         L     @00,BUFXIRBA(,RBUFC)                                0486 01302000
         ST    @00,DIWSAVE2(,@10)                                  0486 01303000
*/* FREE BUFFER IN ORDER TO GET A WORK BUFFER                        */ 01304000
*                                                                  0487 01305000
*I31:                                                              0487 01306000
*   DO;                             /* IDACALL(IDAFREEB)             */ 01307000
I31      DS    0H                                                  0488 01308000
*     CALL IDAFREEB;                /* EXIT TO IDAFREEB              */ 01309000
         L     @15,@CV00888                                        0488 01310000
         BALR  @14,@15                                             0488 01311000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01312000
         BALR @11,0                                                     01313000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01314000
         USING *,@11                                                    01315000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01316000
         L     @11,=A(@PSTART)                                          01317000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01318000
         USING @PSTART,@11                                              01319000
*   END I31;                        /*                       @X04SVLP*/ 01320000
*/* GET THE NEXT PLH BUFFER FOR DATA INSERT                          */ 01321000
*                                                                  0494 01322000
*I32:                                                              0494 01323000
*   DO;                             /* IDACALL(IDAGNNFL)             */ 01324000
I32      DS    0H                                                  0495 01325000
*     CALL IDAGNNFL;                /* EXIT TO IDAGNNFL              */ 01326000
         L     @15,@CV00881                                        0495 01327000
         BALR  @14,@15                                             0495 01328000
*     GEN(BALR @11,0);              /* LOAD ADDR OF REENTRY          */ 01329000
         BALR @11,0                                                     01330000
*     GEN(USING *,@11);             /* ESTABLISH ADDRESSING          */ 01331000
         USING *,@11                                                    01332000
*     GEN(L     @11,=A(@PSTART));   /* RELOAD BASE                   */ 01333000
         L     @11,=A(@PSTART)                                          01334000
*     GEN(USING @PSTART,@11);       /* ESTABLISH ADDRESSING          */ 01335000
         USING @PSTART,@11                                              01336000
*   END I32;                                                       0500 01337000
*   IF RPLERREG^='00'X THEN         /* IF AN ERROR                   */ 01338000
         CLI   RPLERREG(RRPL),0                                    0501 01339000
         BNE   @RT00501                                            0501 01340000
*     GO TO CISPLITX;               /* EXIT                          */ 01341000
*/* LEAVE CONTENTS OF BUFFER INVALID UNTIL RBA DETERMINED.           */ 01342000
*                                                                  0503 01343000
*   BUFCORBA=DIWSAVE4;              /* RESTORE LAST OUTPUT RBA       */ 01344000
         L     @10,AMBIWA(,RAMB)                                   0503 01345000
         L     @10,DIWSAVE4(,@10)                                  0503 01346000
         ST    @10,BUFCORBA(,RBUFC)                                0503 01347000
*/*  BUILD A CONTROL INTERVAL OF FREE SPACE AND RESET THE INSERT   0504 01348000
*    POINTERS IN THE PLACEHOLDER FOR THE BENEFIT OF DATA INSERT.     */ 01349000
*                                                                  0504 01350000
*   RFY                                                            0504 01351000
*    (RWORK1,                                                      0504 01352000
*     RWORK4,                                                      0504 01353000
*     RWORK2) RSTD;                 /* GET REGS              @X04SVMR*/ 01354000
*   RFY                                                            0505 01355000
*    (RWORK3,                                                      0505 01356000
*     RWORK5) RSTD;                 /* GET WORK REGISTERS            */ 01357000
*   CALL BUILDFS;                   /* BUILD FS CINV                 */ 01358000
         BAL   @14,BUILDFS                                         0506 01359000
*   RFY                                                            0507 01360000
*    (RWORK3,                                                      0507 01361000
*     RWORK4,                                                      0507 01362000
*     RWORK5) UNRSTD;               /* DROP WORK REGS        @X04SVMR*/ 01363000
*   PLHFSP=BUFCBAD;                 /* SET FREE SPACE PTR            */ 01364000
         L     @10,BUFCBAD(,RBUFC)                                 0508 01365000
         ST    @10,PLHFSP(,RPLH)                                   0508 01366000
*   PLHRECP=BUFCBAD;                /* POINT TO BEGINNING            */ 01367000
         ST    @10,PLHRECP(,RPLH)                                  0509 01368000
*   PLHRDFP=RWORK1;                 /* SET RDF POINTER       @X04SVMR*/ 01369000
         ST    RWORK1,PLHRDFP(,RPLH)                               0510 01370000
*   PLHNRBA=BUFCORBA+AMDCINV;       /* PT TO NEXT CI         @ZA12918*/ 01371000
         L     @10,AMBDSB(,RAMB)                                   0511 01372000
         L     @07,BUFCORBA(,RBUFC)                                0511 01373000
         AL    @07,AMDCINV(,@10)                                   0511 01374000
         ST    @07,PLHNRBA(,RPLH)                                  0511 01375000
*/*  IF AN END OF KEY RANGE CONDITION IS INDICATED,  IT IS NECESSARY    01376000
*    TO FINISH THE CURRENT CONTROL AREA AND TO GET THE NEXT CONTROL     01377000
*    AREA FROM THE BEGINNING OF THE NEXT KEY RANGE.  BEFORE CALLING     01378000
*    EOCA (WHICH CALLS INDEX CREATE FOR A WRITE OF THE INDEX),     0512 01379000
*    THE PLACEHOLDER KEY IS SET TO THE LOW KEY OF THE NEW KEY RANGE     01380000
*    SO THAT THE PROPER KEY COMPRESSION WILL OCCUR AT THE END OF THE    01381000
*    OLD KEY RANGE.                                                  */ 01382000
*                                                                  0512 01383000
*   IF PLHKRE=ON&                   /* IF END OF KEY RANGE & @X04SVMR*/ 01384000
*       DIW1ST=OFF                  /* NOT INSIDE A SPAN RCD @X04SVMR*/ 01385000
*     THEN                          /* THEN FORCE NEW CA             */ 01386000
         TM    PLHKRE(RPLH),B'00001000'                            0512 01387000
         BNO   @RF00512                                            0512 01388000
         L     @10,AMBIWA(,RAMB)                                   0512 01389000
         TM    DIW1ST(@10),B'00000001'                             0512 01390000
         BNZ   @RF00512                                            0512 01391000
*     DO;                                                          0513 01392000
*       PLHNOSPC=OFF;               /* SPACE MUST BE PRESENT         */ 01393000
         NI    PLHNOSPC(RPLH),B'01111111'                          0514 01394000
*       IF AMBSPEED=ON THEN         /* IF SPEED OPTION,              */ 01395000
         TM    AMBSPEED(RAMB),B'00001000'                          0515 01396000
         BNO   @RF00515                                            0515 01397000
*         ARDHRBA=DIWSAVE3;         /* SET NEW HRBA                  */ 01398000
         L     @07,PLHARDB(,RPLH)                                  0516 01399000
         L     @10,DIWSAVE3(,@10)                                  0516 01400000
         ST    @10,ARDHRBA(,@07)                                   0516 01401000
*       DIWEOKR=ON;                 /* INDICATE SEOF NEEDED          */ 01402000
@RF00515 L     @10,AMBIWA(,RAMB)                                   0517 01403000
         OI    DIWEOKR(@10),B'00010000'                            0517 01404000
*       DIWSAVE3=ARDNPTR->ARDHRBA;  /* GET 1ST RBA IN KR             */ 01405000
*                                                                  0518 01406000
         L     @07,PLHARDB(,RPLH)                                  0518 01407000
         L     @07,ARDNPTR(,@07)                                   0518 01408000
         L     @00,ARDHRBA(,@07)                                   0518 01409000
         ST    @00,DIWSAVE3(,@10)                                  0518 01410000
*       /*************************************************************/ 01411000
*       /*                                                           */ 01412000
*       /* SET PLHKEY TO THE LOW KEY OF NEXT KEY RANGE.              */ 01413000
*       /*                                                           */ 01414000
*       /*************************************************************/ 01415000
*                                                                  0519 01416000
*       PLHKEY(ONE:AMDKEYLN)=ARDNPTR->ARDKEYS(ONE:AMDKEYLN);       0519 01417000
         L     @10,PLHKEYPT(,RPLH)                                 0519 01418000
         L     @09,AMBDSB(,RAMB)                                   0519 01419000
         LH    @09,AMDKEYLN(,@09)                                  0519 01420000
         BCTR  @09,0                                               0519 01421000
         EX    @09,@SM01016                                        0519 01422000
*       CALL EOCA;                  /* GET NEW CNTL AREA             */ 01423000
         BAL   @14,EOCA                                            0520 01424000
*       DIWEOKR=OFF;                /* RESET EOKR/SEOF BIT           */ 01425000
         L     @10,AMBIWA(,RAMB)                                   0521 01426000
         NI    DIWEOKR(@10),B'11101111'                            0521 01427000
*     END;                          /* END OF EOKR CODE              */ 01428000
*   ELSE                            /* HERE FOR NORMAL CASE          */ 01429000
*     DO;                                                          0523 01430000
*                                                                  0523 01431000
         B     @RC00512                                            0523 01432000
@RF00512 DS    0H                                                  0524 01433000
*       /*************************************************************/ 01434000
*       /*                                                           */ 01435000
*       /* IF NOT END OF KEY RANGE, SEE IF WE DETERMINED ABOVE THAT A*/ 01436000
*       /* NEW CONTROL AREA IS NECESSARY.                    @X04SVMR*/ 01437000
*       /*                                                           */ 01438000
*       /*************************************************************/ 01439000
*                                                                  0524 01440000
*       IF DIWGSPC=ON               /* SEE IF ENUF CINVS ARE @X04SVMR*/ 01441000
*         THEN                      /* AVAILABLE TO HOLD THE         */ 01442000
         L     @10,AMBIWA(,RAMB)                                   0524 01443000
         TM    DIWGSPC(@10),B'00001000'                            0524 01444000
         BNO   @RF00524                                            0524 01445000
*         DO;                       /* DATA RECORD--NO, NEW CA       */ 01446000
*           DIWGSPC=OFF;            /* RESET GET SPACE FLAG  @X04SVMR*/ 01447000
         NI    DIWGSPC(@10),B'11110111'                            0526 01448000
*           CALL EOCA;              /* GO TO NEW CONTROL AREA        */ 01449000
         BAL   @14,EOCA                                            0527 01450000
*         END;                      /* END OF EOCA CODE              */ 01451000
*                                                                  0528 01452000
*       /*************************************************************/ 01453000
*       /*                                                           */ 01454000
*       /* IF IT IS NOT AN END OF CONTROL AREA, ALL THAT IS NECESSARY*/ 01455000
*       /* IS TO SET THE NEXT RBA IN PHYSICAL SEQUENCE.              */ 01456000
*       /*                                                           */ 01457000
*       /*************************************************************/ 01458000
*                                                                  0529 01459000
*       ELSE                        /* HERE IF NOT EOCA              */ 01460000
*         DO;                                                      0529 01461000
         B     @RC00524                                            0529 01462000
@RF00524 DS    0H                                                  0530 01463000
*           RPARM1=BUFCORBA+AMDCINV;/* GET NEXT RBA                  */ 01464000
         L     @10,AMBDSB(,RAMB)                                   0530 01465000
         L     RPARM1,BUFCORBA(,RBUFC)                             0530 01466000
         AL    RPARM1,AMDCINV(,@10)                                0530 01467000
*           IF DIW1ST=ON|           /* IF IN MIDDLE OF SPAN  @X04SVMR*/ 01468000
*               DIWNOT1=ON THEN     /* RCD, EXCL CNTL RBA    @X04SVMR*/ 01469000
         L     @10,AMBIWA(,RAMB)                                   0531 01470000
         TM    DIW1ST(@10),B'00000011'                             0531 01471000
         BZ    @RF00531                                            0531 01472000
*             DO;                   /*                       @ZA17187*/ 01473000
*               BUFXIRBA=DIWSAVE2;  /* IS THAT OF 1ST CI     @X04SVMR*/ 01474000
         L     @10,DIWSAVE2(,@10)                                  0533 01475000
         ST    @10,BUFXIRBA(,RBUFC)                                0533 01476000
*               BUFXORBA=DIWSAVE2;  /*                       @ZA17187*/ 01477000
         ST    @10,BUFXORBA(,RBUFC)                                0534 01478000
*             END;                  /*                       @ZA17187*/ 01479000
*           ELSE                    /* NON-SPANNED RECORD    @X04SVMR*/ 01480000
*             DO;                   /*                       @ZA17187*/ 01481000
         B     @RC00531                                            0536 01482000
@RF00531 DS    0H                                                  0537 01483000
*               BUFXIRBA=RPARM1;    /* SET EXCL CNTL RBA     @X04SVMR*/ 01484000
         ST    RPARM1,BUFXIRBA(,RBUFC)                             0537 01485000
*               BUFXORBA=RPARM1;    /*                       @ZA17187*/ 01486000
         ST    RPARM1,BUFXORBA(,RBUFC)                             0538 01487000
*             END;                  /*                       @ZA17187*/ 01488000
*           DO;                     /* SET OUTPUT RBA                */ 01489000
@RC00531 DS    0H                                                  0541 01490000
*             BUFCORBA=RPARM1;                                     0541 01491000
         ST    RPARM1,BUFCORBA(,RBUFC)                             0541 01492000
*             BUFCMW=ON;            /* SET MUST WRITE                */ 01493000
         OI    BUFCMW(RBUFC),B'10000000'                           0542 01494000
*           END;                                                   0543 01495000
*           BUFCDDDD=RPARM1;        /* SET INPUT RBA TOO     @X04SVMR*/ 01496000
         ST    RPARM1,BUFCDDDD(,RBUFC)                             0544 01497000
*           BUFCEXC=ON;             /* HOLD EXCLUSIVE CNTL   @X04SVMR*/ 01498000
*           BUFCVAL=ON;             /* MARK IT VALID         @X04SVMR*/ 01499000
         OI    BUFCEXC(RBUFC),B'00000110'                          0546 01500000
*         END;                      /* END OF NON-EOCA CODE          */ 01501000
*     END;                          /* END OF NON-EOKR CODE          */ 01502000
@RC00524 DS    0H                                                  0549 01503000
*/* SEGMENT(GETCI)FINISH                                             */ 01504000
*                                                                  0549 01505000
*   DO;                                                            0549 01506000
@RC00512 DS    0H                                                  0550 01507000
*     GOTO GETCI#;                                                 0550 01508000
         B     GETCI#                                              0550 01509000
*GETCI@:                                                           0551 01510000
*   END;                                                           0551 01511000
GETCI@   DS    0H                                                  0552 01512000
*   GEN(IDAPATCH);                  /* DEFINE PATCH AREA             */ 01513000
         IDAPATCH                                                       01514000
*   END IDA019SA                    /* END OF CI SPLIT               */ 01515000
*                                                                  0553 01516000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01517000
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */ 01518000
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */ 01519000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 01520000
*/*%INCLUDE SYSLIB  (IDAIRD  )                                       */ 01521000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 01522000
*/*%INCLUDE SYSLIB  (IDADIWA )                                       */ 01523000
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */ 01524000
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */ 01525000
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */ 01526000
*/*%INCLUDE SYSLIB  (IDACIDF )                                       */ 01527000
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */ 01528000
*/*%INCLUDE SYSLIB  (IDAIXSPL)                                       */ 01529000
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */ 01530000
*/*%INCLUDE SYSLIB  (IDARDF  )                                       */ 01531000
*                                                                  0553 01532000
*       ;                                                          0553 01533000
         B     @EL00001                                            0553 01534000
@DATA    DS    0H                                                       01535000
@SM01016 MVC   PLHKEY(0,@10),ARDKEYS(@07)                               01536000
@DATD    DSECT                                                          01537000
         DS    0F                                                       01538000
IDA019SA CSECT                                                          01539000
         DS    0F                                                       01540000
@DATD    DSECT                                                          01541000
         DS    0D                                                       01542000
IDA019SA CSECT                                                          01543000
         DS    0F                                                       01544000
@SIZDATD DC    AL1(0)                                                   01545000
         DC    AL3(@ENDDATD-@DATD)                                      01546000
@CV00880 DC    V(IDAEOVIF)                                              01547000
@CV00881 DC    V(IDAGNNFL)                                              01548000
@CV00882 DC    V(IDAGRB)                                                01549000
@CV00883 DC    V(IDATJXIT)                                              01550000
@CV00884 DC    V(IDAWRBFR)                                              01551000
@CV00885 DC    V(IDA019RG)                                              01552000
@CV00886 DC    V(IDA019RK)                                              01553000
@CV00887 DC    V(IDA019RU)                                              01554000
@CV00888 DC    V(IDAFREEB)                                              01555000
         DS    0D                                                       01556000
HWORD4   DC    H'4'                                                     01557000
@DATD    DSECT                                                          01558000
*                                                          /*@X04SVLC*/ 01559000
RDFCTNUA EQU   X'40'                    COMPLEX RDF INDICATOR           01560000
RDFCTNUX EQU   X'FF'-RDFCTNUA           RESET COMPLEX MASK              01561000
RDFREPLA EQU   X'08'                    COUNT RDF INDICATOR             01562000
RDFREPLX EQU   X'FF'-RDFREPLA           RESET COUNT MASK                01563000
RDFEMPTI EQU   X'04'                    EMPTY RECORD       /*@X04SVLC*/ 01564000
RDFLEN   EQU   3                        LENGTH OF RDF                   01565000
RDFLLOFF EQU   1                        OFFSET WITHIN RDF TO LL         01566000
RDFSGLR  EQU   X'00'                   MASK FOR SINGLE RECORD RDF       01567000
RDFGRP   EQU   RDFCTNUA                 MASK FOR LL RDF OF A GROUP RDF  01568000
RDFCNT   EQU   RDFREPLA                 MASK FOR COUNT RDF              01569000
@DATD    DSECT                                                          01570000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01571000
@ENDDATD EQU   *                                                        01572000
IDA019SA CSECT                                                          01573000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01574000
@01      EQU   01                                                       01575000
@02      EQU   02                                                       01576000
@03      EQU   03                                                       01577000
@04      EQU   04                                                       01578000
@05      EQU   05                                                       01579000
@06      EQU   06                                                       01580000
@07      EQU   07                                                       01581000
@08      EQU   08                                                       01582000
@09      EQU   09                                                       01583000
@10      EQU   10                                                       01584000
@11      EQU   11                                                       01585000
@12      EQU   12                                                       01586000
@13      EQU   13                                                       01587000
@14      EQU   14                                                       01588000
@15      EQU   15                                                       01589000
RRPL     EQU   @01                                                      01590000
RPLH     EQU   @02                                                      01591000
RAMB     EQU   @03                                                      01592000
RBUFC    EQU   @04                                                      01593000
RWORK1   EQU   @05                                                      01594000
RWORK2   EQU   @06                                                      01595000
RWORK3   EQU   @07                                                      01596000
RWORK4   EQU   @08                                                      01597000
RWORK5   EQU   @09                                                      01598000
RPARM1   EQU   @12                                                      01599000
R14      EQU   @14                                                      01600000
R15      EQU   @15                                                      01601000
RPARM1X  EQU   @12                                                      01602000
RWORK0   EQU   @00                                                      01603000
R1       EQU   @01                                                      01604000
R10      EQU   @10                                                      01605000
R11      EQU   @11                                                      01606000
R13      EQU   @13                                                      01607000
IDAAMB   EQU   0                                                        01608000
AMBDSB   EQU   IDAAMB+20                                                01609000
AMBEOVR  EQU   IDAAMB+24                                                01610000
AMBFLG0  EQU   AMBEOVR                                                  01611000
AMBFLG1  EQU   IDAAMB+25                                                01612000
AMBSPEED EQU   AMBFLG1                                                  01613000
AMBJRN   EQU   AMBFLG1                                                  01614000
AMBDSORG EQU   IDAAMB+26                                                01615000
AMBIOBAD EQU   IDAAMB+28                                                01616000
AMBINFL  EQU   IDAAMB+42                                                01617000
AMBUPX   EQU   AMBINFL                                                  01618000
AMBDEBPT EQU   IDAAMB+44                                                01619000
AMBOFLGS EQU   IDAAMB+48                                                01620000
AMBFLG2  EQU   IDAAMB+49                                                01621000
AMBEOVPT EQU   IDAAMB+56                                                01622000
AMBIWA   EQU   IDAAMB+64                                                01623000
AMBCSWD1 EQU   IDAAMB+84                                                01624000
AMBAFLG  EQU   AMBCSWD1                                                 01625000
IDAAMBL  EQU   0                                                        01626000
AMBLEOV  EQU   IDAAMBL+12                                               01627000
AMBLEFLG EQU   AMBLEOV                                                  01628000
AMBLDDNM EQU   IDAAMBL+16                                               01629000
AMBLIDF  EQU   AMBLDDNM                                                 01630000
AMBLQ    EQU   AMBLIDF+7                                                01631000
AMBLVC   EQU   IDAAMBL+28                                               01632000
AMBLTYPE EQU   IDAAMBL+30                                               01633000
AMBLSHAR EQU   IDAAMBL+33                                               01634000
AMBLFLG1 EQU   IDAAMBL+35                                               01635000
AMBLFLG2 EQU   IDAAMBL+36                                               01636000
IFGRPL   EQU   0                                                        01637000
RPLCOMN  EQU   IFGRPL                                                   01638000
RPLIDWD  EQU   RPLCOMN                                                  01639000
RPLLEN   EQU   RPLIDWD+3                                                01640000
RPLECB   EQU   RPLCOMN+8                                                01641000
RPLFDBWD EQU   RPLCOMN+12                                               01642000
RPLFDBK  EQU   RPLFDBWD+1                                               01643000
RPLRTNCD EQU   RPLFDBK                                                  01644000
RPLERREG EQU   RPLRTNCD                                                 01645000
RPLCNDCD EQU   RPLFDBK+1                                                01646000
RPLCMPON EQU   RPLCNDCD                                                 01647000
RPLFDB2  EQU   RPLCMPON                                                 01648000
RPLERRCD EQU   RPLCNDCD+1                                               01649000
RPLFDB3  EQU   RPLERRCD                                                 01650000
RPLKEYLE EQU   RPLCOMN+16                                               01651000
RPLDACB  EQU   RPLCOMN+24                                               01652000
RPLARG   EQU   RPLCOMN+36                                               01653000
RPLOPTCD EQU   RPLCOMN+40                                               01654000
RPLOPT1  EQU   RPLOPTCD                                                 01655000
RPLECBSW EQU   RPLOPT1                                                  01656000
RPLOPT2  EQU   RPLOPTCD+1                                               01657000
RPLADR   EQU   RPLOPT2                                                  01658000
RPLOPT3  EQU   RPLOPTCD+2                                               01659000
RPLNXTRP EQU   RPLCOMN+44                                               01660000
RPLOPTC2 EQU   RPLCOMN+56                                               01661000
RPLOPT5  EQU   RPLOPTC2                                                 01662000
RPLWRTYP EQU   RPLOPT5                                                  01663000
RPLOPT6  EQU   RPLOPTC2+1                                               01664000
RPLUNTYP EQU   RPLOPT6                                                  01665000
RPLOPT7  EQU   RPLOPTC2+2                                               01666000
RPLCNOPT EQU   RPLOPT7                                                  01667000
RPLOPT8  EQU   RPLOPTC2+3                                               01668000
RPLRBAR  EQU   RPLCOMN+60                                               01669000
RPLAIXID EQU   RPLRBAR+2                                                01670000
RPLDDDD  EQU   RPLRBAR+4                                                01671000
RPLEXTDS EQU   RPLCOMN+68                                               01672000
RPLEXTD1 EQU   RPLEXTDS                                                 01673000
IDAIXH   EQU   0                                                        01674000
IDAIBFLP EQU   0                                                        01675000
IBFLP3   EQU   IDAIBFLP+2                                               01676000
IBFLP2   EQU   IBFLP3                                                   01677000
IDASELL  EQU   0                                                        01678000
IDAIXK   EQU   0                                                        01679000
IFGACB   EQU   0                                                        01680000
ACBCOMN  EQU   IFGACB                                                   01681000
ACBLENG  EQU   ACBCOMN+2                                                01682000
ACBLENG2 EQU   ACBLENG                                                  01683000
ACBAMBL  EQU   ACBCOMN+4                                                01684000
ACBJWA   EQU   ACBAMBL                                                  01685000
ACBMACRF EQU   ACBCOMN+12                                               01686000
ACBMACR1 EQU   ACBMACRF                                                 01687000
ACBADR   EQU   ACBMACR1                                                 01688000
ACBCNV   EQU   ACBMACR1                                                 01689000
ACBMACR2 EQU   ACBMACRF+1                                               01690000
ACBBUFPL EQU   ACBCOMN+20                                               01691000
ACBMACR3 EQU   ACBBUFPL                                                 01692000
ACBRECFM EQU   ACBCOMN+24                                               01693000
ACBCCTYP EQU   ACBCOMN+25                                               01694000
ACBOPT   EQU   ACBCOMN+26                                               01695000
ACBDSORG EQU   ACBOPT                                                   01696000
ACBCROPS EQU   ACBDSORG                                                 01697000
ACBEXLST EQU   ACBCOMN+36                                               01698000
ACBDDNM  EQU   ACBCOMN+40                                               01699000
ACBAMETH EQU   ACBDDNM+3                                                01700000
ACBOFLGS EQU   ACBCOMN+48                                               01701000
ACBEXFG  EQU   ACBOFLGS                                                 01702000
ACBIOSFG EQU   ACBOFLGS                                                 01703000
ACBINFLG EQU   ACBCOMN+50                                               01704000
ACBUJFCB EQU   ACBCOMN+52                                               01705000
ACBBLKSZ EQU   ACBCOMN+60                                               01706000
IDADIWA  EQU   0                                                        01707000
DIWFLG1  EQU   IDADIWA+4                                                01708000
DIWEOKR  EQU   DIWFLG1                                                  01709000
DIWGSPC  EQU   DIWFLG1                                                  01710000
DIWNOT1  EQU   DIWFLG1                                                  01711000
DIW1ST   EQU   DIWFLG1                                                  01712000
DIWFLG2  EQU   IDADIWA+5                                                01713000
DIWFSPF  EQU   DIWFLG2                                                  01714000
DIWSAVE  EQU   IDADIWA+28                                               01715000
DIWSAVE1 EQU   DIWSAVE                                                  01716000
DIWSAVE2 EQU   DIWSAVE+4                                                01717000
DIWSAVE3 EQU   DIWSAVE+8                                                01718000
DIWSAVE4 EQU   DIWSAVE+12                                               01719000
DIWSAVE5 EQU   DIWSAVE+16                                               01720000
IDAPLHDR EQU   0                                                        01721000
IDAPLH   EQU   0                                                        01722000
PLHFLG1  EQU   IDAPLH+2                                                 01723000
PLHENDRQ EQU   PLHFLG1                                                  01724000
PLHFLG2  EQU   IDAPLH+3                                                 01725000
PLHKRE   EQU   PLHFLG2                                                  01726000
PLHEFLGS EQU   IDAPLH+4                                                 01727000
PLHNOSPC EQU   PLHEFLGS                                                 01728000
PLHFLG3  EQU   IDAPLH+6                                                 01729000
PLHAFLGS EQU   IDAPLH+7                                                 01730000
PLHFRCNT EQU   IDAPLH+14                                                01731000
PLHCRBA  EQU   IDAPLH+28                                                01732000
PLHJORBA EQU   PLHCRBA                                                  01733000
PLHJRNLL EQU   IDAPLH+32                                                01734000
PLHJNRBA EQU   IDAPLH+36                                                01735000
PLHJCODE EQU   IDAPLH+40                                                01736000
PLHEOVR  EQU   IDAPLH+42                                                01737000
PLHARDB  EQU   IDAPLH+44                                                01738000
PLHDBUFC EQU   IDAPLH+52                                                01739000
PLHRECP  EQU   IDAPLH+60                                                01740000
PLHFSP   EQU   IDAPLH+64                                                01741000
PLHRDFP  EQU   IDAPLH+68                                                01742000
PLHDIOB  EQU   IDAPLH+76                                                01743000
PLHRETO  EQU   IDAPLH+116                                               01744000
PLHRET1  EQU   IDAPLH+120                                               01745000
PLHEOVPT EQU   IDAPLH+180                                               01746000
PLHNRBA  EQU   IDAPLH+184                                               01747000
PLHIXSPL EQU   IDAPLH+200                                               01748000
PLHSSRBA EQU   PLHIXSPL                                                 01749000
PLHWAX   EQU   IDAPLH+232                                               01750000
PLHNOSEG EQU   IDAPLH+240                                               01751000
PLHKEYPT EQU   IDAPLH+248                                               01752000
PLHEND   EQU   IDAPLH+280                                               01753000
PLHKEY   EQU   0                                                        01754000
IDAAMDSB EQU   0                                                        01755000
AMDATTR  EQU   IDAAMDSB+1                                               01756000
AMDDST   EQU   AMDATTR                                                  01757000
AMDNEST  EQU   IDAAMDSB+4                                               01758000
AMDKEYLN EQU   IDAAMDSB+8                                               01759000
AMDCIPCA EQU   IDAAMDSB+12                                              01760000
AMDFSCA  EQU   IDAAMDSB+14                                              01761000
AMDCINV  EQU   IDAAMDSB+20                                              01762000
AMDHLRBA EQU   IDAAMDSB+28                                              01763000
AMDSSRBA EQU   IDAAMDSB+32                                              01764000
AMDATTR3 EQU   IDAAMDSB+40                                              01765000
AMDSTAT  EQU   IDAAMDSB+48                                              01766000
AMDASPA  EQU   AMDSTAT+32                                               01767000
IDABUFDR EQU   0                                                        01768000
BUFDRCIX EQU   IDABUFDR+9                                               01769000
BUFDRFLG EQU   IDABUFDR+11                                              01770000
IDABUFC  EQU   0                                                        01771000
BUFCAVL  EQU   IDABUFC                                                  01772000
BUFCFLG1 EQU   IDABUFC+1                                                01773000
BUFCSEG  EQU   BUFCFLG1                                                 01774000
BUFCVAL  EQU   BUFCFLG1                                                 01775000
BUFCEXC  EQU   BUFCFLG1                                                 01776000
BUFCIOFL EQU   IDABUFC+2                                                01777000
BUFCMW   EQU   BUFCIOFL                                                 01778000
BUFCFLG2 EQU   IDABUFC+3                                                01779000
BUFCPLH  EQU   IDABUFC+4                                                01780000
BUFCDDDD EQU   IDABUFC+8                                                01781000
BUFCORBA EQU   IDABUFC+12                                               01782000
BUFCBAD  EQU   IDABUFC+20                                               01783000
BUFCINV  EQU   IDABUFC+28                                               01784000
BUFXIRBA EQU   IDABUFC+40                                               01785000
BUFXORBA EQU   IDABUFC+44                                               01786000
IDACIDF  EQU   0                                                        01787000
CIDFLL   EQU   IDACIDF+2                                                01788000
IDAARDB  EQU   0                                                        01789000
ARDTYPE  EQU   IDAARDB+1                                                01790000
ARDNPTR  EQU   IDAARDB+4                                                01791000
ARDHKRBA EQU   IDAARDB+8                                                01792000
ARDHRBA  EQU   IDAARDB+12                                               01793000
ARDERBA  EQU   IDAARDB+16                                               01794000
ARDPRF   EQU   IDAARDB+28                                               01795000
ARDKEYS  EQU   IDAARDB+29                                               01796000
IDAIXSPL EQU   0                                                        01797000
IXSBFLG  EQU   IDAIXSPL+17                                              01798000
IDARDF   EQU   0                                                        01799000
RDFRBYTE EQU   IDARDF                                                   01800000
RDFSEG   EQU   RDFRBYTE                                                 01801000
RDFNOT1  EQU   RDFSEG                                                   01802000
RDF1ST   EQU   RDFSEG                                                   01803000
IDADATA  EQU   0                                                        01804000
IDAKEY   EQU   0                                                        01805000
PLHPDL   EQU   0                                                        01806000
PLHPDLE  EQU   0                                                        01807000
PLHRRN   EQU   0                                                        01808000
PLHEXTEN EQU   PLHEND                                                   01809000
PLHBMWRK EQU   PLHEXTEN+5                                               01810000
BUFCRSC1 EQU   BUFCAVL                                                  01811000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01812000
PLHBMSV5 EQU   PLHEXTEN+24                                              01813000
PLHBMSV4 EQU   PLHEXTEN+20                                              01814000
PLHBMSV3 EQU   PLHEXTEN+16                                              01815000
PLHBMSV2 EQU   PLHEXTEN+12                                              01816000
PLHBMSV1 EQU   PLHEXTEN+8                                               01817000
PLHRDCNT EQU   PLHEXTEN+6                                               01818000
PLHBMSOV EQU   PLHBMWRK                                                 01819000
PLHBEUC  EQU   PLHBMWRK                                                 01820000
PLHBMRDF EQU   PLHBMWRK                                                 01821000
@NM00051 EQU   PLHEXTEN+4                                               01822000
PLHRESR1 EQU   PLHEXTEN                                                 01823000
KEY      EQU   IDAKEY                                                   01824000
AMDATA   EQU   IDADATA                                                  01825000
RDFLL    EQU   IDARDF+1                                                 01826000
RDFEMPTY EQU   RDFRBYTE                                                 01827000
RDFREPL  EQU   RDFRBYTE                                                 01828000
RDFCTNU  EQU   RDFRBYTE                                                 01829000
RDFTYPE  EQU   RDFRBYTE                                                 01830000
IXSLEP   EQU   IDAIXSPL+28                                              01831000
IXSSEP   EQU   IDAIXSPL+24                                              01832000
IXSHEP   EQU   IDAIXSPL+20                                              01833000
IXSPEC   EQU   IDAIXSPL+19                                              01834000
IXSEKON  EQU   IDAIXSPL+18                                              01835000
@NM00059 EQU   IXSBFLG                                                  01836000
IXSLELV  EQU   IXSBFLG                                                  01837000
IXSSSRH  EQU   IXSBFLG                                                  01838000
IXSNOSR  EQU   IDAIXSPL+16                                              01839000
IXSKLEN  EQU   IDAIXSPL+14                                              01840000
IXSILN   EQU   IDAIXSPL+13                                              01841000
IXSTLN   EQU   IDAIXSPL+12                                              01842000
IXSARG   EQU   IDAIXSPL+8                                               01843000
IXSBUFC  EQU   IDAIXSPL+4                                               01844000
IXSSTRBA EQU   IDAIXSPL                                                 01845000
@NM00058 EQU   ARDPRF                                                   01846000
ARDPRFMT EQU   ARDPRF                                                   01847000
ARDPRSS  EQU   ARDPRF                                                   01848000
ARDRELNO EQU   IDAARDB+26                                               01849000
ARDVOLSR EQU   IDAARDB+20                                               01850000
ARDLEN   EQU   IDAARDB+2                                                01851000
ARDUSED  EQU   ARDTYPE                                                  01852000
ARDEOD   EQU   ARDTYPE                                                  01853000
ARDUOVFL EQU   ARDTYPE                                                  01854000
ARDSS    EQU   ARDTYPE                                                  01855000
ARDHLI   EQU   ARDTYPE                                                  01856000
ARDKR    EQU   ARDTYPE                                                  01857000
ARDID    EQU   IDAARDB                                                  01858000
@NM00057 EQU   CIDFLL                                                   01859000
CIDFBUSY EQU   CIDFLL                                                   01860000
CIDFOSET EQU   IDACIDF                                                  01861000
BUFCEND  EQU   IDABUFC+64                                               01862000
BUFCUCDN EQU   IDABUFC+60                                               01863000
BUFCUCUP EQU   IDABUFC+56                                               01864000
BUFCMDBT EQU   IDABUFC+52                                               01865000
BUFCHAIN EQU   IDABUFC+48                                               01866000
BUFCNXT2 EQU   IDABUFC+37                                               01867000
BUFCIDXL EQU   IDABUFC+36                                               01868000
BUFCDSPC EQU   IDABUFC+32                                               01869000
BUFCWLEN EQU   BUFCINV                                                  01870000
BUFCNXT1 EQU   IDABUFC+24                                               01871000
BUFCCPA  EQU   IDABUFC+16                                               01872000
BUFCAMB  EQU   BUFCPLH                                                  01873000
@NM00056 EQU   BUFCFLG2                                                 01874000
BUFCEOD  EQU   BUFCFLG2                                                 01875000
BUFCBSYW EQU   BUFCFLG2                                                 01876000
BUFCBSYR EQU   BUFCFLG2                                                 01877000
BUFCNLAS EQU   BUFCFLG2                                                 01878000
BUFCXDDR EQU   BUFCFLG2                                                 01879000
BUFCFIX  EQU   BUFCIOFL                                                 01880000
BUFCPFCP EQU   BUFCIOFL                                                 01881000
BUFCXEDB EQU   BUFCIOFL                                                 01882000
BUFCWC   EQU   BUFCIOFL                                                 01883000
BUFCREAL EQU   BUFCIOFL                                                 01884000
BUFCRRD  EQU   BUFCIOFL                                                 01885000
BUFCFMT  EQU   BUFCIOFL                                                 01886000
BUFCEPT  EQU   BUFCFLG1                                                 01887000
BUFCER2  EQU   BUFCFLG1                                                 01888000
BUFCER1  EQU   BUFCFLG1                                                 01889000
BUFCINS  EQU   BUFCFLG1                                                 01890000
BUFCUPG  EQU   BUFCFLG1                                                 01891000
BUFCUCNT EQU   BUFCAVL                                                  01892000
@NM00055 EQU   IDABUFDR+16                                              01893000
BUFDBUFC EQU   IDABUFDR+12                                              01894000
@NM00054 EQU   BUFDRFLG                                                 01895000
BUFDRAVL EQU   BUFDRFLG                                                 01896000
BUFDRREL EQU   BUFDRFLG                                                 01897000
BUFDRTSB EQU   IDABUFDR+10                                              01898000
BUFDRMAX EQU   BUFDRCIX                                                 01899000
BUFDRPFN EQU   IDABUFDR+8                                               01900000
BUFDRPFB EQU   IDABUFDR+4                                               01901000
BUFDRLEN EQU   IDABUFDR+2                                               01902000
BUFDRNO  EQU   IDABUFDR+1                                               01903000
BUFDRID  EQU   IDABUFDR                                                 01904000
AMDEXCP  EQU   AMDSTAT+44                                               01905000
AMDNCAS  EQU   AMDSTAT+40                                               01906000
AMDNCIS  EQU   AMDSTAT+36                                               01907000
AMDRETR  EQU   AMDSTAT+28                                               01908000
AMDUPR   EQU   AMDSTAT+24                                               01909000
AMDIREC  EQU   AMDSTAT+20                                               01910000
AMDDELR  EQU   AMDSTAT+16                                               01911000
AMDNLR   EQU   AMDSTAT+12                                               01912000
AMDNEXT  EQU   AMDSTAT+10                                               01913000
AMDNIL   EQU   AMDSTAT+8                                                01914000
AMDSTSP  EQU   AMDSTAT                                                  01915000
@NM00053 EQU   IDAAMDSB+41                                              01916000
@NM00052 EQU   AMDATTR3                                                 01917000
AMDLM    EQU   AMDATTR3                                                 01918000
AMDWAIT  EQU   AMDATTR3                                                 01919000
AMDBIND  EQU   AMDATTR3                                                 01920000
AMDFAULT EQU   AMDATTR3                                                 01921000
AMDUNQ   EQU   AMDATTR3                                                 01922000
AMDPARDB EQU   IDAAMDSB+36                                              01923000
AMDMAXRR EQU   AMDSSRBA                                                 01924000
AMDNSLOT EQU   AMDHLRBA                                                 01925000
AMDLRECL EQU   IDAAMDSB+24                                              01926000
AMDFSCI  EQU   IDAAMDSB+16                                              01927000
AMDPCTCI EQU   IDAAMDSB+11                                              01928000
AMDPCTCA EQU   IDAAMDSB+10                                              01929000
AMDRKP   EQU   IDAAMDSB+6                                               01930000
AMDAXRKP EQU   AMDNEST                                                  01931000
AMDLEN   EQU   IDAAMDSB+2                                               01932000
AMDSPAN  EQU   AMDATTR                                                  01933000
AMDRRDS  EQU   AMDATTR                                                  01934000
AMDRANGE EQU   AMDATTR                                                  01935000
AMDORDER EQU   AMDATTR                                                  01936000
AMDREPL  EQU   AMDATTR                                                  01937000
AMDSDT   EQU   AMDATTR                                                  01938000
AMDWCK   EQU   AMDATTR                                                  01939000
AMDSBID  EQU   IDAAMDSB                                                 01940000
PLHERRET EQU   IDAPLH+276                                               01941000
PLHASCB  EQU   IDAPLH+272                                               01942000
PLHECB   EQU   IDAPLH+268                                               01943000
@NM00050 EQU   IDAPLH+265                                               01944000
PLHDRMSK EQU   IDAPLH+264                                               01945000
PLHR13   EQU   IDAPLH+260                                               01946000
PLHPARM1 EQU   IDAPLH+256                                               01947000
PLHDRRSC EQU   IDAPLH+252                                               01948000
PLHSLRBA EQU   IDAPLH+244                                               01949000
PLHSRCSG EQU   IDAPLH+242                                               01950000
PLHLLOR  EQU   IDAPLH+236                                               01951000
PLHXPLH  EQU   PLHWAX                                                   01952000
@NM00049 EQU   PLHIXSPL+8                                               01953000
PLHIXBFC EQU   PLHIXSPL+4                                               01954000
PLHHIREC EQU   PLHSSRBA                                                 01955000
PLHISPLP EQU   IDAPLH+196                                               01956000
PLHRBUFC EQU   IDAPLH+192                                               01957000
PLHIBUFC EQU   IDAPLH+188                                               01958000
PLHDDDD  EQU   PLHEOVPT                                                 01959000
PLHAR14  EQU   IDAPLH+176                                               01960000
@NM00048 EQU   IDAPLH+172                                               01961000
@NM00047 EQU   IDAPLH+168                                               01962000
PLHASAVE EQU   IDAPLH+164                                               01963000
PLHRETOS EQU   IDAPLH+118                                               01964000
PLHCHAIN EQU   IDAPLH+112                                               01965000
PLHAMB   EQU   IDAPLH+108                                               01966000
PLHSAVE6 EQU   IDAPLH+104                                               01967000
PLHSAVE5 EQU   IDAPLH+100                                               01968000
PLHSAVE4 EQU   IDAPLH+96                                                01969000
PLHSAVE3 EQU   IDAPLH+92                                                01970000
PLHSAVE2 EQU   IDAPLH+88                                                01971000
PLHSAVE1 EQU   IDAPLH+84                                                01972000
PLHARET  EQU   IDAPLH+80                                                01973000
PLHIIOB  EQU   PLHDIOB                                                  01974000
PLHSRSID EQU   IDAPLH+74                                                01975000
PLHRDFC  EQU   IDAPLH+72                                                01976000
PLHNBUFC EQU   IDAPLH+56                                                01977000
PLHLRECL EQU   IDAPLH+48                                                01978000
@NM00046 EQU   IDAPLH+43                                                01979000
PLHRCODE EQU   IDAPLH+41                                                01980000
PLHUCODE EQU   PLHJCODE                                                 01981000
PLHUPECB EQU   PLHJORBA                                                 01982000
PLHDSIDA EQU   IDAPLH+24                                                01983000
PLHCRPL  EQU   IDAPLH+20                                                01984000
PLHMRPL  EQU   IDAPLH+16                                                01985000
PLHBFRNO EQU   IDAPLH+15                                                01986000
PLHRMIN  EQU   IDAPLH+13                                                01987000
PLHDSTYP EQU   IDAPLH+12                                                01988000
PLHACB   EQU   IDAPLH+8                                                 01989000
PLHRAE   EQU   PLHAFLGS                                                 01990000
PLHRABWD EQU   PLHAFLGS                                                 01991000
PLHIOSID EQU   PLHAFLGS                                                 01992000
PLHDBDC  EQU   PLHAFLGS                                                 01993000
PLHVAMB  EQU   PLHAFLGS                                                 01994000
PLHIOSRQ EQU   PLHAFLGS                                                 01995000
PLHDRLM  EQU   PLHAFLGS                                                 01996000
PLHEOVDF EQU   PLHFLG3                                                  01997000
PLHRVRS  EQU   PLHFLG3                                                  01998000
PLHBWD   EQU   PLHFLG3                                                  01999000
PLHSLVLD EQU   PLHFLG3                                                  02000000
PLHRAHD  EQU   PLHFLG3                                                  02001000
PLHSRBSG EQU   PLHFLG3                                                  02002000
@NM00045 EQU   PLHEFLGS+1                                               02003000
PLHRSTRT EQU   PLHEFLGS+1                                               02004000
PLHDSCAN EQU   PLHEFLGS                                                 02005000
PLHINVAL EQU   PLHEFLGS                                                 02006000
PLHEODX  EQU   PLHEFLGS                                                 02007000
PLHNOADV EQU   PLHEFLGS                                                 02008000
PLHSRINV EQU   PLHEFLGS                                                 02009000
PLHSKPER EQU   PLHEFLGS                                                 02010000
PLH1ST   EQU   PLHEFLGS                                                 02011000
PLHIWAIT EQU   PLHFLG2                                                  02012000
PLHSVADV EQU   PLHFLG2                                                  02013000
PLHCIINS EQU   PLHFLG2                                                  02014000
PLHADDTE EQU   PLHFLG2                                                  02015000
PLHKEYMD EQU   PLHFLG2                                                  02016000
PLHSQINS EQU   PLHFLG2                                                  02017000
PLHUPD   EQU   PLHFLG2                                                  02018000
@NM00044 EQU   PLHFLG1                                                  02019000
PLHDRPND EQU   PLHFLG1                                                  02020000
PLHASYRQ EQU   PLHFLG1                                                  02021000
PLHRDEXC EQU   PLHFLG1                                                  02022000
PLHSSR   EQU   PLHFLG1                                                  02023000
PLHASKBF EQU   PLHFLG1                                                  02024000
PLHEOVW  EQU   PLHFLG1                                                  02025000
PLHATV   EQU   IDAPLH+1                                                 02026000
PLHAVL   EQU   IDAPLH                                                   02027000
PLHIOSDQ EQU   IDAPLHDR+12                                              02028000
PLHDRCUR EQU   IDAPLHDR+10                                              02029000
PLHDRMAX EQU   IDAPLHDR+8                                               02030000
PLHDRREQ EQU   IDAPLHDR+4                                               02031000
PLHELTH  EQU   IDAPLHDR+2                                               02032000
PLHCNT   EQU   IDAPLHDR+1                                               02033000
PLHID    EQU   IDAPLHDR                                                 02034000
@NM00043 EQU   IDADIWA+92                                               02035000
@NM00042 EQU   IDADIWA+88                                               02036000
@NM00041 EQU   IDADIWA+84                                               02037000
@NM00040 EQU   IDADIWA+80                                               02038000
@NM00039 EQU   IDADIWA+76                                               02039000
@NM00038 EQU   IDADIWA+72                                               02040000
@NM00037 EQU   IDADIWA+68                                               02041000
@NM00036 EQU   IDADIWA+64                                               02042000
@NM00035 EQU   IDADIWA+60                                               02043000
@NM00034 EQU   IDADIWA+56                                               02044000
DIWINRBA EQU   IDADIWA+52                                               02045000
DIWRKCT  EQU   IDADIWA+48                                               02046000
DIWSPLTP EQU   IDADIWA+24                                               02047000
DIWBUFC  EQU   IDADIWA+20                                               02048000
DIWPLH   EQU   IDADIWA+16                                               02049000
DIWHRBA  EQU   IDADIWA+12                                               02050000
DIWLRBA  EQU   IDADIWA+8                                                02051000
@NM00033 EQU   IDADIWA+6                                                02052000
DIWSHIFT EQU   DIWFLG1                                                  02053000
DIWPFERR EQU   DIWFLG1                                                  02054000
DIWCISPL EQU   DIWFLG1                                                  02055000
DIWCAS   EQU   DIWFLG1                                                  02056000
DIWLEN   EQU   IDADIWA+2                                                02057000
DIWATV   EQU   IDADIWA+1                                                02058000
DIWID    EQU   IDADIWA                                                  02059000
ACBAPID  EQU   ACBCOMN+72                                               02060000
ACBCBMWA EQU   ACBCOMN+68                                               02061000
ACBUAPTR EQU   ACBCOMN+64                                               02062000
ACBLRECL EQU   ACBCOMN+62                                               02063000
ACBMSGLN EQU   ACBBLKSZ                                                 02064000
ACBBUFSP EQU   ACBCOMN+56                                               02065000
@NM00032 EQU   ACBUJFCB+1                                               02066000
ACBOPTN  EQU   ACBUJFCB                                                 02067000
ACBVVIC  EQU   ACBINFLG                                                 02068000
ACBUCRA  EQU   ACBINFLG                                                 02069000
ACBSCRA  EQU   ACBINFLG                                                 02070000
ACBCAT   EQU   ACBINFLG                                                 02071000
ACBIJRQE EQU   ACBINFLG                                                 02072000
ACBJEPS  EQU   ACBINFLG                                                 02073000
@NM00031 EQU   ACBINFLG                                                 02074000
ACBERFLG EQU   ACBCOMN+49                                               02075000
ACBBUSY  EQU   ACBIOSFG                                                 02076000
ACBLOCK  EQU   ACBEXFG                                                  02077000
@NM00030 EQU   ACBOFLGS                                                 02078000
ACBDSERR EQU   ACBOFLGS                                                 02079000
ACBOPEN  EQU   ACBOFLGS                                                 02080000
ACBEOV   EQU   ACBOFLGS                                                 02081000
@NM00029 EQU   ACBOFLGS                                                 02082000
ACBDEB   EQU   ACBDDNM+5                                                02083000
ACBERFL  EQU   ACBDDNM+4                                                02084000
ACBAM    EQU   ACBAMETH                                                 02085000
ACBINFL  EQU   ACBDDNM+2                                                02086000
ACBTIOT  EQU   ACBDDNM                                                  02087000
ACBUEL   EQU   ACBEXLST                                                 02088000
ACBPASSW EQU   ACBCOMN+32                                               02089000
ACBMSGAR EQU   ACBCOMN+28                                               02090000
@NM00028 EQU   ACBDSORG+1                                               02091000
ACBDORGA EQU   ACBDSORG+1                                               02092000
@NM00027 EQU   ACBDSORG                                                 02093000
ACBCRNRE EQU   ACBCROPS                                                 02094000
ACBCRNCK EQU   ACBCROPS                                                 02095000
ACBASA   EQU   ACBCCTYP                                                 02096000
@NM00026 EQU   ACBCCTYP                                                 02097000
ACBRECAF EQU   ACBRECFM                                                 02098000
ACBJBUF  EQU   ACBBUFPL+2                                               02099000
ACBMACR4 EQU   ACBBUFPL+1                                               02100000
@NM00025 EQU   ACBMACR3                                                 02101000
ACBNCFX  EQU   ACBMACR3                                                 02102000
ACBSIS   EQU   ACBMACR3                                                 02103000
ACBDFR   EQU   ACBMACR3                                                 02104000
ACBICI   EQU   ACBMACR3                                                 02105000
ACBGSR   EQU   ACBMACR3                                                 02106000
ACBLSR   EQU   ACBMACR3                                                 02107000
@NM00024 EQU   ACBMACR3                                                 02108000
ACBBUFNI EQU   ACBCOMN+18                                               02109000
ACBBUFND EQU   ACBCOMN+16                                               02110000
ACBSTRNO EQU   ACBCOMN+15                                               02111000
ACBBSTNO EQU   ACBCOMN+14                                               02112000
ACBAIX   EQU   ACBMACR2                                                 02113000
ACBDSN   EQU   ACBMACR2                                                 02114000
ACBRST   EQU   ACBMACR2                                                 02115000
ACBLOGON EQU   ACBMACR2                                                 02116000
ACBSKP   EQU   ACBMACR2                                                 02117000
@NM00023 EQU   ACBMACR2                                                 02118000
ACBUBF   EQU   ACBMACR1                                                 02119000
ACBOUT   EQU   ACBMACR1                                                 02120000
ACBIN    EQU   ACBMACR1                                                 02121000
ACBDIR   EQU   ACBMACR1                                                 02122000
ACBSEQ   EQU   ACBMACR1                                                 02123000
ACBBLK   EQU   ACBCNV                                                   02124000
ACBADD   EQU   ACBADR                                                   02125000
ACBKEY   EQU   ACBMACR1                                                 02126000
ACBINRTN EQU   ACBCOMN+8                                                02127000
ACBIBCT  EQU   ACBJWA                                                   02128000
ACBLEN2  EQU   ACBLENG2                                                 02129000
ACBSTYP  EQU   ACBCOMN+1                                                02130000
ACBID    EQU   ACBCOMN                                                  02131000
IXKEY    EQU   IDAIXK                                                   02132000
IXSELL   EQU   IDASELL                                                  02133000
IBFLP1   EQU   IBFLP2                                                   02134000
IBFLPL   EQU   IDAIBFLP+1                                               02135000
IBFLPF   EQU   IDAIBFLP                                                 02136000
IXHSEO   EQU   IDAIXH+22                                                02137000
IXHLEO   EQU   IDAIXH+20                                                02138000
IXHFSO   EQU   IDAIXH+18                                                02139000
IXHFLGS  EQU   IDAIXH+17                                                02140000
IXHLV    EQU   IDAIXH+16                                                02141000
IXHXX    EQU   IDAIXH+12                                                02142000
IXHHP    EQU   IDAIXH+8                                                 02143000
IXHBRBA  EQU   IDAIXH+4                                                 02144000
IXHPTLS  EQU   IDAIXH+3                                                 02145000
IXHFLPLN EQU   IDAIXH+2                                                 02146000
IXHLL    EQU   IDAIXH                                                   02147000
RPLERMSA EQU   RPLCOMN+72                                               02148000
RPLEMLEN EQU   RPLCOMN+70                                               02149000
RPLACTIV EQU   RPLCOMN+69                                               02150000
RPLBRANC EQU   RPLEXTD1                                                 02151000
RPLNIB   EQU   RPLEXTD1                                                 02152000
@NM00022 EQU   RPLEXTD1                                                 02153000
RPLEXIT  EQU   RPLEXTD1                                                 02154000
RPLNEXIT EQU   RPLEXTD1                                                 02155000
RPLEXSCH EQU   RPLEXTD1                                                 02156000
@NM00021 EQU   RPLRBAR+3                                                02157000
@NM00020 EQU   RPLAIXID                                                 02158000
RPLAXPKP EQU   RPLAIXID                                                 02159000
RPLAIXPC EQU   RPLRBAR                                                  02160000
RPLRSV88 EQU   RPLOPT8                                                  02161000
RPLUNCON EQU   RPLOPT8                                                  02162000
RPLACTV  EQU   RPLOPT8                                                  02163000
RPLSESS  EQU   RPLOPT8                                                  02164000
RPLPEND  EQU   RPLOPT8                                                  02165000
RPLODPRM EQU   RPLOPT8                                                  02166000
RPLODACP EQU   RPLOPT8                                                  02167000
RPLODACQ EQU   RPLOPT8                                                  02168000
RPLRSV78 EQU   RPLOPT7                                                  02169000
RPLRSV77 EQU   RPLOPT7                                                  02170000
RPLRLSOP EQU   RPLOPT7                                                  02171000
RPLTPOST EQU   RPLOPT7                                                  02172000
RPLQOPT  EQU   RPLOPT7                                                  02173000
RPLCNIMM EQU   RPLCNOPT                                                 02174000
RPLCNANY EQU   RPLCNOPT                                                 02175000
RPLCNALL EQU   RPLCNOPT                                                 02176000
RPLRSV68 EQU   RPLOPT6                                                  02177000
RPLRSV67 EQU   RPLOPT6                                                  02178000
RPLLOCK  EQU   RPLOPT6                                                  02179000
RPLNCOND EQU   RPLOPT6                                                  02180000
RPLCOND  EQU   RPLOPT6                                                  02181000
RPLEOT   EQU   RPLUNTYP                                                 02182000
RPLEOM   EQU   RPLUNTYP                                                 02183000
RPLEOB   EQU   RPLUNTYP                                                 02184000
RPLWROPT EQU   RPLOPT5                                                  02185000
RPLNODE  EQU   RPLOPT5                                                  02186000
RPLERACE EQU   RPLWRTYP                                                 02187000
RPLEAU   EQU   RPLWRTYP                                                 02188000
RPLNERAS EQU   RPLWRTYP                                                 02189000
RPLPSOPT EQU   RPLOPT5                                                  02190000
RPLSSNIN EQU   RPLOPT5                                                  02191000
RPLDLGIN EQU   RPLOPT5                                                  02192000
RPLBUFL  EQU   RPLCOMN+52                                               02193000
RPLRLEN  EQU   RPLCOMN+48                                               02194000
RPLCHAIN EQU   RPLNXTRP                                                 02195000
RPLOPT4  EQU   RPLOPTCD+3                                               02196000
RPLALIGN EQU   RPLOPT3                                                  02197000
RPLFMT   EQU   RPLOPT3                                                  02198000
RPLFLD   EQU   RPLOPT3                                                  02199000
RPLVFY   EQU   RPLOPT3                                                  02200000
RPLBLK   EQU   RPLOPT3                                                  02201000
RPLSFORM EQU   RPLOPT3                                                  02202000
RPLEODS  EQU   RPLOPT3                                                  02203000
RPLNSP   EQU   RPLOPT2                                                  02204000
RPLUPD   EQU   RPLOPT2                                                  02205000
RPLWAITX EQU   RPLOPT2                                                  02206000
RPLLRD   EQU   RPLOPT2                                                  02207000
RPLBWD   EQU   RPLOPT2                                                  02208000
RPLCNV   EQU   RPLOPT2                                                  02209000
RPLADD   EQU   RPLADR                                                   02210000
RPLKEY   EQU   RPLOPT2                                                  02211000
RPLECBIN EQU   RPLECBSW                                                 02212000
RPLGEN   EQU   RPLOPT1                                                  02213000
RPLKGE   EQU   RPLOPT1                                                  02214000
RPLASY   EQU   RPLOPT1                                                  02215000
RPLSKP   EQU   RPLOPT1                                                  02216000
RPLSEQ   EQU   RPLOPT1                                                  02217000
RPLDIR   EQU   RPLOPT1                                                  02218000
RPLLOC   EQU   RPLOPT1                                                  02219000
RPLDAF   EQU   RPLARG+2                                                 02220000
RPLSAF   EQU   RPLARG                                                   02221000
RPLAREA  EQU   RPLCOMN+32                                               02222000
RPLTCBPT EQU   RPLCOMN+28                                               02223000
RPLCCHAR EQU   RPLCOMN+20                                               02224000
RPLSTRID EQU   RPLCOMN+18                                               02225000
RPLKEYL  EQU   RPLKEYLE                                                 02226000
RPLRDSOH EQU   RPLFDB3                                                  02227000
RPLRLG   EQU   RPLFDB3                                                  02228000
RPLLGFRC EQU   RPLFDB3                                                  02229000
RPLREOT  EQU   RPLFDB3                                                  02230000
RPLREOM  EQU   RPLFDB3                                                  02231000
RPLREOB  EQU   RPLFDB3                                                  02232000
RPLSV32  EQU   RPLFDB3                                                  02233000
RPLUINPT EQU   RPLFDB3                                                  02234000
RPLSTSAV EQU   RPLFDB2                                                  02235000
RPLCUERR EQU   RPLFDB2                                                  02236000
RPLDLGFL EQU   RPLFDB2                                                  02237000
RPLIOERR EQU   RPLFDB2                                                  02238000
RPLDVUNS EQU   RPLFDB2                                                  02239000
RPLATND  EQU   RPLFDB2                                                  02240000
RPLRVID  EQU   RPLFDB2                                                  02241000
RPLERLK  EQU   RPLFDB2                                                  02242000
RPLSTAT  EQU   RPLFDBWD                                                 02243000
RPLPOST  EQU   RPLECB                                                   02244000
RPLWAIT  EQU   RPLECB                                                   02245000
RPLPLHPT EQU   RPLCOMN+4                                                02246000
RPLLEN2  EQU   RPLLEN                                                   02247000
RPLREQ   EQU   RPLIDWD+2                                                02248000
RPLSTYP  EQU   RPLIDWD+1                                                02249000
RPLID    EQU   RPLIDWD                                                  02250000
AMBLCMB  EQU   IDAAMBL+64                                               02251000
AMBLBIB  EQU   IDAAMBL+60                                               02252000
AMBLIX   EQU   IDAAMBL+56                                               02253000
AMBLDTA  EQU   IDAAMBL+52                                               02254000
AMBLMIDS EQU   IDAAMBL+42                                               02255000
AMBLNIDS EQU   IDAAMBL+41                                               02256000
@NM00019 EQU   IDAAMBL+40                                               02257000
AMBLNUM  EQU   IDAAMBL+38                                               02258000
AMBLNST  EQU   IDAAMBL+37                                               02259000
@NM00018 EQU   AMBLFLG2                                                 02260000
AMBLSTAG EQU   AMBLFLG2                                                 02261000
@NM00017 EQU   AMBLFLG2                                                 02262000
AMBLDUMY EQU   AMBLFLG1                                                 02263000
AMBLCAT  EQU   AMBLFLG1                                                 02264000
AMBLUCRA EQU   AMBLFLG1                                                 02265000
AMBLSCRA EQU   AMBLFLG1                                                 02266000
AMBLVVIC EQU   AMBLFLG1                                                 02267000
AMBLUPD  EQU   AMBLFLG1                                                 02268000
AMBLCINV EQU   AMBLFLG1                                                 02269000
AMBLFULL EQU   AMBLFLG1                                                 02270000
AMBLLEN  EQU   IDAAMBL+34                                               02271000
@NM00016 EQU   AMBLSHAR                                                 02272000
AMBLWRIT EQU   AMBLSHAR                                                 02273000
AMBLCATO EQU   AMBLSHAR                                                 02274000
AMBLPRIM EQU   AMBLSHAR                                                 02275000
AMBLID   EQU   IDAAMBL+32                                               02276000
@NM00015 EQU   IDAAMBL+31                                               02277000
@NM00014 EQU   AMBLTYPE                                                 02278000
AMBLFIX  EQU   AMBLTYPE                                                 02279000
AMBLBASE EQU   AMBLTYPE                                                 02280000
AMBLAIX  EQU   AMBLTYPE                                                 02281000
AMBLUPGR EQU   AMBLTYPE                                                 02282000
AMBLPATH EQU   AMBLTYPE                                                 02283000
AMBLENO  EQU   AMBLVC+1                                                 02284000
AMBLVRT  EQU   AMBLVC                                                   02285000
AMBLXPT  EQU   IDAAMBL+24                                               02286000
AMBLDFR  EQU   AMBLQ                                                    02287000
AMBLESDS EQU   AMBLQ                                                    02288000
AMBLKSDS EQU   AMBLQ                                                    02289000
AMBLUBF  EQU   AMBLQ                                                    02290000
AMBLFSTP EQU   AMBLQ                                                    02291000
AMBLLSR  EQU   AMBLQ                                                    02292000
AMBLGSR  EQU   AMBLQ                                                    02293000
AMBLDDC  EQU   AMBLQ                                                    02294000
AMBLDCI  EQU   AMBLIDF+4                                                02295000
AMBLCACB EQU   AMBLIDF                                                  02296000
@NM00013 EQU   AMBLEOV+2                                                02297000
AMBLCOMP EQU   AMBLEOV+1                                                02298000
AMBLESET EQU   AMBLEFLG                                                 02299000
AMBLWAIT EQU   AMBLEFLG                                                 02300000
AMBLACB  EQU   IDAAMBL+8                                                02301000
AMBLSCHN EQU   IDAAMBL+4                                                02302000
AMBLPCHN EQU   IDAAMBL                                                  02303000
AMBTRACE EQU   IDAAMB+120                                               02304000
AMBVIOT  EQU   IDAAMB+116                                               02305000
AMBSZCP  EQU   IDAAMB+114                                               02306000
AMBSZFW  EQU   IDAAMB+112                                               02307000
AMBSZWR  EQU   IDAAMB+110                                               02308000
AMBSZRD  EQU   IDAAMB+108                                               02309000
AMBEXEX  EQU   IDAAMB+100                                               02310000
AMBWSHD  EQU   IDAAMB+96                                                02311000
AMBCPA   EQU   IDAAMB+92                                                02312000
AMBBM2SH EQU   IDAAMB+88                                                02313000
AMBRDCNT EQU   AMBCSWD1+2                                               02314000
@NM00012 EQU   AMBCSWD1+1                                               02315000
@NM00011 EQU   AMBAFLG                                                  02316000
AMBCFX   EQU   AMBAFLG                                                  02317000
AMBSIS   EQU   AMBAFLG                                                  02318000
AMBDFR   EQU   AMBAFLG                                                  02319000
AMBICI   EQU   AMBAFLG                                                  02320000
AMBGSR   EQU   AMBAFLG                                                  02321000
AMBLSR   EQU   AMBAFLG                                                  02322000
@NM00010 EQU   AMBAFLG                                                  02323000
AMBUPLH  EQU   IDAAMB+80                                                02324000
AMBPAMBL EQU   IDAAMB+76                                                02325000
AMBPIXP  EQU   IDAAMB+72                                                02326000
@NM00009 EQU   IDAAMB+68                                                02327000
AMBWKA   EQU   IDAAMB+60                                                02328000
AMBAMBXN EQU   AMBEOVPT                                                 02329000
AMBEDB   EQU   IDAAMB+52                                                02330000
AMBRPT   EQU   IDAAMB+50                                                02331000
AMBPUG   EQU   AMBFLG2                                                  02332000
AMBBUSY  EQU   AMBOFLGS                                                 02333000
AMBEXFG  EQU   AMBOFLGS                                                 02334000
@NM00008 EQU   AMBOFLGS                                                 02335000
AMBOPEN  EQU   AMBOFLGS                                                 02336000
@NM00007 EQU   AMBOFLGS                                                 02337000
AMBDEBAD EQU   AMBDEBPT+1                                               02338000
AMBIFLGS EQU   AMBDEBPT                                                 02339000
AMBAMETH EQU   IDAAMB+43                                                02340000
AMBUCRA  EQU   AMBINFL                                                  02341000
AMBSCRA  EQU   AMBINFL                                                  02342000
AMBCAT   EQU   AMBINFL                                                  02343000
@NM00006 EQU   AMBINFL                                                  02344000
@NM00005 EQU   AMBINFL                                                  02345000
AMBTIOT  EQU   IDAAMB+40                                                02346000
@NM00004 EQU   IDAAMB+38                                                02347000
AMBDDSN  EQU   IDAAMB+35                                                02348000
AMBCDSN  EQU   IDAAMB+32                                                02349000
AMBIOMB  EQU   AMBIOBAD                                                 02350000
@NM00003 EQU   AMBDSORG+1                                               02351000
AMBDORGA EQU   AMBDSORG+1                                               02352000
@NM00002 EQU   AMBDSORG                                                 02353000
AMBINBUF EQU   AMBFLG1                                                  02354000
AMBUBF   EQU   AMBFLG1                                                  02355000
AMBPCAT  EQU   AMBFLG1                                                  02356000
AMBMCAT  EQU   AMBFLG1                                                  02357000
AMBTYPE  EQU   AMBFLG1                                                  02358000
AMBCREAT EQU   AMBFLG1                                                  02359000
@NM00001 EQU   AMBFLG0                                                  02360000
AMBPSDS  EQU   AMBFLG0                                                  02361000
AMBCACB  EQU   IDAAMB+16                                                02362000
AMBPH    EQU   IDAAMB+12                                                02363000
AMBBUFC  EQU   IDAAMB+8                                                 02364000
AMBLINK  EQU   IDAAMB+4                                                 02365000
AMBLEN   EQU   IDAAMB+2                                                 02366000
AMBRSC   EQU   IDAAMB+1                                                 02367000
AMBID    EQU   IDAAMB                                                   02368000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02369000
@RF00129 EQU   @RC00121                                                 02370000
@RT00174 EQU   EOCAX                                                    02371000
@RT00189 EQU   EOCAX                                                    02372000
@RT00233 EQU   EOCAX                                                    02373000
@RF00244 EQU   @EL00003                                                 02374000
@RF00266 EQU   @EL00003                                                 02375000
@RT00326 EQU   UPDARDB                                                  02376000
@RT00410 EQU   CISPLITX                                                 02377000
@RT00450 EQU   CISPLITX                                                 02378000
@RT00477 EQU   CISPLITX                                                 02379000
@RT00501 EQU   CISPLITX                                                 02380000
@ENDDATA EQU   *                                                        02381000
         END   IDA019SA,(C'PLS2214',0701,78172)                         02382000
