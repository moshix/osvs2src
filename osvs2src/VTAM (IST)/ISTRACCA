         TITLE 'ISTRACCA - RAS ADD PROCEDURE                           *00001000
                        '                                               00002000
ISTRACCA CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ISTRACCA  75.130'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
*   ISTQAPTR=CCAVPQAB;              /* OBTAIN QAB PTR FROM PLIST     */ 00014000
         L     ISTQAPTR,CCAVPQAB(,CCARPLST)                        0022 00015000
*   PFXPTR=CCAVCBAD;                /* OBTAIN CB PTR FROM PLIST      */ 00016000
         L     PFXPTR,CCAVCBAD(,CCARPLST)                          0023 00017000
*   RFY                                                            0024 00018000
*     CCARPLST UNRSTD;                                             0024 00019000
*   IF QABCT=0                      /* IF Q IS EMPTY                 */ 00020000
*/* QUEUE EMPTY CASE                                                 */ 00021000
*                                                                  0025 00022000
*     THEN                                                         0025 00023000
         LH    @07,QABCT(,ISTQAPTR)                                0025 00024000
         LTR   @07,@07                                             0025 00025000
         BNZ   @RF00025                                            0025 00026000
*     DO;                           /* ADD CB AS ONLY CB OF Q        */ 00027000
*       QABFIRST=PFXPTR;            /* QABFIRST PTRS TO INPUT CB     */ 00028000
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0027 00029000
*       QABLAST=PFXPTR;             /* QABLAST PTRS TO INPUT CB      */ 00030000
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0028 00031000
*       CCARBKAD=PFXPTR+QABBCKDS;   /* GET CB BCKPTR LOC             */ 00032000
         LR    CCARBKAD,PFXPTR                                     0029 00033000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0029 00034000
*       CCAVBCKP=ISTQAPTR;          /* CB BCKPTR PTS TO QAB          */ 00035000
         STCM  ISTQAPTR,15,CCAVBCKP(CCARBKAD)                      0030 00036000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET CB FWDPTR LOC             */ 00037000
         LR    CCARFWAD,PFXPTR                                     0031 00038000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0031 00039000
*       CCAVFWDP=ISTQAPTR;          /* CB FWDPTR PTS TO QAB          */ 00040000
         STCM  ISTQAPTR,15,CCAVFWDP(CCARFWAD)                      0032 00041000
*     END;                                                         0033 00042000
*   ELSE                                                           0034 00043000
*CCALQNEM:                                                         0034 00044000
*     DO;                                                          0034 00045000
         B     @RC00025                                            0034 00046000
@RF00025 DS    0H                                                  0034 00047000
CCALQNEM DS    0H                                                  0035 00048000
*       IF QABFIFO='1'B             /* Q ATTRIBUTE =FIFO ?           */ 00049000
*/* FIFO QUEUE CASE                                                  */ 00050000
*                                                                  0035 00051000
*         THEN                                                     0035 00052000
         TM    QABFIFO(ISTQAPTR),B'00010000'                       0035 00053000
         BNO   @RF00035                                            0035 00054000
*         CCARPVCB=QABLAST;         /* SET PREVIOUS CB=LAST Q ELM    */ 00055000
         L     CCARPVCB,QABLAST(,ISTQAPTR)                         0036 00056000
*       ELSE                                                       0037 00057000
*         IF QABLIFO='1'B           /* Q ATTRIBUTE =LIFO ?           */ 00058000
*/* LIFO QUEUE CASE                                                  */ 00059000
*                                                                  0037 00060000
*           THEN                                                   0037 00061000
         B     @RC00035                                            0037 00062000
@RF00035 TM    QABLIFO(ISTQAPTR),B'00100000'                       0037 00063000
         BNO   @RF00037                                            0037 00064000
*           CCARPVCB=ISTQAPTR;      /* SET PREVIOUS CB=QAB           */ 00065000
         LR    CCARPVCB,ISTQAPTR                                   0038 00066000
*/* PRIORITY QUEUE CASE                                              */ 00067000
*                                                                  0039 00068000
*         ELSE                                                     0039 00069000
*CCALPRTQ:                                                         0039 00070000
*           DO;                                                    0039 00071000
         B     @RC00037                                            0039 00072000
@RF00037 DS    0H                                                  0039 00073000
CCALPRTQ DS    0H                                                  0040 00074000
*             CCARQELM=QABFIRST;    /* GET FIRST CB                  */ 00075000
*                                                                  0040 00076000
         L     CCARQELM,QABFIRST(,ISTQAPTR)                        0040 00077000
*             /*******************************************************/ 00078000
*             /*                                                     */ 00079000
*             /* IS INPUT CB PRIORITY GTER EXISTING PRIORITY         */ 00080000
*             /*                                                     */ 00081000
*             /*******************************************************/ 00082000
*                                                                  0041 00083000
*             RFY                                                  0041 00084000
*               PTYDSREG RSTD;                                     0041 00085000
*CCALLOOP:                                                         0042 00086000
*             PTYDSREG=QABPTYDS+1;                                 0042 00087000
CCALLOOP LA    PTYDSREG,1                                          0042 00088000
         AH    PTYDSREG,QABPTYDS(,ISTQAPTR)                        0042 00089000
*             IF CCAVCBPA(PTYDSREG)>CCAVCBPB(PTYDSREG) THEN        0043 00090000
         LR    @09,PFXPTR                                          0043 00091000
         ALR   @09,PTYDSREG                                        0043 00092000
         AL    @09,@CF00098                                        0043 00093000
         LR    @07,CCARQELM                                        0043 00094000
         ALR   @07,PTYDSREG                                        0043 00095000
         AL    @07,@CF00098                                        0043 00096000
         CLC   CCAVCBPA(1,@09),CCAVCBPB(@07)                       0043 00097000
         BNH   @RF00043                                            0043 00098000
*               DO;                                                0044 00099000
*                 CCARBKAD=CCARQELM+QABBCKDS;/* GET BCKPTR LOC OF CB    00100000
*                                      COMPARED                      */ 00101000
         LR    CCARBKAD,CCARQELM                                   0045 00102000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0045 00103000
*                 CCARPVCB=CCAVBCKP;/* SET PREVIOUS CB=BACKPTR IN CB    00104000
*                                      COMPARED                      */ 00105000
         ICM   CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0046 00106000
*               END;                                               0047 00107000
*             ELSE                                                 0048 00108000
*               DO;                                                0048 00109000
         B     @RC00043                                            0048 00110000
@RF00043 DS    0H                                                  0049 00111000
*                 CCARFWAD=CCARQELM+QABFWDDS;/* GET FWD PTR LOC OF Q    00112000
*                                      ELEMENT                       */ 00113000
*                                                                  0049 00114000
         LR    CCARFWAD,CCARQELM                                   0049 00115000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0049 00116000
*                 /***************************************************/ 00117000
*                 /*                                                 */ 00118000
*                 /* END OF Q IF FWDPTR OF Q ELM=QAB ADDR            */ 00119000
*                 /*                                                 */ 00120000
*                 /***************************************************/ 00121000
*                                                                  0050 00122000
*                 IF CCAVFWDP=ISTQAPTR/* END OF Q?                   */ 00123000
*                   THEN                                           0050 00124000
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0050 00125000
         CR    ISTQAPTR,@09                                        0050 00126000
         BNE   @RF00050                                            0050 00127000
*                   CCARPVCB=CCARQELM;/* YES,PVCB=Q ELM              */ 00128000
*                 ELSE                                             0052 00129000
*                   DO;                                            0052 00130000
         B     @RC00050                                            0052 00131000
@RF00050 DS    0H                                                  0053 00132000
*                     CCARQELM=CCAVFWDP;/* GET NEXT CB               */ 00133000
         ICM   CCARQELM,15,CCAVFWDP(CCARFWAD)                      0053 00134000
*                     GOTO CCALLOOP;/* LOOP TO SEARCH Q              */ 00135000
         B     CCALLOOP                                            0054 00136000
*                   END;                                           0055 00137000
*               END;                                               0056 00138000
@RC00050 DS    0H                                                  0057 00139000
*           END CCALPRTQ;           /* END OF PRTY CASE              */ 00140000
@RC00043 DS    0H                                                  0058 00141000
*       CALL CCAPADCB;              /* CALL CHAIN CB ROUTINE         */ 00142000
@RC00037 DS    0H                                                  0058 00143000
@RC00035 BAL   @14,CCAPADCB                                        0058 00144000
*     END CCALQNEM;                                                0059 00145000
*   QABCT=QABCT+1;                  /* INCREMENT COUNT IN QAB        */ 00146000
@RC00025 LA    @09,1                                               0060 00147000
         AH    @09,QABCT(,ISTQAPTR)                                0060 00148000
         STH   @09,QABCT(,ISTQAPTR)                                0060 00149000
*   RETURN CODE(0);                 /* SET RC FOR SUCCESSFUL ADD     */ 00150000
         SLR   @15,@15                                             0061 00151000
         L     @14,12(,@13)                                        0061 00152000
         LM    @00,@12,20(@13)                                     0061 00153000
         BR    @14                                                 0061 00154000
*CCAPADCB:                                                         0062 00155000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0062 00156000
*                                                                  0062 00157000
CCAPADCB DS    0H                                                  0063 00158000
*/*                                                                  */ 00159000
*/*  FUNCTION : THIS SUBROUTINE CHAINS A CONTROL BLOCK TO THE QUEUE  */ 00160000
*/*                                                                  */ 00161000
*/*  INPUT : R2 - POINTER TO QAB                                     */ 00162000
*/*          R3 - POINTER TO CONTROL BLOCK TO BE ADDED(INPUT CB)     */ 00163000
*/*          R4 - POINTER TO PREVIOUS CONTROL BLOCK                  */ 00164000
*/*                                                                  */ 00165000
*/*  OUTPUT : NONE                                                   */ 00166000
*/*                                                                  */ 00167000
*                                                                  0063 00168000
*   CCARBKAD=PFXPTR+QABBCKDS;       /* GET BCKPTR LOC OF INPUT CB    */ 00169000
         LR    CCARBKAD,PFXPTR                                     0063 00170000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0063 00171000
*   CCAVBCKP=CCARPVCB;              /* SET INPUT CB BCKPTR=PREVCB    */ 00172000
         STCM  CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0064 00173000
*/* IF FORWARD PTR OF PREVIOUS CB=QAB PTR,THEN PREVIOUS CB IS LAST   */ 00174000
*/* CONTROL BLOCK OF QUEUE. INPUT CB IS TO BE ADDED AT BOTTOM OF Q   */ 00175000
*                                                                  0065 00176000
*   CCARFWAD=CCARPVCB+QABFWDDS;     /* GET FWDPTR IN PREVIOUS CB     */ 00177000
         LR    CCARFWAD,CCARPVCB                                   0065 00178000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0065 00179000
*   IF CCAVFWDP=ISTQAPTR            /* PREVCB FWDPTR=QAB ADDR?       */ 00180000
*     THEN                                                         0066 00181000
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0066 00182000
         CR    ISTQAPTR,@09                                        0066 00183000
         BNE   @RF00066                                            0066 00184000
*     QABLAST=PFXPTR;               /* YES,ADD CB AS LAST ELM        */ 00185000
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0067 00186000
*   ELSE                            /* NO,IT IS NOT FIFO             */ 00187000
*     DO;                                                          0068 00188000
         B     @RC00066                                            0068 00189000
@RF00066 DS    0H                                                  0069 00190000
*       CCARNXCB=CCAVFWDP;          /* NEXTCB PTR=PREVCB FWDPTR      */ 00191000
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0069 00192000
*       CCARBKAD=CCARNXCB+QABBCKDS; /* GET NEXT CB BCKPTR LOC        */ 00193000
         LR    CCARBKAD,CCARNXCB                                   0070 00194000
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0070 00195000
*       CCAVBCKP=PFXPTR;            /* NEXTCB BCKPTR=INPUT CBAD      */ 00196000
         STCM  PFXPTR,15,CCAVBCKP(CCARBKAD)                        0071 00197000
*     END;                                                         0072 00198000
*                                                                  0072 00199000
*/* IF PREVCB IS QAB,THEN INPUT CB IS TO BE ADDED ON TOP OF THE Q    */ 00200000
*                                                                  0073 00201000
*   IF CCARPVCB=ISTQAPTR            /* PREVIOUS CB=QAB ?             */ 00202000
*     THEN                          /* YES,ADD CB AS 1ST BK OF Q     */ 00203000
@RC00066 CR    CCARPVCB,ISTQAPTR                                   0073 00204000
         BNE   @RF00073                                            0073 00205000
*     DO;                                                          0074 00206000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */ 00207000
         LR    CCARFWAD,PFXPTR                                     0075 00208000
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0075 00209000
*       CCAVFWDP=QABFIRST;          /* SET FWD PTR OF INPUT CB       */ 00210000
         MVC   CCAVFWDP(4,CCARFWAD),QABFIRST(ISTQAPTR)             0076 00211000
*       QABFIRST=PFXPTR;            /* QABFIRST PTS TO INPUT CB      */ 00212000
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0077 00213000
*     END;                                                         0078 00214000
*   ELSE                            /* CB IS NOT ADDED ON TOP OF Q   */ 00215000
*     DO;                                                          0079 00216000
         B     @RC00073                                            0079 00217000
@RF00073 DS    0H                                                  0080 00218000
*       CCARFWAD=CCARPVCB+QABFWDDS; /* GET PREVCB FWDPTR LOC         */ 00219000
         LH    @09,QABFWDDS(,ISTQAPTR)                             0080 00220000
         LR    CCARFWAD,CCARPVCB                                   0080 00221000
         ALR   CCARFWAD,@09                                        0080 00222000
*       CCARNXCB=CCAVFWDP;          /* NEXT CB=PREVCB FWDPTR         */ 00223000
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0081 00224000
*       CCAVFWDP=PFXPTR;            /* PREVCB FWD PTR=INPUT CB       */ 00225000
         STCM  PFXPTR,15,CCAVFWDP(CCARFWAD)                        0082 00226000
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */ 00227000
         ALR   @09,PFXPTR                                          0083 00228000
         LR    CCARFWAD,@09                                        0083 00229000
*       CCAVFWDP=CCARNXCB;          /* NEW CB FWDPTR PTRS TO NEXT    */ 00230000
         STCM  CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0084 00231000
*     END;                          /* CB                            */ 00232000
*   END CCAPADCB;                   /* END OF SUBROUTINE ADDCB       */ 00233000
@EL00002 DS    0H                                                  0086 00234000
@EF00002 DS    0H                                                  0086 00235000
@ER00002 BR    @14                                                 0086 00236000
*/* TPEPILOG                                                         */ 00237000
*                                                                  0087 00238000
*   GEN(PRINT OFF);                                                0087 00239000
         PRINT OFF                                                      00240000
*   GEN(PRINT ON);                                                 0088 00241000
*                                                                  0088 00242000
         PRINT ON                                                       00243000
*/* END OF TPEPILOG                                                  */ 00244000
*                                                                  0089 00245000
*   END ISTRACCA;                   /* END OF ADD PROCEDURE          */ 00246000
@EL00001 DS    0H                                                  0089 00247000
@EF00001 DS    0H                                                  0089 00248000
@ER00001 LM    @14,@12,12(@13)                                     0089 00249000
         BR    @14                                                 0089 00250000
@DATA    DS    0H                                                       00251000
@DATD    DSECT                                                          00252000
         DS    0F                                                       00253000
ISTRACCA CSECT                                                          00254000
         DS    0F                                                       00255000
@CF00098 DC    F'-1'                                                    00256000
@DATD    DSECT                                                          00257000
         DS    0D                                                       00258000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00259000
@ENDDATD EQU   *                                                        00260000
ISTRACCA CSECT                                                          00261000
         DS    0F                                                       00262000
@SIZDATD DC    AL1(0)                                                   00263000
         DC    AL3(@ENDDATD-@DATD)                                      00264000
         DS    0D                                                       00265000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00266000
@01      EQU   01                                                       00267000
@02      EQU   02                                                       00268000
@03      EQU   03                                                       00269000
@04      EQU   04                                                       00270000
@05      EQU   05                                                       00271000
@06      EQU   06                                                       00272000
@07      EQU   07                                                       00273000
@08      EQU   08                                                       00274000
@09      EQU   09                                                       00275000
@10      EQU   10                                                       00276000
@11      EQU   11                                                       00277000
@12      EQU   12                                                       00278000
@13      EQU   13                                                       00279000
@14      EQU   14                                                       00280000
@15      EQU   15                                                       00281000
CCARPLST EQU   @01                                                      00282000
ISTQAPTR EQU   @02                                                      00283000
PFXPTR   EQU   @03                                                      00284000
CCARPVCB EQU   @04                                                      00285000
CCARQELM EQU   @04                                                      00286000
PTYDSREG EQU   @08                                                      00287000
CCARBKAD EQU   @06                                                      00288000
CCARFWAD EQU   @06                                                      00289000
CCARNXCB EQU   @05                                                      00290000
ISTPFX   EQU   0                                                        00291000
PFXID    EQU   ISTPFX                                                   00292000
ISTQAB   EQU   0                                                        00293000
QABCT    EQU   ISTQAB+4                                                 00294000
QABFIRST EQU   ISTQAB+8                                                 00295000
QABLAST  EQU   ISTQAB+12                                                00296000
QABATTR  EQU   ISTQAB+16                                                00297000
QABATTR2 EQU   QABATTR+1                                                00298000
QABLIFO  EQU   QABATTR2                                                 00299000
QABFIFO  EQU   QABATTR2                                                 00300000
QABPTYDS EQU   ISTQAB+18                                                00301000
QABFWDDS EQU   ISTQAB+20                                                00302000
QABBCKDS EQU   ISTQAB+22                                                00303000
CCAVPLST EQU   0                                                        00304000
CCAVPQAB EQU   CCAVPLST                                                 00305000
CCAVCBAD EQU   CCAVPLST+4                                               00306000
CCAVCBPA EQU   0                                                        00307000
CCAVCBPB EQU   0                                                        00308000
CCAVFWDP EQU   0                                                        00309000
CCAVBCKP EQU   0                                                        00310000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00311000
@NM00006 EQU   QABATTR2                                                 00312000
@NM00005 EQU   QABATTR2                                                 00313000
@NM00004 EQU   QABATTR2                                                 00314000
@NM00003 EQU   QABATTR2                                                 00315000
QABPRTY  EQU   QABATTR2                                                 00316000
@NM00002 EQU   QABATTR2                                                 00317000
QABATTR1 EQU   QABATTR                                                  00318000
@NM00001 EQU   ISTQAB+6                                                 00319000
QABID    EQU   ISTQAB                                                   00320000
PFXBCK   EQU   ISTPFX+12                                                00321000
PFXFWD   EQU   ISTPFX+8                                                 00322000
PFXLNG   EQU   ISTPFX+5                                                 00323000
PFXPRTY  EQU   ISTPFX+4                                                 00324000
PFXCBID  EQU   PFXID                                                    00325000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00326000
@RC00073 EQU   @EL00002                                                 00327000
@ENDDATA EQU   *                                                        00328000
         END   ISTRACCA,(C'PLS0945',0603,75130)                         00329000
