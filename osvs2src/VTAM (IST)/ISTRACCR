         TITLE 'ISTRACCR - CONTROL BLOCK QUEUE REMOVE PROCEDURE        *00001000
                        '                                               00002000
ISTRACCR CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ISTRACCR  75.130'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@00,12(@13)                                     0001 00010000
         STM   @02,@12,28(@13)                                     0001 00011000
         BALR  @12,0                                               0001 00012000
@PSTART  DS    0H                                                  0001 00013000
         USING @PSTART,@12                                         0001 00014000
*   ISTQAPTR=PLISTQAB;              /* SET UP QAB                    */ 00015000
         L     ISTQAPTR,PLISTQAB(,PLISTPTR)                        0014 00016000
*   IF QABCT=0 THEN                                                0015 00017000
         LH    @14,QABCT(,ISTQAPTR)                                0015 00018000
         LTR   @14,@14                                             0015 00019000
         BNZ   @RF00015                                            0015 00020000
*     RCREG=16;                     /* IF NO Q ELEMENTS BAD RETURN 0016 00021000
*                                      CODE                          */ 00022000
         LA    RCREG,16                                            0016 00023000
*   ELSE                                                           0017 00024000
*     DO;                                                          0017 00025000
         B     @RC00015                                            0017 00026000
@RF00015 DS    0H                                                  0018 00027000
*       IF PLISTCBA=0 THEN                                         0018 00028000
         L     @14,PLISTCBA(,PLISTPTR)                             0018 00029000
         LTR   @14,@14                                             0018 00030000
         BNZ   @RF00018                                            0018 00031000
*         PFXPTR=QABFIRST;          /* INIT C.B. ADDRESS             */ 00032000
         L     PFXPTR,QABFIRST(,ISTQAPTR)                          0019 00033000
*       ELSE                                                       0020 00034000
*         PFXPTR=PLISTCBA;          /* INIT C.B. ADDRESS             */ 00035000
         B     @RC00018                                            0020 00036000
@RF00018 L     PFXPTR,PLISTCBA(,PLISTPTR)                          0020 00037000
*       NWPFXREG=PFXPTR+QABFWDDS;   /* GET ADDRESS OF FORWARD PTR    */ 00038000
@RC00018 LR    NWPFXREG,PFXPTR                                     0021 00039000
         AH    NWPFXREG,QABFWDDS(,ISTQAPTR)                        0021 00040000
*       NWPFXREG=NWPFXREG->QABID;   /* GET ADDRESS OF NEXT C.B.      */ 00041000
         L     NWPFXREG,QABID(,NWPFXREG)                           0022 00042000
*       BKPFXREG=PFXPTR+QABBCKDS;   /* GET ADDRESS OF BACKWARD PTR   */ 00043000
         LR    BKPFXREG,PFXPTR                                     0023 00044000
         AH    BKPFXREG,QABBCKDS(,ISTQAPTR)                        0023 00045000
*       BKPFXREG=BKPFXREG->QABID;   /* GET ADDRESS OF PREVIOUS C.B.  */ 00046000
         L     BKPFXREG,QABID(,BKPFXREG)                           0024 00047000
*/* IF DEQUING 1ST C.B. POINT QAB FWDPTR TO NEXT.                    */ 00048000
*                                                                  0025 00049000
*       IF BKPFXREG=ISTQAPTR THEN                                  0025 00050000
         CR    BKPFXREG,ISTQAPTR                                   0025 00051000
         BNE   @RF00025                                            0025 00052000
*         QABFIRST=NWPFXREG;                                       0026 00053000
*                                                                  0026 00054000
         ST    NWPFXREG,QABFIRST(,ISTQAPTR)                        0026 00055000
*/* IF NOT, UPDATE FWD POINTER IN PREVIOUS C.B. ON Q.                */ 00056000
*                                                                  0027 00057000
*       ELSE                                                       0027 00058000
*         DO;                                                      0027 00059000
         B     @RC00025                                            0027 00060000
@RF00025 DS    0H                                                  0028 00061000
*           BKPFXREG=BKPFXREG+QABFWDDS;/* NEXT@                      */ 00062000
         LH    @14,QABFWDDS(,ISTQAPTR)                             0028 00063000
         ALR   BKPFXREG,@14                                        0028 00064000
*           BKPFXREG->QABID=NWPFXREG;/* UPDATE PTR                   */ 00065000
         ST    NWPFXREG,QABID(,BKPFXREG)                           0029 00066000
*           BKPFXREG=BKPFXREG-QABFWDDS;/* GET BACK BEGINNING OF CB   */ 00067000
         SLR   BKPFXREG,@14                                        0030 00068000
*         END;                                                     0031 00069000
*                                                                  0031 00070000
*/* IF DEQUEING LAST POINT QAB LAST TO PREVIOUS.                     */ 00071000
*                                                                  0032 00072000
*       IF NWPFXREG=ISTQAPTR THEN                                  0032 00073000
@RC00025 CR    NWPFXREG,ISTQAPTR                                   0032 00074000
         BNE   @RF00032                                            0032 00075000
*         QABLAST=BKPFXREG;                                        0033 00076000
*                                                                  0033 00077000
         ST    BKPFXREG,QABLAST(,ISTQAPTR)                         0033 00078000
*/* IF NOT UPDATE BACK POINTER OF NEXT C.B. ON Q.                    */ 00079000
*                                                                  0034 00080000
*       ELSE                                                       0034 00081000
*         DO;                                                      0034 00082000
         B     @RC00032                                            0034 00083000
@RF00032 DS    0H                                                  0035 00084000
*           NWPFXREG=NWPFXREG+QABBCKDS;/* GET POINTER TO PREVIOUS CB */ 00085000
         AH    NWPFXREG,QABBCKDS(,ISTQAPTR)                        0035 00086000
*           NWPFXREG->QABID=BKPFXREG;/* UPDATE PTR                   */ 00087000
         ST    BKPFXREG,QABID(,NWPFXREG)                           0036 00088000
*         END;                                                     0037 00089000
*                                                                  0037 00090000
*/* IF ONLY ONE ELEMENT ON Q ZERO OUT FIRST AND LAST PTRS.           */ 00091000
*                                                                  0038 00092000
*       IF QABFIRST=ADDR(ISTQAB) THEN                              0038 00093000
@RC00032 C     ISTQAPTR,QABFIRST(,ISTQAPTR)                        0038 00094000
         BNE   @RF00038                                            0038 00095000
*         DO;                                                      0039 00096000
*           QABFIRST=0;                                            0040 00097000
         SLR   @14,@14                                             0040 00098000
         ST    @14,QABFIRST(,ISTQAPTR)                             0040 00099000
*           QABLAST=0;                                             0041 00100000
         ST    @14,QABLAST(,ISTQAPTR)                              0041 00101000
*         END;                                                     0042 00102000
*       ELSE                                                       0043 00103000
*         ;                                                        0043 00104000
@RF00038 DS    0H                                                  0044 00105000
*       PLISTPTR=PFXPTR;            /* PUT C.B. POINTER IN REG1      */ 00106000
         LR    PLISTPTR,PFXPTR                                     0044 00107000
*       RCREG=0;                    /* SET UP SUCCESSFUL R.C.        */ 00108000
         SLR   RCREG,RCREG                                         0045 00109000
*       QABCT=QABCT-1;              /* DECREMENT QAB COUNT           */ 00110000
         LH    @14,QABCT(,ISTQAPTR)                                0046 00111000
         BCTR  @14,0                                               0046 00112000
         STH   @14,QABCT(,ISTQAPTR)                                0046 00113000
*     END;                                                         0047 00114000
*   RETURN CODE(RCREG);             /* RETURN TO CALLER              */ 00115000
@RC00015 L     @14,12(,@13)                                        0048 00116000
         L     @00,20(,@13)                                        0048 00117000
         LM    @02,@12,28(@13)                                     0048 00118000
         BR    @14                                                 0048 00119000
*   END ISTRACCR;                                                  0049 00120000
@DATA    DS    0H                                                       00121000
         DS    0F                                                       00122000
         DS    0F                                                       00123000
         DS    0D                                                       00124000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00125000
@01      EQU   01                                                       00126000
@02      EQU   02                                                       00127000
@03      EQU   03                                                       00128000
@04      EQU   04                                                       00129000
@05      EQU   05                                                       00130000
@06      EQU   06                                                       00131000
@07      EQU   07                                                       00132000
@08      EQU   08                                                       00133000
@09      EQU   09                                                       00134000
@10      EQU   10                                                       00135000
@11      EQU   11                                                       00136000
@12      EQU   12                                                       00137000
@13      EQU   13                                                       00138000
@14      EQU   14                                                       00139000
@15      EQU   15                                                       00140000
PLISTPTR EQU   @01                                                      00141000
ISTQAPTR EQU   @02                                                      00142000
PFXPTR   EQU   @03                                                      00143000
NWPFXREG EQU   @04                                                      00144000
BKPFXREG EQU   @05                                                      00145000
RCREG    EQU   @15                                                      00146000
PLIST    EQU   0                                                        00147000
PLISTQAB EQU   PLIST                                                    00148000
PLISTCBA EQU   PLIST+4                                                  00149000
ISTPFX   EQU   0                                                        00150000
PFXID    EQU   ISTPFX                                                   00151000
ISTQAB   EQU   0                                                        00152000
QABID    EQU   ISTQAB                                                   00153000
QABCT    EQU   ISTQAB+4                                                 00154000
QABFIRST EQU   ISTQAB+8                                                 00155000
QABLAST  EQU   ISTQAB+12                                                00156000
QABATTR  EQU   ISTQAB+16                                                00157000
QABATTR2 EQU   QABATTR+1                                                00158000
QABFWDDS EQU   ISTQAB+20                                                00159000
QABBCKDS EQU   ISTQAB+22                                                00160000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00161000
QABPTYDS EQU   ISTQAB+18                                                00162000
@NM00006 EQU   QABATTR2                                                 00163000
@NM00005 EQU   QABATTR2                                                 00164000
@NM00004 EQU   QABATTR2                                                 00165000
@NM00003 EQU   QABATTR2                                                 00166000
QABFIFO  EQU   QABATTR2                                                 00167000
QABLIFO  EQU   QABATTR2                                                 00168000
QABPRTY  EQU   QABATTR2                                                 00169000
@NM00002 EQU   QABATTR2                                                 00170000
QABATTR1 EQU   QABATTR                                                  00171000
@NM00001 EQU   ISTQAB+6                                                 00172000
PFXBCK   EQU   ISTPFX+12                                                00173000
PFXFWD   EQU   ISTPFX+8                                                 00174000
PFXLNG   EQU   ISTPFX+5                                                 00175000
PFXPRTY  EQU   ISTPFX+4                                                 00176000
PFXCBID  EQU   PFXID                                                    00177000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00178000
@ENDDATA EQU   *                                                        00179000
         END   ISTRACCR,(C'PLS0946',0603,75130)                         00180000
